import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest35 {

    public static boolean debug = false;

    @Test
    public void test17501() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17501");
        org.joda.time.Chronology chronology1 = null;
        org.joda.time.Period period2 = new org.joda.time.Period((-6059968L), chronology1);
    }

    @Test
    public void test17502() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17502");
        org.joda.time.Period period1 = org.joda.time.Period.seconds((int) '#');
        org.joda.time.Period period2 = period1.toPeriod();
        org.joda.time.Period period4 = period2.minusWeeks(10);
        org.joda.time.Period period6 = period2.multipliedBy((int) (short) 10);
        org.joda.time.Period period8 = period2.minusDays(3);
        org.joda.time.Period period10 = period2.withHours(9);
        org.joda.time.Seconds seconds11 = period10.toStandardSeconds();
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(period2);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertNotNull(seconds11);
    }

    @Test
    public void test17503() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17503");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((-1L));
        long long2 = duration1.getStandardMinutes();
        org.joda.time.PeriodType periodType3 = null;
        org.joda.time.Period period4 = duration1.toPeriod(periodType3);
        int int5 = period4.getDays();
        org.joda.time.format.PeriodFormatter periodFormatter6 = null;
        java.lang.String str7 = period4.toString(periodFormatter6);
        org.joda.time.Period period9 = period4.minusDays((int) (short) 1);
        int int10 = period9.getMillis();
        org.joda.time.Period period12 = period9.minusMonths(10);
        org.joda.time.ReadableInstant readableInstant13 = null;
        org.joda.time.ReadableInstant readableInstant14 = null;
        org.joda.time.PeriodType periodType15 = org.joda.time.PeriodType.yearWeekDay();
        org.joda.time.MutablePeriod mutablePeriod16 = new org.joda.time.MutablePeriod(readableInstant13, readableInstant14, periodType15);
        org.joda.time.Period period18 = org.joda.time.Period.hours((int) 'a');
        org.joda.time.DurationFieldType durationFieldType20 = period18.getFieldType((int) (short) 1);
        int int21 = periodType15.indexOf(durationFieldType20);
        int int22 = period9.indexOf(durationFieldType20);
        int int23 = period9.getHours();
        org.joda.time.PeriodType periodType32 = null;
        org.joda.time.MutablePeriod mutablePeriod33 = new org.joda.time.MutablePeriod((int) (short) 0, 10, 100, (int) (byte) -1, 10, (int) (short) 1, (int) (short) 10, 10, periodType32);
        org.joda.time.Duration duration36 = org.joda.time.Duration.standardMinutes((-1L));
        long long37 = duration36.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant38 = null;
        org.joda.time.Period period39 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration36, readableInstant38);
        org.joda.time.PeriodType periodType40 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology41 = null;
        org.joda.time.Period period42 = duration36.toPeriod(periodType40, chronology41);
        org.joda.time.Period period44 = period42.plusSeconds(0);
        int int45 = period44.getMillis();
        org.joda.time.PeriodType periodType46 = org.joda.time.PeriodType.standard();
        org.joda.time.PeriodType periodType47 = periodType46.withMinutesRemoved();
        org.joda.time.PeriodType periodType48 = periodType46.withWeeksRemoved();
        org.joda.time.PeriodType periodType50 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period51 = new org.joda.time.Period(10L, periodType50);
        org.joda.time.DurationFieldType durationFieldType52 = org.joda.time.DurationFieldType.weeks();
        boolean boolean53 = periodType50.isSupported(durationFieldType52);
        org.joda.time.DurationFieldType durationFieldType54 = org.joda.time.DurationFieldType.centuries();
        int int55 = periodType50.indexOf(durationFieldType54);
        org.joda.time.Chronology chronology56 = null;
        boolean boolean57 = durationFieldType54.isSupported(chronology56);
        int int58 = periodType48.indexOf(durationFieldType54);
        org.joda.time.Period period59 = period44.normalizedStandard(periodType48);
        org.joda.time.Period period60 = new org.joda.time.Period((long) (-17), periodType48);
        org.joda.time.Duration duration62 = org.joda.time.Duration.standardMinutes((-1L));
        long long63 = duration62.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant64 = null;
        org.joda.time.Period period65 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration62, readableInstant64);
        org.joda.time.PeriodType periodType66 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology67 = null;
        org.joda.time.Period period68 = duration62.toPeriod(periodType66, chronology67);
        org.joda.time.PeriodType periodType69 = org.joda.time.PeriodType.hours();
        org.joda.time.PeriodType periodType70 = periodType69.withMinutesRemoved();
        org.joda.time.Duration duration72 = org.joda.time.Duration.standardMinutes((-1L));
        long long73 = duration72.getStandardMinutes();
        org.joda.time.Period period74 = duration72.toPeriod();
        org.joda.time.Period period76 = period74.withMonths(0);
        int int77 = period74.size();
        org.joda.time.MutablePeriod mutablePeriod78 = period74.toMutablePeriod();
        org.joda.time.Chronology chronology80 = null;
        org.joda.time.MutablePeriod mutablePeriod81 = new org.joda.time.MutablePeriod(1L, chronology80);
        org.joda.time.Period period83 = org.joda.time.Period.seconds((int) '#');
        mutablePeriod81.setPeriod((org.joda.time.ReadablePeriod) period83);
        org.joda.time.DurationFieldType durationFieldType85 = org.joda.time.DurationFieldType.years();
        java.lang.String str86 = durationFieldType85.getName();
        boolean boolean87 = mutablePeriod81.isSupported(durationFieldType85);
        int int88 = mutablePeriod78.get(durationFieldType85);
        boolean boolean89 = periodType69.isSupported(durationFieldType85);
        int int90 = periodType66.indexOf(durationFieldType85);
        int int91 = period60.get(durationFieldType85);
        int int92 = mutablePeriod33.get(durationFieldType85);
        int int93 = period9.get(durationFieldType85);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + (-1L) + "'", long2 == (-1L));
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "PT-1M" + "'", str7, "PT-1M");
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertNotNull(periodType15);
        org.junit.Assert.assertNotNull(period18);
        org.junit.Assert.assertNotNull(durationFieldType20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(duration36);
        org.junit.Assert.assertTrue("'" + long37 + "' != '" + (-1L) + "'", long37 == (-1L));
        org.junit.Assert.assertNotNull(periodType40);
        org.junit.Assert.assertNotNull(period42);
        org.junit.Assert.assertNotNull(period44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertNotNull(periodType46);
        org.junit.Assert.assertNotNull(periodType47);
        org.junit.Assert.assertNotNull(periodType48);
        org.junit.Assert.assertNotNull(periodType50);
        org.junit.Assert.assertNotNull(durationFieldType52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(durationFieldType54);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1));
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + (-1) + "'", int58 == (-1));
        org.junit.Assert.assertNotNull(period59);
        org.junit.Assert.assertNotNull(duration62);
        org.junit.Assert.assertTrue("'" + long63 + "' != '" + (-1L) + "'", long63 == (-1L));
        org.junit.Assert.assertNotNull(periodType66);
        org.junit.Assert.assertNotNull(period68);
        org.junit.Assert.assertNotNull(periodType69);
        org.junit.Assert.assertNotNull(periodType70);
        org.junit.Assert.assertNotNull(duration72);
        org.junit.Assert.assertTrue("'" + long73 + "' != '" + (-1L) + "'", long73 == (-1L));
        org.junit.Assert.assertNotNull(period74);
        org.junit.Assert.assertNotNull(period76);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 8 + "'", int77 == 8);
        org.junit.Assert.assertNotNull(mutablePeriod78);
        org.junit.Assert.assertNotNull(period83);
        org.junit.Assert.assertNotNull(durationFieldType85);
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "years" + "'", str86, "years");
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + 0 + "'", int88 == 0);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + (-1) + "'", int90 == (-1));
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + 0 + "'", int91 == 0);
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + 0 + "'", int92 == 0);
        org.junit.Assert.assertTrue("'" + int93 + "' != '" + 0 + "'", int93 == 0);
    }

    @Test
    public void test17504() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17504");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((-1L));
        long long2 = duration1.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.Period period4 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration1, readableInstant3);
        org.joda.time.PeriodType periodType5 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology6 = null;
        org.joda.time.Period period7 = duration1.toPeriod(periodType5, chronology6);
        org.joda.time.Duration duration8 = duration1.toDuration();
        org.joda.time.Seconds seconds9 = duration8.toStandardSeconds();
        org.joda.time.ReadableInstant readableInstant10 = null;
        org.joda.time.Period period11 = duration8.toPeriodTo(readableInstant10);
        org.joda.time.Period period13 = period11.withSeconds(5);
        org.joda.time.Period period15 = period13.withHours(350);
        int int16 = period13.getMonths();
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + (-1L) + "'", long2 == (-1L));
        org.junit.Assert.assertNotNull(periodType5);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(duration8);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(period13);
        org.junit.Assert.assertNotNull(period15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
    }

    @Test
    public void test17505() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17505");
        org.joda.time.Period period1 = org.joda.time.Period.months(2);
        org.joda.time.Period period3 = period1.plusHours((int) (byte) 1);
        org.joda.time.Period period5 = period1.withYears((int) (short) 10);
        org.joda.time.Period period7 = period1.minusYears(35);
        org.joda.time.Period period8 = period1.negated();
        org.joda.time.Period period10 = period8.minusMinutes(5);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Hours hours11 = period10.toStandardHours();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Cannot convert to Hours as this period contains months and months vary in length");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(period3);
        org.junit.Assert.assertNotNull(period5);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertNotNull(period10);
    }

    @Test
    public void test17506() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17506");
        org.joda.time.Chronology chronology1 = null;
        org.joda.time.MutablePeriod mutablePeriod2 = new org.joda.time.MutablePeriod(1L, chronology1);
        org.joda.time.Chronology chronology4 = null;
        org.joda.time.MutablePeriod mutablePeriod5 = new org.joda.time.MutablePeriod(1L, chronology4);
        mutablePeriod2.add((org.joda.time.ReadablePeriod) mutablePeriod5);
        org.joda.time.Duration duration8 = org.joda.time.Duration.standardMinutes((-1L));
        long long9 = duration8.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant10 = null;
        org.joda.time.Period period11 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration8, readableInstant10);
        mutablePeriod5.setPeriod((org.joda.time.ReadablePeriod) period11);
        org.joda.time.Period period13 = period11.toPeriod();
        org.joda.time.Period period15 = period13.withYears((-97));
        org.joda.time.Period period17 = period13.withMinutes((-900));
        org.junit.Assert.assertNotNull(duration8);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + (-1L) + "'", long9 == (-1L));
        org.junit.Assert.assertNotNull(period13);
        org.junit.Assert.assertNotNull(period15);
        org.junit.Assert.assertNotNull(period17);
    }

    @Test
    public void test17507() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17507");
        org.joda.time.MutablePeriod mutablePeriod4 = new org.joda.time.MutablePeriod(10, (int) '#', (int) (short) 100, (int) (short) 0);
        mutablePeriod4.setDays((-60));
        mutablePeriod4.setDays((int) (byte) 100);
        mutablePeriod4.addMinutes((-99));
    }

    @Test
    public void test17508() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17508");
        org.joda.time.Chronology chronology1 = null;
        org.joda.time.MutablePeriod mutablePeriod2 = new org.joda.time.MutablePeriod(1L, chronology1);
        org.joda.time.Chronology chronology4 = null;
        org.joda.time.MutablePeriod mutablePeriod5 = new org.joda.time.MutablePeriod(1L, chronology4);
        mutablePeriod2.add((org.joda.time.ReadablePeriod) mutablePeriod5);
        mutablePeriod2.addMonths((int) (short) -1);
        org.joda.time.DurationFieldType[] durationFieldTypeArray9 = mutablePeriod2.getFieldTypes();
        mutablePeriod2.setSeconds((int) (byte) -1);
        org.joda.time.MutablePeriod mutablePeriod16 = new org.joda.time.MutablePeriod(1, 0, (int) (byte) 1, 100);
        mutablePeriod16.setSeconds(0);
        org.joda.time.Chronology chronology20 = null;
        mutablePeriod16.setPeriod((long) 0, chronology20);
        int int22 = mutablePeriod16.getMonths();
        mutablePeriod2.setPeriod((org.joda.time.ReadablePeriod) mutablePeriod16);
        int int24 = mutablePeriod2.getMinutes();
        int int25 = mutablePeriod2.getMillis();
        org.junit.Assert.assertNotNull(durationFieldTypeArray9);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
    }

    @Test
    public void test17509() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17509");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.Duration duration2 = org.joda.time.Duration.standardMinutes((-1L));
        long long3 = duration2.getStandardMinutes();
        org.joda.time.Period period4 = duration2.toPeriod();
        org.joda.time.Duration duration6 = org.joda.time.Duration.standardMinutes((-1L));
        long long7 = duration6.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.Period period9 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration6, readableInstant8);
        org.joda.time.PeriodType periodType10 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology11 = null;
        org.joda.time.Period period12 = duration6.toPeriod(periodType10, chronology11);
        org.joda.time.Period period13 = duration2.toPeriod(periodType10);
        org.joda.time.Duration duration15 = org.joda.time.Duration.standardMinutes((-1L));
        long long16 = duration15.getStandardMinutes();
        boolean boolean17 = duration2.isLongerThan((org.joda.time.ReadableDuration) duration15);
        org.joda.time.PeriodType periodType18 = org.joda.time.PeriodType.weeks();
        org.joda.time.Period period19 = new org.joda.time.Period(readableInstant0, (org.joda.time.ReadableDuration) duration15, periodType18);
        org.joda.time.Chronology chronology20 = null;
        org.joda.time.Period period21 = duration15.toPeriod(chronology20);
        org.joda.time.Period period23 = org.joda.time.Period.hours((int) 'a');
        org.joda.time.DurationFieldType durationFieldType25 = period23.getFieldType((int) (short) 1);
        boolean boolean26 = duration15.equals((java.lang.Object) (short) 1);
        org.joda.time.Duration duration28 = org.joda.time.Duration.standardMinutes((-1L));
        long long29 = duration28.getStandardMinutes();
        org.joda.time.Duration duration31 = org.joda.time.Duration.standardMinutes((-1L));
        long long32 = duration31.getStandardMinutes();
        boolean boolean33 = duration28.isLongerThan((org.joda.time.ReadableDuration) duration31);
        org.joda.time.ReadableInstant readableInstant34 = null;
        org.joda.time.Duration duration36 = org.joda.time.Duration.standardMinutes((-1L));
        long long37 = duration36.getStandardMinutes();
        org.joda.time.Period period38 = duration36.toPeriod();
        org.joda.time.Duration duration40 = org.joda.time.Duration.standardMinutes((-1L));
        long long41 = duration40.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant42 = null;
        org.joda.time.Period period43 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration40, readableInstant42);
        org.joda.time.PeriodType periodType44 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology45 = null;
        org.joda.time.Period period46 = duration40.toPeriod(periodType44, chronology45);
        org.joda.time.Period period47 = duration36.toPeriod(periodType44);
        org.joda.time.Duration duration49 = org.joda.time.Duration.standardMinutes((-1L));
        long long50 = duration49.getStandardMinutes();
        boolean boolean51 = duration36.isLongerThan((org.joda.time.ReadableDuration) duration49);
        org.joda.time.PeriodType periodType52 = org.joda.time.PeriodType.weeks();
        org.joda.time.Period period53 = new org.joda.time.Period(readableInstant34, (org.joda.time.ReadableDuration) duration49, periodType52);
        org.joda.time.Chronology chronology54 = null;
        org.joda.time.Period period55 = duration49.toPeriod(chronology54);
        org.joda.time.ReadableInstant readableInstant56 = null;
        org.joda.time.Period period57 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration49, readableInstant56);
        org.joda.time.Duration duration58 = period57.toStandardDuration();
        org.joda.time.PeriodType periodType59 = org.joda.time.PeriodType.years();
        org.joda.time.Chronology chronology60 = null;
        org.joda.time.Period period61 = duration58.toPeriod(periodType59, chronology60);
        int int62 = duration31.compareTo((org.joda.time.ReadableDuration) duration58);
        boolean boolean63 = duration15.isEqual((org.joda.time.ReadableDuration) duration58);
        org.joda.time.Period period64 = duration15.toPeriod();
        org.joda.time.format.PeriodPrinter periodPrinter65 = null;
        org.joda.time.format.PeriodParser periodParser66 = null;
        org.joda.time.format.PeriodFormatter periodFormatter67 = new org.joda.time.format.PeriodFormatter(periodPrinter65, periodParser66);
        boolean boolean68 = periodFormatter67.isPrinter();
        org.joda.time.format.PeriodParser periodParser69 = periodFormatter67.getParser();
        boolean boolean70 = periodFormatter67.isParser();
        java.util.Locale locale71 = periodFormatter67.getLocale();
        boolean boolean72 = periodFormatter67.isPrinter();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str73 = period64.toString(periodFormatter67);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Printing not supported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(duration2);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + (-1L) + "'", long3 == (-1L));
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(duration6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(periodType10);
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertNotNull(period13);
        org.junit.Assert.assertNotNull(duration15);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + (-1L) + "'", long16 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(periodType18);
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertNotNull(period23);
        org.junit.Assert.assertNotNull(durationFieldType25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(duration28);
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + (-1L) + "'", long29 == (-1L));
        org.junit.Assert.assertNotNull(duration31);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + (-1L) + "'", long32 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(duration36);
        org.junit.Assert.assertTrue("'" + long37 + "' != '" + (-1L) + "'", long37 == (-1L));
        org.junit.Assert.assertNotNull(period38);
        org.junit.Assert.assertNotNull(duration40);
        org.junit.Assert.assertTrue("'" + long41 + "' != '" + (-1L) + "'", long41 == (-1L));
        org.junit.Assert.assertNotNull(periodType44);
        org.junit.Assert.assertNotNull(period46);
        org.junit.Assert.assertNotNull(period47);
        org.junit.Assert.assertNotNull(duration49);
        org.junit.Assert.assertTrue("'" + long50 + "' != '" + (-1L) + "'", long50 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(periodType52);
        org.junit.Assert.assertNotNull(period55);
        org.junit.Assert.assertNotNull(duration58);
        org.junit.Assert.assertNotNull(periodType59);
        org.junit.Assert.assertNotNull(period61);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 0 + "'", int62 == 0);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(period64);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNull(periodParser69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNull(locale71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
    }

    @Test
    public void test17510() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17510");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.Duration duration2 = org.joda.time.Duration.standardMinutes((-1L));
        long long3 = duration2.getStandardMinutes();
        org.joda.time.Duration duration5 = org.joda.time.Duration.standardMinutes((-1L));
        long long6 = duration5.getStandardMinutes();
        boolean boolean7 = duration2.isLongerThan((org.joda.time.ReadableDuration) duration5);
        org.joda.time.Duration duration9 = duration5.withMillis(1L);
        org.joda.time.Period period10 = new org.joda.time.Period(readableInstant0, (org.joda.time.ReadableDuration) duration5);
        org.joda.time.Days days11 = period10.toStandardDays();
        org.joda.time.Period period13 = period10.multipliedBy((int) (short) -1);
        org.joda.time.Period period15 = period10.plusMonths((int) (byte) 0);
        org.joda.time.Chronology chronology17 = null;
        org.joda.time.MutablePeriod mutablePeriod18 = new org.joda.time.MutablePeriod(1L, chronology17);
        org.joda.time.Chronology chronology20 = null;
        org.joda.time.MutablePeriod mutablePeriod21 = new org.joda.time.MutablePeriod(1L, chronology20);
        mutablePeriod18.add((org.joda.time.ReadablePeriod) mutablePeriod21);
        org.joda.time.PeriodType periodType23 = mutablePeriod21.getPeriodType();
        org.joda.time.MutablePeriod mutablePeriod24 = new org.joda.time.MutablePeriod((java.lang.Object) period15, periodType23);
        mutablePeriod24.clear();
        org.joda.time.Period period26 = mutablePeriod24.toPeriod();
        org.joda.time.Period period28 = period26.plusWeeks(0);
        org.joda.time.ReadableInstant readableInstant29 = null;
        org.joda.time.Duration duration31 = org.joda.time.Duration.standardMinutes((-1L));
        long long32 = duration31.getStandardMinutes();
        org.joda.time.Duration duration34 = org.joda.time.Duration.standardMinutes((-1L));
        long long35 = duration34.getStandardMinutes();
        boolean boolean36 = duration31.isLongerThan((org.joda.time.ReadableDuration) duration34);
        org.joda.time.Duration duration38 = duration34.withMillis(1L);
        org.joda.time.Period period39 = new org.joda.time.Period(readableInstant29, (org.joda.time.ReadableDuration) duration34);
        org.joda.time.Days days40 = period39.toStandardDays();
        org.joda.time.Period period42 = period39.multipliedBy((int) (short) -1);
        org.joda.time.Period period44 = period39.plusMonths((int) (byte) 0);
        org.joda.time.Chronology chronology46 = null;
        org.joda.time.MutablePeriod mutablePeriod47 = new org.joda.time.MutablePeriod(1L, chronology46);
        org.joda.time.Chronology chronology49 = null;
        org.joda.time.MutablePeriod mutablePeriod50 = new org.joda.time.MutablePeriod(1L, chronology49);
        mutablePeriod47.add((org.joda.time.ReadablePeriod) mutablePeriod50);
        org.joda.time.PeriodType periodType52 = mutablePeriod50.getPeriodType();
        org.joda.time.MutablePeriod mutablePeriod53 = new org.joda.time.MutablePeriod((java.lang.Object) period44, periodType52);
        mutablePeriod53.clear();
        org.joda.time.Period period55 = mutablePeriod53.toPeriod();
        org.joda.time.Period period57 = period55.plusWeeks(0);
        org.joda.time.Duration duration61 = org.joda.time.Duration.standardMinutes((-1L));
        long long62 = duration61.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant63 = null;
        org.joda.time.Period period64 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration61, readableInstant63);
        org.joda.time.Duration duration66 = org.joda.time.Duration.standardMinutes((-1L));
        long long67 = duration66.getStandardMinutes();
        org.joda.time.Period period68 = duration66.toPeriod();
        boolean boolean69 = duration61.isLongerThan((org.joda.time.ReadableDuration) duration66);
        org.joda.time.ReadableInstant readableInstant70 = null;
        org.joda.time.PeriodType periodType73 = org.joda.time.PeriodType.seconds();
        org.joda.time.PeriodType periodType74 = periodType73.withMinutesRemoved();
        org.joda.time.Chronology chronology75 = null;
        org.joda.time.MutablePeriod mutablePeriod76 = new org.joda.time.MutablePeriod((long) 0, (long) (short) 100, periodType73, chronology75);
        org.joda.time.PeriodType periodType77 = periodType73.withMillisRemoved();
        org.joda.time.Period period78 = duration61.toPeriodTo(readableInstant70, periodType77);
        org.joda.time.Chronology chronology79 = null;
        org.joda.time.Period period80 = new org.joda.time.Period((long) (short) 1, (long) 1, periodType77, chronology79);
        org.joda.time.PeriodType periodType81 = periodType77.withYearsRemoved();
        org.joda.time.DurationFieldType durationFieldType82 = org.joda.time.DurationFieldType.seconds();
        org.joda.time.Chronology chronology83 = null;
        org.joda.time.DurationField durationField84 = durationFieldType82.getField(chronology83);
        boolean boolean85 = periodType81.isSupported(durationFieldType82);
        java.lang.String str86 = durationFieldType82.toString();
        int int87 = period57.get(durationFieldType82);
        org.joda.time.Period period89 = period26.withField(durationFieldType82, 3);
        org.joda.time.ReadableInstant readableInstant90 = null;
        org.joda.time.Duration duration91 = period26.toDurationTo(readableInstant90);
        int int92 = period26.size();
        org.joda.time.Period period94 = period26.minusMillis(70);
        org.joda.time.Duration duration95 = period26.toStandardDuration();
        org.joda.time.DurationFieldType[] durationFieldTypeArray96 = period26.getFieldTypes();
        org.junit.Assert.assertNotNull(duration2);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + (-1L) + "'", long3 == (-1L));
        org.junit.Assert.assertNotNull(duration5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertNotNull(days11);
        org.junit.Assert.assertNotNull(period13);
        org.junit.Assert.assertNotNull(period15);
        org.junit.Assert.assertNotNull(periodType23);
        org.junit.Assert.assertNotNull(period26);
        org.junit.Assert.assertNotNull(period28);
        org.junit.Assert.assertNotNull(duration31);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + (-1L) + "'", long32 == (-1L));
        org.junit.Assert.assertNotNull(duration34);
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + (-1L) + "'", long35 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(duration38);
        org.junit.Assert.assertNotNull(days40);
        org.junit.Assert.assertNotNull(period42);
        org.junit.Assert.assertNotNull(period44);
        org.junit.Assert.assertNotNull(periodType52);
        org.junit.Assert.assertNotNull(period55);
        org.junit.Assert.assertNotNull(period57);
        org.junit.Assert.assertNotNull(duration61);
        org.junit.Assert.assertTrue("'" + long62 + "' != '" + (-1L) + "'", long62 == (-1L));
        org.junit.Assert.assertNotNull(duration66);
        org.junit.Assert.assertTrue("'" + long67 + "' != '" + (-1L) + "'", long67 == (-1L));
        org.junit.Assert.assertNotNull(period68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(periodType73);
        org.junit.Assert.assertNotNull(periodType74);
        org.junit.Assert.assertNotNull(periodType77);
        org.junit.Assert.assertNotNull(period78);
        org.junit.Assert.assertNotNull(periodType81);
        org.junit.Assert.assertNotNull(durationFieldType82);
        org.junit.Assert.assertNotNull(durationField84);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "seconds" + "'", str86, "seconds");
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 0 + "'", int87 == 0);
        org.junit.Assert.assertNotNull(period89);
        org.junit.Assert.assertNotNull(duration91);
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + 8 + "'", int92 == 8);
        org.junit.Assert.assertNotNull(period94);
        org.junit.Assert.assertNotNull(duration95);
        org.junit.Assert.assertNotNull(durationFieldTypeArray96);
    }

    @Test
    public void test17511() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17511");
        org.joda.time.MutablePeriod mutablePeriod8 = new org.joda.time.MutablePeriod((int) (byte) -1, (int) (byte) 10, (int) 'a', (int) (short) 0, (int) ' ', (int) '#', (int) (short) -1, 8);
        org.joda.time.MutablePeriod mutablePeriod9 = mutablePeriod8.copy();
        org.joda.time.Period period11 = org.joda.time.Period.seconds((int) '#');
        int int12 = period11.getMillis();
        org.joda.time.DurationFieldType durationFieldType13 = org.joda.time.DurationFieldType.years();
        org.joda.time.Period period15 = period11.withField(durationFieldType13, (int) (short) 10);
        org.joda.time.Period period16 = new org.joda.time.Period((java.lang.Object) period15);
        int int17 = period16.getDays();
        org.joda.time.Period period19 = period16.plusDays((int) (byte) 10);
        org.joda.time.Period period21 = period19.withDays((int) (short) 1);
        org.joda.time.Period period23 = org.joda.time.Period.seconds((int) '#');
        int int24 = period23.getMillis();
        org.joda.time.DurationFieldType durationFieldType25 = org.joda.time.DurationFieldType.years();
        org.joda.time.Period period27 = period23.withField(durationFieldType25, (int) (short) 10);
        org.joda.time.Period period28 = new org.joda.time.Period((java.lang.Object) period27);
        int int29 = period28.getDays();
        org.joda.time.Period period30 = period21.plus((org.joda.time.ReadablePeriod) period28);
        org.joda.time.Period period31 = period28.negated();
        org.joda.time.Period period33 = period31.minusMonths(34);
        org.joda.time.Period period42 = new org.joda.time.Period(7, (int) (byte) 1, (int) (byte) -1, 0, (int) (byte) -1, (-1), (int) (short) 10, (int) (byte) 10);
        org.joda.time.Period period43 = period42.toPeriod();
        org.joda.time.Chronology chronology45 = null;
        org.joda.time.MutablePeriod mutablePeriod46 = new org.joda.time.MutablePeriod(1L, chronology45);
        org.joda.time.Period period48 = org.joda.time.Period.seconds((int) '#');
        mutablePeriod46.setPeriod((org.joda.time.ReadablePeriod) period48);
        org.joda.time.DurationFieldType durationFieldType50 = org.joda.time.DurationFieldType.years();
        java.lang.String str51 = durationFieldType50.getName();
        boolean boolean52 = mutablePeriod46.isSupported(durationFieldType50);
        mutablePeriod46.setSeconds((int) (byte) -1);
        java.lang.Object obj55 = mutablePeriod46.clone();
        org.joda.time.Period period56 = mutablePeriod46.toPeriod();
        mutablePeriod46.setPeriod((long) (byte) 100, (-60000L));
        org.joda.time.Duration duration65 = org.joda.time.Duration.standardMinutes((-1L));
        long long66 = duration65.getStandardMinutes();
        org.joda.time.Period period67 = duration65.toPeriod();
        org.joda.time.Duration duration69 = org.joda.time.Duration.standardMinutes((-1L));
        long long70 = duration69.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant71 = null;
        org.joda.time.Period period72 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration69, readableInstant71);
        org.joda.time.PeriodType periodType73 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology74 = null;
        org.joda.time.Period period75 = duration69.toPeriod(periodType73, chronology74);
        org.joda.time.Period period76 = duration65.toPeriod(periodType73);
        org.joda.time.Chronology chronology77 = null;
        org.joda.time.MutablePeriod mutablePeriod78 = new org.joda.time.MutablePeriod(1L, (long) (byte) 100, periodType73, chronology77);
        org.joda.time.PeriodType periodType79 = periodType73.withMillisRemoved();
        org.joda.time.PeriodType periodType80 = periodType79.withSecondsRemoved();
        org.joda.time.Chronology chronology81 = null;
        org.joda.time.MutablePeriod mutablePeriod82 = new org.joda.time.MutablePeriod(100L, (long) ' ', periodType80, chronology81);
        org.joda.time.DurationFieldType durationFieldType84 = periodType80.getFieldType(0);
        boolean boolean85 = mutablePeriod46.isSupported(durationFieldType84);
        org.joda.time.Period period87 = period43.withFieldAdded(durationFieldType84, (int) '#');
        java.lang.String str88 = durationFieldType84.toString();
        org.joda.time.Period period90 = period31.withField(durationFieldType84, 0);
        mutablePeriod8.set(durationFieldType84, 70);
        org.junit.Assert.assertNotNull(mutablePeriod9);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(durationFieldType13);
        org.junit.Assert.assertNotNull(period15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(period19);
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertNotNull(period23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNotNull(durationFieldType25);
        org.junit.Assert.assertNotNull(period27);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNotNull(period30);
        org.junit.Assert.assertNotNull(period31);
        org.junit.Assert.assertNotNull(period33);
        org.junit.Assert.assertNotNull(period43);
        org.junit.Assert.assertNotNull(period48);
        org.junit.Assert.assertNotNull(durationFieldType50);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "years" + "'", str51, "years");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertEquals(obj55.toString(), "PT-1M0.100S");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj55), "PT-1M0.100S");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj55), "PT-1M0.100S");
        org.junit.Assert.assertNotNull(period56);
        org.junit.Assert.assertNotNull(duration65);
        org.junit.Assert.assertTrue("'" + long66 + "' != '" + (-1L) + "'", long66 == (-1L));
        org.junit.Assert.assertNotNull(period67);
        org.junit.Assert.assertNotNull(duration69);
        org.junit.Assert.assertTrue("'" + long70 + "' != '" + (-1L) + "'", long70 == (-1L));
        org.junit.Assert.assertNotNull(periodType73);
        org.junit.Assert.assertNotNull(period75);
        org.junit.Assert.assertNotNull(period76);
        org.junit.Assert.assertNotNull(periodType79);
        org.junit.Assert.assertNotNull(periodType80);
        org.junit.Assert.assertNotNull(durationFieldType84);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertNotNull(period87);
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "days" + "'", str88, "days");
        org.junit.Assert.assertNotNull(period90);
    }

    @Test
    public void test17512() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17512");
        org.joda.time.Duration duration1 = new org.joda.time.Duration(36000000L);
        org.joda.time.Duration duration3 = org.joda.time.Duration.standardMinutes((-1L));
        long long4 = duration3.getStandardMinutes();
        org.joda.time.Period period5 = duration3.toPeriod();
        java.lang.String str6 = duration3.toString();
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.ReadableInstant readableInstant9 = null;
        org.joda.time.Duration duration11 = org.joda.time.Duration.standardMinutes((-1L));
        long long12 = duration11.getStandardMinutes();
        org.joda.time.Period period13 = duration11.toPeriod();
        org.joda.time.Duration duration15 = org.joda.time.Duration.standardMinutes((-1L));
        long long16 = duration15.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant17 = null;
        org.joda.time.Period period18 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration15, readableInstant17);
        org.joda.time.PeriodType periodType19 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology20 = null;
        org.joda.time.Period period21 = duration15.toPeriod(periodType19, chronology20);
        org.joda.time.Period period22 = duration11.toPeriod(periodType19);
        org.joda.time.MutablePeriod mutablePeriod23 = new org.joda.time.MutablePeriod(readableInstant8, readableInstant9, periodType19);
        org.joda.time.Period period25 = org.joda.time.Period.seconds((int) '#');
        int int26 = period25.getMillis();
        org.joda.time.DurationFieldType durationFieldType27 = org.joda.time.DurationFieldType.years();
        org.joda.time.Period period29 = period25.withField(durationFieldType27, (int) (short) 10);
        int int30 = periodType19.indexOf(durationFieldType27);
        org.joda.time.Period period31 = new org.joda.time.Period(0L, periodType19);
        org.joda.time.Chronology chronology32 = null;
        org.joda.time.Period period33 = duration3.toPeriod(periodType19, chronology32);
        org.joda.time.PeriodType periodType34 = periodType19.withYearsRemoved();
        org.joda.time.Chronology chronology35 = null;
        org.joda.time.MutablePeriod mutablePeriod36 = new org.joda.time.MutablePeriod((java.lang.Object) duration1, periodType19, chronology35);
        org.joda.time.Duration duration38 = org.joda.time.Duration.standardMinutes((-1L));
        long long39 = duration38.getStandardMinutes();
        org.joda.time.Duration duration41 = org.joda.time.Duration.standardMinutes((-1L));
        long long42 = duration41.getStandardMinutes();
        boolean boolean43 = duration38.isLongerThan((org.joda.time.ReadableDuration) duration41);
        org.joda.time.Duration duration45 = org.joda.time.Duration.standardMinutes((-1L));
        long long46 = duration45.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant47 = null;
        org.joda.time.Period period48 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration45, readableInstant47);
        org.joda.time.PeriodType periodType49 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology50 = null;
        org.joda.time.Period period51 = duration45.toPeriod(periodType49, chronology50);
        org.joda.time.Duration duration54 = duration45.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration56 = org.joda.time.Duration.standardHours((long) 10);
        org.joda.time.Duration duration58 = org.joda.time.Duration.standardMinutes((-1L));
        long long59 = duration58.getStandardMinutes();
        org.joda.time.Duration duration61 = org.joda.time.Duration.standardMinutes((-1L));
        long long62 = duration61.getStandardMinutes();
        boolean boolean63 = duration58.isLongerThan((org.joda.time.ReadableDuration) duration61);
        org.joda.time.Period period64 = duration61.toPeriod();
        org.joda.time.Minutes minutes65 = duration61.toStandardMinutes();
        boolean boolean66 = duration56.isEqual((org.joda.time.ReadableDuration) duration61);
        boolean boolean67 = duration45.isShorterThan((org.joda.time.ReadableDuration) duration56);
        int int68 = duration41.compareTo((org.joda.time.ReadableDuration) duration45);
        org.joda.time.MutablePeriod mutablePeriod69 = new org.joda.time.MutablePeriod();
        org.joda.time.ReadableInstant readableInstant70 = null;
        org.joda.time.Duration duration71 = mutablePeriod69.toDurationTo(readableInstant70);
        int int72 = duration41.compareTo((org.joda.time.ReadableDuration) duration71);
        org.joda.time.Period period73 = duration71.toPeriod();
        org.joda.time.Chronology chronology74 = null;
        org.joda.time.Period period75 = duration71.toPeriod(chronology74);
        org.joda.time.Duration duration76 = duration1.minus((org.joda.time.ReadableDuration) duration71);
        org.joda.time.ReadableInstant readableInstant77 = null;
        org.joda.time.Interval interval78 = duration76.toIntervalTo(readableInstant77);
        org.joda.time.Chronology chronology79 = null;
        org.joda.time.Period period80 = new org.joda.time.Period((java.lang.Object) interval78, chronology79);
        org.joda.time.PeriodType periodType81 = period80.getPeriodType();
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + (-1L) + "'", long4 == (-1L));
        org.junit.Assert.assertNotNull(period5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "PT-60S" + "'", str6, "PT-60S");
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + (-1L) + "'", long12 == (-1L));
        org.junit.Assert.assertNotNull(period13);
        org.junit.Assert.assertNotNull(duration15);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + (-1L) + "'", long16 == (-1L));
        org.junit.Assert.assertNotNull(periodType19);
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertNotNull(period22);
        org.junit.Assert.assertNotNull(period25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(durationFieldType27);
        org.junit.Assert.assertNotNull(period29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertNotNull(period33);
        org.junit.Assert.assertNotNull(periodType34);
        org.junit.Assert.assertNotNull(duration38);
        org.junit.Assert.assertTrue("'" + long39 + "' != '" + (-1L) + "'", long39 == (-1L));
        org.junit.Assert.assertNotNull(duration41);
        org.junit.Assert.assertTrue("'" + long42 + "' != '" + (-1L) + "'", long42 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(duration45);
        org.junit.Assert.assertTrue("'" + long46 + "' != '" + (-1L) + "'", long46 == (-1L));
        org.junit.Assert.assertNotNull(periodType49);
        org.junit.Assert.assertNotNull(period51);
        org.junit.Assert.assertNotNull(duration54);
        org.junit.Assert.assertNotNull(duration56);
        org.junit.Assert.assertNotNull(duration58);
        org.junit.Assert.assertTrue("'" + long59 + "' != '" + (-1L) + "'", long59 == (-1L));
        org.junit.Assert.assertNotNull(duration61);
        org.junit.Assert.assertTrue("'" + long62 + "' != '" + (-1L) + "'", long62 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(period64);
        org.junit.Assert.assertNotNull(minutes65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 0 + "'", int68 == 0);
        org.junit.Assert.assertNotNull(duration71);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + (-1) + "'", int72 == (-1));
        org.junit.Assert.assertNotNull(period73);
        org.junit.Assert.assertNotNull(period75);
        org.junit.Assert.assertNotNull(duration76);
        org.junit.Assert.assertNotNull(interval78);
        org.junit.Assert.assertNotNull(periodType81);
    }

    @Test
    public void test17513() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17513");
        org.joda.time.ReadableInstant readableInstant1 = null;
        org.joda.time.ReadableInstant readableInstant2 = null;
        org.joda.time.Duration duration4 = org.joda.time.Duration.standardMinutes((-1L));
        long long5 = duration4.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant6 = null;
        org.joda.time.MutablePeriod mutablePeriod7 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration4, readableInstant6);
        org.joda.time.PeriodType periodType8 = org.joda.time.PeriodType.dayTime();
        org.joda.time.DurationFieldType durationFieldType9 = org.joda.time.DurationFieldType.days();
        int int10 = periodType8.indexOf(durationFieldType9);
        org.joda.time.Chronology chronology11 = null;
        org.joda.time.Period period12 = duration4.toPeriod(periodType8, chronology11);
        org.joda.time.Period period13 = new org.joda.time.Period(readableInstant1, readableInstant2, periodType8);
        org.joda.time.MutablePeriod mutablePeriod14 = new org.joda.time.MutablePeriod((-7776000L), periodType8);
        org.joda.time.ReadableInterval readableInterval15 = null;
        mutablePeriod14.add(readableInterval15);
        mutablePeriod14.addSeconds(35);
        int int19 = mutablePeriod14.getMinutes();
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + (-1L) + "'", long5 == (-1L));
        org.junit.Assert.assertNotNull(periodType8);
        org.junit.Assert.assertNotNull(durationFieldType9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-9) + "'", int19 == (-9));
    }

    @Test
    public void test17514() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17514");
        org.joda.time.ReadablePartial readablePartial0 = null;
        org.joda.time.ReadablePartial readablePartial1 = null;
        org.joda.time.Duration duration5 = org.joda.time.Duration.standardMinutes((-1L));
        long long6 = duration5.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.Period period8 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration5, readableInstant7);
        org.joda.time.Duration duration10 = org.joda.time.Duration.standardMinutes((-1L));
        long long11 = duration10.getStandardMinutes();
        org.joda.time.Period period12 = duration10.toPeriod();
        boolean boolean13 = duration5.isLongerThan((org.joda.time.ReadableDuration) duration10);
        org.joda.time.ReadableInstant readableInstant14 = null;
        org.joda.time.PeriodType periodType17 = org.joda.time.PeriodType.seconds();
        org.joda.time.PeriodType periodType18 = periodType17.withMinutesRemoved();
        org.joda.time.Chronology chronology19 = null;
        org.joda.time.MutablePeriod mutablePeriod20 = new org.joda.time.MutablePeriod((long) 0, (long) (short) 100, periodType17, chronology19);
        org.joda.time.PeriodType periodType21 = periodType17.withMillisRemoved();
        org.joda.time.Period period22 = duration5.toPeriodTo(readableInstant14, periodType21);
        org.joda.time.Chronology chronology23 = null;
        org.joda.time.Period period24 = new org.joda.time.Period((long) (short) 1, (long) 1, periodType21, chronology23);
        org.joda.time.PeriodType periodType25 = periodType21.withYearsRemoved();
        org.joda.time.DurationFieldType durationFieldType26 = org.joda.time.DurationFieldType.seconds();
        org.joda.time.Chronology chronology27 = null;
        org.joda.time.DurationField durationField28 = durationFieldType26.getField(chronology27);
        boolean boolean29 = periodType25.isSupported(durationFieldType26);
        org.joda.time.PeriodType periodType30 = periodType25.withSecondsRemoved();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Period period31 = new org.joda.time.Period(readablePartial0, readablePartial1, periodType30);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: ReadablePartial objects must not be null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(duration5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + (-1L) + "'", long11 == (-1L));
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(periodType17);
        org.junit.Assert.assertNotNull(periodType18);
        org.junit.Assert.assertNotNull(periodType21);
        org.junit.Assert.assertNotNull(period22);
        org.junit.Assert.assertNotNull(periodType25);
        org.junit.Assert.assertNotNull(durationFieldType26);
        org.junit.Assert.assertNotNull(durationField28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(periodType30);
    }

    @Test
    public void test17515() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17515");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.Duration duration2 = org.joda.time.Duration.standardMinutes((-1L));
        long long3 = duration2.getStandardMinutes();
        org.joda.time.Duration duration5 = org.joda.time.Duration.standardMinutes((-1L));
        long long6 = duration5.getStandardMinutes();
        boolean boolean7 = duration2.isLongerThan((org.joda.time.ReadableDuration) duration5);
        org.joda.time.Duration duration9 = duration5.withMillis(1L);
        org.joda.time.Period period10 = new org.joda.time.Period(readableInstant0, (org.joda.time.ReadableDuration) duration5);
        org.joda.time.Days days11 = period10.toStandardDays();
        org.joda.time.Period period13 = period10.multipliedBy((int) (short) -1);
        org.joda.time.Period period15 = period10.plusMonths((int) (byte) 0);
        org.joda.time.Chronology chronology17 = null;
        org.joda.time.MutablePeriod mutablePeriod18 = new org.joda.time.MutablePeriod(1L, chronology17);
        org.joda.time.Chronology chronology20 = null;
        org.joda.time.MutablePeriod mutablePeriod21 = new org.joda.time.MutablePeriod(1L, chronology20);
        mutablePeriod18.add((org.joda.time.ReadablePeriod) mutablePeriod21);
        org.joda.time.PeriodType periodType23 = mutablePeriod21.getPeriodType();
        org.joda.time.MutablePeriod mutablePeriod24 = new org.joda.time.MutablePeriod((java.lang.Object) period15, periodType23);
        mutablePeriod24.clear();
        mutablePeriod24.addWeeks((int) (byte) 100);
        mutablePeriod24.setMonths((-60));
        org.joda.time.Chronology chronology31 = null;
        org.joda.time.Period period32 = new org.joda.time.Period((long) (short) 10, chronology31);
        mutablePeriod24.add((org.joda.time.ReadablePeriod) period32);
        org.joda.time.MutablePeriod mutablePeriod34 = mutablePeriod24.toMutablePeriod();
        mutablePeriod34.setMillis(9);
        mutablePeriod34.setWeeks(357);
        org.junit.Assert.assertNotNull(duration2);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + (-1L) + "'", long3 == (-1L));
        org.junit.Assert.assertNotNull(duration5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertNotNull(days11);
        org.junit.Assert.assertNotNull(period13);
        org.junit.Assert.assertNotNull(period15);
        org.junit.Assert.assertNotNull(periodType23);
        org.junit.Assert.assertNotNull(mutablePeriod34);
    }

    @Test
    public void test17516() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17516");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((-1L));
        long long2 = duration1.getStandardMinutes();
        org.joda.time.Duration duration4 = org.joda.time.Duration.standardMinutes((-1L));
        long long5 = duration4.getStandardMinutes();
        boolean boolean6 = duration1.isLongerThan((org.joda.time.ReadableDuration) duration4);
        org.joda.time.Duration duration8 = duration4.withMillis((long) 1);
        org.joda.time.Chronology chronology10 = null;
        org.joda.time.MutablePeriod mutablePeriod11 = new org.joda.time.MutablePeriod(1L, chronology10);
        org.joda.time.Chronology chronology13 = null;
        org.joda.time.MutablePeriod mutablePeriod14 = new org.joda.time.MutablePeriod(1L, chronology13);
        mutablePeriod11.add((org.joda.time.ReadablePeriod) mutablePeriod14);
        boolean boolean16 = duration8.equals((java.lang.Object) mutablePeriod14);
        org.joda.time.Duration duration18 = org.joda.time.Duration.standardSeconds((-60L));
        boolean boolean19 = duration8.isEqual((org.joda.time.ReadableDuration) duration18);
        org.joda.time.ReadableInstant readableInstant20 = null;
        org.joda.time.Duration duration23 = org.joda.time.Duration.standardMinutes((-1L));
        long long24 = duration23.getStandardMinutes();
        org.joda.time.Period period25 = duration23.toPeriod();
        org.joda.time.Duration duration27 = org.joda.time.Duration.standardMinutes((-1L));
        long long28 = duration27.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant29 = null;
        org.joda.time.Period period30 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration27, readableInstant29);
        org.joda.time.PeriodType periodType31 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology32 = null;
        org.joda.time.Period period33 = duration27.toPeriod(periodType31, chronology32);
        org.joda.time.Period period34 = duration23.toPeriod(periodType31);
        org.joda.time.Duration duration36 = org.joda.time.Duration.standardMinutes((-1L));
        long long37 = duration36.getStandardMinutes();
        boolean boolean38 = duration23.isLongerThan((org.joda.time.ReadableDuration) duration36);
        org.joda.time.PeriodType periodType40 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology41 = null;
        org.joda.time.MutablePeriod mutablePeriod42 = new org.joda.time.MutablePeriod((long) '4', periodType40, chronology41);
        org.joda.time.Chronology chronology43 = null;
        org.joda.time.Period period44 = duration23.toPeriod(periodType40, chronology43);
        org.joda.time.Chronology chronology45 = null;
        org.joda.time.MutablePeriod mutablePeriod46 = new org.joda.time.MutablePeriod((long) '4', periodType40, chronology45);
        org.joda.time.PeriodType periodType47 = periodType40.withMonthsRemoved();
        org.joda.time.Period period48 = duration18.toPeriodTo(readableInstant20, periodType47);
        org.joda.time.Period period51 = org.joda.time.Period.seconds((int) '#');
        org.joda.time.Period period52 = period51.toPeriod();
        org.joda.time.Period period54 = period52.minusWeeks(10);
        org.joda.time.Period period56 = period52.minusSeconds((int) (byte) 1);
        org.joda.time.PeriodType periodType57 = period56.getPeriodType();
        org.joda.time.Chronology chronology58 = null;
        org.joda.time.MutablePeriod mutablePeriod59 = new org.joda.time.MutablePeriod((long) (short) -1, periodType57, chronology58);
        org.joda.time.Period period60 = period48.withPeriodType(periodType57);
        int int61 = period60.getWeeks();
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + (-1L) + "'", long2 == (-1L));
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + (-1L) + "'", long5 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(duration8);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(duration18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(duration23);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + (-1L) + "'", long24 == (-1L));
        org.junit.Assert.assertNotNull(period25);
        org.junit.Assert.assertNotNull(duration27);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + (-1L) + "'", long28 == (-1L));
        org.junit.Assert.assertNotNull(periodType31);
        org.junit.Assert.assertNotNull(period33);
        org.junit.Assert.assertNotNull(period34);
        org.junit.Assert.assertNotNull(duration36);
        org.junit.Assert.assertTrue("'" + long37 + "' != '" + (-1L) + "'", long37 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(periodType40);
        org.junit.Assert.assertNotNull(period44);
        org.junit.Assert.assertNotNull(periodType47);
        org.junit.Assert.assertNotNull(period48);
        org.junit.Assert.assertNotNull(period51);
        org.junit.Assert.assertNotNull(period52);
        org.junit.Assert.assertNotNull(period54);
        org.junit.Assert.assertNotNull(period56);
        org.junit.Assert.assertNotNull(periodType57);
        org.junit.Assert.assertNotNull(period60);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 0 + "'", int61 == 0);
    }

    @Test
    public void test17517() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17517");
        org.joda.time.Duration duration2 = new org.joda.time.Duration(0L, (long) (-1));
        org.joda.time.Period period7 = new org.joda.time.Period((int) '#', (int) (byte) 100, 0, (-1));
        org.joda.time.Seconds seconds8 = period7.toStandardSeconds();
        boolean boolean9 = duration2.equals((java.lang.Object) period7);
        int[] intArray10 = period7.getValues();
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[0, 0, 0, 0, 35, 100, 0, -1]");
    }

    @Test
    public void test17518() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17518");
        org.joda.time.Chronology chronology1 = null;
        org.joda.time.MutablePeriod mutablePeriod2 = new org.joda.time.MutablePeriod(1L, chronology1);
        org.joda.time.Chronology chronology4 = null;
        org.joda.time.MutablePeriod mutablePeriod5 = new org.joda.time.MutablePeriod(1L, chronology4);
        mutablePeriod2.add((org.joda.time.ReadablePeriod) mutablePeriod5);
        org.joda.time.PeriodType periodType7 = mutablePeriod5.getPeriodType();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType9 = periodType7.getFieldType((int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: -1");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(periodType7);
    }

    @Test
    public void test17519() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17519");
        org.joda.time.PeriodType periodType2 = org.joda.time.PeriodType.seconds();
        org.joda.time.PeriodType periodType3 = periodType2.withMinutesRemoved();
        org.joda.time.Chronology chronology4 = null;
        org.joda.time.MutablePeriod mutablePeriod5 = new org.joda.time.MutablePeriod((long) 0, (long) (short) 100, periodType2, chronology4);
        org.joda.time.Duration duration7 = org.joda.time.Duration.standardMinutes((-1L));
        long long8 = duration7.getStandardMinutes();
        org.joda.time.Duration duration10 = org.joda.time.Duration.standardMinutes((-1L));
        long long11 = duration10.getStandardMinutes();
        boolean boolean12 = duration7.isLongerThan((org.joda.time.ReadableDuration) duration10);
        org.joda.time.Period period13 = duration10.toPeriod();
        org.joda.time.Minutes minutes14 = duration10.toStandardMinutes();
        mutablePeriod5.add((org.joda.time.ReadableDuration) duration10);
        org.joda.time.Duration duration17 = org.joda.time.Duration.standardMinutes((-1L));
        long long18 = duration17.getStandardMinutes();
        org.joda.time.Duration duration20 = org.joda.time.Duration.standardMinutes((-1L));
        long long21 = duration20.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant22 = null;
        org.joda.time.Period period23 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration20, readableInstant22);
        org.joda.time.PeriodType periodType24 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology25 = null;
        org.joda.time.Period period26 = duration20.toPeriod(periodType24, chronology25);
        org.joda.time.Duration duration27 = duration20.toDuration();
        org.joda.time.Duration duration29 = duration17.withDurationAdded((org.joda.time.ReadableDuration) duration27, 100);
        org.joda.time.Duration duration31 = org.joda.time.Duration.standardMinutes((-1L));
        long long32 = duration31.getStandardMinutes();
        org.joda.time.Period period33 = duration31.toPeriod();
        org.joda.time.Duration duration35 = org.joda.time.Duration.standardMinutes((-1L));
        long long36 = duration35.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant37 = null;
        org.joda.time.Period period38 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration35, readableInstant37);
        org.joda.time.PeriodType periodType39 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology40 = null;
        org.joda.time.Period period41 = duration35.toPeriod(periodType39, chronology40);
        org.joda.time.Period period42 = duration31.toPeriod(periodType39);
        org.joda.time.Duration duration44 = org.joda.time.Duration.standardMinutes((-1L));
        long long45 = duration44.getStandardMinutes();
        boolean boolean46 = duration31.isLongerThan((org.joda.time.ReadableDuration) duration44);
        boolean boolean47 = duration27.isEqual((org.joda.time.ReadableDuration) duration31);
        boolean boolean48 = duration10.equals((java.lang.Object) duration31);
        org.joda.time.Duration duration50 = duration31.withMillis((-60L));
        java.lang.Class<?> wildcardClass51 = duration50.getClass();
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(periodType3);
        org.junit.Assert.assertNotNull(duration7);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + (-1L) + "'", long8 == (-1L));
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + (-1L) + "'", long11 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(period13);
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertNotNull(duration17);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + (-1L) + "'", long18 == (-1L));
        org.junit.Assert.assertNotNull(duration20);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + (-1L) + "'", long21 == (-1L));
        org.junit.Assert.assertNotNull(periodType24);
        org.junit.Assert.assertNotNull(period26);
        org.junit.Assert.assertNotNull(duration27);
        org.junit.Assert.assertNotNull(duration29);
        org.junit.Assert.assertNotNull(duration31);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + (-1L) + "'", long32 == (-1L));
        org.junit.Assert.assertNotNull(period33);
        org.junit.Assert.assertNotNull(duration35);
        org.junit.Assert.assertTrue("'" + long36 + "' != '" + (-1L) + "'", long36 == (-1L));
        org.junit.Assert.assertNotNull(periodType39);
        org.junit.Assert.assertNotNull(period41);
        org.junit.Assert.assertNotNull(period42);
        org.junit.Assert.assertNotNull(duration44);
        org.junit.Assert.assertTrue("'" + long45 + "' != '" + (-1L) + "'", long45 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(duration50);
        org.junit.Assert.assertNotNull(wildcardClass51);
    }

    @Test
    public void test17520() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17520");
        org.joda.time.MutablePeriod mutablePeriod4 = new org.joda.time.MutablePeriod((-7), (int) (short) 10, 35, (-101));
        mutablePeriod4.addWeeks(4);
    }

    @Test
    public void test17521() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17521");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableInstant readableInstant1 = null;
        org.joda.time.Duration duration4 = org.joda.time.Duration.standardMinutes((-1L));
        long long5 = duration4.getStandardMinutes();
        org.joda.time.Period period6 = duration4.toPeriod();
        org.joda.time.Duration duration8 = org.joda.time.Duration.standardMinutes((-1L));
        long long9 = duration8.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant10 = null;
        org.joda.time.Period period11 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration8, readableInstant10);
        org.joda.time.PeriodType periodType12 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology13 = null;
        org.joda.time.Period period14 = duration8.toPeriod(periodType12, chronology13);
        org.joda.time.Period period15 = duration4.toPeriod(periodType12);
        org.joda.time.Duration duration17 = org.joda.time.Duration.standardMinutes((-1L));
        long long18 = duration17.getStandardMinutes();
        boolean boolean19 = duration4.isLongerThan((org.joda.time.ReadableDuration) duration17);
        org.joda.time.PeriodType periodType21 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology22 = null;
        org.joda.time.MutablePeriod mutablePeriod23 = new org.joda.time.MutablePeriod((long) '4', periodType21, chronology22);
        org.joda.time.Chronology chronology24 = null;
        org.joda.time.Period period25 = duration4.toPeriod(periodType21, chronology24);
        org.joda.time.Chronology chronology26 = null;
        org.joda.time.MutablePeriod mutablePeriod27 = new org.joda.time.MutablePeriod((long) '4', periodType21, chronology26);
        org.joda.time.PeriodType periodType28 = periodType21.withMonthsRemoved();
        org.joda.time.PeriodType periodType29 = periodType21.withWeeksRemoved();
        org.joda.time.PeriodType periodType30 = periodType29.withMinutesRemoved();
        org.joda.time.PeriodType periodType31 = periodType30.withMinutesRemoved();
        org.joda.time.Period period32 = new org.joda.time.Period(readableInstant0, readableInstant1, periodType31);
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + (-1L) + "'", long5 == (-1L));
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(duration8);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + (-1L) + "'", long9 == (-1L));
        org.junit.Assert.assertNotNull(periodType12);
        org.junit.Assert.assertNotNull(period14);
        org.junit.Assert.assertNotNull(period15);
        org.junit.Assert.assertNotNull(duration17);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + (-1L) + "'", long18 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(periodType21);
        org.junit.Assert.assertNotNull(period25);
        org.junit.Assert.assertNotNull(periodType28);
        org.junit.Assert.assertNotNull(periodType29);
        org.junit.Assert.assertNotNull(periodType30);
        org.junit.Assert.assertNotNull(periodType31);
    }

    @Test
    public void test17522() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17522");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardSeconds(1L);
        org.joda.time.Duration duration8 = org.joda.time.Duration.standardMinutes((-1L));
        long long9 = duration8.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant10 = null;
        org.joda.time.Period period11 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration8, readableInstant10);
        org.joda.time.Duration duration13 = org.joda.time.Duration.standardMinutes((-1L));
        long long14 = duration13.getStandardMinutes();
        org.joda.time.Period period15 = duration13.toPeriod();
        boolean boolean16 = duration8.isLongerThan((org.joda.time.ReadableDuration) duration13);
        org.joda.time.ReadableInstant readableInstant17 = null;
        org.joda.time.PeriodType periodType20 = org.joda.time.PeriodType.seconds();
        org.joda.time.PeriodType periodType21 = periodType20.withMinutesRemoved();
        org.joda.time.Chronology chronology22 = null;
        org.joda.time.MutablePeriod mutablePeriod23 = new org.joda.time.MutablePeriod((long) 0, (long) (short) 100, periodType20, chronology22);
        org.joda.time.PeriodType periodType24 = periodType20.withMillisRemoved();
        org.joda.time.Period period25 = duration8.toPeriodTo(readableInstant17, periodType24);
        org.joda.time.Chronology chronology26 = null;
        org.joda.time.Period period27 = new org.joda.time.Period((long) (short) 1, (long) 1, periodType24, chronology26);
        org.joda.time.PeriodType periodType28 = periodType24.withYearsRemoved();
        org.joda.time.PeriodType periodType29 = periodType28.withYearsRemoved();
        org.joda.time.Chronology chronology30 = null;
        org.joda.time.Period period31 = new org.joda.time.Period((long) (short) 100, periodType28, chronology30);
        org.joda.time.MutablePeriod mutablePeriod32 = new org.joda.time.MutablePeriod((long) (-101), 136598340000L, periodType28);
        boolean boolean33 = duration1.equals((java.lang.Object) mutablePeriod32);
        org.joda.time.Duration duration35 = org.joda.time.Duration.standardMinutes((-1L));
        long long36 = duration35.getStandardMinutes();
        org.joda.time.Duration duration38 = org.joda.time.Duration.standardMinutes((-1L));
        long long39 = duration38.getStandardMinutes();
        boolean boolean40 = duration35.isLongerThan((org.joda.time.ReadableDuration) duration38);
        org.joda.time.Duration duration42 = duration38.withMillis(1L);
        long long43 = duration42.getMillis();
        org.joda.time.Duration duration45 = org.joda.time.Duration.standardMinutes((-1L));
        long long46 = duration45.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant47 = null;
        org.joda.time.Period period48 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration45, readableInstant47);
        org.joda.time.PeriodType periodType49 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology50 = null;
        org.joda.time.Period period51 = duration45.toPeriod(periodType49, chronology50);
        org.joda.time.ReadableInstant readableInstant52 = null;
        org.joda.time.Period period53 = duration45.toPeriodTo(readableInstant52);
        org.joda.time.Chronology chronology54 = null;
        org.joda.time.Period period55 = duration45.toPeriod(chronology54);
        org.joda.time.Duration duration56 = duration45.toDuration();
        org.joda.time.Duration duration58 = org.joda.time.Duration.standardMinutes((-1L));
        long long59 = duration58.getStandardMinutes();
        org.joda.time.Period period60 = duration58.toPeriod();
        org.joda.time.Duration duration62 = org.joda.time.Duration.standardMinutes((-1L));
        long long63 = duration62.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant64 = null;
        org.joda.time.Period period65 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration62, readableInstant64);
        org.joda.time.PeriodType periodType66 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology67 = null;
        org.joda.time.Period period68 = duration62.toPeriod(periodType66, chronology67);
        org.joda.time.Period period69 = duration58.toPeriod(periodType66);
        org.joda.time.Duration duration71 = org.joda.time.Duration.standardMinutes((-1L));
        long long72 = duration71.getStandardMinutes();
        boolean boolean73 = duration58.isLongerThan((org.joda.time.ReadableDuration) duration71);
        org.joda.time.Duration duration75 = org.joda.time.Duration.standardMinutes((-1L));
        long long76 = duration75.getStandardMinutes();
        org.joda.time.Duration duration78 = org.joda.time.Duration.standardMinutes((-1L));
        long long79 = duration78.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant80 = null;
        org.joda.time.Period period81 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration78, readableInstant80);
        org.joda.time.PeriodType periodType82 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology83 = null;
        org.joda.time.Period period84 = duration78.toPeriod(periodType82, chronology83);
        org.joda.time.Duration duration85 = duration78.toDuration();
        org.joda.time.Duration duration87 = duration75.withDurationAdded((org.joda.time.ReadableDuration) duration85, 100);
        int int88 = duration71.compareTo((org.joda.time.ReadableDuration) duration87);
        org.joda.time.Duration duration89 = duration71.toDuration();
        int int90 = duration45.compareTo((org.joda.time.ReadableDuration) duration89);
        org.joda.time.Duration duration92 = duration89.plus((long) 10);
        org.joda.time.Duration duration93 = duration42.minus((org.joda.time.ReadableDuration) duration89);
        long long94 = duration42.getStandardMinutes();
        org.joda.time.Duration duration96 = duration42.minus(349200L);
        org.joda.time.Chronology chronology97 = null;
        mutablePeriod32.setPeriod((org.joda.time.ReadableDuration) duration96, chronology97);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(duration8);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + (-1L) + "'", long9 == (-1L));
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + (-1L) + "'", long14 == (-1L));
        org.junit.Assert.assertNotNull(period15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(periodType20);
        org.junit.Assert.assertNotNull(periodType21);
        org.junit.Assert.assertNotNull(periodType24);
        org.junit.Assert.assertNotNull(period25);
        org.junit.Assert.assertNotNull(periodType28);
        org.junit.Assert.assertNotNull(periodType29);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(duration35);
        org.junit.Assert.assertTrue("'" + long36 + "' != '" + (-1L) + "'", long36 == (-1L));
        org.junit.Assert.assertNotNull(duration38);
        org.junit.Assert.assertTrue("'" + long39 + "' != '" + (-1L) + "'", long39 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(duration42);
        org.junit.Assert.assertTrue("'" + long43 + "' != '" + 1L + "'", long43 == 1L);
        org.junit.Assert.assertNotNull(duration45);
        org.junit.Assert.assertTrue("'" + long46 + "' != '" + (-1L) + "'", long46 == (-1L));
        org.junit.Assert.assertNotNull(periodType49);
        org.junit.Assert.assertNotNull(period51);
        org.junit.Assert.assertNotNull(period53);
        org.junit.Assert.assertNotNull(period55);
        org.junit.Assert.assertNotNull(duration56);
        org.junit.Assert.assertNotNull(duration58);
        org.junit.Assert.assertTrue("'" + long59 + "' != '" + (-1L) + "'", long59 == (-1L));
        org.junit.Assert.assertNotNull(period60);
        org.junit.Assert.assertNotNull(duration62);
        org.junit.Assert.assertTrue("'" + long63 + "' != '" + (-1L) + "'", long63 == (-1L));
        org.junit.Assert.assertNotNull(periodType66);
        org.junit.Assert.assertNotNull(period68);
        org.junit.Assert.assertNotNull(period69);
        org.junit.Assert.assertNotNull(duration71);
        org.junit.Assert.assertTrue("'" + long72 + "' != '" + (-1L) + "'", long72 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(duration75);
        org.junit.Assert.assertTrue("'" + long76 + "' != '" + (-1L) + "'", long76 == (-1L));
        org.junit.Assert.assertNotNull(duration78);
        org.junit.Assert.assertTrue("'" + long79 + "' != '" + (-1L) + "'", long79 == (-1L));
        org.junit.Assert.assertNotNull(periodType82);
        org.junit.Assert.assertNotNull(period84);
        org.junit.Assert.assertNotNull(duration85);
        org.junit.Assert.assertNotNull(duration87);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + 1 + "'", int88 == 1);
        org.junit.Assert.assertNotNull(duration89);
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + 0 + "'", int90 == 0);
        org.junit.Assert.assertNotNull(duration92);
        org.junit.Assert.assertNotNull(duration93);
        org.junit.Assert.assertTrue("'" + long94 + "' != '" + 0L + "'", long94 == 0L);
        org.junit.Assert.assertNotNull(duration96);
    }

    @Test
    public void test17523() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17523");
        java.lang.Object obj0 = null;
        org.joda.time.Duration duration5 = new org.joda.time.Duration((-2L), (long) (byte) 0);
        org.joda.time.Duration duration7 = org.joda.time.Duration.standardMinutes((-1L));
        long long8 = duration7.getStandardMinutes();
        org.joda.time.Duration duration10 = org.joda.time.Duration.standardMinutes((-1L));
        long long11 = duration10.getStandardMinutes();
        boolean boolean12 = duration7.isLongerThan((org.joda.time.ReadableDuration) duration10);
        org.joda.time.Duration duration14 = duration10.withMillis((long) 1);
        org.joda.time.Duration duration16 = org.joda.time.Duration.standardMinutes((-1L));
        long long17 = duration16.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant18 = null;
        org.joda.time.Period period19 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration16, readableInstant18);
        org.joda.time.PeriodType periodType20 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology21 = null;
        org.joda.time.Period period22 = duration16.toPeriod(periodType20, chronology21);
        org.joda.time.Duration duration25 = duration16.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration27 = org.joda.time.Duration.standardMinutes((-1L));
        long long28 = duration27.getStandardMinutes();
        org.joda.time.Duration duration30 = org.joda.time.Duration.standardMinutes((-1L));
        long long31 = duration30.getStandardMinutes();
        boolean boolean32 = duration27.isLongerThan((org.joda.time.ReadableDuration) duration30);
        org.joda.time.Duration duration34 = duration30.withMillis((long) 1);
        boolean boolean35 = duration25.isShorterThan((org.joda.time.ReadableDuration) duration30);
        boolean boolean36 = duration10.isLongerThan((org.joda.time.ReadableDuration) duration30);
        org.joda.time.Duration duration37 = duration5.plus((org.joda.time.ReadableDuration) duration10);
        long long38 = duration10.getStandardDays();
        org.joda.time.ReadableInstant readableInstant39 = null;
        org.joda.time.Period period40 = duration10.toPeriodTo(readableInstant39);
        org.joda.time.Period period42 = period40.withMillis((int) '#');
        org.joda.time.Period period43 = period40.toPeriod();
        org.joda.time.PeriodType periodType45 = org.joda.time.PeriodType.seconds();
        org.joda.time.PeriodType periodType46 = periodType45.withMinutesRemoved();
        org.joda.time.Chronology chronology47 = null;
        org.joda.time.Period period48 = new org.joda.time.Period(100L, periodType45, chronology47);
        int int49 = period48.getSeconds();
        org.joda.time.Period period51 = period48.minusSeconds((int) ' ');
        org.joda.time.format.PeriodPrinter periodPrinter54 = null;
        org.joda.time.format.PeriodParser periodParser55 = null;
        org.joda.time.format.PeriodFormatter periodFormatter56 = new org.joda.time.format.PeriodFormatter(periodPrinter54, periodParser55);
        org.joda.time.format.PeriodPrinter periodPrinter57 = periodFormatter56.getPrinter();
        boolean boolean58 = periodFormatter56.isPrinter();
        org.joda.time.PeriodType periodType59 = org.joda.time.PeriodType.standard();
        org.joda.time.PeriodType periodType60 = periodType59.withMinutesRemoved();
        org.joda.time.PeriodType periodType61 = periodType60.withMillisRemoved();
        org.joda.time.format.PeriodFormatter periodFormatter62 = periodFormatter56.withParseType(periodType60);
        org.joda.time.PeriodType periodType63 = periodType60.withDaysRemoved();
        org.joda.time.Chronology chronology64 = null;
        org.joda.time.MutablePeriod mutablePeriod65 = new org.joda.time.MutablePeriod((-1L), (long) (short) 0, periodType60, chronology64);
        org.joda.time.MutablePeriod mutablePeriod66 = new org.joda.time.MutablePeriod(periodType60);
        org.joda.time.ReadableInstant readableInstant67 = null;
        org.joda.time.ReadableInstant readableInstant68 = null;
        org.joda.time.PeriodType periodType70 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period71 = new org.joda.time.Period(10L, periodType70);
        org.joda.time.MutablePeriod mutablePeriod72 = new org.joda.time.MutablePeriod(readableInstant67, readableInstant68, periodType70);
        java.lang.String str73 = periodType70.toString();
        org.joda.time.DurationFieldType durationFieldType75 = periodType70.getFieldType((int) (byte) 0);
        mutablePeriod66.add(durationFieldType75, 0);
        org.joda.time.Period period79 = period51.withField(durationFieldType75, (int) ' ');
        org.joda.time.Chronology chronology80 = null;
        org.joda.time.DurationField durationField81 = durationFieldType75.getField(chronology80);
        org.joda.time.Chronology chronology82 = null;
        org.joda.time.DurationField durationField83 = durationFieldType75.getField(chronology82);
        int int84 = period40.get(durationFieldType75);
        org.joda.time.Hours hours85 = period40.toStandardHours();
        org.joda.time.Duration duration87 = org.joda.time.Duration.millis((long) (byte) 100);
        org.joda.time.ReadableInstant readableInstant88 = null;
        org.joda.time.MutablePeriod mutablePeriod89 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration87, readableInstant88);
        mutablePeriod89.setMinutes(0);
        org.joda.time.PeriodType periodType92 = mutablePeriod89.getPeriodType();
        org.joda.time.PeriodType periodType93 = periodType92.withWeeksRemoved();
        org.joda.time.PeriodType periodType94 = periodType93.withWeeksRemoved();
        org.joda.time.Period period95 = period40.normalizedStandard(periodType93);
        org.joda.time.Chronology chronology96 = null;
        org.joda.time.MutablePeriod mutablePeriod97 = new org.joda.time.MutablePeriod((-101L), 6000000L, periodType93, chronology96);
        org.joda.time.Chronology chronology98 = null;
        org.joda.time.MutablePeriod mutablePeriod99 = new org.joda.time.MutablePeriod(obj0, periodType93, chronology98);
        org.junit.Assert.assertNotNull(duration7);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + (-1L) + "'", long8 == (-1L));
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + (-1L) + "'", long11 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertNotNull(duration16);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + (-1L) + "'", long17 == (-1L));
        org.junit.Assert.assertNotNull(periodType20);
        org.junit.Assert.assertNotNull(period22);
        org.junit.Assert.assertNotNull(duration25);
        org.junit.Assert.assertNotNull(duration27);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + (-1L) + "'", long28 == (-1L));
        org.junit.Assert.assertNotNull(duration30);
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + (-1L) + "'", long31 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(duration34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(duration37);
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + 0L + "'", long38 == 0L);
        org.junit.Assert.assertNotNull(period40);
        org.junit.Assert.assertNotNull(period42);
        org.junit.Assert.assertNotNull(period43);
        org.junit.Assert.assertNotNull(periodType45);
        org.junit.Assert.assertNotNull(periodType46);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertNotNull(period51);
        org.junit.Assert.assertNull(periodPrinter57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(periodType59);
        org.junit.Assert.assertNotNull(periodType60);
        org.junit.Assert.assertNotNull(periodType61);
        org.junit.Assert.assertNotNull(periodFormatter62);
        org.junit.Assert.assertNotNull(periodType63);
        org.junit.Assert.assertNotNull(periodType70);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "PeriodType[Seconds]" + "'", str73, "PeriodType[Seconds]");
        org.junit.Assert.assertNotNull(durationFieldType75);
        org.junit.Assert.assertNotNull(period79);
        org.junit.Assert.assertNotNull(durationField81);
        org.junit.Assert.assertNotNull(durationField83);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 0 + "'", int84 == 0);
        org.junit.Assert.assertNotNull(hours85);
        org.junit.Assert.assertNotNull(duration87);
        org.junit.Assert.assertNotNull(periodType92);
        org.junit.Assert.assertNotNull(periodType93);
        org.junit.Assert.assertNotNull(periodType94);
        org.junit.Assert.assertNotNull(period95);
    }

    @Test
    public void test17524() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17524");
        org.joda.time.format.PeriodPrinter periodPrinter0 = null;
        org.joda.time.format.PeriodParser periodParser1 = null;
        org.joda.time.format.PeriodFormatter periodFormatter2 = new org.joda.time.format.PeriodFormatter(periodPrinter0, periodParser1);
        org.joda.time.format.PeriodPrinter periodPrinter3 = periodFormatter2.getPrinter();
        org.joda.time.Chronology chronology5 = null;
        org.joda.time.MutablePeriod mutablePeriod6 = new org.joda.time.MutablePeriod(1L, chronology5);
        org.joda.time.Period period8 = org.joda.time.Period.seconds((int) '#');
        mutablePeriod6.setPeriod((org.joda.time.ReadablePeriod) period8);
        mutablePeriod6.addMillis((int) (short) 1);
        mutablePeriod6.setPeriod(8, (int) (byte) -1, 1, (int) (byte) 10, (int) (byte) -1, (int) (short) -1, 10, (int) (byte) -1);
        org.joda.time.PeriodType periodType21 = mutablePeriod6.getPeriodType();
        org.joda.time.PeriodType periodType22 = periodType21.withMillisRemoved();
        org.joda.time.format.PeriodFormatter periodFormatter23 = periodFormatter2.withParseType(periodType22);
        org.joda.time.PeriodType periodType24 = org.joda.time.PeriodType.yearMonthDay();
        org.joda.time.format.PeriodFormatter periodFormatter25 = periodFormatter23.withParseType(periodType24);
        java.io.Writer writer26 = null;
        org.joda.time.Duration duration29 = new org.joda.time.Duration((-58180L), 349200L);
        org.joda.time.ReadableInstant readableInstant30 = null;
        org.joda.time.Period period31 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration29, readableInstant30);
        // The following exception was thrown during execution in test generation
        try {
            periodFormatter25.printTo(writer26, (org.joda.time.ReadablePeriod) period31);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Printing not supported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(periodPrinter3);
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertNotNull(periodType21);
        org.junit.Assert.assertNotNull(periodType22);
        org.junit.Assert.assertNotNull(periodFormatter23);
        org.junit.Assert.assertNotNull(periodType24);
        org.junit.Assert.assertNotNull(periodFormatter25);
    }

    @Test
    public void test17525() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17525");
        org.joda.time.format.PeriodPrinter periodPrinter0 = null;
        org.joda.time.format.PeriodParser periodParser1 = null;
        org.joda.time.format.PeriodFormatter periodFormatter2 = new org.joda.time.format.PeriodFormatter(periodPrinter0, periodParser1);
        org.joda.time.format.PeriodPrinter periodPrinter3 = periodFormatter2.getPrinter();
        boolean boolean4 = periodFormatter2.isParser();
        org.joda.time.format.PeriodParser periodParser5 = periodFormatter2.getParser();
        boolean boolean6 = periodFormatter2.isParser();
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.Duration duration9 = org.joda.time.Duration.standardMinutes((-1L));
        long long10 = duration9.getStandardMinutes();
        org.joda.time.Duration duration12 = org.joda.time.Duration.standardMinutes((-1L));
        long long13 = duration12.getStandardMinutes();
        boolean boolean14 = duration9.isLongerThan((org.joda.time.ReadableDuration) duration12);
        org.joda.time.Period period15 = duration12.toPeriod();
        org.joda.time.Minutes minutes16 = duration12.toStandardMinutes();
        org.joda.time.Duration duration18 = org.joda.time.Duration.standardMinutes((-1L));
        long long19 = duration18.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant20 = null;
        org.joda.time.Period period21 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration18, readableInstant20);
        org.joda.time.PeriodType periodType22 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology23 = null;
        org.joda.time.Period period24 = duration18.toPeriod(periodType22, chronology23);
        org.joda.time.Duration duration27 = duration18.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration28 = duration12.plus((org.joda.time.ReadableDuration) duration27);
        org.joda.time.PeriodType periodType30 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period31 = new org.joda.time.Period(10L, periodType30);
        org.joda.time.PeriodType periodType32 = periodType30.withWeeksRemoved();
        org.joda.time.MutablePeriod mutablePeriod33 = new org.joda.time.MutablePeriod(readableInstant7, (org.joda.time.ReadableDuration) duration27, periodType32);
        int int34 = periodType32.size();
        org.joda.time.format.PeriodFormatter periodFormatter35 = periodFormatter2.withParseType(periodType32);
        org.joda.time.format.PeriodPrinter periodPrinter36 = periodFormatter35.getPrinter();
        org.joda.time.PeriodType periodType37 = periodFormatter35.getParseType();
        org.joda.time.format.PeriodParser periodParser38 = periodFormatter35.getParser();
        org.joda.time.format.PeriodPrinter periodPrinter39 = periodFormatter35.getPrinter();
        org.joda.time.PeriodType periodType40 = periodFormatter35.getParseType();
        org.joda.time.MutablePeriod mutablePeriod49 = new org.joda.time.MutablePeriod((-97), (-1), 0, (-997), 0, (-99), (-2764800), 11);
        // The following exception was thrown during execution in test generation
        try {
            int int52 = periodFormatter35.parseInto((org.joda.time.ReadWritablePeriod) mutablePeriod49, "PT220838434.998S", (-59));
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Parsing not supported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(periodPrinter3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(periodParser5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + (-1L) + "'", long10 == (-1L));
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + (-1L) + "'", long13 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(period15);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertNotNull(duration18);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + (-1L) + "'", long19 == (-1L));
        org.junit.Assert.assertNotNull(periodType22);
        org.junit.Assert.assertNotNull(period24);
        org.junit.Assert.assertNotNull(duration27);
        org.junit.Assert.assertNotNull(duration28);
        org.junit.Assert.assertNotNull(periodType30);
        org.junit.Assert.assertNotNull(periodType32);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 1 + "'", int34 == 1);
        org.junit.Assert.assertNotNull(periodFormatter35);
        org.junit.Assert.assertNull(periodPrinter36);
        org.junit.Assert.assertNotNull(periodType37);
        org.junit.Assert.assertNull(periodParser38);
        org.junit.Assert.assertNull(periodPrinter39);
        org.junit.Assert.assertNotNull(periodType40);
    }

    @Test
    public void test17526() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17526");
        org.joda.time.PeriodType periodType3 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period4 = new org.joda.time.Period(10L, periodType3);
        org.joda.time.PeriodType periodType5 = periodType3.withHoursRemoved();
        org.joda.time.PeriodType periodType6 = periodType5.withDaysRemoved();
        org.joda.time.Chronology chronology7 = null;
        org.joda.time.MutablePeriod mutablePeriod8 = new org.joda.time.MutablePeriod((-1L), (long) (byte) -1, periodType6, chronology7);
        org.joda.time.Duration duration10 = org.joda.time.Duration.standardMinutes((-1L));
        long long11 = duration10.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant12 = null;
        org.joda.time.Period period13 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration10, readableInstant12);
        org.joda.time.Duration duration15 = org.joda.time.Duration.standardMinutes((-1L));
        long long16 = duration15.getStandardMinutes();
        org.joda.time.Period period17 = duration15.toPeriod();
        boolean boolean18 = duration10.isLongerThan((org.joda.time.ReadableDuration) duration15);
        org.joda.time.Duration duration20 = org.joda.time.Duration.standardMinutes((-1L));
        long long21 = duration20.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant22 = null;
        org.joda.time.Period period23 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration20, readableInstant22);
        org.joda.time.PeriodType periodType24 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology25 = null;
        org.joda.time.Period period26 = duration20.toPeriod(periodType24, chronology25);
        org.joda.time.Duration duration27 = duration15.minus((org.joda.time.ReadableDuration) duration20);
        org.joda.time.Duration duration28 = duration20.toDuration();
        java.lang.String str29 = duration20.toString();
        mutablePeriod8.setPeriod((org.joda.time.ReadableDuration) duration20);
        org.joda.time.Period period31 = duration20.toPeriod();
        org.joda.time.Period period32 = period31.toPeriod();
        org.junit.Assert.assertNotNull(periodType3);
        org.junit.Assert.assertNotNull(periodType5);
        org.junit.Assert.assertNotNull(periodType6);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + (-1L) + "'", long11 == (-1L));
        org.junit.Assert.assertNotNull(duration15);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + (-1L) + "'", long16 == (-1L));
        org.junit.Assert.assertNotNull(period17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(duration20);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + (-1L) + "'", long21 == (-1L));
        org.junit.Assert.assertNotNull(periodType24);
        org.junit.Assert.assertNotNull(period26);
        org.junit.Assert.assertNotNull(duration27);
        org.junit.Assert.assertNotNull(duration28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "PT-60S" + "'", str29, "PT-60S");
        org.junit.Assert.assertNotNull(period31);
        org.junit.Assert.assertNotNull(period32);
    }

    @Test
    public void test17527() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17527");
        org.joda.time.format.PeriodPrinter periodPrinter0 = null;
        org.joda.time.format.PeriodParser periodParser1 = null;
        org.joda.time.format.PeriodFormatter periodFormatter2 = new org.joda.time.format.PeriodFormatter(periodPrinter0, periodParser1);
        boolean boolean3 = periodFormatter2.isPrinter();
        org.joda.time.format.PeriodParser periodParser4 = periodFormatter2.getParser();
        boolean boolean5 = periodFormatter2.isParser();
        java.util.Locale locale6 = periodFormatter2.getLocale();
        java.util.Locale locale7 = periodFormatter2.getLocale();
        java.util.Locale locale8 = null;
        org.joda.time.format.PeriodFormatter periodFormatter9 = periodFormatter2.withLocale(locale8);
        org.joda.time.format.PeriodPrinter periodPrinter10 = periodFormatter2.getPrinter();
        boolean boolean11 = periodFormatter2.isParser();
        boolean boolean12 = periodFormatter2.isPrinter();
        org.joda.time.ReadableInstant readableInstant13 = null;
        org.joda.time.Duration duration15 = org.joda.time.Duration.standardMinutes((-1L));
        long long16 = duration15.getStandardMinutes();
        org.joda.time.Period period17 = duration15.toPeriod();
        org.joda.time.Duration duration19 = org.joda.time.Duration.standardMinutes((-1L));
        long long20 = duration19.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant21 = null;
        org.joda.time.Period period22 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration19, readableInstant21);
        org.joda.time.PeriodType periodType23 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology24 = null;
        org.joda.time.Period period25 = duration19.toPeriod(periodType23, chronology24);
        org.joda.time.Period period26 = duration15.toPeriod(periodType23);
        org.joda.time.Duration duration28 = org.joda.time.Duration.standardMinutes((-1L));
        long long29 = duration28.getStandardMinutes();
        boolean boolean30 = duration15.isLongerThan((org.joda.time.ReadableDuration) duration28);
        org.joda.time.PeriodType periodType31 = org.joda.time.PeriodType.weeks();
        org.joda.time.Period period32 = new org.joda.time.Period(readableInstant13, (org.joda.time.ReadableDuration) duration28, periodType31);
        org.joda.time.Duration duration34 = duration28.plus(10L);
        org.joda.time.ReadableInstant readableInstant35 = null;
        org.joda.time.Duration duration37 = org.joda.time.Duration.standardMinutes((-1L));
        long long38 = duration37.getStandardMinutes();
        org.joda.time.Period period39 = duration37.toPeriod();
        org.joda.time.Duration duration41 = org.joda.time.Duration.standardMinutes((-1L));
        long long42 = duration41.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant43 = null;
        org.joda.time.Period period44 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration41, readableInstant43);
        org.joda.time.PeriodType periodType45 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology46 = null;
        org.joda.time.Period period47 = duration41.toPeriod(periodType45, chronology46);
        org.joda.time.Period period48 = duration37.toPeriod(periodType45);
        org.joda.time.Duration duration50 = org.joda.time.Duration.standardMinutes((-1L));
        long long51 = duration50.getStandardMinutes();
        boolean boolean52 = duration37.isLongerThan((org.joda.time.ReadableDuration) duration50);
        org.joda.time.PeriodType periodType53 = org.joda.time.PeriodType.weeks();
        org.joda.time.Period period54 = new org.joda.time.Period(readableInstant35, (org.joda.time.ReadableDuration) duration50, periodType53);
        boolean boolean55 = duration34.isLongerThan((org.joda.time.ReadableDuration) duration50);
        org.joda.time.ReadableInstant readableInstant56 = null;
        org.joda.time.Duration duration58 = org.joda.time.Duration.standardMinutes((-1L));
        long long59 = duration58.getStandardMinutes();
        org.joda.time.Period period60 = duration58.toPeriod();
        org.joda.time.Duration duration62 = org.joda.time.Duration.standardMinutes((-1L));
        long long63 = duration62.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant64 = null;
        org.joda.time.Period period65 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration62, readableInstant64);
        org.joda.time.PeriodType periodType66 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology67 = null;
        org.joda.time.Period period68 = duration62.toPeriod(periodType66, chronology67);
        org.joda.time.Period period69 = duration58.toPeriod(periodType66);
        org.joda.time.Duration duration71 = org.joda.time.Duration.standardMinutes((-1L));
        long long72 = duration71.getStandardMinutes();
        boolean boolean73 = duration58.isLongerThan((org.joda.time.ReadableDuration) duration71);
        org.joda.time.Duration duration75 = org.joda.time.Duration.standardMinutes((-1L));
        long long76 = duration75.getStandardMinutes();
        org.joda.time.Duration duration78 = org.joda.time.Duration.standardMinutes((-1L));
        long long79 = duration78.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant80 = null;
        org.joda.time.Period period81 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration78, readableInstant80);
        org.joda.time.PeriodType periodType82 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology83 = null;
        org.joda.time.Period period84 = duration78.toPeriod(periodType82, chronology83);
        org.joda.time.Duration duration85 = duration78.toDuration();
        org.joda.time.Duration duration87 = duration75.withDurationAdded((org.joda.time.ReadableDuration) duration85, 100);
        int int88 = duration71.compareTo((org.joda.time.ReadableDuration) duration87);
        org.joda.time.PeriodType periodType89 = org.joda.time.PeriodType.yearWeekDay();
        org.joda.time.Period period90 = duration71.toPeriod(periodType89);
        org.joda.time.Period period91 = duration34.toPeriodTo(readableInstant56, periodType89);
        org.joda.time.PeriodType periodType92 = periodType89.withMinutesRemoved();
        org.joda.time.PeriodType periodType93 = periodType92.withMillisRemoved();
        org.joda.time.PeriodType periodType94 = periodType92.withMonthsRemoved();
        org.joda.time.PeriodType periodType95 = periodType92.withMillisRemoved();
        org.joda.time.format.PeriodFormatter periodFormatter96 = periodFormatter2.withParseType(periodType95);
        org.joda.time.PeriodType periodType97 = periodFormatter2.getParseType();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(periodParser4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(locale6);
        org.junit.Assert.assertNull(locale7);
        org.junit.Assert.assertNotNull(periodFormatter9);
        org.junit.Assert.assertNull(periodPrinter10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(duration15);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + (-1L) + "'", long16 == (-1L));
        org.junit.Assert.assertNotNull(period17);
        org.junit.Assert.assertNotNull(duration19);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + (-1L) + "'", long20 == (-1L));
        org.junit.Assert.assertNotNull(periodType23);
        org.junit.Assert.assertNotNull(period25);
        org.junit.Assert.assertNotNull(period26);
        org.junit.Assert.assertNotNull(duration28);
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + (-1L) + "'", long29 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(periodType31);
        org.junit.Assert.assertNotNull(duration34);
        org.junit.Assert.assertNotNull(duration37);
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + (-1L) + "'", long38 == (-1L));
        org.junit.Assert.assertNotNull(period39);
        org.junit.Assert.assertNotNull(duration41);
        org.junit.Assert.assertTrue("'" + long42 + "' != '" + (-1L) + "'", long42 == (-1L));
        org.junit.Assert.assertNotNull(periodType45);
        org.junit.Assert.assertNotNull(period47);
        org.junit.Assert.assertNotNull(period48);
        org.junit.Assert.assertNotNull(duration50);
        org.junit.Assert.assertTrue("'" + long51 + "' != '" + (-1L) + "'", long51 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(periodType53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(duration58);
        org.junit.Assert.assertTrue("'" + long59 + "' != '" + (-1L) + "'", long59 == (-1L));
        org.junit.Assert.assertNotNull(period60);
        org.junit.Assert.assertNotNull(duration62);
        org.junit.Assert.assertTrue("'" + long63 + "' != '" + (-1L) + "'", long63 == (-1L));
        org.junit.Assert.assertNotNull(periodType66);
        org.junit.Assert.assertNotNull(period68);
        org.junit.Assert.assertNotNull(period69);
        org.junit.Assert.assertNotNull(duration71);
        org.junit.Assert.assertTrue("'" + long72 + "' != '" + (-1L) + "'", long72 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(duration75);
        org.junit.Assert.assertTrue("'" + long76 + "' != '" + (-1L) + "'", long76 == (-1L));
        org.junit.Assert.assertNotNull(duration78);
        org.junit.Assert.assertTrue("'" + long79 + "' != '" + (-1L) + "'", long79 == (-1L));
        org.junit.Assert.assertNotNull(periodType82);
        org.junit.Assert.assertNotNull(period84);
        org.junit.Assert.assertNotNull(duration85);
        org.junit.Assert.assertNotNull(duration87);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + 1 + "'", int88 == 1);
        org.junit.Assert.assertNotNull(periodType89);
        org.junit.Assert.assertNotNull(period90);
        org.junit.Assert.assertNotNull(period91);
        org.junit.Assert.assertNotNull(periodType92);
        org.junit.Assert.assertNotNull(periodType93);
        org.junit.Assert.assertNotNull(periodType94);
        org.junit.Assert.assertNotNull(periodType95);
        org.junit.Assert.assertNotNull(periodFormatter96);
        org.junit.Assert.assertNull(periodType97);
    }

    @Test
    public void test17528() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17528");
        org.joda.time.Period period1 = org.joda.time.Period.seconds((int) '#');
        int int2 = period1.getMillis();
        org.joda.time.Period period4 = period1.withMillis((int) '#');
        int int5 = period1.size();
        org.joda.time.ReadableInstant readableInstant6 = null;
        org.joda.time.Duration duration8 = org.joda.time.Duration.standardMinutes((-1L));
        long long9 = duration8.getStandardMinutes();
        org.joda.time.Period period10 = duration8.toPeriod();
        org.joda.time.Duration duration12 = org.joda.time.Duration.standardMinutes((-1L));
        long long13 = duration12.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant14 = null;
        org.joda.time.Period period15 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration12, readableInstant14);
        org.joda.time.PeriodType periodType16 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology17 = null;
        org.joda.time.Period period18 = duration12.toPeriod(periodType16, chronology17);
        org.joda.time.Period period19 = duration8.toPeriod(periodType16);
        org.joda.time.Duration duration21 = org.joda.time.Duration.standardMinutes((-1L));
        long long22 = duration21.getStandardMinutes();
        boolean boolean23 = duration8.isLongerThan((org.joda.time.ReadableDuration) duration21);
        org.joda.time.PeriodType periodType24 = org.joda.time.PeriodType.weeks();
        org.joda.time.Period period25 = new org.joda.time.Period(readableInstant6, (org.joda.time.ReadableDuration) duration21, periodType24);
        org.joda.time.Chronology chronology26 = null;
        org.joda.time.Period period27 = duration21.toPeriod(chronology26);
        org.joda.time.Hours hours28 = period27.toStandardHours();
        org.joda.time.Period period30 = period27.plusMinutes((int) (byte) -1);
        org.joda.time.Period period39 = new org.joda.time.Period((int) (byte) 1, 100, (int) 'a', (int) (short) 100, (int) (short) 0, 0, 0, (int) (short) 1);
        org.joda.time.Period period40 = period27.minus((org.joda.time.ReadablePeriod) period39);
        org.joda.time.DurationFieldType durationFieldType41 = org.joda.time.DurationFieldType.hours();
        org.joda.time.Period period43 = period39.withField(durationFieldType41, 8);
        java.lang.String str44 = durationFieldType41.getName();
        boolean boolean45 = period1.isSupported(durationFieldType41);
        java.lang.Object obj46 = null;
        org.joda.time.PeriodType periodType48 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology49 = null;
        org.joda.time.MutablePeriod mutablePeriod50 = new org.joda.time.MutablePeriod((long) '4', periodType48, chronology49);
        org.joda.time.Chronology chronology51 = null;
        org.joda.time.MutablePeriod mutablePeriod52 = new org.joda.time.MutablePeriod(obj46, periodType48, chronology51);
        org.joda.time.DurationFieldType durationFieldType53 = org.joda.time.DurationFieldType.years();
        java.lang.String str54 = durationFieldType53.getName();
        org.joda.time.Chronology chronology55 = null;
        boolean boolean56 = durationFieldType53.isSupported(chronology55);
        int int57 = periodType48.indexOf(durationFieldType53);
        org.joda.time.Period period59 = period1.withFieldAdded(durationFieldType53, (int) (byte) -1);
        org.joda.time.PeriodType periodType62 = null;
        org.joda.time.MutablePeriod mutablePeriod63 = new org.joda.time.MutablePeriod((long) ' ', (long) 100, periodType62);
        org.joda.time.Period period72 = new org.joda.time.Period((int) (byte) 1, 100, (int) 'a', (int) (short) 100, (int) (short) 0, 0, 0, (int) (short) 1);
        mutablePeriod63.mergePeriod((org.joda.time.ReadablePeriod) period72);
        mutablePeriod63.add((-60L));
        org.joda.time.Period period76 = period59.plus((org.joda.time.ReadablePeriod) mutablePeriod63);
        org.joda.time.PeriodType periodType77 = period59.getPeriodType();
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 8 + "'", int5 == 8);
        org.junit.Assert.assertNotNull(duration8);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + (-1L) + "'", long9 == (-1L));
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + (-1L) + "'", long13 == (-1L));
        org.junit.Assert.assertNotNull(periodType16);
        org.junit.Assert.assertNotNull(period18);
        org.junit.Assert.assertNotNull(period19);
        org.junit.Assert.assertNotNull(duration21);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + (-1L) + "'", long22 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(periodType24);
        org.junit.Assert.assertNotNull(period27);
        org.junit.Assert.assertNotNull(hours28);
        org.junit.Assert.assertNotNull(period30);
        org.junit.Assert.assertNotNull(period40);
        org.junit.Assert.assertNotNull(durationFieldType41);
        org.junit.Assert.assertNotNull(period43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "hours" + "'", str44, "hours");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(periodType48);
        org.junit.Assert.assertNotNull(durationFieldType53);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "years" + "'", str54, "years");
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
        org.junit.Assert.assertNotNull(period59);
        org.junit.Assert.assertNotNull(period76);
        org.junit.Assert.assertNotNull(periodType77);
    }

    @Test
    public void test17529() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17529");
        org.joda.time.Chronology chronology1 = null;
        org.joda.time.MutablePeriod mutablePeriod2 = new org.joda.time.MutablePeriod(1L, chronology1);
        org.joda.time.Period period4 = org.joda.time.Period.seconds((int) '#');
        mutablePeriod2.setPeriod((org.joda.time.ReadablePeriod) period4);
        mutablePeriod2.setWeeks((int) ' ');
        org.joda.time.PeriodType periodType8 = mutablePeriod2.getPeriodType();
        mutablePeriod2.setPeriod((long) 35);
        org.joda.time.Period period12 = org.joda.time.Period.seconds((int) '#');
        int int13 = period12.getMillis();
        org.joda.time.Period period15 = period12.withMillis((int) '#');
        int int16 = period12.size();
        org.joda.time.Period period18 = period12.plusYears((int) 'a');
        org.joda.time.PeriodType periodType20 = org.joda.time.PeriodType.seconds();
        org.joda.time.PeriodType periodType21 = periodType20.withMinutesRemoved();
        org.joda.time.Chronology chronology22 = null;
        org.joda.time.Period period23 = new org.joda.time.Period(100L, periodType20, chronology22);
        int int24 = period23.getSeconds();
        org.joda.time.Period period26 = period23.minusSeconds((int) ' ');
        org.joda.time.format.PeriodPrinter periodPrinter29 = null;
        org.joda.time.format.PeriodParser periodParser30 = null;
        org.joda.time.format.PeriodFormatter periodFormatter31 = new org.joda.time.format.PeriodFormatter(periodPrinter29, periodParser30);
        org.joda.time.format.PeriodPrinter periodPrinter32 = periodFormatter31.getPrinter();
        boolean boolean33 = periodFormatter31.isPrinter();
        org.joda.time.PeriodType periodType34 = org.joda.time.PeriodType.standard();
        org.joda.time.PeriodType periodType35 = periodType34.withMinutesRemoved();
        org.joda.time.PeriodType periodType36 = periodType35.withMillisRemoved();
        org.joda.time.format.PeriodFormatter periodFormatter37 = periodFormatter31.withParseType(periodType35);
        org.joda.time.PeriodType periodType38 = periodType35.withDaysRemoved();
        org.joda.time.Chronology chronology39 = null;
        org.joda.time.MutablePeriod mutablePeriod40 = new org.joda.time.MutablePeriod((-1L), (long) (short) 0, periodType35, chronology39);
        org.joda.time.MutablePeriod mutablePeriod41 = new org.joda.time.MutablePeriod(periodType35);
        org.joda.time.ReadableInstant readableInstant42 = null;
        org.joda.time.ReadableInstant readableInstant43 = null;
        org.joda.time.PeriodType periodType45 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period46 = new org.joda.time.Period(10L, periodType45);
        org.joda.time.MutablePeriod mutablePeriod47 = new org.joda.time.MutablePeriod(readableInstant42, readableInstant43, periodType45);
        java.lang.String str48 = periodType45.toString();
        org.joda.time.DurationFieldType durationFieldType50 = periodType45.getFieldType((int) (byte) 0);
        mutablePeriod41.add(durationFieldType50, 0);
        org.joda.time.Period period54 = period26.withField(durationFieldType50, (int) ' ');
        int int55 = period12.get(durationFieldType50);
        mutablePeriod2.setPeriod((org.joda.time.ReadablePeriod) period12);
        org.joda.time.MutablePeriod mutablePeriod57 = mutablePeriod2.toMutablePeriod();
        org.joda.time.PeriodType periodType62 = null;
        org.joda.time.Chronology chronology63 = null;
        org.joda.time.Period period64 = new org.joda.time.Period(100L, (-2L), periodType62, chronology63);
        org.joda.time.PeriodType periodType65 = period64.getPeriodType();
        org.joda.time.MutablePeriod mutablePeriod66 = new org.joda.time.MutablePeriod((long) 0, (long) (-100), periodType65);
        org.joda.time.MutablePeriod mutablePeriod68 = new org.joda.time.MutablePeriod((long) (short) 100);
        org.joda.time.PeriodType periodType69 = org.joda.time.PeriodType.hours();
        org.joda.time.PeriodType periodType70 = periodType69.withMinutesRemoved();
        org.joda.time.Duration duration72 = org.joda.time.Duration.standardMinutes((-1L));
        long long73 = duration72.getStandardMinutes();
        org.joda.time.Period period74 = duration72.toPeriod();
        org.joda.time.Period period76 = period74.withMonths(0);
        int int77 = period74.size();
        org.joda.time.MutablePeriod mutablePeriod78 = period74.toMutablePeriod();
        org.joda.time.Chronology chronology80 = null;
        org.joda.time.MutablePeriod mutablePeriod81 = new org.joda.time.MutablePeriod(1L, chronology80);
        org.joda.time.Period period83 = org.joda.time.Period.seconds((int) '#');
        mutablePeriod81.setPeriod((org.joda.time.ReadablePeriod) period83);
        org.joda.time.DurationFieldType durationFieldType85 = org.joda.time.DurationFieldType.years();
        java.lang.String str86 = durationFieldType85.getName();
        boolean boolean87 = mutablePeriod81.isSupported(durationFieldType85);
        int int88 = mutablePeriod78.get(durationFieldType85);
        boolean boolean89 = periodType69.isSupported(durationFieldType85);
        int int90 = mutablePeriod68.get(durationFieldType85);
        java.lang.String str91 = durationFieldType85.toString();
        org.joda.time.Chronology chronology92 = null;
        boolean boolean93 = durationFieldType85.isSupported(chronology92);
        boolean boolean94 = periodType65.isSupported(durationFieldType85);
        mutablePeriod2.add(durationFieldType85, 864000);
        org.joda.time.Chronology chronology97 = null;
        org.joda.time.DurationField durationField98 = durationFieldType85.getField(chronology97);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(periodType8);
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(period15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 8 + "'", int16 == 8);
        org.junit.Assert.assertNotNull(period18);
        org.junit.Assert.assertNotNull(periodType20);
        org.junit.Assert.assertNotNull(periodType21);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNotNull(period26);
        org.junit.Assert.assertNull(periodPrinter32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(periodType34);
        org.junit.Assert.assertNotNull(periodType35);
        org.junit.Assert.assertNotNull(periodType36);
        org.junit.Assert.assertNotNull(periodFormatter37);
        org.junit.Assert.assertNotNull(periodType38);
        org.junit.Assert.assertNotNull(periodType45);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "PeriodType[Seconds]" + "'", str48, "PeriodType[Seconds]");
        org.junit.Assert.assertNotNull(durationFieldType50);
        org.junit.Assert.assertNotNull(period54);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 35 + "'", int55 == 35);
        org.junit.Assert.assertNotNull(mutablePeriod57);
        org.junit.Assert.assertNotNull(periodType65);
        org.junit.Assert.assertNotNull(periodType69);
        org.junit.Assert.assertNotNull(periodType70);
        org.junit.Assert.assertNotNull(duration72);
        org.junit.Assert.assertTrue("'" + long73 + "' != '" + (-1L) + "'", long73 == (-1L));
        org.junit.Assert.assertNotNull(period74);
        org.junit.Assert.assertNotNull(period76);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 8 + "'", int77 == 8);
        org.junit.Assert.assertNotNull(mutablePeriod78);
        org.junit.Assert.assertNotNull(period83);
        org.junit.Assert.assertNotNull(durationFieldType85);
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "years" + "'", str86, "years");
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + 0 + "'", int88 == 0);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + 0 + "'", int90 == 0);
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + "years" + "'", str91, "years");
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + true + "'", boolean93 == true);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + true + "'", boolean94 == true);
        org.junit.Assert.assertNotNull(durationField98);
    }

    @Test
    public void test17530() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17530");
        org.joda.time.ReadableInstant readableInstant2 = null;
        org.joda.time.Duration duration4 = org.joda.time.Duration.standardMinutes((-1L));
        long long5 = duration4.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant6 = null;
        org.joda.time.Period period7 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration4, readableInstant6);
        org.joda.time.PeriodType periodType8 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology9 = null;
        org.joda.time.Period period10 = duration4.toPeriod(periodType8, chronology9);
        org.joda.time.Duration duration13 = duration4.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration15 = org.joda.time.Duration.standardHours((long) 10);
        org.joda.time.Duration duration17 = org.joda.time.Duration.standardMinutes((-1L));
        long long18 = duration17.getStandardMinutes();
        org.joda.time.Duration duration20 = org.joda.time.Duration.standardMinutes((-1L));
        long long21 = duration20.getStandardMinutes();
        boolean boolean22 = duration17.isLongerThan((org.joda.time.ReadableDuration) duration20);
        org.joda.time.Period period23 = duration20.toPeriod();
        org.joda.time.Minutes minutes24 = duration20.toStandardMinutes();
        boolean boolean25 = duration15.isEqual((org.joda.time.ReadableDuration) duration20);
        boolean boolean26 = duration4.isShorterThan((org.joda.time.ReadableDuration) duration15);
        org.joda.time.Duration duration28 = org.joda.time.Duration.standardMinutes((-1L));
        long long29 = duration28.getStandardMinutes();
        org.joda.time.Period period30 = duration28.toPeriod();
        org.joda.time.Duration duration32 = org.joda.time.Duration.standardMinutes((-1L));
        long long33 = duration32.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant34 = null;
        org.joda.time.Period period35 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration32, readableInstant34);
        org.joda.time.PeriodType periodType36 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology37 = null;
        org.joda.time.Period period38 = duration32.toPeriod(periodType36, chronology37);
        org.joda.time.Period period39 = duration28.toPeriod(periodType36);
        org.joda.time.Duration duration41 = org.joda.time.Duration.standardMinutes((-1L));
        long long42 = duration41.getStandardMinutes();
        boolean boolean43 = duration28.isLongerThan((org.joda.time.ReadableDuration) duration41);
        org.joda.time.Duration duration45 = org.joda.time.Duration.standardMinutes((-1L));
        long long46 = duration45.getStandardMinutes();
        org.joda.time.Duration duration48 = org.joda.time.Duration.standardMinutes((-1L));
        long long49 = duration48.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant50 = null;
        org.joda.time.Period period51 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration48, readableInstant50);
        org.joda.time.PeriodType periodType52 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology53 = null;
        org.joda.time.Period period54 = duration48.toPeriod(periodType52, chronology53);
        org.joda.time.Duration duration55 = duration48.toDuration();
        org.joda.time.Duration duration57 = duration45.withDurationAdded((org.joda.time.ReadableDuration) duration55, 100);
        int int58 = duration41.compareTo((org.joda.time.ReadableDuration) duration57);
        org.joda.time.Duration duration59 = duration41.toDuration();
        java.lang.String str60 = duration59.toString();
        boolean boolean61 = duration15.equals((java.lang.Object) str60);
        long long62 = duration15.getStandardHours();
        org.joda.time.ReadableInstant readableInstant63 = null;
        org.joda.time.Period period64 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration15, readableInstant63);
        org.joda.time.Chronology chronology66 = null;
        org.joda.time.MutablePeriod mutablePeriod67 = new org.joda.time.MutablePeriod(1L, chronology66);
        org.joda.time.Chronology chronology69 = null;
        org.joda.time.MutablePeriod mutablePeriod70 = new org.joda.time.MutablePeriod(1L, chronology69);
        mutablePeriod67.add((org.joda.time.ReadablePeriod) mutablePeriod70);
        org.joda.time.Duration duration73 = org.joda.time.Duration.standardMinutes((-1L));
        long long74 = duration73.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant75 = null;
        org.joda.time.Period period76 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration73, readableInstant75);
        mutablePeriod70.setPeriod((org.joda.time.ReadablePeriod) period76);
        org.joda.time.PeriodType periodType78 = mutablePeriod70.getPeriodType();
        org.joda.time.MutablePeriod mutablePeriod79 = new org.joda.time.MutablePeriod(readableInstant2, (org.joda.time.ReadableDuration) duration15, periodType78);
        org.joda.time.MutablePeriod mutablePeriod80 = new org.joda.time.MutablePeriod((-2L), (long) 35, periodType78);
        org.joda.time.MutablePeriod mutablePeriod81 = mutablePeriod80.copy();
        mutablePeriod81.setWeeks((int) 'a');
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + (-1L) + "'", long5 == (-1L));
        org.junit.Assert.assertNotNull(periodType8);
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertNotNull(duration15);
        org.junit.Assert.assertNotNull(duration17);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + (-1L) + "'", long18 == (-1L));
        org.junit.Assert.assertNotNull(duration20);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + (-1L) + "'", long21 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(period23);
        org.junit.Assert.assertNotNull(minutes24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(duration28);
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + (-1L) + "'", long29 == (-1L));
        org.junit.Assert.assertNotNull(period30);
        org.junit.Assert.assertNotNull(duration32);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + (-1L) + "'", long33 == (-1L));
        org.junit.Assert.assertNotNull(periodType36);
        org.junit.Assert.assertNotNull(period38);
        org.junit.Assert.assertNotNull(period39);
        org.junit.Assert.assertNotNull(duration41);
        org.junit.Assert.assertTrue("'" + long42 + "' != '" + (-1L) + "'", long42 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(duration45);
        org.junit.Assert.assertTrue("'" + long46 + "' != '" + (-1L) + "'", long46 == (-1L));
        org.junit.Assert.assertNotNull(duration48);
        org.junit.Assert.assertTrue("'" + long49 + "' != '" + (-1L) + "'", long49 == (-1L));
        org.junit.Assert.assertNotNull(periodType52);
        org.junit.Assert.assertNotNull(period54);
        org.junit.Assert.assertNotNull(duration55);
        org.junit.Assert.assertNotNull(duration57);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 1 + "'", int58 == 1);
        org.junit.Assert.assertNotNull(duration59);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "PT-60S" + "'", str60, "PT-60S");
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + long62 + "' != '" + 10L + "'", long62 == 10L);
        org.junit.Assert.assertNotNull(duration73);
        org.junit.Assert.assertTrue("'" + long74 + "' != '" + (-1L) + "'", long74 == (-1L));
        org.junit.Assert.assertNotNull(periodType78);
        org.junit.Assert.assertNotNull(mutablePeriod81);
    }

    @Test
    public void test17531() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17531");
        org.joda.time.MutablePeriod mutablePeriod4 = new org.joda.time.MutablePeriod((-60), 7, 100, 5);
        int int5 = mutablePeriod4.getWeeks();
        mutablePeriod4.add((int) ' ', (-32), 1, (-23), (-100), (-17), (int) ' ', (int) (byte) -1);
        org.joda.time.ReadableInstant readableInstant15 = null;
        org.joda.time.ReadableInstant readableInstant16 = null;
        mutablePeriod4.setPeriod(readableInstant15, readableInstant16);
        mutablePeriod4.setMonths(23);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
    }

    @Test
    public void test17532() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17532");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.Duration duration2 = org.joda.time.Duration.standardMinutes((-1L));
        long long3 = duration2.getStandardMinutes();
        org.joda.time.Duration duration5 = org.joda.time.Duration.standardMinutes((-1L));
        long long6 = duration5.getStandardMinutes();
        boolean boolean7 = duration2.isLongerThan((org.joda.time.ReadableDuration) duration5);
        org.joda.time.Duration duration9 = duration5.withMillis(1L);
        org.joda.time.Period period10 = new org.joda.time.Period(readableInstant0, (org.joda.time.ReadableDuration) duration5);
        org.joda.time.Days days11 = period10.toStandardDays();
        org.joda.time.Period period13 = period10.multipliedBy((int) (short) -1);
        org.joda.time.Period period15 = period10.plusMonths((int) (byte) 0);
        org.joda.time.Chronology chronology17 = null;
        org.joda.time.MutablePeriod mutablePeriod18 = new org.joda.time.MutablePeriod(1L, chronology17);
        org.joda.time.Chronology chronology20 = null;
        org.joda.time.MutablePeriod mutablePeriod21 = new org.joda.time.MutablePeriod(1L, chronology20);
        mutablePeriod18.add((org.joda.time.ReadablePeriod) mutablePeriod21);
        org.joda.time.PeriodType periodType23 = mutablePeriod21.getPeriodType();
        org.joda.time.MutablePeriod mutablePeriod24 = new org.joda.time.MutablePeriod((java.lang.Object) period15, periodType23);
        mutablePeriod24.clear();
        org.joda.time.Period period26 = mutablePeriod24.toPeriod();
        org.joda.time.Period period28 = period26.minusMonths(32);
        int int29 = period26.getDays();
        java.lang.String str30 = period26.toString();
        org.junit.Assert.assertNotNull(duration2);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + (-1L) + "'", long3 == (-1L));
        org.junit.Assert.assertNotNull(duration5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertNotNull(days11);
        org.junit.Assert.assertNotNull(period13);
        org.junit.Assert.assertNotNull(period15);
        org.junit.Assert.assertNotNull(periodType23);
        org.junit.Assert.assertNotNull(period26);
        org.junit.Assert.assertNotNull(period28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "PT0S" + "'", str30, "PT0S");
    }

    @Test
    public void test17533() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17533");
        org.joda.time.MutablePeriod mutablePeriod4 = new org.joda.time.MutablePeriod((int) (short) 0, (int) 'a', (int) (byte) -1, 97);
        org.joda.time.MutablePeriod mutablePeriod5 = new org.joda.time.MutablePeriod((java.lang.Object) mutablePeriod4);
        mutablePeriod5.setSeconds(101);
        mutablePeriod5.addDays((-818));
        mutablePeriod5.setPeriod(0, (-900), 52, (int) (byte) 100, (-2764800), 92, (int) (byte) 0, 68);
    }

    @Test
    public void test17534() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17534");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.Duration duration2 = org.joda.time.Duration.standardMinutes((-1L));
        long long3 = duration2.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant4 = null;
        org.joda.time.Period period5 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration2, readableInstant4);
        org.joda.time.PeriodType periodType6 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology7 = null;
        org.joda.time.Period period8 = duration2.toPeriod(periodType6, chronology7);
        org.joda.time.Duration duration11 = duration2.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration13 = org.joda.time.Duration.standardHours((long) 10);
        org.joda.time.Duration duration15 = org.joda.time.Duration.standardMinutes((-1L));
        long long16 = duration15.getStandardMinutes();
        org.joda.time.Duration duration18 = org.joda.time.Duration.standardMinutes((-1L));
        long long19 = duration18.getStandardMinutes();
        boolean boolean20 = duration15.isLongerThan((org.joda.time.ReadableDuration) duration18);
        org.joda.time.Period period21 = duration18.toPeriod();
        org.joda.time.Minutes minutes22 = duration18.toStandardMinutes();
        boolean boolean23 = duration13.isEqual((org.joda.time.ReadableDuration) duration18);
        boolean boolean24 = duration2.isShorterThan((org.joda.time.ReadableDuration) duration13);
        org.joda.time.Minutes minutes25 = duration2.toStandardMinutes();
        org.joda.time.ReadableInstant readableInstant26 = null;
        org.joda.time.MutablePeriod mutablePeriod27 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration2, readableInstant26);
        org.joda.time.Minutes minutes28 = duration2.toStandardMinutes();
        org.joda.time.MutablePeriod mutablePeriod30 = new org.joda.time.MutablePeriod((long) (short) 100);
        org.joda.time.Duration duration32 = org.joda.time.Duration.standardMinutes((-1L));
        long long33 = duration32.getStandardMinutes();
        org.joda.time.Duration duration35 = org.joda.time.Duration.standardMinutes((-1L));
        long long36 = duration35.getStandardMinutes();
        boolean boolean37 = duration32.isLongerThan((org.joda.time.ReadableDuration) duration35);
        org.joda.time.Duration duration39 = duration35.withMillis((long) 1);
        org.joda.time.Chronology chronology41 = null;
        org.joda.time.MutablePeriod mutablePeriod42 = new org.joda.time.MutablePeriod(1L, chronology41);
        org.joda.time.Chronology chronology44 = null;
        org.joda.time.MutablePeriod mutablePeriod45 = new org.joda.time.MutablePeriod(1L, chronology44);
        mutablePeriod42.add((org.joda.time.ReadablePeriod) mutablePeriod45);
        boolean boolean47 = duration39.equals((java.lang.Object) mutablePeriod45);
        org.joda.time.Duration duration49 = duration39.minus(0L);
        org.joda.time.Chronology chronology50 = null;
        mutablePeriod30.setPeriod((org.joda.time.ReadableDuration) duration39, chronology50);
        org.joda.time.Duration duration53 = org.joda.time.Duration.standardMinutes((-1L));
        long long54 = duration53.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant55 = null;
        org.joda.time.Period period56 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration53, readableInstant55);
        org.joda.time.Duration duration58 = org.joda.time.Duration.standardMinutes((-1L));
        long long59 = duration58.getStandardMinutes();
        org.joda.time.Period period60 = duration58.toPeriod();
        boolean boolean61 = duration53.isLongerThan((org.joda.time.ReadableDuration) duration58);
        org.joda.time.ReadableInstant readableInstant62 = null;
        org.joda.time.PeriodType periodType65 = org.joda.time.PeriodType.seconds();
        org.joda.time.PeriodType periodType66 = periodType65.withMinutesRemoved();
        org.joda.time.Chronology chronology67 = null;
        org.joda.time.MutablePeriod mutablePeriod68 = new org.joda.time.MutablePeriod((long) 0, (long) (short) 100, periodType65, chronology67);
        org.joda.time.PeriodType periodType69 = periodType65.withMillisRemoved();
        org.joda.time.Period period70 = duration53.toPeriodTo(readableInstant62, periodType69);
        org.joda.time.Duration duration71 = duration39.minus((org.joda.time.ReadableDuration) duration53);
        boolean boolean72 = duration2.isShorterThan((org.joda.time.ReadableDuration) duration71);
        org.joda.time.MutablePeriod mutablePeriod73 = new org.joda.time.MutablePeriod(readableInstant0, (org.joda.time.ReadableDuration) duration2);
        org.joda.time.MutablePeriod mutablePeriod74 = mutablePeriod73.toMutablePeriod();
        org.junit.Assert.assertNotNull(duration2);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + (-1L) + "'", long3 == (-1L));
        org.junit.Assert.assertNotNull(periodType6);
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertNotNull(duration15);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + (-1L) + "'", long16 == (-1L));
        org.junit.Assert.assertNotNull(duration18);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + (-1L) + "'", long19 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertNotNull(minutes22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(minutes25);
        org.junit.Assert.assertNotNull(minutes28);
        org.junit.Assert.assertNotNull(duration32);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + (-1L) + "'", long33 == (-1L));
        org.junit.Assert.assertNotNull(duration35);
        org.junit.Assert.assertTrue("'" + long36 + "' != '" + (-1L) + "'", long36 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(duration39);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(duration49);
        org.junit.Assert.assertNotNull(duration53);
        org.junit.Assert.assertTrue("'" + long54 + "' != '" + (-1L) + "'", long54 == (-1L));
        org.junit.Assert.assertNotNull(duration58);
        org.junit.Assert.assertTrue("'" + long59 + "' != '" + (-1L) + "'", long59 == (-1L));
        org.junit.Assert.assertNotNull(period60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(periodType65);
        org.junit.Assert.assertNotNull(periodType66);
        org.junit.Assert.assertNotNull(periodType69);
        org.junit.Assert.assertNotNull(period70);
        org.junit.Assert.assertNotNull(duration71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(mutablePeriod74);
    }

    @Test
    public void test17535() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17535");
        org.joda.time.Period period1 = org.joda.time.Period.weeks(100);
        org.joda.time.Period period3 = period1.withDays(1);
        int int4 = period3.getMillis();
        org.joda.time.Duration duration5 = period3.toStandardDuration();
        org.joda.time.ReadableInstant readableInstant6 = null;
        org.joda.time.Duration duration8 = org.joda.time.Duration.standardMinutes((-1L));
        long long9 = duration8.getStandardMinutes();
        org.joda.time.Period period10 = duration8.toPeriod();
        org.joda.time.Duration duration12 = org.joda.time.Duration.standardMinutes((-1L));
        long long13 = duration12.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant14 = null;
        org.joda.time.Period period15 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration12, readableInstant14);
        org.joda.time.PeriodType periodType16 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology17 = null;
        org.joda.time.Period period18 = duration12.toPeriod(periodType16, chronology17);
        org.joda.time.Period period19 = duration8.toPeriod(periodType16);
        org.joda.time.Duration duration21 = org.joda.time.Duration.standardMinutes((-1L));
        long long22 = duration21.getStandardMinutes();
        boolean boolean23 = duration8.isLongerThan((org.joda.time.ReadableDuration) duration21);
        org.joda.time.Duration duration25 = org.joda.time.Duration.standardMinutes((-1L));
        long long26 = duration25.getStandardMinutes();
        org.joda.time.Duration duration28 = org.joda.time.Duration.standardMinutes((-1L));
        long long29 = duration28.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant30 = null;
        org.joda.time.Period period31 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration28, readableInstant30);
        org.joda.time.PeriodType periodType32 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology33 = null;
        org.joda.time.Period period34 = duration28.toPeriod(periodType32, chronology33);
        org.joda.time.Duration duration35 = duration28.toDuration();
        org.joda.time.Duration duration37 = duration25.withDurationAdded((org.joda.time.ReadableDuration) duration35, 100);
        int int38 = duration21.compareTo((org.joda.time.ReadableDuration) duration37);
        org.joda.time.Duration duration39 = duration21.toDuration();
        org.joda.time.Duration duration41 = org.joda.time.Duration.standardMinutes((-1L));
        long long42 = duration41.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant43 = null;
        org.joda.time.Period period44 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration41, readableInstant43);
        org.joda.time.PeriodType periodType45 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology46 = null;
        org.joda.time.Period period47 = duration41.toPeriod(periodType45, chronology46);
        org.joda.time.Duration duration50 = duration41.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.ReadableInstant readableInstant51 = null;
        org.joda.time.ReadableInstant readableInstant52 = null;
        org.joda.time.Duration duration54 = org.joda.time.Duration.standardMinutes((-1L));
        long long55 = duration54.getStandardMinutes();
        org.joda.time.Period period56 = duration54.toPeriod();
        org.joda.time.Duration duration58 = org.joda.time.Duration.standardMinutes((-1L));
        long long59 = duration58.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant60 = null;
        org.joda.time.Period period61 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration58, readableInstant60);
        org.joda.time.PeriodType periodType62 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology63 = null;
        org.joda.time.Period period64 = duration58.toPeriod(periodType62, chronology63);
        org.joda.time.Period period65 = duration54.toPeriod(periodType62);
        org.joda.time.MutablePeriod mutablePeriod66 = new org.joda.time.MutablePeriod(readableInstant51, readableInstant52, periodType62);
        org.joda.time.Chronology chronology67 = null;
        org.joda.time.Period period68 = duration41.toPeriod(periodType62, chronology67);
        org.joda.time.Period period69 = new org.joda.time.Period(readableInstant6, (org.joda.time.ReadableDuration) duration21, periodType62);
        long long70 = duration21.getStandardDays();
        boolean boolean71 = duration5.isEqual((org.joda.time.ReadableDuration) duration21);
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(period3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(duration5);
        org.junit.Assert.assertNotNull(duration8);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + (-1L) + "'", long9 == (-1L));
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + (-1L) + "'", long13 == (-1L));
        org.junit.Assert.assertNotNull(periodType16);
        org.junit.Assert.assertNotNull(period18);
        org.junit.Assert.assertNotNull(period19);
        org.junit.Assert.assertNotNull(duration21);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + (-1L) + "'", long22 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(duration25);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + (-1L) + "'", long26 == (-1L));
        org.junit.Assert.assertNotNull(duration28);
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + (-1L) + "'", long29 == (-1L));
        org.junit.Assert.assertNotNull(periodType32);
        org.junit.Assert.assertNotNull(period34);
        org.junit.Assert.assertNotNull(duration35);
        org.junit.Assert.assertNotNull(duration37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 1 + "'", int38 == 1);
        org.junit.Assert.assertNotNull(duration39);
        org.junit.Assert.assertNotNull(duration41);
        org.junit.Assert.assertTrue("'" + long42 + "' != '" + (-1L) + "'", long42 == (-1L));
        org.junit.Assert.assertNotNull(periodType45);
        org.junit.Assert.assertNotNull(period47);
        org.junit.Assert.assertNotNull(duration50);
        org.junit.Assert.assertNotNull(duration54);
        org.junit.Assert.assertTrue("'" + long55 + "' != '" + (-1L) + "'", long55 == (-1L));
        org.junit.Assert.assertNotNull(period56);
        org.junit.Assert.assertNotNull(duration58);
        org.junit.Assert.assertTrue("'" + long59 + "' != '" + (-1L) + "'", long59 == (-1L));
        org.junit.Assert.assertNotNull(periodType62);
        org.junit.Assert.assertNotNull(period64);
        org.junit.Assert.assertNotNull(period65);
        org.junit.Assert.assertNotNull(period68);
        org.junit.Assert.assertTrue("'" + long70 + "' != '" + 0L + "'", long70 == 0L);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
    }

    @Test
    public void test17536() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17536");
        org.joda.time.MutablePeriod mutablePeriod0 = new org.joda.time.MutablePeriod();
        int int1 = mutablePeriod0.getMonths();
        mutablePeriod0.setMinutes((int) 'a');
        mutablePeriod0.setMonths(35);
        int int6 = mutablePeriod0.getMillis();
        mutablePeriod0.addYears(100);
        org.joda.time.Chronology chronology10 = null;
        mutablePeriod0.add(136598340000L, chronology10);
        mutablePeriod0.setValue(4, 12);
        org.joda.time.Duration duration16 = org.joda.time.Duration.standardMinutes((-1L));
        long long17 = duration16.getStandardMinutes();
        org.joda.time.Duration duration19 = org.joda.time.Duration.standardMinutes((-1L));
        long long20 = duration19.getStandardMinutes();
        boolean boolean21 = duration16.isLongerThan((org.joda.time.ReadableDuration) duration19);
        org.joda.time.Period period22 = duration19.toPeriod();
        org.joda.time.Minutes minutes23 = duration19.toStandardMinutes();
        org.joda.time.ReadableDuration readableDuration24 = null;
        boolean boolean25 = duration19.isEqual(readableDuration24);
        org.joda.time.ReadableInstant readableInstant26 = null;
        org.joda.time.PeriodType periodType27 = org.joda.time.PeriodType.dayTime();
        org.joda.time.DurationFieldType durationFieldType28 = org.joda.time.DurationFieldType.days();
        int int29 = periodType27.indexOf(durationFieldType28);
        org.joda.time.Period period30 = duration19.toPeriodFrom(readableInstant26, periodType27);
        org.joda.time.Period period32 = period30.minusMillis((int) (short) 1);
        org.joda.time.Period period34 = period32.withHours(3);
        mutablePeriod0.setPeriod((org.joda.time.ReadablePeriod) period32);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(duration16);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + (-1L) + "'", long17 == (-1L));
        org.junit.Assert.assertNotNull(duration19);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + (-1L) + "'", long20 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(period22);
        org.junit.Assert.assertNotNull(minutes23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(periodType27);
        org.junit.Assert.assertNotNull(durationFieldType28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNotNull(period30);
        org.junit.Assert.assertNotNull(period32);
        org.junit.Assert.assertNotNull(period34);
    }

    @Test
    public void test17537() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17537");
        org.joda.time.Period period1 = org.joda.time.Period.minutes((int) (short) 0);
        org.joda.time.Period period3 = period1.minusDays((int) (byte) 10);
        org.joda.time.Period period5 = period3.withYears((int) (short) 10);
        org.joda.time.MutablePeriod mutablePeriod6 = period5.toMutablePeriod();
        org.joda.time.Period period8 = period5.plusMonths(2);
        org.joda.time.Period period9 = period5.toPeriod();
        org.joda.time.Period period11 = period5.minusDays((-1));
        org.joda.time.ReadableInstant readableInstant16 = null;
        org.joda.time.ReadableInstant readableInstant17 = null;
        org.joda.time.PeriodType periodType19 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period20 = new org.joda.time.Period(10L, periodType19);
        org.joda.time.MutablePeriod mutablePeriod21 = new org.joda.time.MutablePeriod(readableInstant16, readableInstant17, periodType19);
        java.lang.String str22 = periodType19.toString();
        org.joda.time.DurationFieldType durationFieldType24 = periodType19.getFieldType((int) (byte) 0);
        org.joda.time.Chronology chronology25 = null;
        org.joda.time.Period period26 = new org.joda.time.Period((-59909L), (-120L), periodType19, chronology25);
        org.joda.time.Chronology chronology27 = null;
        org.joda.time.MutablePeriod mutablePeriod28 = new org.joda.time.MutablePeriod((long) 2, 0L, periodType19, chronology27);
        org.joda.time.ReadableInstant readableInstant29 = null;
        org.joda.time.ReadableInstant readableInstant30 = null;
        org.joda.time.Duration duration32 = org.joda.time.Duration.standardMinutes((-1L));
        long long33 = duration32.getStandardMinutes();
        org.joda.time.Period period34 = duration32.toPeriod();
        org.joda.time.Duration duration36 = org.joda.time.Duration.standardMinutes((-1L));
        long long37 = duration36.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant38 = null;
        org.joda.time.Period period39 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration36, readableInstant38);
        org.joda.time.PeriodType periodType40 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology41 = null;
        org.joda.time.Period period42 = duration36.toPeriod(periodType40, chronology41);
        org.joda.time.Period period43 = duration32.toPeriod(periodType40);
        org.joda.time.MutablePeriod mutablePeriod44 = new org.joda.time.MutablePeriod(readableInstant29, readableInstant30, periodType40);
        boolean boolean45 = mutablePeriod28.equals((java.lang.Object) mutablePeriod44);
        boolean boolean46 = period5.equals((java.lang.Object) mutablePeriod44);
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(period3);
        org.junit.Assert.assertNotNull(period5);
        org.junit.Assert.assertNotNull(mutablePeriod6);
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(periodType19);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "PeriodType[Seconds]" + "'", str22, "PeriodType[Seconds]");
        org.junit.Assert.assertNotNull(durationFieldType24);
        org.junit.Assert.assertNotNull(duration32);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + (-1L) + "'", long33 == (-1L));
        org.junit.Assert.assertNotNull(period34);
        org.junit.Assert.assertNotNull(duration36);
        org.junit.Assert.assertTrue("'" + long37 + "' != '" + (-1L) + "'", long37 == (-1L));
        org.junit.Assert.assertNotNull(periodType40);
        org.junit.Assert.assertNotNull(period42);
        org.junit.Assert.assertNotNull(period43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
    }

    @Test
    public void test17538() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17538");
        org.joda.time.format.PeriodPrinter periodPrinter0 = null;
        org.joda.time.format.PeriodParser periodParser1 = null;
        org.joda.time.format.PeriodFormatter periodFormatter2 = new org.joda.time.format.PeriodFormatter(periodPrinter0, periodParser1);
        org.joda.time.format.PeriodPrinter periodPrinter3 = periodFormatter2.getPrinter();
        org.joda.time.Chronology chronology5 = null;
        org.joda.time.MutablePeriod mutablePeriod6 = new org.joda.time.MutablePeriod(1L, chronology5);
        org.joda.time.Period period8 = org.joda.time.Period.seconds((int) '#');
        mutablePeriod6.setPeriod((org.joda.time.ReadablePeriod) period8);
        mutablePeriod6.addMillis((int) (short) 1);
        mutablePeriod6.setPeriod(8, (int) (byte) -1, 1, (int) (byte) 10, (int) (byte) -1, (int) (short) -1, 10, (int) (byte) -1);
        org.joda.time.PeriodType periodType21 = mutablePeriod6.getPeriodType();
        org.joda.time.PeriodType periodType22 = periodType21.withMillisRemoved();
        org.joda.time.format.PeriodFormatter periodFormatter23 = periodFormatter2.withParseType(periodType22);
        boolean boolean24 = periodFormatter2.isParser();
        java.util.Locale locale25 = null;
        org.joda.time.format.PeriodFormatter periodFormatter26 = periodFormatter2.withLocale(locale25);
        org.joda.time.PeriodType periodType27 = periodFormatter26.getParseType();
        java.util.Locale locale28 = periodFormatter26.getLocale();
        org.junit.Assert.assertNull(periodPrinter3);
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertNotNull(periodType21);
        org.junit.Assert.assertNotNull(periodType22);
        org.junit.Assert.assertNotNull(periodFormatter23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(periodFormatter26);
        org.junit.Assert.assertNull(periodType27);
        org.junit.Assert.assertNull(locale28);
    }

    @Test
    public void test17539() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17539");
        org.joda.time.Period period1 = org.joda.time.Period.seconds((int) '#');
        int int2 = period1.getMillis();
        org.joda.time.DurationFieldType durationFieldType3 = org.joda.time.DurationFieldType.years();
        org.joda.time.Period period5 = period1.withField(durationFieldType3, (int) (short) 10);
        org.joda.time.Period period6 = new org.joda.time.Period((java.lang.Object) period5);
        int int7 = period6.getDays();
        org.joda.time.Period period9 = period6.plusDays((int) (byte) 10);
        org.joda.time.Period period11 = period9.withDays((int) (short) 1);
        org.joda.time.Period period13 = org.joda.time.Period.seconds((int) '#');
        int int14 = period13.getMillis();
        org.joda.time.DurationFieldType durationFieldType15 = org.joda.time.DurationFieldType.years();
        org.joda.time.Period period17 = period13.withField(durationFieldType15, (int) (short) 10);
        org.joda.time.Period period18 = new org.joda.time.Period((java.lang.Object) period17);
        int int19 = period18.getDays();
        org.joda.time.Period period20 = period11.plus((org.joda.time.ReadablePeriod) period18);
        org.joda.time.Period period21 = period18.negated();
        org.joda.time.Period period23 = period21.minusMonths(34);
        int int24 = period21.size();
        org.joda.time.Period period25 = period21.toPeriod();
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(durationFieldType3);
        org.junit.Assert.assertNotNull(period5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(period13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(durationFieldType15);
        org.junit.Assert.assertNotNull(period17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(period20);
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertNotNull(period23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 8 + "'", int24 == 8);
        org.junit.Assert.assertNotNull(period25);
    }

    @Test
    public void test17540() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17540");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableInstant readableInstant1 = null;
        org.joda.time.ReadableInstant readableInstant4 = null;
        org.joda.time.Duration duration6 = org.joda.time.Duration.standardMinutes((-1L));
        long long7 = duration6.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.Period period9 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration6, readableInstant8);
        org.joda.time.PeriodType periodType10 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology11 = null;
        org.joda.time.Period period12 = duration6.toPeriod(periodType10, chronology11);
        org.joda.time.Duration duration15 = duration6.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration17 = org.joda.time.Duration.standardHours((long) 10);
        org.joda.time.Duration duration19 = org.joda.time.Duration.standardMinutes((-1L));
        long long20 = duration19.getStandardMinutes();
        org.joda.time.Duration duration22 = org.joda.time.Duration.standardMinutes((-1L));
        long long23 = duration22.getStandardMinutes();
        boolean boolean24 = duration19.isLongerThan((org.joda.time.ReadableDuration) duration22);
        org.joda.time.Period period25 = duration22.toPeriod();
        org.joda.time.Minutes minutes26 = duration22.toStandardMinutes();
        boolean boolean27 = duration17.isEqual((org.joda.time.ReadableDuration) duration22);
        boolean boolean28 = duration6.isShorterThan((org.joda.time.ReadableDuration) duration17);
        org.joda.time.Duration duration30 = org.joda.time.Duration.standardMinutes((-1L));
        long long31 = duration30.getStandardMinutes();
        org.joda.time.Period period32 = duration30.toPeriod();
        org.joda.time.Duration duration34 = org.joda.time.Duration.standardMinutes((-1L));
        long long35 = duration34.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant36 = null;
        org.joda.time.Period period37 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration34, readableInstant36);
        org.joda.time.PeriodType periodType38 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology39 = null;
        org.joda.time.Period period40 = duration34.toPeriod(periodType38, chronology39);
        org.joda.time.Period period41 = duration30.toPeriod(periodType38);
        org.joda.time.Duration duration43 = org.joda.time.Duration.standardMinutes((-1L));
        long long44 = duration43.getStandardMinutes();
        boolean boolean45 = duration30.isLongerThan((org.joda.time.ReadableDuration) duration43);
        org.joda.time.Duration duration47 = org.joda.time.Duration.standardMinutes((-1L));
        long long48 = duration47.getStandardMinutes();
        org.joda.time.Duration duration50 = org.joda.time.Duration.standardMinutes((-1L));
        long long51 = duration50.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant52 = null;
        org.joda.time.Period period53 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration50, readableInstant52);
        org.joda.time.PeriodType periodType54 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology55 = null;
        org.joda.time.Period period56 = duration50.toPeriod(periodType54, chronology55);
        org.joda.time.Duration duration57 = duration50.toDuration();
        org.joda.time.Duration duration59 = duration47.withDurationAdded((org.joda.time.ReadableDuration) duration57, 100);
        int int60 = duration43.compareTo((org.joda.time.ReadableDuration) duration59);
        org.joda.time.Duration duration61 = duration43.toDuration();
        java.lang.String str62 = duration61.toString();
        boolean boolean63 = duration17.equals((java.lang.Object) str62);
        long long64 = duration17.getStandardHours();
        org.joda.time.ReadableInstant readableInstant65 = null;
        org.joda.time.Period period66 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration17, readableInstant65);
        org.joda.time.Chronology chronology68 = null;
        org.joda.time.MutablePeriod mutablePeriod69 = new org.joda.time.MutablePeriod(1L, chronology68);
        org.joda.time.Chronology chronology71 = null;
        org.joda.time.MutablePeriod mutablePeriod72 = new org.joda.time.MutablePeriod(1L, chronology71);
        mutablePeriod69.add((org.joda.time.ReadablePeriod) mutablePeriod72);
        org.joda.time.Duration duration75 = org.joda.time.Duration.standardMinutes((-1L));
        long long76 = duration75.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant77 = null;
        org.joda.time.Period period78 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration75, readableInstant77);
        mutablePeriod72.setPeriod((org.joda.time.ReadablePeriod) period78);
        org.joda.time.PeriodType periodType80 = mutablePeriod72.getPeriodType();
        org.joda.time.MutablePeriod mutablePeriod81 = new org.joda.time.MutablePeriod(readableInstant4, (org.joda.time.ReadableDuration) duration17, periodType80);
        org.joda.time.MutablePeriod mutablePeriod82 = new org.joda.time.MutablePeriod((-2L), (long) 35, periodType80);
        org.joda.time.MutablePeriod mutablePeriod83 = new org.joda.time.MutablePeriod(readableInstant0, readableInstant1, periodType80);
        mutablePeriod83.addMillis((-9));
        org.junit.Assert.assertNotNull(duration6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(periodType10);
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertNotNull(duration15);
        org.junit.Assert.assertNotNull(duration17);
        org.junit.Assert.assertNotNull(duration19);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + (-1L) + "'", long20 == (-1L));
        org.junit.Assert.assertNotNull(duration22);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + (-1L) + "'", long23 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(period25);
        org.junit.Assert.assertNotNull(minutes26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(duration30);
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + (-1L) + "'", long31 == (-1L));
        org.junit.Assert.assertNotNull(period32);
        org.junit.Assert.assertNotNull(duration34);
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + (-1L) + "'", long35 == (-1L));
        org.junit.Assert.assertNotNull(periodType38);
        org.junit.Assert.assertNotNull(period40);
        org.junit.Assert.assertNotNull(period41);
        org.junit.Assert.assertNotNull(duration43);
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + (-1L) + "'", long44 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(duration47);
        org.junit.Assert.assertTrue("'" + long48 + "' != '" + (-1L) + "'", long48 == (-1L));
        org.junit.Assert.assertNotNull(duration50);
        org.junit.Assert.assertTrue("'" + long51 + "' != '" + (-1L) + "'", long51 == (-1L));
        org.junit.Assert.assertNotNull(periodType54);
        org.junit.Assert.assertNotNull(period56);
        org.junit.Assert.assertNotNull(duration57);
        org.junit.Assert.assertNotNull(duration59);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 1 + "'", int60 == 1);
        org.junit.Assert.assertNotNull(duration61);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "PT-60S" + "'", str62, "PT-60S");
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + long64 + "' != '" + 10L + "'", long64 == 10L);
        org.junit.Assert.assertNotNull(duration75);
        org.junit.Assert.assertTrue("'" + long76 + "' != '" + (-1L) + "'", long76 == (-1L));
        org.junit.Assert.assertNotNull(periodType80);
    }

    @Test
    public void test17541() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17541");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableInstant readableInstant1 = null;
        org.joda.time.Duration duration3 = org.joda.time.Duration.standardMinutes((-1L));
        long long4 = duration3.getStandardMinutes();
        org.joda.time.Duration duration6 = org.joda.time.Duration.standardMinutes((-1L));
        long long7 = duration6.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.Period period9 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration6, readableInstant8);
        org.joda.time.PeriodType periodType10 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology11 = null;
        org.joda.time.Period period12 = duration6.toPeriod(periodType10, chronology11);
        org.joda.time.Duration duration13 = duration6.toDuration();
        org.joda.time.Duration duration15 = duration3.withDurationAdded((org.joda.time.ReadableDuration) duration13, 100);
        org.joda.time.Period period16 = new org.joda.time.Period(readableInstant1, (org.joda.time.ReadableDuration) duration3);
        org.joda.time.MutablePeriod mutablePeriod17 = new org.joda.time.MutablePeriod(readableInstant0, (org.joda.time.ReadableDuration) duration3);
        org.joda.time.Duration duration19 = org.joda.time.Duration.standardMinutes((-1L));
        long long20 = duration19.getStandardMinutes();
        org.joda.time.Duration duration22 = org.joda.time.Duration.standardMinutes((-1L));
        long long23 = duration22.getStandardMinutes();
        boolean boolean24 = duration19.isLongerThan((org.joda.time.ReadableDuration) duration22);
        long long25 = duration22.getStandardDays();
        org.joda.time.Period period26 = duration22.toPeriod();
        boolean boolean27 = duration3.isLongerThan((org.joda.time.ReadableDuration) duration22);
        org.joda.time.Hours hours28 = duration3.toStandardHours();
        org.joda.time.PeriodType periodType29 = hours28.getPeriodType();
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + (-1L) + "'", long4 == (-1L));
        org.junit.Assert.assertNotNull(duration6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(periodType10);
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertNotNull(duration15);
        org.junit.Assert.assertNotNull(duration19);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + (-1L) + "'", long20 == (-1L));
        org.junit.Assert.assertNotNull(duration22);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + (-1L) + "'", long23 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + 0L + "'", long25 == 0L);
        org.junit.Assert.assertNotNull(period26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(hours28);
        org.junit.Assert.assertNotNull(periodType29);
    }

    @Test
    public void test17542() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17542");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableInstant readableInstant1 = null;
        org.joda.time.PeriodType periodType2 = org.joda.time.PeriodType.yearMonthDay();
        org.joda.time.MutablePeriod mutablePeriod3 = new org.joda.time.MutablePeriod(readableInstant0, readableInstant1, periodType2);
        mutablePeriod3.addDays(1);
        org.joda.time.MutablePeriod mutablePeriod6 = mutablePeriod3.toMutablePeriod();
        int int7 = mutablePeriod3.getHours();
        int int8 = mutablePeriod3.getYears();
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(mutablePeriod6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
    }

    @Test
    public void test17543() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17543");
        org.joda.time.ReadableInstant readableInstant2 = null;
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.Duration duration5 = org.joda.time.Duration.standardMinutes((-1L));
        long long6 = duration5.getStandardMinutes();
        org.joda.time.Period period7 = duration5.toPeriod();
        org.joda.time.Duration duration9 = org.joda.time.Duration.standardMinutes((-1L));
        long long10 = duration9.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant11 = null;
        org.joda.time.Period period12 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration9, readableInstant11);
        org.joda.time.PeriodType periodType13 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology14 = null;
        org.joda.time.Period period15 = duration9.toPeriod(periodType13, chronology14);
        org.joda.time.Period period16 = duration5.toPeriod(periodType13);
        org.joda.time.Duration duration18 = org.joda.time.Duration.standardMinutes((-1L));
        long long19 = duration18.getStandardMinutes();
        boolean boolean20 = duration5.isLongerThan((org.joda.time.ReadableDuration) duration18);
        org.joda.time.Duration duration22 = org.joda.time.Duration.standardMinutes((-1L));
        long long23 = duration22.getStandardMinutes();
        org.joda.time.Duration duration25 = org.joda.time.Duration.standardMinutes((-1L));
        long long26 = duration25.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant27 = null;
        org.joda.time.Period period28 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration25, readableInstant27);
        org.joda.time.PeriodType periodType29 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology30 = null;
        org.joda.time.Period period31 = duration25.toPeriod(periodType29, chronology30);
        org.joda.time.Duration duration32 = duration25.toDuration();
        org.joda.time.Duration duration34 = duration22.withDurationAdded((org.joda.time.ReadableDuration) duration32, 100);
        int int35 = duration18.compareTo((org.joda.time.ReadableDuration) duration34);
        org.joda.time.PeriodType periodType36 = org.joda.time.PeriodType.yearWeekDay();
        org.joda.time.Period period37 = duration18.toPeriod(periodType36);
        org.joda.time.PeriodType periodType38 = periodType36.withMonthsRemoved();
        java.lang.String str39 = periodType38.toString();
        org.joda.time.MutablePeriod mutablePeriod40 = new org.joda.time.MutablePeriod(readableInstant2, readableInstant3, periodType38);
        org.joda.time.MutablePeriod mutablePeriod41 = new org.joda.time.MutablePeriod(periodType38);
        org.joda.time.Period period42 = new org.joda.time.Period((long) (-991), (-50591L), periodType38);
        org.junit.Assert.assertNotNull(duration5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + (-1L) + "'", long10 == (-1L));
        org.junit.Assert.assertNotNull(periodType13);
        org.junit.Assert.assertNotNull(period15);
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertNotNull(duration18);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + (-1L) + "'", long19 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(duration22);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + (-1L) + "'", long23 == (-1L));
        org.junit.Assert.assertNotNull(duration25);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + (-1L) + "'", long26 == (-1L));
        org.junit.Assert.assertNotNull(periodType29);
        org.junit.Assert.assertNotNull(period31);
        org.junit.Assert.assertNotNull(duration32);
        org.junit.Assert.assertNotNull(duration34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 1 + "'", int35 == 1);
        org.junit.Assert.assertNotNull(periodType36);
        org.junit.Assert.assertNotNull(period37);
        org.junit.Assert.assertNotNull(periodType38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "PeriodType[YearWeekDay]" + "'", str39, "PeriodType[YearWeekDay]");
    }

    @Test
    public void test17544() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17544");
        org.joda.time.Period period8 = new org.joda.time.Period(32, 68, (int) '#', (-2764800), (int) ' ', (-35), 357, 3);
        org.joda.time.Period period10 = period8.plusHours(0);
        org.joda.time.MutablePeriod mutablePeriod11 = period8.toMutablePeriod();
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertNotNull(mutablePeriod11);
    }

    @Test
    public void test17545() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17545");
        org.joda.time.PeriodType periodType2 = org.joda.time.PeriodType.seconds();
        org.joda.time.PeriodType periodType3 = periodType2.withMinutesRemoved();
        org.joda.time.Chronology chronology4 = null;
        org.joda.time.MutablePeriod mutablePeriod5 = new org.joda.time.MutablePeriod((long) 0, (long) (short) 100, periodType2, chronology4);
        org.joda.time.Duration duration7 = org.joda.time.Duration.standardMinutes((-1L));
        long long8 = duration7.getStandardMinutes();
        org.joda.time.Duration duration10 = org.joda.time.Duration.standardMinutes((-1L));
        long long11 = duration10.getStandardMinutes();
        boolean boolean12 = duration7.isLongerThan((org.joda.time.ReadableDuration) duration10);
        org.joda.time.Period period13 = duration10.toPeriod();
        org.joda.time.Minutes minutes14 = duration10.toStandardMinutes();
        mutablePeriod5.add((org.joda.time.ReadableDuration) duration10);
        // The following exception was thrown during execution in test generation
        try {
            mutablePeriod5.addWeeks((-32));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Period does not support field 'weeks'");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(periodType3);
        org.junit.Assert.assertNotNull(duration7);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + (-1L) + "'", long8 == (-1L));
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + (-1L) + "'", long11 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(period13);
        org.junit.Assert.assertNotNull(minutes14);
    }

    @Test
    public void test17546() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17546");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((-7776000L));
        org.joda.time.Period period4 = new org.joda.time.Period((-2419199998L), 0L);
        boolean boolean5 = duration1.equals((java.lang.Object) 0L);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
    }

    @Test
    public void test17547() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17547");
        org.joda.time.Duration duration2 = new org.joda.time.Duration((-1L), (long) '4');
        org.joda.time.Duration duration4 = new org.joda.time.Duration(0L);
        org.joda.time.ReadableInstant readableInstant5 = null;
        org.joda.time.Interval interval6 = duration4.toIntervalFrom(readableInstant5);
        org.joda.time.Chronology chronology8 = null;
        org.joda.time.MutablePeriod mutablePeriod9 = new org.joda.time.MutablePeriod(1L, chronology8);
        org.joda.time.Chronology chronology11 = null;
        org.joda.time.MutablePeriod mutablePeriod12 = new org.joda.time.MutablePeriod(1L, chronology11);
        mutablePeriod9.add((org.joda.time.ReadablePeriod) mutablePeriod12);
        org.joda.time.Duration duration15 = org.joda.time.Duration.standardMinutes((-1L));
        long long16 = duration15.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant17 = null;
        org.joda.time.Period period18 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration15, readableInstant17);
        mutablePeriod12.setPeriod((org.joda.time.ReadablePeriod) period18);
        org.joda.time.PeriodType periodType20 = mutablePeriod12.getPeriodType();
        org.joda.time.Period period21 = duration4.toPeriod(periodType20);
        org.joda.time.PeriodType periodType22 = periodType20.withMinutesRemoved();
        org.joda.time.PeriodType periodType23 = periodType20.withYearsRemoved();
        boolean boolean24 = duration2.equals((java.lang.Object) periodType20);
        org.junit.Assert.assertNotNull(interval6);
        org.junit.Assert.assertNotNull(duration15);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + (-1L) + "'", long16 == (-1L));
        org.junit.Assert.assertNotNull(periodType20);
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertNotNull(periodType22);
        org.junit.Assert.assertNotNull(periodType23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    }

    @Test
    public void test17548() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17548");
        org.joda.time.PeriodType periodType2 = org.joda.time.PeriodType.hours();
        org.joda.time.PeriodType periodType3 = periodType2.withMinutesRemoved();
        org.joda.time.PeriodType periodType4 = periodType2.withMinutesRemoved();
        org.joda.time.Period period5 = new org.joda.time.Period((-27L), (-69120L), periodType4);
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(periodType3);
        org.junit.Assert.assertNotNull(periodType4);
    }

    @Test
    public void test17549() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17549");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableInstant readableInstant1 = null;
        org.joda.time.Duration duration3 = org.joda.time.Duration.standardMinutes((-1L));
        long long4 = duration3.getStandardMinutes();
        org.joda.time.Period period5 = duration3.toPeriod();
        java.lang.String str6 = duration3.toString();
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.ReadableInstant readableInstant9 = null;
        org.joda.time.Duration duration11 = org.joda.time.Duration.standardMinutes((-1L));
        long long12 = duration11.getStandardMinutes();
        org.joda.time.Period period13 = duration11.toPeriod();
        org.joda.time.Duration duration15 = org.joda.time.Duration.standardMinutes((-1L));
        long long16 = duration15.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant17 = null;
        org.joda.time.Period period18 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration15, readableInstant17);
        org.joda.time.PeriodType periodType19 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology20 = null;
        org.joda.time.Period period21 = duration15.toPeriod(periodType19, chronology20);
        org.joda.time.Period period22 = duration11.toPeriod(periodType19);
        org.joda.time.MutablePeriod mutablePeriod23 = new org.joda.time.MutablePeriod(readableInstant8, readableInstant9, periodType19);
        org.joda.time.Period period25 = org.joda.time.Period.seconds((int) '#');
        int int26 = period25.getMillis();
        org.joda.time.DurationFieldType durationFieldType27 = org.joda.time.DurationFieldType.years();
        org.joda.time.Period period29 = period25.withField(durationFieldType27, (int) (short) 10);
        int int30 = periodType19.indexOf(durationFieldType27);
        org.joda.time.Period period31 = new org.joda.time.Period(0L, periodType19);
        org.joda.time.Chronology chronology32 = null;
        org.joda.time.Period period33 = duration3.toPeriod(periodType19, chronology32);
        org.joda.time.Period period34 = new org.joda.time.Period(readableInstant0, readableInstant1, periodType19);
        org.joda.time.Duration duration37 = org.joda.time.Duration.standardMinutes((-1L));
        long long38 = duration37.getStandardMinutes();
        org.joda.time.Period period39 = duration37.toPeriod();
        org.joda.time.Duration duration41 = org.joda.time.Duration.standardMinutes((-1L));
        long long42 = duration41.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant43 = null;
        org.joda.time.Period period44 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration41, readableInstant43);
        org.joda.time.PeriodType periodType45 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology46 = null;
        org.joda.time.Period period47 = duration41.toPeriod(periodType45, chronology46);
        org.joda.time.Period period48 = duration37.toPeriod(periodType45);
        org.joda.time.Duration duration50 = org.joda.time.Duration.standardMinutes((-1L));
        long long51 = duration50.getStandardMinutes();
        boolean boolean52 = duration37.isLongerThan((org.joda.time.ReadableDuration) duration50);
        org.joda.time.PeriodType periodType54 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology55 = null;
        org.joda.time.MutablePeriod mutablePeriod56 = new org.joda.time.MutablePeriod((long) '4', periodType54, chronology55);
        org.joda.time.Chronology chronology57 = null;
        org.joda.time.Period period58 = duration37.toPeriod(periodType54, chronology57);
        org.joda.time.Chronology chronology59 = null;
        org.joda.time.MutablePeriod mutablePeriod60 = new org.joda.time.MutablePeriod((long) '4', periodType54, chronology59);
        org.joda.time.PeriodType periodType61 = periodType54.withMonthsRemoved();
        org.joda.time.PeriodType periodType62 = periodType54.withWeeksRemoved();
        org.joda.time.PeriodType periodType63 = periodType62.withMinutesRemoved();
        org.joda.time.PeriodType periodType64 = periodType63.withMinutesRemoved();
        org.joda.time.Period period65 = period34.normalizedStandard(periodType64);
        org.joda.time.format.PeriodPrinter periodPrinter66 = null;
        org.joda.time.format.PeriodParser periodParser67 = null;
        org.joda.time.format.PeriodFormatter periodFormatter68 = new org.joda.time.format.PeriodFormatter(periodPrinter66, periodParser67);
        org.joda.time.format.PeriodPrinter periodPrinter69 = periodFormatter68.getPrinter();
        boolean boolean70 = periodFormatter68.isParser();
        java.util.Locale locale71 = periodFormatter68.getLocale();
        org.joda.time.PeriodType periodType72 = null;
        org.joda.time.format.PeriodFormatter periodFormatter73 = periodFormatter68.withParseType(periodType72);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str74 = period65.toString(periodFormatter68);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Printing not supported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + (-1L) + "'", long4 == (-1L));
        org.junit.Assert.assertNotNull(period5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "PT-60S" + "'", str6, "PT-60S");
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + (-1L) + "'", long12 == (-1L));
        org.junit.Assert.assertNotNull(period13);
        org.junit.Assert.assertNotNull(duration15);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + (-1L) + "'", long16 == (-1L));
        org.junit.Assert.assertNotNull(periodType19);
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertNotNull(period22);
        org.junit.Assert.assertNotNull(period25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(durationFieldType27);
        org.junit.Assert.assertNotNull(period29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertNotNull(period33);
        org.junit.Assert.assertNotNull(duration37);
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + (-1L) + "'", long38 == (-1L));
        org.junit.Assert.assertNotNull(period39);
        org.junit.Assert.assertNotNull(duration41);
        org.junit.Assert.assertTrue("'" + long42 + "' != '" + (-1L) + "'", long42 == (-1L));
        org.junit.Assert.assertNotNull(periodType45);
        org.junit.Assert.assertNotNull(period47);
        org.junit.Assert.assertNotNull(period48);
        org.junit.Assert.assertNotNull(duration50);
        org.junit.Assert.assertTrue("'" + long51 + "' != '" + (-1L) + "'", long51 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(periodType54);
        org.junit.Assert.assertNotNull(period58);
        org.junit.Assert.assertNotNull(periodType61);
        org.junit.Assert.assertNotNull(periodType62);
        org.junit.Assert.assertNotNull(periodType63);
        org.junit.Assert.assertNotNull(periodType64);
        org.junit.Assert.assertNotNull(period65);
        org.junit.Assert.assertNull(periodPrinter69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNull(locale71);
        org.junit.Assert.assertNotNull(periodFormatter73);
    }

    @Test
    public void test17550() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17550");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableInstant readableInstant1 = null;
        org.joda.time.PeriodType periodType2 = org.joda.time.PeriodType.days();
        org.joda.time.Period period3 = new org.joda.time.Period(readableInstant0, readableInstant1, periodType2);
        org.joda.time.MutablePeriod mutablePeriod4 = period3.toMutablePeriod();
        int int5 = period3.getHours();
        org.joda.time.Period period7 = period3.withDays(6);
        org.joda.time.Period period9 = period3.minusDays((-32));
        org.joda.time.Duration duration10 = period9.toStandardDuration();
        org.joda.time.MutablePeriod mutablePeriod11 = new org.joda.time.MutablePeriod();
        org.joda.time.ReadableInstant readableInstant12 = null;
        org.joda.time.Duration duration13 = mutablePeriod11.toDurationTo(readableInstant12);
        org.joda.time.MutablePeriod mutablePeriod14 = mutablePeriod11.toMutablePeriod();
        org.joda.time.MutablePeriod mutablePeriod15 = new org.joda.time.MutablePeriod((java.lang.Object) mutablePeriod14);
        org.joda.time.ReadableInstant readableInstant16 = null;
        org.joda.time.Duration duration18 = org.joda.time.Duration.standardMinutes((-1L));
        long long19 = duration18.getStandardMinutes();
        org.joda.time.Period period20 = duration18.toPeriod();
        org.joda.time.Duration duration22 = org.joda.time.Duration.standardMinutes((-1L));
        long long23 = duration22.getStandardMinutes();
        org.joda.time.Duration duration25 = org.joda.time.Duration.standardMinutes((-1L));
        long long26 = duration25.getStandardMinutes();
        boolean boolean27 = duration22.isLongerThan((org.joda.time.ReadableDuration) duration25);
        org.joda.time.Duration duration29 = duration25.withMillis(1L);
        org.joda.time.Duration duration31 = org.joda.time.Duration.standardMinutes((-1L));
        long long32 = duration31.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant33 = null;
        org.joda.time.Period period34 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration31, readableInstant33);
        org.joda.time.PeriodType periodType35 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology36 = null;
        org.joda.time.Period period37 = duration31.toPeriod(periodType35, chronology36);
        org.joda.time.Duration duration38 = duration31.toDuration();
        int int39 = duration25.compareTo((org.joda.time.ReadableDuration) duration31);
        boolean boolean40 = duration18.isLongerThan((org.joda.time.ReadableDuration) duration25);
        org.joda.time.ReadableInstant readableInstant41 = null;
        org.joda.time.Duration duration45 = org.joda.time.Duration.standardMinutes((-1L));
        long long46 = duration45.getStandardMinutes();
        org.joda.time.Period period47 = duration45.toPeriod();
        org.joda.time.Duration duration49 = org.joda.time.Duration.standardMinutes((-1L));
        long long50 = duration49.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant51 = null;
        org.joda.time.Period period52 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration49, readableInstant51);
        org.joda.time.PeriodType periodType53 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology54 = null;
        org.joda.time.Period period55 = duration49.toPeriod(periodType53, chronology54);
        org.joda.time.Period period56 = duration45.toPeriod(periodType53);
        org.joda.time.Chronology chronology57 = null;
        org.joda.time.MutablePeriod mutablePeriod58 = new org.joda.time.MutablePeriod(1L, (long) (byte) 100, periodType53, chronology57);
        org.joda.time.PeriodType periodType59 = periodType53.withYearsRemoved();
        org.joda.time.Period period60 = duration18.toPeriodTo(readableInstant41, periodType53);
        org.joda.time.Days days61 = duration18.toStandardDays();
        long long62 = duration18.getStandardDays();
        org.joda.time.ReadableInstant readableInstant63 = null;
        org.joda.time.Chronology chronology65 = null;
        org.joda.time.MutablePeriod mutablePeriod66 = new org.joda.time.MutablePeriod(1L, chronology65);
        org.joda.time.Period period68 = org.joda.time.Period.seconds((int) '#');
        mutablePeriod66.setPeriod((org.joda.time.ReadablePeriod) period68);
        mutablePeriod66.addMillis((int) (short) 1);
        mutablePeriod66.setPeriod(8, (int) (byte) -1, 1, (int) (byte) 10, (int) (byte) -1, (int) (short) -1, 10, (int) (byte) -1);
        org.joda.time.PeriodType periodType81 = mutablePeriod66.getPeriodType();
        org.joda.time.PeriodType periodType82 = periodType81.withMillisRemoved();
        org.joda.time.Period period83 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration18, readableInstant63, periodType81);
        org.joda.time.MutablePeriod mutablePeriod84 = new org.joda.time.MutablePeriod(readableInstant16, (org.joda.time.ReadableDuration) duration18);
        mutablePeriod15.add((org.joda.time.ReadableDuration) duration18);
        boolean boolean86 = duration10.equals((java.lang.Object) mutablePeriod15);
        mutablePeriod15.setMinutes((-10));
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(mutablePeriod4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertNotNull(mutablePeriod14);
        org.junit.Assert.assertNotNull(duration18);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + (-1L) + "'", long19 == (-1L));
        org.junit.Assert.assertNotNull(period20);
        org.junit.Assert.assertNotNull(duration22);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + (-1L) + "'", long23 == (-1L));
        org.junit.Assert.assertNotNull(duration25);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + (-1L) + "'", long26 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(duration29);
        org.junit.Assert.assertNotNull(duration31);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + (-1L) + "'", long32 == (-1L));
        org.junit.Assert.assertNotNull(periodType35);
        org.junit.Assert.assertNotNull(period37);
        org.junit.Assert.assertNotNull(duration38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(duration45);
        org.junit.Assert.assertTrue("'" + long46 + "' != '" + (-1L) + "'", long46 == (-1L));
        org.junit.Assert.assertNotNull(period47);
        org.junit.Assert.assertNotNull(duration49);
        org.junit.Assert.assertTrue("'" + long50 + "' != '" + (-1L) + "'", long50 == (-1L));
        org.junit.Assert.assertNotNull(periodType53);
        org.junit.Assert.assertNotNull(period55);
        org.junit.Assert.assertNotNull(period56);
        org.junit.Assert.assertNotNull(periodType59);
        org.junit.Assert.assertNotNull(period60);
        org.junit.Assert.assertNotNull(days61);
        org.junit.Assert.assertTrue("'" + long62 + "' != '" + 0L + "'", long62 == 0L);
        org.junit.Assert.assertNotNull(period68);
        org.junit.Assert.assertNotNull(periodType81);
        org.junit.Assert.assertNotNull(periodType82);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
    }

    @Test
    public void test17551() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17551");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((-1L));
        long long2 = duration1.getStandardMinutes();
        org.joda.time.Period period3 = duration1.toPeriod();
        org.joda.time.Duration duration5 = org.joda.time.Duration.standardMinutes((-1L));
        long long6 = duration5.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.Period period8 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration5, readableInstant7);
        org.joda.time.PeriodType periodType9 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology10 = null;
        org.joda.time.Period period11 = duration5.toPeriod(periodType9, chronology10);
        org.joda.time.Period period12 = duration1.toPeriod(periodType9);
        org.joda.time.Duration duration14 = org.joda.time.Duration.standardMinutes((-1L));
        long long15 = duration14.getStandardMinutes();
        boolean boolean16 = duration1.isLongerThan((org.joda.time.ReadableDuration) duration14);
        org.joda.time.Duration duration18 = org.joda.time.Duration.standardMinutes((-1L));
        long long19 = duration18.getStandardMinutes();
        org.joda.time.Duration duration21 = org.joda.time.Duration.standardMinutes((-1L));
        long long22 = duration21.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant23 = null;
        org.joda.time.Period period24 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration21, readableInstant23);
        org.joda.time.PeriodType periodType25 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology26 = null;
        org.joda.time.Period period27 = duration21.toPeriod(periodType25, chronology26);
        org.joda.time.Duration duration28 = duration21.toDuration();
        org.joda.time.Duration duration30 = duration18.withDurationAdded((org.joda.time.ReadableDuration) duration28, 100);
        int int31 = duration14.compareTo((org.joda.time.ReadableDuration) duration30);
        org.joda.time.Duration duration32 = duration14.toDuration();
        org.joda.time.Chronology chronology33 = null;
        org.joda.time.Period period34 = duration32.toPeriod(chronology33);
        org.joda.time.ReadableInstant readableInstant35 = null;
        org.joda.time.Period period36 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration32, readableInstant35);
        org.joda.time.Period period38 = period36.withSeconds((int) (byte) -1);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + (-1L) + "'", long2 == (-1L));
        org.junit.Assert.assertNotNull(period3);
        org.junit.Assert.assertNotNull(duration5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
        org.junit.Assert.assertNotNull(periodType9);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + (-1L) + "'", long15 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(duration18);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + (-1L) + "'", long19 == (-1L));
        org.junit.Assert.assertNotNull(duration21);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + (-1L) + "'", long22 == (-1L));
        org.junit.Assert.assertNotNull(periodType25);
        org.junit.Assert.assertNotNull(period27);
        org.junit.Assert.assertNotNull(duration28);
        org.junit.Assert.assertNotNull(duration30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 1 + "'", int31 == 1);
        org.junit.Assert.assertNotNull(duration32);
        org.junit.Assert.assertNotNull(period34);
        org.junit.Assert.assertNotNull(period38);
    }

    @Test
    public void test17552() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17552");
        org.joda.time.format.PeriodPrinter periodPrinter0 = null;
        org.joda.time.format.PeriodParser periodParser1 = null;
        org.joda.time.format.PeriodFormatter periodFormatter2 = new org.joda.time.format.PeriodFormatter(periodPrinter0, periodParser1);
        boolean boolean3 = periodFormatter2.isPrinter();
        org.joda.time.PeriodType periodType4 = periodFormatter2.getParseType();
        boolean boolean5 = periodFormatter2.isParser();
        java.util.Locale locale6 = null;
        org.joda.time.format.PeriodFormatter periodFormatter7 = periodFormatter2.withLocale(locale6);
        org.joda.time.Duration duration11 = org.joda.time.Duration.standardMinutes((-1L));
        long long12 = duration11.getStandardMinutes();
        org.joda.time.Period period13 = duration11.toPeriod();
        org.joda.time.Duration duration15 = org.joda.time.Duration.standardMinutes((-1L));
        long long16 = duration15.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant17 = null;
        org.joda.time.Period period18 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration15, readableInstant17);
        org.joda.time.PeriodType periodType19 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology20 = null;
        org.joda.time.Period period21 = duration15.toPeriod(periodType19, chronology20);
        org.joda.time.Period period22 = duration11.toPeriod(periodType19);
        org.joda.time.Chronology chronology23 = null;
        org.joda.time.MutablePeriod mutablePeriod24 = new org.joda.time.MutablePeriod(1L, (long) (byte) 100, periodType19, chronology23);
        org.joda.time.PeriodType periodType25 = periodType19.withYearsRemoved();
        org.joda.time.PeriodType periodType26 = periodType19.withMillisRemoved();
        org.joda.time.format.PeriodFormatter periodFormatter27 = periodFormatter7.withParseType(periodType26);
        org.joda.time.format.PeriodPrinter periodPrinter28 = periodFormatter27.getPrinter();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.MutablePeriod mutablePeriod30 = periodFormatter27.parseMutablePeriod("PeriodType[DaysNoDays]");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Parsing not supported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(periodType4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(periodFormatter7);
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + (-1L) + "'", long12 == (-1L));
        org.junit.Assert.assertNotNull(period13);
        org.junit.Assert.assertNotNull(duration15);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + (-1L) + "'", long16 == (-1L));
        org.junit.Assert.assertNotNull(periodType19);
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertNotNull(period22);
        org.junit.Assert.assertNotNull(periodType25);
        org.junit.Assert.assertNotNull(periodType26);
        org.junit.Assert.assertNotNull(periodFormatter27);
        org.junit.Assert.assertNull(periodPrinter28);
    }

    @Test
    public void test17553() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17553");
        org.joda.time.format.PeriodPrinter periodPrinter0 = null;
        org.joda.time.format.PeriodParser periodParser1 = null;
        org.joda.time.format.PeriodFormatter periodFormatter2 = new org.joda.time.format.PeriodFormatter(periodPrinter0, periodParser1);
        org.joda.time.format.PeriodPrinter periodPrinter3 = periodFormatter2.getPrinter();
        boolean boolean4 = periodFormatter2.isPrinter();
        org.joda.time.PeriodType periodType5 = org.joda.time.PeriodType.standard();
        org.joda.time.PeriodType periodType6 = periodType5.withMinutesRemoved();
        org.joda.time.PeriodType periodType7 = periodType6.withMillisRemoved();
        org.joda.time.format.PeriodFormatter periodFormatter8 = periodFormatter2.withParseType(periodType6);
        boolean boolean9 = periodFormatter8.isPrinter();
        java.util.Locale locale10 = null;
        org.joda.time.format.PeriodFormatter periodFormatter11 = periodFormatter8.withLocale(locale10);
        java.util.Locale locale12 = null;
        org.joda.time.format.PeriodFormatter periodFormatter13 = periodFormatter11.withLocale(locale12);
        org.junit.Assert.assertNull(periodPrinter3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(periodType5);
        org.junit.Assert.assertNotNull(periodType6);
        org.junit.Assert.assertNotNull(periodType7);
        org.junit.Assert.assertNotNull(periodFormatter8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(periodFormatter11);
        org.junit.Assert.assertNotNull(periodFormatter13);
    }

    @Test
    public void test17554() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17554");
        org.joda.time.Period period1 = org.joda.time.Period.seconds((int) '#');
        int int2 = period1.getMillis();
        org.joda.time.Period period4 = period1.withMillis((int) '#');
        org.joda.time.DurationFieldType durationFieldType5 = org.joda.time.DurationFieldType.halfdays();
        boolean boolean6 = period1.isSupported(durationFieldType5);
        org.joda.time.Chronology chronology8 = null;
        org.joda.time.MutablePeriod mutablePeriod9 = new org.joda.time.MutablePeriod(1L, chronology8);
        org.joda.time.Period period11 = org.joda.time.Period.seconds((int) '#');
        mutablePeriod9.setPeriod((org.joda.time.ReadablePeriod) period11);
        org.joda.time.DurationFieldType durationFieldType13 = org.joda.time.DurationFieldType.years();
        java.lang.String str14 = durationFieldType13.getName();
        boolean boolean15 = mutablePeriod9.isSupported(durationFieldType13);
        int int16 = period1.get(durationFieldType13);
        org.joda.time.ReadableInstant readableInstant17 = null;
        org.joda.time.Duration duration19 = org.joda.time.Duration.standardMinutes((-1L));
        long long20 = duration19.getStandardMinutes();
        org.joda.time.Period period21 = duration19.toPeriod();
        org.joda.time.Duration duration23 = org.joda.time.Duration.standardMinutes((-1L));
        long long24 = duration23.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant25 = null;
        org.joda.time.Period period26 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration23, readableInstant25);
        org.joda.time.PeriodType periodType27 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology28 = null;
        org.joda.time.Period period29 = duration23.toPeriod(periodType27, chronology28);
        org.joda.time.Period period30 = duration19.toPeriod(periodType27);
        org.joda.time.Duration duration32 = org.joda.time.Duration.standardMinutes((-1L));
        long long33 = duration32.getStandardMinutes();
        boolean boolean34 = duration19.isLongerThan((org.joda.time.ReadableDuration) duration32);
        org.joda.time.PeriodType periodType35 = org.joda.time.PeriodType.weeks();
        org.joda.time.Period period36 = new org.joda.time.Period(readableInstant17, (org.joda.time.ReadableDuration) duration32, periodType35);
        boolean boolean37 = period1.equals((java.lang.Object) duration32);
        org.joda.time.ReadableInstant readableInstant38 = null;
        org.joda.time.Period period39 = duration32.toPeriodTo(readableInstant38);
        java.lang.String str40 = duration32.toString();
        long long41 = duration32.getStandardHours();
        org.joda.time.ReadableInstant readableInstant42 = null;
        org.joda.time.Duration duration44 = org.joda.time.Duration.standardMinutes((-1L));
        long long45 = duration44.getStandardMinutes();
        org.joda.time.Duration duration47 = org.joda.time.Duration.standardMinutes((-1L));
        long long48 = duration47.getStandardMinutes();
        boolean boolean49 = duration44.isLongerThan((org.joda.time.ReadableDuration) duration47);
        org.joda.time.Duration duration51 = duration47.withMillis(1L);
        org.joda.time.Seconds seconds52 = duration51.toStandardSeconds();
        java.lang.String str53 = duration51.toString();
        org.joda.time.ReadableInstant readableInstant54 = null;
        org.joda.time.Period period55 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration51, readableInstant54);
        org.joda.time.ReadableInstant readableInstant56 = null;
        java.lang.Object obj57 = null;
        org.joda.time.PeriodType periodType59 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period60 = new org.joda.time.Period(10L, periodType59);
        org.joda.time.DurationFieldType durationFieldType61 = org.joda.time.DurationFieldType.weeks();
        boolean boolean62 = periodType59.isSupported(durationFieldType61);
        org.joda.time.DurationFieldType durationFieldType63 = org.joda.time.DurationFieldType.centuries();
        int int64 = periodType59.indexOf(durationFieldType63);
        org.joda.time.PeriodType periodType65 = periodType59.withMinutesRemoved();
        org.joda.time.Chronology chronology66 = null;
        org.joda.time.MutablePeriod mutablePeriod67 = new org.joda.time.MutablePeriod(obj57, periodType59, chronology66);
        org.joda.time.Period period68 = duration51.toPeriodFrom(readableInstant56, periodType59);
        org.joda.time.PeriodType periodType69 = periodType59.withYearsRemoved();
        org.joda.time.MutablePeriod mutablePeriod70 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration32, readableInstant42, periodType69);
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(durationFieldType5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(durationFieldType13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "years" + "'", str14, "years");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(duration19);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + (-1L) + "'", long20 == (-1L));
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertNotNull(duration23);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + (-1L) + "'", long24 == (-1L));
        org.junit.Assert.assertNotNull(periodType27);
        org.junit.Assert.assertNotNull(period29);
        org.junit.Assert.assertNotNull(period30);
        org.junit.Assert.assertNotNull(duration32);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + (-1L) + "'", long33 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(periodType35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(period39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "PT-60S" + "'", str40, "PT-60S");
        org.junit.Assert.assertTrue("'" + long41 + "' != '" + 0L + "'", long41 == 0L);
        org.junit.Assert.assertNotNull(duration44);
        org.junit.Assert.assertTrue("'" + long45 + "' != '" + (-1L) + "'", long45 == (-1L));
        org.junit.Assert.assertNotNull(duration47);
        org.junit.Assert.assertTrue("'" + long48 + "' != '" + (-1L) + "'", long48 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(duration51);
        org.junit.Assert.assertNotNull(seconds52);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "PT0.001S" + "'", str53, "PT0.001S");
        org.junit.Assert.assertNotNull(periodType59);
        org.junit.Assert.assertNotNull(durationFieldType61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(durationFieldType63);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + (-1) + "'", int64 == (-1));
        org.junit.Assert.assertNotNull(periodType65);
        org.junit.Assert.assertNotNull(period68);
        org.junit.Assert.assertNotNull(periodType69);
    }

    @Test
    public void test17555() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17555");
        org.joda.time.format.PeriodPrinter periodPrinter0 = null;
        org.joda.time.format.PeriodParser periodParser1 = null;
        org.joda.time.format.PeriodFormatter periodFormatter2 = new org.joda.time.format.PeriodFormatter(periodPrinter0, periodParser1);
        org.joda.time.format.PeriodPrinter periodPrinter3 = periodFormatter2.getPrinter();
        boolean boolean4 = periodFormatter2.isParser();
        org.joda.time.format.PeriodParser periodParser5 = periodFormatter2.getParser();
        org.joda.time.PeriodType periodType6 = periodFormatter2.getParseType();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.MutablePeriod mutablePeriod8 = periodFormatter2.parseMutablePeriod("PT349200.097S");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Parsing not supported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(periodPrinter3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(periodParser5);
        org.junit.Assert.assertNull(periodType6);
    }

    @Test
    public void test17556() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17556");
        org.joda.time.Duration duration2 = new org.joda.time.Duration((-60000L), 60L);
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.Period period4 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration2, readableInstant3);
    }

    @Test
    public void test17557() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17557");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.Duration duration2 = org.joda.time.Duration.standardMinutes((-1L));
        long long3 = duration2.getStandardMinutes();
        org.joda.time.Duration duration5 = org.joda.time.Duration.standardMinutes((-1L));
        long long6 = duration5.getStandardMinutes();
        boolean boolean7 = duration2.isLongerThan((org.joda.time.ReadableDuration) duration5);
        org.joda.time.Duration duration9 = duration5.withMillis((long) 1);
        org.joda.time.Duration duration11 = org.joda.time.Duration.standardMinutes((-1L));
        long long12 = duration11.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant13 = null;
        org.joda.time.Period period14 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration11, readableInstant13);
        org.joda.time.PeriodType periodType15 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology16 = null;
        org.joda.time.Period period17 = duration11.toPeriod(periodType15, chronology16);
        org.joda.time.Duration duration20 = duration11.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration22 = org.joda.time.Duration.standardMinutes((-1L));
        long long23 = duration22.getStandardMinutes();
        org.joda.time.Duration duration25 = org.joda.time.Duration.standardMinutes((-1L));
        long long26 = duration25.getStandardMinutes();
        boolean boolean27 = duration22.isLongerThan((org.joda.time.ReadableDuration) duration25);
        org.joda.time.Duration duration29 = duration25.withMillis((long) 1);
        boolean boolean30 = duration20.isShorterThan((org.joda.time.ReadableDuration) duration25);
        boolean boolean31 = duration5.isLongerThan((org.joda.time.ReadableDuration) duration25);
        org.joda.time.Duration duration33 = org.joda.time.Duration.standardMinutes((-1L));
        long long34 = duration33.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant35 = null;
        org.joda.time.Period period36 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration33, readableInstant35);
        org.joda.time.PeriodType periodType37 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology38 = null;
        org.joda.time.Period period39 = duration33.toPeriod(periodType37, chronology38);
        org.joda.time.Duration duration40 = duration33.toDuration();
        boolean boolean41 = duration5.isEqual((org.joda.time.ReadableDuration) duration33);
        org.joda.time.ReadableInstant readableInstant42 = null;
        org.joda.time.Duration duration44 = org.joda.time.Duration.standardMinutes((-1L));
        long long45 = duration44.getStandardMinutes();
        org.joda.time.Duration duration47 = org.joda.time.Duration.standardMinutes((-1L));
        long long48 = duration47.getStandardMinutes();
        boolean boolean49 = duration44.isLongerThan((org.joda.time.ReadableDuration) duration47);
        org.joda.time.Duration duration51 = duration47.withMillis(1L);
        org.joda.time.Period period52 = new org.joda.time.Period(readableInstant42, (org.joda.time.ReadableDuration) duration47);
        org.joda.time.Duration duration53 = duration5.plus((org.joda.time.ReadableDuration) duration47);
        org.joda.time.MutablePeriod mutablePeriod54 = new org.joda.time.MutablePeriod(readableInstant0, (org.joda.time.ReadableDuration) duration5);
        org.joda.time.Chronology chronology56 = null;
        mutablePeriod54.add((long) (-935), chronology56);
        org.junit.Assert.assertNotNull(duration2);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + (-1L) + "'", long3 == (-1L));
        org.junit.Assert.assertNotNull(duration5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + (-1L) + "'", long12 == (-1L));
        org.junit.Assert.assertNotNull(periodType15);
        org.junit.Assert.assertNotNull(period17);
        org.junit.Assert.assertNotNull(duration20);
        org.junit.Assert.assertNotNull(duration22);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + (-1L) + "'", long23 == (-1L));
        org.junit.Assert.assertNotNull(duration25);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + (-1L) + "'", long26 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(duration29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(duration33);
        org.junit.Assert.assertTrue("'" + long34 + "' != '" + (-1L) + "'", long34 == (-1L));
        org.junit.Assert.assertNotNull(periodType37);
        org.junit.Assert.assertNotNull(period39);
        org.junit.Assert.assertNotNull(duration40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(duration44);
        org.junit.Assert.assertTrue("'" + long45 + "' != '" + (-1L) + "'", long45 == (-1L));
        org.junit.Assert.assertNotNull(duration47);
        org.junit.Assert.assertTrue("'" + long48 + "' != '" + (-1L) + "'", long48 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(duration51);
        org.junit.Assert.assertNotNull(duration53);
    }

    @Test
    public void test17558() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17558");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((-1L));
        long long2 = duration1.getStandardMinutes();
        org.joda.time.Duration duration4 = org.joda.time.Duration.standardMinutes((-1L));
        long long5 = duration4.getStandardMinutes();
        boolean boolean6 = duration1.isLongerThan((org.joda.time.ReadableDuration) duration4);
        org.joda.time.Period period7 = duration4.toPeriod();
        org.joda.time.Minutes minutes8 = duration4.toStandardMinutes();
        org.joda.time.Duration duration10 = org.joda.time.Duration.standardMinutes((-1L));
        long long11 = duration10.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant12 = null;
        org.joda.time.Period period13 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration10, readableInstant12);
        org.joda.time.PeriodType periodType14 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology15 = null;
        org.joda.time.Period period16 = duration10.toPeriod(periodType14, chronology15);
        org.joda.time.Duration duration19 = duration10.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration20 = duration4.plus((org.joda.time.ReadableDuration) duration19);
        org.joda.time.ReadableInstant readableInstant21 = null;
        org.joda.time.Duration duration25 = org.joda.time.Duration.standardMinutes((-1L));
        long long26 = duration25.getStandardMinutes();
        org.joda.time.Period period27 = duration25.toPeriod();
        org.joda.time.Duration duration29 = org.joda.time.Duration.standardMinutes((-1L));
        long long30 = duration29.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant31 = null;
        org.joda.time.Period period32 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration29, readableInstant31);
        org.joda.time.PeriodType periodType33 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology34 = null;
        org.joda.time.Period period35 = duration29.toPeriod(periodType33, chronology34);
        org.joda.time.Period period36 = duration25.toPeriod(periodType33);
        org.joda.time.Chronology chronology37 = null;
        org.joda.time.MutablePeriod mutablePeriod38 = new org.joda.time.MutablePeriod(1L, (long) (byte) 100, periodType33, chronology37);
        org.joda.time.Period period39 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration4, readableInstant21, periodType33);
        org.joda.time.ReadableInstant readableInstant40 = null;
        org.joda.time.Period period41 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration4, readableInstant40);
        org.joda.time.Period period43 = period41.minusHours((int) (byte) 10);
        org.joda.time.Chronology chronology45 = null;
        org.joda.time.MutablePeriod mutablePeriod46 = new org.joda.time.MutablePeriod(1L, chronology45);
        org.joda.time.Chronology chronology48 = null;
        org.joda.time.MutablePeriod mutablePeriod49 = new org.joda.time.MutablePeriod(1L, chronology48);
        mutablePeriod46.add((org.joda.time.ReadablePeriod) mutablePeriod49);
        mutablePeriod46.addMonths((int) (short) -1);
        org.joda.time.DurationFieldType[] durationFieldTypeArray53 = mutablePeriod46.getFieldTypes();
        mutablePeriod46.setSeconds((int) (byte) -1);
        org.joda.time.MutablePeriod mutablePeriod60 = new org.joda.time.MutablePeriod(1, 0, (int) (byte) 1, 100);
        mutablePeriod60.setSeconds(0);
        org.joda.time.Chronology chronology64 = null;
        mutablePeriod60.setPeriod((long) 0, chronology64);
        int int66 = mutablePeriod60.getMonths();
        mutablePeriod46.setPeriod((org.joda.time.ReadablePeriod) mutablePeriod60);
        org.joda.time.Chronology chronology70 = null;
        mutablePeriod60.setPeriod((long) (byte) 100, 0L, chronology70);
        org.joda.time.Period period72 = period41.minus((org.joda.time.ReadablePeriod) mutablePeriod60);
        org.joda.time.MutablePeriod mutablePeriod73 = mutablePeriod60.copy();
        mutablePeriod60.setWeeks(98);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + (-1L) + "'", long2 == (-1L));
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + (-1L) + "'", long5 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + (-1L) + "'", long11 == (-1L));
        org.junit.Assert.assertNotNull(periodType14);
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertNotNull(duration19);
        org.junit.Assert.assertNotNull(duration20);
        org.junit.Assert.assertNotNull(duration25);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + (-1L) + "'", long26 == (-1L));
        org.junit.Assert.assertNotNull(period27);
        org.junit.Assert.assertNotNull(duration29);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + (-1L) + "'", long30 == (-1L));
        org.junit.Assert.assertNotNull(periodType33);
        org.junit.Assert.assertNotNull(period35);
        org.junit.Assert.assertNotNull(period36);
        org.junit.Assert.assertNotNull(period43);
        org.junit.Assert.assertNotNull(durationFieldTypeArray53);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 0 + "'", int66 == 0);
        org.junit.Assert.assertNotNull(period72);
        org.junit.Assert.assertNotNull(mutablePeriod73);
    }

    @Test
    public void test17559() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17559");
        org.joda.time.format.PeriodPrinter periodPrinter0 = null;
        org.joda.time.format.PeriodParser periodParser1 = null;
        org.joda.time.format.PeriodFormatter periodFormatter2 = new org.joda.time.format.PeriodFormatter(periodPrinter0, periodParser1);
        org.joda.time.format.PeriodPrinter periodPrinter3 = periodFormatter2.getPrinter();
        org.joda.time.Chronology chronology5 = null;
        org.joda.time.MutablePeriod mutablePeriod6 = new org.joda.time.MutablePeriod(1L, chronology5);
        org.joda.time.Period period8 = org.joda.time.Period.seconds((int) '#');
        mutablePeriod6.setPeriod((org.joda.time.ReadablePeriod) period8);
        mutablePeriod6.addMillis((int) (short) 1);
        mutablePeriod6.setPeriod(8, (int) (byte) -1, 1, (int) (byte) 10, (int) (byte) -1, (int) (short) -1, 10, (int) (byte) -1);
        org.joda.time.PeriodType periodType21 = mutablePeriod6.getPeriodType();
        org.joda.time.PeriodType periodType22 = periodType21.withMillisRemoved();
        org.joda.time.format.PeriodFormatter periodFormatter23 = periodFormatter2.withParseType(periodType22);
        boolean boolean24 = periodFormatter2.isParser();
        java.util.Locale locale25 = null;
        org.joda.time.format.PeriodFormatter periodFormatter26 = periodFormatter2.withLocale(locale25);
        org.joda.time.PeriodType periodType27 = periodFormatter26.getParseType();
        org.joda.time.Period period29 = org.joda.time.Period.seconds((int) '#');
        int int30 = period29.getMillis();
        org.joda.time.Period period32 = period29.withMillis((int) '#');
        int int33 = period29.size();
        org.joda.time.Period period35 = period29.withMinutes(0);
        org.joda.time.Hours hours36 = period29.toStandardHours();
        org.joda.time.Period period38 = period29.minusSeconds((int) (short) 0);
        org.joda.time.Period period40 = period29.minusMinutes((-1));
        org.joda.time.PeriodType periodType41 = org.joda.time.PeriodType.standard();
        org.joda.time.Chronology chronology42 = null;
        org.joda.time.MutablePeriod mutablePeriod43 = new org.joda.time.MutablePeriod((java.lang.Object) period29, periodType41, chronology42);
        mutablePeriod43.addYears((int) (byte) 0);
        mutablePeriod43.setMonths((int) (byte) 10);
        java.lang.String str48 = mutablePeriod43.toString();
        mutablePeriod43.setHours((int) (byte) 10);
        mutablePeriod43.addHours(0);
        org.joda.time.ReadableInterval readableInterval53 = null;
        mutablePeriod43.setPeriod(readableInterval53);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str55 = periodFormatter26.print((org.joda.time.ReadablePeriod) mutablePeriod43);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Printing not supported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(periodPrinter3);
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertNotNull(periodType21);
        org.junit.Assert.assertNotNull(periodType22);
        org.junit.Assert.assertNotNull(periodFormatter23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(periodFormatter26);
        org.junit.Assert.assertNull(periodType27);
        org.junit.Assert.assertNotNull(period29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(period32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 8 + "'", int33 == 8);
        org.junit.Assert.assertNotNull(period35);
        org.junit.Assert.assertNotNull(hours36);
        org.junit.Assert.assertNotNull(period38);
        org.junit.Assert.assertNotNull(period40);
        org.junit.Assert.assertNotNull(periodType41);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "P10MT35S" + "'", str48, "P10MT35S");
    }

    @Test
    public void test17560() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17560");
        org.joda.time.format.PeriodPrinter periodPrinter0 = null;
        org.joda.time.format.PeriodParser periodParser1 = null;
        org.joda.time.format.PeriodFormatter periodFormatter2 = new org.joda.time.format.PeriodFormatter(periodPrinter0, periodParser1);
        org.joda.time.format.PeriodPrinter periodPrinter3 = periodFormatter2.getPrinter();
        boolean boolean4 = periodFormatter2.isParser();
        java.util.Locale locale5 = periodFormatter2.getLocale();
        org.joda.time.PeriodType periodType6 = periodFormatter2.getParseType();
        java.util.Locale locale7 = null;
        org.joda.time.format.PeriodFormatter periodFormatter8 = periodFormatter2.withLocale(locale7);
        boolean boolean9 = periodFormatter2.isParser();
        boolean boolean10 = periodFormatter2.isParser();
        java.util.Locale locale11 = null;
        org.joda.time.format.PeriodFormatter periodFormatter12 = periodFormatter2.withLocale(locale11);
        java.util.Locale locale13 = periodFormatter2.getLocale();
        org.joda.time.format.PeriodParser periodParser14 = periodFormatter2.getParser();
        org.joda.time.format.PeriodParser periodParser15 = periodFormatter2.getParser();
        org.joda.time.PeriodType periodType17 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period18 = new org.joda.time.Period(1L, periodType17);
        org.joda.time.PeriodType periodType19 = periodType17.withSecondsRemoved();
        org.joda.time.PeriodType periodType20 = periodType19.withDaysRemoved();
        org.joda.time.MutablePeriod mutablePeriod21 = new org.joda.time.MutablePeriod(periodType20);
        org.joda.time.PeriodType periodType22 = periodType20.withDaysRemoved();
        org.joda.time.PeriodType periodType23 = periodType20.withMinutesRemoved();
        org.joda.time.format.PeriodFormatter periodFormatter24 = periodFormatter2.withParseType(periodType23);
        org.junit.Assert.assertNull(periodPrinter3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(locale5);
        org.junit.Assert.assertNull(periodType6);
        org.junit.Assert.assertNotNull(periodFormatter8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(periodFormatter12);
        org.junit.Assert.assertNull(locale13);
        org.junit.Assert.assertNull(periodParser14);
        org.junit.Assert.assertNull(periodParser15);
        org.junit.Assert.assertNotNull(periodType17);
        org.junit.Assert.assertNotNull(periodType19);
        org.junit.Assert.assertNotNull(periodType20);
        org.junit.Assert.assertNotNull(periodType22);
        org.junit.Assert.assertNotNull(periodType23);
        org.junit.Assert.assertNotNull(periodFormatter24);
    }

    @Test
    public void test17561() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17561");
        org.joda.time.Duration duration3 = new org.joda.time.Duration(32L, (long) 3);
        org.joda.time.ReadableInstant readableInstant4 = null;
        org.joda.time.Period period9 = new org.joda.time.Period((int) '#', (int) (byte) 100, 0, (-1));
        org.joda.time.Period period11 = period9.plusDays((int) 'a');
        org.joda.time.Period period13 = period9.withHours((-1));
        org.joda.time.Period period15 = period9.plusHours((int) (byte) 10);
        org.joda.time.Period period17 = period9.minusMonths((int) (short) 0);
        org.joda.time.DurationFieldType[] durationFieldTypeArray18 = period17.getFieldTypes();
        org.joda.time.PeriodType periodType19 = org.joda.time.PeriodType.forFields(durationFieldTypeArray18);
        org.joda.time.Period period20 = duration3.toPeriodFrom(readableInstant4, periodType19);
        org.joda.time.Duration duration22 = org.joda.time.Duration.standardHours((long) 10);
        org.joda.time.Duration duration24 = org.joda.time.Duration.standardMinutes((-1L));
        long long25 = duration24.getStandardMinutes();
        org.joda.time.Duration duration27 = org.joda.time.Duration.standardMinutes((-1L));
        long long28 = duration27.getStandardMinutes();
        boolean boolean29 = duration24.isLongerThan((org.joda.time.ReadableDuration) duration27);
        org.joda.time.Period period30 = duration27.toPeriod();
        org.joda.time.Minutes minutes31 = duration27.toStandardMinutes();
        boolean boolean32 = duration22.isEqual((org.joda.time.ReadableDuration) duration27);
        org.joda.time.Duration duration34 = org.joda.time.Duration.standardMinutes((-1L));
        long long35 = duration34.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant36 = null;
        org.joda.time.Period period37 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration34, readableInstant36);
        org.joda.time.PeriodType periodType38 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology39 = null;
        org.joda.time.Period period40 = duration34.toPeriod(periodType38, chronology39);
        org.joda.time.Duration duration43 = duration34.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration45 = org.joda.time.Duration.standardMinutes((-1L));
        long long46 = duration45.getStandardMinutes();
        org.joda.time.Duration duration48 = org.joda.time.Duration.standardMinutes((-1L));
        long long49 = duration48.getStandardMinutes();
        boolean boolean50 = duration45.isLongerThan((org.joda.time.ReadableDuration) duration48);
        org.joda.time.Duration duration52 = duration48.withMillis((long) 1);
        boolean boolean53 = duration43.isShorterThan((org.joda.time.ReadableDuration) duration48);
        boolean boolean54 = duration27.isEqual((org.joda.time.ReadableDuration) duration48);
        org.joda.time.Duration duration56 = org.joda.time.Duration.standardMinutes((-1L));
        long long57 = duration56.getStandardMinutes();
        org.joda.time.Duration duration59 = org.joda.time.Duration.standardMinutes((-1L));
        long long60 = duration59.getStandardMinutes();
        boolean boolean61 = duration56.isLongerThan((org.joda.time.ReadableDuration) duration59);
        org.joda.time.Period period62 = duration59.toPeriod();
        org.joda.time.Minutes minutes63 = duration59.toStandardMinutes();
        org.joda.time.Duration duration65 = org.joda.time.Duration.standardMinutes((-1L));
        long long66 = duration65.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant67 = null;
        org.joda.time.Period period68 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration65, readableInstant67);
        org.joda.time.PeriodType periodType69 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology70 = null;
        org.joda.time.Period period71 = duration65.toPeriod(periodType69, chronology70);
        org.joda.time.Duration duration74 = duration65.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration75 = duration59.plus((org.joda.time.ReadableDuration) duration74);
        long long76 = duration74.getStandardDays();
        org.joda.time.Duration duration77 = duration48.plus((org.joda.time.ReadableDuration) duration74);
        org.joda.time.Duration duration79 = duration48.minus((long) 997);
        boolean boolean80 = periodType19.equals((java.lang.Object) duration79);
        org.joda.time.PeriodType periodType81 = periodType19.withMinutesRemoved();
        org.joda.time.Period period82 = new org.joda.time.Period((-59948L), periodType19);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(period13);
        org.junit.Assert.assertNotNull(period15);
        org.junit.Assert.assertNotNull(period17);
        org.junit.Assert.assertNotNull(durationFieldTypeArray18);
        org.junit.Assert.assertNotNull(periodType19);
        org.junit.Assert.assertNotNull(period20);
        org.junit.Assert.assertNotNull(duration22);
        org.junit.Assert.assertNotNull(duration24);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + (-1L) + "'", long25 == (-1L));
        org.junit.Assert.assertNotNull(duration27);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + (-1L) + "'", long28 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(period30);
        org.junit.Assert.assertNotNull(minutes31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(duration34);
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + (-1L) + "'", long35 == (-1L));
        org.junit.Assert.assertNotNull(periodType38);
        org.junit.Assert.assertNotNull(period40);
        org.junit.Assert.assertNotNull(duration43);
        org.junit.Assert.assertNotNull(duration45);
        org.junit.Assert.assertTrue("'" + long46 + "' != '" + (-1L) + "'", long46 == (-1L));
        org.junit.Assert.assertNotNull(duration48);
        org.junit.Assert.assertTrue("'" + long49 + "' != '" + (-1L) + "'", long49 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(duration52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(duration56);
        org.junit.Assert.assertTrue("'" + long57 + "' != '" + (-1L) + "'", long57 == (-1L));
        org.junit.Assert.assertNotNull(duration59);
        org.junit.Assert.assertTrue("'" + long60 + "' != '" + (-1L) + "'", long60 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(period62);
        org.junit.Assert.assertNotNull(minutes63);
        org.junit.Assert.assertNotNull(duration65);
        org.junit.Assert.assertTrue("'" + long66 + "' != '" + (-1L) + "'", long66 == (-1L));
        org.junit.Assert.assertNotNull(periodType69);
        org.junit.Assert.assertNotNull(period71);
        org.junit.Assert.assertNotNull(duration74);
        org.junit.Assert.assertNotNull(duration75);
        org.junit.Assert.assertTrue("'" + long76 + "' != '" + 0L + "'", long76 == 0L);
        org.junit.Assert.assertNotNull(duration77);
        org.junit.Assert.assertNotNull(duration79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(periodType81);
    }

    @Test
    public void test17562() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17562");
        org.joda.time.Period period1 = org.joda.time.Period.seconds((int) '#');
        int int2 = period1.getMillis();
        org.joda.time.Period period4 = period1.withMillis((int) '#');
        org.joda.time.DurationFieldType durationFieldType5 = org.joda.time.DurationFieldType.halfdays();
        boolean boolean6 = period1.isSupported(durationFieldType5);
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.Duration duration8 = period1.toDurationTo(readableInstant7);
        org.joda.time.Period period10 = period1.plusMinutes((int) ' ');
        org.joda.time.ReadableInstant readableInstant11 = null;
        org.joda.time.Duration duration12 = period10.toDurationTo(readableInstant11);
        org.joda.time.format.PeriodPrinter periodPrinter14 = null;
        org.joda.time.format.PeriodParser periodParser15 = null;
        org.joda.time.format.PeriodFormatter periodFormatter16 = new org.joda.time.format.PeriodFormatter(periodPrinter14, periodParser15);
        org.joda.time.format.PeriodPrinter periodPrinter17 = periodFormatter16.getPrinter();
        boolean boolean18 = periodFormatter16.isPrinter();
        org.joda.time.PeriodType periodType19 = org.joda.time.PeriodType.standard();
        org.joda.time.PeriodType periodType20 = periodType19.withMinutesRemoved();
        org.joda.time.PeriodType periodType21 = periodType20.withMillisRemoved();
        org.joda.time.format.PeriodFormatter periodFormatter22 = periodFormatter16.withParseType(periodType20);
        org.joda.time.MutablePeriod mutablePeriod23 = new org.joda.time.MutablePeriod(10L, periodType20);
        org.joda.time.DurationFieldType[] durationFieldTypeArray24 = mutablePeriod23.getFieldTypes();
        mutablePeriod23.addDays(0);
        org.joda.time.Period period27 = period10.withFields((org.joda.time.ReadablePeriod) mutablePeriod23);
        int int28 = mutablePeriod23.getMinutes();
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(durationFieldType5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(duration8);
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertNull(periodPrinter17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(periodType19);
        org.junit.Assert.assertNotNull(periodType20);
        org.junit.Assert.assertNotNull(periodType21);
        org.junit.Assert.assertNotNull(periodFormatter22);
        org.junit.Assert.assertNotNull(durationFieldTypeArray24);
        org.junit.Assert.assertNotNull(period27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
    }

    @Test
    public void test17563() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17563");
        org.joda.time.Chronology chronology1 = null;
        org.joda.time.MutablePeriod mutablePeriod2 = new org.joda.time.MutablePeriod(1L, chronology1);
        org.joda.time.Chronology chronology4 = null;
        org.joda.time.MutablePeriod mutablePeriod5 = new org.joda.time.MutablePeriod(1L, chronology4);
        mutablePeriod2.add((org.joda.time.ReadablePeriod) mutablePeriod5);
        org.joda.time.Duration duration8 = org.joda.time.Duration.standardMinutes((-1L));
        long long9 = duration8.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant10 = null;
        org.joda.time.Period period11 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration8, readableInstant10);
        mutablePeriod5.setPeriod((org.joda.time.ReadablePeriod) period11);
        org.joda.time.PeriodType periodType13 = mutablePeriod5.getPeriodType();
        java.lang.String str14 = mutablePeriod5.toString();
        int int15 = mutablePeriod5.getMillis();
        mutablePeriod5.setMillis(9);
        org.joda.time.MutablePeriod mutablePeriod18 = mutablePeriod5.copy();
        mutablePeriod5.add(60, 3, 70, (int) (byte) 10, (-90), (int) (short) 1, (int) (byte) 1, 135);
        org.junit.Assert.assertNotNull(duration8);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + (-1L) + "'", long9 == (-1L));
        org.junit.Assert.assertNotNull(periodType13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "PT-1M" + "'", str14, "PT-1M");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod18);
    }

    @Test
    public void test17564() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17564");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableInstant readableInstant1 = null;
        org.joda.time.Period period3 = org.joda.time.Period.seconds((int) '#');
        int int4 = period3.getMillis();
        org.joda.time.Period period6 = period3.withMillis((int) '#');
        int int7 = period3.size();
        org.joda.time.Period period9 = period3.withMinutes(0);
        org.joda.time.Hours hours10 = period3.toStandardHours();
        org.joda.time.Period period12 = period3.minusSeconds((int) (short) 0);
        org.joda.time.Period period14 = period3.minusMinutes((-1));
        org.joda.time.PeriodType periodType15 = org.joda.time.PeriodType.standard();
        org.joda.time.Chronology chronology16 = null;
        org.joda.time.MutablePeriod mutablePeriod17 = new org.joda.time.MutablePeriod((java.lang.Object) period3, periodType15, chronology16);
        java.lang.String str18 = periodType15.toString();
        org.joda.time.MutablePeriod mutablePeriod19 = new org.joda.time.MutablePeriod(readableInstant0, readableInstant1, periodType15);
        mutablePeriod19.addYears(0);
        // The following exception was thrown during execution in test generation
        try {
            mutablePeriod19.setValue((-101), 70);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: -101");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(period3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 8 + "'", int7 == 8);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertNotNull(period14);
        org.junit.Assert.assertNotNull(periodType15);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "PeriodType[Standard]" + "'", str18, "PeriodType[Standard]");
    }

    @Test
    public void test17565() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17565");
        org.joda.time.Chronology chronology1 = null;
        org.joda.time.MutablePeriod mutablePeriod2 = new org.joda.time.MutablePeriod(1L, chronology1);
        org.joda.time.Chronology chronology4 = null;
        org.joda.time.MutablePeriod mutablePeriod5 = new org.joda.time.MutablePeriod(1L, chronology4);
        mutablePeriod2.add((org.joda.time.ReadablePeriod) mutablePeriod5);
        mutablePeriod2.addMonths((int) (short) -1);
        org.joda.time.DurationFieldType[] durationFieldTypeArray9 = mutablePeriod2.getFieldTypes();
        mutablePeriod2.setSeconds((int) (byte) -1);
        org.joda.time.MutablePeriod mutablePeriod16 = new org.joda.time.MutablePeriod(1, 0, (int) (byte) 1, 100);
        mutablePeriod16.setSeconds(0);
        org.joda.time.Chronology chronology20 = null;
        mutablePeriod16.setPeriod((long) 0, chronology20);
        int int22 = mutablePeriod16.getMonths();
        mutablePeriod2.setPeriod((org.joda.time.ReadablePeriod) mutablePeriod16);
        org.joda.time.Duration duration25 = org.joda.time.Duration.standardMinutes((-1L));
        long long26 = duration25.getStandardMinutes();
        org.joda.time.Period period27 = duration25.toPeriod();
        org.joda.time.Period period29 = period27.withMonths(0);
        org.joda.time.PeriodType periodType32 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period33 = new org.joda.time.Period(10L, periodType32);
        org.joda.time.DurationFieldType durationFieldType34 = org.joda.time.DurationFieldType.weeks();
        boolean boolean35 = periodType32.isSupported(durationFieldType34);
        org.joda.time.DurationFieldType durationFieldType36 = org.joda.time.DurationFieldType.centuries();
        int int37 = periodType32.indexOf(durationFieldType36);
        org.joda.time.MutablePeriod mutablePeriod38 = new org.joda.time.MutablePeriod((long) '#', periodType32);
        org.joda.time.DurationFieldType durationFieldType39 = org.joda.time.DurationFieldType.weeks();
        boolean boolean40 = mutablePeriod38.isSupported(durationFieldType39);
        int int41 = period27.get(durationFieldType39);
        boolean boolean42 = mutablePeriod2.isSupported(durationFieldType39);
        org.joda.time.Chronology chronology44 = null;
        mutablePeriod2.setPeriod((long) 8, chronology44);
        mutablePeriod2.setHours((int) '#');
        int int48 = mutablePeriod2.getMonths();
        mutablePeriod2.addYears(12);
        mutablePeriod2.addYears((-1));
        org.joda.time.MutablePeriod mutablePeriod53 = mutablePeriod2.toMutablePeriod();
        mutablePeriod2.addMinutes(98);
        org.joda.time.ReadableInstant readableInstant60 = null;
        org.joda.time.Duration duration62 = org.joda.time.Duration.standardMinutes((-1L));
        long long63 = duration62.getStandardMinutes();
        org.joda.time.Duration duration65 = org.joda.time.Duration.standardMinutes((-1L));
        long long66 = duration65.getStandardMinutes();
        boolean boolean67 = duration62.isLongerThan((org.joda.time.ReadableDuration) duration65);
        org.joda.time.Duration duration69 = duration65.withMillis(1L);
        org.joda.time.Period period70 = new org.joda.time.Period(readableInstant60, (org.joda.time.ReadableDuration) duration65);
        org.joda.time.Days days71 = period70.toStandardDays();
        org.joda.time.Period period73 = period70.multipliedBy((int) (short) -1);
        org.joda.time.Period period75 = period70.plusMonths((int) (byte) 0);
        org.joda.time.Chronology chronology77 = null;
        org.joda.time.MutablePeriod mutablePeriod78 = new org.joda.time.MutablePeriod(1L, chronology77);
        org.joda.time.Chronology chronology80 = null;
        org.joda.time.MutablePeriod mutablePeriod81 = new org.joda.time.MutablePeriod(1L, chronology80);
        mutablePeriod78.add((org.joda.time.ReadablePeriod) mutablePeriod81);
        org.joda.time.PeriodType periodType83 = mutablePeriod81.getPeriodType();
        org.joda.time.MutablePeriod mutablePeriod84 = new org.joda.time.MutablePeriod((java.lang.Object) period75, periodType83);
        org.joda.time.PeriodType periodType85 = periodType83.withHoursRemoved();
        org.joda.time.Period period86 = new org.joda.time.Period((long) (short) 1, 10L, periodType83);
        org.joda.time.PeriodType periodType87 = periodType83.withHoursRemoved();
        org.joda.time.Period period88 = new org.joda.time.Period((long) 'a', (long) ' ', periodType83);
        mutablePeriod2.add((org.joda.time.ReadablePeriod) period88);
        int int90 = period88.getMillis();
        int int91 = period88.getWeeks();
        org.junit.Assert.assertNotNull(durationFieldTypeArray9);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNotNull(duration25);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + (-1L) + "'", long26 == (-1L));
        org.junit.Assert.assertNotNull(period27);
        org.junit.Assert.assertNotNull(period29);
        org.junit.Assert.assertNotNull(periodType32);
        org.junit.Assert.assertNotNull(durationFieldType34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(durationFieldType36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertNotNull(durationFieldType39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod53);
        org.junit.Assert.assertNotNull(duration62);
        org.junit.Assert.assertTrue("'" + long63 + "' != '" + (-1L) + "'", long63 == (-1L));
        org.junit.Assert.assertNotNull(duration65);
        org.junit.Assert.assertTrue("'" + long66 + "' != '" + (-1L) + "'", long66 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(duration69);
        org.junit.Assert.assertNotNull(days71);
        org.junit.Assert.assertNotNull(period73);
        org.junit.Assert.assertNotNull(period75);
        org.junit.Assert.assertNotNull(periodType83);
        org.junit.Assert.assertNotNull(periodType85);
        org.junit.Assert.assertNotNull(periodType87);
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + (-65) + "'", int90 == (-65));
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + 0 + "'", int91 == 0);
    }

    @Test
    public void test17566() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17566");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardHours((long) 10);
        org.joda.time.Period period2 = duration1.toPeriod();
        org.joda.time.Seconds seconds3 = period2.toStandardSeconds();
        org.joda.time.Period period5 = period2.minusMinutes((int) '4');
        org.joda.time.DurationFieldType durationFieldType6 = org.joda.time.DurationFieldType.hours();
        org.joda.time.Period period8 = period5.withField(durationFieldType6, 100);
        org.joda.time.Chronology chronology9 = null;
        org.joda.time.DurationField durationField10 = durationFieldType6.getField(chronology9);
        java.lang.String str11 = durationFieldType6.toString();
        java.lang.String str12 = durationFieldType6.toString();
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(period2);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertNotNull(period5);
        org.junit.Assert.assertNotNull(durationFieldType6);
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertNotNull(durationField10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hours" + "'", str11, "hours");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hours" + "'", str12, "hours");
    }

    @Test
    public void test17567() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17567");
        org.joda.time.PeriodType periodType1 = null;
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.MutablePeriod mutablePeriod3 = new org.joda.time.MutablePeriod((long) '#', periodType1, chronology2);
        mutablePeriod3.addYears((int) (short) 10);
        org.joda.time.Duration duration7 = org.joda.time.Duration.standardMinutes((-1L));
        long long8 = duration7.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant9 = null;
        org.joda.time.Period period10 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration7, readableInstant9);
        org.joda.time.Duration duration12 = org.joda.time.Duration.standardMinutes((-1L));
        long long13 = duration12.getStandardMinutes();
        org.joda.time.Period period14 = duration12.toPeriod();
        boolean boolean15 = duration7.isLongerThan((org.joda.time.ReadableDuration) duration12);
        org.joda.time.Duration duration17 = org.joda.time.Duration.standardMinutes((-1L));
        long long18 = duration17.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant19 = null;
        org.joda.time.Period period20 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration17, readableInstant19);
        org.joda.time.PeriodType periodType21 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology22 = null;
        org.joda.time.Period period23 = duration17.toPeriod(periodType21, chronology22);
        org.joda.time.Duration duration24 = duration12.minus((org.joda.time.ReadableDuration) duration17);
        org.joda.time.Duration duration26 = org.joda.time.Duration.standardMinutes((-1L));
        long long27 = duration26.getStandardMinutes();
        org.joda.time.Duration duration29 = org.joda.time.Duration.standardMinutes((-1L));
        long long30 = duration29.getStandardMinutes();
        boolean boolean31 = duration26.isLongerThan((org.joda.time.ReadableDuration) duration29);
        org.joda.time.Duration duration33 = duration29.withMillis(1L);
        boolean boolean34 = duration24.isShorterThan((org.joda.time.ReadableDuration) duration29);
        org.joda.time.ReadableInstant readableInstant35 = null;
        org.joda.time.Duration duration37 = org.joda.time.Duration.standardMinutes((-1L));
        long long38 = duration37.getStandardMinutes();
        org.joda.time.Period period39 = duration37.toPeriod();
        org.joda.time.Duration duration41 = org.joda.time.Duration.standardMinutes((-1L));
        long long42 = duration41.getStandardMinutes();
        org.joda.time.Duration duration44 = org.joda.time.Duration.standardMinutes((-1L));
        long long45 = duration44.getStandardMinutes();
        boolean boolean46 = duration41.isLongerThan((org.joda.time.ReadableDuration) duration44);
        org.joda.time.Duration duration48 = duration44.withMillis(1L);
        org.joda.time.Duration duration50 = org.joda.time.Duration.standardMinutes((-1L));
        long long51 = duration50.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant52 = null;
        org.joda.time.Period period53 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration50, readableInstant52);
        org.joda.time.PeriodType periodType54 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology55 = null;
        org.joda.time.Period period56 = duration50.toPeriod(periodType54, chronology55);
        org.joda.time.Duration duration57 = duration50.toDuration();
        int int58 = duration44.compareTo((org.joda.time.ReadableDuration) duration50);
        boolean boolean59 = duration37.isLongerThan((org.joda.time.ReadableDuration) duration44);
        org.joda.time.Duration duration63 = org.joda.time.Duration.standardMinutes((-1L));
        long long64 = duration63.getStandardMinutes();
        org.joda.time.Period period65 = duration63.toPeriod();
        org.joda.time.Duration duration67 = org.joda.time.Duration.standardMinutes((-1L));
        long long68 = duration67.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant69 = null;
        org.joda.time.Period period70 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration67, readableInstant69);
        org.joda.time.PeriodType periodType71 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology72 = null;
        org.joda.time.Period period73 = duration67.toPeriod(periodType71, chronology72);
        org.joda.time.Period period74 = duration63.toPeriod(periodType71);
        org.joda.time.Chronology chronology75 = null;
        org.joda.time.MutablePeriod mutablePeriod76 = new org.joda.time.MutablePeriod(1L, (long) (byte) 100, periodType71, chronology75);
        org.joda.time.PeriodType periodType77 = periodType71.withMillisRemoved();
        org.joda.time.PeriodType periodType78 = periodType77.withSecondsRemoved();
        org.joda.time.Period period79 = new org.joda.time.Period(readableInstant35, (org.joda.time.ReadableDuration) duration37, periodType78);
        boolean boolean80 = duration29.isLongerThan((org.joda.time.ReadableDuration) duration37);
        org.joda.time.Duration duration82 = duration37.plus((-60L));
        org.joda.time.Days days83 = duration37.toStandardDays();
        mutablePeriod3.setPeriod((org.joda.time.ReadableDuration) duration37);
        mutablePeriod3.addHours(100);
        mutablePeriod3.setPeriod((-36000000L));
        org.junit.Assert.assertNotNull(duration7);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + (-1L) + "'", long8 == (-1L));
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + (-1L) + "'", long13 == (-1L));
        org.junit.Assert.assertNotNull(period14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(duration17);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + (-1L) + "'", long18 == (-1L));
        org.junit.Assert.assertNotNull(periodType21);
        org.junit.Assert.assertNotNull(period23);
        org.junit.Assert.assertNotNull(duration24);
        org.junit.Assert.assertNotNull(duration26);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + (-1L) + "'", long27 == (-1L));
        org.junit.Assert.assertNotNull(duration29);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + (-1L) + "'", long30 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(duration33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(duration37);
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + (-1L) + "'", long38 == (-1L));
        org.junit.Assert.assertNotNull(period39);
        org.junit.Assert.assertNotNull(duration41);
        org.junit.Assert.assertTrue("'" + long42 + "' != '" + (-1L) + "'", long42 == (-1L));
        org.junit.Assert.assertNotNull(duration44);
        org.junit.Assert.assertTrue("'" + long45 + "' != '" + (-1L) + "'", long45 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(duration48);
        org.junit.Assert.assertNotNull(duration50);
        org.junit.Assert.assertTrue("'" + long51 + "' != '" + (-1L) + "'", long51 == (-1L));
        org.junit.Assert.assertNotNull(periodType54);
        org.junit.Assert.assertNotNull(period56);
        org.junit.Assert.assertNotNull(duration57);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(duration63);
        org.junit.Assert.assertTrue("'" + long64 + "' != '" + (-1L) + "'", long64 == (-1L));
        org.junit.Assert.assertNotNull(period65);
        org.junit.Assert.assertNotNull(duration67);
        org.junit.Assert.assertTrue("'" + long68 + "' != '" + (-1L) + "'", long68 == (-1L));
        org.junit.Assert.assertNotNull(periodType71);
        org.junit.Assert.assertNotNull(period73);
        org.junit.Assert.assertNotNull(period74);
        org.junit.Assert.assertNotNull(periodType77);
        org.junit.Assert.assertNotNull(periodType78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(duration82);
        org.junit.Assert.assertNotNull(days83);
    }

    @Test
    public void test17568() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17568");
        org.joda.time.Period period4 = new org.joda.time.Period((int) '#', (int) (byte) 100, 0, (-1));
        org.joda.time.Period period6 = period4.plusDays((int) 'a');
        org.joda.time.Period period8 = period4.withHours((-1));
        org.joda.time.Period period10 = period4.plusHours((int) (byte) 10);
        org.joda.time.Period period12 = period4.minusMonths((int) (short) 0);
        org.joda.time.DurationFieldType[] durationFieldTypeArray13 = period12.getFieldTypes();
        org.joda.time.PeriodType periodType14 = org.joda.time.PeriodType.forFields(durationFieldTypeArray13);
        org.joda.time.PeriodType periodType15 = org.joda.time.PeriodType.forFields(durationFieldTypeArray13);
        java.lang.String str16 = periodType15.getName();
        org.joda.time.PeriodType periodType17 = periodType15.withMillisRemoved();
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertNotNull(durationFieldTypeArray13);
        org.junit.Assert.assertNotNull(periodType14);
        org.junit.Assert.assertNotNull(periodType15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Standard" + "'", str16, "Standard");
        org.junit.Assert.assertNotNull(periodType17);
    }

    @Test
    public void test17569() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17569");
        org.joda.time.format.PeriodPrinter periodPrinter0 = null;
        org.joda.time.format.PeriodParser periodParser1 = null;
        org.joda.time.format.PeriodFormatter periodFormatter2 = new org.joda.time.format.PeriodFormatter(periodPrinter0, periodParser1);
        boolean boolean3 = periodFormatter2.isPrinter();
        org.joda.time.format.PeriodParser periodParser4 = periodFormatter2.getParser();
        org.joda.time.PeriodType periodType5 = periodFormatter2.getParseType();
        java.util.Locale locale6 = periodFormatter2.getLocale();
        org.joda.time.format.PeriodPrinter periodPrinter7 = periodFormatter2.getPrinter();
        org.joda.time.PeriodType periodType8 = periodFormatter2.getParseType();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(periodParser4);
        org.junit.Assert.assertNull(periodType5);
        org.junit.Assert.assertNull(locale6);
        org.junit.Assert.assertNull(periodPrinter7);
        org.junit.Assert.assertNull(periodType8);
    }

    @Test
    public void test17570() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17570");
        org.joda.time.Period period2 = new org.joda.time.Period(136598340000L, 480L);
        int int3 = period2.getMillis();
        // The following exception was thrown during execution in test generation
        try {
            int int5 = period2.getValue(11);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 11");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-520) + "'", int3 == (-520));
    }

    @Test
    public void test17571() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17571");
        org.joda.time.PeriodType periodType2 = null;
        org.joda.time.Chronology chronology3 = null;
        org.joda.time.MutablePeriod mutablePeriod4 = new org.joda.time.MutablePeriod((long) 3, (long) (short) 100, periodType2, chronology3);
        int int5 = mutablePeriod4.getYears();
        int int6 = mutablePeriod4.getMonths();
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
    }

    @Test
    public void test17572() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17572");
        org.joda.time.MutablePeriod mutablePeriod4 = new org.joda.time.MutablePeriod((int) (byte) 0, (int) (byte) 1, (int) (byte) 10, 0);
        mutablePeriod4.setPeriod((int) (byte) 100, (int) (byte) 10, (int) (byte) 1, 1, (int) '#', (int) (short) -1, 0, (int) 'a');
        mutablePeriod4.addWeeks(2);
        org.joda.time.Period period17 = org.joda.time.Period.parse("P0D");
        int int18 = period17.size();
        mutablePeriod4.setPeriod((org.joda.time.ReadablePeriod) period17);
        org.joda.time.Period period21 = period17.minusMonths((int) 'a');
        org.joda.time.Period period23 = period21.withMinutes((-10));
        org.joda.time.Period period25 = period21.withMillis(997);
        org.joda.time.Period period27 = period25.minusMillis(52);
        org.joda.time.Period period29 = period27.plusSeconds((-35));
        org.joda.time.Period period31 = period27.minusMillis((-997));
        org.junit.Assert.assertNotNull(period17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 8 + "'", int18 == 8);
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertNotNull(period23);
        org.junit.Assert.assertNotNull(period25);
        org.junit.Assert.assertNotNull(period27);
        org.junit.Assert.assertNotNull(period29);
        org.junit.Assert.assertNotNull(period31);
    }

    @Test
    public void test17573() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17573");
        org.joda.time.Period period8 = new org.joda.time.Period((-90), (int) ' ', (int) (short) 0, (int) ' ', (-60), (int) ' ', (int) (short) 0, 10);
        org.joda.time.Period period10 = period8.minusWeeks((int) 'a');
        org.joda.time.Period period12 = period8.multipliedBy((int) ' ');
        org.joda.time.Chronology chronology13 = null;
        org.joda.time.Period period14 = new org.joda.time.Period((java.lang.Object) period8, chronology13);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Hours hours15 = period8.toStandardHours();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Cannot convert to Hours as this period contains months and months vary in length");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertNotNull(period12);
    }

    @Test
    public void test17574() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17574");
        org.joda.time.ReadableInstant readableInstant4 = null;
        org.joda.time.Duration duration6 = org.joda.time.Duration.standardMinutes((-1L));
        long long7 = duration6.getStandardMinutes();
        org.joda.time.Period period8 = duration6.toPeriod();
        java.lang.String str9 = duration6.toString();
        org.joda.time.ReadableInstant readableInstant11 = null;
        org.joda.time.ReadableInstant readableInstant12 = null;
        org.joda.time.Duration duration14 = org.joda.time.Duration.standardMinutes((-1L));
        long long15 = duration14.getStandardMinutes();
        org.joda.time.Period period16 = duration14.toPeriod();
        org.joda.time.Duration duration18 = org.joda.time.Duration.standardMinutes((-1L));
        long long19 = duration18.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant20 = null;
        org.joda.time.Period period21 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration18, readableInstant20);
        org.joda.time.PeriodType periodType22 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology23 = null;
        org.joda.time.Period period24 = duration18.toPeriod(periodType22, chronology23);
        org.joda.time.Period period25 = duration14.toPeriod(periodType22);
        org.joda.time.MutablePeriod mutablePeriod26 = new org.joda.time.MutablePeriod(readableInstant11, readableInstant12, periodType22);
        org.joda.time.Period period28 = org.joda.time.Period.seconds((int) '#');
        int int29 = period28.getMillis();
        org.joda.time.DurationFieldType durationFieldType30 = org.joda.time.DurationFieldType.years();
        org.joda.time.Period period32 = period28.withField(durationFieldType30, (int) (short) 10);
        int int33 = periodType22.indexOf(durationFieldType30);
        org.joda.time.Period period34 = new org.joda.time.Period(0L, periodType22);
        org.joda.time.Chronology chronology35 = null;
        org.joda.time.Period period36 = duration6.toPeriod(periodType22, chronology35);
        org.joda.time.Period period37 = duration6.toPeriod();
        org.joda.time.ReadableInstant readableInstant38 = null;
        org.joda.time.ReadableInstant readableInstant40 = null;
        org.joda.time.Duration duration42 = org.joda.time.Duration.standardMinutes((-1L));
        long long43 = duration42.getStandardMinutes();
        org.joda.time.Period period44 = duration42.toPeriod();
        org.joda.time.Duration duration46 = org.joda.time.Duration.standardMinutes((-1L));
        long long47 = duration46.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant48 = null;
        org.joda.time.Period period49 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration46, readableInstant48);
        org.joda.time.PeriodType periodType50 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology51 = null;
        org.joda.time.Period period52 = duration46.toPeriod(periodType50, chronology51);
        org.joda.time.Period period53 = duration42.toPeriod(periodType50);
        org.joda.time.Duration duration55 = org.joda.time.Duration.standardMinutes((-1L));
        long long56 = duration55.getStandardMinutes();
        boolean boolean57 = duration42.isLongerThan((org.joda.time.ReadableDuration) duration55);
        org.joda.time.PeriodType periodType58 = org.joda.time.PeriodType.weeks();
        org.joda.time.Period period59 = new org.joda.time.Period(readableInstant40, (org.joda.time.ReadableDuration) duration55, periodType58);
        org.joda.time.PeriodType periodType60 = periodType58.withMonthsRemoved();
        org.joda.time.PeriodType periodType61 = periodType58.withYearsRemoved();
        org.joda.time.Period period62 = new org.joda.time.Period((-120L), periodType58);
        org.joda.time.PeriodType periodType63 = periodType58.withMillisRemoved();
        org.joda.time.Period period64 = duration6.toPeriodTo(readableInstant38, periodType58);
        org.joda.time.Duration duration68 = org.joda.time.Duration.standardMinutes((-1L));
        long long69 = duration68.getStandardMinutes();
        org.joda.time.Period period70 = duration68.toPeriod();
        org.joda.time.Duration duration72 = org.joda.time.Duration.standardMinutes((-1L));
        long long73 = duration72.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant74 = null;
        org.joda.time.Period period75 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration72, readableInstant74);
        org.joda.time.PeriodType periodType76 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology77 = null;
        org.joda.time.Period period78 = duration72.toPeriod(periodType76, chronology77);
        org.joda.time.Period period79 = duration68.toPeriod(periodType76);
        org.joda.time.Chronology chronology80 = null;
        org.joda.time.MutablePeriod mutablePeriod81 = new org.joda.time.MutablePeriod(1L, (long) (byte) 100, periodType76, chronology80);
        org.joda.time.PeriodType periodType82 = periodType76.withYearsRemoved();
        org.joda.time.PeriodType periodType83 = periodType82.withMonthsRemoved();
        org.joda.time.MutablePeriod mutablePeriod84 = new org.joda.time.MutablePeriod(readableInstant4, (org.joda.time.ReadableDuration) duration6, periodType83);
        org.joda.time.Period period85 = new org.joda.time.Period((long) 4, periodType83);
        org.joda.time.Chronology chronology86 = null;
        org.joda.time.Period period87 = new org.joda.time.Period((long) (-17), periodType83, chronology86);
        org.joda.time.PeriodType periodType88 = periodType83.withYearsRemoved();
        org.joda.time.Period period89 = new org.joda.time.Period((long) 350, 8640000000L, periodType83);
        org.junit.Assert.assertNotNull(duration6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "PT-60S" + "'", str9, "PT-60S");
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + (-1L) + "'", long15 == (-1L));
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertNotNull(duration18);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + (-1L) + "'", long19 == (-1L));
        org.junit.Assert.assertNotNull(periodType22);
        org.junit.Assert.assertNotNull(period24);
        org.junit.Assert.assertNotNull(period25);
        org.junit.Assert.assertNotNull(period28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNotNull(durationFieldType30);
        org.junit.Assert.assertNotNull(period32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertNotNull(period36);
        org.junit.Assert.assertNotNull(period37);
        org.junit.Assert.assertNotNull(duration42);
        org.junit.Assert.assertTrue("'" + long43 + "' != '" + (-1L) + "'", long43 == (-1L));
        org.junit.Assert.assertNotNull(period44);
        org.junit.Assert.assertNotNull(duration46);
        org.junit.Assert.assertTrue("'" + long47 + "' != '" + (-1L) + "'", long47 == (-1L));
        org.junit.Assert.assertNotNull(periodType50);
        org.junit.Assert.assertNotNull(period52);
        org.junit.Assert.assertNotNull(period53);
        org.junit.Assert.assertNotNull(duration55);
        org.junit.Assert.assertTrue("'" + long56 + "' != '" + (-1L) + "'", long56 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(periodType58);
        org.junit.Assert.assertNotNull(periodType60);
        org.junit.Assert.assertNotNull(periodType61);
        org.junit.Assert.assertNotNull(periodType63);
        org.junit.Assert.assertNotNull(period64);
        org.junit.Assert.assertNotNull(duration68);
        org.junit.Assert.assertTrue("'" + long69 + "' != '" + (-1L) + "'", long69 == (-1L));
        org.junit.Assert.assertNotNull(period70);
        org.junit.Assert.assertNotNull(duration72);
        org.junit.Assert.assertTrue("'" + long73 + "' != '" + (-1L) + "'", long73 == (-1L));
        org.junit.Assert.assertNotNull(periodType76);
        org.junit.Assert.assertNotNull(period78);
        org.junit.Assert.assertNotNull(period79);
        org.junit.Assert.assertNotNull(periodType82);
        org.junit.Assert.assertNotNull(periodType83);
        org.junit.Assert.assertNotNull(periodType88);
    }

    @Test
    public void test17575() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17575");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((-1L));
        long long2 = duration1.getStandardMinutes();
        org.joda.time.Period period3 = duration1.toPeriod();
        org.joda.time.Duration duration5 = org.joda.time.Duration.standardMinutes((-1L));
        long long6 = duration5.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.Period period8 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration5, readableInstant7);
        org.joda.time.PeriodType periodType9 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology10 = null;
        org.joda.time.Period period11 = duration5.toPeriod(periodType9, chronology10);
        org.joda.time.Period period12 = duration1.toPeriod(periodType9);
        org.joda.time.Duration duration14 = org.joda.time.Duration.standardMinutes((-1L));
        long long15 = duration14.getStandardMinutes();
        boolean boolean16 = duration1.isLongerThan((org.joda.time.ReadableDuration) duration14);
        org.joda.time.Duration duration18 = org.joda.time.Duration.standardMinutes((-1L));
        long long19 = duration18.getStandardMinutes();
        org.joda.time.Duration duration21 = org.joda.time.Duration.standardMinutes((-1L));
        long long22 = duration21.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant23 = null;
        org.joda.time.Period period24 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration21, readableInstant23);
        org.joda.time.PeriodType periodType25 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology26 = null;
        org.joda.time.Period period27 = duration21.toPeriod(periodType25, chronology26);
        org.joda.time.Duration duration28 = duration21.toDuration();
        org.joda.time.Duration duration30 = duration18.withDurationAdded((org.joda.time.ReadableDuration) duration28, 100);
        int int31 = duration14.compareTo((org.joda.time.ReadableDuration) duration30);
        org.joda.time.Duration duration32 = duration14.toDuration();
        org.joda.time.Period period33 = duration32.toPeriod();
        org.joda.time.Period period34 = new org.joda.time.Period((java.lang.Object) period33);
        org.joda.time.Seconds seconds35 = period33.toStandardSeconds();
        org.joda.time.Period period37 = period33.plusHours(10);
        org.joda.time.Period period39 = period33.withMonths(97);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + (-1L) + "'", long2 == (-1L));
        org.junit.Assert.assertNotNull(period3);
        org.junit.Assert.assertNotNull(duration5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
        org.junit.Assert.assertNotNull(periodType9);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + (-1L) + "'", long15 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(duration18);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + (-1L) + "'", long19 == (-1L));
        org.junit.Assert.assertNotNull(duration21);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + (-1L) + "'", long22 == (-1L));
        org.junit.Assert.assertNotNull(periodType25);
        org.junit.Assert.assertNotNull(period27);
        org.junit.Assert.assertNotNull(duration28);
        org.junit.Assert.assertNotNull(duration30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 1 + "'", int31 == 1);
        org.junit.Assert.assertNotNull(duration32);
        org.junit.Assert.assertNotNull(period33);
        org.junit.Assert.assertNotNull(seconds35);
        org.junit.Assert.assertNotNull(period37);
        org.junit.Assert.assertNotNull(period39);
    }

    @Test
    public void test17576() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17576");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableInstant readableInstant1 = null;
        org.joda.time.PeriodType periodType2 = org.joda.time.PeriodType.days();
        org.joda.time.Period period3 = new org.joda.time.Period(readableInstant0, readableInstant1, periodType2);
        org.joda.time.MutablePeriod mutablePeriod4 = period3.toMutablePeriod();
        int int5 = period3.getMillis();
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(mutablePeriod4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
    }

    @Test
    public void test17577() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17577");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.Duration duration2 = new org.joda.time.Duration(0L);
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.Interval interval4 = duration2.toIntervalFrom(readableInstant3);
        org.joda.time.Chronology chronology6 = null;
        org.joda.time.MutablePeriod mutablePeriod7 = new org.joda.time.MutablePeriod(1L, chronology6);
        org.joda.time.Chronology chronology9 = null;
        org.joda.time.MutablePeriod mutablePeriod10 = new org.joda.time.MutablePeriod(1L, chronology9);
        mutablePeriod7.add((org.joda.time.ReadablePeriod) mutablePeriod10);
        org.joda.time.Duration duration13 = org.joda.time.Duration.standardMinutes((-1L));
        long long14 = duration13.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant15 = null;
        org.joda.time.Period period16 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration13, readableInstant15);
        mutablePeriod10.setPeriod((org.joda.time.ReadablePeriod) period16);
        org.joda.time.PeriodType periodType18 = mutablePeriod10.getPeriodType();
        org.joda.time.Period period19 = duration2.toPeriod(periodType18);
        org.joda.time.ReadableInstant readableInstant20 = null;
        org.joda.time.ReadableInstant readableInstant21 = null;
        org.joda.time.Duration duration23 = org.joda.time.Duration.standardMinutes((-1L));
        long long24 = duration23.getStandardMinutes();
        org.joda.time.Duration duration26 = org.joda.time.Duration.standardMinutes((-1L));
        long long27 = duration26.getStandardMinutes();
        boolean boolean28 = duration23.isLongerThan((org.joda.time.ReadableDuration) duration26);
        org.joda.time.Duration duration30 = duration26.withMillis(1L);
        org.joda.time.Period period31 = new org.joda.time.Period(readableInstant21, (org.joda.time.ReadableDuration) duration26);
        org.joda.time.Period period33 = org.joda.time.Period.seconds((int) '#');
        int int34 = period33.getMillis();
        org.joda.time.Period period36 = period33.withMillis((int) '#');
        int int37 = period33.size();
        org.joda.time.Period period39 = period33.withMinutes(0);
        org.joda.time.Hours hours40 = period33.toStandardHours();
        org.joda.time.MutablePeriod mutablePeriod41 = hours40.toMutablePeriod();
        org.joda.time.MutablePeriod mutablePeriod42 = mutablePeriod41.toMutablePeriod();
        boolean boolean43 = duration26.equals((java.lang.Object) mutablePeriod42);
        org.joda.time.ReadableInstant readableInstant44 = null;
        org.joda.time.Duration duration46 = org.joda.time.Duration.standardMinutes((-1L));
        long long47 = duration46.getStandardMinutes();
        org.joda.time.Period period48 = duration46.toPeriod();
        org.joda.time.Duration duration50 = org.joda.time.Duration.standardMinutes((-1L));
        long long51 = duration50.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant52 = null;
        org.joda.time.Period period53 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration50, readableInstant52);
        org.joda.time.PeriodType periodType54 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology55 = null;
        org.joda.time.Period period56 = duration50.toPeriod(periodType54, chronology55);
        org.joda.time.Period period57 = duration46.toPeriod(periodType54);
        org.joda.time.Duration duration59 = org.joda.time.Duration.standardMinutes((-1L));
        long long60 = duration59.getStandardMinutes();
        boolean boolean61 = duration46.isLongerThan((org.joda.time.ReadableDuration) duration59);
        org.joda.time.PeriodType periodType62 = org.joda.time.PeriodType.weeks();
        org.joda.time.Period period63 = new org.joda.time.Period(readableInstant44, (org.joda.time.ReadableDuration) duration59, periodType62);
        org.joda.time.Chronology chronology64 = null;
        org.joda.time.Period period65 = duration59.toPeriod(chronology64);
        org.joda.time.Hours hours66 = period65.toStandardHours();
        org.joda.time.Period period68 = period65.plusMinutes((int) (byte) -1);
        org.joda.time.Period period77 = new org.joda.time.Period((int) (byte) 1, 100, (int) 'a', (int) (short) 100, (int) (short) 0, 0, 0, (int) (short) 1);
        org.joda.time.Period period78 = period65.minus((org.joda.time.ReadablePeriod) period77);
        org.joda.time.DurationFieldType durationFieldType79 = org.joda.time.DurationFieldType.hours();
        org.joda.time.Period period81 = period77.withField(durationFieldType79, 8);
        org.joda.time.PeriodType periodType82 = period77.getPeriodType();
        org.joda.time.MutablePeriod mutablePeriod83 = new org.joda.time.MutablePeriod(readableInstant20, (org.joda.time.ReadableDuration) duration26, periodType82);
        org.joda.time.MutablePeriod mutablePeriod84 = new org.joda.time.MutablePeriod(readableInstant0, (org.joda.time.ReadableDuration) duration2, periodType82);
        org.joda.time.ReadableInstant readableInstant85 = null;
        org.joda.time.Period period86 = duration2.toPeriodTo(readableInstant85);
        org.junit.Assert.assertNotNull(interval4);
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + (-1L) + "'", long14 == (-1L));
        org.junit.Assert.assertNotNull(periodType18);
        org.junit.Assert.assertNotNull(period19);
        org.junit.Assert.assertNotNull(duration23);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + (-1L) + "'", long24 == (-1L));
        org.junit.Assert.assertNotNull(duration26);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + (-1L) + "'", long27 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(duration30);
        org.junit.Assert.assertNotNull(period33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertNotNull(period36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 8 + "'", int37 == 8);
        org.junit.Assert.assertNotNull(period39);
        org.junit.Assert.assertNotNull(hours40);
        org.junit.Assert.assertNotNull(mutablePeriod41);
        org.junit.Assert.assertNotNull(mutablePeriod42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(duration46);
        org.junit.Assert.assertTrue("'" + long47 + "' != '" + (-1L) + "'", long47 == (-1L));
        org.junit.Assert.assertNotNull(period48);
        org.junit.Assert.assertNotNull(duration50);
        org.junit.Assert.assertTrue("'" + long51 + "' != '" + (-1L) + "'", long51 == (-1L));
        org.junit.Assert.assertNotNull(periodType54);
        org.junit.Assert.assertNotNull(period56);
        org.junit.Assert.assertNotNull(period57);
        org.junit.Assert.assertNotNull(duration59);
        org.junit.Assert.assertTrue("'" + long60 + "' != '" + (-1L) + "'", long60 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(periodType62);
        org.junit.Assert.assertNotNull(period65);
        org.junit.Assert.assertNotNull(hours66);
        org.junit.Assert.assertNotNull(period68);
        org.junit.Assert.assertNotNull(period78);
        org.junit.Assert.assertNotNull(durationFieldType79);
        org.junit.Assert.assertNotNull(period81);
        org.junit.Assert.assertNotNull(periodType82);
        org.junit.Assert.assertNotNull(period86);
    }

    @Test
    public void test17578() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17578");
        org.joda.time.MutablePeriod mutablePeriod8 = new org.joda.time.MutablePeriod((int) ' ', 10, (int) (short) 10, (int) (byte) -1, (int) (short) 1, (int) '#', (int) '#', 2);
        int int9 = mutablePeriod8.getWeeks();
        org.joda.time.PeriodType periodType13 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period14 = new org.joda.time.Period(10L, periodType13);
        org.joda.time.PeriodType periodType15 = periodType13.withHoursRemoved();
        org.joda.time.PeriodType periodType16 = periodType15.withDaysRemoved();
        org.joda.time.Chronology chronology17 = null;
        org.joda.time.MutablePeriod mutablePeriod18 = new org.joda.time.MutablePeriod((-1L), (long) (byte) -1, periodType16, chronology17);
        org.joda.time.Duration duration20 = org.joda.time.Duration.standardMinutes((-1L));
        long long21 = duration20.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant22 = null;
        org.joda.time.Period period23 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration20, readableInstant22);
        org.joda.time.Duration duration25 = org.joda.time.Duration.standardMinutes((-1L));
        long long26 = duration25.getStandardMinutes();
        org.joda.time.Period period27 = duration25.toPeriod();
        boolean boolean28 = duration20.isLongerThan((org.joda.time.ReadableDuration) duration25);
        org.joda.time.Duration duration30 = org.joda.time.Duration.standardMinutes((-1L));
        long long31 = duration30.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant32 = null;
        org.joda.time.Period period33 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration30, readableInstant32);
        org.joda.time.PeriodType periodType34 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology35 = null;
        org.joda.time.Period period36 = duration30.toPeriod(periodType34, chronology35);
        org.joda.time.Duration duration37 = duration25.minus((org.joda.time.ReadableDuration) duration30);
        org.joda.time.Duration duration38 = duration30.toDuration();
        java.lang.String str39 = duration30.toString();
        mutablePeriod18.setPeriod((org.joda.time.ReadableDuration) duration30);
        org.joda.time.Duration duration42 = org.joda.time.Duration.standardMinutes((-1L));
        long long43 = duration42.getStandardMinutes();
        org.joda.time.Period period44 = duration42.toPeriod();
        org.joda.time.DurationFieldType durationFieldType45 = org.joda.time.DurationFieldType.halfdays();
        org.joda.time.Period period47 = period44.withField(durationFieldType45, (int) (byte) 0);
        boolean boolean48 = mutablePeriod18.isSupported(durationFieldType45);
        java.lang.String str49 = durationFieldType45.toString();
        // The following exception was thrown during execution in test generation
        try {
            mutablePeriod8.add(durationFieldType45, (-23));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Period does not support field 'halfdays'");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 10 + "'", int9 == 10);
        org.junit.Assert.assertNotNull(periodType13);
        org.junit.Assert.assertNotNull(periodType15);
        org.junit.Assert.assertNotNull(periodType16);
        org.junit.Assert.assertNotNull(duration20);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + (-1L) + "'", long21 == (-1L));
        org.junit.Assert.assertNotNull(duration25);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + (-1L) + "'", long26 == (-1L));
        org.junit.Assert.assertNotNull(period27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(duration30);
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + (-1L) + "'", long31 == (-1L));
        org.junit.Assert.assertNotNull(periodType34);
        org.junit.Assert.assertNotNull(period36);
        org.junit.Assert.assertNotNull(duration37);
        org.junit.Assert.assertNotNull(duration38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "PT-60S" + "'", str39, "PT-60S");
        org.junit.Assert.assertNotNull(duration42);
        org.junit.Assert.assertTrue("'" + long43 + "' != '" + (-1L) + "'", long43 == (-1L));
        org.junit.Assert.assertNotNull(period44);
        org.junit.Assert.assertNotNull(durationFieldType45);
        org.junit.Assert.assertNotNull(period47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "halfdays" + "'", str49, "halfdays");
    }

    @Test
    public void test17579() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17579");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((-1L));
        long long2 = duration1.getStandardMinutes();
        org.joda.time.Duration duration4 = org.joda.time.Duration.standardMinutes((-1L));
        long long5 = duration4.getStandardMinutes();
        boolean boolean6 = duration1.isLongerThan((org.joda.time.ReadableDuration) duration4);
        long long7 = duration1.getStandardHours();
        org.joda.time.Duration duration10 = duration1.withDurationAdded(172800000L, 3);
        org.joda.time.ReadableInstant readableInstant11 = null;
        org.joda.time.Chronology chronology13 = null;
        org.joda.time.MutablePeriod mutablePeriod14 = new org.joda.time.MutablePeriod(1L, chronology13);
        org.joda.time.Chronology chronology16 = null;
        org.joda.time.MutablePeriod mutablePeriod17 = new org.joda.time.MutablePeriod(1L, chronology16);
        mutablePeriod14.add((org.joda.time.ReadablePeriod) mutablePeriod17);
        mutablePeriod14.setMillis((int) (short) 0);
        org.joda.time.Chronology chronology22 = null;
        mutablePeriod14.add((long) (short) 0, chronology22);
        org.joda.time.PeriodType periodType26 = org.joda.time.PeriodType.seconds();
        org.joda.time.PeriodType periodType27 = periodType26.withMinutesRemoved();
        org.joda.time.Chronology chronology28 = null;
        org.joda.time.MutablePeriod mutablePeriod29 = new org.joda.time.MutablePeriod((long) 0, (long) (short) 100, periodType26, chronology28);
        org.joda.time.PeriodType periodType30 = periodType26.withMillisRemoved();
        org.joda.time.Chronology chronology31 = null;
        org.joda.time.MutablePeriod mutablePeriod32 = new org.joda.time.MutablePeriod((java.lang.Object) mutablePeriod14, periodType30, chronology31);
        org.joda.time.PeriodType periodType33 = periodType30.withMonthsRemoved();
        org.joda.time.Period period34 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration1, readableInstant11, periodType33);
        org.joda.time.ReadableInstant readableInstant35 = null;
        org.joda.time.Duration duration37 = org.joda.time.Duration.standardSeconds((long) 2);
        org.joda.time.ReadableInstant readableInstant38 = null;
        org.joda.time.Period period39 = duration37.toPeriodFrom(readableInstant38);
        org.joda.time.PeriodType periodType42 = org.joda.time.PeriodType.seconds();
        org.joda.time.PeriodType periodType43 = periodType42.withMinutesRemoved();
        org.joda.time.Chronology chronology44 = null;
        org.joda.time.MutablePeriod mutablePeriod45 = new org.joda.time.MutablePeriod((long) 0, (long) (short) 100, periodType42, chronology44);
        int int46 = periodType42.size();
        int int47 = periodType42.size();
        org.joda.time.PeriodType periodType48 = periodType42.withMonthsRemoved();
        org.joda.time.MutablePeriod mutablePeriod49 = new org.joda.time.MutablePeriod(readableInstant35, (org.joda.time.ReadableDuration) duration37, periodType42);
        org.joda.time.Period period51 = org.joda.time.Period.seconds((int) '#');
        org.joda.time.Period period53 = period51.plusMinutes(10);
        org.joda.time.Period period55 = period51.minusSeconds((int) '4');
        org.joda.time.Period period57 = org.joda.time.Period.seconds((int) '#');
        int int58 = period57.getMillis();
        org.joda.time.Period period60 = period57.withMillis((int) '#');
        int int61 = period60.size();
        org.joda.time.DurationFieldType durationFieldType62 = org.joda.time.DurationFieldType.halfdays();
        boolean boolean63 = period60.isSupported(durationFieldType62);
        int int64 = period55.get(durationFieldType62);
        int int65 = periodType42.indexOf(durationFieldType62);
        boolean boolean66 = periodType33.equals((java.lang.Object) periodType42);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + (-1L) + "'", long2 == (-1L));
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + (-1L) + "'", long5 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 0L + "'", long7 == 0L);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertNotNull(periodType26);
        org.junit.Assert.assertNotNull(periodType27);
        org.junit.Assert.assertNotNull(periodType30);
        org.junit.Assert.assertNotNull(periodType33);
        org.junit.Assert.assertNotNull(duration37);
        org.junit.Assert.assertNotNull(period39);
        org.junit.Assert.assertNotNull(periodType42);
        org.junit.Assert.assertNotNull(periodType43);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 1 + "'", int46 == 1);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 1 + "'", int47 == 1);
        org.junit.Assert.assertNotNull(periodType48);
        org.junit.Assert.assertNotNull(period51);
        org.junit.Assert.assertNotNull(period53);
        org.junit.Assert.assertNotNull(period55);
        org.junit.Assert.assertNotNull(period57);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertNotNull(period60);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 8 + "'", int61 == 8);
        org.junit.Assert.assertNotNull(durationFieldType62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 0 + "'", int64 == 0);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + (-1) + "'", int65 == (-1));
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
    }

    @Test
    public void test17580() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17580");
        org.joda.time.format.PeriodPrinter periodPrinter8 = null;
        org.joda.time.format.PeriodParser periodParser9 = null;
        org.joda.time.format.PeriodFormatter periodFormatter10 = new org.joda.time.format.PeriodFormatter(periodPrinter8, periodParser9);
        boolean boolean11 = periodFormatter10.isPrinter();
        org.joda.time.format.PeriodParser periodParser12 = periodFormatter10.getParser();
        boolean boolean13 = periodFormatter10.isParser();
        org.joda.time.PeriodType periodType14 = periodFormatter10.getParseType();
        java.util.Locale locale15 = periodFormatter10.getLocale();
        java.util.Locale locale16 = null;
        org.joda.time.format.PeriodFormatter periodFormatter17 = periodFormatter10.withLocale(locale16);
        java.util.Locale locale18 = null;
        org.joda.time.format.PeriodFormatter periodFormatter19 = periodFormatter10.withLocale(locale18);
        org.joda.time.PeriodType periodType23 = org.joda.time.PeriodType.seconds();
        org.joda.time.PeriodType periodType24 = periodType23.withMinutesRemoved();
        org.joda.time.Chronology chronology25 = null;
        org.joda.time.MutablePeriod mutablePeriod26 = new org.joda.time.MutablePeriod((long) 0, (long) (short) 100, periodType23, chronology25);
        int int27 = periodType23.size();
        int int28 = periodType23.size();
        org.joda.time.PeriodType periodType29 = periodType23.withMonthsRemoved();
        org.joda.time.MutablePeriod mutablePeriod30 = new org.joda.time.MutablePeriod((long) (byte) -1, periodType23);
        org.joda.time.MutablePeriod mutablePeriod31 = new org.joda.time.MutablePeriod(periodType23);
        org.joda.time.format.PeriodFormatter periodFormatter32 = periodFormatter10.withParseType(periodType23);
        java.util.Locale locale33 = periodFormatter32.getLocale();
        boolean boolean34 = periodFormatter32.isPrinter();
        boolean boolean35 = periodFormatter32.isPrinter();
        org.joda.time.ReadableInstant readableInstant36 = null;
        org.joda.time.ReadableInstant readableInstant37 = null;
        org.joda.time.PeriodType periodType43 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period44 = new org.joda.time.Period(10L, periodType43);
        org.joda.time.PeriodType periodType45 = periodType43.withWeeksRemoved();
        org.joda.time.DurationFieldType durationFieldType46 = org.joda.time.DurationFieldType.millis();
        int int47 = periodType45.indexOf(durationFieldType46);
        org.joda.time.Period period48 = new org.joda.time.Period((long) 0, (long) (-60), periodType45);
        org.joda.time.Chronology chronology49 = null;
        org.joda.time.Period period50 = new org.joda.time.Period((-1L), (long) 7, periodType45, chronology49);
        java.lang.String str51 = periodType45.toString();
        org.joda.time.PeriodType periodType52 = periodType45.withHoursRemoved();
        org.joda.time.MutablePeriod mutablePeriod53 = new org.joda.time.MutablePeriod(readableInstant36, readableInstant37, periodType45);
        org.joda.time.format.PeriodFormatter periodFormatter54 = periodFormatter32.withParseType(periodType45);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.MutablePeriod mutablePeriod55 = new org.joda.time.MutablePeriod(55, 40, (-3), (-900), 100, (int) (short) 100, 6, (int) '4', periodType45);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Period does not support field 'years'");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(periodParser12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(periodType14);
        org.junit.Assert.assertNull(locale15);
        org.junit.Assert.assertNotNull(periodFormatter17);
        org.junit.Assert.assertNotNull(periodFormatter19);
        org.junit.Assert.assertNotNull(periodType23);
        org.junit.Assert.assertNotNull(periodType24);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1 + "'", int27 == 1);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 1 + "'", int28 == 1);
        org.junit.Assert.assertNotNull(periodType29);
        org.junit.Assert.assertNotNull(periodFormatter32);
        org.junit.Assert.assertNull(locale33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(periodType43);
        org.junit.Assert.assertNotNull(periodType45);
        org.junit.Assert.assertNotNull(durationFieldType46);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "PeriodType[Seconds]" + "'", str51, "PeriodType[Seconds]");
        org.junit.Assert.assertNotNull(periodType52);
        org.junit.Assert.assertNotNull(periodFormatter54);
    }

    @Test
    public void test17581() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17581");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((-1L));
        long long2 = duration1.getStandardMinutes();
        org.joda.time.Period period3 = duration1.toPeriod();
        org.joda.time.Period period5 = period3.withMonths(0);
        int int6 = period3.size();
        org.joda.time.MutablePeriod mutablePeriod7 = period3.toMutablePeriod();
        mutablePeriod7.addYears(100);
        org.joda.time.Chronology chronology12 = null;
        mutablePeriod7.setPeriod((long) 100, (-60000L), chronology12);
        org.joda.time.format.PeriodPrinter periodPrinter14 = null;
        org.joda.time.format.PeriodParser periodParser15 = null;
        org.joda.time.format.PeriodFormatter periodFormatter16 = new org.joda.time.format.PeriodFormatter(periodPrinter14, periodParser15);
        boolean boolean17 = periodFormatter16.isPrinter();
        org.joda.time.format.PeriodParser periodParser18 = periodFormatter16.getParser();
        java.util.Locale locale19 = null;
        org.joda.time.format.PeriodFormatter periodFormatter20 = periodFormatter16.withLocale(locale19);
        org.joda.time.PeriodType periodType21 = periodFormatter20.getParseType();
        org.joda.time.PeriodType periodType22 = periodFormatter20.getParseType();
        org.joda.time.format.PeriodParser periodParser23 = periodFormatter20.getParser();
        java.util.Locale locale24 = null;
        org.joda.time.format.PeriodFormatter periodFormatter25 = periodFormatter20.withLocale(locale24);
        java.util.Locale locale26 = periodFormatter20.getLocale();
        java.util.Locale locale27 = periodFormatter20.getLocale();
        boolean boolean28 = mutablePeriod7.equals((java.lang.Object) locale27);
        java.lang.Object obj29 = mutablePeriod7.clone();
        // The following exception was thrown during execution in test generation
        try {
            mutablePeriod7.setValue(27, 49);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 27");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + (-1L) + "'", long2 == (-1L));
        org.junit.Assert.assertNotNull(period3);
        org.junit.Assert.assertNotNull(period5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 8 + "'", int6 == 8);
        org.junit.Assert.assertNotNull(mutablePeriod7);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNull(periodParser18);
        org.junit.Assert.assertNotNull(periodFormatter20);
        org.junit.Assert.assertNull(periodType21);
        org.junit.Assert.assertNull(periodType22);
        org.junit.Assert.assertNull(periodParser23);
        org.junit.Assert.assertNotNull(periodFormatter25);
        org.junit.Assert.assertNull(locale26);
        org.junit.Assert.assertNull(locale27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertEquals(obj29.toString(), "PT-1M0.100S");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj29), "PT-1M0.100S");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj29), "PT-1M0.100S");
    }

    @Test
    public void test17582() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17582");
        org.joda.time.MutablePeriod mutablePeriod8 = new org.joda.time.MutablePeriod((-97), 0, (int) (byte) -1, 92, (int) (short) 1, 3, 39, (int) (short) 1);
    }

    @Test
    public void test17583() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17583");
        org.joda.time.Period period1 = org.joda.time.Period.millis((int) (short) 0);
        org.joda.time.Period period3 = period1.withMonths((int) '#');
        org.joda.time.ReadableInstant readableInstant4 = null;
        org.joda.time.Duration duration6 = org.joda.time.Duration.standardMinutes((-1L));
        long long7 = duration6.getStandardMinutes();
        org.joda.time.Duration duration9 = org.joda.time.Duration.standardMinutes((-1L));
        long long10 = duration9.getStandardMinutes();
        boolean boolean11 = duration6.isLongerThan((org.joda.time.ReadableDuration) duration9);
        org.joda.time.Duration duration13 = duration9.withMillis(1L);
        org.joda.time.Period period14 = new org.joda.time.Period(readableInstant4, (org.joda.time.ReadableDuration) duration9);
        org.joda.time.DurationFieldType durationFieldType15 = org.joda.time.DurationFieldType.weekyears();
        int int16 = period14.get(durationFieldType15);
        org.joda.time.MutablePeriod mutablePeriod17 = period14.toMutablePeriod();
        org.joda.time.Period period18 = period3.plus((org.joda.time.ReadablePeriod) mutablePeriod17);
        org.joda.time.Period period20 = period3.minusMillis(97);
        org.joda.time.Period period22 = period3.withMillis((-60));
        org.joda.time.Period period24 = period3.minusMinutes(34);
        int int25 = period24.getHours();
        org.joda.time.Period period27 = period24.minusMinutes(34);
        org.joda.time.Period period29 = period24.plusMonths((-101));
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(period3);
        org.junit.Assert.assertNotNull(duration6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + (-1L) + "'", long10 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertNotNull(durationFieldType15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod17);
        org.junit.Assert.assertNotNull(period18);
        org.junit.Assert.assertNotNull(period20);
        org.junit.Assert.assertNotNull(period22);
        org.junit.Assert.assertNotNull(period24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(period27);
        org.junit.Assert.assertNotNull(period29);
    }

    @Test
    public void test17584() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17584");
        org.joda.time.Period period8 = new org.joda.time.Period((int) (short) 1, 0, 100, (-1), (int) (byte) -1, (int) (short) 100, (int) (short) 100, (int) ' ');
        org.joda.time.Period period10 = period8.minusYears((int) (short) 100);
        org.joda.time.Period period12 = period10.minusWeeks(8);
        org.joda.time.Period period14 = period12.plusMinutes(997);
        org.joda.time.format.PeriodPrinter periodPrinter17 = null;
        org.joda.time.format.PeriodParser periodParser18 = null;
        org.joda.time.format.PeriodFormatter periodFormatter19 = new org.joda.time.format.PeriodFormatter(periodPrinter17, periodParser18);
        org.joda.time.format.PeriodPrinter periodPrinter20 = periodFormatter19.getPrinter();
        boolean boolean21 = periodFormatter19.isPrinter();
        org.joda.time.PeriodType periodType22 = org.joda.time.PeriodType.standard();
        org.joda.time.PeriodType periodType23 = periodType22.withMinutesRemoved();
        org.joda.time.PeriodType periodType24 = periodType23.withMillisRemoved();
        org.joda.time.format.PeriodFormatter periodFormatter25 = periodFormatter19.withParseType(periodType23);
        org.joda.time.PeriodType periodType26 = periodType23.withDaysRemoved();
        org.joda.time.Chronology chronology27 = null;
        org.joda.time.Period period28 = new org.joda.time.Period((long) (short) 0, (-59909L), periodType26, chronology27);
        org.joda.time.PeriodType periodType29 = periodType26.withDaysRemoved();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Period period30 = new org.joda.time.Period((java.lang.Object) period14, periodType26);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Period does not support field 'days'");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertNotNull(period14);
        org.junit.Assert.assertNull(periodPrinter20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(periodType22);
        org.junit.Assert.assertNotNull(periodType23);
        org.junit.Assert.assertNotNull(periodType24);
        org.junit.Assert.assertNotNull(periodFormatter25);
        org.junit.Assert.assertNotNull(periodType26);
        org.junit.Assert.assertNotNull(periodType29);
    }

    @Test
    public void test17585() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17585");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((-1L));
        long long2 = duration1.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.Period period4 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration1, readableInstant3);
        org.joda.time.Duration duration6 = org.joda.time.Duration.standardMinutes((-1L));
        long long7 = duration6.getStandardMinutes();
        org.joda.time.Period period8 = duration6.toPeriod();
        boolean boolean9 = duration1.isLongerThan((org.joda.time.ReadableDuration) duration6);
        org.joda.time.ReadableInstant readableInstant10 = null;
        org.joda.time.PeriodType periodType13 = org.joda.time.PeriodType.seconds();
        org.joda.time.PeriodType periodType14 = periodType13.withMinutesRemoved();
        org.joda.time.Chronology chronology15 = null;
        org.joda.time.MutablePeriod mutablePeriod16 = new org.joda.time.MutablePeriod((long) 0, (long) (short) 100, periodType13, chronology15);
        org.joda.time.PeriodType periodType17 = periodType13.withMillisRemoved();
        org.joda.time.Period period18 = duration1.toPeriodTo(readableInstant10, periodType17);
        org.joda.time.Duration duration20 = org.joda.time.Duration.standardMinutes((-1L));
        long long21 = duration20.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant22 = null;
        org.joda.time.Period period23 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration20, readableInstant22);
        org.joda.time.Duration duration25 = org.joda.time.Duration.standardMinutes((-1L));
        long long26 = duration25.getStandardMinutes();
        org.joda.time.Period period27 = duration25.toPeriod();
        boolean boolean28 = duration20.isLongerThan((org.joda.time.ReadableDuration) duration25);
        org.joda.time.Duration duration30 = org.joda.time.Duration.standardMinutes((-1L));
        long long31 = duration30.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant32 = null;
        org.joda.time.Period period33 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration30, readableInstant32);
        org.joda.time.PeriodType periodType34 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology35 = null;
        org.joda.time.Period period36 = duration30.toPeriod(periodType34, chronology35);
        org.joda.time.Duration duration37 = duration25.minus((org.joda.time.ReadableDuration) duration30);
        org.joda.time.ReadableInstant readableInstant38 = null;
        org.joda.time.Interval interval39 = duration37.toIntervalTo(readableInstant38);
        int int40 = duration1.compareTo((org.joda.time.ReadableDuration) duration37);
        org.joda.time.Duration duration41 = duration1.toDuration();
        org.joda.time.Duration duration43 = org.joda.time.Duration.standardHours((long) (byte) 1);
        org.joda.time.Duration duration45 = org.joda.time.Duration.standardMinutes((-1L));
        long long46 = duration45.getStandardMinutes();
        org.joda.time.Period period47 = duration45.toPeriod();
        org.joda.time.Duration duration49 = org.joda.time.Duration.standardMinutes((-1L));
        long long50 = duration49.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant51 = null;
        org.joda.time.Period period52 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration49, readableInstant51);
        org.joda.time.PeriodType periodType53 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology54 = null;
        org.joda.time.Period period55 = duration49.toPeriod(periodType53, chronology54);
        org.joda.time.Period period56 = duration45.toPeriod(periodType53);
        org.joda.time.Duration duration58 = org.joda.time.Duration.standardMinutes((-1L));
        long long59 = duration58.getStandardMinutes();
        boolean boolean60 = duration45.isLongerThan((org.joda.time.ReadableDuration) duration58);
        boolean boolean61 = duration43.isShorterThan((org.joda.time.ReadableDuration) duration58);
        org.joda.time.ReadableInstant readableInstant62 = null;
        org.joda.time.Interval interval63 = duration43.toIntervalFrom(readableInstant62);
        org.joda.time.ReadableInstant readableInstant64 = null;
        org.joda.time.ReadableInstant readableInstant65 = null;
        org.joda.time.Duration duration67 = org.joda.time.Duration.standardMinutes((-1L));
        long long68 = duration67.getStandardMinutes();
        org.joda.time.Period period69 = duration67.toPeriod();
        org.joda.time.Duration duration71 = org.joda.time.Duration.standardMinutes((-1L));
        long long72 = duration71.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant73 = null;
        org.joda.time.Period period74 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration71, readableInstant73);
        org.joda.time.PeriodType periodType75 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology76 = null;
        org.joda.time.Period period77 = duration71.toPeriod(periodType75, chronology76);
        org.joda.time.Period period78 = duration67.toPeriod(periodType75);
        org.joda.time.MutablePeriod mutablePeriod79 = new org.joda.time.MutablePeriod(readableInstant64, readableInstant65, periodType75);
        org.joda.time.Chronology chronology80 = null;
        org.joda.time.Period period81 = new org.joda.time.Period((java.lang.Object) duration43, periodType75, chronology80);
        long long82 = duration43.getMillis();
        long long83 = duration43.getStandardMinutes();
        boolean boolean84 = duration41.isEqual((org.joda.time.ReadableDuration) duration43);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + (-1L) + "'", long2 == (-1L));
        org.junit.Assert.assertNotNull(duration6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(periodType13);
        org.junit.Assert.assertNotNull(periodType14);
        org.junit.Assert.assertNotNull(periodType17);
        org.junit.Assert.assertNotNull(period18);
        org.junit.Assert.assertNotNull(duration20);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + (-1L) + "'", long21 == (-1L));
        org.junit.Assert.assertNotNull(duration25);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + (-1L) + "'", long26 == (-1L));
        org.junit.Assert.assertNotNull(period27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(duration30);
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + (-1L) + "'", long31 == (-1L));
        org.junit.Assert.assertNotNull(periodType34);
        org.junit.Assert.assertNotNull(period36);
        org.junit.Assert.assertNotNull(duration37);
        org.junit.Assert.assertNotNull(interval39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertNotNull(duration41);
        org.junit.Assert.assertNotNull(duration43);
        org.junit.Assert.assertNotNull(duration45);
        org.junit.Assert.assertTrue("'" + long46 + "' != '" + (-1L) + "'", long46 == (-1L));
        org.junit.Assert.assertNotNull(period47);
        org.junit.Assert.assertNotNull(duration49);
        org.junit.Assert.assertTrue("'" + long50 + "' != '" + (-1L) + "'", long50 == (-1L));
        org.junit.Assert.assertNotNull(periodType53);
        org.junit.Assert.assertNotNull(period55);
        org.junit.Assert.assertNotNull(period56);
        org.junit.Assert.assertNotNull(duration58);
        org.junit.Assert.assertTrue("'" + long59 + "' != '" + (-1L) + "'", long59 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(interval63);
        org.junit.Assert.assertNotNull(duration67);
        org.junit.Assert.assertTrue("'" + long68 + "' != '" + (-1L) + "'", long68 == (-1L));
        org.junit.Assert.assertNotNull(period69);
        org.junit.Assert.assertNotNull(duration71);
        org.junit.Assert.assertTrue("'" + long72 + "' != '" + (-1L) + "'", long72 == (-1L));
        org.junit.Assert.assertNotNull(periodType75);
        org.junit.Assert.assertNotNull(period77);
        org.junit.Assert.assertNotNull(period78);
        org.junit.Assert.assertTrue("'" + long82 + "' != '" + 3600000L + "'", long82 == 3600000L);
        org.junit.Assert.assertTrue("'" + long83 + "' != '" + 60L + "'", long83 == 60L);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
    }

    @Test
    public void test17586() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17586");
        org.joda.time.Period period1 = org.joda.time.Period.seconds((int) '#');
        int int2 = period1.getMillis();
        org.joda.time.Period period4 = period1.withMillis((int) '#');
        org.joda.time.DurationFieldType durationFieldType5 = org.joda.time.DurationFieldType.halfdays();
        boolean boolean6 = period1.isSupported(durationFieldType5);
        org.joda.time.Chronology chronology8 = null;
        org.joda.time.MutablePeriod mutablePeriod9 = new org.joda.time.MutablePeriod(1L, chronology8);
        org.joda.time.Period period11 = org.joda.time.Period.seconds((int) '#');
        mutablePeriod9.setPeriod((org.joda.time.ReadablePeriod) period11);
        org.joda.time.DurationFieldType durationFieldType13 = org.joda.time.DurationFieldType.years();
        java.lang.String str14 = durationFieldType13.getName();
        boolean boolean15 = mutablePeriod9.isSupported(durationFieldType13);
        int int16 = period1.get(durationFieldType13);
        org.joda.time.ReadableInstant readableInstant17 = null;
        org.joda.time.Duration duration19 = org.joda.time.Duration.standardMinutes((-1L));
        long long20 = duration19.getStandardMinutes();
        org.joda.time.Period period21 = duration19.toPeriod();
        org.joda.time.Duration duration23 = org.joda.time.Duration.standardMinutes((-1L));
        long long24 = duration23.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant25 = null;
        org.joda.time.Period period26 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration23, readableInstant25);
        org.joda.time.PeriodType periodType27 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology28 = null;
        org.joda.time.Period period29 = duration23.toPeriod(periodType27, chronology28);
        org.joda.time.Period period30 = duration19.toPeriod(periodType27);
        org.joda.time.Duration duration32 = org.joda.time.Duration.standardMinutes((-1L));
        long long33 = duration32.getStandardMinutes();
        boolean boolean34 = duration19.isLongerThan((org.joda.time.ReadableDuration) duration32);
        org.joda.time.PeriodType periodType35 = org.joda.time.PeriodType.weeks();
        org.joda.time.Period period36 = new org.joda.time.Period(readableInstant17, (org.joda.time.ReadableDuration) duration32, periodType35);
        boolean boolean37 = period1.equals((java.lang.Object) duration32);
        org.joda.time.ReadableInstant readableInstant38 = null;
        org.joda.time.ReadableInstant readableInstant39 = null;
        org.joda.time.Duration duration41 = org.joda.time.Duration.standardMinutes((-1L));
        long long42 = duration41.getStandardMinutes();
        org.joda.time.Duration duration44 = org.joda.time.Duration.standardMinutes((-1L));
        long long45 = duration44.getStandardMinutes();
        boolean boolean46 = duration41.isLongerThan((org.joda.time.ReadableDuration) duration44);
        org.joda.time.Duration duration48 = duration44.withMillis(1L);
        org.joda.time.Period period49 = new org.joda.time.Period(readableInstant39, (org.joda.time.ReadableDuration) duration44);
        org.joda.time.MutablePeriod mutablePeriod50 = new org.joda.time.MutablePeriod(readableInstant38, (org.joda.time.ReadableDuration) duration44);
        mutablePeriod50.addMinutes(0);
        org.joda.time.ReadableInstant readableInstant53 = null;
        org.joda.time.ReadableInstant readableInstant54 = null;
        mutablePeriod50.setPeriod(readableInstant53, readableInstant54);
        boolean boolean56 = duration32.equals((java.lang.Object) readableInstant54);
        org.joda.time.Duration duration59 = duration32.withDurationAdded((-60L), (int) (short) 10);
        long long60 = duration32.getStandardSeconds();
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(durationFieldType5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(durationFieldType13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "years" + "'", str14, "years");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(duration19);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + (-1L) + "'", long20 == (-1L));
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertNotNull(duration23);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + (-1L) + "'", long24 == (-1L));
        org.junit.Assert.assertNotNull(periodType27);
        org.junit.Assert.assertNotNull(period29);
        org.junit.Assert.assertNotNull(period30);
        org.junit.Assert.assertNotNull(duration32);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + (-1L) + "'", long33 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(periodType35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(duration41);
        org.junit.Assert.assertTrue("'" + long42 + "' != '" + (-1L) + "'", long42 == (-1L));
        org.junit.Assert.assertNotNull(duration44);
        org.junit.Assert.assertTrue("'" + long45 + "' != '" + (-1L) + "'", long45 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(duration48);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(duration59);
        org.junit.Assert.assertTrue("'" + long60 + "' != '" + (-60L) + "'", long60 == (-60L));
    }

    @Test
    public void test17587() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17587");
        org.joda.time.Period period8 = new org.joda.time.Period((int) ' ', (int) ' ', (int) '4', (int) (byte) 0, 1, (int) (byte) 1, 100, (int) (short) 1);
        org.joda.time.Period period10 = period8.withMillis(0);
        org.joda.time.Period period12 = period10.withSeconds((-17));
        int int13 = period10.getSeconds();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Seconds seconds14 = period10.toStandardSeconds();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Cannot convert to Seconds as this period contains months and months vary in length");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 100 + "'", int13 == 100);
    }

    @Test
    public void test17588() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17588");
        org.joda.time.Period period1 = org.joda.time.Period.seconds((int) '#');
        int int2 = period1.getMillis();
        org.joda.time.Period period4 = period1.withMillis((int) '#');
        int int5 = period1.size();
        org.joda.time.Period period7 = period1.withMinutes(0);
        org.joda.time.Hours hours8 = period1.toStandardHours();
        org.joda.time.Period period10 = period1.minusSeconds((int) (short) 0);
        org.joda.time.Period period11 = new org.joda.time.Period();
        org.joda.time.Period period12 = period10.minus((org.joda.time.ReadablePeriod) period11);
        org.joda.time.Hours hours13 = period12.toStandardHours();
        int int14 = period12.getHours();
        org.joda.time.Period period16 = period12.plusMinutes((int) (byte) 1);
        org.joda.time.DurationFieldType durationFieldType18 = period16.getFieldType(0);
        org.joda.time.Duration duration21 = org.joda.time.Duration.standardMinutes((-1L));
        long long22 = duration21.getStandardMinutes();
        org.joda.time.Period period23 = duration21.toPeriod();
        org.joda.time.Duration duration25 = org.joda.time.Duration.standardMinutes((-1L));
        long long26 = duration25.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant27 = null;
        org.joda.time.Period period28 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration25, readableInstant27);
        org.joda.time.PeriodType periodType29 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology30 = null;
        org.joda.time.Period period31 = duration25.toPeriod(periodType29, chronology30);
        org.joda.time.Period period32 = duration21.toPeriod(periodType29);
        org.joda.time.Duration duration34 = org.joda.time.Duration.standardMinutes((-1L));
        long long35 = duration34.getStandardMinutes();
        boolean boolean36 = duration21.isLongerThan((org.joda.time.ReadableDuration) duration34);
        org.joda.time.Duration duration38 = org.joda.time.Duration.standardMinutes((-1L));
        long long39 = duration38.getStandardMinutes();
        org.joda.time.Duration duration41 = org.joda.time.Duration.standardMinutes((-1L));
        long long42 = duration41.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant43 = null;
        org.joda.time.Period period44 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration41, readableInstant43);
        org.joda.time.PeriodType periodType45 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology46 = null;
        org.joda.time.Period period47 = duration41.toPeriod(periodType45, chronology46);
        org.joda.time.Duration duration48 = duration41.toDuration();
        org.joda.time.Duration duration50 = duration38.withDurationAdded((org.joda.time.ReadableDuration) duration48, 100);
        int int51 = duration34.compareTo((org.joda.time.ReadableDuration) duration50);
        org.joda.time.Duration duration52 = duration34.toDuration();
        org.joda.time.Period period53 = duration52.toPeriod();
        org.joda.time.Duration duration57 = org.joda.time.Duration.standardMinutes((-1L));
        long long58 = duration57.getStandardMinutes();
        org.joda.time.Period period59 = duration57.toPeriod();
        org.joda.time.Duration duration61 = org.joda.time.Duration.standardMinutes((-1L));
        long long62 = duration61.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant63 = null;
        org.joda.time.Period period64 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration61, readableInstant63);
        org.joda.time.PeriodType periodType65 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology66 = null;
        org.joda.time.Period period67 = duration61.toPeriod(periodType65, chronology66);
        org.joda.time.Period period68 = duration57.toPeriod(periodType65);
        org.joda.time.Chronology chronology69 = null;
        org.joda.time.MutablePeriod mutablePeriod70 = new org.joda.time.MutablePeriod(1L, (long) (byte) 100, periodType65, chronology69);
        org.joda.time.PeriodType periodType71 = periodType65.withMillisRemoved();
        org.joda.time.Period period72 = duration52.toPeriod(periodType71);
        org.joda.time.Chronology chronology73 = null;
        org.joda.time.MutablePeriod mutablePeriod74 = new org.joda.time.MutablePeriod((long) 7, periodType71, chronology73);
        org.joda.time.PeriodType periodType75 = periodType71.withMinutesRemoved();
        org.joda.time.PeriodType periodType76 = periodType75.withMinutesRemoved();
        java.lang.String str77 = periodType75.getName();
        org.joda.time.PeriodType periodType78 = periodType75.withHoursRemoved();
        org.joda.time.Period period79 = period16.normalizedStandard(periodType78);
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 8 + "'", int5 == 8);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertNotNull(durationFieldType18);
        org.junit.Assert.assertNotNull(duration21);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + (-1L) + "'", long22 == (-1L));
        org.junit.Assert.assertNotNull(period23);
        org.junit.Assert.assertNotNull(duration25);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + (-1L) + "'", long26 == (-1L));
        org.junit.Assert.assertNotNull(periodType29);
        org.junit.Assert.assertNotNull(period31);
        org.junit.Assert.assertNotNull(period32);
        org.junit.Assert.assertNotNull(duration34);
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + (-1L) + "'", long35 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(duration38);
        org.junit.Assert.assertTrue("'" + long39 + "' != '" + (-1L) + "'", long39 == (-1L));
        org.junit.Assert.assertNotNull(duration41);
        org.junit.Assert.assertTrue("'" + long42 + "' != '" + (-1L) + "'", long42 == (-1L));
        org.junit.Assert.assertNotNull(periodType45);
        org.junit.Assert.assertNotNull(period47);
        org.junit.Assert.assertNotNull(duration48);
        org.junit.Assert.assertNotNull(duration50);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 1 + "'", int51 == 1);
        org.junit.Assert.assertNotNull(duration52);
        org.junit.Assert.assertNotNull(period53);
        org.junit.Assert.assertNotNull(duration57);
        org.junit.Assert.assertTrue("'" + long58 + "' != '" + (-1L) + "'", long58 == (-1L));
        org.junit.Assert.assertNotNull(period59);
        org.junit.Assert.assertNotNull(duration61);
        org.junit.Assert.assertTrue("'" + long62 + "' != '" + (-1L) + "'", long62 == (-1L));
        org.junit.Assert.assertNotNull(periodType65);
        org.junit.Assert.assertNotNull(period67);
        org.junit.Assert.assertNotNull(period68);
        org.junit.Assert.assertNotNull(periodType71);
        org.junit.Assert.assertNotNull(period72);
        org.junit.Assert.assertNotNull(periodType75);
        org.junit.Assert.assertNotNull(periodType76);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "Days" + "'", str77, "Days");
        org.junit.Assert.assertNotNull(periodType78);
        org.junit.Assert.assertNotNull(period79);
    }

    @Test
    public void test17589() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17589");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((-1L));
        long long2 = duration1.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.Period period4 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration1, readableInstant3);
        org.joda.time.PeriodType periodType5 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology6 = null;
        org.joda.time.Period period7 = duration1.toPeriod(periodType5, chronology6);
        org.joda.time.Duration duration10 = duration1.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.ReadableInstant readableInstant11 = null;
        org.joda.time.ReadableInstant readableInstant12 = null;
        org.joda.time.Duration duration14 = org.joda.time.Duration.standardMinutes((-1L));
        long long15 = duration14.getStandardMinutes();
        org.joda.time.Period period16 = duration14.toPeriod();
        org.joda.time.Duration duration18 = org.joda.time.Duration.standardMinutes((-1L));
        long long19 = duration18.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant20 = null;
        org.joda.time.Period period21 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration18, readableInstant20);
        org.joda.time.PeriodType periodType22 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology23 = null;
        org.joda.time.Period period24 = duration18.toPeriod(periodType22, chronology23);
        org.joda.time.Period period25 = duration14.toPeriod(periodType22);
        org.joda.time.MutablePeriod mutablePeriod26 = new org.joda.time.MutablePeriod(readableInstant11, readableInstant12, periodType22);
        org.joda.time.Chronology chronology27 = null;
        org.joda.time.Period period28 = duration1.toPeriod(periodType22, chronology27);
        long long29 = duration1.getMillis();
        org.joda.time.Duration duration31 = org.joda.time.Duration.standardMinutes((-1L));
        long long32 = duration31.getStandardMinutes();
        org.joda.time.Period period33 = duration31.toPeriod();
        org.joda.time.Duration duration35 = org.joda.time.Duration.standardMinutes((-1L));
        long long36 = duration35.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant37 = null;
        org.joda.time.Period period38 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration35, readableInstant37);
        org.joda.time.PeriodType periodType39 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology40 = null;
        org.joda.time.Period period41 = duration35.toPeriod(periodType39, chronology40);
        org.joda.time.Period period42 = duration31.toPeriod(periodType39);
        org.joda.time.Duration duration44 = org.joda.time.Duration.standardMinutes((-1L));
        long long45 = duration44.getStandardMinutes();
        boolean boolean46 = duration31.isLongerThan((org.joda.time.ReadableDuration) duration44);
        org.joda.time.PeriodType periodType48 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology49 = null;
        org.joda.time.MutablePeriod mutablePeriod50 = new org.joda.time.MutablePeriod((long) '4', periodType48, chronology49);
        org.joda.time.Chronology chronology51 = null;
        org.joda.time.Period period52 = duration31.toPeriod(periodType48, chronology51);
        boolean boolean53 = duration1.isEqual((org.joda.time.ReadableDuration) duration31);
        org.joda.time.Duration duration55 = org.joda.time.Duration.standardMinutes((-1L));
        long long56 = duration55.getStandardMinutes();
        org.joda.time.Duration duration58 = org.joda.time.Duration.standardMinutes((-1L));
        long long59 = duration58.getStandardMinutes();
        boolean boolean60 = duration55.isLongerThan((org.joda.time.ReadableDuration) duration58);
        org.joda.time.Duration duration62 = duration58.withMillis((long) 1);
        org.joda.time.Chronology chronology64 = null;
        org.joda.time.MutablePeriod mutablePeriod65 = new org.joda.time.MutablePeriod(1L, chronology64);
        org.joda.time.Chronology chronology67 = null;
        org.joda.time.MutablePeriod mutablePeriod68 = new org.joda.time.MutablePeriod(1L, chronology67);
        mutablePeriod65.add((org.joda.time.ReadablePeriod) mutablePeriod68);
        boolean boolean70 = duration62.equals((java.lang.Object) mutablePeriod68);
        org.joda.time.Duration duration72 = org.joda.time.Duration.standardSeconds((-60L));
        boolean boolean73 = duration62.isEqual((org.joda.time.ReadableDuration) duration72);
        boolean boolean74 = duration31.isShorterThan((org.joda.time.ReadableDuration) duration62);
        org.joda.time.Duration duration76 = org.joda.time.Duration.standardHours((long) (byte) 1);
        org.joda.time.Duration duration78 = org.joda.time.Duration.standardMinutes((-1L));
        long long79 = duration78.getStandardMinutes();
        org.joda.time.Period period80 = duration78.toPeriod();
        org.joda.time.Duration duration82 = org.joda.time.Duration.standardMinutes((-1L));
        long long83 = duration82.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant84 = null;
        org.joda.time.Period period85 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration82, readableInstant84);
        org.joda.time.PeriodType periodType86 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology87 = null;
        org.joda.time.Period period88 = duration82.toPeriod(periodType86, chronology87);
        org.joda.time.Period period89 = duration78.toPeriod(periodType86);
        org.joda.time.Duration duration91 = org.joda.time.Duration.standardMinutes((-1L));
        long long92 = duration91.getStandardMinutes();
        boolean boolean93 = duration78.isLongerThan((org.joda.time.ReadableDuration) duration91);
        boolean boolean94 = duration76.isShorterThan((org.joda.time.ReadableDuration) duration91);
        int int95 = duration62.compareTo((org.joda.time.ReadableDuration) duration76);
        java.lang.String str96 = duration62.toString();
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + (-1L) + "'", long2 == (-1L));
        org.junit.Assert.assertNotNull(periodType5);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + (-1L) + "'", long15 == (-1L));
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertNotNull(duration18);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + (-1L) + "'", long19 == (-1L));
        org.junit.Assert.assertNotNull(periodType22);
        org.junit.Assert.assertNotNull(period24);
        org.junit.Assert.assertNotNull(period25);
        org.junit.Assert.assertNotNull(period28);
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + (-60000L) + "'", long29 == (-60000L));
        org.junit.Assert.assertNotNull(duration31);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + (-1L) + "'", long32 == (-1L));
        org.junit.Assert.assertNotNull(period33);
        org.junit.Assert.assertNotNull(duration35);
        org.junit.Assert.assertTrue("'" + long36 + "' != '" + (-1L) + "'", long36 == (-1L));
        org.junit.Assert.assertNotNull(periodType39);
        org.junit.Assert.assertNotNull(period41);
        org.junit.Assert.assertNotNull(period42);
        org.junit.Assert.assertNotNull(duration44);
        org.junit.Assert.assertTrue("'" + long45 + "' != '" + (-1L) + "'", long45 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(periodType48);
        org.junit.Assert.assertNotNull(period52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(duration55);
        org.junit.Assert.assertTrue("'" + long56 + "' != '" + (-1L) + "'", long56 == (-1L));
        org.junit.Assert.assertNotNull(duration58);
        org.junit.Assert.assertTrue("'" + long59 + "' != '" + (-1L) + "'", long59 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(duration62);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(duration72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(duration76);
        org.junit.Assert.assertNotNull(duration78);
        org.junit.Assert.assertTrue("'" + long79 + "' != '" + (-1L) + "'", long79 == (-1L));
        org.junit.Assert.assertNotNull(period80);
        org.junit.Assert.assertNotNull(duration82);
        org.junit.Assert.assertTrue("'" + long83 + "' != '" + (-1L) + "'", long83 == (-1L));
        org.junit.Assert.assertNotNull(periodType86);
        org.junit.Assert.assertNotNull(period88);
        org.junit.Assert.assertNotNull(period89);
        org.junit.Assert.assertNotNull(duration91);
        org.junit.Assert.assertTrue("'" + long92 + "' != '" + (-1L) + "'", long92 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertTrue("'" + int95 + "' != '" + (-1) + "'", int95 == (-1));
        org.junit.Assert.assertEquals("'" + str96 + "' != '" + "PT0.001S" + "'", str96, "PT0.001S");
    }

    @Test
    public void test17590() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17590");
        org.joda.time.Period period1 = org.joda.time.Period.seconds((int) '#');
        org.joda.time.Period period3 = period1.plusMinutes(10);
        org.joda.time.PeriodType periodType4 = period3.getPeriodType();
        org.joda.time.Period period6 = period3.plusMonths(0);
        org.joda.time.Minutes minutes7 = period6.toStandardMinutes();
        org.joda.time.Period period9 = period6.withMinutes(101);
        org.joda.time.Period period11 = period6.withYears((-6059968));
        org.joda.time.Period period13 = period11.withMonths((-6059968));
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(period3);
        org.junit.Assert.assertNotNull(periodType4);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(period13);
    }

    @Test
    public void test17591() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17591");
        org.joda.time.Period period1 = org.joda.time.Period.seconds((int) '#');
        org.joda.time.Period period3 = period1.plusMinutes(10);
        org.joda.time.Period period5 = period1.minusSeconds((int) '4');
        org.joda.time.Period period6 = period5.normalizedStandard();
        org.joda.time.Period period8 = period6.plusYears(10);
        int int9 = period8.getHours();
        org.joda.time.Period period11 = period8.plusMillis(44);
        org.joda.time.MutablePeriod mutablePeriod16 = new org.joda.time.MutablePeriod((int) ' ', 8, 0, (int) (short) 0);
        org.joda.time.Chronology chronology18 = null;
        org.joda.time.MutablePeriod mutablePeriod19 = new org.joda.time.MutablePeriod(1L, chronology18);
        org.joda.time.Period period21 = org.joda.time.Period.seconds((int) '#');
        mutablePeriod19.setPeriod((org.joda.time.ReadablePeriod) period21);
        mutablePeriod19.setPeriod((long) '#');
        int int25 = mutablePeriod19.getMinutes();
        org.joda.time.DurationFieldType durationFieldType26 = org.joda.time.DurationFieldType.weeks();
        int int27 = mutablePeriod19.indexOf(durationFieldType26);
        mutablePeriod19.setWeeks(2);
        org.joda.time.Period period34 = new org.joda.time.Period(0, (int) ' ', 100, (int) (short) 10);
        org.joda.time.Period period36 = period34.withMillis((-1));
        mutablePeriod19.add((org.joda.time.ReadablePeriod) period34);
        org.joda.time.ReadableInstant readableInstant38 = null;
        org.joda.time.ReadableInstant readableInstant39 = null;
        org.joda.time.MutablePeriod mutablePeriod40 = new org.joda.time.MutablePeriod(readableInstant38, readableInstant39);
        mutablePeriod40.setPeriod((long) 10, (long) 10);
        org.joda.time.MutablePeriod mutablePeriod44 = mutablePeriod40.toMutablePeriod();
        mutablePeriod40.addMillis((int) (byte) 10);
        org.joda.time.MutablePeriod mutablePeriod47 = mutablePeriod40.copy();
        int[] intArray48 = mutablePeriod40.getValues();
        org.joda.time.Duration duration50 = new org.joda.time.Duration(0L);
        org.joda.time.ReadableInstant readableInstant51 = null;
        org.joda.time.Interval interval52 = duration50.toIntervalFrom(readableInstant51);
        mutablePeriod40.add((org.joda.time.ReadableInterval) interval52);
        mutablePeriod19.setPeriod((org.joda.time.ReadableInterval) interval52);
        mutablePeriod16.setPeriod((org.joda.time.ReadableInterval) interval52);
        org.joda.time.Duration duration57 = org.joda.time.Duration.standardMinutes((long) '#');
        org.joda.time.ReadableInstant readableInstant58 = null;
        org.joda.time.ReadableInstant readableInstant59 = null;
        org.joda.time.ReadableInstant readableInstant60 = null;
        org.joda.time.ReadableInstant readableInstant61 = null;
        org.joda.time.ReadableInstant readableInstant62 = null;
        org.joda.time.PeriodType periodType64 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period65 = new org.joda.time.Period(10L, periodType64);
        org.joda.time.MutablePeriod mutablePeriod66 = new org.joda.time.MutablePeriod(readableInstant61, readableInstant62, periodType64);
        org.joda.time.Period period67 = new org.joda.time.Period(readableInstant59, readableInstant60, periodType64);
        org.joda.time.Period period68 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration57, readableInstant58, periodType64);
        org.joda.time.Chronology chronology69 = null;
        org.joda.time.MutablePeriod mutablePeriod70 = new org.joda.time.MutablePeriod((java.lang.Object) mutablePeriod16, periodType64, chronology69);
        org.joda.time.Period period71 = period8.plus((org.joda.time.ReadablePeriod) mutablePeriod70);
        org.joda.time.PeriodType periodType72 = mutablePeriod70.getPeriodType();
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(period3);
        org.junit.Assert.assertNotNull(period5);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(durationFieldType26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 2 + "'", int27 == 2);
        org.junit.Assert.assertNotNull(period36);
        org.junit.Assert.assertNotNull(mutablePeriod44);
        org.junit.Assert.assertNotNull(mutablePeriod47);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0, 0, 0, 0, 0, 0, 10]");
        org.junit.Assert.assertNotNull(interval52);
        org.junit.Assert.assertNotNull(duration57);
        org.junit.Assert.assertNotNull(periodType64);
        org.junit.Assert.assertNotNull(period71);
        org.junit.Assert.assertNotNull(periodType72);
    }

    @Test
    public void test17592() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17592");
        org.joda.time.Period period4 = new org.joda.time.Period((-97), 2, (-41), 60);
        org.joda.time.ReadableInstant readableInstant9 = null;
        org.joda.time.ReadableInstant readableInstant10 = null;
        org.joda.time.PeriodType periodType12 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period13 = new org.joda.time.Period(10L, periodType12);
        org.joda.time.MutablePeriod mutablePeriod14 = new org.joda.time.MutablePeriod(readableInstant9, readableInstant10, periodType12);
        java.lang.String str15 = periodType12.toString();
        org.joda.time.DurationFieldType durationFieldType17 = periodType12.getFieldType((int) (byte) 0);
        org.joda.time.Chronology chronology18 = null;
        org.joda.time.Period period19 = new org.joda.time.Period((-59909L), (-120L), periodType12, chronology18);
        org.joda.time.Chronology chronology20 = null;
        org.joda.time.MutablePeriod mutablePeriod21 = new org.joda.time.MutablePeriod((long) 2, 0L, periodType12, chronology20);
        org.joda.time.ReadableInstant readableInstant22 = null;
        org.joda.time.ReadableInstant readableInstant23 = null;
        org.joda.time.Duration duration25 = org.joda.time.Duration.standardMinutes((-1L));
        long long26 = duration25.getStandardMinutes();
        org.joda.time.Period period27 = duration25.toPeriod();
        org.joda.time.Duration duration29 = org.joda.time.Duration.standardMinutes((-1L));
        long long30 = duration29.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant31 = null;
        org.joda.time.Period period32 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration29, readableInstant31);
        org.joda.time.PeriodType periodType33 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology34 = null;
        org.joda.time.Period period35 = duration29.toPeriod(periodType33, chronology34);
        org.joda.time.Period period36 = duration25.toPeriod(periodType33);
        org.joda.time.MutablePeriod mutablePeriod37 = new org.joda.time.MutablePeriod(readableInstant22, readableInstant23, periodType33);
        boolean boolean38 = mutablePeriod21.equals((java.lang.Object) mutablePeriod37);
        org.joda.time.Chronology chronology41 = null;
        org.joda.time.MutablePeriod mutablePeriod42 = new org.joda.time.MutablePeriod(0L, (long) 10, chronology41);
        org.joda.time.DurationFieldType durationFieldType44 = mutablePeriod42.getFieldType((int) (short) 0);
        boolean boolean45 = mutablePeriod37.isSupported(durationFieldType44);
        org.joda.time.Chronology chronology46 = null;
        boolean boolean47 = durationFieldType44.isSupported(chronology46);
        int int48 = period4.indexOf(durationFieldType44);
        org.junit.Assert.assertNotNull(periodType12);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "PeriodType[Seconds]" + "'", str15, "PeriodType[Seconds]");
        org.junit.Assert.assertNotNull(durationFieldType17);
        org.junit.Assert.assertNotNull(duration25);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + (-1L) + "'", long26 == (-1L));
        org.junit.Assert.assertNotNull(period27);
        org.junit.Assert.assertNotNull(duration29);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + (-1L) + "'", long30 == (-1L));
        org.junit.Assert.assertNotNull(periodType33);
        org.junit.Assert.assertNotNull(period35);
        org.junit.Assert.assertNotNull(period36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(durationFieldType44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
    }

    @Test
    public void test17593() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17593");
        org.joda.time.format.PeriodPrinter periodPrinter1 = null;
        org.joda.time.format.PeriodParser periodParser2 = null;
        org.joda.time.format.PeriodFormatter periodFormatter3 = new org.joda.time.format.PeriodFormatter(periodPrinter1, periodParser2);
        org.joda.time.format.PeriodPrinter periodPrinter4 = periodFormatter3.getPrinter();
        org.joda.time.Chronology chronology6 = null;
        org.joda.time.MutablePeriod mutablePeriod7 = new org.joda.time.MutablePeriod(1L, chronology6);
        org.joda.time.Period period9 = org.joda.time.Period.seconds((int) '#');
        mutablePeriod7.setPeriod((org.joda.time.ReadablePeriod) period9);
        mutablePeriod7.addMillis((int) (short) 1);
        mutablePeriod7.setPeriod(8, (int) (byte) -1, 1, (int) (byte) 10, (int) (byte) -1, (int) (short) -1, 10, (int) (byte) -1);
        org.joda.time.PeriodType periodType22 = mutablePeriod7.getPeriodType();
        org.joda.time.PeriodType periodType23 = periodType22.withMillisRemoved();
        org.joda.time.format.PeriodFormatter periodFormatter24 = periodFormatter3.withParseType(periodType23);
        boolean boolean25 = periodFormatter3.isParser();
        java.util.Locale locale26 = null;
        org.joda.time.format.PeriodFormatter periodFormatter27 = periodFormatter3.withLocale(locale26);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Period period28 = org.joda.time.Period.parse("DayTime", periodFormatter27);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Parsing not supported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(periodPrinter4);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(periodType22);
        org.junit.Assert.assertNotNull(periodType23);
        org.junit.Assert.assertNotNull(periodFormatter24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(periodFormatter27);
    }

    @Test
    public void test17594() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17594");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.Duration duration2 = org.joda.time.Duration.standardMinutes((-1L));
        long long3 = duration2.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant4 = null;
        org.joda.time.Period period5 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration2, readableInstant4);
        org.joda.time.PeriodType periodType6 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology7 = null;
        org.joda.time.Period period8 = duration2.toPeriod(periodType6, chronology7);
        org.joda.time.Duration duration11 = duration2.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.ReadableInstant readableInstant12 = null;
        org.joda.time.ReadableInstant readableInstant13 = null;
        org.joda.time.Duration duration15 = org.joda.time.Duration.standardMinutes((-1L));
        long long16 = duration15.getStandardMinutes();
        org.joda.time.Period period17 = duration15.toPeriod();
        org.joda.time.Duration duration19 = org.joda.time.Duration.standardMinutes((-1L));
        long long20 = duration19.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant21 = null;
        org.joda.time.Period period22 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration19, readableInstant21);
        org.joda.time.PeriodType periodType23 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology24 = null;
        org.joda.time.Period period25 = duration19.toPeriod(periodType23, chronology24);
        org.joda.time.Period period26 = duration15.toPeriod(periodType23);
        org.joda.time.MutablePeriod mutablePeriod27 = new org.joda.time.MutablePeriod(readableInstant12, readableInstant13, periodType23);
        org.joda.time.Chronology chronology28 = null;
        org.joda.time.Period period29 = duration2.toPeriod(periodType23, chronology28);
        long long30 = duration2.getMillis();
        org.joda.time.Seconds seconds31 = duration2.toStandardSeconds();
        org.joda.time.PeriodType periodType34 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period35 = new org.joda.time.Period(10L, periodType34);
        org.joda.time.PeriodType periodType36 = periodType34.withWeeksRemoved();
        org.joda.time.MutablePeriod mutablePeriod37 = new org.joda.time.MutablePeriod((long) (byte) 0, periodType34);
        org.joda.time.Duration duration39 = org.joda.time.Duration.standardMinutes((-1L));
        long long40 = duration39.getStandardMinutes();
        org.joda.time.PeriodType periodType41 = null;
        org.joda.time.Period period42 = duration39.toPeriod(periodType41);
        org.joda.time.Chronology chronology43 = null;
        mutablePeriod37.setPeriod((org.joda.time.ReadableDuration) duration39, chronology43);
        org.joda.time.PeriodType periodType45 = mutablePeriod37.getPeriodType();
        org.joda.time.MutablePeriod mutablePeriod46 = new org.joda.time.MutablePeriod(readableInstant0, (org.joda.time.ReadableDuration) duration2, periodType45);
        org.junit.Assert.assertNotNull(duration2);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + (-1L) + "'", long3 == (-1L));
        org.junit.Assert.assertNotNull(periodType6);
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertNotNull(duration15);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + (-1L) + "'", long16 == (-1L));
        org.junit.Assert.assertNotNull(period17);
        org.junit.Assert.assertNotNull(duration19);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + (-1L) + "'", long20 == (-1L));
        org.junit.Assert.assertNotNull(periodType23);
        org.junit.Assert.assertNotNull(period25);
        org.junit.Assert.assertNotNull(period26);
        org.junit.Assert.assertNotNull(period29);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + (-60000L) + "'", long30 == (-60000L));
        org.junit.Assert.assertNotNull(seconds31);
        org.junit.Assert.assertNotNull(periodType34);
        org.junit.Assert.assertNotNull(periodType36);
        org.junit.Assert.assertNotNull(duration39);
        org.junit.Assert.assertTrue("'" + long40 + "' != '" + (-1L) + "'", long40 == (-1L));
        org.junit.Assert.assertNotNull(period42);
        org.junit.Assert.assertNotNull(periodType45);
    }

    @Test
    public void test17595() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17595");
        org.joda.time.Period period1 = org.joda.time.Period.seconds((int) '#');
        int int2 = period1.getMillis();
        org.joda.time.Period period4 = period1.plusWeeks((int) (byte) 0);
        org.joda.time.ReadableInstant readableInstant5 = null;
        org.joda.time.ReadableInstant readableInstant6 = null;
        org.joda.time.Period period8 = org.joda.time.Period.seconds((int) '#');
        int int9 = period8.getMillis();
        org.joda.time.Period period11 = period8.withMillis((int) '#');
        org.joda.time.DurationFieldType durationFieldType12 = org.joda.time.DurationFieldType.halfdays();
        boolean boolean13 = period8.isSupported(durationFieldType12);
        org.joda.time.Chronology chronology15 = null;
        org.joda.time.MutablePeriod mutablePeriod16 = new org.joda.time.MutablePeriod(1L, chronology15);
        org.joda.time.Period period18 = org.joda.time.Period.seconds((int) '#');
        mutablePeriod16.setPeriod((org.joda.time.ReadablePeriod) period18);
        org.joda.time.DurationFieldType durationFieldType20 = org.joda.time.DurationFieldType.years();
        java.lang.String str21 = durationFieldType20.getName();
        boolean boolean22 = mutablePeriod16.isSupported(durationFieldType20);
        int int23 = period8.get(durationFieldType20);
        org.joda.time.Duration duration25 = org.joda.time.Duration.standardMinutes((-1L));
        long long26 = duration25.getStandardMinutes();
        org.joda.time.Period period27 = duration25.toPeriod();
        org.joda.time.Duration duration29 = org.joda.time.Duration.standardMinutes((-1L));
        long long30 = duration29.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant31 = null;
        org.joda.time.Period period32 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration29, readableInstant31);
        org.joda.time.PeriodType periodType33 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology34 = null;
        org.joda.time.Period period35 = duration29.toPeriod(periodType33, chronology34);
        org.joda.time.Period period36 = duration25.toPeriod(periodType33);
        org.joda.time.PeriodType periodType38 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period39 = new org.joda.time.Period(10L, periodType38);
        org.joda.time.PeriodType periodType40 = periodType38.withWeeksRemoved();
        org.joda.time.Period period41 = period36.withPeriodType(periodType40);
        org.joda.time.Period period42 = period8.normalizedStandard(periodType40);
        org.joda.time.PeriodType periodType43 = periodType40.withSecondsRemoved();
        org.joda.time.MutablePeriod mutablePeriod44 = new org.joda.time.MutablePeriod(readableInstant5, readableInstant6, periodType43);
        org.joda.time.Period period45 = period4.minus((org.joda.time.ReadablePeriod) mutablePeriod44);
        // The following exception was thrown during execution in test generation
        try {
            mutablePeriod44.addMinutes((-100));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Period does not support field 'minutes'");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(durationFieldType12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(period18);
        org.junit.Assert.assertNotNull(durationFieldType20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "years" + "'", str21, "years");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(duration25);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + (-1L) + "'", long26 == (-1L));
        org.junit.Assert.assertNotNull(period27);
        org.junit.Assert.assertNotNull(duration29);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + (-1L) + "'", long30 == (-1L));
        org.junit.Assert.assertNotNull(periodType33);
        org.junit.Assert.assertNotNull(period35);
        org.junit.Assert.assertNotNull(period36);
        org.junit.Assert.assertNotNull(periodType38);
        org.junit.Assert.assertNotNull(periodType40);
        org.junit.Assert.assertNotNull(period41);
        org.junit.Assert.assertNotNull(period42);
        org.junit.Assert.assertNotNull(periodType43);
        org.junit.Assert.assertNotNull(period45);
    }

    @Test
    public void test17596() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17596");
        org.joda.time.Period period2 = new org.joda.time.Period((long) 7, (-36L));
        org.joda.time.Weeks weeks3 = period2.toStandardWeeks();
        org.joda.time.Period period5 = period2.plusYears(98);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(period5);
    }

    @Test
    public void test17597() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17597");
        org.joda.time.PeriodType periodType2 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period3 = new org.joda.time.Period(10L, periodType2);
        org.joda.time.PeriodType periodType4 = periodType2.withWeeksRemoved();
        org.joda.time.MutablePeriod mutablePeriod5 = new org.joda.time.MutablePeriod((long) (byte) 0, periodType2);
        java.lang.String str6 = mutablePeriod5.toString();
        int int7 = mutablePeriod5.getMinutes();
        org.joda.time.ReadableInterval readableInterval8 = null;
        mutablePeriod5.add(readableInterval8);
        mutablePeriod5.addMillis((int) (short) 0);
        org.joda.time.Duration duration13 = org.joda.time.Duration.standardMinutes((-1L));
        long long14 = duration13.getStandardMinutes();
        org.joda.time.Duration duration16 = org.joda.time.Duration.standardMinutes((-1L));
        long long17 = duration16.getStandardMinutes();
        boolean boolean18 = duration13.isLongerThan((org.joda.time.ReadableDuration) duration16);
        org.joda.time.Duration duration20 = duration16.withMillis((long) 1);
        org.joda.time.Chronology chronology22 = null;
        org.joda.time.MutablePeriod mutablePeriod23 = new org.joda.time.MutablePeriod(1L, chronology22);
        org.joda.time.Chronology chronology25 = null;
        org.joda.time.MutablePeriod mutablePeriod26 = new org.joda.time.MutablePeriod(1L, chronology25);
        mutablePeriod23.add((org.joda.time.ReadablePeriod) mutablePeriod26);
        boolean boolean28 = duration20.equals((java.lang.Object) mutablePeriod26);
        org.joda.time.Period period29 = duration20.toPeriod();
        org.joda.time.Chronology chronology30 = null;
        mutablePeriod5.setPeriod((org.joda.time.ReadableDuration) duration20, chronology30);
        org.joda.time.Duration duration33 = org.joda.time.Duration.standardMinutes((-1L));
        long long34 = duration33.getStandardMinutes();
        org.joda.time.Duration duration36 = org.joda.time.Duration.standardMinutes((-1L));
        long long37 = duration36.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant38 = null;
        org.joda.time.Period period39 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration36, readableInstant38);
        org.joda.time.PeriodType periodType40 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology41 = null;
        org.joda.time.Period period42 = duration36.toPeriod(periodType40, chronology41);
        org.joda.time.Duration duration43 = duration36.toDuration();
        org.joda.time.Duration duration45 = duration33.withDurationAdded((org.joda.time.ReadableDuration) duration43, 100);
        org.joda.time.ReadableInstant readableInstant46 = null;
        org.joda.time.ReadableInstant readableInstant47 = null;
        org.joda.time.PeriodType periodType48 = org.joda.time.PeriodType.yearMonthDay();
        org.joda.time.MutablePeriod mutablePeriod49 = new org.joda.time.MutablePeriod(readableInstant46, readableInstant47, periodType48);
        boolean boolean50 = duration45.equals((java.lang.Object) readableInstant46);
        org.joda.time.Minutes minutes51 = duration45.toStandardMinutes();
        boolean boolean52 = duration20.isShorterThan((org.joda.time.ReadableDuration) duration45);
        org.joda.time.ReadableInstant readableInstant53 = null;
        org.joda.time.MutablePeriod mutablePeriod54 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration45, readableInstant53);
        mutablePeriod54.addDays((-17));
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(periodType4);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "PT0S" + "'", str6, "PT0S");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + (-1L) + "'", long14 == (-1L));
        org.junit.Assert.assertNotNull(duration16);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + (-1L) + "'", long17 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(duration20);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(period29);
        org.junit.Assert.assertNotNull(duration33);
        org.junit.Assert.assertTrue("'" + long34 + "' != '" + (-1L) + "'", long34 == (-1L));
        org.junit.Assert.assertNotNull(duration36);
        org.junit.Assert.assertTrue("'" + long37 + "' != '" + (-1L) + "'", long37 == (-1L));
        org.junit.Assert.assertNotNull(periodType40);
        org.junit.Assert.assertNotNull(period42);
        org.junit.Assert.assertNotNull(duration43);
        org.junit.Assert.assertNotNull(duration45);
        org.junit.Assert.assertNotNull(periodType48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(minutes51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
    }

    @Test
    public void test17598() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17598");
        org.joda.time.format.PeriodPrinter periodPrinter0 = null;
        org.joda.time.format.PeriodParser periodParser1 = null;
        org.joda.time.format.PeriodFormatter periodFormatter2 = new org.joda.time.format.PeriodFormatter(periodPrinter0, periodParser1);
        org.joda.time.format.PeriodPrinter periodPrinter3 = periodFormatter2.getPrinter();
        boolean boolean4 = periodFormatter2.isParser();
        java.util.Locale locale5 = periodFormatter2.getLocale();
        org.joda.time.PeriodType periodType6 = periodFormatter2.getParseType();
        java.util.Locale locale7 = null;
        org.joda.time.format.PeriodFormatter periodFormatter8 = periodFormatter2.withLocale(locale7);
        boolean boolean9 = periodFormatter2.isParser();
        boolean boolean10 = periodFormatter2.isPrinter();
        org.joda.time.PeriodType periodType11 = periodFormatter2.getParseType();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.MutablePeriod mutablePeriod13 = periodFormatter2.parseMutablePeriod("PT18000S");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Parsing not supported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(periodPrinter3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(locale5);
        org.junit.Assert.assertNull(periodType6);
        org.junit.Assert.assertNotNull(periodFormatter8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(periodType11);
    }

    @Test
    public void test17599() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17599");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((-1L));
        long long2 = duration1.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.Period period4 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration1, readableInstant3);
        org.joda.time.PeriodType periodType5 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology6 = null;
        org.joda.time.Period period7 = duration1.toPeriod(periodType5, chronology6);
        org.joda.time.Duration duration8 = duration1.toDuration();
        org.joda.time.Chronology chronology9 = null;
        org.joda.time.Period period10 = duration1.toPeriod(chronology9);
        org.joda.time.Period period12 = period10.minusMillis(10);
        org.joda.time.Period period14 = period10.plusHours(9);
        org.joda.time.Period period16 = period10.plusDays(7);
        int int18 = period16.getValue((int) (byte) 0);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + (-1L) + "'", long2 == (-1L));
        org.junit.Assert.assertNotNull(periodType5);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(duration8);
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertNotNull(period14);
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
    }

    @Test
    public void test17600() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17600");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((-1L));
        long long2 = duration1.getStandardMinutes();
        org.joda.time.Period period3 = duration1.toPeriod();
        org.joda.time.Duration duration5 = org.joda.time.Duration.standardMinutes((-1L));
        long long6 = duration5.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.Period period8 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration5, readableInstant7);
        org.joda.time.PeriodType periodType9 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology10 = null;
        org.joda.time.Period period11 = duration5.toPeriod(periodType9, chronology10);
        org.joda.time.Period period12 = duration1.toPeriod(periodType9);
        org.joda.time.PeriodType periodType14 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period15 = new org.joda.time.Period(10L, periodType14);
        org.joda.time.PeriodType periodType16 = periodType14.withWeeksRemoved();
        org.joda.time.Period period17 = period12.withPeriodType(periodType16);
        org.joda.time.PeriodType periodType18 = period17.getPeriodType();
        int int19 = periodType18.size();
        org.joda.time.PeriodType periodType20 = periodType18.withWeeksRemoved();
        org.joda.time.PeriodType periodType21 = periodType20.withMillisRemoved();
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + (-1L) + "'", long2 == (-1L));
        org.junit.Assert.assertNotNull(period3);
        org.junit.Assert.assertNotNull(duration5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
        org.junit.Assert.assertNotNull(periodType9);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertNotNull(periodType14);
        org.junit.Assert.assertNotNull(periodType16);
        org.junit.Assert.assertNotNull(period17);
        org.junit.Assert.assertNotNull(periodType18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertNotNull(periodType20);
        org.junit.Assert.assertNotNull(periodType21);
    }

    @Test
    public void test17601() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17601");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.Duration duration2 = org.joda.time.Duration.standardMinutes((-1L));
        long long3 = duration2.getStandardMinutes();
        org.joda.time.Period period4 = duration2.toPeriod();
        org.joda.time.Duration duration6 = org.joda.time.Duration.standardMinutes((-1L));
        long long7 = duration6.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.Period period9 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration6, readableInstant8);
        org.joda.time.PeriodType periodType10 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology11 = null;
        org.joda.time.Period period12 = duration6.toPeriod(periodType10, chronology11);
        org.joda.time.Period period13 = duration2.toPeriod(periodType10);
        org.joda.time.Duration duration15 = org.joda.time.Duration.standardMinutes((-1L));
        long long16 = duration15.getStandardMinutes();
        boolean boolean17 = duration2.isLongerThan((org.joda.time.ReadableDuration) duration15);
        org.joda.time.PeriodType periodType18 = org.joda.time.PeriodType.weeks();
        org.joda.time.Period period19 = new org.joda.time.Period(readableInstant0, (org.joda.time.ReadableDuration) duration15, periodType18);
        org.joda.time.Chronology chronology20 = null;
        org.joda.time.Period period21 = duration15.toPeriod(chronology20);
        org.joda.time.Duration duration23 = org.joda.time.Duration.standardMinutes((-1L));
        long long24 = duration23.getStandardMinutes();
        org.joda.time.Period period25 = duration23.toPeriod();
        org.joda.time.Duration duration27 = org.joda.time.Duration.standardMinutes((-1L));
        long long28 = duration27.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant29 = null;
        org.joda.time.Period period30 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration27, readableInstant29);
        org.joda.time.PeriodType periodType31 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology32 = null;
        org.joda.time.Period period33 = duration27.toPeriod(periodType31, chronology32);
        org.joda.time.Period period34 = duration23.toPeriod(periodType31);
        boolean boolean35 = duration15.isShorterThan((org.joda.time.ReadableDuration) duration23);
        org.joda.time.ReadableInstant readableInstant36 = null;
        org.joda.time.Period period37 = duration23.toPeriodTo(readableInstant36);
        long long38 = duration23.getStandardSeconds();
        org.joda.time.Chronology chronology40 = null;
        org.joda.time.MutablePeriod mutablePeriod41 = new org.joda.time.MutablePeriod(1L, chronology40);
        org.joda.time.Period period43 = org.joda.time.Period.seconds((int) '#');
        mutablePeriod41.setPeriod((org.joda.time.ReadablePeriod) period43);
        mutablePeriod41.setWeeks((int) ' ');
        org.joda.time.Duration duration48 = org.joda.time.Duration.standardMinutes((-1L));
        long long49 = duration48.getStandardMinutes();
        org.joda.time.Duration duration51 = org.joda.time.Duration.standardMinutes((-1L));
        long long52 = duration51.getStandardMinutes();
        boolean boolean53 = duration48.isLongerThan((org.joda.time.ReadableDuration) duration51);
        org.joda.time.Period period54 = duration51.toPeriod();
        org.joda.time.Minutes minutes55 = duration51.toStandardMinutes();
        org.joda.time.Duration duration57 = org.joda.time.Duration.standardMinutes((-1L));
        long long58 = duration57.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant59 = null;
        org.joda.time.Period period60 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration57, readableInstant59);
        org.joda.time.PeriodType periodType61 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology62 = null;
        org.joda.time.Period period63 = duration57.toPeriod(periodType61, chronology62);
        org.joda.time.Duration duration66 = duration57.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration67 = duration51.plus((org.joda.time.ReadableDuration) duration66);
        org.joda.time.Period period68 = duration66.toPeriod();
        int[] intArray69 = period68.getValues();
        org.joda.time.Period period71 = period68.withSeconds(1);
        mutablePeriod41.add((org.joda.time.ReadablePeriod) period68);
        int int73 = mutablePeriod41.getMillis();
        org.joda.time.MutablePeriod mutablePeriod74 = mutablePeriod41.copy();
        org.joda.time.PeriodType periodType75 = mutablePeriod74.getPeriodType();
        org.joda.time.Chronology chronology76 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Period period77 = new org.joda.time.Period((java.lang.Object) long38, periodType75, chronology76);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: No period converter found for type: java.lang.Long");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(duration2);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + (-1L) + "'", long3 == (-1L));
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(duration6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(periodType10);
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertNotNull(period13);
        org.junit.Assert.assertNotNull(duration15);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + (-1L) + "'", long16 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(periodType18);
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertNotNull(duration23);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + (-1L) + "'", long24 == (-1L));
        org.junit.Assert.assertNotNull(period25);
        org.junit.Assert.assertNotNull(duration27);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + (-1L) + "'", long28 == (-1L));
        org.junit.Assert.assertNotNull(periodType31);
        org.junit.Assert.assertNotNull(period33);
        org.junit.Assert.assertNotNull(period34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(period37);
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + (-60L) + "'", long38 == (-60L));
        org.junit.Assert.assertNotNull(period43);
        org.junit.Assert.assertNotNull(duration48);
        org.junit.Assert.assertTrue("'" + long49 + "' != '" + (-1L) + "'", long49 == (-1L));
        org.junit.Assert.assertNotNull(duration51);
        org.junit.Assert.assertTrue("'" + long52 + "' != '" + (-1L) + "'", long52 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(period54);
        org.junit.Assert.assertNotNull(minutes55);
        org.junit.Assert.assertNotNull(duration57);
        org.junit.Assert.assertTrue("'" + long58 + "' != '" + (-1L) + "'", long58 == (-1L));
        org.junit.Assert.assertNotNull(periodType61);
        org.junit.Assert.assertNotNull(period63);
        org.junit.Assert.assertNotNull(duration66);
        org.junit.Assert.assertNotNull(duration67);
        org.junit.Assert.assertNotNull(period68);
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0, 0, 0, 0, -1, 0, 0]");
        org.junit.Assert.assertNotNull(period71);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 0 + "'", int73 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod74);
        org.junit.Assert.assertNotNull(periodType75);
    }

    @Test
    public void test17602() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17602");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.Duration duration2 = new org.joda.time.Duration((long) (-10));
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.Period period4 = duration2.toPeriodFrom(readableInstant3);
        org.joda.time.Duration duration6 = duration2.plus((-1L));
        org.joda.time.ReadableInstant readableInstant9 = null;
        org.joda.time.Duration duration11 = org.joda.time.Duration.standardHours((long) 10);
        org.joda.time.Duration duration13 = org.joda.time.Duration.standardMinutes((-1L));
        long long14 = duration13.getStandardMinutes();
        org.joda.time.Duration duration16 = org.joda.time.Duration.standardMinutes((-1L));
        long long17 = duration16.getStandardMinutes();
        boolean boolean18 = duration13.isLongerThan((org.joda.time.ReadableDuration) duration16);
        org.joda.time.Period period19 = duration16.toPeriod();
        org.joda.time.Minutes minutes20 = duration16.toStandardMinutes();
        boolean boolean21 = duration11.isEqual((org.joda.time.ReadableDuration) duration16);
        org.joda.time.Duration duration23 = org.joda.time.Duration.standardMinutes((-1L));
        long long24 = duration23.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant25 = null;
        org.joda.time.Period period26 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration23, readableInstant25);
        org.joda.time.PeriodType periodType27 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology28 = null;
        org.joda.time.Period period29 = duration23.toPeriod(periodType27, chronology28);
        org.joda.time.Duration duration32 = duration23.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration34 = org.joda.time.Duration.standardMinutes((-1L));
        long long35 = duration34.getStandardMinutes();
        org.joda.time.Duration duration37 = org.joda.time.Duration.standardMinutes((-1L));
        long long38 = duration37.getStandardMinutes();
        boolean boolean39 = duration34.isLongerThan((org.joda.time.ReadableDuration) duration37);
        org.joda.time.Duration duration41 = duration37.withMillis((long) 1);
        boolean boolean42 = duration32.isShorterThan((org.joda.time.ReadableDuration) duration37);
        boolean boolean43 = duration16.isEqual((org.joda.time.ReadableDuration) duration37);
        org.joda.time.ReadableInstant readableInstant44 = null;
        org.joda.time.MutablePeriod mutablePeriod45 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration16, readableInstant44);
        org.joda.time.Duration duration47 = org.joda.time.Duration.standardMinutes((-1L));
        long long48 = duration47.getStandardMinutes();
        org.joda.time.Period period49 = duration47.toPeriod();
        org.joda.time.Duration duration51 = org.joda.time.Duration.standardMinutes((-1L));
        long long52 = duration51.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant53 = null;
        org.joda.time.Period period54 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration51, readableInstant53);
        org.joda.time.PeriodType periodType55 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology56 = null;
        org.joda.time.Period period57 = duration51.toPeriod(periodType55, chronology56);
        org.joda.time.Period period58 = duration47.toPeriod(periodType55);
        org.joda.time.Duration duration60 = org.joda.time.Duration.standardMinutes((-1L));
        long long61 = duration60.getStandardMinutes();
        boolean boolean62 = duration47.isLongerThan((org.joda.time.ReadableDuration) duration60);
        org.joda.time.Duration duration64 = duration60.withMillis((long) 0);
        org.joda.time.PeriodType periodType65 = org.joda.time.PeriodType.weeks();
        org.joda.time.Period period66 = duration64.toPeriod(periodType65);
        org.joda.time.Period period67 = new org.joda.time.Period(readableInstant9, (org.joda.time.ReadableDuration) duration16, periodType65);
        org.joda.time.PeriodType periodType68 = periodType65.withYearsRemoved();
        org.joda.time.Period period69 = new org.joda.time.Period((long) 8, (long) (-90), periodType65);
        org.joda.time.Period period70 = new org.joda.time.Period(readableInstant0, (org.joda.time.ReadableDuration) duration6, periodType65);
        org.joda.time.PeriodType periodType71 = periodType65.withWeeksRemoved();
        org.joda.time.PeriodType periodType72 = org.joda.time.PeriodType.standard();
        boolean boolean73 = periodType65.equals((java.lang.Object) periodType72);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(duration6);
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + (-1L) + "'", long14 == (-1L));
        org.junit.Assert.assertNotNull(duration16);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + (-1L) + "'", long17 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(period19);
        org.junit.Assert.assertNotNull(minutes20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(duration23);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + (-1L) + "'", long24 == (-1L));
        org.junit.Assert.assertNotNull(periodType27);
        org.junit.Assert.assertNotNull(period29);
        org.junit.Assert.assertNotNull(duration32);
        org.junit.Assert.assertNotNull(duration34);
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + (-1L) + "'", long35 == (-1L));
        org.junit.Assert.assertNotNull(duration37);
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + (-1L) + "'", long38 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(duration41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(duration47);
        org.junit.Assert.assertTrue("'" + long48 + "' != '" + (-1L) + "'", long48 == (-1L));
        org.junit.Assert.assertNotNull(period49);
        org.junit.Assert.assertNotNull(duration51);
        org.junit.Assert.assertTrue("'" + long52 + "' != '" + (-1L) + "'", long52 == (-1L));
        org.junit.Assert.assertNotNull(periodType55);
        org.junit.Assert.assertNotNull(period57);
        org.junit.Assert.assertNotNull(period58);
        org.junit.Assert.assertNotNull(duration60);
        org.junit.Assert.assertTrue("'" + long61 + "' != '" + (-1L) + "'", long61 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(duration64);
        org.junit.Assert.assertNotNull(periodType65);
        org.junit.Assert.assertNotNull(period66);
        org.junit.Assert.assertNotNull(periodType68);
        org.junit.Assert.assertNotNull(periodType71);
        org.junit.Assert.assertNotNull(periodType72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
    }

    @Test
    public void test17603() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17603");
        org.joda.time.Chronology chronology1 = null;
        org.joda.time.MutablePeriod mutablePeriod2 = new org.joda.time.MutablePeriod(1L, chronology1);
        org.joda.time.Chronology chronology4 = null;
        org.joda.time.MutablePeriod mutablePeriod5 = new org.joda.time.MutablePeriod(1L, chronology4);
        mutablePeriod2.add((org.joda.time.ReadablePeriod) mutablePeriod5);
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.Duration duration9 = org.joda.time.Duration.standardMinutes((-1L));
        long long10 = duration9.getStandardMinutes();
        org.joda.time.Period period11 = duration9.toPeriod();
        org.joda.time.Duration duration13 = org.joda.time.Duration.standardMinutes((-1L));
        long long14 = duration13.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant15 = null;
        org.joda.time.Period period16 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration13, readableInstant15);
        org.joda.time.PeriodType periodType17 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology18 = null;
        org.joda.time.Period period19 = duration13.toPeriod(periodType17, chronology18);
        org.joda.time.Period period20 = duration9.toPeriod(periodType17);
        org.joda.time.Duration duration22 = org.joda.time.Duration.standardMinutes((-1L));
        long long23 = duration22.getStandardMinutes();
        boolean boolean24 = duration9.isLongerThan((org.joda.time.ReadableDuration) duration22);
        org.joda.time.PeriodType periodType25 = org.joda.time.PeriodType.weeks();
        org.joda.time.Period period26 = new org.joda.time.Period(readableInstant7, (org.joda.time.ReadableDuration) duration22, periodType25);
        org.joda.time.Chronology chronology27 = null;
        org.joda.time.Period period28 = duration22.toPeriod(chronology27);
        mutablePeriod2.add((org.joda.time.ReadablePeriod) period28);
        org.joda.time.Chronology chronology31 = null;
        mutablePeriod2.add((long) (short) 10, chronology31);
        org.joda.time.PeriodType periodType33 = mutablePeriod2.getPeriodType();
        mutablePeriod2.addSeconds(0);
        mutablePeriod2.setPeriod(5, 0, 97, 0, (int) (short) 1, (int) (short) 1, 5, 0);
        org.joda.time.Duration duration46 = org.joda.time.Duration.standardMinutes((-1L));
        long long47 = duration46.getStandardMinutes();
        org.joda.time.Period period48 = duration46.toPeriod();
        mutablePeriod2.setPeriod((org.joda.time.ReadablePeriod) period48);
        org.joda.time.Period period51 = period48.plusWeeks(70);
        org.joda.time.PeriodType periodType52 = period48.getPeriodType();
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + (-1L) + "'", long10 == (-1L));
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + (-1L) + "'", long14 == (-1L));
        org.junit.Assert.assertNotNull(periodType17);
        org.junit.Assert.assertNotNull(period19);
        org.junit.Assert.assertNotNull(period20);
        org.junit.Assert.assertNotNull(duration22);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + (-1L) + "'", long23 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(periodType25);
        org.junit.Assert.assertNotNull(period28);
        org.junit.Assert.assertNotNull(periodType33);
        org.junit.Assert.assertNotNull(duration46);
        org.junit.Assert.assertTrue("'" + long47 + "' != '" + (-1L) + "'", long47 == (-1L));
        org.junit.Assert.assertNotNull(period48);
        org.junit.Assert.assertNotNull(period51);
        org.junit.Assert.assertNotNull(periodType52);
    }

    @Test
    public void test17604() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17604");
        org.joda.time.Chronology chronology1 = null;
        org.joda.time.MutablePeriod mutablePeriod2 = new org.joda.time.MutablePeriod(1L, chronology1);
        org.joda.time.Period period4 = org.joda.time.Period.seconds((int) '#');
        mutablePeriod2.setPeriod((org.joda.time.ReadablePeriod) period4);
        org.joda.time.DurationFieldType durationFieldType6 = org.joda.time.DurationFieldType.years();
        java.lang.String str7 = durationFieldType6.getName();
        boolean boolean8 = mutablePeriod2.isSupported(durationFieldType6);
        mutablePeriod2.setSeconds((int) (byte) -1);
        java.lang.Object obj11 = mutablePeriod2.clone();
        org.joda.time.Period period12 = mutablePeriod2.toPeriod();
        org.joda.time.Period period14 = period12.withWeeks((int) 'a');
        org.joda.time.ReadablePeriod readablePeriod15 = null;
        org.joda.time.Period period16 = period12.plus(readablePeriod15);
        org.joda.time.Period period18 = period12.withMonths((int) 'a');
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(durationFieldType6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "years" + "'", str7, "years");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertEquals(obj11.toString(), "PT-1S");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj11), "PT-1S");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj11), "PT-1S");
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertNotNull(period14);
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertNotNull(period18);
    }

    @Test
    public void test17605() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17605");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardSeconds(1L);
        org.joda.time.ReadableInstant readableInstant2 = null;
        org.joda.time.Duration duration4 = org.joda.time.Duration.standardMinutes((-1L));
        long long5 = duration4.getStandardMinutes();
        org.joda.time.Duration duration7 = org.joda.time.Duration.standardMinutes((-1L));
        long long8 = duration7.getStandardMinutes();
        boolean boolean9 = duration4.isLongerThan((org.joda.time.ReadableDuration) duration7);
        org.joda.time.Period period10 = duration7.toPeriod();
        org.joda.time.Minutes minutes11 = duration7.toStandardMinutes();
        org.joda.time.Duration duration13 = org.joda.time.Duration.standardMinutes((-1L));
        long long14 = duration13.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant15 = null;
        org.joda.time.Period period16 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration13, readableInstant15);
        org.joda.time.PeriodType periodType17 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology18 = null;
        org.joda.time.Period period19 = duration13.toPeriod(periodType17, chronology18);
        org.joda.time.Duration duration22 = duration13.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration23 = duration7.plus((org.joda.time.ReadableDuration) duration22);
        org.joda.time.Period period25 = org.joda.time.Period.seconds((int) '#');
        org.joda.time.Period period27 = period25.plusMinutes(10);
        org.joda.time.PeriodType periodType28 = period27.getPeriodType();
        org.joda.time.Period period29 = new org.joda.time.Period(readableInstant2, (org.joda.time.ReadableDuration) duration22, periodType28);
        org.joda.time.Duration duration31 = org.joda.time.Duration.standardMinutes((-1L));
        long long32 = duration31.getStandardMinutes();
        org.joda.time.Duration duration34 = org.joda.time.Duration.standardMinutes((-1L));
        long long35 = duration34.getStandardMinutes();
        boolean boolean36 = duration31.isLongerThan((org.joda.time.ReadableDuration) duration34);
        org.joda.time.Duration duration38 = duration34.withMillis(1L);
        boolean boolean39 = duration22.isShorterThan((org.joda.time.ReadableDuration) duration34);
        boolean boolean40 = duration1.isShorterThan((org.joda.time.ReadableDuration) duration34);
        long long41 = duration1.getStandardSeconds();
        java.lang.String str42 = duration1.toString();
        org.joda.time.ReadableInstant readableInstant43 = null;
        org.joda.time.ReadableInstant readableInstant44 = null;
        org.joda.time.ReadableInstant readableInstant45 = null;
        org.joda.time.ReadableInstant readableInstant46 = null;
        org.joda.time.Duration duration50 = org.joda.time.Duration.standardMinutes((-1L));
        long long51 = duration50.getStandardMinutes();
        org.joda.time.Period period52 = duration50.toPeriod();
        org.joda.time.Duration duration54 = org.joda.time.Duration.standardMinutes((-1L));
        long long55 = duration54.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant56 = null;
        org.joda.time.Period period57 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration54, readableInstant56);
        org.joda.time.PeriodType periodType58 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology59 = null;
        org.joda.time.Period period60 = duration54.toPeriod(periodType58, chronology59);
        org.joda.time.Period period61 = duration50.toPeriod(periodType58);
        org.joda.time.Chronology chronology62 = null;
        org.joda.time.MutablePeriod mutablePeriod63 = new org.joda.time.MutablePeriod(1L, (long) (byte) 100, periodType58, chronology62);
        org.joda.time.MutablePeriod mutablePeriod64 = new org.joda.time.MutablePeriod(readableInstant45, readableInstant46, periodType58);
        org.joda.time.MutablePeriod mutablePeriod65 = new org.joda.time.MutablePeriod(readableInstant43, readableInstant44, periodType58);
        org.joda.time.Period period66 = duration1.toPeriod(periodType58);
        org.joda.time.Duration duration68 = duration1.plus((long) 101);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + (-1L) + "'", long5 == (-1L));
        org.junit.Assert.assertNotNull(duration7);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + (-1L) + "'", long8 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + (-1L) + "'", long14 == (-1L));
        org.junit.Assert.assertNotNull(periodType17);
        org.junit.Assert.assertNotNull(period19);
        org.junit.Assert.assertNotNull(duration22);
        org.junit.Assert.assertNotNull(duration23);
        org.junit.Assert.assertNotNull(period25);
        org.junit.Assert.assertNotNull(period27);
        org.junit.Assert.assertNotNull(periodType28);
        org.junit.Assert.assertNotNull(duration31);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + (-1L) + "'", long32 == (-1L));
        org.junit.Assert.assertNotNull(duration34);
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + (-1L) + "'", long35 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(duration38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + long41 + "' != '" + 1L + "'", long41 == 1L);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "PT1S" + "'", str42, "PT1S");
        org.junit.Assert.assertNotNull(duration50);
        org.junit.Assert.assertTrue("'" + long51 + "' != '" + (-1L) + "'", long51 == (-1L));
        org.junit.Assert.assertNotNull(period52);
        org.junit.Assert.assertNotNull(duration54);
        org.junit.Assert.assertTrue("'" + long55 + "' != '" + (-1L) + "'", long55 == (-1L));
        org.junit.Assert.assertNotNull(periodType58);
        org.junit.Assert.assertNotNull(period60);
        org.junit.Assert.assertNotNull(period61);
        org.junit.Assert.assertNotNull(period66);
        org.junit.Assert.assertNotNull(duration68);
    }

    @Test
    public void test17606() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17606");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((-1L));
        long long2 = duration1.getStandardMinutes();
        org.joda.time.Duration duration4 = org.joda.time.Duration.standardMinutes((-1L));
        long long5 = duration4.getStandardMinutes();
        boolean boolean6 = duration1.isLongerThan((org.joda.time.ReadableDuration) duration4);
        org.joda.time.Duration duration8 = duration4.withMillis((long) 1);
        org.joda.time.Chronology chronology10 = null;
        org.joda.time.MutablePeriod mutablePeriod11 = new org.joda.time.MutablePeriod(1L, chronology10);
        org.joda.time.Chronology chronology13 = null;
        org.joda.time.MutablePeriod mutablePeriod14 = new org.joda.time.MutablePeriod(1L, chronology13);
        mutablePeriod11.add((org.joda.time.ReadablePeriod) mutablePeriod14);
        boolean boolean16 = duration8.equals((java.lang.Object) mutablePeriod14);
        org.joda.time.Duration duration18 = org.joda.time.Duration.standardSeconds((-60L));
        boolean boolean19 = duration8.isEqual((org.joda.time.ReadableDuration) duration18);
        org.joda.time.Chronology chronology20 = null;
        org.joda.time.Period period21 = duration8.toPeriod(chronology20);
        org.joda.time.ReadableInstant readableInstant22 = null;
        org.joda.time.Interval interval23 = duration8.toIntervalTo(readableInstant22);
        org.joda.time.Duration duration25 = new org.joda.time.Duration((long) (short) 100);
        org.joda.time.ReadableInstant readableInstant26 = null;
        org.joda.time.ReadableInstant readableInstant28 = null;
        org.joda.time.ReadableInstant readableInstant29 = null;
        org.joda.time.Duration duration31 = org.joda.time.Duration.standardMinutes((-1L));
        long long32 = duration31.getStandardMinutes();
        org.joda.time.Period period33 = duration31.toPeriod();
        org.joda.time.Duration duration35 = org.joda.time.Duration.standardMinutes((-1L));
        long long36 = duration35.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant37 = null;
        org.joda.time.Period period38 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration35, readableInstant37);
        org.joda.time.PeriodType periodType39 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology40 = null;
        org.joda.time.Period period41 = duration35.toPeriod(periodType39, chronology40);
        org.joda.time.Period period42 = duration31.toPeriod(periodType39);
        org.joda.time.MutablePeriod mutablePeriod43 = new org.joda.time.MutablePeriod(readableInstant28, readableInstant29, periodType39);
        org.joda.time.Period period45 = org.joda.time.Period.seconds((int) '#');
        int int46 = period45.getMillis();
        org.joda.time.DurationFieldType durationFieldType47 = org.joda.time.DurationFieldType.years();
        org.joda.time.Period period49 = period45.withField(durationFieldType47, (int) (short) 10);
        int int50 = periodType39.indexOf(durationFieldType47);
        org.joda.time.Period period51 = new org.joda.time.Period(0L, periodType39);
        org.joda.time.Period period52 = duration25.toPeriodTo(readableInstant26, periodType39);
        long long53 = duration25.getMillis();
        int int54 = duration8.compareTo((org.joda.time.ReadableDuration) duration25);
        org.joda.time.Duration duration56 = org.joda.time.Duration.standardMinutes((-1L));
        long long57 = duration56.getStandardMinutes();
        org.joda.time.Duration duration59 = org.joda.time.Duration.standardMinutes((-1L));
        long long60 = duration59.getStandardMinutes();
        boolean boolean61 = duration56.isLongerThan((org.joda.time.ReadableDuration) duration59);
        org.joda.time.Duration duration63 = duration59.withMillis((long) 1);
        org.joda.time.Chronology chronology65 = null;
        org.joda.time.MutablePeriod mutablePeriod66 = new org.joda.time.MutablePeriod(1L, chronology65);
        org.joda.time.Chronology chronology68 = null;
        org.joda.time.MutablePeriod mutablePeriod69 = new org.joda.time.MutablePeriod(1L, chronology68);
        mutablePeriod66.add((org.joda.time.ReadablePeriod) mutablePeriod69);
        boolean boolean71 = duration63.equals((java.lang.Object) mutablePeriod69);
        org.joda.time.Duration duration73 = duration63.minus(0L);
        org.joda.time.Chronology chronology74 = null;
        org.joda.time.Period period75 = new org.joda.time.Period((java.lang.Object) duration63, chronology74);
        org.joda.time.ReadableInstant readableInstant76 = null;
        org.joda.time.Period period77 = duration63.toPeriodTo(readableInstant76);
        boolean boolean78 = duration25.isShorterThan((org.joda.time.ReadableDuration) duration63);
        org.joda.time.Duration duration80 = duration63.plus(3110400000000L);
        org.joda.time.Duration duration83 = new org.joda.time.Duration((long) 7, 32L);
        org.joda.time.Duration duration86 = duration83.withDurationAdded(36000L, (int) (short) -1);
        boolean boolean87 = duration63.isLongerThan((org.joda.time.ReadableDuration) duration83);
        long long88 = duration63.getStandardHours();
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + (-1L) + "'", long2 == (-1L));
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + (-1L) + "'", long5 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(duration8);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(duration18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertNotNull(interval23);
        org.junit.Assert.assertNotNull(duration31);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + (-1L) + "'", long32 == (-1L));
        org.junit.Assert.assertNotNull(period33);
        org.junit.Assert.assertNotNull(duration35);
        org.junit.Assert.assertTrue("'" + long36 + "' != '" + (-1L) + "'", long36 == (-1L));
        org.junit.Assert.assertNotNull(periodType39);
        org.junit.Assert.assertNotNull(period41);
        org.junit.Assert.assertNotNull(period42);
        org.junit.Assert.assertNotNull(period45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertNotNull(durationFieldType47);
        org.junit.Assert.assertNotNull(period49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertNotNull(period52);
        org.junit.Assert.assertTrue("'" + long53 + "' != '" + 100L + "'", long53 == 100L);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
        org.junit.Assert.assertNotNull(duration56);
        org.junit.Assert.assertTrue("'" + long57 + "' != '" + (-1L) + "'", long57 == (-1L));
        org.junit.Assert.assertNotNull(duration59);
        org.junit.Assert.assertTrue("'" + long60 + "' != '" + (-1L) + "'", long60 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(duration63);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(duration73);
        org.junit.Assert.assertNotNull(period77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(duration80);
        org.junit.Assert.assertNotNull(duration86);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertTrue("'" + long88 + "' != '" + 0L + "'", long88 == 0L);
    }

    @Test
    public void test17607() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17607");
        org.joda.time.PeriodType periodType8 = null;
        org.joda.time.Period period9 = new org.joda.time.Period((int) '#', 997, (int) (byte) 0, (-102), (int) (short) 100, 7, (-1), (int) (byte) 100, periodType8);
        org.joda.time.PeriodType periodType11 = null;
        org.joda.time.Chronology chronology12 = null;
        org.joda.time.MutablePeriod mutablePeriod13 = new org.joda.time.MutablePeriod((long) '#', periodType11, chronology12);
        mutablePeriod13.addYears((int) (short) 10);
        org.joda.time.Period period16 = period9.plus((org.joda.time.ReadablePeriod) mutablePeriod13);
        mutablePeriod13.addDays((-35));
        mutablePeriod13.setYears(2);
        int int21 = mutablePeriod13.size();
        org.joda.time.Chronology chronology23 = null;
        mutablePeriod13.setPeriod((long) 10, chronology23);
        int int25 = mutablePeriod13.getDays();
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 8 + "'", int21 == 8);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
    }

    @Test
    public void test17608() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17608");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((-1L));
        long long2 = duration1.getStandardMinutes();
        org.joda.time.Duration duration4 = org.joda.time.Duration.standardMinutes((-1L));
        long long5 = duration4.getStandardMinutes();
        boolean boolean6 = duration1.isLongerThan((org.joda.time.ReadableDuration) duration4);
        org.joda.time.Duration duration8 = duration4.withMillis(1L);
        org.joda.time.Seconds seconds9 = duration8.toStandardSeconds();
        java.lang.String str10 = duration8.toString();
        org.joda.time.ReadableInstant readableInstant11 = null;
        org.joda.time.Period period12 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration8, readableInstant11);
        org.joda.time.Period period14 = period12.plusWeeks(49);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + (-1L) + "'", long2 == (-1L));
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + (-1L) + "'", long5 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(duration8);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "PT0.001S" + "'", str10, "PT0.001S");
        org.junit.Assert.assertNotNull(period14);
    }

    @Test
    public void test17609() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17609");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((-1L));
        long long2 = duration1.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.Period period4 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration1, readableInstant3);
        org.joda.time.PeriodType periodType5 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology6 = null;
        org.joda.time.Period period7 = duration1.toPeriod(periodType5, chronology6);
        org.joda.time.Duration duration10 = duration1.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.ReadableInstant readableInstant11 = null;
        org.joda.time.ReadableInstant readableInstant12 = null;
        org.joda.time.Duration duration14 = org.joda.time.Duration.standardMinutes((-1L));
        long long15 = duration14.getStandardMinutes();
        org.joda.time.Period period16 = duration14.toPeriod();
        org.joda.time.Duration duration18 = org.joda.time.Duration.standardMinutes((-1L));
        long long19 = duration18.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant20 = null;
        org.joda.time.Period period21 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration18, readableInstant20);
        org.joda.time.PeriodType periodType22 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology23 = null;
        org.joda.time.Period period24 = duration18.toPeriod(periodType22, chronology23);
        org.joda.time.Period period25 = duration14.toPeriod(periodType22);
        org.joda.time.MutablePeriod mutablePeriod26 = new org.joda.time.MutablePeriod(readableInstant11, readableInstant12, periodType22);
        org.joda.time.Chronology chronology27 = null;
        org.joda.time.Period period28 = duration1.toPeriod(periodType22, chronology27);
        org.joda.time.Duration duration30 = org.joda.time.Duration.millis((long) (byte) 100);
        int int31 = duration1.compareTo((org.joda.time.ReadableDuration) duration30);
        org.joda.time.PeriodType periodType33 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology34 = null;
        org.joda.time.MutablePeriod mutablePeriod35 = new org.joda.time.MutablePeriod((long) '4', periodType33, chronology34);
        org.joda.time.ReadableDuration readableDuration36 = null;
        org.joda.time.Chronology chronology37 = null;
        mutablePeriod35.setPeriod(readableDuration36, chronology37);
        org.joda.time.ReadableInstant readableInstant39 = null;
        org.joda.time.Duration duration40 = mutablePeriod35.toDurationFrom(readableInstant39);
        boolean boolean41 = duration1.isShorterThan((org.joda.time.ReadableDuration) duration40);
        org.joda.time.Chronology chronology43 = null;
        org.joda.time.MutablePeriod mutablePeriod44 = new org.joda.time.MutablePeriod(1L, chronology43);
        org.joda.time.Chronology chronology46 = null;
        org.joda.time.MutablePeriod mutablePeriod47 = new org.joda.time.MutablePeriod(1L, chronology46);
        mutablePeriod44.add((org.joda.time.ReadablePeriod) mutablePeriod47);
        mutablePeriod44.setMillis((int) (short) 0);
        org.joda.time.PeriodType periodType53 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period54 = new org.joda.time.Period(10L, periodType53);
        org.joda.time.PeriodType periodType55 = periodType53.withWeeksRemoved();
        org.joda.time.MutablePeriod mutablePeriod56 = new org.joda.time.MutablePeriod((long) (byte) 0, periodType53);
        org.joda.time.Duration duration58 = org.joda.time.Duration.standardMinutes((-1L));
        long long59 = duration58.getStandardMinutes();
        org.joda.time.PeriodType periodType60 = null;
        org.joda.time.Period period61 = duration58.toPeriod(periodType60);
        org.joda.time.Chronology chronology62 = null;
        mutablePeriod56.setPeriod((org.joda.time.ReadableDuration) duration58, chronology62);
        org.joda.time.PeriodType periodType64 = mutablePeriod56.getPeriodType();
        org.joda.time.MutablePeriod mutablePeriod65 = mutablePeriod56.toMutablePeriod();
        mutablePeriod44.add((org.joda.time.ReadablePeriod) mutablePeriod65);
        int int67 = mutablePeriod44.getMillis();
        org.joda.time.Duration duration69 = new org.joda.time.Duration((-2L));
        org.joda.time.Chronology chronology70 = null;
        mutablePeriod44.setPeriod((org.joda.time.ReadableDuration) duration69, chronology70);
        org.joda.time.ReadableInstant readableInstant72 = null;
        org.joda.time.Period period73 = duration69.toPeriodFrom(readableInstant72);
        org.joda.time.Duration duration75 = duration1.withDurationAdded((org.joda.time.ReadableDuration) duration69, 1);
        long long76 = duration75.getStandardSeconds();
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + (-1L) + "'", long2 == (-1L));
        org.junit.Assert.assertNotNull(periodType5);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + (-1L) + "'", long15 == (-1L));
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertNotNull(duration18);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + (-1L) + "'", long19 == (-1L));
        org.junit.Assert.assertNotNull(periodType22);
        org.junit.Assert.assertNotNull(period24);
        org.junit.Assert.assertNotNull(period25);
        org.junit.Assert.assertNotNull(period28);
        org.junit.Assert.assertNotNull(duration30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNotNull(periodType33);
        org.junit.Assert.assertNotNull(duration40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(periodType53);
        org.junit.Assert.assertNotNull(periodType55);
        org.junit.Assert.assertNotNull(duration58);
        org.junit.Assert.assertTrue("'" + long59 + "' != '" + (-1L) + "'", long59 == (-1L));
        org.junit.Assert.assertNotNull(period61);
        org.junit.Assert.assertNotNull(periodType64);
        org.junit.Assert.assertNotNull(mutablePeriod65);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 0 + "'", int67 == 0);
        org.junit.Assert.assertNotNull(period73);
        org.junit.Assert.assertNotNull(duration75);
        org.junit.Assert.assertTrue("'" + long76 + "' != '" + (-60L) + "'", long76 == (-60L));
    }

    @Test
    public void test17610() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17610");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.Duration duration2 = org.joda.time.Duration.standardHours((-120L));
        org.joda.time.Duration duration4 = duration2.withMillis((-59990L));
        org.joda.time.MutablePeriod mutablePeriod5 = new org.joda.time.MutablePeriod(readableInstant0, (org.joda.time.ReadableDuration) duration2);
        org.junit.Assert.assertNotNull(duration2);
        org.junit.Assert.assertNotNull(duration4);
    }

    @Test
    public void test17611() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17611");
        org.joda.time.Period period1 = org.joda.time.Period.parse("PT0.005S");
        org.junit.Assert.assertNotNull(period1);
    }

    @Test
    public void test17612() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17612");
        org.joda.time.PeriodType periodType4 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period5 = new org.joda.time.Period(10L, periodType4);
        org.joda.time.PeriodType periodType6 = periodType4.withWeeksRemoved();
        org.joda.time.MutablePeriod mutablePeriod7 = new org.joda.time.MutablePeriod((long) (byte) 0, periodType4);
        org.joda.time.PeriodType periodType8 = periodType4.withWeeksRemoved();
        org.joda.time.ReadableInstant readableInstant9 = null;
        org.joda.time.Duration duration11 = org.joda.time.Duration.standardMinutes((-1L));
        long long12 = duration11.getStandardMinutes();
        org.joda.time.Duration duration14 = org.joda.time.Duration.standardMinutes((-1L));
        long long15 = duration14.getStandardMinutes();
        boolean boolean16 = duration11.isLongerThan((org.joda.time.ReadableDuration) duration14);
        org.joda.time.Duration duration18 = duration14.withMillis(1L);
        org.joda.time.Period period19 = new org.joda.time.Period(readableInstant9, (org.joda.time.ReadableDuration) duration14);
        org.joda.time.DurationFieldType durationFieldType20 = org.joda.time.DurationFieldType.years();
        java.lang.String str21 = durationFieldType20.getName();
        org.joda.time.Chronology chronology22 = null;
        boolean boolean23 = durationFieldType20.isSupported(chronology22);
        org.joda.time.Period period25 = period19.withFieldAdded(durationFieldType20, 0);
        java.lang.String str26 = durationFieldType20.getName();
        boolean boolean27 = periodType8.isSupported(durationFieldType20);
        org.joda.time.PeriodType periodType28 = periodType8.withMonthsRemoved();
        org.joda.time.Chronology chronology29 = null;
        org.joda.time.Period period30 = new org.joda.time.Period((long) (short) 100, periodType8, chronology29);
        org.joda.time.Chronology chronology31 = null;
        org.joda.time.MutablePeriod mutablePeriod32 = new org.joda.time.MutablePeriod((-59940L), periodType8, chronology31);
        int int33 = mutablePeriod32.size();
        org.junit.Assert.assertNotNull(periodType4);
        org.junit.Assert.assertNotNull(periodType6);
        org.junit.Assert.assertNotNull(periodType8);
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + (-1L) + "'", long12 == (-1L));
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + (-1L) + "'", long15 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(duration18);
        org.junit.Assert.assertNotNull(durationFieldType20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "years" + "'", str21, "years");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(period25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "years" + "'", str26, "years");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(periodType28);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 1 + "'", int33 == 1);
    }

    @Test
    public void test17613() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17613");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((-1L));
        long long2 = duration1.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.Period period4 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration1, readableInstant3);
        org.joda.time.PeriodType periodType5 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology6 = null;
        org.joda.time.Period period7 = duration1.toPeriod(periodType5, chronology6);
        org.joda.time.Duration duration8 = duration1.toDuration();
        org.joda.time.Seconds seconds9 = duration8.toStandardSeconds();
        org.joda.time.ReadableInstant readableInstant10 = null;
        org.joda.time.Period period11 = duration8.toPeriodTo(readableInstant10);
        org.joda.time.Period period13 = period11.withSeconds(5);
        org.joda.time.Period period15 = period13.withHours(350);
        org.joda.time.Period period17 = period13.plusYears((-90));
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + (-1L) + "'", long2 == (-1L));
        org.junit.Assert.assertNotNull(periodType5);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(duration8);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(period13);
        org.junit.Assert.assertNotNull(period15);
        org.junit.Assert.assertNotNull(period17);
    }

    @Test
    public void test17614() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17614");
        org.joda.time.ReadableInstant readableInstant2 = null;
        org.joda.time.Duration duration4 = org.joda.time.Duration.standardMinutes((-1L));
        long long5 = duration4.getStandardMinutes();
        org.joda.time.Period period6 = duration4.toPeriod();
        org.joda.time.Duration duration8 = org.joda.time.Duration.standardMinutes((-1L));
        long long9 = duration8.getStandardMinutes();
        org.joda.time.Duration duration11 = org.joda.time.Duration.standardMinutes((-1L));
        long long12 = duration11.getStandardMinutes();
        boolean boolean13 = duration8.isLongerThan((org.joda.time.ReadableDuration) duration11);
        org.joda.time.Duration duration15 = duration11.withMillis(1L);
        org.joda.time.Duration duration17 = org.joda.time.Duration.standardMinutes((-1L));
        long long18 = duration17.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant19 = null;
        org.joda.time.Period period20 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration17, readableInstant19);
        org.joda.time.PeriodType periodType21 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology22 = null;
        org.joda.time.Period period23 = duration17.toPeriod(periodType21, chronology22);
        org.joda.time.Duration duration24 = duration17.toDuration();
        int int25 = duration11.compareTo((org.joda.time.ReadableDuration) duration17);
        boolean boolean26 = duration4.isLongerThan((org.joda.time.ReadableDuration) duration11);
        org.joda.time.Duration duration30 = org.joda.time.Duration.standardMinutes((-1L));
        long long31 = duration30.getStandardMinutes();
        org.joda.time.Period period32 = duration30.toPeriod();
        org.joda.time.Duration duration34 = org.joda.time.Duration.standardMinutes((-1L));
        long long35 = duration34.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant36 = null;
        org.joda.time.Period period37 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration34, readableInstant36);
        org.joda.time.PeriodType periodType38 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology39 = null;
        org.joda.time.Period period40 = duration34.toPeriod(periodType38, chronology39);
        org.joda.time.Period period41 = duration30.toPeriod(periodType38);
        org.joda.time.Chronology chronology42 = null;
        org.joda.time.MutablePeriod mutablePeriod43 = new org.joda.time.MutablePeriod(1L, (long) (byte) 100, periodType38, chronology42);
        org.joda.time.PeriodType periodType44 = periodType38.withMillisRemoved();
        org.joda.time.PeriodType periodType45 = periodType44.withSecondsRemoved();
        org.joda.time.Period period46 = new org.joda.time.Period(readableInstant2, (org.joda.time.ReadableDuration) duration4, periodType45);
        org.joda.time.ReadableInstant readableInstant47 = null;
        org.joda.time.MutablePeriod mutablePeriod48 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration4, readableInstant47);
        org.joda.time.Duration duration50 = org.joda.time.Duration.standardMinutes((long) 7);
        org.joda.time.ReadableInstant readableInstant51 = null;
        org.joda.time.ReadableInstant readableInstant54 = null;
        org.joda.time.ReadableInstant readableInstant55 = null;
        org.joda.time.Duration duration57 = org.joda.time.Duration.standardMinutes((-1L));
        long long58 = duration57.getStandardMinutes();
        org.joda.time.Period period59 = duration57.toPeriod();
        org.joda.time.Duration duration61 = org.joda.time.Duration.standardMinutes((-1L));
        long long62 = duration61.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant63 = null;
        org.joda.time.Period period64 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration61, readableInstant63);
        org.joda.time.PeriodType periodType65 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology66 = null;
        org.joda.time.Period period67 = duration61.toPeriod(periodType65, chronology66);
        org.joda.time.Period period68 = duration57.toPeriod(periodType65);
        org.joda.time.MutablePeriod mutablePeriod69 = new org.joda.time.MutablePeriod(readableInstant54, readableInstant55, periodType65);
        org.joda.time.Chronology chronology70 = null;
        org.joda.time.MutablePeriod mutablePeriod71 = new org.joda.time.MutablePeriod((long) 10, (long) (short) 0, periodType65, chronology70);
        org.joda.time.MutablePeriod mutablePeriod72 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration50, readableInstant51, periodType65);
        org.joda.time.MutablePeriod mutablePeriod73 = new org.joda.time.MutablePeriod((java.lang.Object) readableInstant47, periodType65);
        org.joda.time.Chronology chronology74 = null;
        org.joda.time.MutablePeriod mutablePeriod75 = new org.joda.time.MutablePeriod((-58180L), (long) '#', periodType65, chronology74);
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + (-1L) + "'", long5 == (-1L));
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(duration8);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + (-1L) + "'", long9 == (-1L));
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + (-1L) + "'", long12 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(duration15);
        org.junit.Assert.assertNotNull(duration17);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + (-1L) + "'", long18 == (-1L));
        org.junit.Assert.assertNotNull(periodType21);
        org.junit.Assert.assertNotNull(period23);
        org.junit.Assert.assertNotNull(duration24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(duration30);
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + (-1L) + "'", long31 == (-1L));
        org.junit.Assert.assertNotNull(period32);
        org.junit.Assert.assertNotNull(duration34);
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + (-1L) + "'", long35 == (-1L));
        org.junit.Assert.assertNotNull(periodType38);
        org.junit.Assert.assertNotNull(period40);
        org.junit.Assert.assertNotNull(period41);
        org.junit.Assert.assertNotNull(periodType44);
        org.junit.Assert.assertNotNull(periodType45);
        org.junit.Assert.assertNotNull(duration50);
        org.junit.Assert.assertNotNull(duration57);
        org.junit.Assert.assertTrue("'" + long58 + "' != '" + (-1L) + "'", long58 == (-1L));
        org.junit.Assert.assertNotNull(period59);
        org.junit.Assert.assertNotNull(duration61);
        org.junit.Assert.assertTrue("'" + long62 + "' != '" + (-1L) + "'", long62 == (-1L));
        org.junit.Assert.assertNotNull(periodType65);
        org.junit.Assert.assertNotNull(period67);
        org.junit.Assert.assertNotNull(period68);
    }

    @Test
    public void test17615() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17615");
        org.joda.time.Duration duration1 = org.joda.time.Duration.millis((long) (byte) 100);
        org.joda.time.ReadableInstant readableInstant2 = null;
        org.joda.time.MutablePeriod mutablePeriod3 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration1, readableInstant2);
        mutablePeriod3.setMinutes(0);
        org.joda.time.Period period7 = org.joda.time.Period.seconds((int) '#');
        int int8 = period7.getMillis();
        org.joda.time.DurationFieldType durationFieldType9 = org.joda.time.DurationFieldType.years();
        org.joda.time.Period period11 = period7.withField(durationFieldType9, (int) (short) 10);
        org.joda.time.Period period12 = new org.joda.time.Period((java.lang.Object) period11);
        int int13 = period11.getMillis();
        int int14 = period11.getDays();
        org.joda.time.Period period16 = period11.minusWeeks((int) '#');
        mutablePeriod3.setPeriod((org.joda.time.ReadablePeriod) period16);
        org.joda.time.MutablePeriod mutablePeriod18 = mutablePeriod3.toMutablePeriod();
        mutablePeriod18.addYears((int) (short) 1);
        int int21 = mutablePeriod18.getSeconds();
        org.joda.time.Duration duration23 = org.joda.time.Duration.standardDays((long) (short) 0);
        org.joda.time.Duration duration26 = duration23.withDurationAdded((-59909L), 2);
        mutablePeriod18.setPeriod((org.joda.time.ReadableDuration) duration26);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(durationFieldType9);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertNotNull(mutablePeriod18);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 35 + "'", int21 == 35);
        org.junit.Assert.assertNotNull(duration23);
        org.junit.Assert.assertNotNull(duration26);
    }

    @Test
    public void test17616() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17616");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardSeconds(1L);
        org.joda.time.ReadableInstant readableInstant2 = null;
        org.joda.time.MutablePeriod mutablePeriod3 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration1, readableInstant2);
        org.joda.time.ReadableInstant readableInstant4 = null;
        org.joda.time.Duration duration6 = org.joda.time.Duration.standardMinutes((-1L));
        long long7 = duration6.getStandardMinutes();
        org.joda.time.Duration duration9 = org.joda.time.Duration.standardMinutes((-1L));
        long long10 = duration9.getStandardMinutes();
        boolean boolean11 = duration6.isLongerThan((org.joda.time.ReadableDuration) duration9);
        org.joda.time.Duration duration13 = duration9.withMillis(1L);
        org.joda.time.Period period14 = new org.joda.time.Period(readableInstant4, (org.joda.time.ReadableDuration) duration9);
        org.joda.time.Period period16 = org.joda.time.Period.seconds((int) '#');
        int int17 = period16.getMillis();
        org.joda.time.Period period19 = period16.withMillis((int) '#');
        int int20 = period16.size();
        org.joda.time.Period period22 = period16.withMinutes(0);
        org.joda.time.Hours hours23 = period16.toStandardHours();
        org.joda.time.MutablePeriod mutablePeriod24 = hours23.toMutablePeriod();
        org.joda.time.MutablePeriod mutablePeriod25 = mutablePeriod24.toMutablePeriod();
        boolean boolean26 = duration9.equals((java.lang.Object) mutablePeriod25);
        boolean boolean27 = duration1.isEqual((org.joda.time.ReadableDuration) duration9);
        org.joda.time.Duration duration29 = duration1.minus((long) (-52));
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(duration6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + (-1L) + "'", long10 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(period19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 8 + "'", int20 == 8);
        org.junit.Assert.assertNotNull(period22);
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertNotNull(mutablePeriod24);
        org.junit.Assert.assertNotNull(mutablePeriod25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(duration29);
    }

    @Test
    public void test17617() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17617");
        org.joda.time.MutablePeriod mutablePeriod1 = new org.joda.time.MutablePeriod((long) (-818));
        java.lang.Object obj2 = mutablePeriod1.clone();
        org.joda.time.PeriodType periodType4 = null;
        org.joda.time.Chronology chronology5 = null;
        org.joda.time.MutablePeriod mutablePeriod6 = new org.joda.time.MutablePeriod((long) (byte) 10, periodType4, chronology5);
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.Duration duration10 = org.joda.time.Duration.standardMinutes((-1L));
        long long11 = duration10.getStandardMinutes();
        org.joda.time.Duration duration13 = org.joda.time.Duration.standardMinutes((-1L));
        long long14 = duration13.getStandardMinutes();
        boolean boolean15 = duration10.isLongerThan((org.joda.time.ReadableDuration) duration13);
        org.joda.time.Duration duration17 = duration13.withMillis(1L);
        org.joda.time.Period period18 = new org.joda.time.Period(readableInstant8, (org.joda.time.ReadableDuration) duration13);
        org.joda.time.MutablePeriod mutablePeriod19 = new org.joda.time.MutablePeriod(readableInstant7, (org.joda.time.ReadableDuration) duration13);
        mutablePeriod6.add((org.joda.time.ReadableDuration) duration13);
        org.joda.time.Duration duration22 = duration13.minus((long) '#');
        org.joda.time.MutablePeriod mutablePeriod24 = new org.joda.time.MutablePeriod((-2L));
        org.joda.time.Duration duration26 = org.joda.time.Duration.standardSeconds((long) 2);
        org.joda.time.ReadableInstant readableInstant27 = null;
        org.joda.time.Interval interval28 = duration26.toIntervalTo(readableInstant27);
        mutablePeriod24.setPeriod((org.joda.time.ReadableInterval) interval28);
        org.joda.time.Duration duration31 = org.joda.time.Duration.standardMinutes((-1L));
        long long32 = duration31.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant33 = null;
        org.joda.time.Period period34 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration31, readableInstant33);
        org.joda.time.PeriodType periodType35 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology36 = null;
        org.joda.time.Period period37 = duration31.toPeriod(periodType35, chronology36);
        org.joda.time.Duration duration38 = duration31.toDuration();
        org.joda.time.Duration duration39 = duration38.toDuration();
        org.joda.time.Duration duration40 = new org.joda.time.Duration((java.lang.Object) duration39);
        org.joda.time.Period period41 = new org.joda.time.Period((java.lang.Object) duration39);
        mutablePeriod24.add((org.joda.time.ReadableDuration) duration39);
        int int43 = duration13.compareTo((org.joda.time.ReadableDuration) duration39);
        org.joda.time.Chronology chronology44 = null;
        org.joda.time.Period period45 = duration13.toPeriod(chronology44);
        org.joda.time.Chronology chronology46 = null;
        org.joda.time.Period period47 = duration13.toPeriod(chronology46);
        mutablePeriod1.add((org.joda.time.ReadableDuration) duration13);
        org.joda.time.Hours hours49 = duration13.toStandardHours();
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertEquals(obj2.toString(), "PT-1M0.818S");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj2), "PT-1M0.818S");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj2), "PT-1M0.818S");
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + (-1L) + "'", long11 == (-1L));
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + (-1L) + "'", long14 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(duration17);
        org.junit.Assert.assertNotNull(duration22);
        org.junit.Assert.assertNotNull(duration26);
        org.junit.Assert.assertNotNull(interval28);
        org.junit.Assert.assertNotNull(duration31);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + (-1L) + "'", long32 == (-1L));
        org.junit.Assert.assertNotNull(periodType35);
        org.junit.Assert.assertNotNull(period37);
        org.junit.Assert.assertNotNull(duration38);
        org.junit.Assert.assertNotNull(duration39);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertNotNull(period45);
        org.junit.Assert.assertNotNull(period47);
        org.junit.Assert.assertNotNull(hours49);
    }

    @Test
    public void test17618() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17618");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.Duration duration2 = org.joda.time.Duration.millis((long) 1);
        org.joda.time.PeriodType periodType4 = null;
        org.joda.time.Chronology chronology5 = null;
        org.joda.time.MutablePeriod mutablePeriod6 = new org.joda.time.MutablePeriod((long) (byte) 10, periodType4, chronology5);
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.Duration duration10 = org.joda.time.Duration.standardMinutes((-1L));
        long long11 = duration10.getStandardMinutes();
        org.joda.time.Duration duration13 = org.joda.time.Duration.standardMinutes((-1L));
        long long14 = duration13.getStandardMinutes();
        boolean boolean15 = duration10.isLongerThan((org.joda.time.ReadableDuration) duration13);
        org.joda.time.Duration duration17 = duration13.withMillis(1L);
        org.joda.time.Period period18 = new org.joda.time.Period(readableInstant8, (org.joda.time.ReadableDuration) duration13);
        org.joda.time.MutablePeriod mutablePeriod19 = new org.joda.time.MutablePeriod(readableInstant7, (org.joda.time.ReadableDuration) duration13);
        mutablePeriod6.add((org.joda.time.ReadableDuration) duration13);
        org.joda.time.Duration duration22 = duration13.minus((long) '#');
        org.joda.time.MutablePeriod mutablePeriod24 = new org.joda.time.MutablePeriod((-2L));
        org.joda.time.Duration duration26 = org.joda.time.Duration.standardSeconds((long) 2);
        org.joda.time.ReadableInstant readableInstant27 = null;
        org.joda.time.Interval interval28 = duration26.toIntervalTo(readableInstant27);
        mutablePeriod24.setPeriod((org.joda.time.ReadableInterval) interval28);
        org.joda.time.Duration duration31 = org.joda.time.Duration.standardMinutes((-1L));
        long long32 = duration31.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant33 = null;
        org.joda.time.Period period34 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration31, readableInstant33);
        org.joda.time.PeriodType periodType35 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology36 = null;
        org.joda.time.Period period37 = duration31.toPeriod(periodType35, chronology36);
        org.joda.time.Duration duration38 = duration31.toDuration();
        org.joda.time.Duration duration39 = duration38.toDuration();
        org.joda.time.Duration duration40 = new org.joda.time.Duration((java.lang.Object) duration39);
        org.joda.time.Period period41 = new org.joda.time.Period((java.lang.Object) duration39);
        mutablePeriod24.add((org.joda.time.ReadableDuration) duration39);
        int int43 = duration13.compareTo((org.joda.time.ReadableDuration) duration39);
        org.joda.time.Chronology chronology44 = null;
        org.joda.time.Period period45 = duration13.toPeriod(chronology44);
        org.joda.time.Chronology chronology46 = null;
        org.joda.time.Period period47 = duration13.toPeriod(chronology46);
        boolean boolean48 = duration2.isLongerThan((org.joda.time.ReadableDuration) duration13);
        org.joda.time.MutablePeriod mutablePeriod49 = new org.joda.time.MutablePeriod(readableInstant0, (org.joda.time.ReadableDuration) duration13);
        mutablePeriod49.addSeconds(68);
        org.joda.time.Chronology chronology53 = null;
        org.joda.time.MutablePeriod mutablePeriod54 = new org.joda.time.MutablePeriod(1L, chronology53);
        org.joda.time.Period period56 = org.joda.time.Period.seconds((int) '#');
        mutablePeriod54.setPeriod((org.joda.time.ReadablePeriod) period56);
        mutablePeriod54.addMillis((int) (short) 1);
        org.joda.time.MutablePeriod mutablePeriod60 = mutablePeriod54.toMutablePeriod();
        mutablePeriod60.addYears((int) (byte) 1);
        org.joda.time.MutablePeriod mutablePeriod71 = new org.joda.time.MutablePeriod((int) ' ', (int) (byte) 100, 0, 10, (int) (short) 1, (int) (short) 0, (int) (byte) 100, (int) (short) 1);
        mutablePeriod71.setDays(10);
        org.joda.time.Period period74 = mutablePeriod71.toPeriod();
        org.joda.time.Period period75 = period74.normalizedStandard();
        org.joda.time.Period period77 = period75.minusMonths((int) (byte) 1);
        mutablePeriod60.setPeriod((org.joda.time.ReadablePeriod) period75);
        mutablePeriod60.setPeriod((long) 34);
        mutablePeriod49.mergePeriod((org.joda.time.ReadablePeriod) mutablePeriod60);
        mutablePeriod60.add((long) 32);
        org.joda.time.MutablePeriod mutablePeriod84 = new org.joda.time.MutablePeriod((java.lang.Object) mutablePeriod60);
        mutablePeriod84.addMillis((int) (byte) 1);
        org.junit.Assert.assertNotNull(duration2);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + (-1L) + "'", long11 == (-1L));
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + (-1L) + "'", long14 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(duration17);
        org.junit.Assert.assertNotNull(duration22);
        org.junit.Assert.assertNotNull(duration26);
        org.junit.Assert.assertNotNull(interval28);
        org.junit.Assert.assertNotNull(duration31);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + (-1L) + "'", long32 == (-1L));
        org.junit.Assert.assertNotNull(periodType35);
        org.junit.Assert.assertNotNull(period37);
        org.junit.Assert.assertNotNull(duration38);
        org.junit.Assert.assertNotNull(duration39);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertNotNull(period45);
        org.junit.Assert.assertNotNull(period47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(period56);
        org.junit.Assert.assertNotNull(mutablePeriod60);
        org.junit.Assert.assertNotNull(period74);
        org.junit.Assert.assertNotNull(period75);
        org.junit.Assert.assertNotNull(period77);
    }

    @Test
    public void test17619() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17619");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((-1L));
        long long2 = duration1.getStandardMinutes();
        org.joda.time.Period period3 = duration1.toPeriod();
        org.joda.time.Duration duration5 = duration1.minus(32L);
        long long6 = duration1.getMillis();
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.MutablePeriod mutablePeriod8 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration1, readableInstant7);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + (-1L) + "'", long2 == (-1L));
        org.junit.Assert.assertNotNull(period3);
        org.junit.Assert.assertNotNull(duration5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-60000L) + "'", long6 == (-60000L));
    }

    @Test
    public void test17620() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17620");
        org.joda.time.Duration duration2 = org.joda.time.Duration.standardMinutes((-1L));
        long long3 = duration2.getStandardMinutes();
        org.joda.time.Duration duration5 = org.joda.time.Duration.standardMinutes((-1L));
        long long6 = duration5.getStandardMinutes();
        boolean boolean7 = duration2.isLongerThan((org.joda.time.ReadableDuration) duration5);
        org.joda.time.Duration duration9 = duration5.withMillis((long) 1);
        org.joda.time.ReadableInstant readableInstant10 = null;
        org.joda.time.ReadableInstant readableInstant11 = null;
        org.joda.time.ReadableInstant readableInstant12 = null;
        org.joda.time.Duration duration14 = org.joda.time.Duration.standardMinutes((-1L));
        long long15 = duration14.getStandardMinutes();
        org.joda.time.Period period16 = duration14.toPeriod();
        org.joda.time.Duration duration18 = org.joda.time.Duration.standardMinutes((-1L));
        long long19 = duration18.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant20 = null;
        org.joda.time.Period period21 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration18, readableInstant20);
        org.joda.time.PeriodType periodType22 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology23 = null;
        org.joda.time.Period period24 = duration18.toPeriod(periodType22, chronology23);
        org.joda.time.Period period25 = duration14.toPeriod(periodType22);
        org.joda.time.Duration duration27 = org.joda.time.Duration.standardMinutes((-1L));
        long long28 = duration27.getStandardMinutes();
        boolean boolean29 = duration14.isLongerThan((org.joda.time.ReadableDuration) duration27);
        org.joda.time.PeriodType periodType30 = org.joda.time.PeriodType.weeks();
        org.joda.time.Period period31 = new org.joda.time.Period(readableInstant12, (org.joda.time.ReadableDuration) duration27, periodType30);
        org.joda.time.Chronology chronology32 = null;
        org.joda.time.Period period33 = duration27.toPeriod(chronology32);
        org.joda.time.Duration duration35 = org.joda.time.Duration.standardMinutes((-1L));
        long long36 = duration35.getStandardMinutes();
        org.joda.time.Period period37 = duration35.toPeriod();
        org.joda.time.Duration duration39 = org.joda.time.Duration.standardMinutes((-1L));
        long long40 = duration39.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant41 = null;
        org.joda.time.Period period42 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration39, readableInstant41);
        org.joda.time.PeriodType periodType43 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology44 = null;
        org.joda.time.Period period45 = duration39.toPeriod(periodType43, chronology44);
        org.joda.time.Period period46 = duration35.toPeriod(periodType43);
        boolean boolean47 = duration27.isShorterThan((org.joda.time.ReadableDuration) duration35);
        org.joda.time.ReadableInstant readableInstant50 = null;
        org.joda.time.ReadableInstant readableInstant51 = null;
        org.joda.time.PeriodType periodType53 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period54 = new org.joda.time.Period(10L, periodType53);
        org.joda.time.MutablePeriod mutablePeriod55 = new org.joda.time.MutablePeriod(readableInstant50, readableInstant51, periodType53);
        java.lang.String str56 = periodType53.toString();
        org.joda.time.DurationFieldType durationFieldType58 = periodType53.getFieldType((int) (byte) 0);
        org.joda.time.Chronology chronology59 = null;
        org.joda.time.Period period60 = new org.joda.time.Period((-59909L), (-120L), periodType53, chronology59);
        org.joda.time.Period period61 = new org.joda.time.Period(readableInstant11, (org.joda.time.ReadableDuration) duration35, periodType53);
        org.joda.time.Period period62 = duration9.toPeriodFrom(readableInstant10, periodType53);
        org.joda.time.Chronology chronology63 = null;
        org.joda.time.MutablePeriod mutablePeriod64 = new org.joda.time.MutablePeriod(52L, periodType53, chronology63);
        org.joda.time.ReadableInstant readableInstant69 = null;
        org.joda.time.ReadableInstant readableInstant70 = null;
        org.joda.time.Duration duration72 = org.joda.time.Duration.standardMinutes((-1L));
        long long73 = duration72.getStandardMinutes();
        org.joda.time.Period period74 = duration72.toPeriod();
        org.joda.time.Duration duration76 = org.joda.time.Duration.standardMinutes((-1L));
        long long77 = duration76.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant78 = null;
        org.joda.time.Period period79 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration76, readableInstant78);
        org.joda.time.PeriodType periodType80 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology81 = null;
        org.joda.time.Period period82 = duration76.toPeriod(periodType80, chronology81);
        org.joda.time.Period period83 = duration72.toPeriod(periodType80);
        org.joda.time.MutablePeriod mutablePeriod84 = new org.joda.time.MutablePeriod(readableInstant69, readableInstant70, periodType80);
        org.joda.time.Chronology chronology85 = null;
        org.joda.time.MutablePeriod mutablePeriod86 = new org.joda.time.MutablePeriod((long) 10, (long) (short) 0, periodType80, chronology85);
        org.joda.time.Chronology chronology87 = null;
        org.joda.time.MutablePeriod mutablePeriod88 = new org.joda.time.MutablePeriod(10L, (long) 7, periodType80, chronology87);
        mutablePeriod64.add((org.joda.time.ReadablePeriod) mutablePeriod88);
        mutablePeriod64.setSeconds((int) '4');
        org.joda.time.Chronology chronology93 = null;
        mutablePeriod64.setPeriod((long) (-59), chronology93);
        org.junit.Assert.assertNotNull(duration2);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + (-1L) + "'", long3 == (-1L));
        org.junit.Assert.assertNotNull(duration5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + (-1L) + "'", long15 == (-1L));
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertNotNull(duration18);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + (-1L) + "'", long19 == (-1L));
        org.junit.Assert.assertNotNull(periodType22);
        org.junit.Assert.assertNotNull(period24);
        org.junit.Assert.assertNotNull(period25);
        org.junit.Assert.assertNotNull(duration27);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + (-1L) + "'", long28 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(periodType30);
        org.junit.Assert.assertNotNull(period33);
        org.junit.Assert.assertNotNull(duration35);
        org.junit.Assert.assertTrue("'" + long36 + "' != '" + (-1L) + "'", long36 == (-1L));
        org.junit.Assert.assertNotNull(period37);
        org.junit.Assert.assertNotNull(duration39);
        org.junit.Assert.assertTrue("'" + long40 + "' != '" + (-1L) + "'", long40 == (-1L));
        org.junit.Assert.assertNotNull(periodType43);
        org.junit.Assert.assertNotNull(period45);
        org.junit.Assert.assertNotNull(period46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(periodType53);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "PeriodType[Seconds]" + "'", str56, "PeriodType[Seconds]");
        org.junit.Assert.assertNotNull(durationFieldType58);
        org.junit.Assert.assertNotNull(period62);
        org.junit.Assert.assertNotNull(duration72);
        org.junit.Assert.assertTrue("'" + long73 + "' != '" + (-1L) + "'", long73 == (-1L));
        org.junit.Assert.assertNotNull(period74);
        org.junit.Assert.assertNotNull(duration76);
        org.junit.Assert.assertTrue("'" + long77 + "' != '" + (-1L) + "'", long77 == (-1L));
        org.junit.Assert.assertNotNull(periodType80);
        org.junit.Assert.assertNotNull(period82);
        org.junit.Assert.assertNotNull(period83);
    }

    @Test
    public void test17621() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17621");
        org.joda.time.Period period1 = org.joda.time.Period.minutes((int) (short) 0);
        org.joda.time.Period period3 = period1.minusDays((int) (byte) 10);
        org.joda.time.Period period4 = period1.negated();
        org.joda.time.Period period6 = period4.plusSeconds((int) (short) 100);
        org.joda.time.Duration duration7 = period4.toStandardDuration();
        org.joda.time.Duration duration8 = duration7.toDuration();
        org.joda.time.Chronology chronology10 = null;
        org.joda.time.MutablePeriod mutablePeriod11 = new org.joda.time.MutablePeriod(1L, chronology10);
        org.joda.time.Period period13 = org.joda.time.Period.seconds((int) '#');
        mutablePeriod11.setPeriod((org.joda.time.ReadablePeriod) period13);
        mutablePeriod11.addMillis((int) (short) 1);
        org.joda.time.MutablePeriod mutablePeriod17 = mutablePeriod11.toMutablePeriod();
        mutablePeriod17.addYears((int) (byte) 1);
        org.joda.time.PeriodType periodType20 = mutablePeriod17.getPeriodType();
        org.joda.time.Chronology chronology21 = null;
        org.joda.time.Period period22 = duration8.toPeriod(periodType20, chronology21);
        org.joda.time.Period period24 = period22.minusYears((-2));
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(period3);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(duration7);
        org.junit.Assert.assertNotNull(duration8);
        org.junit.Assert.assertNotNull(period13);
        org.junit.Assert.assertNotNull(mutablePeriod17);
        org.junit.Assert.assertNotNull(periodType20);
        org.junit.Assert.assertNotNull(period22);
        org.junit.Assert.assertNotNull(period24);
    }

    @Test
    public void test17622() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17622");
        org.joda.time.MutablePeriod mutablePeriod2 = new org.joda.time.MutablePeriod(36000L, 0L);
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.ReadableInstant readableInstant4 = null;
        org.joda.time.Duration duration8 = org.joda.time.Duration.standardMinutes((-1L));
        long long9 = duration8.getStandardMinutes();
        org.joda.time.Period period10 = duration8.toPeriod();
        org.joda.time.Duration duration12 = org.joda.time.Duration.standardMinutes((-1L));
        long long13 = duration12.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant14 = null;
        org.joda.time.Period period15 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration12, readableInstant14);
        org.joda.time.PeriodType periodType16 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology17 = null;
        org.joda.time.Period period18 = duration12.toPeriod(periodType16, chronology17);
        org.joda.time.Period period19 = duration8.toPeriod(periodType16);
        org.joda.time.Chronology chronology20 = null;
        org.joda.time.MutablePeriod mutablePeriod21 = new org.joda.time.MutablePeriod(1L, (long) (byte) 100, periodType16, chronology20);
        org.joda.time.PeriodType periodType22 = periodType16.withYearsRemoved();
        org.joda.time.Period period23 = new org.joda.time.Period(readableInstant3, readableInstant4, periodType22);
        boolean boolean24 = mutablePeriod2.equals((java.lang.Object) periodType22);
        mutablePeriod2.setPeriod(100, 11, (int) (short) 100, 8, (int) (short) 10, 5, 1, (int) '4');
        mutablePeriod2.addWeeks((int) (byte) 0);
        org.joda.time.Chronology chronology37 = null;
        org.joda.time.MutablePeriod mutablePeriod38 = new org.joda.time.MutablePeriod(1L, chronology37);
        org.joda.time.Period period40 = org.joda.time.Period.seconds((int) '#');
        mutablePeriod38.setPeriod((org.joda.time.ReadablePeriod) period40);
        org.joda.time.DurationFieldType durationFieldType42 = org.joda.time.DurationFieldType.years();
        java.lang.String str43 = durationFieldType42.getName();
        boolean boolean44 = mutablePeriod38.isSupported(durationFieldType42);
        mutablePeriod38.setSeconds((int) (byte) -1);
        java.lang.Object obj47 = mutablePeriod38.clone();
        org.joda.time.Period period48 = mutablePeriod38.toPeriod();
        org.joda.time.MutablePeriod mutablePeriod49 = mutablePeriod38.copy();
        org.joda.time.Duration duration51 = org.joda.time.Duration.standardMinutes((-1L));
        long long52 = duration51.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant53 = null;
        org.joda.time.Period period54 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration51, readableInstant53);
        org.joda.time.PeriodType periodType55 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology56 = null;
        org.joda.time.Period period57 = duration51.toPeriod(periodType55, chronology56);
        org.joda.time.ReadableInstant readableInstant58 = null;
        org.joda.time.Period period59 = duration51.toPeriodTo(readableInstant58);
        int int60 = period59.getDays();
        org.joda.time.Period period62 = period59.withDays(100);
        org.joda.time.Period period63 = period59.toPeriod();
        org.joda.time.Chronology chronology65 = null;
        org.joda.time.MutablePeriod mutablePeriod66 = new org.joda.time.MutablePeriod(1L, chronology65);
        org.joda.time.Period period68 = org.joda.time.Period.seconds((int) '#');
        mutablePeriod66.setPeriod((org.joda.time.ReadablePeriod) period68);
        org.joda.time.DurationFieldType durationFieldType70 = org.joda.time.DurationFieldType.years();
        java.lang.String str71 = durationFieldType70.getName();
        boolean boolean72 = mutablePeriod66.isSupported(durationFieldType70);
        org.joda.time.Period period74 = period63.withField(durationFieldType70, (int) (byte) -1);
        boolean boolean75 = mutablePeriod49.isSupported(durationFieldType70);
        int int76 = mutablePeriod2.get(durationFieldType70);
        org.joda.time.MutablePeriod mutablePeriod77 = mutablePeriod2.copy();
        org.junit.Assert.assertNotNull(duration8);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + (-1L) + "'", long9 == (-1L));
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + (-1L) + "'", long13 == (-1L));
        org.junit.Assert.assertNotNull(periodType16);
        org.junit.Assert.assertNotNull(period18);
        org.junit.Assert.assertNotNull(period19);
        org.junit.Assert.assertNotNull(periodType22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(period40);
        org.junit.Assert.assertNotNull(durationFieldType42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "years" + "'", str43, "years");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertEquals(obj47.toString(), "PT-1S");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj47), "PT-1S");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj47), "PT-1S");
        org.junit.Assert.assertNotNull(period48);
        org.junit.Assert.assertNotNull(mutablePeriod49);
        org.junit.Assert.assertNotNull(duration51);
        org.junit.Assert.assertTrue("'" + long52 + "' != '" + (-1L) + "'", long52 == (-1L));
        org.junit.Assert.assertNotNull(periodType55);
        org.junit.Assert.assertNotNull(period57);
        org.junit.Assert.assertNotNull(period59);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 0 + "'", int60 == 0);
        org.junit.Assert.assertNotNull(period62);
        org.junit.Assert.assertNotNull(period63);
        org.junit.Assert.assertNotNull(period68);
        org.junit.Assert.assertNotNull(durationFieldType70);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "years" + "'", str71, "years");
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(period74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 100 + "'", int76 == 100);
        org.junit.Assert.assertNotNull(mutablePeriod77);
    }

    @Test
    public void test17623() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17623");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableInstant readableInstant1 = null;
        org.joda.time.PeriodType periodType3 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period4 = new org.joda.time.Period(10L, periodType3);
        org.joda.time.MutablePeriod mutablePeriod5 = new org.joda.time.MutablePeriod(readableInstant0, readableInstant1, periodType3);
        org.joda.time.Duration duration7 = org.joda.time.Duration.standardMinutes((-1L));
        long long8 = duration7.getStandardMinutes();
        org.joda.time.Period period9 = duration7.toPeriod();
        org.joda.time.Duration duration11 = org.joda.time.Duration.standardMinutes((-1L));
        long long12 = duration11.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant13 = null;
        org.joda.time.Period period14 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration11, readableInstant13);
        org.joda.time.PeriodType periodType15 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology16 = null;
        org.joda.time.Period period17 = duration11.toPeriod(periodType15, chronology16);
        org.joda.time.Period period18 = duration7.toPeriod(periodType15);
        org.joda.time.Duration duration20 = org.joda.time.Duration.standardMinutes((-1L));
        long long21 = duration20.getStandardMinutes();
        boolean boolean22 = duration7.isLongerThan((org.joda.time.ReadableDuration) duration20);
        org.joda.time.PeriodType periodType24 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology25 = null;
        org.joda.time.MutablePeriod mutablePeriod26 = new org.joda.time.MutablePeriod((long) '4', periodType24, chronology25);
        org.joda.time.Chronology chronology27 = null;
        org.joda.time.Period period28 = duration7.toPeriod(periodType24, chronology27);
        org.joda.time.Period period29 = new org.joda.time.Period((java.lang.Object) mutablePeriod5, periodType24);
        org.joda.time.PeriodType periodType30 = periodType24.withWeeksRemoved();
        org.joda.time.PeriodType periodType31 = periodType24.withWeeksRemoved();
        org.joda.time.PeriodType periodType32 = periodType31.withMinutesRemoved();
        org.junit.Assert.assertNotNull(periodType3);
        org.junit.Assert.assertNotNull(duration7);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + (-1L) + "'", long8 == (-1L));
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + (-1L) + "'", long12 == (-1L));
        org.junit.Assert.assertNotNull(periodType15);
        org.junit.Assert.assertNotNull(period17);
        org.junit.Assert.assertNotNull(period18);
        org.junit.Assert.assertNotNull(duration20);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + (-1L) + "'", long21 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(periodType24);
        org.junit.Assert.assertNotNull(period28);
        org.junit.Assert.assertNotNull(periodType30);
        org.junit.Assert.assertNotNull(periodType31);
        org.junit.Assert.assertNotNull(periodType32);
    }

    @Test
    public void test17624() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17624");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((-1L));
        long long2 = duration1.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.Period period4 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration1, readableInstant3);
        org.joda.time.PeriodType periodType5 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology6 = null;
        org.joda.time.Period period7 = duration1.toPeriod(periodType5, chronology6);
        org.joda.time.Duration duration10 = duration1.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.ReadableInstant readableInstant11 = null;
        org.joda.time.ReadableInstant readableInstant12 = null;
        org.joda.time.Duration duration14 = org.joda.time.Duration.standardMinutes((-1L));
        long long15 = duration14.getStandardMinutes();
        org.joda.time.Period period16 = duration14.toPeriod();
        org.joda.time.Duration duration18 = org.joda.time.Duration.standardMinutes((-1L));
        long long19 = duration18.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant20 = null;
        org.joda.time.Period period21 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration18, readableInstant20);
        org.joda.time.PeriodType periodType22 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology23 = null;
        org.joda.time.Period period24 = duration18.toPeriod(periodType22, chronology23);
        org.joda.time.Period period25 = duration14.toPeriod(periodType22);
        org.joda.time.MutablePeriod mutablePeriod26 = new org.joda.time.MutablePeriod(readableInstant11, readableInstant12, periodType22);
        org.joda.time.Chronology chronology27 = null;
        org.joda.time.Period period28 = duration1.toPeriod(periodType22, chronology27);
        org.joda.time.PeriodType periodType29 = org.joda.time.PeriodType.seconds();
        org.joda.time.PeriodType periodType30 = periodType29.withMinutesRemoved();
        org.joda.time.Chronology chronology31 = null;
        org.joda.time.MutablePeriod mutablePeriod32 = new org.joda.time.MutablePeriod((java.lang.Object) duration1, periodType30, chronology31);
        java.lang.String str33 = periodType30.toString();
        org.joda.time.PeriodType periodType34 = periodType30.withSecondsRemoved();
        org.joda.time.PeriodType periodType35 = periodType34.withDaysRemoved();
        org.joda.time.PeriodType periodType38 = org.joda.time.PeriodType.seconds();
        org.joda.time.PeriodType periodType39 = periodType38.withMinutesRemoved();
        org.joda.time.Chronology chronology40 = null;
        org.joda.time.MutablePeriod mutablePeriod41 = new org.joda.time.MutablePeriod((long) 0, (long) (short) 100, periodType38, chronology40);
        org.joda.time.Duration duration43 = org.joda.time.Duration.standardMinutes((-1L));
        long long44 = duration43.getStandardMinutes();
        org.joda.time.Duration duration46 = org.joda.time.Duration.standardMinutes((-1L));
        long long47 = duration46.getStandardMinutes();
        boolean boolean48 = duration43.isLongerThan((org.joda.time.ReadableDuration) duration46);
        org.joda.time.Period period49 = duration46.toPeriod();
        org.joda.time.Minutes minutes50 = duration46.toStandardMinutes();
        mutablePeriod41.add((org.joda.time.ReadableDuration) duration46);
        org.joda.time.Duration duration53 = duration46.withMillis((long) (short) 10);
        org.joda.time.Duration duration54 = duration53.toDuration();
        org.joda.time.ReadableInstant readableInstant55 = null;
        org.joda.time.PeriodType periodType57 = org.joda.time.PeriodType.time();
        org.joda.time.MutablePeriod mutablePeriod58 = new org.joda.time.MutablePeriod((long) 'a', periodType57);
        org.joda.time.Period period59 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration54, readableInstant55, periodType57);
        org.joda.time.MutablePeriod mutablePeriod60 = new org.joda.time.MutablePeriod(periodType57);
        org.joda.time.PeriodType periodType61 = periodType57.withHoursRemoved();
        boolean boolean62 = periodType34.equals((java.lang.Object) periodType61);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + (-1L) + "'", long2 == (-1L));
        org.junit.Assert.assertNotNull(periodType5);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + (-1L) + "'", long15 == (-1L));
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertNotNull(duration18);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + (-1L) + "'", long19 == (-1L));
        org.junit.Assert.assertNotNull(periodType22);
        org.junit.Assert.assertNotNull(period24);
        org.junit.Assert.assertNotNull(period25);
        org.junit.Assert.assertNotNull(period28);
        org.junit.Assert.assertNotNull(periodType29);
        org.junit.Assert.assertNotNull(periodType30);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "PeriodType[Seconds]" + "'", str33, "PeriodType[Seconds]");
        org.junit.Assert.assertNotNull(periodType34);
        org.junit.Assert.assertNotNull(periodType35);
        org.junit.Assert.assertNotNull(periodType38);
        org.junit.Assert.assertNotNull(periodType39);
        org.junit.Assert.assertNotNull(duration43);
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + (-1L) + "'", long44 == (-1L));
        org.junit.Assert.assertNotNull(duration46);
        org.junit.Assert.assertTrue("'" + long47 + "' != '" + (-1L) + "'", long47 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(period49);
        org.junit.Assert.assertNotNull(minutes50);
        org.junit.Assert.assertNotNull(duration53);
        org.junit.Assert.assertNotNull(duration54);
        org.junit.Assert.assertNotNull(periodType57);
        org.junit.Assert.assertNotNull(periodType61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
    }

    @Test
    public void test17625() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17625");
        org.joda.time.Chronology chronology1 = null;
        org.joda.time.MutablePeriod mutablePeriod2 = new org.joda.time.MutablePeriod((long) (byte) 0, chronology1);
        mutablePeriod2.clear();
    }

    @Test
    public void test17626() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17626");
        org.joda.time.Period period1 = org.joda.time.Period.seconds((int) (byte) 0);
        int int2 = period1.size();
        org.joda.time.Period period4 = period1.minusSeconds((int) (short) 10);
        org.joda.time.Period period6 = period1.withMinutes(35);
        org.joda.time.Chronology chronology8 = null;
        org.joda.time.MutablePeriod mutablePeriod9 = new org.joda.time.MutablePeriod(1L, chronology8);
        org.joda.time.Chronology chronology11 = null;
        org.joda.time.MutablePeriod mutablePeriod12 = new org.joda.time.MutablePeriod(1L, chronology11);
        mutablePeriod9.add((org.joda.time.ReadablePeriod) mutablePeriod12);
        mutablePeriod9.addMonths((int) (short) -1);
        mutablePeriod9.setPeriod((int) (short) 1, (int) (byte) 10, (int) 'a', 8, (int) (byte) 10, 10, (int) (short) -1, (int) (byte) 0);
        org.joda.time.ReadableInstant readableInstant25 = null;
        org.joda.time.ReadableInstant readableInstant26 = null;
        org.joda.time.PeriodType periodType27 = org.joda.time.PeriodType.days();
        org.joda.time.Period period28 = new org.joda.time.Period(readableInstant25, readableInstant26, periodType27);
        org.joda.time.DurationFieldType durationFieldType29 = org.joda.time.DurationFieldType.days();
        int int30 = periodType27.indexOf(durationFieldType29);
        org.joda.time.Duration duration32 = org.joda.time.Duration.standardMinutes((-1L));
        long long33 = duration32.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant34 = null;
        org.joda.time.Period period35 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration32, readableInstant34);
        org.joda.time.PeriodType periodType36 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology37 = null;
        org.joda.time.Period period38 = duration32.toPeriod(periodType36, chronology37);
        org.joda.time.Duration duration41 = duration32.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.ReadableInstant readableInstant42 = null;
        org.joda.time.ReadableInstant readableInstant43 = null;
        org.joda.time.Duration duration45 = org.joda.time.Duration.standardMinutes((-1L));
        long long46 = duration45.getStandardMinutes();
        org.joda.time.Period period47 = duration45.toPeriod();
        org.joda.time.Duration duration49 = org.joda.time.Duration.standardMinutes((-1L));
        long long50 = duration49.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant51 = null;
        org.joda.time.Period period52 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration49, readableInstant51);
        org.joda.time.PeriodType periodType53 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology54 = null;
        org.joda.time.Period period55 = duration49.toPeriod(periodType53, chronology54);
        org.joda.time.Period period56 = duration45.toPeriod(periodType53);
        org.joda.time.MutablePeriod mutablePeriod57 = new org.joda.time.MutablePeriod(readableInstant42, readableInstant43, periodType53);
        org.joda.time.Chronology chronology58 = null;
        org.joda.time.Period period59 = duration32.toPeriod(periodType53, chronology58);
        org.joda.time.PeriodType periodType60 = org.joda.time.PeriodType.seconds();
        org.joda.time.PeriodType periodType61 = periodType60.withMinutesRemoved();
        org.joda.time.Chronology chronology62 = null;
        org.joda.time.MutablePeriod mutablePeriod63 = new org.joda.time.MutablePeriod((java.lang.Object) duration32, periodType61, chronology62);
        java.lang.String str64 = periodType61.getName();
        org.joda.time.MutablePeriod mutablePeriod69 = new org.joda.time.MutablePeriod(1, 0, (int) (byte) 1, 100);
        org.joda.time.DurationFieldType durationFieldType70 = org.joda.time.DurationFieldType.weeks();
        mutablePeriod69.set(durationFieldType70, (int) '#');
        boolean boolean73 = periodType61.isSupported(durationFieldType70);
        boolean boolean74 = periodType27.isSupported(durationFieldType70);
        mutablePeriod9.add(durationFieldType70, 10);
        java.lang.String str77 = durationFieldType70.getName();
        java.lang.String str78 = durationFieldType70.getName();
        org.joda.time.Period period80 = period1.withFieldAdded(durationFieldType70, 12);
        org.joda.time.Period period81 = period80.toPeriod();
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 8 + "'", int2 == 8);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(periodType27);
        org.junit.Assert.assertNotNull(durationFieldType29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(duration32);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + (-1L) + "'", long33 == (-1L));
        org.junit.Assert.assertNotNull(periodType36);
        org.junit.Assert.assertNotNull(period38);
        org.junit.Assert.assertNotNull(duration41);
        org.junit.Assert.assertNotNull(duration45);
        org.junit.Assert.assertTrue("'" + long46 + "' != '" + (-1L) + "'", long46 == (-1L));
        org.junit.Assert.assertNotNull(period47);
        org.junit.Assert.assertNotNull(duration49);
        org.junit.Assert.assertTrue("'" + long50 + "' != '" + (-1L) + "'", long50 == (-1L));
        org.junit.Assert.assertNotNull(periodType53);
        org.junit.Assert.assertNotNull(period55);
        org.junit.Assert.assertNotNull(period56);
        org.junit.Assert.assertNotNull(period59);
        org.junit.Assert.assertNotNull(periodType60);
        org.junit.Assert.assertNotNull(periodType61);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "Seconds" + "'", str64, "Seconds");
        org.junit.Assert.assertNotNull(durationFieldType70);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "weeks" + "'", str77, "weeks");
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "weeks" + "'", str78, "weeks");
        org.junit.Assert.assertNotNull(period80);
        org.junit.Assert.assertNotNull(period81);
    }

    @Test
    public void test17627() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17627");
        org.joda.time.Chronology chronology1 = null;
        org.joda.time.MutablePeriod mutablePeriod2 = new org.joda.time.MutablePeriod(1L, chronology1);
        org.joda.time.Period period4 = org.joda.time.Period.seconds((int) '#');
        mutablePeriod2.setPeriod((org.joda.time.ReadablePeriod) period4);
        org.joda.time.DurationFieldType durationFieldType6 = org.joda.time.DurationFieldType.years();
        java.lang.String str7 = durationFieldType6.getName();
        boolean boolean8 = mutablePeriod2.isSupported(durationFieldType6);
        mutablePeriod2.setSeconds((int) (byte) -1);
        java.lang.Object obj11 = mutablePeriod2.clone();
        mutablePeriod2.addMonths((int) '4');
        int int14 = mutablePeriod2.getMinutes();
        mutablePeriod2.setSeconds((-100));
        org.joda.time.Chronology chronology19 = null;
        org.joda.time.Period period20 = new org.joda.time.Period(1L, (long) (byte) 10, chronology19);
        org.joda.time.Period period21 = period20.toPeriod();
        org.joda.time.Period period23 = period21.plusYears((int) 'a');
        org.joda.time.Period period25 = period21.plusDays((int) (short) 10);
        org.joda.time.PeriodType periodType26 = null;
        org.joda.time.Period period27 = period25.normalizedStandard(periodType26);
        mutablePeriod2.add((org.joda.time.ReadablePeriod) period27);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(durationFieldType6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "years" + "'", str7, "years");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertEquals(obj11.toString(), "P52M1W3DT-99.991S");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj11), "P52M1W3DT-99.991S");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj11), "P52M1W3DT-99.991S");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertNotNull(period23);
        org.junit.Assert.assertNotNull(period25);
        org.junit.Assert.assertNotNull(period27);
    }

    @Test
    public void test17628() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17628");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.Duration duration2 = org.joda.time.Duration.standardMinutes((-1L));
        long long3 = duration2.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant4 = null;
        org.joda.time.Period period5 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration2, readableInstant4);
        org.joda.time.PeriodType periodType6 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology7 = null;
        org.joda.time.Period period8 = duration2.toPeriod(periodType6, chronology7);
        org.joda.time.Duration duration11 = duration2.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration13 = org.joda.time.Duration.standardMinutes((-1L));
        long long14 = duration13.getStandardMinutes();
        org.joda.time.Duration duration16 = org.joda.time.Duration.standardMinutes((-1L));
        long long17 = duration16.getStandardMinutes();
        boolean boolean18 = duration13.isLongerThan((org.joda.time.ReadableDuration) duration16);
        org.joda.time.Duration duration20 = duration16.withMillis((long) 1);
        boolean boolean21 = duration11.isShorterThan((org.joda.time.ReadableDuration) duration16);
        org.joda.time.Duration duration23 = org.joda.time.Duration.standardMinutes((-1L));
        long long24 = duration23.getStandardMinutes();
        org.joda.time.Period period25 = duration23.toPeriod();
        org.joda.time.Duration duration27 = org.joda.time.Duration.standardMinutes((-1L));
        long long28 = duration27.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant29 = null;
        org.joda.time.Period period30 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration27, readableInstant29);
        org.joda.time.PeriodType periodType31 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology32 = null;
        org.joda.time.Period period33 = duration27.toPeriod(periodType31, chronology32);
        org.joda.time.Period period34 = duration23.toPeriod(periodType31);
        org.joda.time.Period period35 = duration16.toPeriod(periodType31);
        org.joda.time.ReadableInstant readableInstant36 = null;
        org.joda.time.Period period37 = duration16.toPeriodFrom(readableInstant36);
        java.lang.String str38 = duration16.toString();
        org.joda.time.Period period39 = new org.joda.time.Period(readableInstant0, (org.joda.time.ReadableDuration) duration16);
        org.junit.Assert.assertNotNull(duration2);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + (-1L) + "'", long3 == (-1L));
        org.junit.Assert.assertNotNull(periodType6);
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + (-1L) + "'", long14 == (-1L));
        org.junit.Assert.assertNotNull(duration16);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + (-1L) + "'", long17 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(duration20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(duration23);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + (-1L) + "'", long24 == (-1L));
        org.junit.Assert.assertNotNull(period25);
        org.junit.Assert.assertNotNull(duration27);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + (-1L) + "'", long28 == (-1L));
        org.junit.Assert.assertNotNull(periodType31);
        org.junit.Assert.assertNotNull(period33);
        org.junit.Assert.assertNotNull(period34);
        org.junit.Assert.assertNotNull(period35);
        org.junit.Assert.assertNotNull(period37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "PT-60S" + "'", str38, "PT-60S");
    }

    @Test
    public void test17629() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17629");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableInstant readableInstant1 = null;
        org.joda.time.Duration duration3 = org.joda.time.Duration.standardMinutes((-1L));
        long long4 = duration3.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant5 = null;
        org.joda.time.Period period6 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration3, readableInstant5);
        org.joda.time.PeriodType periodType7 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology8 = null;
        org.joda.time.Period period9 = duration3.toPeriod(periodType7, chronology8);
        org.joda.time.Duration duration12 = duration3.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration14 = org.joda.time.Duration.standardHours((long) 10);
        org.joda.time.Duration duration16 = org.joda.time.Duration.standardMinutes((-1L));
        long long17 = duration16.getStandardMinutes();
        org.joda.time.Duration duration19 = org.joda.time.Duration.standardMinutes((-1L));
        long long20 = duration19.getStandardMinutes();
        boolean boolean21 = duration16.isLongerThan((org.joda.time.ReadableDuration) duration19);
        org.joda.time.Period period22 = duration19.toPeriod();
        org.joda.time.Minutes minutes23 = duration19.toStandardMinutes();
        boolean boolean24 = duration14.isEqual((org.joda.time.ReadableDuration) duration19);
        boolean boolean25 = duration3.isShorterThan((org.joda.time.ReadableDuration) duration14);
        org.joda.time.Minutes minutes26 = duration3.toStandardMinutes();
        org.joda.time.MutablePeriod mutablePeriod27 = new org.joda.time.MutablePeriod(readableInstant1, (org.joda.time.ReadableDuration) duration3);
        mutablePeriod27.setPeriod((int) (byte) 10, (int) '4', 8, 8, 8, (int) (short) 0, (int) '#', (int) (byte) 0);
        mutablePeriod27.addYears((int) (byte) 100);
        mutablePeriod27.addSeconds((int) '4');
        org.joda.time.Duration duration42 = org.joda.time.Duration.standardMinutes((-1L));
        long long43 = duration42.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant44 = null;
        org.joda.time.Period period45 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration42, readableInstant44);
        org.joda.time.PeriodType periodType46 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology47 = null;
        org.joda.time.Period period48 = duration42.toPeriod(periodType46, chronology47);
        org.joda.time.Duration duration51 = duration42.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration53 = org.joda.time.Duration.standardHours((long) 10);
        org.joda.time.Duration duration55 = org.joda.time.Duration.standardMinutes((-1L));
        long long56 = duration55.getStandardMinutes();
        org.joda.time.Duration duration58 = org.joda.time.Duration.standardMinutes((-1L));
        long long59 = duration58.getStandardMinutes();
        boolean boolean60 = duration55.isLongerThan((org.joda.time.ReadableDuration) duration58);
        org.joda.time.Period period61 = duration58.toPeriod();
        org.joda.time.Minutes minutes62 = duration58.toStandardMinutes();
        boolean boolean63 = duration53.isEqual((org.joda.time.ReadableDuration) duration58);
        boolean boolean64 = duration42.isShorterThan((org.joda.time.ReadableDuration) duration53);
        mutablePeriod27.setPeriod((org.joda.time.ReadableDuration) duration53);
        org.joda.time.Duration duration69 = org.joda.time.Duration.standardMinutes((-1L));
        long long70 = duration69.getStandardMinutes();
        org.joda.time.Period period71 = duration69.toPeriod();
        org.joda.time.Duration duration73 = org.joda.time.Duration.standardMinutes((-1L));
        long long74 = duration73.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant75 = null;
        org.joda.time.Period period76 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration73, readableInstant75);
        org.joda.time.PeriodType periodType77 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology78 = null;
        org.joda.time.Period period79 = duration73.toPeriod(periodType77, chronology78);
        org.joda.time.Period period80 = duration69.toPeriod(periodType77);
        org.joda.time.Chronology chronology81 = null;
        org.joda.time.MutablePeriod mutablePeriod82 = new org.joda.time.MutablePeriod(1L, (long) (byte) 100, periodType77, chronology81);
        org.joda.time.PeriodType periodType83 = periodType77.withYearsRemoved();
        org.joda.time.PeriodType periodType84 = periodType77.withMillisRemoved();
        org.joda.time.Period period85 = new org.joda.time.Period(readableInstant0, (org.joda.time.ReadableDuration) duration53, periodType84);
        org.joda.time.PeriodType periodType86 = periodType84.withYearsRemoved();
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + (-1L) + "'", long4 == (-1L));
        org.junit.Assert.assertNotNull(periodType7);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertNotNull(duration16);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + (-1L) + "'", long17 == (-1L));
        org.junit.Assert.assertNotNull(duration19);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + (-1L) + "'", long20 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(period22);
        org.junit.Assert.assertNotNull(minutes23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(minutes26);
        org.junit.Assert.assertNotNull(duration42);
        org.junit.Assert.assertTrue("'" + long43 + "' != '" + (-1L) + "'", long43 == (-1L));
        org.junit.Assert.assertNotNull(periodType46);
        org.junit.Assert.assertNotNull(period48);
        org.junit.Assert.assertNotNull(duration51);
        org.junit.Assert.assertNotNull(duration53);
        org.junit.Assert.assertNotNull(duration55);
        org.junit.Assert.assertTrue("'" + long56 + "' != '" + (-1L) + "'", long56 == (-1L));
        org.junit.Assert.assertNotNull(duration58);
        org.junit.Assert.assertTrue("'" + long59 + "' != '" + (-1L) + "'", long59 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(period61);
        org.junit.Assert.assertNotNull(minutes62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(duration69);
        org.junit.Assert.assertTrue("'" + long70 + "' != '" + (-1L) + "'", long70 == (-1L));
        org.junit.Assert.assertNotNull(period71);
        org.junit.Assert.assertNotNull(duration73);
        org.junit.Assert.assertTrue("'" + long74 + "' != '" + (-1L) + "'", long74 == (-1L));
        org.junit.Assert.assertNotNull(periodType77);
        org.junit.Assert.assertNotNull(period79);
        org.junit.Assert.assertNotNull(period80);
        org.junit.Assert.assertNotNull(periodType83);
        org.junit.Assert.assertNotNull(periodType84);
        org.junit.Assert.assertNotNull(periodType86);
    }

    @Test
    public void test17630() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17630");
        org.joda.time.Duration duration1 = org.joda.time.Duration.millis((-2419199998L));
        org.joda.time.Duration duration3 = duration1.minus((long) (short) -1);
        org.joda.time.ReadableInstant readableInstant4 = null;
        org.joda.time.ReadableInstant readableInstant5 = null;
        org.joda.time.ReadableInstant readableInstant6 = null;
        org.joda.time.Duration duration8 = new org.joda.time.Duration(0L);
        org.joda.time.Period period10 = org.joda.time.Period.seconds((int) '#');
        int int11 = period10.getMillis();
        org.joda.time.Period period13 = period10.withMillis((int) '#');
        org.joda.time.DurationFieldType durationFieldType14 = org.joda.time.DurationFieldType.halfdays();
        boolean boolean15 = period10.isSupported(durationFieldType14);
        org.joda.time.Chronology chronology17 = null;
        org.joda.time.MutablePeriod mutablePeriod18 = new org.joda.time.MutablePeriod(1L, chronology17);
        org.joda.time.Period period20 = org.joda.time.Period.seconds((int) '#');
        mutablePeriod18.setPeriod((org.joda.time.ReadablePeriod) period20);
        org.joda.time.DurationFieldType durationFieldType22 = org.joda.time.DurationFieldType.years();
        java.lang.String str23 = durationFieldType22.getName();
        boolean boolean24 = mutablePeriod18.isSupported(durationFieldType22);
        int int25 = period10.get(durationFieldType22);
        org.joda.time.ReadableInstant readableInstant26 = null;
        org.joda.time.Duration duration28 = org.joda.time.Duration.standardMinutes((-1L));
        long long29 = duration28.getStandardMinutes();
        org.joda.time.Period period30 = duration28.toPeriod();
        org.joda.time.Duration duration32 = org.joda.time.Duration.standardMinutes((-1L));
        long long33 = duration32.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant34 = null;
        org.joda.time.Period period35 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration32, readableInstant34);
        org.joda.time.PeriodType periodType36 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology37 = null;
        org.joda.time.Period period38 = duration32.toPeriod(periodType36, chronology37);
        org.joda.time.Period period39 = duration28.toPeriod(periodType36);
        org.joda.time.Duration duration41 = org.joda.time.Duration.standardMinutes((-1L));
        long long42 = duration41.getStandardMinutes();
        boolean boolean43 = duration28.isLongerThan((org.joda.time.ReadableDuration) duration41);
        org.joda.time.PeriodType periodType44 = org.joda.time.PeriodType.weeks();
        org.joda.time.Period period45 = new org.joda.time.Period(readableInstant26, (org.joda.time.ReadableDuration) duration41, periodType44);
        boolean boolean46 = period10.equals((java.lang.Object) duration41);
        org.joda.time.Minutes minutes47 = duration41.toStandardMinutes();
        boolean boolean48 = duration8.isLongerThan((org.joda.time.ReadableDuration) duration41);
        org.joda.time.ReadableInstant readableInstant49 = null;
        org.joda.time.PeriodType periodType50 = org.joda.time.PeriodType.seconds();
        org.joda.time.PeriodType periodType51 = periodType50.withMinutesRemoved();
        org.joda.time.DurationFieldType durationFieldType52 = org.joda.time.DurationFieldType.minutes();
        int int53 = periodType51.indexOf(durationFieldType52);
        org.joda.time.MutablePeriod mutablePeriod54 = new org.joda.time.MutablePeriod(periodType51);
        org.joda.time.MutablePeriod mutablePeriod55 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration41, readableInstant49, periodType51);
        org.joda.time.PeriodType periodType56 = periodType51.withMillisRemoved();
        org.joda.time.MutablePeriod mutablePeriod57 = new org.joda.time.MutablePeriod(readableInstant5, readableInstant6, periodType51);
        org.joda.time.Period period58 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration3, readableInstant4, periodType51);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(period13);
        org.junit.Assert.assertNotNull(durationFieldType14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(period20);
        org.junit.Assert.assertNotNull(durationFieldType22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "years" + "'", str23, "years");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(duration28);
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + (-1L) + "'", long29 == (-1L));
        org.junit.Assert.assertNotNull(period30);
        org.junit.Assert.assertNotNull(duration32);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + (-1L) + "'", long33 == (-1L));
        org.junit.Assert.assertNotNull(periodType36);
        org.junit.Assert.assertNotNull(period38);
        org.junit.Assert.assertNotNull(period39);
        org.junit.Assert.assertNotNull(duration41);
        org.junit.Assert.assertTrue("'" + long42 + "' != '" + (-1L) + "'", long42 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(periodType44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(minutes47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(periodType50);
        org.junit.Assert.assertNotNull(periodType51);
        org.junit.Assert.assertNotNull(durationFieldType52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
        org.junit.Assert.assertNotNull(periodType56);
    }

    @Test
    public void test17631() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17631");
        org.joda.time.ReadableInstant readableInstant2 = null;
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.Duration duration7 = org.joda.time.Duration.standardMinutes((-1L));
        long long8 = duration7.getStandardMinutes();
        org.joda.time.Period period9 = duration7.toPeriod();
        org.joda.time.Duration duration11 = org.joda.time.Duration.standardMinutes((-1L));
        long long12 = duration11.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant13 = null;
        org.joda.time.Period period14 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration11, readableInstant13);
        org.joda.time.PeriodType periodType15 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology16 = null;
        org.joda.time.Period period17 = duration11.toPeriod(periodType15, chronology16);
        org.joda.time.Period period18 = duration7.toPeriod(periodType15);
        org.joda.time.Chronology chronology19 = null;
        org.joda.time.MutablePeriod mutablePeriod20 = new org.joda.time.MutablePeriod(1L, (long) (byte) 100, periodType15, chronology19);
        org.joda.time.MutablePeriod mutablePeriod21 = new org.joda.time.MutablePeriod(readableInstant2, readableInstant3, periodType15);
        org.joda.time.Chronology chronology22 = null;
        org.joda.time.Period period23 = new org.joda.time.Period((long) 100, (long) (short) 100, periodType15, chronology22);
        org.joda.time.PeriodType periodType24 = periodType15.withDaysRemoved();
        org.joda.time.MutablePeriod mutablePeriod29 = new org.joda.time.MutablePeriod(1, 0, (int) (byte) 1, 100);
        mutablePeriod29.setSeconds(0);
        mutablePeriod29.setWeeks((int) (byte) -1);
        int int34 = mutablePeriod29.size();
        mutablePeriod29.addWeeks((int) ' ');
        org.joda.time.Chronology chronology38 = null;
        org.joda.time.MutablePeriod mutablePeriod39 = new org.joda.time.MutablePeriod(1L, chronology38);
        org.joda.time.Chronology chronology41 = null;
        org.joda.time.MutablePeriod mutablePeriod42 = new org.joda.time.MutablePeriod(1L, chronology41);
        mutablePeriod39.add((org.joda.time.ReadablePeriod) mutablePeriod42);
        mutablePeriod39.addYears((int) (short) 10);
        mutablePeriod39.setPeriod(1, 1, 12, 101, (int) (byte) 100, 32, (int) ' ', (-90));
        int int55 = mutablePeriod39.getSeconds();
        org.joda.time.ReadableInstant readableInstant56 = null;
        org.joda.time.ReadableInstant readableInstant57 = null;
        org.joda.time.Duration duration59 = org.joda.time.Duration.standardMinutes((-1L));
        long long60 = duration59.getStandardMinutes();
        org.joda.time.Duration duration62 = org.joda.time.Duration.standardMinutes((-1L));
        long long63 = duration62.getStandardMinutes();
        boolean boolean64 = duration59.isLongerThan((org.joda.time.ReadableDuration) duration62);
        org.joda.time.Duration duration66 = duration62.withMillis(1L);
        org.joda.time.Period period67 = new org.joda.time.Period(readableInstant57, (org.joda.time.ReadableDuration) duration62);
        org.joda.time.MutablePeriod mutablePeriod68 = new org.joda.time.MutablePeriod(readableInstant56, (org.joda.time.ReadableDuration) duration62);
        org.joda.time.PeriodType periodType70 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period71 = new org.joda.time.Period(10L, periodType70);
        org.joda.time.DurationFieldType durationFieldType72 = org.joda.time.DurationFieldType.weeks();
        boolean boolean73 = periodType70.isSupported(durationFieldType72);
        org.joda.time.Chronology chronology74 = null;
        boolean boolean75 = durationFieldType72.isSupported(chronology74);
        mutablePeriod68.set(durationFieldType72, (-60));
        mutablePeriod39.add(durationFieldType72, 35);
        int int80 = mutablePeriod29.indexOf(durationFieldType72);
        boolean boolean81 = periodType24.isSupported(durationFieldType72);
        org.junit.Assert.assertNotNull(duration7);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + (-1L) + "'", long8 == (-1L));
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + (-1L) + "'", long12 == (-1L));
        org.junit.Assert.assertNotNull(periodType15);
        org.junit.Assert.assertNotNull(period17);
        org.junit.Assert.assertNotNull(period18);
        org.junit.Assert.assertNotNull(periodType24);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 8 + "'", int34 == 8);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 32 + "'", int55 == 32);
        org.junit.Assert.assertNotNull(duration59);
        org.junit.Assert.assertTrue("'" + long60 + "' != '" + (-1L) + "'", long60 == (-1L));
        org.junit.Assert.assertNotNull(duration62);
        org.junit.Assert.assertTrue("'" + long63 + "' != '" + (-1L) + "'", long63 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(duration66);
        org.junit.Assert.assertNotNull(periodType70);
        org.junit.Assert.assertNotNull(durationFieldType72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 2 + "'", int80 == 2);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
    }

    @Test
    public void test17632() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17632");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.MutablePeriod mutablePeriod3 = new org.joda.time.MutablePeriod((-59909L), (long) (-32), chronology2);
    }

    @Test
    public void test17633() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17633");
        org.joda.time.PeriodType periodType2 = null;
        org.joda.time.Chronology chronology3 = null;
        org.joda.time.Period period4 = new org.joda.time.Period((-2L), (-60000L), periodType2, chronology3);
        org.joda.time.Period period6 = period4.withDays((int) '4');
        org.joda.time.Period period8 = period4.minusMonths((int) (byte) 1);
        org.joda.time.Period period10 = period8.minusYears((-935));
        org.joda.time.Period period12 = period10.withMillis((-42));
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertNotNull(period12);
    }

    @Test
    public void test17634() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17634");
        java.lang.Object obj2 = null;
        org.joda.time.PeriodType periodType4 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology5 = null;
        org.joda.time.MutablePeriod mutablePeriod6 = new org.joda.time.MutablePeriod((long) '4', periodType4, chronology5);
        org.joda.time.Chronology chronology7 = null;
        org.joda.time.MutablePeriod mutablePeriod8 = new org.joda.time.MutablePeriod(obj2, periodType4, chronology7);
        org.joda.time.PeriodType periodType9 = periodType4.withWeeksRemoved();
        org.joda.time.PeriodType periodType10 = periodType4.withHoursRemoved();
        org.joda.time.Period period11 = new org.joda.time.Period((long) 8, (long) 32, periodType4);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Period period13 = period11.plusHours((-9));
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Field is not supported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(periodType4);
        org.junit.Assert.assertNotNull(periodType9);
        org.junit.Assert.assertNotNull(periodType10);
    }

    @Test
    public void test17635() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17635");
        org.joda.time.format.PeriodPrinter periodPrinter1 = null;
        org.joda.time.format.PeriodParser periodParser2 = null;
        org.joda.time.format.PeriodFormatter periodFormatter3 = new org.joda.time.format.PeriodFormatter(periodPrinter1, periodParser2);
        org.joda.time.format.PeriodPrinter periodPrinter4 = periodFormatter3.getPrinter();
        boolean boolean5 = periodFormatter3.isParser();
        org.joda.time.format.PeriodParser periodParser6 = periodFormatter3.getParser();
        boolean boolean7 = periodFormatter3.isParser();
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.ReadableInstant readableInstant9 = null;
        org.joda.time.Duration duration13 = org.joda.time.Duration.standardMinutes((-1L));
        long long14 = duration13.getStandardMinutes();
        org.joda.time.Period period15 = duration13.toPeriod();
        org.joda.time.Duration duration17 = org.joda.time.Duration.standardMinutes((-1L));
        long long18 = duration17.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant19 = null;
        org.joda.time.Period period20 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration17, readableInstant19);
        org.joda.time.PeriodType periodType21 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology22 = null;
        org.joda.time.Period period23 = duration17.toPeriod(periodType21, chronology22);
        org.joda.time.Period period24 = duration13.toPeriod(periodType21);
        org.joda.time.Chronology chronology25 = null;
        org.joda.time.MutablePeriod mutablePeriod26 = new org.joda.time.MutablePeriod(1L, (long) (byte) 100, periodType21, chronology25);
        org.joda.time.MutablePeriod mutablePeriod27 = new org.joda.time.MutablePeriod(readableInstant8, readableInstant9, periodType21);
        org.joda.time.format.PeriodFormatter periodFormatter28 = periodFormatter3.withParseType(periodType21);
        java.util.Locale locale29 = null;
        org.joda.time.format.PeriodFormatter periodFormatter30 = periodFormatter3.withLocale(locale29);
        java.util.Locale locale31 = periodFormatter30.getLocale();
        boolean boolean32 = periodFormatter30.isPrinter();
        boolean boolean33 = periodFormatter30.isParser();
        java.util.Locale locale34 = null;
        org.joda.time.format.PeriodFormatter periodFormatter35 = periodFormatter30.withLocale(locale34);
        org.joda.time.PeriodType periodType36 = periodFormatter35.getParseType();
        java.util.Locale locale37 = null;
        org.joda.time.format.PeriodFormatter periodFormatter38 = periodFormatter35.withLocale(locale37);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Period period39 = org.joda.time.Period.parse("months", periodFormatter35);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Parsing not supported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(periodPrinter4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(periodParser6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + (-1L) + "'", long14 == (-1L));
        org.junit.Assert.assertNotNull(period15);
        org.junit.Assert.assertNotNull(duration17);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + (-1L) + "'", long18 == (-1L));
        org.junit.Assert.assertNotNull(periodType21);
        org.junit.Assert.assertNotNull(period23);
        org.junit.Assert.assertNotNull(period24);
        org.junit.Assert.assertNotNull(periodFormatter28);
        org.junit.Assert.assertNotNull(periodFormatter30);
        org.junit.Assert.assertNull(locale31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(periodFormatter35);
        org.junit.Assert.assertNull(periodType36);
        org.junit.Assert.assertNotNull(periodFormatter38);
    }

    @Test
    public void test17636() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17636");
        org.joda.time.format.PeriodPrinter periodPrinter0 = null;
        org.joda.time.format.PeriodParser periodParser1 = null;
        org.joda.time.format.PeriodFormatter periodFormatter2 = new org.joda.time.format.PeriodFormatter(periodPrinter0, periodParser1);
        boolean boolean3 = periodFormatter2.isPrinter();
        org.joda.time.format.PeriodParser periodParser4 = periodFormatter2.getParser();
        boolean boolean5 = periodFormatter2.isParser();
        org.joda.time.PeriodType periodType6 = periodFormatter2.getParseType();
        java.util.Locale locale7 = periodFormatter2.getLocale();
        java.util.Locale locale8 = null;
        org.joda.time.format.PeriodFormatter periodFormatter9 = periodFormatter2.withLocale(locale8);
        java.util.Locale locale10 = periodFormatter9.getLocale();
        org.joda.time.Duration duration12 = org.joda.time.Duration.millis((long) 10);
        org.joda.time.Duration duration13 = duration12.toDuration();
        org.joda.time.Duration duration15 = org.joda.time.Duration.standardMinutes((-1L));
        long long16 = duration15.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant17 = null;
        org.joda.time.Period period18 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration15, readableInstant17);
        org.joda.time.PeriodType periodType19 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology20 = null;
        org.joda.time.Period period21 = duration15.toPeriod(periodType19, chronology20);
        org.joda.time.Period period23 = period21.plusSeconds(0);
        org.joda.time.ReadableInstant readableInstant24 = null;
        org.joda.time.Duration duration25 = period23.toDurationFrom(readableInstant24);
        org.joda.time.ReadableInstant readableInstant26 = null;
        org.joda.time.Period period27 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration25, readableInstant26);
        boolean boolean28 = duration13.equals((java.lang.Object) duration25);
        org.joda.time.Duration duration30 = org.joda.time.Duration.millis(36000L);
        boolean boolean31 = duration13.isEqual((org.joda.time.ReadableDuration) duration30);
        org.joda.time.Duration duration33 = duration30.withMillis(37943L);
        org.joda.time.ReadableInstant readableInstant34 = null;
        org.joda.time.PeriodType periodType39 = org.joda.time.PeriodType.seconds();
        org.joda.time.PeriodType periodType40 = periodType39.withMinutesRemoved();
        org.joda.time.Chronology chronology41 = null;
        org.joda.time.MutablePeriod mutablePeriod42 = new org.joda.time.MutablePeriod((long) 0, (long) (short) 100, periodType39, chronology41);
        org.joda.time.PeriodType periodType43 = periodType39.withMillisRemoved();
        int int44 = periodType39.size();
        org.joda.time.PeriodType periodType45 = periodType39.withSecondsRemoved();
        org.joda.time.Chronology chronology46 = null;
        org.joda.time.Period period47 = new org.joda.time.Period((long) (-10), 60L, periodType39, chronology46);
        org.joda.time.Period period48 = duration33.toPeriodTo(readableInstant34, periodType39);
        org.joda.time.format.PeriodFormatter periodFormatter49 = periodFormatter9.withParseType(periodType39);
        org.joda.time.ReadableInstant readableInstant50 = null;
        org.joda.time.Duration duration52 = org.joda.time.Duration.standardHours((long) 10);
        org.joda.time.Period period53 = new org.joda.time.Period(readableInstant50, (org.joda.time.ReadableDuration) duration52);
        int int54 = period53.size();
        org.joda.time.Period period56 = period53.multipliedBy(2);
        org.joda.time.Period period58 = period53.minusMonths((-59));
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str59 = periodFormatter49.print((org.joda.time.ReadablePeriod) period58);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Printing not supported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(periodParser4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(periodType6);
        org.junit.Assert.assertNull(locale7);
        org.junit.Assert.assertNotNull(periodFormatter9);
        org.junit.Assert.assertNull(locale10);
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertNotNull(duration15);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + (-1L) + "'", long16 == (-1L));
        org.junit.Assert.assertNotNull(periodType19);
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertNotNull(period23);
        org.junit.Assert.assertNotNull(duration25);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(duration30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(duration33);
        org.junit.Assert.assertNotNull(periodType39);
        org.junit.Assert.assertNotNull(periodType40);
        org.junit.Assert.assertNotNull(periodType43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 1 + "'", int44 == 1);
        org.junit.Assert.assertNotNull(periodType45);
        org.junit.Assert.assertNotNull(period48);
        org.junit.Assert.assertNotNull(periodFormatter49);
        org.junit.Assert.assertNotNull(duration52);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 8 + "'", int54 == 8);
        org.junit.Assert.assertNotNull(period56);
        org.junit.Assert.assertNotNull(period58);
    }

    @Test
    public void test17637() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17637");
        org.joda.time.PeriodType periodType2 = null;
        org.joda.time.MutablePeriod mutablePeriod3 = new org.joda.time.MutablePeriod((long) ' ', (long) 100, periodType2);
        mutablePeriod3.addMonths(35);
        mutablePeriod3.setYears(0);
        org.joda.time.Duration duration9 = org.joda.time.Duration.standardMinutes((-1L));
        long long10 = duration9.getStandardMinutes();
        org.joda.time.Duration duration12 = org.joda.time.Duration.standardMinutes((-1L));
        long long13 = duration12.getStandardMinutes();
        boolean boolean14 = duration9.isLongerThan((org.joda.time.ReadableDuration) duration12);
        org.joda.time.Duration duration16 = duration12.withMillis((long) 1);
        org.joda.time.Duration duration18 = org.joda.time.Duration.standardMinutes((-1L));
        long long19 = duration18.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant20 = null;
        org.joda.time.Period period21 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration18, readableInstant20);
        org.joda.time.PeriodType periodType22 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology23 = null;
        org.joda.time.Period period24 = duration18.toPeriod(periodType22, chronology23);
        org.joda.time.Duration duration27 = duration18.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration29 = org.joda.time.Duration.standardMinutes((-1L));
        long long30 = duration29.getStandardMinutes();
        org.joda.time.Duration duration32 = org.joda.time.Duration.standardMinutes((-1L));
        long long33 = duration32.getStandardMinutes();
        boolean boolean34 = duration29.isLongerThan((org.joda.time.ReadableDuration) duration32);
        org.joda.time.Duration duration36 = duration32.withMillis((long) 1);
        boolean boolean37 = duration27.isShorterThan((org.joda.time.ReadableDuration) duration32);
        boolean boolean38 = duration12.isLongerThan((org.joda.time.ReadableDuration) duration32);
        org.joda.time.Duration duration40 = org.joda.time.Duration.standardMinutes((-1L));
        long long41 = duration40.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant42 = null;
        org.joda.time.Period period43 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration40, readableInstant42);
        org.joda.time.PeriodType periodType44 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology45 = null;
        org.joda.time.Period period46 = duration40.toPeriod(periodType44, chronology45);
        org.joda.time.Duration duration47 = duration40.toDuration();
        boolean boolean48 = duration12.isEqual((org.joda.time.ReadableDuration) duration40);
        org.joda.time.ReadableInstant readableInstant49 = null;
        org.joda.time.Duration duration51 = org.joda.time.Duration.standardMinutes((-1L));
        long long52 = duration51.getStandardMinutes();
        org.joda.time.Duration duration54 = org.joda.time.Duration.standardMinutes((-1L));
        long long55 = duration54.getStandardMinutes();
        boolean boolean56 = duration51.isLongerThan((org.joda.time.ReadableDuration) duration54);
        org.joda.time.Duration duration58 = duration54.withMillis(1L);
        org.joda.time.Period period59 = new org.joda.time.Period(readableInstant49, (org.joda.time.ReadableDuration) duration54);
        org.joda.time.Duration duration60 = duration12.plus((org.joda.time.ReadableDuration) duration54);
        long long61 = duration60.getStandardMinutes();
        long long62 = duration60.getStandardHours();
        org.joda.time.ReadableInstant readableInstant63 = null;
        org.joda.time.Duration duration65 = org.joda.time.Duration.standardHours((long) 10);
        org.joda.time.Period period66 = new org.joda.time.Period(readableInstant63, (org.joda.time.ReadableDuration) duration65);
        org.joda.time.Hours hours67 = duration65.toStandardHours();
        boolean boolean68 = duration60.isShorterThan((org.joda.time.ReadableDuration) duration65);
        org.joda.time.ReadableInstant readableInstant69 = null;
        org.joda.time.MutablePeriod mutablePeriod70 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration60, readableInstant69);
        mutablePeriod3.setPeriod((org.joda.time.ReadableDuration) duration60);
        long long72 = duration60.getMillis();
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + (-1L) + "'", long10 == (-1L));
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + (-1L) + "'", long13 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(duration16);
        org.junit.Assert.assertNotNull(duration18);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + (-1L) + "'", long19 == (-1L));
        org.junit.Assert.assertNotNull(periodType22);
        org.junit.Assert.assertNotNull(period24);
        org.junit.Assert.assertNotNull(duration27);
        org.junit.Assert.assertNotNull(duration29);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + (-1L) + "'", long30 == (-1L));
        org.junit.Assert.assertNotNull(duration32);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + (-1L) + "'", long33 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(duration36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(duration40);
        org.junit.Assert.assertTrue("'" + long41 + "' != '" + (-1L) + "'", long41 == (-1L));
        org.junit.Assert.assertNotNull(periodType44);
        org.junit.Assert.assertNotNull(period46);
        org.junit.Assert.assertNotNull(duration47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(duration51);
        org.junit.Assert.assertTrue("'" + long52 + "' != '" + (-1L) + "'", long52 == (-1L));
        org.junit.Assert.assertNotNull(duration54);
        org.junit.Assert.assertTrue("'" + long55 + "' != '" + (-1L) + "'", long55 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(duration58);
        org.junit.Assert.assertNotNull(duration60);
        org.junit.Assert.assertTrue("'" + long61 + "' != '" + (-2L) + "'", long61 == (-2L));
        org.junit.Assert.assertTrue("'" + long62 + "' != '" + 0L + "'", long62 == 0L);
        org.junit.Assert.assertNotNull(duration65);
        org.junit.Assert.assertNotNull(hours67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertTrue("'" + long72 + "' != '" + (-120000L) + "'", long72 == (-120000L));
    }

    @Test
    public void test17638() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17638");
        org.joda.time.MutablePeriod mutablePeriod4 = new org.joda.time.MutablePeriod((int) ' ', (int) (byte) -1, (int) ' ', (int) ' ');
        mutablePeriod4.addMillis((int) (short) 1);
        mutablePeriod4.addDays(6);
        org.joda.time.MutablePeriod mutablePeriod9 = mutablePeriod4.copy();
        mutablePeriod9.setMillis((-7));
        org.joda.time.MutablePeriod mutablePeriod12 = mutablePeriod9.toMutablePeriod();
        org.junit.Assert.assertNotNull(mutablePeriod9);
        org.junit.Assert.assertNotNull(mutablePeriod12);
    }

    @Test
    public void test17639() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17639");
        org.joda.time.Duration duration2 = org.joda.time.Duration.standardMinutes((-1L));
        long long3 = duration2.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant4 = null;
        org.joda.time.Period period5 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration2, readableInstant4);
        org.joda.time.Duration duration7 = org.joda.time.Duration.standardMinutes((-1L));
        long long8 = duration7.getStandardMinutes();
        org.joda.time.Period period9 = duration7.toPeriod();
        boolean boolean10 = duration2.isLongerThan((org.joda.time.ReadableDuration) duration7);
        org.joda.time.ReadableInstant readableInstant11 = null;
        org.joda.time.Period period12 = duration7.toPeriodFrom(readableInstant11);
        org.joda.time.Duration duration14 = org.joda.time.Duration.millis((long) (byte) 100);
        org.joda.time.Duration duration15 = duration7.plus((org.joda.time.ReadableDuration) duration14);
        org.joda.time.ReadableInstant readableInstant16 = null;
        org.joda.time.ReadableInstant readableInstant18 = null;
        org.joda.time.Duration duration20 = new org.joda.time.Duration((long) (short) 100);
        org.joda.time.ReadableInstant readableInstant21 = null;
        org.joda.time.ReadableInstant readableInstant23 = null;
        org.joda.time.ReadableInstant readableInstant24 = null;
        org.joda.time.Duration duration26 = org.joda.time.Duration.standardMinutes((-1L));
        long long27 = duration26.getStandardMinutes();
        org.joda.time.Period period28 = duration26.toPeriod();
        org.joda.time.Duration duration30 = org.joda.time.Duration.standardMinutes((-1L));
        long long31 = duration30.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant32 = null;
        org.joda.time.Period period33 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration30, readableInstant32);
        org.joda.time.PeriodType periodType34 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology35 = null;
        org.joda.time.Period period36 = duration30.toPeriod(periodType34, chronology35);
        org.joda.time.Period period37 = duration26.toPeriod(periodType34);
        org.joda.time.MutablePeriod mutablePeriod38 = new org.joda.time.MutablePeriod(readableInstant23, readableInstant24, periodType34);
        org.joda.time.Period period40 = org.joda.time.Period.seconds((int) '#');
        int int41 = period40.getMillis();
        org.joda.time.DurationFieldType durationFieldType42 = org.joda.time.DurationFieldType.years();
        org.joda.time.Period period44 = period40.withField(durationFieldType42, (int) (short) 10);
        int int45 = periodType34.indexOf(durationFieldType42);
        org.joda.time.Period period46 = new org.joda.time.Period(0L, periodType34);
        org.joda.time.Period period47 = duration20.toPeriodTo(readableInstant21, periodType34);
        org.joda.time.Hours hours48 = duration20.toStandardHours();
        org.joda.time.ReadableInstant readableInstant49 = null;
        org.joda.time.Interval interval50 = duration20.toIntervalTo(readableInstant49);
        org.joda.time.PeriodType periodType51 = org.joda.time.PeriodType.millis();
        org.joda.time.MutablePeriod mutablePeriod52 = new org.joda.time.MutablePeriod(readableInstant18, (org.joda.time.ReadableDuration) duration20, periodType51);
        org.joda.time.Chronology chronology53 = null;
        org.joda.time.MutablePeriod mutablePeriod54 = new org.joda.time.MutablePeriod((long) 6, periodType51, chronology53);
        org.joda.time.Period period55 = duration15.toPeriodFrom(readableInstant16, periodType51);
        org.joda.time.PeriodType periodType56 = periodType51.withHoursRemoved();
        org.joda.time.Period period57 = new org.joda.time.Period((long) 32, periodType51);
        org.junit.Assert.assertNotNull(duration2);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + (-1L) + "'", long3 == (-1L));
        org.junit.Assert.assertNotNull(duration7);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + (-1L) + "'", long8 == (-1L));
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertNotNull(duration15);
        org.junit.Assert.assertNotNull(duration26);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + (-1L) + "'", long27 == (-1L));
        org.junit.Assert.assertNotNull(period28);
        org.junit.Assert.assertNotNull(duration30);
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + (-1L) + "'", long31 == (-1L));
        org.junit.Assert.assertNotNull(periodType34);
        org.junit.Assert.assertNotNull(period36);
        org.junit.Assert.assertNotNull(period37);
        org.junit.Assert.assertNotNull(period40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertNotNull(durationFieldType42);
        org.junit.Assert.assertNotNull(period44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
        org.junit.Assert.assertNotNull(period47);
        org.junit.Assert.assertNotNull(hours48);
        org.junit.Assert.assertNotNull(interval50);
        org.junit.Assert.assertNotNull(periodType51);
        org.junit.Assert.assertNotNull(period55);
        org.junit.Assert.assertNotNull(periodType56);
    }

    @Test
    public void test17640() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17640");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((-1L));
        long long2 = duration1.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.Period period4 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration1, readableInstant3);
        org.joda.time.PeriodType periodType5 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology6 = null;
        org.joda.time.Period period7 = duration1.toPeriod(periodType5, chronology6);
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.Period period9 = duration1.toPeriodTo(readableInstant8);
        org.joda.time.Chronology chronology10 = null;
        org.joda.time.Period period11 = duration1.toPeriod(chronology10);
        org.joda.time.Period period12 = period11.negated();
        org.joda.time.PeriodType periodType13 = period11.getPeriodType();
        org.joda.time.DurationFieldType durationFieldType14 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Period period16 = period11.withField(durationFieldType14, 7);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Field must not be null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + (-1L) + "'", long2 == (-1L));
        org.junit.Assert.assertNotNull(periodType5);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertNotNull(periodType13);
    }

    @Test
    public void test17641() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17641");
        org.joda.time.Duration duration3 = org.joda.time.Duration.standardMinutes((long) 7);
        org.joda.time.ReadableInstant readableInstant4 = null;
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.Duration duration10 = org.joda.time.Duration.standardMinutes((-1L));
        long long11 = duration10.getStandardMinutes();
        org.joda.time.Period period12 = duration10.toPeriod();
        org.joda.time.Duration duration14 = org.joda.time.Duration.standardMinutes((-1L));
        long long15 = duration14.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant16 = null;
        org.joda.time.Period period17 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration14, readableInstant16);
        org.joda.time.PeriodType periodType18 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology19 = null;
        org.joda.time.Period period20 = duration14.toPeriod(periodType18, chronology19);
        org.joda.time.Period period21 = duration10.toPeriod(periodType18);
        org.joda.time.MutablePeriod mutablePeriod22 = new org.joda.time.MutablePeriod(readableInstant7, readableInstant8, periodType18);
        org.joda.time.Chronology chronology23 = null;
        org.joda.time.MutablePeriod mutablePeriod24 = new org.joda.time.MutablePeriod((long) 10, (long) (short) 0, periodType18, chronology23);
        org.joda.time.MutablePeriod mutablePeriod25 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration3, readableInstant4, periodType18);
        int int26 = mutablePeriod25.getYears();
        org.joda.time.PeriodType periodType27 = mutablePeriod25.getPeriodType();
        org.joda.time.PeriodType periodType28 = mutablePeriod25.getPeriodType();
        org.joda.time.PeriodType periodType29 = periodType28.withMonthsRemoved();
        org.joda.time.PeriodType periodType30 = periodType29.withDaysRemoved();
        org.joda.time.MutablePeriod mutablePeriod39 = new org.joda.time.MutablePeriod((-60), 34, (int) ' ', (-90), (-60), 34, 34, 5);
        org.joda.time.Duration duration41 = org.joda.time.Duration.standardMinutes((-1L));
        long long42 = duration41.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant43 = null;
        org.joda.time.Period period44 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration41, readableInstant43);
        org.joda.time.PeriodType periodType45 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology46 = null;
        org.joda.time.Period period47 = duration41.toPeriod(periodType45, chronology46);
        org.joda.time.Duration duration48 = duration41.toDuration();
        org.joda.time.Seconds seconds49 = duration48.toStandardSeconds();
        mutablePeriod39.mergePeriod((org.joda.time.ReadablePeriod) seconds49);
        org.joda.time.DurationFieldType durationFieldType52 = mutablePeriod39.getFieldType(3);
        java.lang.String str53 = durationFieldType52.getName();
        int int54 = periodType30.indexOf(durationFieldType52);
        org.joda.time.Chronology chronology55 = null;
        org.joda.time.Period period56 = new org.joda.time.Period(5880L, (long) (-100), periodType30, chronology55);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + (-1L) + "'", long11 == (-1L));
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + (-1L) + "'", long15 == (-1L));
        org.junit.Assert.assertNotNull(periodType18);
        org.junit.Assert.assertNotNull(period20);
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(periodType27);
        org.junit.Assert.assertNotNull(periodType28);
        org.junit.Assert.assertNotNull(periodType29);
        org.junit.Assert.assertNotNull(periodType30);
        org.junit.Assert.assertNotNull(duration41);
        org.junit.Assert.assertTrue("'" + long42 + "' != '" + (-1L) + "'", long42 == (-1L));
        org.junit.Assert.assertNotNull(periodType45);
        org.junit.Assert.assertNotNull(period47);
        org.junit.Assert.assertNotNull(duration48);
        org.junit.Assert.assertNotNull(seconds49);
        org.junit.Assert.assertNotNull(durationFieldType52);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "days" + "'", str53, "days");
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
    }

    @Test
    public void test17642() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17642");
        org.joda.time.MutablePeriod mutablePeriod2 = new org.joda.time.MutablePeriod((-50591L), (-59948L));
        org.joda.time.MutablePeriod mutablePeriod7 = new org.joda.time.MutablePeriod(1, 0, (int) (byte) 1, 100);
        mutablePeriod7.setSeconds(0);
        mutablePeriod7.setDays((int) 'a');
        mutablePeriod7.addWeeks((int) (short) 0);
        org.joda.time.Duration duration15 = new org.joda.time.Duration((long) (short) 100);
        org.joda.time.ReadableInstant readableInstant16 = null;
        org.joda.time.ReadableInstant readableInstant18 = null;
        org.joda.time.ReadableInstant readableInstant19 = null;
        org.joda.time.Duration duration21 = org.joda.time.Duration.standardMinutes((-1L));
        long long22 = duration21.getStandardMinutes();
        org.joda.time.Period period23 = duration21.toPeriod();
        org.joda.time.Duration duration25 = org.joda.time.Duration.standardMinutes((-1L));
        long long26 = duration25.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant27 = null;
        org.joda.time.Period period28 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration25, readableInstant27);
        org.joda.time.PeriodType periodType29 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology30 = null;
        org.joda.time.Period period31 = duration25.toPeriod(periodType29, chronology30);
        org.joda.time.Period period32 = duration21.toPeriod(periodType29);
        org.joda.time.MutablePeriod mutablePeriod33 = new org.joda.time.MutablePeriod(readableInstant18, readableInstant19, periodType29);
        org.joda.time.Period period35 = org.joda.time.Period.seconds((int) '#');
        int int36 = period35.getMillis();
        org.joda.time.DurationFieldType durationFieldType37 = org.joda.time.DurationFieldType.years();
        org.joda.time.Period period39 = period35.withField(durationFieldType37, (int) (short) 10);
        int int40 = periodType29.indexOf(durationFieldType37);
        org.joda.time.Period period41 = new org.joda.time.Period(0L, periodType29);
        org.joda.time.Period period42 = duration15.toPeriodTo(readableInstant16, periodType29);
        org.joda.time.Hours hours43 = duration15.toStandardHours();
        org.joda.time.ReadableInstant readableInstant44 = null;
        org.joda.time.Interval interval45 = duration15.toIntervalTo(readableInstant44);
        mutablePeriod7.add((org.joda.time.ReadableInterval) interval45);
        mutablePeriod2.add((org.joda.time.ReadableInterval) interval45);
        org.junit.Assert.assertNotNull(duration21);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + (-1L) + "'", long22 == (-1L));
        org.junit.Assert.assertNotNull(period23);
        org.junit.Assert.assertNotNull(duration25);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + (-1L) + "'", long26 == (-1L));
        org.junit.Assert.assertNotNull(periodType29);
        org.junit.Assert.assertNotNull(period31);
        org.junit.Assert.assertNotNull(period32);
        org.junit.Assert.assertNotNull(period35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertNotNull(durationFieldType37);
        org.junit.Assert.assertNotNull(period39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertNotNull(period42);
        org.junit.Assert.assertNotNull(hours43);
        org.junit.Assert.assertNotNull(interval45);
    }

    @Test
    public void test17643() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17643");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((-1L));
        long long2 = duration1.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.Period period4 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration1, readableInstant3);
        org.joda.time.PeriodType periodType5 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology6 = null;
        org.joda.time.Period period7 = duration1.toPeriod(periodType5, chronology6);
        org.joda.time.Duration duration8 = duration1.toDuration();
        org.joda.time.Seconds seconds9 = duration8.toStandardSeconds();
        org.joda.time.PeriodType periodType10 = org.joda.time.PeriodType.hours();
        org.joda.time.PeriodType periodType11 = periodType10.withMinutesRemoved();
        org.joda.time.MutablePeriod mutablePeriod12 = new org.joda.time.MutablePeriod((java.lang.Object) duration8, periodType10);
        org.joda.time.ReadableInstant readableInstant13 = null;
        org.joda.time.Duration duration15 = org.joda.time.Duration.standardMinutes((-1L));
        long long16 = duration15.getStandardMinutes();
        org.joda.time.Period period17 = duration15.toPeriod();
        org.joda.time.Duration duration19 = org.joda.time.Duration.standardMinutes((-1L));
        long long20 = duration19.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant21 = null;
        org.joda.time.Period period22 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration19, readableInstant21);
        org.joda.time.PeriodType periodType23 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology24 = null;
        org.joda.time.Period period25 = duration19.toPeriod(periodType23, chronology24);
        org.joda.time.Period period26 = duration15.toPeriod(periodType23);
        org.joda.time.Duration duration28 = org.joda.time.Duration.standardMinutes((-1L));
        long long29 = duration28.getStandardMinutes();
        boolean boolean30 = duration15.isLongerThan((org.joda.time.ReadableDuration) duration28);
        org.joda.time.PeriodType periodType31 = org.joda.time.PeriodType.weeks();
        org.joda.time.Period period32 = new org.joda.time.Period(readableInstant13, (org.joda.time.ReadableDuration) duration28, periodType31);
        org.joda.time.Chronology chronology33 = null;
        org.joda.time.Period period34 = duration28.toPeriod(chronology33);
        org.joda.time.Period period36 = org.joda.time.Period.hours((int) 'a');
        org.joda.time.DurationFieldType durationFieldType38 = period36.getFieldType((int) (short) 1);
        boolean boolean39 = duration28.equals((java.lang.Object) (short) 1);
        org.joda.time.ReadableInstant readableInstant40 = null;
        org.joda.time.Duration duration44 = org.joda.time.Duration.standardMinutes((-1L));
        long long45 = duration44.getStandardMinutes();
        org.joda.time.Period period46 = duration44.toPeriod();
        org.joda.time.Duration duration48 = org.joda.time.Duration.standardMinutes((-1L));
        long long49 = duration48.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant50 = null;
        org.joda.time.Period period51 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration48, readableInstant50);
        org.joda.time.PeriodType periodType52 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology53 = null;
        org.joda.time.Period period54 = duration48.toPeriod(periodType52, chronology53);
        org.joda.time.Period period55 = duration44.toPeriod(periodType52);
        org.joda.time.Chronology chronology56 = null;
        org.joda.time.MutablePeriod mutablePeriod57 = new org.joda.time.MutablePeriod(1L, (long) (byte) 100, periodType52, chronology56);
        org.joda.time.PeriodType periodType58 = periodType52.withMillisRemoved();
        org.joda.time.PeriodType periodType59 = periodType58.withSecondsRemoved();
        org.joda.time.PeriodType periodType60 = periodType59.withHoursRemoved();
        org.joda.time.MutablePeriod mutablePeriod61 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration28, readableInstant40, periodType60);
        boolean boolean62 = duration8.isLongerThan((org.joda.time.ReadableDuration) duration28);
        org.joda.time.ReadableInstant readableInstant63 = null;
        org.joda.time.ReadableInstant readableInstant66 = null;
        org.joda.time.ReadableInstant readableInstant67 = null;
        org.joda.time.PeriodType periodType69 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period70 = new org.joda.time.Period(10L, periodType69);
        org.joda.time.MutablePeriod mutablePeriod71 = new org.joda.time.MutablePeriod(readableInstant66, readableInstant67, periodType69);
        java.lang.String str72 = periodType69.toString();
        org.joda.time.Period period73 = new org.joda.time.Period((long) (short) 1, (long) 97, periodType69);
        org.joda.time.MutablePeriod mutablePeriod74 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration28, readableInstant63, periodType69);
        long long75 = duration28.getStandardDays();
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + (-1L) + "'", long2 == (-1L));
        org.junit.Assert.assertNotNull(periodType5);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(duration8);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(periodType10);
        org.junit.Assert.assertNotNull(periodType11);
        org.junit.Assert.assertNotNull(duration15);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + (-1L) + "'", long16 == (-1L));
        org.junit.Assert.assertNotNull(period17);
        org.junit.Assert.assertNotNull(duration19);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + (-1L) + "'", long20 == (-1L));
        org.junit.Assert.assertNotNull(periodType23);
        org.junit.Assert.assertNotNull(period25);
        org.junit.Assert.assertNotNull(period26);
        org.junit.Assert.assertNotNull(duration28);
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + (-1L) + "'", long29 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(periodType31);
        org.junit.Assert.assertNotNull(period34);
        org.junit.Assert.assertNotNull(period36);
        org.junit.Assert.assertNotNull(durationFieldType38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(duration44);
        org.junit.Assert.assertTrue("'" + long45 + "' != '" + (-1L) + "'", long45 == (-1L));
        org.junit.Assert.assertNotNull(period46);
        org.junit.Assert.assertNotNull(duration48);
        org.junit.Assert.assertTrue("'" + long49 + "' != '" + (-1L) + "'", long49 == (-1L));
        org.junit.Assert.assertNotNull(periodType52);
        org.junit.Assert.assertNotNull(period54);
        org.junit.Assert.assertNotNull(period55);
        org.junit.Assert.assertNotNull(periodType58);
        org.junit.Assert.assertNotNull(periodType59);
        org.junit.Assert.assertNotNull(periodType60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(periodType69);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "PeriodType[Seconds]" + "'", str72, "PeriodType[Seconds]");
        org.junit.Assert.assertTrue("'" + long75 + "' != '" + 0L + "'", long75 == 0L);
    }

    @Test
    public void test17644() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17644");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableInstant readableInstant1 = null;
        org.joda.time.Chronology chronology3 = null;
        org.joda.time.MutablePeriod mutablePeriod4 = new org.joda.time.MutablePeriod(1L, chronology3);
        org.joda.time.Chronology chronology6 = null;
        org.joda.time.MutablePeriod mutablePeriod7 = new org.joda.time.MutablePeriod(1L, chronology6);
        mutablePeriod4.add((org.joda.time.ReadablePeriod) mutablePeriod7);
        mutablePeriod4.setMillis((int) (short) 0);
        org.joda.time.Chronology chronology12 = null;
        mutablePeriod4.add((long) (short) 0, chronology12);
        org.joda.time.PeriodType periodType16 = org.joda.time.PeriodType.seconds();
        org.joda.time.PeriodType periodType17 = periodType16.withMinutesRemoved();
        org.joda.time.Chronology chronology18 = null;
        org.joda.time.MutablePeriod mutablePeriod19 = new org.joda.time.MutablePeriod((long) 0, (long) (short) 100, periodType16, chronology18);
        org.joda.time.PeriodType periodType20 = periodType16.withMillisRemoved();
        org.joda.time.Chronology chronology21 = null;
        org.joda.time.MutablePeriod mutablePeriod22 = new org.joda.time.MutablePeriod((java.lang.Object) mutablePeriod4, periodType20, chronology21);
        org.joda.time.ReadableInstant readableInstant23 = null;
        org.joda.time.ReadableInstant readableInstant24 = null;
        org.joda.time.PeriodType periodType25 = org.joda.time.PeriodType.yearMonthDay();
        org.joda.time.MutablePeriod mutablePeriod26 = new org.joda.time.MutablePeriod(readableInstant23, readableInstant24, periodType25);
        boolean boolean27 = periodType20.equals((java.lang.Object) periodType25);
        java.lang.String str28 = periodType25.toString();
        org.joda.time.PeriodType periodType29 = periodType25.withDaysRemoved();
        org.joda.time.MutablePeriod mutablePeriod30 = new org.joda.time.MutablePeriod(readableInstant0, readableInstant1, periodType29);
        org.junit.Assert.assertNotNull(periodType16);
        org.junit.Assert.assertNotNull(periodType17);
        org.junit.Assert.assertNotNull(periodType20);
        org.junit.Assert.assertNotNull(periodType25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "PeriodType[YearMonthDay]" + "'", str28, "PeriodType[YearMonthDay]");
        org.junit.Assert.assertNotNull(periodType29);
    }

    @Test
    public void test17645() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17645");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableInstant readableInstant1 = null;
        org.joda.time.Duration duration3 = org.joda.time.Duration.standardSeconds((-60L));
        org.joda.time.MutablePeriod mutablePeriod4 = new org.joda.time.MutablePeriod(readableInstant1, (org.joda.time.ReadableDuration) duration3);
        org.joda.time.MutablePeriod mutablePeriod5 = new org.joda.time.MutablePeriod(readableInstant0, (org.joda.time.ReadableDuration) duration3);
        org.joda.time.ReadableInstant readableInstant6 = null;
        org.joda.time.Period period7 = duration3.toPeriodFrom(readableInstant6);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertNotNull(period7);
    }

    @Test
    public void test17646() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17646");
        org.joda.time.Period period1 = org.joda.time.Period.weeks((int) ' ');
        org.joda.time.Period period3 = period1.minusMillis((int) '#');
        org.joda.time.Period period5 = period3.minusHours((-1));
        org.joda.time.Period period7 = period3.withSeconds(35);
        org.joda.time.Period period9 = period7.minusMinutes((int) (short) 10);
        org.joda.time.Chronology chronology11 = null;
        org.joda.time.MutablePeriod mutablePeriod12 = new org.joda.time.MutablePeriod(1L, chronology11);
        org.joda.time.Chronology chronology14 = null;
        org.joda.time.MutablePeriod mutablePeriod15 = new org.joda.time.MutablePeriod(1L, chronology14);
        mutablePeriod12.add((org.joda.time.ReadablePeriod) mutablePeriod15);
        org.joda.time.ReadableInstant readableInstant17 = null;
        org.joda.time.Duration duration19 = org.joda.time.Duration.standardMinutes((-1L));
        long long20 = duration19.getStandardMinutes();
        org.joda.time.Period period21 = duration19.toPeriod();
        org.joda.time.Duration duration23 = org.joda.time.Duration.standardMinutes((-1L));
        long long24 = duration23.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant25 = null;
        org.joda.time.Period period26 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration23, readableInstant25);
        org.joda.time.PeriodType periodType27 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology28 = null;
        org.joda.time.Period period29 = duration23.toPeriod(periodType27, chronology28);
        org.joda.time.Period period30 = duration19.toPeriod(periodType27);
        org.joda.time.Duration duration32 = org.joda.time.Duration.standardMinutes((-1L));
        long long33 = duration32.getStandardMinutes();
        boolean boolean34 = duration19.isLongerThan((org.joda.time.ReadableDuration) duration32);
        org.joda.time.PeriodType periodType35 = org.joda.time.PeriodType.weeks();
        org.joda.time.Period period36 = new org.joda.time.Period(readableInstant17, (org.joda.time.ReadableDuration) duration32, periodType35);
        org.joda.time.Chronology chronology37 = null;
        org.joda.time.Period period38 = duration32.toPeriod(chronology37);
        mutablePeriod12.add((org.joda.time.ReadablePeriod) period38);
        org.joda.time.Chronology chronology41 = null;
        mutablePeriod12.add((long) (short) 10, chronology41);
        org.joda.time.PeriodType periodType43 = mutablePeriod12.getPeriodType();
        org.joda.time.Period period44 = period9.withPeriodType(periodType43);
        int int45 = period9.getMillis();
        org.joda.time.Period period46 = period9.negated();
        org.joda.time.Period period48 = period9.withWeeks((-18));
        org.joda.time.Period period50 = period9.plusDays((-9));
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(period3);
        org.junit.Assert.assertNotNull(period5);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(duration19);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + (-1L) + "'", long20 == (-1L));
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertNotNull(duration23);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + (-1L) + "'", long24 == (-1L));
        org.junit.Assert.assertNotNull(periodType27);
        org.junit.Assert.assertNotNull(period29);
        org.junit.Assert.assertNotNull(period30);
        org.junit.Assert.assertNotNull(duration32);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + (-1L) + "'", long33 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(periodType35);
        org.junit.Assert.assertNotNull(period38);
        org.junit.Assert.assertNotNull(periodType43);
        org.junit.Assert.assertNotNull(period44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-35) + "'", int45 == (-35));
        org.junit.Assert.assertNotNull(period46);
        org.junit.Assert.assertNotNull(period48);
        org.junit.Assert.assertNotNull(period50);
    }

    @Test
    public void test17647() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17647");
        org.joda.time.PeriodType periodType2 = org.joda.time.PeriodType.years();
        org.joda.time.Chronology chronology3 = null;
        org.joda.time.Period period4 = new org.joda.time.Period((long) '#', (long) (-1), periodType2, chronology3);
        int int5 = periodType2.size();
        org.joda.time.Duration duration7 = org.joda.time.Duration.millis(10L);
        org.joda.time.Chronology chronology8 = null;
        org.joda.time.Period period9 = duration7.toPeriod(chronology8);
        org.joda.time.ReadableInstant readableInstant10 = null;
        org.joda.time.Duration duration12 = org.joda.time.Duration.standardMinutes((-1L));
        long long13 = duration12.getStandardMinutes();
        org.joda.time.Duration duration15 = org.joda.time.Duration.standardMinutes((-1L));
        long long16 = duration15.getStandardMinutes();
        boolean boolean17 = duration12.isLongerThan((org.joda.time.ReadableDuration) duration15);
        org.joda.time.Duration duration19 = duration15.withMillis(1L);
        org.joda.time.Period period20 = new org.joda.time.Period(readableInstant10, (org.joda.time.ReadableDuration) duration15);
        org.joda.time.DurationFieldType durationFieldType21 = org.joda.time.DurationFieldType.years();
        java.lang.String str22 = durationFieldType21.getName();
        org.joda.time.Chronology chronology23 = null;
        boolean boolean24 = durationFieldType21.isSupported(chronology23);
        org.joda.time.Period period26 = period20.withFieldAdded(durationFieldType21, 0);
        org.joda.time.Period period28 = period20.plusDays((int) (short) 0);
        org.joda.time.Period period30 = period20.plusMonths((int) 'a');
        org.joda.time.DurationFieldType durationFieldType32 = period30.getFieldType(0);
        int int33 = period9.get(durationFieldType32);
        org.joda.time.DurationFieldType durationFieldType35 = period9.getFieldType(1);
        boolean boolean36 = periodType2.isSupported(durationFieldType35);
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertNotNull(duration7);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + (-1L) + "'", long13 == (-1L));
        org.junit.Assert.assertNotNull(duration15);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + (-1L) + "'", long16 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(duration19);
        org.junit.Assert.assertNotNull(durationFieldType21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "years" + "'", str22, "years");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(period26);
        org.junit.Assert.assertNotNull(period28);
        org.junit.Assert.assertNotNull(period30);
        org.junit.Assert.assertNotNull(durationFieldType32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNotNull(durationFieldType35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
    }

    @Test
    public void test17648() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17648");
        org.joda.time.format.PeriodPrinter periodPrinter1 = null;
        org.joda.time.format.PeriodParser periodParser2 = null;
        org.joda.time.format.PeriodFormatter periodFormatter3 = new org.joda.time.format.PeriodFormatter(periodPrinter1, periodParser2);
        org.joda.time.format.PeriodPrinter periodPrinter4 = periodFormatter3.getPrinter();
        boolean boolean5 = periodFormatter3.isParser();
        org.joda.time.format.PeriodParser periodParser6 = periodFormatter3.getParser();
        boolean boolean7 = periodFormatter3.isParser();
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.Duration duration10 = org.joda.time.Duration.standardMinutes((-1L));
        long long11 = duration10.getStandardMinutes();
        org.joda.time.Duration duration13 = org.joda.time.Duration.standardMinutes((-1L));
        long long14 = duration13.getStandardMinutes();
        boolean boolean15 = duration10.isLongerThan((org.joda.time.ReadableDuration) duration13);
        org.joda.time.Period period16 = duration13.toPeriod();
        org.joda.time.Minutes minutes17 = duration13.toStandardMinutes();
        org.joda.time.Duration duration19 = org.joda.time.Duration.standardMinutes((-1L));
        long long20 = duration19.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant21 = null;
        org.joda.time.Period period22 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration19, readableInstant21);
        org.joda.time.PeriodType periodType23 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology24 = null;
        org.joda.time.Period period25 = duration19.toPeriod(periodType23, chronology24);
        org.joda.time.Duration duration28 = duration19.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration29 = duration13.plus((org.joda.time.ReadableDuration) duration28);
        org.joda.time.PeriodType periodType31 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period32 = new org.joda.time.Period(10L, periodType31);
        org.joda.time.PeriodType periodType33 = periodType31.withWeeksRemoved();
        org.joda.time.MutablePeriod mutablePeriod34 = new org.joda.time.MutablePeriod(readableInstant8, (org.joda.time.ReadableDuration) duration28, periodType33);
        int int35 = periodType33.size();
        org.joda.time.format.PeriodFormatter periodFormatter36 = periodFormatter3.withParseType(periodType33);
        org.joda.time.PeriodType periodType37 = null;
        org.joda.time.format.PeriodFormatter periodFormatter38 = periodFormatter3.withParseType(periodType37);
        org.joda.time.PeriodType periodType39 = periodFormatter3.getParseType();
        java.util.Locale locale40 = null;
        org.joda.time.format.PeriodFormatter periodFormatter41 = periodFormatter3.withLocale(locale40);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.MutablePeriod mutablePeriod42 = org.joda.time.MutablePeriod.parse("PT100M", periodFormatter41);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Parsing not supported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(periodPrinter4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(periodParser6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + (-1L) + "'", long11 == (-1L));
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + (-1L) + "'", long14 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertNotNull(duration19);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + (-1L) + "'", long20 == (-1L));
        org.junit.Assert.assertNotNull(periodType23);
        org.junit.Assert.assertNotNull(period25);
        org.junit.Assert.assertNotNull(duration28);
        org.junit.Assert.assertNotNull(duration29);
        org.junit.Assert.assertNotNull(periodType31);
        org.junit.Assert.assertNotNull(periodType33);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 1 + "'", int35 == 1);
        org.junit.Assert.assertNotNull(periodFormatter36);
        org.junit.Assert.assertNotNull(periodFormatter38);
        org.junit.Assert.assertNull(periodType39);
        org.junit.Assert.assertNotNull(periodFormatter41);
    }

    @Test
    public void test17649() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17649");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((-1L));
        long long2 = duration1.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.Period period4 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration1, readableInstant3);
        org.joda.time.PeriodType periodType5 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology6 = null;
        org.joda.time.Period period7 = duration1.toPeriod(periodType5, chronology6);
        org.joda.time.Duration duration10 = duration1.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.ReadableInstant readableInstant11 = null;
        org.joda.time.ReadableInstant readableInstant12 = null;
        org.joda.time.Duration duration14 = org.joda.time.Duration.standardMinutes((-1L));
        long long15 = duration14.getStandardMinutes();
        org.joda.time.Period period16 = duration14.toPeriod();
        org.joda.time.Duration duration18 = org.joda.time.Duration.standardMinutes((-1L));
        long long19 = duration18.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant20 = null;
        org.joda.time.Period period21 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration18, readableInstant20);
        org.joda.time.PeriodType periodType22 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology23 = null;
        org.joda.time.Period period24 = duration18.toPeriod(periodType22, chronology23);
        org.joda.time.Period period25 = duration14.toPeriod(periodType22);
        org.joda.time.MutablePeriod mutablePeriod26 = new org.joda.time.MutablePeriod(readableInstant11, readableInstant12, periodType22);
        org.joda.time.Chronology chronology27 = null;
        org.joda.time.Period period28 = duration1.toPeriod(periodType22, chronology27);
        long long29 = duration1.getMillis();
        org.joda.time.Duration duration31 = org.joda.time.Duration.standardMinutes((-1L));
        long long32 = duration31.getStandardMinutes();
        org.joda.time.Period period33 = duration31.toPeriod();
        org.joda.time.Duration duration35 = org.joda.time.Duration.standardMinutes((-1L));
        long long36 = duration35.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant37 = null;
        org.joda.time.Period period38 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration35, readableInstant37);
        org.joda.time.PeriodType periodType39 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology40 = null;
        org.joda.time.Period period41 = duration35.toPeriod(periodType39, chronology40);
        org.joda.time.Period period42 = duration31.toPeriod(periodType39);
        org.joda.time.Duration duration44 = org.joda.time.Duration.standardMinutes((-1L));
        long long45 = duration44.getStandardMinutes();
        boolean boolean46 = duration31.isLongerThan((org.joda.time.ReadableDuration) duration44);
        org.joda.time.PeriodType periodType48 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology49 = null;
        org.joda.time.MutablePeriod mutablePeriod50 = new org.joda.time.MutablePeriod((long) '4', periodType48, chronology49);
        org.joda.time.Chronology chronology51 = null;
        org.joda.time.Period period52 = duration31.toPeriod(periodType48, chronology51);
        boolean boolean53 = duration1.isEqual((org.joda.time.ReadableDuration) duration31);
        org.joda.time.ReadableInstant readableInstant54 = null;
        org.joda.time.PeriodType periodType56 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period57 = new org.joda.time.Period(10L, periodType56);
        org.joda.time.DurationFieldType durationFieldType58 = org.joda.time.DurationFieldType.weeks();
        boolean boolean59 = periodType56.isSupported(durationFieldType58);
        org.joda.time.Period period60 = duration1.toPeriodFrom(readableInstant54, periodType56);
        org.joda.time.Chronology chronology61 = null;
        org.joda.time.Period period62 = new org.joda.time.Period((java.lang.Object) duration1, chronology61);
        org.joda.time.Duration duration63 = duration1.toDuration();
        org.joda.time.Period period65 = org.joda.time.Period.years((int) (byte) 0);
        org.joda.time.Period period67 = period65.withMinutes((int) '4');
        boolean boolean68 = duration1.equals((java.lang.Object) period67);
        org.joda.time.Period period70 = period67.withMonths(7);
        org.joda.time.Period period72 = period67.plusSeconds(98);
        org.joda.time.Period period74 = period72.withMillis(2);
        org.joda.time.Period period76 = period72.withHours(92);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + (-1L) + "'", long2 == (-1L));
        org.junit.Assert.assertNotNull(periodType5);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + (-1L) + "'", long15 == (-1L));
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertNotNull(duration18);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + (-1L) + "'", long19 == (-1L));
        org.junit.Assert.assertNotNull(periodType22);
        org.junit.Assert.assertNotNull(period24);
        org.junit.Assert.assertNotNull(period25);
        org.junit.Assert.assertNotNull(period28);
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + (-60000L) + "'", long29 == (-60000L));
        org.junit.Assert.assertNotNull(duration31);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + (-1L) + "'", long32 == (-1L));
        org.junit.Assert.assertNotNull(period33);
        org.junit.Assert.assertNotNull(duration35);
        org.junit.Assert.assertTrue("'" + long36 + "' != '" + (-1L) + "'", long36 == (-1L));
        org.junit.Assert.assertNotNull(periodType39);
        org.junit.Assert.assertNotNull(period41);
        org.junit.Assert.assertNotNull(period42);
        org.junit.Assert.assertNotNull(duration44);
        org.junit.Assert.assertTrue("'" + long45 + "' != '" + (-1L) + "'", long45 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(periodType48);
        org.junit.Assert.assertNotNull(period52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(periodType56);
        org.junit.Assert.assertNotNull(durationFieldType58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(period60);
        org.junit.Assert.assertNotNull(duration63);
        org.junit.Assert.assertNotNull(period65);
        org.junit.Assert.assertNotNull(period67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(period70);
        org.junit.Assert.assertNotNull(period72);
        org.junit.Assert.assertNotNull(period74);
        org.junit.Assert.assertNotNull(period76);
    }

    @Test
    public void test17650() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17650");
        org.joda.time.format.PeriodPrinter periodPrinter1 = null;
        org.joda.time.format.PeriodParser periodParser2 = null;
        org.joda.time.format.PeriodFormatter periodFormatter3 = new org.joda.time.format.PeriodFormatter(periodPrinter1, periodParser2);
        boolean boolean4 = periodFormatter3.isPrinter();
        org.joda.time.format.PeriodParser periodParser5 = periodFormatter3.getParser();
        java.util.Locale locale6 = null;
        org.joda.time.format.PeriodFormatter periodFormatter7 = periodFormatter3.withLocale(locale6);
        org.joda.time.PeriodType periodType8 = periodFormatter7.getParseType();
        boolean boolean9 = periodFormatter7.isPrinter();
        java.util.Locale locale10 = periodFormatter7.getLocale();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.MutablePeriod mutablePeriod11 = org.joda.time.MutablePeriod.parse("", periodFormatter7);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Parsing not supported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(periodParser5);
        org.junit.Assert.assertNotNull(periodFormatter7);
        org.junit.Assert.assertNull(periodType8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(locale10);
    }

    @Test
    public void test17651() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17651");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardDays((long) (-5));
        org.junit.Assert.assertNotNull(duration1);
    }

    @Test
    public void test17652() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17652");
        org.joda.time.PeriodType periodType2 = org.joda.time.PeriodType.seconds();
        org.joda.time.PeriodType periodType3 = periodType2.withMinutesRemoved();
        org.joda.time.Chronology chronology4 = null;
        org.joda.time.MutablePeriod mutablePeriod5 = new org.joda.time.MutablePeriod((long) 0, (long) (short) 100, periodType2, chronology4);
        org.joda.time.Duration duration7 = org.joda.time.Duration.standardMinutes((-1L));
        long long8 = duration7.getStandardMinutes();
        org.joda.time.Duration duration10 = org.joda.time.Duration.standardMinutes((-1L));
        long long11 = duration10.getStandardMinutes();
        boolean boolean12 = duration7.isLongerThan((org.joda.time.ReadableDuration) duration10);
        org.joda.time.Period period13 = duration10.toPeriod();
        org.joda.time.Minutes minutes14 = duration10.toStandardMinutes();
        mutablePeriod5.add((org.joda.time.ReadableDuration) duration10);
        org.joda.time.Duration duration17 = duration10.withMillis((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant18 = null;
        org.joda.time.Duration duration22 = org.joda.time.Duration.standardMinutes((-1L));
        long long23 = duration22.getStandardMinutes();
        org.joda.time.Period period24 = duration22.toPeriod();
        org.joda.time.Duration duration26 = org.joda.time.Duration.standardMinutes((-1L));
        long long27 = duration26.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant28 = null;
        org.joda.time.Period period29 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration26, readableInstant28);
        org.joda.time.PeriodType periodType30 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology31 = null;
        org.joda.time.Period period32 = duration26.toPeriod(periodType30, chronology31);
        org.joda.time.Period period33 = duration22.toPeriod(periodType30);
        org.joda.time.Chronology chronology34 = null;
        org.joda.time.MutablePeriod mutablePeriod35 = new org.joda.time.MutablePeriod(1L, (long) (byte) 100, periodType30, chronology34);
        org.joda.time.PeriodType periodType36 = periodType30.withYearsRemoved();
        org.joda.time.Period period37 = duration10.toPeriodFrom(readableInstant18, periodType36);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Period period39 = period37.plusMillis(7);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Field is not supported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(periodType3);
        org.junit.Assert.assertNotNull(duration7);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + (-1L) + "'", long8 == (-1L));
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + (-1L) + "'", long11 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(period13);
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertNotNull(duration17);
        org.junit.Assert.assertNotNull(duration22);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + (-1L) + "'", long23 == (-1L));
        org.junit.Assert.assertNotNull(period24);
        org.junit.Assert.assertNotNull(duration26);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + (-1L) + "'", long27 == (-1L));
        org.junit.Assert.assertNotNull(periodType30);
        org.junit.Assert.assertNotNull(period32);
        org.junit.Assert.assertNotNull(period33);
        org.junit.Assert.assertNotNull(periodType36);
        org.junit.Assert.assertNotNull(period37);
    }

    @Test
    public void test17653() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17653");
        org.joda.time.Period period1 = org.joda.time.Period.parse("PT-0.002S");
        org.junit.Assert.assertNotNull(period1);
    }

    @Test
    public void test17654() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17654");
        org.joda.time.Duration duration2 = new org.joda.time.Duration((long) (short) 100, 30930600000L);
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.MutablePeriod mutablePeriod4 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration2, readableInstant3);
        org.joda.time.ReadableInstant readableInstant5 = null;
        org.joda.time.Duration duration6 = mutablePeriod4.toDurationTo(readableInstant5);
        java.lang.Object obj7 = mutablePeriod4.clone();
        org.junit.Assert.assertNotNull(duration6);
        org.junit.Assert.assertNotNull(obj7);
        org.junit.Assert.assertEquals(obj7.toString(), "P11M3W2DT23H49M59.900S");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj7), "P11M3W2DT23H49M59.900S");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj7), "P11M3W2DT23H49M59.900S");
    }

    @Test
    public void test17655() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17655");
        org.joda.time.MutablePeriod mutablePeriod4 = new org.joda.time.MutablePeriod(1, 0, (int) (byte) 1, 100);
        mutablePeriod4.setSeconds(0);
        mutablePeriod4.setWeeks((int) (byte) -1);
        int int9 = mutablePeriod4.size();
        mutablePeriod4.addWeeks((int) ' ');
        org.joda.time.Chronology chronology13 = null;
        org.joda.time.MutablePeriod mutablePeriod14 = new org.joda.time.MutablePeriod(1L, chronology13);
        org.joda.time.Chronology chronology16 = null;
        org.joda.time.MutablePeriod mutablePeriod17 = new org.joda.time.MutablePeriod(1L, chronology16);
        mutablePeriod14.add((org.joda.time.ReadablePeriod) mutablePeriod17);
        mutablePeriod14.addYears((int) (short) 10);
        mutablePeriod14.setPeriod(1, 1, 12, 101, (int) (byte) 100, 32, (int) ' ', (-90));
        int int30 = mutablePeriod14.getSeconds();
        org.joda.time.ReadableInstant readableInstant31 = null;
        org.joda.time.ReadableInstant readableInstant32 = null;
        org.joda.time.Duration duration34 = org.joda.time.Duration.standardMinutes((-1L));
        long long35 = duration34.getStandardMinutes();
        org.joda.time.Duration duration37 = org.joda.time.Duration.standardMinutes((-1L));
        long long38 = duration37.getStandardMinutes();
        boolean boolean39 = duration34.isLongerThan((org.joda.time.ReadableDuration) duration37);
        org.joda.time.Duration duration41 = duration37.withMillis(1L);
        org.joda.time.Period period42 = new org.joda.time.Period(readableInstant32, (org.joda.time.ReadableDuration) duration37);
        org.joda.time.MutablePeriod mutablePeriod43 = new org.joda.time.MutablePeriod(readableInstant31, (org.joda.time.ReadableDuration) duration37);
        org.joda.time.PeriodType periodType45 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period46 = new org.joda.time.Period(10L, periodType45);
        org.joda.time.DurationFieldType durationFieldType47 = org.joda.time.DurationFieldType.weeks();
        boolean boolean48 = periodType45.isSupported(durationFieldType47);
        org.joda.time.Chronology chronology49 = null;
        boolean boolean50 = durationFieldType47.isSupported(chronology49);
        mutablePeriod43.set(durationFieldType47, (-60));
        mutablePeriod14.add(durationFieldType47, 35);
        int int55 = mutablePeriod4.indexOf(durationFieldType47);
        java.lang.String str56 = durationFieldType47.getName();
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 8 + "'", int9 == 8);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 32 + "'", int30 == 32);
        org.junit.Assert.assertNotNull(duration34);
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + (-1L) + "'", long35 == (-1L));
        org.junit.Assert.assertNotNull(duration37);
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + (-1L) + "'", long38 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(duration41);
        org.junit.Assert.assertNotNull(periodType45);
        org.junit.Assert.assertNotNull(durationFieldType47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 2 + "'", int55 == 2);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "weeks" + "'", str56, "weeks");
    }

    @Test
    public void test17656() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17656");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((-1L));
        long long2 = duration1.getStandardMinutes();
        org.joda.time.Period period3 = duration1.toPeriod();
        org.joda.time.Duration duration5 = org.joda.time.Duration.standardMinutes((-1L));
        long long6 = duration5.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.Period period8 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration5, readableInstant7);
        org.joda.time.PeriodType periodType9 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology10 = null;
        org.joda.time.Period period11 = duration5.toPeriod(periodType9, chronology10);
        org.joda.time.Period period12 = duration1.toPeriod(periodType9);
        org.joda.time.PeriodType periodType14 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period15 = new org.joda.time.Period(10L, periodType14);
        org.joda.time.PeriodType periodType16 = periodType14.withWeeksRemoved();
        org.joda.time.Period period17 = period12.withPeriodType(periodType16);
        int int18 = period12.getMillis();
        org.joda.time.Period period20 = period12.minusDays((int) ' ');
        org.joda.time.Chronology chronology22 = null;
        org.joda.time.MutablePeriod mutablePeriod23 = new org.joda.time.MutablePeriod(1L, chronology22);
        org.joda.time.Period period25 = org.joda.time.Period.seconds((int) '#');
        mutablePeriod23.setPeriod((org.joda.time.ReadablePeriod) period25);
        org.joda.time.DurationFieldType durationFieldType27 = org.joda.time.DurationFieldType.years();
        java.lang.String str28 = durationFieldType27.getName();
        boolean boolean29 = mutablePeriod23.isSupported(durationFieldType27);
        boolean boolean30 = period12.isSupported(durationFieldType27);
        org.joda.time.MutablePeriod mutablePeriod31 = new org.joda.time.MutablePeriod((java.lang.Object) period12);
        java.lang.Object obj32 = null;
        org.joda.time.PeriodType periodType34 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period35 = new org.joda.time.Period(10L, periodType34);
        org.joda.time.PeriodType periodType36 = periodType34.withHoursRemoved();
        org.joda.time.Period period37 = new org.joda.time.Period(obj32, periodType34);
        org.joda.time.Period period39 = period37.withSeconds((int) (short) 0);
        org.joda.time.Period period41 = period37.plusMinutes((int) (byte) 0);
        org.joda.time.Period period43 = period37.multipliedBy((int) '#');
        org.joda.time.ReadableInstant readableInstant44 = null;
        org.joda.time.Duration duration45 = period37.toDurationFrom(readableInstant44);
        int int46 = period37.getSeconds();
        mutablePeriod31.mergePeriod((org.joda.time.ReadablePeriod) period37);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + (-1L) + "'", long2 == (-1L));
        org.junit.Assert.assertNotNull(period3);
        org.junit.Assert.assertNotNull(duration5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
        org.junit.Assert.assertNotNull(periodType9);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertNotNull(periodType14);
        org.junit.Assert.assertNotNull(periodType16);
        org.junit.Assert.assertNotNull(period17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(period20);
        org.junit.Assert.assertNotNull(period25);
        org.junit.Assert.assertNotNull(durationFieldType27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "years" + "'", str28, "years");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(periodType34);
        org.junit.Assert.assertNotNull(periodType36);
        org.junit.Assert.assertNotNull(period39);
        org.junit.Assert.assertNotNull(period41);
        org.junit.Assert.assertNotNull(period43);
        org.junit.Assert.assertNotNull(duration45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
    }

    @Test
    public void test17657() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17657");
        org.joda.time.Period period1 = org.joda.time.Period.seconds((int) '#');
        int int2 = period1.getMillis();
        org.joda.time.DurationFieldType durationFieldType3 = org.joda.time.DurationFieldType.years();
        org.joda.time.Period period5 = period1.withField(durationFieldType3, (int) (short) 10);
        org.joda.time.Period period6 = new org.joda.time.Period((java.lang.Object) period5);
        int int7 = period5.getMillis();
        int int8 = period5.getDays();
        org.joda.time.Period period10 = period5.minusWeeks((int) '#');
        org.joda.time.Period period12 = period5.plusMinutes((-60));
        int int13 = period12.getMinutes();
        org.joda.time.Period period15 = period12.multipliedBy(107);
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(durationFieldType3);
        org.junit.Assert.assertNotNull(period5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-60) + "'", int13 == (-60));
        org.junit.Assert.assertNotNull(period15);
    }

    @Test
    public void test17658() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17658");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.MutablePeriod mutablePeriod3 = new org.joda.time.MutablePeriod((-60000L), 0L, chronology2);
        org.joda.time.DurationFieldType[] durationFieldTypeArray4 = mutablePeriod3.getFieldTypes();
        org.joda.time.PeriodType periodType5 = org.joda.time.PeriodType.forFields(durationFieldTypeArray4);
        org.joda.time.PeriodType periodType6 = org.joda.time.PeriodType.forFields(durationFieldTypeArray4);
        org.joda.time.PeriodType periodType7 = periodType6.withMinutesRemoved();
        org.junit.Assert.assertNotNull(durationFieldTypeArray4);
        org.junit.Assert.assertNotNull(periodType5);
        org.junit.Assert.assertNotNull(periodType6);
        org.junit.Assert.assertNotNull(periodType7);
    }

    @Test
    public void test17659() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17659");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.Duration duration2 = org.joda.time.Duration.standardMinutes((-1L));
        long long3 = duration2.getStandardMinutes();
        org.joda.time.Duration duration5 = org.joda.time.Duration.standardMinutes((-1L));
        long long6 = duration5.getStandardMinutes();
        boolean boolean7 = duration2.isLongerThan((org.joda.time.ReadableDuration) duration5);
        org.joda.time.Duration duration9 = duration5.withMillis(1L);
        org.joda.time.Period period10 = new org.joda.time.Period(readableInstant0, (org.joda.time.ReadableDuration) duration5);
        org.joda.time.Days days11 = period10.toStandardDays();
        org.joda.time.Period period13 = period10.multipliedBy((int) (short) -1);
        org.joda.time.Period period15 = period10.plusMonths((int) (byte) 0);
        org.joda.time.Chronology chronology17 = null;
        org.joda.time.MutablePeriod mutablePeriod18 = new org.joda.time.MutablePeriod(1L, chronology17);
        org.joda.time.Chronology chronology20 = null;
        org.joda.time.MutablePeriod mutablePeriod21 = new org.joda.time.MutablePeriod(1L, chronology20);
        mutablePeriod18.add((org.joda.time.ReadablePeriod) mutablePeriod21);
        org.joda.time.PeriodType periodType23 = mutablePeriod21.getPeriodType();
        org.joda.time.MutablePeriod mutablePeriod24 = new org.joda.time.MutablePeriod((java.lang.Object) period15, periodType23);
        mutablePeriod24.clear();
        org.joda.time.Period period26 = mutablePeriod24.toPeriod();
        int int27 = mutablePeriod24.getHours();
        mutablePeriod24.addYears((-6000));
        org.junit.Assert.assertNotNull(duration2);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + (-1L) + "'", long3 == (-1L));
        org.junit.Assert.assertNotNull(duration5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertNotNull(days11);
        org.junit.Assert.assertNotNull(period13);
        org.junit.Assert.assertNotNull(period15);
        org.junit.Assert.assertNotNull(periodType23);
        org.junit.Assert.assertNotNull(period26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
    }

    @Test
    public void test17660() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17660");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableInstant readableInstant1 = null;
        org.joda.time.Duration duration5 = org.joda.time.Duration.standardMinutes((-1L));
        long long6 = duration5.getStandardMinutes();
        org.joda.time.Period period7 = duration5.toPeriod();
        org.joda.time.Duration duration9 = org.joda.time.Duration.standardMinutes((-1L));
        long long10 = duration9.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant11 = null;
        org.joda.time.Period period12 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration9, readableInstant11);
        org.joda.time.PeriodType periodType13 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology14 = null;
        org.joda.time.Period period15 = duration9.toPeriod(periodType13, chronology14);
        org.joda.time.Period period16 = duration5.toPeriod(periodType13);
        org.joda.time.Chronology chronology17 = null;
        org.joda.time.MutablePeriod mutablePeriod18 = new org.joda.time.MutablePeriod(1L, (long) (byte) 100, periodType13, chronology17);
        org.joda.time.PeriodType periodType19 = periodType13.withYearsRemoved();
        org.joda.time.Period period20 = new org.joda.time.Period(readableInstant0, readableInstant1, periodType19);
        org.joda.time.Period period21 = period20.negated();
        org.junit.Assert.assertNotNull(duration5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + (-1L) + "'", long10 == (-1L));
        org.junit.Assert.assertNotNull(periodType13);
        org.junit.Assert.assertNotNull(period15);
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertNotNull(periodType19);
        org.junit.Assert.assertNotNull(period21);
    }

    @Test
    public void test17661() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17661");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.MutablePeriod mutablePeriod3 = new org.joda.time.MutablePeriod((long) (-97), (long) (-60), chronology2);
    }

    @Test
    public void test17662() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17662");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardDays((long) (short) 0);
        org.joda.time.Duration duration3 = org.joda.time.Duration.standardMinutes((-1L));
        long long4 = duration3.getStandardMinutes();
        org.joda.time.Period period5 = duration3.toPeriod();
        org.joda.time.Duration duration7 = org.joda.time.Duration.standardMinutes((-1L));
        long long8 = duration7.getStandardMinutes();
        org.joda.time.Duration duration10 = org.joda.time.Duration.standardMinutes((-1L));
        long long11 = duration10.getStandardMinutes();
        boolean boolean12 = duration7.isLongerThan((org.joda.time.ReadableDuration) duration10);
        org.joda.time.Duration duration14 = duration10.withMillis(1L);
        org.joda.time.Duration duration16 = org.joda.time.Duration.standardMinutes((-1L));
        long long17 = duration16.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant18 = null;
        org.joda.time.Period period19 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration16, readableInstant18);
        org.joda.time.PeriodType periodType20 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology21 = null;
        org.joda.time.Period period22 = duration16.toPeriod(periodType20, chronology21);
        org.joda.time.Duration duration23 = duration16.toDuration();
        int int24 = duration10.compareTo((org.joda.time.ReadableDuration) duration16);
        boolean boolean25 = duration3.isLongerThan((org.joda.time.ReadableDuration) duration10);
        org.joda.time.ReadableInstant readableInstant26 = null;
        org.joda.time.Duration duration30 = org.joda.time.Duration.standardMinutes((-1L));
        long long31 = duration30.getStandardMinutes();
        org.joda.time.Period period32 = duration30.toPeriod();
        org.joda.time.Duration duration34 = org.joda.time.Duration.standardMinutes((-1L));
        long long35 = duration34.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant36 = null;
        org.joda.time.Period period37 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration34, readableInstant36);
        org.joda.time.PeriodType periodType38 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology39 = null;
        org.joda.time.Period period40 = duration34.toPeriod(periodType38, chronology39);
        org.joda.time.Period period41 = duration30.toPeriod(periodType38);
        org.joda.time.Chronology chronology42 = null;
        org.joda.time.MutablePeriod mutablePeriod43 = new org.joda.time.MutablePeriod(1L, (long) (byte) 100, periodType38, chronology42);
        org.joda.time.PeriodType periodType44 = periodType38.withYearsRemoved();
        org.joda.time.Period period45 = duration3.toPeriodTo(readableInstant26, periodType38);
        org.joda.time.ReadableInstant readableInstant46 = null;
        org.joda.time.ReadableInstant readableInstant47 = null;
        org.joda.time.ReadableInstant readableInstant48 = null;
        org.joda.time.Duration duration50 = org.joda.time.Duration.standardMinutes((-1L));
        long long51 = duration50.getStandardMinutes();
        org.joda.time.Period period52 = duration50.toPeriod();
        org.joda.time.Duration duration54 = org.joda.time.Duration.standardMinutes((-1L));
        long long55 = duration54.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant56 = null;
        org.joda.time.Period period57 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration54, readableInstant56);
        org.joda.time.PeriodType periodType58 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology59 = null;
        org.joda.time.Period period60 = duration54.toPeriod(periodType58, chronology59);
        org.joda.time.Period period61 = duration50.toPeriod(periodType58);
        org.joda.time.MutablePeriod mutablePeriod62 = new org.joda.time.MutablePeriod(readableInstant47, readableInstant48, periodType58);
        org.joda.time.Period period64 = org.joda.time.Period.seconds((int) '#');
        int int65 = period64.getMillis();
        org.joda.time.DurationFieldType durationFieldType66 = org.joda.time.DurationFieldType.years();
        org.joda.time.Period period68 = period64.withField(durationFieldType66, (int) (short) 10);
        int int69 = periodType58.indexOf(durationFieldType66);
        org.joda.time.PeriodType periodType70 = periodType58.withMonthsRemoved();
        org.joda.time.Period period71 = duration3.toPeriodFrom(readableInstant46, periodType70);
        org.joda.time.Duration duration72 = duration3.toDuration();
        int int73 = duration1.compareTo((org.joda.time.ReadableDuration) duration72);
        org.joda.time.Chronology chronology74 = null;
        org.joda.time.Period period75 = duration1.toPeriod(chronology74);
        org.joda.time.ReadableInstant readableInstant76 = null;
        org.joda.time.Duration duration77 = period75.toDurationFrom(readableInstant76);
        org.joda.time.Duration duration80 = duration77.withDurationAdded((long) '#', 0);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + (-1L) + "'", long4 == (-1L));
        org.junit.Assert.assertNotNull(period5);
        org.junit.Assert.assertNotNull(duration7);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + (-1L) + "'", long8 == (-1L));
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + (-1L) + "'", long11 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertNotNull(duration16);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + (-1L) + "'", long17 == (-1L));
        org.junit.Assert.assertNotNull(periodType20);
        org.junit.Assert.assertNotNull(period22);
        org.junit.Assert.assertNotNull(duration23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(duration30);
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + (-1L) + "'", long31 == (-1L));
        org.junit.Assert.assertNotNull(period32);
        org.junit.Assert.assertNotNull(duration34);
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + (-1L) + "'", long35 == (-1L));
        org.junit.Assert.assertNotNull(periodType38);
        org.junit.Assert.assertNotNull(period40);
        org.junit.Assert.assertNotNull(period41);
        org.junit.Assert.assertNotNull(periodType44);
        org.junit.Assert.assertNotNull(period45);
        org.junit.Assert.assertNotNull(duration50);
        org.junit.Assert.assertTrue("'" + long51 + "' != '" + (-1L) + "'", long51 == (-1L));
        org.junit.Assert.assertNotNull(period52);
        org.junit.Assert.assertNotNull(duration54);
        org.junit.Assert.assertTrue("'" + long55 + "' != '" + (-1L) + "'", long55 == (-1L));
        org.junit.Assert.assertNotNull(periodType58);
        org.junit.Assert.assertNotNull(period60);
        org.junit.Assert.assertNotNull(period61);
        org.junit.Assert.assertNotNull(period64);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 0 + "'", int65 == 0);
        org.junit.Assert.assertNotNull(durationFieldType66);
        org.junit.Assert.assertNotNull(period68);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + (-1) + "'", int69 == (-1));
        org.junit.Assert.assertNotNull(periodType70);
        org.junit.Assert.assertNotNull(period71);
        org.junit.Assert.assertNotNull(duration72);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 1 + "'", int73 == 1);
        org.junit.Assert.assertNotNull(period75);
        org.junit.Assert.assertNotNull(duration77);
        org.junit.Assert.assertNotNull(duration80);
    }

    @Test
    public void test17663() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17663");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.Period period2 = new org.joda.time.Period(readableInstant0, readableDuration1);
        org.joda.time.DurationFieldType durationFieldType3 = org.joda.time.DurationFieldType.centuries();
        org.joda.time.Period period5 = period2.withFieldAdded(durationFieldType3, (int) (byte) 0);
        org.joda.time.Period period7 = period2.withSeconds(8);
        org.joda.time.Period period9 = period7.plusMonths((int) '#');
        org.joda.time.Duration duration12 = new org.joda.time.Duration((-2L), (long) (byte) 0);
        org.joda.time.ReadableInstant readableInstant13 = null;
        org.joda.time.Period period14 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration12, readableInstant13);
        org.joda.time.Period period16 = period14.withWeeks((-1));
        org.joda.time.DurationFieldType durationFieldType18 = period16.getFieldType((int) (short) 0);
        org.joda.time.Period period20 = period9.withField(durationFieldType18, (-35));
        org.joda.time.Duration duration22 = org.joda.time.Duration.standardMinutes((-1L));
        long long23 = duration22.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant24 = null;
        org.joda.time.Period period25 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration22, readableInstant24);
        org.joda.time.Duration duration27 = org.joda.time.Duration.standardMinutes((-1L));
        long long28 = duration27.getStandardMinutes();
        org.joda.time.Period period29 = duration27.toPeriod();
        boolean boolean30 = duration22.isLongerThan((org.joda.time.ReadableDuration) duration27);
        org.joda.time.Duration duration32 = org.joda.time.Duration.standardMinutes((-1L));
        long long33 = duration32.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant34 = null;
        org.joda.time.Period period35 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration32, readableInstant34);
        org.joda.time.PeriodType periodType36 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology37 = null;
        org.joda.time.Period period38 = duration32.toPeriod(periodType36, chronology37);
        org.joda.time.Duration duration39 = duration27.minus((org.joda.time.ReadableDuration) duration32);
        org.joda.time.ReadableInstant readableInstant40 = null;
        org.joda.time.Period period41 = duration32.toPeriodFrom(readableInstant40);
        org.joda.time.Period period42 = period20.minus((org.joda.time.ReadablePeriod) period41);
        org.junit.Assert.assertNotNull(durationFieldType3);
        org.junit.Assert.assertNotNull(period5);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertNotNull(durationFieldType18);
        org.junit.Assert.assertNotNull(period20);
        org.junit.Assert.assertNotNull(duration22);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + (-1L) + "'", long23 == (-1L));
        org.junit.Assert.assertNotNull(duration27);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + (-1L) + "'", long28 == (-1L));
        org.junit.Assert.assertNotNull(period29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(duration32);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + (-1L) + "'", long33 == (-1L));
        org.junit.Assert.assertNotNull(periodType36);
        org.junit.Assert.assertNotNull(period38);
        org.junit.Assert.assertNotNull(duration39);
        org.junit.Assert.assertNotNull(period41);
        org.junit.Assert.assertNotNull(period42);
    }

    @Test
    public void test17664() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17664");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.Duration duration2 = org.joda.time.Duration.standardMinutes((-1L));
        long long3 = duration2.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant4 = null;
        org.joda.time.Period period5 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration2, readableInstant4);
        org.joda.time.PeriodType periodType6 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology7 = null;
        org.joda.time.Period period8 = duration2.toPeriod(periodType6, chronology7);
        org.joda.time.Duration duration11 = duration2.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration13 = org.joda.time.Duration.standardMinutes((-1L));
        long long14 = duration13.getStandardMinutes();
        org.joda.time.Duration duration16 = org.joda.time.Duration.standardMinutes((-1L));
        long long17 = duration16.getStandardMinutes();
        boolean boolean18 = duration13.isLongerThan((org.joda.time.ReadableDuration) duration16);
        org.joda.time.Duration duration20 = duration16.withMillis((long) 1);
        boolean boolean21 = duration11.isShorterThan((org.joda.time.ReadableDuration) duration16);
        org.joda.time.Period period23 = org.joda.time.Period.hours((int) 'a');
        org.joda.time.Duration duration24 = period23.toStandardDuration();
        org.joda.time.Period period26 = org.joda.time.Period.hours((int) 'a');
        org.joda.time.Duration duration27 = period26.toStandardDuration();
        org.joda.time.Duration duration29 = duration27.minus((long) 5);
        int int30 = duration24.compareTo((org.joda.time.ReadableDuration) duration27);
        int int31 = duration16.compareTo((org.joda.time.ReadableDuration) duration24);
        org.joda.time.Duration duration33 = duration16.minus((-59900L));
        org.joda.time.Period period34 = new org.joda.time.Period(readableInstant0, (org.joda.time.ReadableDuration) duration33);
        org.junit.Assert.assertNotNull(duration2);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + (-1L) + "'", long3 == (-1L));
        org.junit.Assert.assertNotNull(periodType6);
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + (-1L) + "'", long14 == (-1L));
        org.junit.Assert.assertNotNull(duration16);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + (-1L) + "'", long17 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(duration20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(period23);
        org.junit.Assert.assertNotNull(duration24);
        org.junit.Assert.assertNotNull(period26);
        org.junit.Assert.assertNotNull(duration27);
        org.junit.Assert.assertNotNull(duration29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNotNull(duration33);
    }

    @Test
    public void test17665() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17665");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((-1L));
        long long2 = duration1.getStandardMinutes();
        org.joda.time.Duration duration4 = org.joda.time.Duration.standardMinutes((-1L));
        long long5 = duration4.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant6 = null;
        org.joda.time.Period period7 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration4, readableInstant6);
        org.joda.time.PeriodType periodType8 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology9 = null;
        org.joda.time.Period period10 = duration4.toPeriod(periodType8, chronology9);
        org.joda.time.Duration duration11 = duration4.toDuration();
        org.joda.time.Duration duration13 = duration1.withDurationAdded((org.joda.time.ReadableDuration) duration11, 100);
        org.joda.time.Chronology chronology14 = null;
        org.joda.time.Period period15 = duration13.toPeriod(chronology14);
        org.joda.time.ReadableInstant readableInstant16 = null;
        org.joda.time.Duration duration21 = org.joda.time.Duration.standardMinutes((-1L));
        long long22 = duration21.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant23 = null;
        org.joda.time.Period period24 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration21, readableInstant23);
        org.joda.time.Duration duration26 = org.joda.time.Duration.standardMinutes((-1L));
        long long27 = duration26.getStandardMinutes();
        org.joda.time.Period period28 = duration26.toPeriod();
        boolean boolean29 = duration21.isLongerThan((org.joda.time.ReadableDuration) duration26);
        org.joda.time.ReadableInstant readableInstant30 = null;
        org.joda.time.PeriodType periodType33 = org.joda.time.PeriodType.seconds();
        org.joda.time.PeriodType periodType34 = periodType33.withMinutesRemoved();
        org.joda.time.Chronology chronology35 = null;
        org.joda.time.MutablePeriod mutablePeriod36 = new org.joda.time.MutablePeriod((long) 0, (long) (short) 100, periodType33, chronology35);
        org.joda.time.PeriodType periodType37 = periodType33.withMillisRemoved();
        org.joda.time.Period period38 = duration21.toPeriodTo(readableInstant30, periodType37);
        org.joda.time.Chronology chronology39 = null;
        org.joda.time.Period period40 = new org.joda.time.Period((long) (short) 1, (long) 1, periodType37, chronology39);
        org.joda.time.PeriodType periodType41 = periodType37.withYearsRemoved();
        org.joda.time.PeriodType periodType42 = periodType41.withYearsRemoved();
        org.joda.time.Chronology chronology43 = null;
        org.joda.time.Period period44 = new org.joda.time.Period((long) (short) 100, periodType41, chronology43);
        org.joda.time.MutablePeriod mutablePeriod45 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration13, readableInstant16, periodType41);
        long long46 = duration13.getStandardSeconds();
        org.joda.time.format.PeriodPrinter periodPrinter48 = null;
        org.joda.time.format.PeriodParser periodParser49 = null;
        org.joda.time.format.PeriodFormatter periodFormatter50 = new org.joda.time.format.PeriodFormatter(periodPrinter48, periodParser49);
        org.joda.time.format.PeriodPrinter periodPrinter51 = periodFormatter50.getPrinter();
        boolean boolean52 = periodFormatter50.isPrinter();
        org.joda.time.PeriodType periodType53 = org.joda.time.PeriodType.standard();
        org.joda.time.PeriodType periodType54 = periodType53.withMinutesRemoved();
        org.joda.time.PeriodType periodType55 = periodType54.withMillisRemoved();
        org.joda.time.format.PeriodFormatter periodFormatter56 = periodFormatter50.withParseType(periodType54);
        org.joda.time.MutablePeriod mutablePeriod57 = new org.joda.time.MutablePeriod(10L, periodType54);
        int int58 = periodType54.size();
        org.joda.time.Chronology chronology59 = null;
        org.joda.time.Period period60 = duration13.toPeriod(periodType54, chronology59);
        org.joda.time.Duration duration61 = duration13.toDuration();
        java.lang.String str62 = duration13.toString();
        org.joda.time.Chronology chronology64 = null;
        org.joda.time.MutablePeriod mutablePeriod65 = new org.joda.time.MutablePeriod(1L, chronology64);
        org.joda.time.Chronology chronology67 = null;
        org.joda.time.MutablePeriod mutablePeriod68 = new org.joda.time.MutablePeriod(1L, chronology67);
        mutablePeriod65.add((org.joda.time.ReadablePeriod) mutablePeriod68);
        org.joda.time.Duration duration71 = org.joda.time.Duration.standardMinutes((-1L));
        long long72 = duration71.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant73 = null;
        org.joda.time.Period period74 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration71, readableInstant73);
        mutablePeriod68.setPeriod((org.joda.time.ReadablePeriod) period74);
        mutablePeriod68.setMinutes((int) (short) 0);
        org.joda.time.PeriodType periodType80 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period81 = new org.joda.time.Period(10L, periodType80);
        org.joda.time.DurationFieldType durationFieldType82 = org.joda.time.DurationFieldType.weeks();
        boolean boolean83 = periodType80.isSupported(durationFieldType82);
        org.joda.time.DurationFieldType durationFieldType84 = org.joda.time.DurationFieldType.centuries();
        int int85 = periodType80.indexOf(durationFieldType84);
        org.joda.time.MutablePeriod mutablePeriod86 = new org.joda.time.MutablePeriod((long) '#', periodType80);
        org.joda.time.DurationFieldType durationFieldType87 = org.joda.time.DurationFieldType.weeks();
        boolean boolean88 = mutablePeriod86.isSupported(durationFieldType87);
        boolean boolean89 = mutablePeriod68.isSupported(durationFieldType87);
        org.joda.time.Chronology chronology90 = null;
        org.joda.time.DurationField durationField91 = durationFieldType87.getField(chronology90);
        boolean boolean92 = duration13.equals((java.lang.Object) chronology90);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + (-1L) + "'", long2 == (-1L));
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + (-1L) + "'", long5 == (-1L));
        org.junit.Assert.assertNotNull(periodType8);
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertNotNull(period15);
        org.junit.Assert.assertNotNull(duration21);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + (-1L) + "'", long22 == (-1L));
        org.junit.Assert.assertNotNull(duration26);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + (-1L) + "'", long27 == (-1L));
        org.junit.Assert.assertNotNull(period28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(periodType33);
        org.junit.Assert.assertNotNull(periodType34);
        org.junit.Assert.assertNotNull(periodType37);
        org.junit.Assert.assertNotNull(period38);
        org.junit.Assert.assertNotNull(periodType41);
        org.junit.Assert.assertNotNull(periodType42);
        org.junit.Assert.assertTrue("'" + long46 + "' != '" + (-6060L) + "'", long46 == (-6060L));
        org.junit.Assert.assertNull(periodPrinter51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(periodType53);
        org.junit.Assert.assertNotNull(periodType54);
        org.junit.Assert.assertNotNull(periodType55);
        org.junit.Assert.assertNotNull(periodFormatter56);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 7 + "'", int58 == 7);
        org.junit.Assert.assertNotNull(period60);
        org.junit.Assert.assertNotNull(duration61);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "PT-6060S" + "'", str62, "PT-6060S");
        org.junit.Assert.assertNotNull(duration71);
        org.junit.Assert.assertTrue("'" + long72 + "' != '" + (-1L) + "'", long72 == (-1L));
        org.junit.Assert.assertNotNull(periodType80);
        org.junit.Assert.assertNotNull(durationFieldType82);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(durationFieldType84);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + (-1) + "'", int85 == (-1));
        org.junit.Assert.assertNotNull(durationFieldType87);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertNotNull(durationField91);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
    }

    @Test
    public void test17666() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17666");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.Duration duration2 = org.joda.time.Duration.standardMinutes((-1L));
        long long3 = duration2.getStandardMinutes();
        org.joda.time.Duration duration5 = org.joda.time.Duration.standardMinutes((-1L));
        long long6 = duration5.getStandardMinutes();
        boolean boolean7 = duration2.isLongerThan((org.joda.time.ReadableDuration) duration5);
        org.joda.time.Duration duration9 = duration5.withMillis(1L);
        org.joda.time.Period period10 = new org.joda.time.Period(readableInstant0, (org.joda.time.ReadableDuration) duration5);
        org.joda.time.DurationFieldType durationFieldType11 = org.joda.time.DurationFieldType.years();
        java.lang.String str12 = durationFieldType11.getName();
        org.joda.time.Chronology chronology13 = null;
        boolean boolean14 = durationFieldType11.isSupported(chronology13);
        org.joda.time.Period period16 = period10.withFieldAdded(durationFieldType11, 0);
        org.joda.time.Period period18 = period10.plusHours((int) (short) 0);
        org.joda.time.Period period20 = period18.withMinutes(2);
        org.joda.time.Duration duration22 = org.joda.time.Duration.standardMinutes((-1L));
        long long23 = duration22.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant24 = null;
        org.joda.time.Period period25 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration22, readableInstant24);
        org.joda.time.PeriodType periodType26 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology27 = null;
        org.joda.time.Period period28 = duration22.toPeriod(periodType26, chronology27);
        org.joda.time.ReadableInstant readableInstant29 = null;
        org.joda.time.Period period30 = duration22.toPeriodTo(readableInstant29);
        org.joda.time.Chronology chronology31 = null;
        org.joda.time.Period period32 = duration22.toPeriod(chronology31);
        org.joda.time.Duration duration33 = duration22.toDuration();
        org.joda.time.Duration duration35 = org.joda.time.Duration.standardMinutes((-1L));
        long long36 = duration35.getStandardMinutes();
        org.joda.time.Period period37 = duration35.toPeriod();
        org.joda.time.Duration duration39 = org.joda.time.Duration.standardMinutes((-1L));
        long long40 = duration39.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant41 = null;
        org.joda.time.Period period42 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration39, readableInstant41);
        org.joda.time.PeriodType periodType43 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology44 = null;
        org.joda.time.Period period45 = duration39.toPeriod(periodType43, chronology44);
        org.joda.time.Period period46 = duration35.toPeriod(periodType43);
        org.joda.time.Duration duration48 = org.joda.time.Duration.standardMinutes((-1L));
        long long49 = duration48.getStandardMinutes();
        boolean boolean50 = duration35.isLongerThan((org.joda.time.ReadableDuration) duration48);
        org.joda.time.Duration duration52 = org.joda.time.Duration.standardMinutes((-1L));
        long long53 = duration52.getStandardMinutes();
        org.joda.time.Duration duration55 = org.joda.time.Duration.standardMinutes((-1L));
        long long56 = duration55.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant57 = null;
        org.joda.time.Period period58 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration55, readableInstant57);
        org.joda.time.PeriodType periodType59 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology60 = null;
        org.joda.time.Period period61 = duration55.toPeriod(periodType59, chronology60);
        org.joda.time.Duration duration62 = duration55.toDuration();
        org.joda.time.Duration duration64 = duration52.withDurationAdded((org.joda.time.ReadableDuration) duration62, 100);
        int int65 = duration48.compareTo((org.joda.time.ReadableDuration) duration64);
        org.joda.time.Duration duration66 = duration48.toDuration();
        int int67 = duration22.compareTo((org.joda.time.ReadableDuration) duration66);
        long long68 = duration22.getMillis();
        org.joda.time.Chronology chronology69 = null;
        org.joda.time.Period period70 = duration22.toPeriod(chronology69);
        org.joda.time.Period period71 = period20.withFields((org.joda.time.ReadablePeriod) period70);
        org.joda.time.Period period73 = period70.minusWeeks((int) (short) 0);
        org.joda.time.Chronology chronology74 = null;
        org.joda.time.Period period75 = new org.joda.time.Period((java.lang.Object) period70, chronology74);
        org.joda.time.PeriodType periodType79 = org.joda.time.PeriodType.seconds();
        org.joda.time.PeriodType periodType80 = periodType79.withMinutesRemoved();
        org.joda.time.Chronology chronology81 = null;
        org.joda.time.MutablePeriod mutablePeriod82 = new org.joda.time.MutablePeriod((long) 0, (long) (short) 100, periodType79, chronology81);
        int int83 = periodType79.size();
        int int84 = periodType79.size();
        org.joda.time.PeriodType periodType85 = periodType79.withMonthsRemoved();
        org.joda.time.MutablePeriod mutablePeriod86 = new org.joda.time.MutablePeriod((long) (byte) -1, periodType79);
        int int87 = mutablePeriod86.getMinutes();
        org.joda.time.Chronology chronology90 = null;
        mutablePeriod86.setPeriod((long) (byte) 100, (long) '4', chronology90);
        org.joda.time.Period period92 = period75.plus((org.joda.time.ReadablePeriod) mutablePeriod86);
        java.lang.String str93 = period92.toString();
        org.junit.Assert.assertNotNull(duration2);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + (-1L) + "'", long3 == (-1L));
        org.junit.Assert.assertNotNull(duration5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertNotNull(durationFieldType11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "years" + "'", str12, "years");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertNotNull(period18);
        org.junit.Assert.assertNotNull(period20);
        org.junit.Assert.assertNotNull(duration22);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + (-1L) + "'", long23 == (-1L));
        org.junit.Assert.assertNotNull(periodType26);
        org.junit.Assert.assertNotNull(period28);
        org.junit.Assert.assertNotNull(period30);
        org.junit.Assert.assertNotNull(period32);
        org.junit.Assert.assertNotNull(duration33);
        org.junit.Assert.assertNotNull(duration35);
        org.junit.Assert.assertTrue("'" + long36 + "' != '" + (-1L) + "'", long36 == (-1L));
        org.junit.Assert.assertNotNull(period37);
        org.junit.Assert.assertNotNull(duration39);
        org.junit.Assert.assertTrue("'" + long40 + "' != '" + (-1L) + "'", long40 == (-1L));
        org.junit.Assert.assertNotNull(periodType43);
        org.junit.Assert.assertNotNull(period45);
        org.junit.Assert.assertNotNull(period46);
        org.junit.Assert.assertNotNull(duration48);
        org.junit.Assert.assertTrue("'" + long49 + "' != '" + (-1L) + "'", long49 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(duration52);
        org.junit.Assert.assertTrue("'" + long53 + "' != '" + (-1L) + "'", long53 == (-1L));
        org.junit.Assert.assertNotNull(duration55);
        org.junit.Assert.assertTrue("'" + long56 + "' != '" + (-1L) + "'", long56 == (-1L));
        org.junit.Assert.assertNotNull(periodType59);
        org.junit.Assert.assertNotNull(period61);
        org.junit.Assert.assertNotNull(duration62);
        org.junit.Assert.assertNotNull(duration64);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 1 + "'", int65 == 1);
        org.junit.Assert.assertNotNull(duration66);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 0 + "'", int67 == 0);
        org.junit.Assert.assertTrue("'" + long68 + "' != '" + (-60000L) + "'", long68 == (-60000L));
        org.junit.Assert.assertNotNull(period70);
        org.junit.Assert.assertNotNull(period71);
        org.junit.Assert.assertNotNull(period73);
        org.junit.Assert.assertNotNull(periodType79);
        org.junit.Assert.assertNotNull(periodType80);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 1 + "'", int83 == 1);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 1 + "'", int84 == 1);
        org.junit.Assert.assertNotNull(periodType85);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 0 + "'", int87 == 0);
        org.junit.Assert.assertNotNull(period92);
        org.junit.Assert.assertEquals("'" + str93 + "' != '" + "PT-1M" + "'", str93, "PT-1M");
    }

    @Test
    public void test17667() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17667");
        org.joda.time.MutablePeriod mutablePeriod4 = new org.joda.time.MutablePeriod(8, 5, 3, (int) (byte) -1);
        int int5 = mutablePeriod4.getYears();
        org.joda.time.Duration duration7 = new org.joda.time.Duration(0L);
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.Interval interval9 = duration7.toIntervalFrom(readableInstant8);
        java.lang.String str10 = duration7.toString();
        org.joda.time.Seconds seconds11 = duration7.toStandardSeconds();
        mutablePeriod4.setPeriod((org.joda.time.ReadableDuration) duration7);
        mutablePeriod4.setMinutes((int) (short) 10);
        mutablePeriod4.addMillis(1);
        org.joda.time.Chronology chronology18 = null;
        org.joda.time.MutablePeriod mutablePeriod19 = new org.joda.time.MutablePeriod(1L, chronology18);
        org.joda.time.Chronology chronology21 = null;
        org.joda.time.MutablePeriod mutablePeriod22 = new org.joda.time.MutablePeriod(1L, chronology21);
        mutablePeriod19.add((org.joda.time.ReadablePeriod) mutablePeriod22);
        mutablePeriod19.addMonths((int) (short) -1);
        mutablePeriod19.setPeriod((int) (short) 1, (int) (byte) 10, (int) 'a', 8, (int) (byte) 10, 10, (int) (short) -1, (int) (byte) 0);
        org.joda.time.ReadableInstant readableInstant35 = null;
        org.joda.time.ReadableInstant readableInstant36 = null;
        org.joda.time.PeriodType periodType37 = org.joda.time.PeriodType.days();
        org.joda.time.Period period38 = new org.joda.time.Period(readableInstant35, readableInstant36, periodType37);
        org.joda.time.DurationFieldType durationFieldType39 = org.joda.time.DurationFieldType.days();
        int int40 = periodType37.indexOf(durationFieldType39);
        org.joda.time.Duration duration42 = org.joda.time.Duration.standardMinutes((-1L));
        long long43 = duration42.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant44 = null;
        org.joda.time.Period period45 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration42, readableInstant44);
        org.joda.time.PeriodType periodType46 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology47 = null;
        org.joda.time.Period period48 = duration42.toPeriod(periodType46, chronology47);
        org.joda.time.Duration duration51 = duration42.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.ReadableInstant readableInstant52 = null;
        org.joda.time.ReadableInstant readableInstant53 = null;
        org.joda.time.Duration duration55 = org.joda.time.Duration.standardMinutes((-1L));
        long long56 = duration55.getStandardMinutes();
        org.joda.time.Period period57 = duration55.toPeriod();
        org.joda.time.Duration duration59 = org.joda.time.Duration.standardMinutes((-1L));
        long long60 = duration59.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant61 = null;
        org.joda.time.Period period62 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration59, readableInstant61);
        org.joda.time.PeriodType periodType63 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology64 = null;
        org.joda.time.Period period65 = duration59.toPeriod(periodType63, chronology64);
        org.joda.time.Period period66 = duration55.toPeriod(periodType63);
        org.joda.time.MutablePeriod mutablePeriod67 = new org.joda.time.MutablePeriod(readableInstant52, readableInstant53, periodType63);
        org.joda.time.Chronology chronology68 = null;
        org.joda.time.Period period69 = duration42.toPeriod(periodType63, chronology68);
        org.joda.time.PeriodType periodType70 = org.joda.time.PeriodType.seconds();
        org.joda.time.PeriodType periodType71 = periodType70.withMinutesRemoved();
        org.joda.time.Chronology chronology72 = null;
        org.joda.time.MutablePeriod mutablePeriod73 = new org.joda.time.MutablePeriod((java.lang.Object) duration42, periodType71, chronology72);
        java.lang.String str74 = periodType71.getName();
        org.joda.time.MutablePeriod mutablePeriod79 = new org.joda.time.MutablePeriod(1, 0, (int) (byte) 1, 100);
        org.joda.time.DurationFieldType durationFieldType80 = org.joda.time.DurationFieldType.weeks();
        mutablePeriod79.set(durationFieldType80, (int) '#');
        boolean boolean83 = periodType71.isSupported(durationFieldType80);
        boolean boolean84 = periodType37.isSupported(durationFieldType80);
        mutablePeriod19.add(durationFieldType80, 10);
        java.lang.String str87 = durationFieldType80.getName();
        int int88 = mutablePeriod4.get(durationFieldType80);
        java.lang.String str89 = durationFieldType80.toString();
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(interval9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "PT0S" + "'", str10, "PT0S");
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertNotNull(periodType37);
        org.junit.Assert.assertNotNull(durationFieldType39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertNotNull(duration42);
        org.junit.Assert.assertTrue("'" + long43 + "' != '" + (-1L) + "'", long43 == (-1L));
        org.junit.Assert.assertNotNull(periodType46);
        org.junit.Assert.assertNotNull(period48);
        org.junit.Assert.assertNotNull(duration51);
        org.junit.Assert.assertNotNull(duration55);
        org.junit.Assert.assertTrue("'" + long56 + "' != '" + (-1L) + "'", long56 == (-1L));
        org.junit.Assert.assertNotNull(period57);
        org.junit.Assert.assertNotNull(duration59);
        org.junit.Assert.assertTrue("'" + long60 + "' != '" + (-1L) + "'", long60 == (-1L));
        org.junit.Assert.assertNotNull(periodType63);
        org.junit.Assert.assertNotNull(period65);
        org.junit.Assert.assertNotNull(period66);
        org.junit.Assert.assertNotNull(period69);
        org.junit.Assert.assertNotNull(periodType70);
        org.junit.Assert.assertNotNull(periodType71);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "Seconds" + "'", str74, "Seconds");
        org.junit.Assert.assertNotNull(durationFieldType80);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "weeks" + "'", str87, "weeks");
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + 0 + "'", int88 == 0);
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "weeks" + "'", str89, "weeks");
    }

    @Test
    public void test17668() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17668");
        org.joda.time.Chronology chronology1 = null;
        org.joda.time.MutablePeriod mutablePeriod2 = new org.joda.time.MutablePeriod((long) 3, chronology1);
        mutablePeriod2.setPeriod(10L);
        org.joda.time.ReadableInstant readableInstant5 = null;
        org.joda.time.Duration duration7 = org.joda.time.Duration.standardMinutes((-1L));
        long long8 = duration7.getStandardMinutes();
        org.joda.time.Duration duration10 = org.joda.time.Duration.standardMinutes((-1L));
        long long11 = duration10.getStandardMinutes();
        boolean boolean12 = duration7.isLongerThan((org.joda.time.ReadableDuration) duration10);
        org.joda.time.Duration duration14 = duration10.withMillis(1L);
        org.joda.time.Duration duration16 = org.joda.time.Duration.standardMinutes((-1L));
        long long17 = duration16.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant18 = null;
        org.joda.time.Period period19 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration16, readableInstant18);
        org.joda.time.PeriodType periodType20 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology21 = null;
        org.joda.time.Period period22 = duration16.toPeriod(periodType20, chronology21);
        org.joda.time.Duration duration23 = duration16.toDuration();
        int int24 = duration10.compareTo((org.joda.time.ReadableDuration) duration16);
        org.joda.time.Duration duration27 = duration10.withDurationAdded(10L, (int) '#');
        org.joda.time.Duration duration33 = org.joda.time.Duration.standardMinutes((-1L));
        long long34 = duration33.getStandardMinutes();
        org.joda.time.Period period35 = duration33.toPeriod();
        org.joda.time.Duration duration37 = org.joda.time.Duration.standardMinutes((-1L));
        long long38 = duration37.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant39 = null;
        org.joda.time.Period period40 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration37, readableInstant39);
        org.joda.time.PeriodType periodType41 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology42 = null;
        org.joda.time.Period period43 = duration37.toPeriod(periodType41, chronology42);
        org.joda.time.Period period44 = duration33.toPeriod(periodType41);
        org.joda.time.Chronology chronology45 = null;
        org.joda.time.MutablePeriod mutablePeriod46 = new org.joda.time.MutablePeriod(1L, (long) (byte) 100, periodType41, chronology45);
        org.joda.time.PeriodType periodType47 = periodType41.withMillisRemoved();
        org.joda.time.Period period48 = new org.joda.time.Period((long) '#', (long) 'a', periodType47);
        org.joda.time.PeriodType periodType49 = period48.getPeriodType();
        int int50 = periodType49.size();
        org.joda.time.PeriodType periodType51 = periodType49.withMillisRemoved();
        org.joda.time.MutablePeriod mutablePeriod52 = new org.joda.time.MutablePeriod(readableInstant5, (org.joda.time.ReadableDuration) duration27, periodType51);
        org.joda.time.Period period54 = org.joda.time.Period.seconds((int) '#');
        int int55 = period54.getMillis();
        org.joda.time.Period period57 = period54.withMillis((int) '#');
        org.joda.time.DurationFieldType durationFieldType58 = org.joda.time.DurationFieldType.halfdays();
        boolean boolean59 = period54.isSupported(durationFieldType58);
        org.joda.time.Chronology chronology61 = null;
        org.joda.time.MutablePeriod mutablePeriod62 = new org.joda.time.MutablePeriod(1L, chronology61);
        org.joda.time.Period period64 = org.joda.time.Period.seconds((int) '#');
        mutablePeriod62.setPeriod((org.joda.time.ReadablePeriod) period64);
        org.joda.time.DurationFieldType durationFieldType66 = org.joda.time.DurationFieldType.years();
        java.lang.String str67 = durationFieldType66.getName();
        boolean boolean68 = mutablePeriod62.isSupported(durationFieldType66);
        int int69 = period54.get(durationFieldType66);
        org.joda.time.Duration duration71 = org.joda.time.Duration.standardMinutes((-1L));
        long long72 = duration71.getStandardMinutes();
        org.joda.time.Period period73 = duration71.toPeriod();
        org.joda.time.Duration duration75 = org.joda.time.Duration.standardMinutes((-1L));
        long long76 = duration75.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant77 = null;
        org.joda.time.Period period78 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration75, readableInstant77);
        org.joda.time.PeriodType periodType79 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology80 = null;
        org.joda.time.Period period81 = duration75.toPeriod(periodType79, chronology80);
        org.joda.time.Period period82 = duration71.toPeriod(periodType79);
        org.joda.time.PeriodType periodType84 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period85 = new org.joda.time.Period(10L, periodType84);
        org.joda.time.PeriodType periodType86 = periodType84.withWeeksRemoved();
        org.joda.time.Period period87 = period82.withPeriodType(periodType86);
        org.joda.time.Period period88 = period54.normalizedStandard(periodType86);
        org.joda.time.DurationFieldType durationFieldType90 = periodType86.getFieldType(0);
        int int91 = mutablePeriod52.get(durationFieldType90);
        boolean boolean92 = mutablePeriod2.isSupported(durationFieldType90);
        mutablePeriod2.setPeriod((long) 1);
        org.junit.Assert.assertNotNull(duration7);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + (-1L) + "'", long8 == (-1L));
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + (-1L) + "'", long11 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertNotNull(duration16);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + (-1L) + "'", long17 == (-1L));
        org.junit.Assert.assertNotNull(periodType20);
        org.junit.Assert.assertNotNull(period22);
        org.junit.Assert.assertNotNull(duration23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNotNull(duration27);
        org.junit.Assert.assertNotNull(duration33);
        org.junit.Assert.assertTrue("'" + long34 + "' != '" + (-1L) + "'", long34 == (-1L));
        org.junit.Assert.assertNotNull(period35);
        org.junit.Assert.assertNotNull(duration37);
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + (-1L) + "'", long38 == (-1L));
        org.junit.Assert.assertNotNull(periodType41);
        org.junit.Assert.assertNotNull(period43);
        org.junit.Assert.assertNotNull(period44);
        org.junit.Assert.assertNotNull(periodType47);
        org.junit.Assert.assertNotNull(periodType49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 1 + "'", int50 == 1);
        org.junit.Assert.assertNotNull(periodType51);
        org.junit.Assert.assertNotNull(period54);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertNotNull(period57);
        org.junit.Assert.assertNotNull(durationFieldType58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(period64);
        org.junit.Assert.assertNotNull(durationFieldType66);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "years" + "'", str67, "years");
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 0 + "'", int69 == 0);
        org.junit.Assert.assertNotNull(duration71);
        org.junit.Assert.assertTrue("'" + long72 + "' != '" + (-1L) + "'", long72 == (-1L));
        org.junit.Assert.assertNotNull(period73);
        org.junit.Assert.assertNotNull(duration75);
        org.junit.Assert.assertTrue("'" + long76 + "' != '" + (-1L) + "'", long76 == (-1L));
        org.junit.Assert.assertNotNull(periodType79);
        org.junit.Assert.assertNotNull(period81);
        org.junit.Assert.assertNotNull(period82);
        org.junit.Assert.assertNotNull(periodType84);
        org.junit.Assert.assertNotNull(periodType86);
        org.junit.Assert.assertNotNull(period87);
        org.junit.Assert.assertNotNull(period88);
        org.junit.Assert.assertNotNull(durationFieldType90);
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + 0 + "'", int91 == 0);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
    }

    @Test
    public void test17669() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17669");
        org.joda.time.MutablePeriod mutablePeriod10 = new org.joda.time.MutablePeriod(1, 0, (int) (byte) 1, 100);
        mutablePeriod10.setSeconds(0);
        mutablePeriod10.setWeeks((int) (byte) -1);
        int int15 = mutablePeriod10.size();
        org.joda.time.Period period17 = org.joda.time.Period.years((int) (short) 1);
        org.joda.time.Period period19 = period17.minusMinutes((int) (short) 10);
        org.joda.time.Period period21 = period19.withWeeks((int) (byte) -1);
        org.joda.time.Period period23 = period21.minusMinutes((int) (short) -1);
        mutablePeriod10.setPeriod((org.joda.time.ReadablePeriod) period21);
        org.joda.time.ReadableInstant readableInstant25 = null;
        org.joda.time.Duration duration26 = period21.toDurationTo(readableInstant25);
        org.joda.time.PeriodType periodType27 = period21.getPeriodType();
        org.joda.time.Period period28 = new org.joda.time.Period((long) 34, (long) '#', periodType27);
        org.joda.time.PeriodType periodType29 = periodType27.withMonthsRemoved();
        org.joda.time.Chronology chronology30 = null;
        org.joda.time.Period period31 = new org.joda.time.Period((long) 3, (long) (byte) 1, periodType27, chronology30);
        org.joda.time.PeriodType periodType32 = periodType27.withMinutesRemoved();
        org.joda.time.Period period33 = new org.joda.time.Period((-58180L), (long) (-5), periodType27);
        org.joda.time.PeriodType periodType34 = periodType27.withMillisRemoved();
        org.joda.time.PeriodType periodType35 = periodType34.withMonthsRemoved();
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 8 + "'", int15 == 8);
        org.junit.Assert.assertNotNull(period17);
        org.junit.Assert.assertNotNull(period19);
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertNotNull(period23);
        org.junit.Assert.assertNotNull(duration26);
        org.junit.Assert.assertNotNull(periodType27);
        org.junit.Assert.assertNotNull(periodType29);
        org.junit.Assert.assertNotNull(periodType32);
        org.junit.Assert.assertNotNull(periodType34);
        org.junit.Assert.assertNotNull(periodType35);
    }

    @Test
    public void test17670() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17670");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((long) ' ');
        org.joda.time.ReadableInstant readableInstant2 = null;
        org.joda.time.Duration duration4 = org.joda.time.Duration.standardHours((long) 10);
        org.joda.time.Period period5 = new org.joda.time.Period(readableInstant2, (org.joda.time.ReadableDuration) duration4);
        org.joda.time.ReadableInstant readableInstant6 = null;
        org.joda.time.Duration duration8 = org.joda.time.Duration.standardMinutes((-1L));
        long long9 = duration8.getStandardMinutes();
        org.joda.time.Duration duration11 = org.joda.time.Duration.standardMinutes((-1L));
        long long12 = duration11.getStandardMinutes();
        boolean boolean13 = duration8.isLongerThan((org.joda.time.ReadableDuration) duration11);
        org.joda.time.Duration duration15 = duration11.withMillis(1L);
        org.joda.time.Period period16 = new org.joda.time.Period(readableInstant6, (org.joda.time.ReadableDuration) duration11);
        org.joda.time.Days days17 = period16.toStandardDays();
        org.joda.time.Period period19 = period16.multipliedBy((int) (short) -1);
        org.joda.time.Period period21 = period16.plusMonths((int) (byte) 0);
        org.joda.time.Chronology chronology23 = null;
        org.joda.time.MutablePeriod mutablePeriod24 = new org.joda.time.MutablePeriod(1L, chronology23);
        org.joda.time.Chronology chronology26 = null;
        org.joda.time.MutablePeriod mutablePeriod27 = new org.joda.time.MutablePeriod(1L, chronology26);
        mutablePeriod24.add((org.joda.time.ReadablePeriod) mutablePeriod27);
        org.joda.time.PeriodType periodType29 = mutablePeriod27.getPeriodType();
        org.joda.time.MutablePeriod mutablePeriod30 = new org.joda.time.MutablePeriod((java.lang.Object) period21, periodType29);
        org.joda.time.PeriodType periodType31 = periodType29.withHoursRemoved();
        org.joda.time.Chronology chronology32 = null;
        org.joda.time.Period period33 = duration4.toPeriod(periodType31, chronology32);
        org.joda.time.MutablePeriod mutablePeriod35 = new org.joda.time.MutablePeriod((long) (short) 100);
        org.joda.time.Duration duration37 = org.joda.time.Duration.standardMinutes((-1L));
        long long38 = duration37.getStandardMinutes();
        org.joda.time.Duration duration40 = org.joda.time.Duration.standardMinutes((-1L));
        long long41 = duration40.getStandardMinutes();
        boolean boolean42 = duration37.isLongerThan((org.joda.time.ReadableDuration) duration40);
        org.joda.time.Duration duration44 = duration40.withMillis((long) 1);
        org.joda.time.Chronology chronology46 = null;
        org.joda.time.MutablePeriod mutablePeriod47 = new org.joda.time.MutablePeriod(1L, chronology46);
        org.joda.time.Chronology chronology49 = null;
        org.joda.time.MutablePeriod mutablePeriod50 = new org.joda.time.MutablePeriod(1L, chronology49);
        mutablePeriod47.add((org.joda.time.ReadablePeriod) mutablePeriod50);
        boolean boolean52 = duration44.equals((java.lang.Object) mutablePeriod50);
        org.joda.time.Duration duration54 = duration44.minus(0L);
        org.joda.time.Chronology chronology55 = null;
        mutablePeriod35.setPeriod((org.joda.time.ReadableDuration) duration44, chronology55);
        org.joda.time.Duration duration58 = org.joda.time.Duration.standardMinutes((-1L));
        long long59 = duration58.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant60 = null;
        org.joda.time.Period period61 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration58, readableInstant60);
        org.joda.time.Duration duration63 = org.joda.time.Duration.standardMinutes((-1L));
        long long64 = duration63.getStandardMinutes();
        org.joda.time.Period period65 = duration63.toPeriod();
        boolean boolean66 = duration58.isLongerThan((org.joda.time.ReadableDuration) duration63);
        org.joda.time.ReadableInstant readableInstant67 = null;
        org.joda.time.PeriodType periodType70 = org.joda.time.PeriodType.seconds();
        org.joda.time.PeriodType periodType71 = periodType70.withMinutesRemoved();
        org.joda.time.Chronology chronology72 = null;
        org.joda.time.MutablePeriod mutablePeriod73 = new org.joda.time.MutablePeriod((long) 0, (long) (short) 100, periodType70, chronology72);
        org.joda.time.PeriodType periodType74 = periodType70.withMillisRemoved();
        org.joda.time.Period period75 = duration58.toPeriodTo(readableInstant67, periodType74);
        org.joda.time.Duration duration76 = duration44.minus((org.joda.time.ReadableDuration) duration58);
        org.joda.time.Duration duration77 = duration4.minus((org.joda.time.ReadableDuration) duration58);
        org.joda.time.Period period78 = new org.joda.time.Period((java.lang.Object) duration4);
        org.joda.time.Duration duration79 = duration1.plus((org.joda.time.ReadableDuration) duration4);
        org.joda.time.ReadableInstant readableInstant80 = null;
        org.joda.time.Period period81 = duration1.toPeriodTo(readableInstant80);
        org.joda.time.Period period82 = period81.toPeriod();
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertNotNull(duration8);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + (-1L) + "'", long9 == (-1L));
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + (-1L) + "'", long12 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(duration15);
        org.junit.Assert.assertNotNull(days17);
        org.junit.Assert.assertNotNull(period19);
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertNotNull(periodType29);
        org.junit.Assert.assertNotNull(periodType31);
        org.junit.Assert.assertNotNull(period33);
        org.junit.Assert.assertNotNull(duration37);
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + (-1L) + "'", long38 == (-1L));
        org.junit.Assert.assertNotNull(duration40);
        org.junit.Assert.assertTrue("'" + long41 + "' != '" + (-1L) + "'", long41 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(duration44);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(duration54);
        org.junit.Assert.assertNotNull(duration58);
        org.junit.Assert.assertTrue("'" + long59 + "' != '" + (-1L) + "'", long59 == (-1L));
        org.junit.Assert.assertNotNull(duration63);
        org.junit.Assert.assertTrue("'" + long64 + "' != '" + (-1L) + "'", long64 == (-1L));
        org.junit.Assert.assertNotNull(period65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(periodType70);
        org.junit.Assert.assertNotNull(periodType71);
        org.junit.Assert.assertNotNull(periodType74);
        org.junit.Assert.assertNotNull(period75);
        org.junit.Assert.assertNotNull(duration76);
        org.junit.Assert.assertNotNull(duration77);
        org.junit.Assert.assertNotNull(duration79);
        org.junit.Assert.assertNotNull(period81);
        org.junit.Assert.assertNotNull(period82);
    }

    @Test
    public void test17671() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17671");
        org.joda.time.PeriodType periodType3 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period4 = new org.joda.time.Period(10L, periodType3);
        org.joda.time.PeriodType periodType5 = periodType3.withWeeksRemoved();
        org.joda.time.MutablePeriod mutablePeriod6 = new org.joda.time.MutablePeriod((long) (byte) 0, periodType3);
        org.joda.time.PeriodType periodType7 = periodType3.withWeeksRemoved();
        org.joda.time.PeriodType periodType8 = periodType3.withWeeksRemoved();
        org.joda.time.Period period9 = new org.joda.time.Period((-120L), periodType8);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType11 = periodType8.getFieldType((int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: -1");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(periodType3);
        org.junit.Assert.assertNotNull(periodType5);
        org.junit.Assert.assertNotNull(periodType7);
        org.junit.Assert.assertNotNull(periodType8);
    }

    @Test
    public void test17672() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17672");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.Period period3 = new org.joda.time.Period((long) 2, (-59909L), chronology2);
        org.joda.time.Period period4 = period3.toPeriod();
        org.joda.time.Period period6 = period4.withHours((-5));
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(period6);
    }

    @Test
    public void test17673() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17673");
        org.joda.time.MutablePeriod mutablePeriod8 = new org.joda.time.MutablePeriod((int) ' ', (int) (byte) 100, 0, 10, (int) (short) 1, (int) (short) 0, (int) (byte) 100, (int) (short) 1);
        mutablePeriod8.setDays(10);
        org.joda.time.Period period11 = mutablePeriod8.toPeriod();
        org.joda.time.Period period13 = org.joda.time.Period.seconds((int) '#');
        org.joda.time.Period period14 = period13.toPeriod();
        org.joda.time.Period period16 = period14.minusWeeks(10);
        org.joda.time.Period period18 = period14.minusSeconds((int) (byte) 1);
        org.joda.time.Period period19 = period11.minus((org.joda.time.ReadablePeriod) period18);
        org.joda.time.Period period20 = period11.normalizedStandard();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Hours hours21 = period11.toStandardHours();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Cannot convert to Hours as this period contains months and months vary in length");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(period13);
        org.junit.Assert.assertNotNull(period14);
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertNotNull(period18);
        org.junit.Assert.assertNotNull(period19);
        org.junit.Assert.assertNotNull(period20);
    }

    @Test
    public void test17674() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17674");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.Duration duration2 = org.joda.time.Duration.standardMinutes((-1L));
        long long3 = duration2.getStandardMinutes();
        org.joda.time.Period period4 = duration2.toPeriod();
        org.joda.time.Duration duration6 = org.joda.time.Duration.standardMinutes((-1L));
        long long7 = duration6.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.Period period9 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration6, readableInstant8);
        org.joda.time.PeriodType periodType10 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology11 = null;
        org.joda.time.Period period12 = duration6.toPeriod(periodType10, chronology11);
        org.joda.time.Period period13 = duration2.toPeriod(periodType10);
        org.joda.time.Duration duration15 = org.joda.time.Duration.standardMinutes((-1L));
        long long16 = duration15.getStandardMinutes();
        boolean boolean17 = duration2.isLongerThan((org.joda.time.ReadableDuration) duration15);
        org.joda.time.PeriodType periodType18 = org.joda.time.PeriodType.weeks();
        org.joda.time.Period period19 = new org.joda.time.Period(readableInstant0, (org.joda.time.ReadableDuration) duration15, periodType18);
        org.joda.time.Chronology chronology20 = null;
        org.joda.time.Period period21 = duration15.toPeriod(chronology20);
        org.joda.time.Period period23 = org.joda.time.Period.hours((int) 'a');
        org.joda.time.DurationFieldType durationFieldType25 = period23.getFieldType((int) (short) 1);
        boolean boolean26 = duration15.equals((java.lang.Object) (short) 1);
        org.joda.time.ReadableInstant readableInstant27 = null;
        org.joda.time.Duration duration31 = org.joda.time.Duration.standardMinutes((-1L));
        long long32 = duration31.getStandardMinutes();
        org.joda.time.Period period33 = duration31.toPeriod();
        org.joda.time.Duration duration35 = org.joda.time.Duration.standardMinutes((-1L));
        long long36 = duration35.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant37 = null;
        org.joda.time.Period period38 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration35, readableInstant37);
        org.joda.time.PeriodType periodType39 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology40 = null;
        org.joda.time.Period period41 = duration35.toPeriod(periodType39, chronology40);
        org.joda.time.Period period42 = duration31.toPeriod(periodType39);
        org.joda.time.Chronology chronology43 = null;
        org.joda.time.MutablePeriod mutablePeriod44 = new org.joda.time.MutablePeriod(1L, (long) (byte) 100, periodType39, chronology43);
        org.joda.time.PeriodType periodType45 = periodType39.withMillisRemoved();
        org.joda.time.PeriodType periodType46 = periodType45.withSecondsRemoved();
        org.joda.time.PeriodType periodType47 = periodType46.withHoursRemoved();
        org.joda.time.MutablePeriod mutablePeriod48 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration15, readableInstant27, periodType47);
        org.joda.time.ReadableInstant readableInstant49 = null;
        org.joda.time.Period period50 = duration15.toPeriodFrom(readableInstant49);
        org.joda.time.Duration duration52 = duration15.minus(30930600000L);
        org.joda.time.Minutes minutes53 = duration15.toStandardMinutes();
        org.junit.Assert.assertNotNull(duration2);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + (-1L) + "'", long3 == (-1L));
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(duration6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(periodType10);
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertNotNull(period13);
        org.junit.Assert.assertNotNull(duration15);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + (-1L) + "'", long16 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(periodType18);
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertNotNull(period23);
        org.junit.Assert.assertNotNull(durationFieldType25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(duration31);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + (-1L) + "'", long32 == (-1L));
        org.junit.Assert.assertNotNull(period33);
        org.junit.Assert.assertNotNull(duration35);
        org.junit.Assert.assertTrue("'" + long36 + "' != '" + (-1L) + "'", long36 == (-1L));
        org.junit.Assert.assertNotNull(periodType39);
        org.junit.Assert.assertNotNull(period41);
        org.junit.Assert.assertNotNull(period42);
        org.junit.Assert.assertNotNull(periodType45);
        org.junit.Assert.assertNotNull(periodType46);
        org.junit.Assert.assertNotNull(periodType47);
        org.junit.Assert.assertNotNull(period50);
        org.junit.Assert.assertNotNull(duration52);
        org.junit.Assert.assertNotNull(minutes53);
    }

    @Test
    public void test17675() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17675");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardHours((long) 10);
        org.joda.time.Duration duration3 = org.joda.time.Duration.standardMinutes((-1L));
        long long4 = duration3.getStandardMinutes();
        org.joda.time.Duration duration6 = org.joda.time.Duration.standardMinutes((-1L));
        long long7 = duration6.getStandardMinutes();
        boolean boolean8 = duration3.isLongerThan((org.joda.time.ReadableDuration) duration6);
        org.joda.time.Period period9 = duration6.toPeriod();
        org.joda.time.Minutes minutes10 = duration6.toStandardMinutes();
        boolean boolean11 = duration1.isEqual((org.joda.time.ReadableDuration) duration6);
        org.joda.time.Duration duration13 = org.joda.time.Duration.standardMinutes((-1L));
        long long14 = duration13.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant15 = null;
        org.joda.time.Period period16 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration13, readableInstant15);
        org.joda.time.PeriodType periodType17 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology18 = null;
        org.joda.time.Period period19 = duration13.toPeriod(periodType17, chronology18);
        org.joda.time.Duration duration22 = duration13.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration24 = org.joda.time.Duration.standardMinutes((-1L));
        long long25 = duration24.getStandardMinutes();
        org.joda.time.Duration duration27 = org.joda.time.Duration.standardMinutes((-1L));
        long long28 = duration27.getStandardMinutes();
        boolean boolean29 = duration24.isLongerThan((org.joda.time.ReadableDuration) duration27);
        org.joda.time.Duration duration31 = duration27.withMillis((long) 1);
        boolean boolean32 = duration22.isShorterThan((org.joda.time.ReadableDuration) duration27);
        boolean boolean33 = duration6.isEqual((org.joda.time.ReadableDuration) duration27);
        org.joda.time.ReadableInstant readableInstant34 = null;
        org.joda.time.MutablePeriod mutablePeriod35 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration6, readableInstant34);
        int int36 = mutablePeriod35.size();
        org.joda.time.ReadableInterval readableInterval37 = null;
        mutablePeriod35.add(readableInterval37);
        org.joda.time.ReadableInstant readableInstant39 = null;
        org.joda.time.Duration duration40 = mutablePeriod35.toDurationFrom(readableInstant39);
        org.joda.time.Duration duration42 = duration40.plus((long) '#');
        org.joda.time.ReadableInstant readableInstant43 = null;
        org.joda.time.Duration duration45 = org.joda.time.Duration.standardMinutes((-1L));
        long long46 = duration45.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant47 = null;
        org.joda.time.Period period48 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration45, readableInstant47);
        org.joda.time.PeriodType periodType49 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology50 = null;
        org.joda.time.Period period51 = duration45.toPeriod(periodType49, chronology50);
        org.joda.time.Duration duration54 = duration45.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration56 = org.joda.time.Duration.standardHours((long) 10);
        org.joda.time.Duration duration58 = org.joda.time.Duration.standardMinutes((-1L));
        long long59 = duration58.getStandardMinutes();
        org.joda.time.Duration duration61 = org.joda.time.Duration.standardMinutes((-1L));
        long long62 = duration61.getStandardMinutes();
        boolean boolean63 = duration58.isLongerThan((org.joda.time.ReadableDuration) duration61);
        org.joda.time.Period period64 = duration61.toPeriod();
        org.joda.time.Minutes minutes65 = duration61.toStandardMinutes();
        boolean boolean66 = duration56.isEqual((org.joda.time.ReadableDuration) duration61);
        boolean boolean67 = duration45.isShorterThan((org.joda.time.ReadableDuration) duration56);
        org.joda.time.Minutes minutes68 = duration45.toStandardMinutes();
        org.joda.time.MutablePeriod mutablePeriod69 = new org.joda.time.MutablePeriod(readableInstant43, (org.joda.time.ReadableDuration) duration45);
        boolean boolean70 = duration40.equals((java.lang.Object) readableInstant43);
        org.joda.time.Duration duration73 = duration40.withDurationAdded((-60L), (int) (short) 100);
        org.joda.time.ReadableInstant readableInstant74 = null;
        org.joda.time.PeriodType periodType77 = org.joda.time.PeriodType.seconds();
        org.joda.time.PeriodType periodType78 = periodType77.withMinutesRemoved();
        org.joda.time.Chronology chronology79 = null;
        org.joda.time.MutablePeriod mutablePeriod80 = new org.joda.time.MutablePeriod((long) 0, (long) (short) 100, periodType77, chronology79);
        org.joda.time.Duration duration82 = org.joda.time.Duration.standardMinutes((-1L));
        long long83 = duration82.getStandardMinutes();
        org.joda.time.Duration duration85 = org.joda.time.Duration.standardMinutes((-1L));
        long long86 = duration85.getStandardMinutes();
        boolean boolean87 = duration82.isLongerThan((org.joda.time.ReadableDuration) duration85);
        org.joda.time.Period period88 = duration85.toPeriod();
        org.joda.time.Minutes minutes89 = duration85.toStandardMinutes();
        mutablePeriod80.add((org.joda.time.ReadableDuration) duration85);
        org.joda.time.Duration duration92 = duration85.withMillis((long) (short) 10);
        org.joda.time.Duration duration93 = duration92.toDuration();
        org.joda.time.ReadableInstant readableInstant94 = null;
        org.joda.time.PeriodType periodType96 = org.joda.time.PeriodType.time();
        org.joda.time.MutablePeriod mutablePeriod97 = new org.joda.time.MutablePeriod((long) 'a', periodType96);
        org.joda.time.Period period98 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration93, readableInstant94, periodType96);
        org.joda.time.Period period99 = duration40.toPeriodFrom(readableInstant74, periodType96);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + (-1L) + "'", long4 == (-1L));
        org.junit.Assert.assertNotNull(duration6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + (-1L) + "'", long14 == (-1L));
        org.junit.Assert.assertNotNull(periodType17);
        org.junit.Assert.assertNotNull(period19);
        org.junit.Assert.assertNotNull(duration22);
        org.junit.Assert.assertNotNull(duration24);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + (-1L) + "'", long25 == (-1L));
        org.junit.Assert.assertNotNull(duration27);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + (-1L) + "'", long28 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(duration31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 8 + "'", int36 == 8);
        org.junit.Assert.assertNotNull(duration40);
        org.junit.Assert.assertNotNull(duration42);
        org.junit.Assert.assertNotNull(duration45);
        org.junit.Assert.assertTrue("'" + long46 + "' != '" + (-1L) + "'", long46 == (-1L));
        org.junit.Assert.assertNotNull(periodType49);
        org.junit.Assert.assertNotNull(period51);
        org.junit.Assert.assertNotNull(duration54);
        org.junit.Assert.assertNotNull(duration56);
        org.junit.Assert.assertNotNull(duration58);
        org.junit.Assert.assertTrue("'" + long59 + "' != '" + (-1L) + "'", long59 == (-1L));
        org.junit.Assert.assertNotNull(duration61);
        org.junit.Assert.assertTrue("'" + long62 + "' != '" + (-1L) + "'", long62 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(period64);
        org.junit.Assert.assertNotNull(minutes65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(minutes68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(duration73);
        org.junit.Assert.assertNotNull(periodType77);
        org.junit.Assert.assertNotNull(periodType78);
        org.junit.Assert.assertNotNull(duration82);
        org.junit.Assert.assertTrue("'" + long83 + "' != '" + (-1L) + "'", long83 == (-1L));
        org.junit.Assert.assertNotNull(duration85);
        org.junit.Assert.assertTrue("'" + long86 + "' != '" + (-1L) + "'", long86 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNotNull(period88);
        org.junit.Assert.assertNotNull(minutes89);
        org.junit.Assert.assertNotNull(duration92);
        org.junit.Assert.assertNotNull(duration93);
        org.junit.Assert.assertNotNull(periodType96);
        org.junit.Assert.assertNotNull(period99);
    }

    @Test
    public void test17676() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17676");
        org.joda.time.Period period2 = new org.joda.time.Period(0L, (long) (byte) -1);
        org.joda.time.Period period4 = period2.withMinutes((int) (byte) 0);
        org.joda.time.Period period6 = org.joda.time.Period.seconds((int) '#');
        int int7 = period6.getMillis();
        org.joda.time.Period period9 = period6.withMillis((int) '#');
        int int10 = period6.size();
        org.joda.time.Period period12 = period6.withMinutes(0);
        org.joda.time.Hours hours13 = period6.toStandardHours();
        org.joda.time.Period period15 = period6.multipliedBy((int) (byte) 1);
        org.joda.time.MutablePeriod mutablePeriod16 = new org.joda.time.MutablePeriod((java.lang.Object) period6);
        mutablePeriod16.addDays(6);
        org.joda.time.Period period19 = period4.withFields((org.joda.time.ReadablePeriod) mutablePeriod16);
        org.joda.time.Period period21 = period4.withMonths((-7));
        int int22 = period4.getWeeks();
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 8 + "'", int10 == 8);
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(period15);
        org.junit.Assert.assertNotNull(period19);
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
    }

    @Test
    public void test17677() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17677");
        org.joda.time.Period period1 = org.joda.time.Period.seconds((int) '#');
        int int2 = period1.getMillis();
        org.joda.time.Period period4 = period1.withMillis((int) '#');
        org.joda.time.DurationFieldType durationFieldType5 = org.joda.time.DurationFieldType.halfdays();
        boolean boolean6 = period1.isSupported(durationFieldType5);
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.Duration duration8 = period1.toDurationTo(readableInstant7);
        org.joda.time.Duration duration10 = org.joda.time.Duration.millis((long) ' ');
        boolean boolean11 = duration8.isEqual((org.joda.time.ReadableDuration) duration10);
        org.joda.time.Period period12 = duration8.toPeriod();
        org.joda.time.Period period13 = duration8.toPeriod();
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(durationFieldType5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(duration8);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertNotNull(period13);
    }

    @Test
    public void test17678() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17678");
        org.joda.time.Period period1 = org.joda.time.Period.years((int) (short) 1);
        org.joda.time.Period period3 = period1.minusMinutes((int) (short) 10);
        org.joda.time.Period period5 = period3.withWeeks((int) (byte) -1);
        org.joda.time.Period period7 = period5.minusMinutes((int) (short) -1);
        org.joda.time.MutablePeriod mutablePeriod8 = new org.joda.time.MutablePeriod();
        org.joda.time.ReadableInstant readableInstant9 = null;
        org.joda.time.Duration duration10 = mutablePeriod8.toDurationTo(readableInstant9);
        org.joda.time.MutablePeriod mutablePeriod11 = mutablePeriod8.toMutablePeriod();
        org.joda.time.Duration duration14 = org.joda.time.Duration.standardMinutes((-1L));
        long long15 = duration14.getStandardMinutes();
        org.joda.time.Period period16 = duration14.toPeriod();
        org.joda.time.Duration duration18 = org.joda.time.Duration.standardMinutes((-1L));
        long long19 = duration18.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant20 = null;
        org.joda.time.Period period21 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration18, readableInstant20);
        org.joda.time.PeriodType periodType22 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology23 = null;
        org.joda.time.Period period24 = duration18.toPeriod(periodType22, chronology23);
        org.joda.time.Period period25 = duration14.toPeriod(periodType22);
        org.joda.time.Duration duration27 = org.joda.time.Duration.standardMinutes((-1L));
        long long28 = duration27.getStandardMinutes();
        boolean boolean29 = duration14.isLongerThan((org.joda.time.ReadableDuration) duration27);
        org.joda.time.PeriodType periodType31 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology32 = null;
        org.joda.time.MutablePeriod mutablePeriod33 = new org.joda.time.MutablePeriod((long) '4', periodType31, chronology32);
        org.joda.time.Chronology chronology34 = null;
        org.joda.time.Period period35 = duration14.toPeriod(periodType31, chronology34);
        org.joda.time.MutablePeriod mutablePeriod36 = new org.joda.time.MutablePeriod((long) 100, periodType31);
        org.joda.time.ReadableInstant readableInstant37 = null;
        org.joda.time.Duration duration39 = org.joda.time.Duration.standardMinutes((-1L));
        long long40 = duration39.getStandardMinutes();
        org.joda.time.Period period41 = duration39.toPeriod();
        org.joda.time.Duration duration43 = org.joda.time.Duration.standardMinutes((-1L));
        long long44 = duration43.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant45 = null;
        org.joda.time.Period period46 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration43, readableInstant45);
        org.joda.time.PeriodType periodType47 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology48 = null;
        org.joda.time.Period period49 = duration43.toPeriod(periodType47, chronology48);
        org.joda.time.Period period50 = duration39.toPeriod(periodType47);
        org.joda.time.Duration duration52 = org.joda.time.Duration.standardMinutes((-1L));
        long long53 = duration52.getStandardMinutes();
        boolean boolean54 = duration39.isLongerThan((org.joda.time.ReadableDuration) duration52);
        org.joda.time.PeriodType periodType55 = org.joda.time.PeriodType.weeks();
        org.joda.time.Period period56 = new org.joda.time.Period(readableInstant37, (org.joda.time.ReadableDuration) duration52, periodType55);
        org.joda.time.Chronology chronology57 = null;
        org.joda.time.Period period58 = duration52.toPeriod(chronology57);
        org.joda.time.Duration duration60 = org.joda.time.Duration.standardMinutes((-1L));
        long long61 = duration60.getStandardMinutes();
        org.joda.time.Period period62 = duration60.toPeriod();
        org.joda.time.Duration duration64 = org.joda.time.Duration.standardMinutes((-1L));
        long long65 = duration64.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant66 = null;
        org.joda.time.Period period67 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration64, readableInstant66);
        org.joda.time.PeriodType periodType68 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology69 = null;
        org.joda.time.Period period70 = duration64.toPeriod(periodType68, chronology69);
        org.joda.time.Period period71 = duration60.toPeriod(periodType68);
        boolean boolean72 = duration52.isShorterThan((org.joda.time.ReadableDuration) duration60);
        boolean boolean73 = periodType31.equals((java.lang.Object) duration52);
        org.joda.time.Chronology chronology74 = null;
        org.joda.time.Period period75 = duration52.toPeriod(chronology74);
        mutablePeriod11.mergePeriod((org.joda.time.ReadablePeriod) period75);
        org.joda.time.Period period77 = period7.plus((org.joda.time.ReadablePeriod) mutablePeriod11);
        int int78 = period77.getMinutes();
        org.joda.time.Period period80 = period77.minusYears((int) (short) 10);
        org.joda.time.Period period82 = period80.withYears((int) (short) 1);
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(period3);
        org.junit.Assert.assertNotNull(period5);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertNotNull(mutablePeriod11);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + (-1L) + "'", long15 == (-1L));
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertNotNull(duration18);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + (-1L) + "'", long19 == (-1L));
        org.junit.Assert.assertNotNull(periodType22);
        org.junit.Assert.assertNotNull(period24);
        org.junit.Assert.assertNotNull(period25);
        org.junit.Assert.assertNotNull(duration27);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + (-1L) + "'", long28 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(periodType31);
        org.junit.Assert.assertNotNull(period35);
        org.junit.Assert.assertNotNull(duration39);
        org.junit.Assert.assertTrue("'" + long40 + "' != '" + (-1L) + "'", long40 == (-1L));
        org.junit.Assert.assertNotNull(period41);
        org.junit.Assert.assertNotNull(duration43);
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + (-1L) + "'", long44 == (-1L));
        org.junit.Assert.assertNotNull(periodType47);
        org.junit.Assert.assertNotNull(period49);
        org.junit.Assert.assertNotNull(period50);
        org.junit.Assert.assertNotNull(duration52);
        org.junit.Assert.assertTrue("'" + long53 + "' != '" + (-1L) + "'", long53 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(periodType55);
        org.junit.Assert.assertNotNull(period58);
        org.junit.Assert.assertNotNull(duration60);
        org.junit.Assert.assertTrue("'" + long61 + "' != '" + (-1L) + "'", long61 == (-1L));
        org.junit.Assert.assertNotNull(period62);
        org.junit.Assert.assertNotNull(duration64);
        org.junit.Assert.assertTrue("'" + long65 + "' != '" + (-1L) + "'", long65 == (-1L));
        org.junit.Assert.assertNotNull(periodType68);
        org.junit.Assert.assertNotNull(period70);
        org.junit.Assert.assertNotNull(period71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(period75);
        org.junit.Assert.assertNotNull(period77);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + (-10) + "'", int78 == (-10));
        org.junit.Assert.assertNotNull(period80);
        org.junit.Assert.assertNotNull(period82);
    }

    @Test
    public void test17679() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17679");
        org.joda.time.Duration duration2 = new org.joda.time.Duration(136598340000L);
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.ReadableInstant readableInstant5 = null;
        org.joda.time.ReadableInstant readableInstant6 = null;
        org.joda.time.Duration duration10 = org.joda.time.Duration.standardMinutes((-1L));
        long long11 = duration10.getStandardMinutes();
        org.joda.time.Period period12 = duration10.toPeriod();
        org.joda.time.Duration duration14 = org.joda.time.Duration.standardMinutes((-1L));
        long long15 = duration14.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant16 = null;
        org.joda.time.Period period17 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration14, readableInstant16);
        org.joda.time.PeriodType periodType18 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology19 = null;
        org.joda.time.Period period20 = duration14.toPeriod(periodType18, chronology19);
        org.joda.time.Period period21 = duration10.toPeriod(periodType18);
        org.joda.time.Chronology chronology22 = null;
        org.joda.time.MutablePeriod mutablePeriod23 = new org.joda.time.MutablePeriod(1L, (long) (byte) 100, periodType18, chronology22);
        org.joda.time.PeriodType periodType24 = periodType18.withYearsRemoved();
        org.joda.time.PeriodType periodType25 = periodType18.withMillisRemoved();
        org.joda.time.Period period26 = new org.joda.time.Period(readableInstant5, readableInstant6, periodType18);
        org.joda.time.PeriodType periodType27 = periodType18.withDaysRemoved();
        org.joda.time.Chronology chronology28 = null;
        org.joda.time.MutablePeriod mutablePeriod29 = new org.joda.time.MutablePeriod((long) '4', periodType27, chronology28);
        org.joda.time.Period period30 = duration2.toPeriodTo(readableInstant3, periodType27);
        org.joda.time.PeriodType periodType31 = periodType27.withHoursRemoved();
        org.joda.time.Chronology chronology32 = null;
        org.joda.time.MutablePeriod mutablePeriod33 = new org.joda.time.MutablePeriod((long) (-42), periodType31, chronology32);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + (-1L) + "'", long11 == (-1L));
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + (-1L) + "'", long15 == (-1L));
        org.junit.Assert.assertNotNull(periodType18);
        org.junit.Assert.assertNotNull(period20);
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertNotNull(periodType24);
        org.junit.Assert.assertNotNull(periodType25);
        org.junit.Assert.assertNotNull(periodType27);
        org.junit.Assert.assertNotNull(period30);
        org.junit.Assert.assertNotNull(periodType31);
    }

    @Test
    public void test17680() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17680");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardSeconds(1L);
        org.joda.time.ReadableInstant readableInstant2 = null;
        org.joda.time.MutablePeriod mutablePeriod3 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration1, readableInstant2);
        org.joda.time.Period period4 = duration1.toPeriod();
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(period4);
    }

    @Test
    public void test17681() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17681");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.PeriodType periodType2 = null;
        org.joda.time.MutablePeriod mutablePeriod3 = new org.joda.time.MutablePeriod((long) (byte) 1, periodType2);
        org.joda.time.Duration duration4 = org.joda.time.Duration.ZERO;
        long long5 = duration4.getMillis();
        org.joda.time.Duration duration7 = org.joda.time.Duration.standardMinutes((-1L));
        long long8 = duration7.getStandardMinutes();
        org.joda.time.Duration duration10 = org.joda.time.Duration.standardMinutes((-1L));
        long long11 = duration10.getStandardMinutes();
        boolean boolean12 = duration7.isLongerThan((org.joda.time.ReadableDuration) duration10);
        org.joda.time.Period period13 = duration10.toPeriod();
        org.joda.time.Minutes minutes14 = duration10.toStandardMinutes();
        org.joda.time.Duration duration16 = org.joda.time.Duration.standardMinutes((-1L));
        long long17 = duration16.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant18 = null;
        org.joda.time.Period period19 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration16, readableInstant18);
        org.joda.time.PeriodType periodType20 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology21 = null;
        org.joda.time.Period period22 = duration16.toPeriod(periodType20, chronology21);
        org.joda.time.Duration duration25 = duration16.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration26 = duration10.plus((org.joda.time.ReadableDuration) duration25);
        org.joda.time.Period period27 = duration25.toPeriod();
        org.joda.time.Duration duration30 = org.joda.time.Duration.standardMinutes((-1L));
        long long31 = duration30.getStandardMinutes();
        org.joda.time.Period period32 = duration30.toPeriod();
        org.joda.time.Duration duration34 = org.joda.time.Duration.standardMinutes((-1L));
        long long35 = duration34.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant36 = null;
        org.joda.time.Period period37 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration34, readableInstant36);
        org.joda.time.PeriodType periodType38 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology39 = null;
        org.joda.time.Period period40 = duration34.toPeriod(periodType38, chronology39);
        org.joda.time.Period period41 = duration30.toPeriod(periodType38);
        org.joda.time.Duration duration43 = org.joda.time.Duration.standardMinutes((-1L));
        long long44 = duration43.getStandardMinutes();
        boolean boolean45 = duration30.isLongerThan((org.joda.time.ReadableDuration) duration43);
        org.joda.time.PeriodType periodType47 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology48 = null;
        org.joda.time.MutablePeriod mutablePeriod49 = new org.joda.time.MutablePeriod((long) '4', periodType47, chronology48);
        org.joda.time.Chronology chronology50 = null;
        org.joda.time.Period period51 = duration30.toPeriod(periodType47, chronology50);
        org.joda.time.Chronology chronology52 = null;
        org.joda.time.MutablePeriod mutablePeriod53 = new org.joda.time.MutablePeriod((long) '4', periodType47, chronology52);
        org.joda.time.PeriodType periodType54 = periodType47.withMonthsRemoved();
        org.joda.time.Chronology chronology55 = null;
        org.joda.time.MutablePeriod mutablePeriod56 = new org.joda.time.MutablePeriod((java.lang.Object) duration25, periodType47, chronology55);
        int int57 = duration4.compareTo((org.joda.time.ReadableDuration) duration25);
        mutablePeriod3.add((org.joda.time.ReadableDuration) duration25);
        org.joda.time.MutablePeriod mutablePeriod59 = new org.joda.time.MutablePeriod(readableInstant0, (org.joda.time.ReadableDuration) duration25);
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 0L + "'", long5 == 0L);
        org.junit.Assert.assertNotNull(duration7);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + (-1L) + "'", long8 == (-1L));
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + (-1L) + "'", long11 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(period13);
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertNotNull(duration16);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + (-1L) + "'", long17 == (-1L));
        org.junit.Assert.assertNotNull(periodType20);
        org.junit.Assert.assertNotNull(period22);
        org.junit.Assert.assertNotNull(duration25);
        org.junit.Assert.assertNotNull(duration26);
        org.junit.Assert.assertNotNull(period27);
        org.junit.Assert.assertNotNull(duration30);
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + (-1L) + "'", long31 == (-1L));
        org.junit.Assert.assertNotNull(period32);
        org.junit.Assert.assertNotNull(duration34);
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + (-1L) + "'", long35 == (-1L));
        org.junit.Assert.assertNotNull(periodType38);
        org.junit.Assert.assertNotNull(period40);
        org.junit.Assert.assertNotNull(period41);
        org.junit.Assert.assertNotNull(duration43);
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + (-1L) + "'", long44 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(periodType47);
        org.junit.Assert.assertNotNull(period51);
        org.junit.Assert.assertNotNull(periodType54);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 1 + "'", int57 == 1);
    }

    @Test
    public void test17682() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17682");
        org.joda.time.MutablePeriod mutablePeriod8 = new org.joda.time.MutablePeriod(98, 12, (-100), 102, (-42), (-947), (-100), (-5));
    }

    @Test
    public void test17683() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17683");
        org.joda.time.format.PeriodPrinter periodPrinter0 = null;
        org.joda.time.format.PeriodParser periodParser1 = null;
        org.joda.time.format.PeriodFormatter periodFormatter2 = new org.joda.time.format.PeriodFormatter(periodPrinter0, periodParser1);
        boolean boolean3 = periodFormatter2.isPrinter();
        org.joda.time.format.PeriodParser periodParser4 = periodFormatter2.getParser();
        boolean boolean5 = periodFormatter2.isParser();
        java.util.Locale locale6 = periodFormatter2.getLocale();
        boolean boolean7 = periodFormatter2.isParser();
        java.lang.StringBuffer stringBuffer8 = null;
        org.joda.time.ReadableInstant readableInstant9 = null;
        org.joda.time.ReadableInstant readableInstant10 = null;
        org.joda.time.Duration duration12 = org.joda.time.Duration.standardMinutes((-1L));
        long long13 = duration12.getStandardMinutes();
        org.joda.time.Period period14 = duration12.toPeriod();
        org.joda.time.Duration duration16 = org.joda.time.Duration.standardMinutes((-1L));
        long long17 = duration16.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant18 = null;
        org.joda.time.Period period19 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration16, readableInstant18);
        org.joda.time.PeriodType periodType20 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology21 = null;
        org.joda.time.Period period22 = duration16.toPeriod(periodType20, chronology21);
        org.joda.time.Period period23 = duration12.toPeriod(periodType20);
        org.joda.time.Duration duration25 = org.joda.time.Duration.standardMinutes((-1L));
        long long26 = duration25.getStandardMinutes();
        boolean boolean27 = duration12.isLongerThan((org.joda.time.ReadableDuration) duration25);
        org.joda.time.PeriodType periodType28 = org.joda.time.PeriodType.weeks();
        org.joda.time.Period period29 = new org.joda.time.Period(readableInstant10, (org.joda.time.ReadableDuration) duration25, periodType28);
        org.joda.time.Duration duration31 = duration25.plus(10L);
        org.joda.time.ReadableInstant readableInstant32 = null;
        org.joda.time.Duration duration34 = org.joda.time.Duration.standardMinutes((-1L));
        long long35 = duration34.getStandardMinutes();
        org.joda.time.Period period36 = duration34.toPeriod();
        org.joda.time.Duration duration38 = org.joda.time.Duration.standardMinutes((-1L));
        long long39 = duration38.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant40 = null;
        org.joda.time.Period period41 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration38, readableInstant40);
        org.joda.time.PeriodType periodType42 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology43 = null;
        org.joda.time.Period period44 = duration38.toPeriod(periodType42, chronology43);
        org.joda.time.Period period45 = duration34.toPeriod(periodType42);
        org.joda.time.Duration duration47 = org.joda.time.Duration.standardMinutes((-1L));
        long long48 = duration47.getStandardMinutes();
        boolean boolean49 = duration34.isLongerThan((org.joda.time.ReadableDuration) duration47);
        org.joda.time.PeriodType periodType50 = org.joda.time.PeriodType.weeks();
        org.joda.time.Period period51 = new org.joda.time.Period(readableInstant32, (org.joda.time.ReadableDuration) duration47, periodType50);
        boolean boolean52 = duration31.isLongerThan((org.joda.time.ReadableDuration) duration47);
        org.joda.time.ReadableInstant readableInstant53 = null;
        org.joda.time.ReadableInstant readableInstant54 = null;
        org.joda.time.Duration duration56 = org.joda.time.Duration.standardMinutes((-1L));
        long long57 = duration56.getStandardMinutes();
        org.joda.time.Duration duration59 = org.joda.time.Duration.standardMinutes((-1L));
        long long60 = duration59.getStandardMinutes();
        boolean boolean61 = duration56.isLongerThan((org.joda.time.ReadableDuration) duration59);
        org.joda.time.Duration duration63 = duration59.withMillis(1L);
        org.joda.time.Period period64 = new org.joda.time.Period(readableInstant54, (org.joda.time.ReadableDuration) duration59);
        org.joda.time.MutablePeriod mutablePeriod65 = new org.joda.time.MutablePeriod(readableInstant53, (org.joda.time.ReadableDuration) duration59);
        boolean boolean66 = duration31.equals((java.lang.Object) duration59);
        boolean boolean68 = duration59.equals((java.lang.Object) (-60000L));
        org.joda.time.Period period69 = new org.joda.time.Period(readableInstant9, (org.joda.time.ReadableDuration) duration59);
        // The following exception was thrown during execution in test generation
        try {
            periodFormatter2.printTo(stringBuffer8, (org.joda.time.ReadablePeriod) period69);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Printing not supported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(periodParser4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(locale6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + (-1L) + "'", long13 == (-1L));
        org.junit.Assert.assertNotNull(period14);
        org.junit.Assert.assertNotNull(duration16);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + (-1L) + "'", long17 == (-1L));
        org.junit.Assert.assertNotNull(periodType20);
        org.junit.Assert.assertNotNull(period22);
        org.junit.Assert.assertNotNull(period23);
        org.junit.Assert.assertNotNull(duration25);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + (-1L) + "'", long26 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(periodType28);
        org.junit.Assert.assertNotNull(duration31);
        org.junit.Assert.assertNotNull(duration34);
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + (-1L) + "'", long35 == (-1L));
        org.junit.Assert.assertNotNull(period36);
        org.junit.Assert.assertNotNull(duration38);
        org.junit.Assert.assertTrue("'" + long39 + "' != '" + (-1L) + "'", long39 == (-1L));
        org.junit.Assert.assertNotNull(periodType42);
        org.junit.Assert.assertNotNull(period44);
        org.junit.Assert.assertNotNull(period45);
        org.junit.Assert.assertNotNull(duration47);
        org.junit.Assert.assertTrue("'" + long48 + "' != '" + (-1L) + "'", long48 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(periodType50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(duration56);
        org.junit.Assert.assertTrue("'" + long57 + "' != '" + (-1L) + "'", long57 == (-1L));
        org.junit.Assert.assertNotNull(duration59);
        org.junit.Assert.assertTrue("'" + long60 + "' != '" + (-1L) + "'", long60 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(duration63);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
    }

    @Test
    public void test17684() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17684");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardDays((-48L));
        long long2 = duration1.getStandardMinutes();
        org.joda.time.Duration duration4 = org.joda.time.Duration.standardMinutes((-1L));
        long long5 = duration4.getMillis();
        org.joda.time.Duration duration7 = org.joda.time.Duration.standardMinutes((-1L));
        long long8 = duration7.getStandardMinutes();
        org.joda.time.Period period9 = duration7.toPeriod();
        org.joda.time.Duration duration11 = org.joda.time.Duration.standardMinutes((-1L));
        long long12 = duration11.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant13 = null;
        org.joda.time.Period period14 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration11, readableInstant13);
        org.joda.time.PeriodType periodType15 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology16 = null;
        org.joda.time.Period period17 = duration11.toPeriod(periodType15, chronology16);
        org.joda.time.Period period18 = duration7.toPeriod(periodType15);
        org.joda.time.Duration duration20 = org.joda.time.Duration.standardMinutes((-1L));
        long long21 = duration20.getStandardMinutes();
        boolean boolean22 = duration7.isLongerThan((org.joda.time.ReadableDuration) duration20);
        org.joda.time.Duration duration24 = duration20.withMillis((long) 0);
        int int25 = duration4.compareTo((org.joda.time.ReadableDuration) duration24);
        org.joda.time.Duration duration27 = org.joda.time.Duration.standardMinutes((-1L));
        long long28 = duration27.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant29 = null;
        org.joda.time.Period period30 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration27, readableInstant29);
        org.joda.time.Duration duration32 = org.joda.time.Duration.standardMinutes((-1L));
        long long33 = duration32.getStandardMinutes();
        org.joda.time.Period period34 = duration32.toPeriod();
        boolean boolean35 = duration27.isLongerThan((org.joda.time.ReadableDuration) duration32);
        org.joda.time.ReadableInstant readableInstant36 = null;
        org.joda.time.Period period37 = duration32.toPeriodFrom(readableInstant36);
        org.joda.time.Duration duration39 = org.joda.time.Duration.millis((long) (byte) 100);
        org.joda.time.Duration duration40 = duration32.plus((org.joda.time.ReadableDuration) duration39);
        int int41 = duration4.compareTo((org.joda.time.ReadableDuration) duration32);
        org.joda.time.Seconds seconds42 = duration32.toStandardSeconds();
        org.joda.time.Duration duration44 = duration1.withDurationAdded((org.joda.time.ReadableDuration) duration32, 59);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + (-69120L) + "'", long2 == (-69120L));
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + (-60000L) + "'", long5 == (-60000L));
        org.junit.Assert.assertNotNull(duration7);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + (-1L) + "'", long8 == (-1L));
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + (-1L) + "'", long12 == (-1L));
        org.junit.Assert.assertNotNull(periodType15);
        org.junit.Assert.assertNotNull(period17);
        org.junit.Assert.assertNotNull(period18);
        org.junit.Assert.assertNotNull(duration20);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + (-1L) + "'", long21 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(duration24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNotNull(duration27);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + (-1L) + "'", long28 == (-1L));
        org.junit.Assert.assertNotNull(duration32);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + (-1L) + "'", long33 == (-1L));
        org.junit.Assert.assertNotNull(period34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(period37);
        org.junit.Assert.assertNotNull(duration39);
        org.junit.Assert.assertNotNull(duration40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertNotNull(seconds42);
        org.junit.Assert.assertNotNull(duration44);
    }

    @Test
    public void test17685() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17685");
        org.joda.time.PeriodType periodType2 = org.joda.time.PeriodType.years();
        org.joda.time.Chronology chronology3 = null;
        org.joda.time.Period period4 = new org.joda.time.Period((long) '#', (long) (-1), periodType2, chronology3);
        org.joda.time.PeriodType periodType5 = period4.getPeriodType();
        org.joda.time.format.PeriodPrinter periodPrinter6 = null;
        org.joda.time.format.PeriodParser periodParser7 = null;
        org.joda.time.format.PeriodFormatter periodFormatter8 = new org.joda.time.format.PeriodFormatter(periodPrinter6, periodParser7);
        boolean boolean9 = periodFormatter8.isPrinter();
        org.joda.time.format.PeriodParser periodParser10 = periodFormatter8.getParser();
        java.util.Locale locale11 = null;
        org.joda.time.format.PeriodFormatter periodFormatter12 = periodFormatter8.withLocale(locale11);
        org.joda.time.PeriodType periodType13 = periodFormatter12.getParseType();
        boolean boolean14 = periodFormatter12.isPrinter();
        java.util.Locale locale15 = null;
        org.joda.time.format.PeriodFormatter periodFormatter16 = periodFormatter12.withLocale(locale15);
        org.joda.time.PeriodType periodType17 = periodFormatter16.getParseType();
        org.joda.time.format.PeriodPrinter periodPrinter18 = periodFormatter16.getPrinter();
        boolean boolean19 = periodFormatter16.isParser();
        boolean boolean20 = periodType5.equals((java.lang.Object) boolean19);
        org.joda.time.MutablePeriod mutablePeriod21 = new org.joda.time.MutablePeriod(periodType5);
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(periodType5);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(periodParser10);
        org.junit.Assert.assertNotNull(periodFormatter12);
        org.junit.Assert.assertNull(periodType13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(periodFormatter16);
        org.junit.Assert.assertNull(periodType17);
        org.junit.Assert.assertNull(periodPrinter18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    }

    @Test
    public void test17686() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17686");
        org.joda.time.ReadableInstant readableInstant2 = null;
        org.joda.time.Duration duration4 = org.joda.time.Duration.standardMinutes((-1L));
        long long5 = duration4.getStandardMinutes();
        org.joda.time.Duration duration7 = org.joda.time.Duration.standardMinutes((-1L));
        long long8 = duration7.getStandardMinutes();
        boolean boolean9 = duration4.isLongerThan((org.joda.time.ReadableDuration) duration7);
        org.joda.time.Duration duration11 = duration7.withMillis(1L);
        org.joda.time.Duration duration13 = org.joda.time.Duration.standardMinutes((-1L));
        long long14 = duration13.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant15 = null;
        org.joda.time.Period period16 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration13, readableInstant15);
        org.joda.time.PeriodType periodType17 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology18 = null;
        org.joda.time.Period period19 = duration13.toPeriod(periodType17, chronology18);
        org.joda.time.Duration duration20 = duration13.toDuration();
        int int21 = duration7.compareTo((org.joda.time.ReadableDuration) duration13);
        org.joda.time.Duration duration24 = duration7.withDurationAdded(10L, (int) '#');
        org.joda.time.Duration duration30 = org.joda.time.Duration.standardMinutes((-1L));
        long long31 = duration30.getStandardMinutes();
        org.joda.time.Period period32 = duration30.toPeriod();
        org.joda.time.Duration duration34 = org.joda.time.Duration.standardMinutes((-1L));
        long long35 = duration34.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant36 = null;
        org.joda.time.Period period37 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration34, readableInstant36);
        org.joda.time.PeriodType periodType38 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology39 = null;
        org.joda.time.Period period40 = duration34.toPeriod(periodType38, chronology39);
        org.joda.time.Period period41 = duration30.toPeriod(periodType38);
        org.joda.time.Chronology chronology42 = null;
        org.joda.time.MutablePeriod mutablePeriod43 = new org.joda.time.MutablePeriod(1L, (long) (byte) 100, periodType38, chronology42);
        org.joda.time.PeriodType periodType44 = periodType38.withMillisRemoved();
        org.joda.time.Period period45 = new org.joda.time.Period((long) '#', (long) 'a', periodType44);
        org.joda.time.PeriodType periodType46 = period45.getPeriodType();
        int int47 = periodType46.size();
        org.joda.time.PeriodType periodType48 = periodType46.withMillisRemoved();
        org.joda.time.MutablePeriod mutablePeriod49 = new org.joda.time.MutablePeriod(readableInstant2, (org.joda.time.ReadableDuration) duration24, periodType48);
        org.joda.time.Chronology chronology50 = null;
        org.joda.time.MutablePeriod mutablePeriod51 = new org.joda.time.MutablePeriod((long) (-97), 37943L, periodType48, chronology50);
        org.joda.time.PeriodType periodType52 = periodType48.withSecondsRemoved();
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + (-1L) + "'", long5 == (-1L));
        org.junit.Assert.assertNotNull(duration7);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + (-1L) + "'", long8 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + (-1L) + "'", long14 == (-1L));
        org.junit.Assert.assertNotNull(periodType17);
        org.junit.Assert.assertNotNull(period19);
        org.junit.Assert.assertNotNull(duration20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNotNull(duration24);
        org.junit.Assert.assertNotNull(duration30);
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + (-1L) + "'", long31 == (-1L));
        org.junit.Assert.assertNotNull(period32);
        org.junit.Assert.assertNotNull(duration34);
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + (-1L) + "'", long35 == (-1L));
        org.junit.Assert.assertNotNull(periodType38);
        org.junit.Assert.assertNotNull(period40);
        org.junit.Assert.assertNotNull(period41);
        org.junit.Assert.assertNotNull(periodType44);
        org.junit.Assert.assertNotNull(periodType46);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 1 + "'", int47 == 1);
        org.junit.Assert.assertNotNull(periodType48);
        org.junit.Assert.assertNotNull(periodType52);
    }

    @Test
    public void test17687() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17687");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardHours((long) 10);
        org.joda.time.Duration duration3 = org.joda.time.Duration.standardHours((long) 10);
        org.joda.time.Duration duration5 = org.joda.time.Duration.standardMinutes((-1L));
        long long6 = duration5.getStandardMinutes();
        org.joda.time.Duration duration8 = org.joda.time.Duration.standardMinutes((-1L));
        long long9 = duration8.getStandardMinutes();
        boolean boolean10 = duration5.isLongerThan((org.joda.time.ReadableDuration) duration8);
        org.joda.time.Period period11 = duration8.toPeriod();
        org.joda.time.Minutes minutes12 = duration8.toStandardMinutes();
        boolean boolean13 = duration3.isEqual((org.joda.time.ReadableDuration) duration8);
        boolean boolean14 = duration1.isEqual((org.joda.time.ReadableDuration) duration3);
        org.joda.time.ReadableInstant readableInstant15 = null;
        org.joda.time.Period period16 = duration3.toPeriodFrom(readableInstant15);
        org.joda.time.ReadableInstant readableInstant17 = null;
        org.joda.time.format.PeriodPrinter periodPrinter18 = null;
        org.joda.time.format.PeriodParser periodParser19 = null;
        org.joda.time.format.PeriodFormatter periodFormatter20 = new org.joda.time.format.PeriodFormatter(periodPrinter18, periodParser19);
        boolean boolean21 = periodFormatter20.isPrinter();
        org.joda.time.format.PeriodParser periodParser22 = periodFormatter20.getParser();
        java.util.Locale locale23 = null;
        org.joda.time.format.PeriodFormatter periodFormatter24 = periodFormatter20.withLocale(locale23);
        java.util.Locale locale25 = null;
        org.joda.time.format.PeriodFormatter periodFormatter26 = periodFormatter20.withLocale(locale25);
        org.joda.time.ReadableInstant readableInstant31 = null;
        org.joda.time.ReadableInstant readableInstant32 = null;
        org.joda.time.Duration duration34 = org.joda.time.Duration.standardMinutes((-1L));
        long long35 = duration34.getStandardMinutes();
        org.joda.time.Period period36 = duration34.toPeriod();
        org.joda.time.Duration duration38 = org.joda.time.Duration.standardMinutes((-1L));
        long long39 = duration38.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant40 = null;
        org.joda.time.Period period41 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration38, readableInstant40);
        org.joda.time.PeriodType periodType42 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology43 = null;
        org.joda.time.Period period44 = duration38.toPeriod(periodType42, chronology43);
        org.joda.time.Period period45 = duration34.toPeriod(periodType42);
        org.joda.time.MutablePeriod mutablePeriod46 = new org.joda.time.MutablePeriod(readableInstant31, readableInstant32, periodType42);
        org.joda.time.Chronology chronology47 = null;
        org.joda.time.MutablePeriod mutablePeriod48 = new org.joda.time.MutablePeriod((long) 10, (long) (short) 0, periodType42, chronology47);
        org.joda.time.Chronology chronology49 = null;
        org.joda.time.MutablePeriod mutablePeriod50 = new org.joda.time.MutablePeriod(10L, (long) 7, periodType42, chronology49);
        org.joda.time.PeriodType periodType51 = periodType42.withMinutesRemoved();
        org.joda.time.format.PeriodFormatter periodFormatter52 = periodFormatter20.withParseType(periodType42);
        org.joda.time.format.PeriodParser periodParser53 = periodFormatter52.getParser();
        boolean boolean54 = periodFormatter52.isPrinter();
        boolean boolean55 = periodFormatter52.isParser();
        org.joda.time.PeriodType periodType56 = periodFormatter52.getParseType();
        org.joda.time.Period period57 = duration3.toPeriodTo(readableInstant17, periodType56);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertNotNull(duration5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
        org.junit.Assert.assertNotNull(duration8);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + (-1L) + "'", long9 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(periodParser22);
        org.junit.Assert.assertNotNull(periodFormatter24);
        org.junit.Assert.assertNotNull(periodFormatter26);
        org.junit.Assert.assertNotNull(duration34);
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + (-1L) + "'", long35 == (-1L));
        org.junit.Assert.assertNotNull(period36);
        org.junit.Assert.assertNotNull(duration38);
        org.junit.Assert.assertTrue("'" + long39 + "' != '" + (-1L) + "'", long39 == (-1L));
        org.junit.Assert.assertNotNull(periodType42);
        org.junit.Assert.assertNotNull(period44);
        org.junit.Assert.assertNotNull(period45);
        org.junit.Assert.assertNotNull(periodType51);
        org.junit.Assert.assertNotNull(periodFormatter52);
        org.junit.Assert.assertNull(periodParser53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(periodType56);
        org.junit.Assert.assertNotNull(period57);
    }

    @Test
    public void test17688() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17688");
        org.joda.time.Period period1 = org.joda.time.Period.seconds((int) '#');
        org.joda.time.Period period2 = period1.toPeriod();
        org.joda.time.Period period4 = period2.minusWeeks(10);
        org.joda.time.Period period6 = period4.minusMinutes(100);
        org.joda.time.Period period7 = period4.normalizedStandard();
        int int8 = period4.getSeconds();
        org.joda.time.Period period10 = period4.minusSeconds((int) (short) 1);
        org.joda.time.Period period12 = period4.withMinutes(10);
        org.joda.time.Period period14 = period4.plusSeconds(0);
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(period2);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 35 + "'", int8 == 35);
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertNotNull(period14);
    }

    @Test
    public void test17689() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17689");
        org.joda.time.Period period1 = org.joda.time.Period.parse("PT-1M");
        org.joda.time.MutablePeriod mutablePeriod2 = period1.toMutablePeriod();
        int int3 = mutablePeriod2.getYears();
        mutablePeriod2.setMillis((-1));
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(mutablePeriod2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
    }

    @Test
    public void test17690() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17690");
        org.joda.time.Period period1 = org.joda.time.Period.seconds((int) '#');
        int int2 = period1.getMillis();
        org.joda.time.Period period4 = period1.withMillis((int) '#');
        int int5 = period1.size();
        org.joda.time.Period period7 = period1.withMinutes(0);
        org.joda.time.Hours hours8 = period1.toStandardHours();
        org.joda.time.Period period10 = period1.minusSeconds((int) (short) 0);
        org.joda.time.MutablePeriod mutablePeriod11 = period10.toMutablePeriod();
        mutablePeriod11.setValue(7, 97);
        mutablePeriod11.setMonths((int) (byte) 10);
        mutablePeriod11.addMonths(7);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.MutablePeriod mutablePeriod19 = new org.joda.time.MutablePeriod((java.lang.Object) 7);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: No period converter found for type: java.lang.Integer");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 8 + "'", int5 == 8);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertNotNull(mutablePeriod11);
    }

    @Test
    public void test17691() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17691");
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.MutablePeriod mutablePeriod1 = org.joda.time.MutablePeriod.parse("PeriodType[SecondsNoSeconds]");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid format: \"PeriodType[SecondsNoSeconds]\" is malformed at \"eriodType[SecondsNoSeconds]\"");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test17692() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17692");
        org.joda.time.format.PeriodPrinter periodPrinter0 = null;
        org.joda.time.format.PeriodParser periodParser1 = null;
        org.joda.time.format.PeriodFormatter periodFormatter2 = new org.joda.time.format.PeriodFormatter(periodPrinter0, periodParser1);
        boolean boolean3 = periodFormatter2.isPrinter();
        org.joda.time.format.PeriodParser periodParser4 = periodFormatter2.getParser();
        java.util.Locale locale5 = null;
        org.joda.time.format.PeriodFormatter periodFormatter6 = periodFormatter2.withLocale(locale5);
        java.util.Locale locale7 = null;
        org.joda.time.format.PeriodFormatter periodFormatter8 = periodFormatter2.withLocale(locale7);
        org.joda.time.PeriodType periodType9 = periodFormatter8.getParseType();
        org.joda.time.PeriodType periodType12 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period13 = new org.joda.time.Period(10L, periodType12);
        org.joda.time.PeriodType periodType14 = periodType12.withWeeksRemoved();
        org.joda.time.MutablePeriod mutablePeriod15 = new org.joda.time.MutablePeriod((long) (byte) 0, periodType12);
        org.joda.time.PeriodType periodType16 = periodType12.withWeeksRemoved();
        org.joda.time.ReadableInstant readableInstant17 = null;
        org.joda.time.Duration duration19 = org.joda.time.Duration.standardMinutes((-1L));
        long long20 = duration19.getStandardMinutes();
        org.joda.time.Duration duration22 = org.joda.time.Duration.standardMinutes((-1L));
        long long23 = duration22.getStandardMinutes();
        boolean boolean24 = duration19.isLongerThan((org.joda.time.ReadableDuration) duration22);
        org.joda.time.Duration duration26 = duration22.withMillis(1L);
        org.joda.time.Period period27 = new org.joda.time.Period(readableInstant17, (org.joda.time.ReadableDuration) duration22);
        org.joda.time.DurationFieldType durationFieldType28 = org.joda.time.DurationFieldType.years();
        java.lang.String str29 = durationFieldType28.getName();
        org.joda.time.Chronology chronology30 = null;
        boolean boolean31 = durationFieldType28.isSupported(chronology30);
        org.joda.time.Period period33 = period27.withFieldAdded(durationFieldType28, 0);
        java.lang.String str34 = durationFieldType28.getName();
        boolean boolean35 = periodType16.isSupported(durationFieldType28);
        org.joda.time.format.PeriodFormatter periodFormatter36 = periodFormatter8.withParseType(periodType16);
        java.util.Locale locale37 = periodFormatter36.getLocale();
        org.joda.time.PeriodType periodType41 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period42 = new org.joda.time.Period(10L, periodType41);
        org.joda.time.PeriodType periodType43 = periodType41.withWeeksRemoved();
        org.joda.time.DurationFieldType durationFieldType44 = org.joda.time.DurationFieldType.millis();
        int int45 = periodType43.indexOf(durationFieldType44);
        org.joda.time.Period period46 = new org.joda.time.Period((long) 0, (long) (-60), periodType43);
        org.joda.time.format.PeriodFormatter periodFormatter47 = periodFormatter36.withParseType(periodType43);
        boolean boolean48 = periodFormatter47.isParser();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(periodParser4);
        org.junit.Assert.assertNotNull(periodFormatter6);
        org.junit.Assert.assertNotNull(periodFormatter8);
        org.junit.Assert.assertNull(periodType9);
        org.junit.Assert.assertNotNull(periodType12);
        org.junit.Assert.assertNotNull(periodType14);
        org.junit.Assert.assertNotNull(periodType16);
        org.junit.Assert.assertNotNull(duration19);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + (-1L) + "'", long20 == (-1L));
        org.junit.Assert.assertNotNull(duration22);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + (-1L) + "'", long23 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(duration26);
        org.junit.Assert.assertNotNull(durationFieldType28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "years" + "'", str29, "years");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(period33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "years" + "'", str34, "years");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(periodFormatter36);
        org.junit.Assert.assertNull(locale37);
        org.junit.Assert.assertNotNull(periodType41);
        org.junit.Assert.assertNotNull(periodType43);
        org.junit.Assert.assertNotNull(durationFieldType44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
        org.junit.Assert.assertNotNull(periodFormatter47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
    }

    @Test
    public void test17693() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17693");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.Duration duration2 = org.joda.time.Duration.standardMinutes((-1L));
        long long3 = duration2.getStandardMinutes();
        org.joda.time.Period period4 = duration2.toPeriod();
        org.joda.time.Duration duration6 = org.joda.time.Duration.standardMinutes((-1L));
        long long7 = duration6.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.Period period9 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration6, readableInstant8);
        org.joda.time.PeriodType periodType10 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology11 = null;
        org.joda.time.Period period12 = duration6.toPeriod(periodType10, chronology11);
        org.joda.time.Period period13 = duration2.toPeriod(periodType10);
        org.joda.time.Duration duration15 = org.joda.time.Duration.standardMinutes((-1L));
        long long16 = duration15.getStandardMinutes();
        boolean boolean17 = duration2.isLongerThan((org.joda.time.ReadableDuration) duration15);
        org.joda.time.PeriodType periodType18 = org.joda.time.PeriodType.weeks();
        org.joda.time.Period period19 = new org.joda.time.Period(readableInstant0, (org.joda.time.ReadableDuration) duration15, periodType18);
        org.joda.time.Chronology chronology20 = null;
        org.joda.time.Period period21 = duration15.toPeriod(chronology20);
        org.joda.time.Hours hours22 = period21.toStandardHours();
        org.joda.time.Period period24 = period21.plusMinutes((int) (byte) -1);
        org.joda.time.Period period26 = period21.plusYears((int) (byte) 10);
        int[] intArray27 = period21.getValues();
        org.joda.time.Period period29 = period21.minusDays(52);
        int int30 = period29.getDays();
        org.junit.Assert.assertNotNull(duration2);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + (-1L) + "'", long3 == (-1L));
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(duration6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(periodType10);
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertNotNull(period13);
        org.junit.Assert.assertNotNull(duration15);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + (-1L) + "'", long16 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(periodType18);
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertNotNull(period24);
        org.junit.Assert.assertNotNull(period26);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0, 0, 0, 0, -1, 0, 0]");
        org.junit.Assert.assertNotNull(period29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-52) + "'", int30 == (-52));
    }

    @Test
    public void test17694() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17694");
        org.joda.time.MutablePeriod mutablePeriod4 = new org.joda.time.MutablePeriod((-59), 4, (-101), 49);
    }

    @Test
    public void test17695() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17695");
        org.joda.time.PeriodType periodType6 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period7 = new org.joda.time.Period(10L, periodType6);
        org.joda.time.Chronology chronology8 = null;
        org.joda.time.Period period9 = new org.joda.time.Period((long) 'a', periodType6, chronology8);
        org.joda.time.Chronology chronology10 = null;
        org.joda.time.Period period11 = new org.joda.time.Period(100L, (long) (-60), periodType6, chronology10);
        org.joda.time.Period period12 = new org.joda.time.Period(0L, (long) (-90), periodType6);
        org.joda.time.PeriodType periodType13 = periodType6.withYearsRemoved();
        org.junit.Assert.assertNotNull(periodType6);
        org.junit.Assert.assertNotNull(periodType13);
    }

    @Test
    public void test17696() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17696");
        org.joda.time.MutablePeriod mutablePeriod0 = new org.joda.time.MutablePeriod();
        org.joda.time.ReadableInstant readableInstant1 = null;
        org.joda.time.Duration duration2 = mutablePeriod0.toDurationTo(readableInstant1);
        int int3 = mutablePeriod0.getMinutes();
        mutablePeriod0.add((long) (-17));
        org.joda.time.ReadableInstant readableInstant6 = null;
        org.joda.time.ReadableInstant readableInstant7 = null;
        mutablePeriod0.setPeriod(readableInstant6, readableInstant7);
        org.junit.Assert.assertNotNull(duration2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
    }

    @Test
    public void test17697() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17697");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableInstant readableInstant1 = null;
        org.joda.time.MutablePeriod mutablePeriod2 = new org.joda.time.MutablePeriod(readableInstant0, readableInstant1);
        mutablePeriod2.setPeriod((long) 10, (long) 10);
        org.joda.time.MutablePeriod mutablePeriod6 = mutablePeriod2.toMutablePeriod();
        mutablePeriod2.addMillis((int) (byte) 10);
        org.joda.time.MutablePeriod mutablePeriod9 = mutablePeriod2.copy();
        int[] intArray10 = mutablePeriod2.getValues();
        mutablePeriod2.add((long) (short) 0);
        org.joda.time.Duration duration14 = org.joda.time.Duration.standardMinutes((-1L));
        long long15 = duration14.getStandardMinutes();
        org.joda.time.Duration duration17 = org.joda.time.Duration.standardMinutes((-1L));
        long long18 = duration17.getStandardMinutes();
        boolean boolean19 = duration14.isLongerThan((org.joda.time.ReadableDuration) duration17);
        org.joda.time.Period period20 = duration17.toPeriod();
        org.joda.time.Minutes minutes21 = duration17.toStandardMinutes();
        org.joda.time.Duration duration23 = org.joda.time.Duration.standardMinutes((-1L));
        long long24 = duration23.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant25 = null;
        org.joda.time.Period period26 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration23, readableInstant25);
        org.joda.time.PeriodType periodType27 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology28 = null;
        org.joda.time.Period period29 = duration23.toPeriod(periodType27, chronology28);
        org.joda.time.Duration duration32 = duration23.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration33 = duration17.plus((org.joda.time.ReadableDuration) duration32);
        org.joda.time.ReadableInstant readableInstant34 = null;
        org.joda.time.Duration duration38 = org.joda.time.Duration.standardMinutes((-1L));
        long long39 = duration38.getStandardMinutes();
        org.joda.time.Period period40 = duration38.toPeriod();
        org.joda.time.Duration duration42 = org.joda.time.Duration.standardMinutes((-1L));
        long long43 = duration42.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant44 = null;
        org.joda.time.Period period45 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration42, readableInstant44);
        org.joda.time.PeriodType periodType46 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology47 = null;
        org.joda.time.Period period48 = duration42.toPeriod(periodType46, chronology47);
        org.joda.time.Period period49 = duration38.toPeriod(periodType46);
        org.joda.time.Chronology chronology50 = null;
        org.joda.time.MutablePeriod mutablePeriod51 = new org.joda.time.MutablePeriod(1L, (long) (byte) 100, periodType46, chronology50);
        org.joda.time.Period period52 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration17, readableInstant34, periodType46);
        org.joda.time.ReadableInstant readableInstant53 = null;
        org.joda.time.Duration duration55 = org.joda.time.Duration.standardMinutes((-1L));
        long long56 = duration55.getStandardMinutes();
        org.joda.time.Duration duration58 = org.joda.time.Duration.standardMinutes((-1L));
        long long59 = duration58.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant60 = null;
        org.joda.time.Period period61 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration58, readableInstant60);
        org.joda.time.PeriodType periodType62 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology63 = null;
        org.joda.time.Period period64 = duration58.toPeriod(periodType62, chronology63);
        org.joda.time.Duration duration65 = duration58.toDuration();
        org.joda.time.Duration duration67 = duration55.withDurationAdded((org.joda.time.ReadableDuration) duration65, 100);
        org.joda.time.Period period68 = new org.joda.time.Period(readableInstant53, (org.joda.time.ReadableDuration) duration55);
        boolean boolean69 = duration17.equals((java.lang.Object) duration55);
        org.joda.time.Duration duration71 = duration55.withMillis((long) (byte) 10);
        mutablePeriod2.add((org.joda.time.ReadableDuration) duration71);
        mutablePeriod2.setMinutes((int) '#');
        java.lang.String str75 = mutablePeriod2.toString();
        org.junit.Assert.assertNotNull(mutablePeriod6);
        org.junit.Assert.assertNotNull(mutablePeriod9);
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[0, 0, 0, 0, 0, 0, 0, 10]");
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + (-1L) + "'", long15 == (-1L));
        org.junit.Assert.assertNotNull(duration17);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + (-1L) + "'", long18 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(period20);
        org.junit.Assert.assertNotNull(minutes21);
        org.junit.Assert.assertNotNull(duration23);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + (-1L) + "'", long24 == (-1L));
        org.junit.Assert.assertNotNull(periodType27);
        org.junit.Assert.assertNotNull(period29);
        org.junit.Assert.assertNotNull(duration32);
        org.junit.Assert.assertNotNull(duration33);
        org.junit.Assert.assertNotNull(duration38);
        org.junit.Assert.assertTrue("'" + long39 + "' != '" + (-1L) + "'", long39 == (-1L));
        org.junit.Assert.assertNotNull(period40);
        org.junit.Assert.assertNotNull(duration42);
        org.junit.Assert.assertTrue("'" + long43 + "' != '" + (-1L) + "'", long43 == (-1L));
        org.junit.Assert.assertNotNull(periodType46);
        org.junit.Assert.assertNotNull(period48);
        org.junit.Assert.assertNotNull(period49);
        org.junit.Assert.assertNotNull(duration55);
        org.junit.Assert.assertTrue("'" + long56 + "' != '" + (-1L) + "'", long56 == (-1L));
        org.junit.Assert.assertNotNull(duration58);
        org.junit.Assert.assertTrue("'" + long59 + "' != '" + (-1L) + "'", long59 == (-1L));
        org.junit.Assert.assertNotNull(periodType62);
        org.junit.Assert.assertNotNull(period64);
        org.junit.Assert.assertNotNull(duration65);
        org.junit.Assert.assertNotNull(duration67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(duration71);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "PT35M0.020S" + "'", str75, "PT35M0.020S");
    }

    @Test
    public void test17698() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17698");
        org.joda.time.Period period1 = org.joda.time.Period.weeks(39);
        org.joda.time.Period period3 = period1.plusMillis((-9));
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(period3);
    }

    @Test
    public void test17699() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17699");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((long) '4');
        org.joda.time.Days days2 = duration1.toStandardDays();
        long long3 = duration1.getStandardMinutes();
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(days2);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 52L + "'", long3 == 52L);
    }

    @Test
    public void test17700() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17700");
        org.joda.time.Period period8 = new org.joda.time.Period((int) (short) 100, (int) (short) 0, 1, 0, (int) (byte) 10, 100, 0, (int) (byte) 0);
        org.joda.time.Period period10 = period8.minusWeeks(32);
        org.joda.time.Period period11 = period10.negated();
        org.joda.time.Period period13 = period11.withHours(864000);
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(period13);
    }

    @Test
    public void test17701() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17701");
        org.joda.time.MutablePeriod mutablePeriod1 = new org.joda.time.MutablePeriod((long) (-59));
    }

    @Test
    public void test17702() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17702");
        org.joda.time.ReadableInstant readableInstant1 = null;
        org.joda.time.Duration duration3 = org.joda.time.Duration.standardMinutes((-1L));
        long long4 = duration3.getStandardMinutes();
        org.joda.time.Period period5 = duration3.toPeriod();
        org.joda.time.Duration duration7 = org.joda.time.Duration.standardMinutes((-1L));
        long long8 = duration7.getStandardMinutes();
        org.joda.time.Duration duration10 = org.joda.time.Duration.standardMinutes((-1L));
        long long11 = duration10.getStandardMinutes();
        boolean boolean12 = duration7.isLongerThan((org.joda.time.ReadableDuration) duration10);
        org.joda.time.Duration duration14 = duration10.withMillis(1L);
        org.joda.time.Duration duration16 = org.joda.time.Duration.standardMinutes((-1L));
        long long17 = duration16.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant18 = null;
        org.joda.time.Period period19 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration16, readableInstant18);
        org.joda.time.PeriodType periodType20 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology21 = null;
        org.joda.time.Period period22 = duration16.toPeriod(periodType20, chronology21);
        org.joda.time.Duration duration23 = duration16.toDuration();
        int int24 = duration10.compareTo((org.joda.time.ReadableDuration) duration16);
        boolean boolean25 = duration3.isLongerThan((org.joda.time.ReadableDuration) duration10);
        org.joda.time.Duration duration29 = org.joda.time.Duration.standardMinutes((-1L));
        long long30 = duration29.getStandardMinutes();
        org.joda.time.Period period31 = duration29.toPeriod();
        org.joda.time.Duration duration33 = org.joda.time.Duration.standardMinutes((-1L));
        long long34 = duration33.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant35 = null;
        org.joda.time.Period period36 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration33, readableInstant35);
        org.joda.time.PeriodType periodType37 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology38 = null;
        org.joda.time.Period period39 = duration33.toPeriod(periodType37, chronology38);
        org.joda.time.Period period40 = duration29.toPeriod(periodType37);
        org.joda.time.Chronology chronology41 = null;
        org.joda.time.MutablePeriod mutablePeriod42 = new org.joda.time.MutablePeriod(1L, (long) (byte) 100, periodType37, chronology41);
        org.joda.time.PeriodType periodType43 = periodType37.withMillisRemoved();
        org.joda.time.PeriodType periodType44 = periodType43.withSecondsRemoved();
        org.joda.time.Period period45 = new org.joda.time.Period(readableInstant1, (org.joda.time.ReadableDuration) duration3, periodType44);
        org.joda.time.ReadableInstant readableInstant46 = null;
        org.joda.time.MutablePeriod mutablePeriod47 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration3, readableInstant46);
        org.joda.time.Duration duration49 = duration3.plus((-60L));
        org.joda.time.Duration duration51 = org.joda.time.Duration.standardMinutes((-1L));
        long long52 = duration51.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant53 = null;
        org.joda.time.Period period54 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration51, readableInstant53);
        org.joda.time.PeriodType periodType55 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology56 = null;
        org.joda.time.Period period57 = duration51.toPeriod(periodType55, chronology56);
        org.joda.time.Duration duration60 = duration51.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration62 = org.joda.time.Duration.standardHours((long) 10);
        org.joda.time.Duration duration64 = org.joda.time.Duration.standardMinutes((-1L));
        long long65 = duration64.getStandardMinutes();
        org.joda.time.Duration duration67 = org.joda.time.Duration.standardMinutes((-1L));
        long long68 = duration67.getStandardMinutes();
        boolean boolean69 = duration64.isLongerThan((org.joda.time.ReadableDuration) duration67);
        org.joda.time.Period period70 = duration67.toPeriod();
        org.joda.time.Minutes minutes71 = duration67.toStandardMinutes();
        boolean boolean72 = duration62.isEqual((org.joda.time.ReadableDuration) duration67);
        boolean boolean73 = duration51.isShorterThan((org.joda.time.ReadableDuration) duration62);
        org.joda.time.Duration duration76 = duration62.withDurationAdded((-2L), (int) (byte) 10);
        boolean boolean77 = duration49.isLongerThan((org.joda.time.ReadableDuration) duration62);
        org.joda.time.ReadableInstant readableInstant78 = null;
        org.joda.time.PeriodType periodType80 = org.joda.time.PeriodType.standard();
        org.joda.time.MutablePeriod mutablePeriod81 = new org.joda.time.MutablePeriod((long) (byte) 1, periodType80);
        org.joda.time.Period period82 = duration49.toPeriodFrom(readableInstant78, periodType80);
        org.joda.time.Chronology chronology83 = null;
        org.joda.time.MutablePeriod mutablePeriod84 = new org.joda.time.MutablePeriod((long) 'a', periodType80, chronology83);
        java.lang.String str85 = periodType80.toString();
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + (-1L) + "'", long4 == (-1L));
        org.junit.Assert.assertNotNull(period5);
        org.junit.Assert.assertNotNull(duration7);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + (-1L) + "'", long8 == (-1L));
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + (-1L) + "'", long11 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertNotNull(duration16);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + (-1L) + "'", long17 == (-1L));
        org.junit.Assert.assertNotNull(periodType20);
        org.junit.Assert.assertNotNull(period22);
        org.junit.Assert.assertNotNull(duration23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(duration29);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + (-1L) + "'", long30 == (-1L));
        org.junit.Assert.assertNotNull(period31);
        org.junit.Assert.assertNotNull(duration33);
        org.junit.Assert.assertTrue("'" + long34 + "' != '" + (-1L) + "'", long34 == (-1L));
        org.junit.Assert.assertNotNull(periodType37);
        org.junit.Assert.assertNotNull(period39);
        org.junit.Assert.assertNotNull(period40);
        org.junit.Assert.assertNotNull(periodType43);
        org.junit.Assert.assertNotNull(periodType44);
        org.junit.Assert.assertNotNull(duration49);
        org.junit.Assert.assertNotNull(duration51);
        org.junit.Assert.assertTrue("'" + long52 + "' != '" + (-1L) + "'", long52 == (-1L));
        org.junit.Assert.assertNotNull(periodType55);
        org.junit.Assert.assertNotNull(period57);
        org.junit.Assert.assertNotNull(duration60);
        org.junit.Assert.assertNotNull(duration62);
        org.junit.Assert.assertNotNull(duration64);
        org.junit.Assert.assertTrue("'" + long65 + "' != '" + (-1L) + "'", long65 == (-1L));
        org.junit.Assert.assertNotNull(duration67);
        org.junit.Assert.assertTrue("'" + long68 + "' != '" + (-1L) + "'", long68 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(period70);
        org.junit.Assert.assertNotNull(minutes71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(duration76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(periodType80);
        org.junit.Assert.assertNotNull(period82);
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "PeriodType[Standard]" + "'", str85, "PeriodType[Standard]");
    }

    @Test
    public void test17703() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17703");
        org.joda.time.PeriodType periodType8 = null;
        org.joda.time.MutablePeriod mutablePeriod9 = new org.joda.time.MutablePeriod(27, (-40), 350, (int) (byte) 0, (-65), 52, 2, (-17), periodType8);
        mutablePeriod9.setHours((-23));
    }

    @Test
    public void test17704() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17704");
        org.joda.time.ReadableInstant readableInstant4 = null;
        org.joda.time.Duration duration6 = org.joda.time.Duration.standardMinutes((-1L));
        long long7 = duration6.getStandardMinutes();
        org.joda.time.Duration duration9 = org.joda.time.Duration.standardMinutes((-1L));
        long long10 = duration9.getStandardMinutes();
        boolean boolean11 = duration6.isLongerThan((org.joda.time.ReadableDuration) duration9);
        org.joda.time.Duration duration13 = duration9.withMillis((long) 1);
        org.joda.time.Duration duration15 = org.joda.time.Duration.standardMinutes((-1L));
        long long16 = duration15.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant17 = null;
        org.joda.time.Period period18 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration15, readableInstant17);
        org.joda.time.PeriodType periodType19 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology20 = null;
        org.joda.time.Period period21 = duration15.toPeriod(periodType19, chronology20);
        org.joda.time.Duration duration24 = duration15.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration26 = org.joda.time.Duration.standardMinutes((-1L));
        long long27 = duration26.getStandardMinutes();
        org.joda.time.Duration duration29 = org.joda.time.Duration.standardMinutes((-1L));
        long long30 = duration29.getStandardMinutes();
        boolean boolean31 = duration26.isLongerThan((org.joda.time.ReadableDuration) duration29);
        org.joda.time.Duration duration33 = duration29.withMillis((long) 1);
        boolean boolean34 = duration24.isShorterThan((org.joda.time.ReadableDuration) duration29);
        boolean boolean35 = duration9.isLongerThan((org.joda.time.ReadableDuration) duration29);
        org.joda.time.Duration duration37 = org.joda.time.Duration.standardMinutes((-1L));
        long long38 = duration37.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant39 = null;
        org.joda.time.Period period40 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration37, readableInstant39);
        org.joda.time.PeriodType periodType41 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology42 = null;
        org.joda.time.Period period43 = duration37.toPeriod(periodType41, chronology42);
        org.joda.time.Duration duration44 = duration37.toDuration();
        boolean boolean45 = duration9.isEqual((org.joda.time.ReadableDuration) duration37);
        org.joda.time.Duration duration47 = org.joda.time.Duration.standardMinutes((-1L));
        long long48 = duration47.getStandardMinutes();
        org.joda.time.Duration duration50 = org.joda.time.Duration.standardMinutes((-1L));
        long long51 = duration50.getStandardMinutes();
        boolean boolean52 = duration47.isLongerThan((org.joda.time.ReadableDuration) duration50);
        org.joda.time.Duration duration53 = duration9.plus((org.joda.time.ReadableDuration) duration50);
        org.joda.time.Duration duration56 = duration50.withDurationAdded((long) 0, (int) (byte) 10);
        org.joda.time.Duration duration58 = org.joda.time.Duration.standardMinutes((-1L));
        long long59 = duration58.getStandardMinutes();
        org.joda.time.Duration duration61 = org.joda.time.Duration.standardMinutes((-1L));
        long long62 = duration61.getStandardMinutes();
        boolean boolean63 = duration58.isLongerThan((org.joda.time.ReadableDuration) duration61);
        org.joda.time.Duration duration65 = duration61.withMillis((long) 1);
        org.joda.time.Duration duration66 = duration56.plus((org.joda.time.ReadableDuration) duration65);
        org.joda.time.Duration duration68 = new org.joda.time.Duration((-2L));
        boolean boolean69 = duration56.isLongerThan((org.joda.time.ReadableDuration) duration68);
        org.joda.time.ReadableInstant readableInstant70 = null;
        org.joda.time.MutablePeriod mutablePeriod71 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration56, readableInstant70);
        org.joda.time.Duration duration73 = duration56.withMillis((-1L));
        org.joda.time.Period period74 = new org.joda.time.Period(readableInstant4, (org.joda.time.ReadableDuration) duration56);
        long long75 = duration56.getMillis();
        org.joda.time.PeriodType periodType77 = org.joda.time.PeriodType.months();
        org.joda.time.MutablePeriod mutablePeriod78 = new org.joda.time.MutablePeriod((long) (byte) 100, periodType77);
        org.joda.time.Period period80 = org.joda.time.Period.seconds((int) '#');
        org.joda.time.Period period81 = period80.normalizedStandard();
        org.joda.time.DurationFieldType durationFieldType82 = org.joda.time.DurationFieldType.years();
        int int83 = period80.get(durationFieldType82);
        int int84 = periodType77.indexOf(durationFieldType82);
        org.joda.time.Period period85 = duration56.toPeriod(periodType77);
        org.joda.time.Period period87 = org.joda.time.Period.seconds((int) (byte) 0);
        int int88 = period87.size();
        org.joda.time.DurationFieldType durationFieldType89 = org.joda.time.DurationFieldType.millis();
        int int90 = period87.get(durationFieldType89);
        int int91 = periodType77.indexOf(durationFieldType89);
        org.joda.time.Period period92 = new org.joda.time.Period((-59909L), (long) (-2), periodType77);
        org.joda.time.MutablePeriod mutablePeriod93 = new org.joda.time.MutablePeriod((-6060000L), (-16L), periodType77);
        org.junit.Assert.assertNotNull(duration6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + (-1L) + "'", long10 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertNotNull(duration15);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + (-1L) + "'", long16 == (-1L));
        org.junit.Assert.assertNotNull(periodType19);
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertNotNull(duration24);
        org.junit.Assert.assertNotNull(duration26);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + (-1L) + "'", long27 == (-1L));
        org.junit.Assert.assertNotNull(duration29);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + (-1L) + "'", long30 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(duration33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(duration37);
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + (-1L) + "'", long38 == (-1L));
        org.junit.Assert.assertNotNull(periodType41);
        org.junit.Assert.assertNotNull(period43);
        org.junit.Assert.assertNotNull(duration44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(duration47);
        org.junit.Assert.assertTrue("'" + long48 + "' != '" + (-1L) + "'", long48 == (-1L));
        org.junit.Assert.assertNotNull(duration50);
        org.junit.Assert.assertTrue("'" + long51 + "' != '" + (-1L) + "'", long51 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(duration53);
        org.junit.Assert.assertNotNull(duration56);
        org.junit.Assert.assertNotNull(duration58);
        org.junit.Assert.assertTrue("'" + long59 + "' != '" + (-1L) + "'", long59 == (-1L));
        org.junit.Assert.assertNotNull(duration61);
        org.junit.Assert.assertTrue("'" + long62 + "' != '" + (-1L) + "'", long62 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(duration65);
        org.junit.Assert.assertNotNull(duration66);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(duration73);
        org.junit.Assert.assertTrue("'" + long75 + "' != '" + (-60000L) + "'", long75 == (-60000L));
        org.junit.Assert.assertNotNull(periodType77);
        org.junit.Assert.assertNotNull(period80);
        org.junit.Assert.assertNotNull(period81);
        org.junit.Assert.assertNotNull(durationFieldType82);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 0 + "'", int83 == 0);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + (-1) + "'", int84 == (-1));
        org.junit.Assert.assertNotNull(period85);
        org.junit.Assert.assertNotNull(period87);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + 8 + "'", int88 == 8);
        org.junit.Assert.assertNotNull(durationFieldType89);
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + 0 + "'", int90 == 0);
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + (-1) + "'", int91 == (-1));
    }

    @Test
    public void test17705() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17705");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.Duration duration2 = org.joda.time.Duration.standardMinutes((-1L));
        long long3 = duration2.getStandardMinutes();
        org.joda.time.Duration duration5 = org.joda.time.Duration.standardMinutes((-1L));
        long long6 = duration5.getStandardMinutes();
        boolean boolean7 = duration2.isLongerThan((org.joda.time.ReadableDuration) duration5);
        org.joda.time.Duration duration9 = duration5.withMillis(1L);
        org.joda.time.Period period10 = new org.joda.time.Period(readableInstant0, (org.joda.time.ReadableDuration) duration5);
        org.joda.time.DurationFieldType durationFieldType11 = org.joda.time.DurationFieldType.years();
        java.lang.String str12 = durationFieldType11.getName();
        org.joda.time.Chronology chronology13 = null;
        boolean boolean14 = durationFieldType11.isSupported(chronology13);
        org.joda.time.Period period16 = period10.withFieldAdded(durationFieldType11, 0);
        org.joda.time.Period period18 = period10.plusDays((int) (short) 0);
        org.joda.time.Period period20 = period10.plusMonths((int) 'a');
        org.joda.time.Period period22 = period20.withMillis((-2));
        org.junit.Assert.assertNotNull(duration2);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + (-1L) + "'", long3 == (-1L));
        org.junit.Assert.assertNotNull(duration5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertNotNull(durationFieldType11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "years" + "'", str12, "years");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertNotNull(period18);
        org.junit.Assert.assertNotNull(period20);
        org.junit.Assert.assertNotNull(period22);
    }

    @Test
    public void test17706() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17706");
        org.joda.time.Period period2 = new org.joda.time.Period((long) 34, (long) (-97));
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.Duration duration4 = period2.toDurationTo(readableInstant3);
        org.joda.time.Duration duration6 = org.joda.time.Duration.standardSeconds(36000L);
        long long7 = duration6.getStandardDays();
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.Duration duration10 = org.joda.time.Duration.standardMinutes((-1L));
        long long11 = duration10.getStandardMinutes();
        org.joda.time.Duration duration13 = org.joda.time.Duration.standardMinutes((-1L));
        long long14 = duration13.getStandardMinutes();
        boolean boolean15 = duration10.isLongerThan((org.joda.time.ReadableDuration) duration13);
        org.joda.time.Period period16 = duration13.toPeriod();
        org.joda.time.Minutes minutes17 = duration13.toStandardMinutes();
        org.joda.time.ReadableDuration readableDuration18 = null;
        boolean boolean19 = duration13.isEqual(readableDuration18);
        org.joda.time.ReadableInstant readableInstant20 = null;
        org.joda.time.PeriodType periodType21 = org.joda.time.PeriodType.dayTime();
        org.joda.time.DurationFieldType durationFieldType22 = org.joda.time.DurationFieldType.days();
        int int23 = periodType21.indexOf(durationFieldType22);
        org.joda.time.Period period24 = duration13.toPeriodFrom(readableInstant20, periodType21);
        org.joda.time.Period period26 = period24.withHours((-1));
        org.joda.time.Period period27 = period26.negated();
        org.joda.time.PeriodType periodType28 = period26.getPeriodType();
        org.joda.time.PeriodType periodType29 = periodType28.withMillisRemoved();
        org.joda.time.Period period30 = duration6.toPeriodFrom(readableInstant8, periodType29);
        boolean boolean31 = duration4.isEqual((org.joda.time.ReadableDuration) duration6);
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertNotNull(duration6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 0L + "'", long7 == 0L);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + (-1L) + "'", long11 == (-1L));
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + (-1L) + "'", long14 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(periodType21);
        org.junit.Assert.assertNotNull(durationFieldType22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(period24);
        org.junit.Assert.assertNotNull(period26);
        org.junit.Assert.assertNotNull(period27);
        org.junit.Assert.assertNotNull(periodType28);
        org.junit.Assert.assertNotNull(periodType29);
        org.junit.Assert.assertNotNull(period30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
    }

    @Test
    public void test17707() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17707");
        org.joda.time.format.PeriodPrinter periodPrinter3 = null;
        org.joda.time.format.PeriodParser periodParser4 = null;
        org.joda.time.format.PeriodFormatter periodFormatter5 = new org.joda.time.format.PeriodFormatter(periodPrinter3, periodParser4);
        org.joda.time.format.PeriodPrinter periodPrinter6 = periodFormatter5.getPrinter();
        boolean boolean7 = periodFormatter5.isPrinter();
        org.joda.time.PeriodType periodType8 = org.joda.time.PeriodType.standard();
        org.joda.time.PeriodType periodType9 = periodType8.withMinutesRemoved();
        org.joda.time.PeriodType periodType10 = periodType9.withMillisRemoved();
        org.joda.time.format.PeriodFormatter periodFormatter11 = periodFormatter5.withParseType(periodType9);
        org.joda.time.MutablePeriod mutablePeriod12 = new org.joda.time.MutablePeriod(10L, periodType9);
        org.joda.time.PeriodType periodType13 = periodType9.withMillisRemoved();
        org.joda.time.Period period14 = new org.joda.time.Period(10L, 2199L, periodType13);
        org.joda.time.Period period16 = period14.minusHours(108);
        org.junit.Assert.assertNull(periodPrinter6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(periodType8);
        org.junit.Assert.assertNotNull(periodType9);
        org.junit.Assert.assertNotNull(periodType10);
        org.junit.Assert.assertNotNull(periodFormatter11);
        org.junit.Assert.assertNotNull(periodType13);
        org.junit.Assert.assertNotNull(period16);
    }

    @Test
    public void test17708() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17708");
        org.joda.time.PeriodType periodType2 = null;
        org.joda.time.Chronology chronology3 = null;
        org.joda.time.Period period4 = new org.joda.time.Period((-2L), (-60000L), periodType2, chronology3);
        org.joda.time.Period period6 = period4.withDays((int) '4');
        org.joda.time.Period period8 = period4.minusMonths((int) (byte) 1);
        org.joda.time.Period period10 = period8.minusYears((-935));
        org.joda.time.Duration duration12 = org.joda.time.Duration.standardMinutes((-1L));
        long long13 = duration12.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant14 = null;
        org.joda.time.Period period15 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration12, readableInstant14);
        org.joda.time.PeriodType periodType16 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology17 = null;
        org.joda.time.Period period18 = duration12.toPeriod(periodType16, chronology17);
        org.joda.time.Duration duration21 = duration12.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration23 = org.joda.time.Duration.standardHours((long) 10);
        org.joda.time.Duration duration25 = org.joda.time.Duration.standardMinutes((-1L));
        long long26 = duration25.getStandardMinutes();
        org.joda.time.Duration duration28 = org.joda.time.Duration.standardMinutes((-1L));
        long long29 = duration28.getStandardMinutes();
        boolean boolean30 = duration25.isLongerThan((org.joda.time.ReadableDuration) duration28);
        org.joda.time.Period period31 = duration28.toPeriod();
        org.joda.time.Minutes minutes32 = duration28.toStandardMinutes();
        boolean boolean33 = duration23.isEqual((org.joda.time.ReadableDuration) duration28);
        boolean boolean34 = duration12.isShorterThan((org.joda.time.ReadableDuration) duration23);
        org.joda.time.Minutes minutes35 = duration12.toStandardMinutes();
        org.joda.time.Period period37 = org.joda.time.Period.seconds((int) '#');
        int int38 = period37.getMillis();
        org.joda.time.Period period40 = period37.withMillis((int) '#');
        org.joda.time.DurationFieldType durationFieldType41 = org.joda.time.DurationFieldType.halfdays();
        boolean boolean42 = period37.isSupported(durationFieldType41);
        org.joda.time.ReadableInstant readableInstant43 = null;
        org.joda.time.Duration duration44 = period37.toDurationTo(readableInstant43);
        boolean boolean45 = duration12.isShorterThan((org.joda.time.ReadableDuration) duration44);
        boolean boolean46 = period10.equals((java.lang.Object) duration44);
        org.joda.time.Period period48 = period10.minusMinutes(0);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + (-1L) + "'", long13 == (-1L));
        org.junit.Assert.assertNotNull(periodType16);
        org.junit.Assert.assertNotNull(period18);
        org.junit.Assert.assertNotNull(duration21);
        org.junit.Assert.assertNotNull(duration23);
        org.junit.Assert.assertNotNull(duration25);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + (-1L) + "'", long26 == (-1L));
        org.junit.Assert.assertNotNull(duration28);
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + (-1L) + "'", long29 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(period31);
        org.junit.Assert.assertNotNull(minutes32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(minutes35);
        org.junit.Assert.assertNotNull(period37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertNotNull(period40);
        org.junit.Assert.assertNotNull(durationFieldType41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(duration44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(period48);
    }

    @Test
    public void test17709() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17709");
        org.joda.time.ReadableInstant readableInstant10 = null;
        org.joda.time.ReadableInstant readableInstant11 = null;
        org.joda.time.PeriodType periodType12 = org.joda.time.PeriodType.days();
        org.joda.time.Period period13 = new org.joda.time.Period(readableInstant10, readableInstant11, periodType12);
        org.joda.time.Chronology chronology14 = null;
        org.joda.time.MutablePeriod mutablePeriod15 = new org.joda.time.MutablePeriod((long) (byte) 1, (long) ' ', periodType12, chronology14);
        org.joda.time.PeriodType periodType16 = periodType12.withMillisRemoved();
        org.joda.time.PeriodType periodType17 = periodType16.withDaysRemoved();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.MutablePeriod mutablePeriod18 = new org.joda.time.MutablePeriod((-520), 52, (-59), 864000, 101, 35, 0, 60, periodType17);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Period does not support field 'years'");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(periodType12);
        org.junit.Assert.assertNotNull(periodType16);
        org.junit.Assert.assertNotNull(periodType17);
    }

    @Test
    public void test17710() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17710");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.MutablePeriod mutablePeriod3 = new org.joda.time.MutablePeriod(0L, (long) 32, chronology2);
        mutablePeriod3.setValue(1, 0);
        mutablePeriod3.addDays((-99));
        org.joda.time.ReadableInstant readableInstant9 = null;
        org.joda.time.ReadableInstant readableInstant10 = null;
        org.joda.time.PeriodType periodType11 = org.joda.time.PeriodType.yearMonthDay();
        org.joda.time.MutablePeriod mutablePeriod12 = new org.joda.time.MutablePeriod(readableInstant9, readableInstant10, periodType11);
        mutablePeriod12.addDays(1);
        org.joda.time.MutablePeriod mutablePeriod17 = new org.joda.time.MutablePeriod((-1L), 0L);
        org.joda.time.Chronology chronology20 = null;
        org.joda.time.MutablePeriod mutablePeriod21 = new org.joda.time.MutablePeriod((long) 100, 10L, chronology20);
        org.joda.time.Duration duration23 = org.joda.time.Duration.standardSeconds((long) 2);
        org.joda.time.ReadableInstant readableInstant24 = null;
        org.joda.time.Interval interval25 = duration23.toIntervalTo(readableInstant24);
        mutablePeriod21.add((org.joda.time.ReadableInterval) interval25);
        mutablePeriod17.setPeriod((org.joda.time.ReadableInterval) interval25);
        mutablePeriod12.add((org.joda.time.ReadableInterval) interval25);
        mutablePeriod3.add((org.joda.time.ReadableInterval) interval25);
        int int30 = mutablePeriod3.getSeconds();
        org.junit.Assert.assertNotNull(periodType11);
        org.junit.Assert.assertNotNull(duration23);
        org.junit.Assert.assertNotNull(interval25);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 2 + "'", int30 == 2);
    }

    @Test
    public void test17711() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17711");
        org.joda.time.Period period1 = org.joda.time.Period.seconds((int) '#');
        int int2 = period1.getMillis();
        org.joda.time.DurationFieldType durationFieldType3 = org.joda.time.DurationFieldType.years();
        org.joda.time.Period period5 = period1.withField(durationFieldType3, (int) (short) 10);
        int int6 = period5.getDays();
        org.joda.time.Period period7 = period5.normalizedStandard();
        org.joda.time.MutablePeriod mutablePeriod12 = new org.joda.time.MutablePeriod(5, 35, 35, (int) (short) 10);
        org.joda.time.Period period14 = org.joda.time.Period.seconds((int) '#');
        int int15 = period14.getMillis();
        org.joda.time.Period period17 = period14.withMillis((int) '#');
        int int18 = period14.size();
        org.joda.time.ReadableInstant readableInstant19 = null;
        org.joda.time.Duration duration21 = org.joda.time.Duration.standardMinutes((-1L));
        long long22 = duration21.getStandardMinutes();
        org.joda.time.Period period23 = duration21.toPeriod();
        org.joda.time.Duration duration25 = org.joda.time.Duration.standardMinutes((-1L));
        long long26 = duration25.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant27 = null;
        org.joda.time.Period period28 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration25, readableInstant27);
        org.joda.time.PeriodType periodType29 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology30 = null;
        org.joda.time.Period period31 = duration25.toPeriod(periodType29, chronology30);
        org.joda.time.Period period32 = duration21.toPeriod(periodType29);
        org.joda.time.Duration duration34 = org.joda.time.Duration.standardMinutes((-1L));
        long long35 = duration34.getStandardMinutes();
        boolean boolean36 = duration21.isLongerThan((org.joda.time.ReadableDuration) duration34);
        org.joda.time.PeriodType periodType37 = org.joda.time.PeriodType.weeks();
        org.joda.time.Period period38 = new org.joda.time.Period(readableInstant19, (org.joda.time.ReadableDuration) duration34, periodType37);
        org.joda.time.Chronology chronology39 = null;
        org.joda.time.Period period40 = duration34.toPeriod(chronology39);
        org.joda.time.Hours hours41 = period40.toStandardHours();
        org.joda.time.Period period43 = period40.plusMinutes((int) (byte) -1);
        org.joda.time.Period period52 = new org.joda.time.Period((int) (byte) 1, 100, (int) 'a', (int) (short) 100, (int) (short) 0, 0, 0, (int) (short) 1);
        org.joda.time.Period period53 = period40.minus((org.joda.time.ReadablePeriod) period52);
        org.joda.time.DurationFieldType durationFieldType54 = org.joda.time.DurationFieldType.hours();
        org.joda.time.Period period56 = period52.withField(durationFieldType54, 8);
        java.lang.String str57 = durationFieldType54.getName();
        boolean boolean58 = period14.isSupported(durationFieldType54);
        org.joda.time.DurationFieldType durationFieldType59 = org.joda.time.DurationFieldType.weekyears();
        int int60 = period14.get(durationFieldType59);
        int int61 = mutablePeriod12.get(durationFieldType59);
        org.joda.time.Chronology chronology62 = null;
        org.joda.time.DurationField durationField63 = durationFieldType59.getField(chronology62);
        int int64 = period7.indexOf(durationFieldType59);
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(durationFieldType3);
        org.junit.Assert.assertNotNull(period5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(period14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(period17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 8 + "'", int18 == 8);
        org.junit.Assert.assertNotNull(duration21);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + (-1L) + "'", long22 == (-1L));
        org.junit.Assert.assertNotNull(period23);
        org.junit.Assert.assertNotNull(duration25);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + (-1L) + "'", long26 == (-1L));
        org.junit.Assert.assertNotNull(periodType29);
        org.junit.Assert.assertNotNull(period31);
        org.junit.Assert.assertNotNull(period32);
        org.junit.Assert.assertNotNull(duration34);
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + (-1L) + "'", long35 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(periodType37);
        org.junit.Assert.assertNotNull(period40);
        org.junit.Assert.assertNotNull(hours41);
        org.junit.Assert.assertNotNull(period43);
        org.junit.Assert.assertNotNull(period53);
        org.junit.Assert.assertNotNull(durationFieldType54);
        org.junit.Assert.assertNotNull(period56);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "hours" + "'", str57, "hours");
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(durationFieldType59);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 0 + "'", int60 == 0);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 0 + "'", int61 == 0);
        org.junit.Assert.assertNotNull(durationField63);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + (-1) + "'", int64 == (-1));
    }

    @Test
    public void test17712() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17712");
        org.joda.time.Period period8 = new org.joda.time.Period((int) (short) 1, 0, 100, (-1), (int) (byte) -1, (int) (short) 100, (int) (short) 100, (int) ' ');
        org.joda.time.Period period10 = period8.minusYears((int) (short) 100);
        org.joda.time.Period period12 = period10.minusWeeks(8);
        org.joda.time.Period period14 = period12.plusMinutes(997);
        int int15 = period14.getYears();
        org.joda.time.Period period17 = period14.plusSeconds((int) (byte) 100);
        int int18 = period14.getMinutes();
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertNotNull(period14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-99) + "'", int15 == (-99));
        org.junit.Assert.assertNotNull(period17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1097 + "'", int18 == 1097);
    }

    @Test
    public void test17713() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17713");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardDays((long) (-102));
        long long2 = duration1.getStandardSeconds();
        long long3 = duration1.getMillis();
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + (-8812800L) + "'", long2 == (-8812800L));
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + (-8812800000L) + "'", long3 == (-8812800000L));
    }

    @Test
    public void test17714() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17714");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.Duration duration2 = org.joda.time.Duration.standardMinutes((-1L));
        long long3 = duration2.getStandardMinutes();
        org.joda.time.Duration duration5 = org.joda.time.Duration.standardMinutes((-1L));
        long long6 = duration5.getStandardMinutes();
        boolean boolean7 = duration2.isLongerThan((org.joda.time.ReadableDuration) duration5);
        org.joda.time.Duration duration9 = duration5.withMillis(1L);
        org.joda.time.Period period10 = new org.joda.time.Period(readableInstant0, (org.joda.time.ReadableDuration) duration5);
        org.joda.time.DurationFieldType durationFieldType11 = org.joda.time.DurationFieldType.years();
        java.lang.String str12 = durationFieldType11.getName();
        org.joda.time.Chronology chronology13 = null;
        boolean boolean14 = durationFieldType11.isSupported(chronology13);
        org.joda.time.Period period16 = period10.withFieldAdded(durationFieldType11, 0);
        org.joda.time.Period period18 = period16.withMinutes((int) (byte) -1);
        org.joda.time.Period period20 = period18.minusMinutes((int) '4');
        org.joda.time.Period period22 = period18.minusYears(35);
        org.joda.time.Period period24 = period18.plusWeeks((int) ' ');
        org.joda.time.Period period26 = period24.plusYears((int) (byte) 1);
        org.joda.time.Period period28 = period26.plusWeeks((-17));
        org.junit.Assert.assertNotNull(duration2);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + (-1L) + "'", long3 == (-1L));
        org.junit.Assert.assertNotNull(duration5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertNotNull(durationFieldType11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "years" + "'", str12, "years");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertNotNull(period18);
        org.junit.Assert.assertNotNull(period20);
        org.junit.Assert.assertNotNull(period22);
        org.junit.Assert.assertNotNull(period24);
        org.junit.Assert.assertNotNull(period26);
        org.junit.Assert.assertNotNull(period28);
    }

    @Test
    public void test17715() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17715");
        org.joda.time.ReadableInstant readableInstant2 = null;
        org.joda.time.Duration duration4 = org.joda.time.Duration.standardMinutes((-1L));
        long long5 = duration4.getStandardMinutes();
        org.joda.time.Duration duration7 = org.joda.time.Duration.standardMinutes((-1L));
        long long8 = duration7.getStandardMinutes();
        boolean boolean9 = duration4.isLongerThan((org.joda.time.ReadableDuration) duration7);
        org.joda.time.Period period10 = duration7.toPeriod();
        org.joda.time.Minutes minutes11 = duration7.toStandardMinutes();
        org.joda.time.Duration duration13 = org.joda.time.Duration.standardMinutes((-1L));
        long long14 = duration13.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant15 = null;
        org.joda.time.Period period16 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration13, readableInstant15);
        org.joda.time.PeriodType periodType17 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology18 = null;
        org.joda.time.Period period19 = duration13.toPeriod(periodType17, chronology18);
        org.joda.time.Duration duration22 = duration13.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration23 = duration7.plus((org.joda.time.ReadableDuration) duration22);
        org.joda.time.PeriodType periodType25 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period26 = new org.joda.time.Period(10L, periodType25);
        org.joda.time.PeriodType periodType27 = periodType25.withWeeksRemoved();
        org.joda.time.MutablePeriod mutablePeriod28 = new org.joda.time.MutablePeriod(readableInstant2, (org.joda.time.ReadableDuration) duration22, periodType27);
        org.joda.time.Chronology chronology29 = null;
        org.joda.time.MutablePeriod mutablePeriod30 = new org.joda.time.MutablePeriod((-36000000L), (-58500L), periodType27, chronology29);
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + (-1L) + "'", long5 == (-1L));
        org.junit.Assert.assertNotNull(duration7);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + (-1L) + "'", long8 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + (-1L) + "'", long14 == (-1L));
        org.junit.Assert.assertNotNull(periodType17);
        org.junit.Assert.assertNotNull(period19);
        org.junit.Assert.assertNotNull(duration22);
        org.junit.Assert.assertNotNull(duration23);
        org.junit.Assert.assertNotNull(periodType25);
        org.junit.Assert.assertNotNull(periodType27);
    }

    @Test
    public void test17716() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17716");
        org.joda.time.MutablePeriod mutablePeriod2 = new org.joda.time.MutablePeriod((long) 1, (long) (-90));
        int int3 = mutablePeriod2.getMonths();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
    }

    @Test
    public void test17717() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17717");
        org.joda.time.PeriodType periodType2 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period3 = new org.joda.time.Period(10L, periodType2);
        org.joda.time.PeriodType periodType4 = periodType2.withWeeksRemoved();
        org.joda.time.MutablePeriod mutablePeriod5 = new org.joda.time.MutablePeriod((long) 10, periodType4);
        org.joda.time.Chronology chronology7 = null;
        mutablePeriod5.add((long) (byte) 0, chronology7);
        org.joda.time.Duration duration10 = org.joda.time.Duration.standardMinutes((-1L));
        long long11 = duration10.getStandardMinutes();
        org.joda.time.Duration duration13 = org.joda.time.Duration.standardMinutes((-1L));
        long long14 = duration13.getStandardMinutes();
        boolean boolean15 = duration10.isLongerThan((org.joda.time.ReadableDuration) duration13);
        org.joda.time.Period period16 = duration13.toPeriod();
        org.joda.time.Minutes minutes17 = duration13.toStandardMinutes();
        org.joda.time.Duration duration19 = org.joda.time.Duration.standardMinutes((-1L));
        long long20 = duration19.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant21 = null;
        org.joda.time.Period period22 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration19, readableInstant21);
        org.joda.time.PeriodType periodType23 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology24 = null;
        org.joda.time.Period period25 = duration19.toPeriod(periodType23, chronology24);
        org.joda.time.Duration duration28 = duration19.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration29 = duration13.plus((org.joda.time.ReadableDuration) duration28);
        org.joda.time.ReadableInstant readableInstant30 = null;
        org.joda.time.Duration duration34 = org.joda.time.Duration.standardMinutes((-1L));
        long long35 = duration34.getStandardMinutes();
        org.joda.time.Period period36 = duration34.toPeriod();
        org.joda.time.Duration duration38 = org.joda.time.Duration.standardMinutes((-1L));
        long long39 = duration38.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant40 = null;
        org.joda.time.Period period41 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration38, readableInstant40);
        org.joda.time.PeriodType periodType42 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology43 = null;
        org.joda.time.Period period44 = duration38.toPeriod(periodType42, chronology43);
        org.joda.time.Period period45 = duration34.toPeriod(periodType42);
        org.joda.time.Chronology chronology46 = null;
        org.joda.time.MutablePeriod mutablePeriod47 = new org.joda.time.MutablePeriod(1L, (long) (byte) 100, periodType42, chronology46);
        org.joda.time.Period period48 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration13, readableInstant30, periodType42);
        long long49 = duration13.getStandardMinutes();
        org.joda.time.Chronology chronology52 = null;
        org.joda.time.MutablePeriod mutablePeriod53 = new org.joda.time.MutablePeriod((long) 100, 10L, chronology52);
        int int54 = mutablePeriod53.getYears();
        mutablePeriod53.addMinutes(97);
        org.joda.time.ReadableInstant readableInstant57 = null;
        org.joda.time.ReadableInstant readableInstant58 = null;
        org.joda.time.MutablePeriod mutablePeriod59 = new org.joda.time.MutablePeriod(readableInstant57, readableInstant58);
        mutablePeriod59.setPeriod((long) 10, (long) 10);
        org.joda.time.MutablePeriod mutablePeriod63 = mutablePeriod59.toMutablePeriod();
        org.joda.time.Period period65 = org.joda.time.Period.minutes(34);
        boolean boolean66 = mutablePeriod63.equals((java.lang.Object) 34);
        mutablePeriod53.setPeriod((org.joda.time.ReadablePeriod) mutablePeriod63);
        boolean boolean68 = duration13.equals((java.lang.Object) mutablePeriod53);
        mutablePeriod53.setMonths((-99));
        boolean boolean71 = mutablePeriod5.equals((java.lang.Object) mutablePeriod53);
        org.joda.time.ReadableInstant readableInstant72 = null;
        org.joda.time.ReadableInstant readableInstant73 = null;
        mutablePeriod5.setPeriod(readableInstant72, readableInstant73);
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(periodType4);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + (-1L) + "'", long11 == (-1L));
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + (-1L) + "'", long14 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertNotNull(duration19);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + (-1L) + "'", long20 == (-1L));
        org.junit.Assert.assertNotNull(periodType23);
        org.junit.Assert.assertNotNull(period25);
        org.junit.Assert.assertNotNull(duration28);
        org.junit.Assert.assertNotNull(duration29);
        org.junit.Assert.assertNotNull(duration34);
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + (-1L) + "'", long35 == (-1L));
        org.junit.Assert.assertNotNull(period36);
        org.junit.Assert.assertNotNull(duration38);
        org.junit.Assert.assertTrue("'" + long39 + "' != '" + (-1L) + "'", long39 == (-1L));
        org.junit.Assert.assertNotNull(periodType42);
        org.junit.Assert.assertNotNull(period44);
        org.junit.Assert.assertNotNull(period45);
        org.junit.Assert.assertTrue("'" + long49 + "' != '" + (-1L) + "'", long49 == (-1L));
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod63);
        org.junit.Assert.assertNotNull(period65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
    }

    @Test
    public void test17718() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17718");
        org.joda.time.Chronology chronology1 = null;
        org.joda.time.MutablePeriod mutablePeriod2 = new org.joda.time.MutablePeriod(1L, chronology1);
        org.joda.time.Period period4 = org.joda.time.Period.seconds((int) '#');
        mutablePeriod2.setPeriod((org.joda.time.ReadablePeriod) period4);
        mutablePeriod2.addMillis((int) (short) 1);
        org.joda.time.MutablePeriod mutablePeriod8 = mutablePeriod2.toMutablePeriod();
        mutablePeriod8.addMonths((int) (short) -1);
        int[] intArray11 = mutablePeriod8.getValues();
        org.joda.time.MutablePeriod mutablePeriod12 = mutablePeriod8.toMutablePeriod();
        mutablePeriod8.addSeconds(0);
        int int15 = mutablePeriod8.getSeconds();
        org.joda.time.ReadableInstant readableInstant16 = null;
        org.joda.time.Duration duration18 = org.joda.time.Duration.standardMinutes((-1L));
        long long19 = duration18.getStandardMinutes();
        org.joda.time.Period period20 = duration18.toPeriod();
        org.joda.time.Duration duration22 = org.joda.time.Duration.standardMinutes((-1L));
        long long23 = duration22.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant24 = null;
        org.joda.time.Period period25 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration22, readableInstant24);
        org.joda.time.PeriodType periodType26 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology27 = null;
        org.joda.time.Period period28 = duration22.toPeriod(periodType26, chronology27);
        org.joda.time.Period period29 = duration18.toPeriod(periodType26);
        org.joda.time.Duration duration31 = org.joda.time.Duration.standardMinutes((-1L));
        long long32 = duration31.getStandardMinutes();
        boolean boolean33 = duration18.isLongerThan((org.joda.time.ReadableDuration) duration31);
        org.joda.time.PeriodType periodType34 = org.joda.time.PeriodType.weeks();
        org.joda.time.Period period35 = new org.joda.time.Period(readableInstant16, (org.joda.time.ReadableDuration) duration31, periodType34);
        org.joda.time.Chronology chronology36 = null;
        org.joda.time.Period period37 = duration31.toPeriod(chronology36);
        org.joda.time.Hours hours38 = period37.toStandardHours();
        org.joda.time.Period period40 = period37.plusMinutes((int) (byte) -1);
        org.joda.time.Period period49 = new org.joda.time.Period((int) (byte) 1, 100, (int) 'a', (int) (short) 100, (int) (short) 0, 0, 0, (int) (short) 1);
        org.joda.time.Period period50 = period37.minus((org.joda.time.ReadablePeriod) period49);
        org.joda.time.DurationFieldType durationFieldType51 = org.joda.time.DurationFieldType.hours();
        org.joda.time.Period period53 = period49.withField(durationFieldType51, 8);
        org.joda.time.Chronology chronology54 = null;
        org.joda.time.DurationField durationField55 = durationFieldType51.getField(chronology54);
        int int56 = mutablePeriod8.get(durationFieldType51);
        org.joda.time.Chronology chronology57 = null;
        boolean boolean58 = durationFieldType51.isSupported(chronology57);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.MutablePeriod mutablePeriod59 = new org.joda.time.MutablePeriod((java.lang.Object) boolean58);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: No period converter found for type: java.lang.Boolean");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(mutablePeriod8);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[0, -1, 0, 0, 0, 0, 35, 1]");
        org.junit.Assert.assertNotNull(mutablePeriod12);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 35 + "'", int15 == 35);
        org.junit.Assert.assertNotNull(duration18);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + (-1L) + "'", long19 == (-1L));
        org.junit.Assert.assertNotNull(period20);
        org.junit.Assert.assertNotNull(duration22);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + (-1L) + "'", long23 == (-1L));
        org.junit.Assert.assertNotNull(periodType26);
        org.junit.Assert.assertNotNull(period28);
        org.junit.Assert.assertNotNull(period29);
        org.junit.Assert.assertNotNull(duration31);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + (-1L) + "'", long32 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(periodType34);
        org.junit.Assert.assertNotNull(period37);
        org.junit.Assert.assertNotNull(hours38);
        org.junit.Assert.assertNotNull(period40);
        org.junit.Assert.assertNotNull(period50);
        org.junit.Assert.assertNotNull(durationFieldType51);
        org.junit.Assert.assertNotNull(period53);
        org.junit.Assert.assertNotNull(durationField55);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
    }

    @Test
    public void test17719() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17719");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.Duration duration2 = org.joda.time.Duration.standardMinutes((-1L));
        long long3 = duration2.getStandardMinutes();
        org.joda.time.Period period4 = duration2.toPeriod();
        org.joda.time.Duration duration6 = org.joda.time.Duration.standardMinutes((-1L));
        long long7 = duration6.getStandardMinutes();
        org.joda.time.Duration duration9 = org.joda.time.Duration.standardMinutes((-1L));
        long long10 = duration9.getStandardMinutes();
        boolean boolean11 = duration6.isLongerThan((org.joda.time.ReadableDuration) duration9);
        org.joda.time.Duration duration13 = duration9.withMillis(1L);
        org.joda.time.Duration duration15 = org.joda.time.Duration.standardMinutes((-1L));
        long long16 = duration15.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant17 = null;
        org.joda.time.Period period18 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration15, readableInstant17);
        org.joda.time.PeriodType periodType19 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology20 = null;
        org.joda.time.Period period21 = duration15.toPeriod(periodType19, chronology20);
        org.joda.time.Duration duration22 = duration15.toDuration();
        int int23 = duration9.compareTo((org.joda.time.ReadableDuration) duration15);
        boolean boolean24 = duration2.isLongerThan((org.joda.time.ReadableDuration) duration9);
        org.joda.time.Duration duration28 = org.joda.time.Duration.standardMinutes((-1L));
        long long29 = duration28.getStandardMinutes();
        org.joda.time.Period period30 = duration28.toPeriod();
        org.joda.time.Duration duration32 = org.joda.time.Duration.standardMinutes((-1L));
        long long33 = duration32.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant34 = null;
        org.joda.time.Period period35 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration32, readableInstant34);
        org.joda.time.PeriodType periodType36 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology37 = null;
        org.joda.time.Period period38 = duration32.toPeriod(periodType36, chronology37);
        org.joda.time.Period period39 = duration28.toPeriod(periodType36);
        org.joda.time.Chronology chronology40 = null;
        org.joda.time.MutablePeriod mutablePeriod41 = new org.joda.time.MutablePeriod(1L, (long) (byte) 100, periodType36, chronology40);
        org.joda.time.PeriodType periodType42 = periodType36.withMillisRemoved();
        org.joda.time.PeriodType periodType43 = periodType42.withSecondsRemoved();
        org.joda.time.Period period44 = new org.joda.time.Period(readableInstant0, (org.joda.time.ReadableDuration) duration2, periodType43);
        org.joda.time.ReadableInstant readableInstant45 = null;
        org.joda.time.MutablePeriod mutablePeriod46 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration2, readableInstant45);
        mutablePeriod46.addSeconds(7);
        org.joda.time.MutablePeriod mutablePeriod49 = new org.joda.time.MutablePeriod();
        org.joda.time.ReadableInstant readableInstant50 = null;
        org.joda.time.Duration duration51 = mutablePeriod49.toDurationTo(readableInstant50);
        org.joda.time.MutablePeriod mutablePeriod52 = mutablePeriod49.toMutablePeriod();
        org.joda.time.Period period54 = org.joda.time.Period.minutes((int) (short) 0);
        org.joda.time.Period period56 = period54.minusDays((int) (byte) 10);
        org.joda.time.Period period58 = period56.withYears((int) (short) 10);
        org.joda.time.MutablePeriod mutablePeriod59 = period58.toMutablePeriod();
        org.joda.time.Period period61 = period58.plusWeeks((-60));
        mutablePeriod49.add((org.joda.time.ReadablePeriod) period61);
        mutablePeriod46.mergePeriod((org.joda.time.ReadablePeriod) period61);
        mutablePeriod46.addHours(10);
        mutablePeriod46.add((long) 8);
        org.junit.Assert.assertNotNull(duration2);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + (-1L) + "'", long3 == (-1L));
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(duration6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + (-1L) + "'", long10 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertNotNull(duration15);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + (-1L) + "'", long16 == (-1L));
        org.junit.Assert.assertNotNull(periodType19);
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertNotNull(duration22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(duration28);
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + (-1L) + "'", long29 == (-1L));
        org.junit.Assert.assertNotNull(period30);
        org.junit.Assert.assertNotNull(duration32);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + (-1L) + "'", long33 == (-1L));
        org.junit.Assert.assertNotNull(periodType36);
        org.junit.Assert.assertNotNull(period38);
        org.junit.Assert.assertNotNull(period39);
        org.junit.Assert.assertNotNull(periodType42);
        org.junit.Assert.assertNotNull(periodType43);
        org.junit.Assert.assertNotNull(duration51);
        org.junit.Assert.assertNotNull(mutablePeriod52);
        org.junit.Assert.assertNotNull(period54);
        org.junit.Assert.assertNotNull(period56);
        org.junit.Assert.assertNotNull(period58);
        org.junit.Assert.assertNotNull(mutablePeriod59);
        org.junit.Assert.assertNotNull(period61);
    }

    @Test
    public void test17720() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17720");
        org.joda.time.MutablePeriod mutablePeriod4 = new org.joda.time.MutablePeriod((int) (byte) -1, (-947), 5, 1);
    }

    @Test
    public void test17721() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17721");
        org.joda.time.format.PeriodPrinter periodPrinter0 = null;
        org.joda.time.format.PeriodParser periodParser1 = null;
        org.joda.time.format.PeriodFormatter periodFormatter2 = new org.joda.time.format.PeriodFormatter(periodPrinter0, periodParser1);
        org.joda.time.format.PeriodPrinter periodPrinter3 = periodFormatter2.getPrinter();
        org.joda.time.MutablePeriod mutablePeriod4 = new org.joda.time.MutablePeriod((java.lang.Object) periodPrinter3);
        org.joda.time.MutablePeriod mutablePeriod5 = mutablePeriod4.toMutablePeriod();
        org.joda.time.Duration duration7 = org.joda.time.Duration.standardMinutes((-1L));
        long long8 = duration7.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant9 = null;
        org.joda.time.Period period10 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration7, readableInstant9);
        org.joda.time.PeriodType periodType11 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology12 = null;
        org.joda.time.Period period13 = duration7.toPeriod(periodType11, chronology12);
        org.joda.time.Duration duration16 = duration7.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.ReadableInstant readableInstant17 = null;
        org.joda.time.ReadableInstant readableInstant18 = null;
        org.joda.time.Duration duration20 = org.joda.time.Duration.standardMinutes((-1L));
        long long21 = duration20.getStandardMinutes();
        org.joda.time.Period period22 = duration20.toPeriod();
        org.joda.time.Duration duration24 = org.joda.time.Duration.standardMinutes((-1L));
        long long25 = duration24.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant26 = null;
        org.joda.time.Period period27 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration24, readableInstant26);
        org.joda.time.PeriodType periodType28 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology29 = null;
        org.joda.time.Period period30 = duration24.toPeriod(periodType28, chronology29);
        org.joda.time.Period period31 = duration20.toPeriod(periodType28);
        org.joda.time.MutablePeriod mutablePeriod32 = new org.joda.time.MutablePeriod(readableInstant17, readableInstant18, periodType28);
        org.joda.time.Chronology chronology33 = null;
        org.joda.time.Period period34 = duration7.toPeriod(periodType28, chronology33);
        org.joda.time.PeriodType periodType35 = org.joda.time.PeriodType.seconds();
        org.joda.time.PeriodType periodType36 = periodType35.withMinutesRemoved();
        org.joda.time.Chronology chronology37 = null;
        org.joda.time.MutablePeriod mutablePeriod38 = new org.joda.time.MutablePeriod((java.lang.Object) duration7, periodType36, chronology37);
        java.lang.String str39 = periodType36.toString();
        org.joda.time.PeriodType periodType40 = periodType36.withSecondsRemoved();
        org.joda.time.Period period41 = new org.joda.time.Period((java.lang.Object) mutablePeriod4, periodType36);
        org.joda.time.Period period43 = org.joda.time.Period.hours((int) 'a');
        org.joda.time.DurationFieldType durationFieldType45 = period43.getFieldType((int) (short) 1);
        org.joda.time.Chronology chronology46 = null;
        org.joda.time.DurationField durationField47 = durationFieldType45.getField(chronology46);
        int int48 = periodType36.indexOf(durationFieldType45);
        org.joda.time.DurationFieldType durationFieldType49 = org.joda.time.DurationFieldType.minutes();
        java.lang.String str50 = durationFieldType49.toString();
        boolean boolean51 = periodType36.isSupported(durationFieldType49);
        java.lang.String str52 = periodType36.getName();
        org.joda.time.MutablePeriod mutablePeriod53 = new org.joda.time.MutablePeriod(periodType36);
        org.junit.Assert.assertNull(periodPrinter3);
        org.junit.Assert.assertNotNull(mutablePeriod5);
        org.junit.Assert.assertNotNull(duration7);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + (-1L) + "'", long8 == (-1L));
        org.junit.Assert.assertNotNull(periodType11);
        org.junit.Assert.assertNotNull(period13);
        org.junit.Assert.assertNotNull(duration16);
        org.junit.Assert.assertNotNull(duration20);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + (-1L) + "'", long21 == (-1L));
        org.junit.Assert.assertNotNull(period22);
        org.junit.Assert.assertNotNull(duration24);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + (-1L) + "'", long25 == (-1L));
        org.junit.Assert.assertNotNull(periodType28);
        org.junit.Assert.assertNotNull(period30);
        org.junit.Assert.assertNotNull(period31);
        org.junit.Assert.assertNotNull(period34);
        org.junit.Assert.assertNotNull(periodType35);
        org.junit.Assert.assertNotNull(periodType36);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "PeriodType[Seconds]" + "'", str39, "PeriodType[Seconds]");
        org.junit.Assert.assertNotNull(periodType40);
        org.junit.Assert.assertNotNull(period43);
        org.junit.Assert.assertNotNull(durationFieldType45);
        org.junit.Assert.assertNotNull(durationField47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
        org.junit.Assert.assertNotNull(durationFieldType49);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "minutes" + "'", str50, "minutes");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "Seconds" + "'", str52, "Seconds");
    }

    @Test
    public void test17722() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17722");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((-1L));
        long long2 = duration1.getStandardMinutes();
        org.joda.time.Duration duration4 = org.joda.time.Duration.standardMinutes((-1L));
        long long5 = duration4.getStandardMinutes();
        boolean boolean6 = duration1.isLongerThan((org.joda.time.ReadableDuration) duration4);
        long long7 = duration1.getStandardHours();
        org.joda.time.Duration duration9 = new org.joda.time.Duration(36000000L);
        org.joda.time.Duration duration11 = duration9.withMillis((long) 12);
        long long12 = duration9.getMillis();
        org.joda.time.Duration duration13 = duration1.minus((org.joda.time.ReadableDuration) duration9);
        org.joda.time.Duration duration14 = duration9.toDuration();
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + (-1L) + "'", long2 == (-1L));
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + (-1L) + "'", long5 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 0L + "'", long7 == 0L);
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 36000000L + "'", long12 == 36000000L);
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertNotNull(duration14);
    }

    @Test
    public void test17723() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17723");
        org.joda.time.Period period1 = org.joda.time.Period.years((int) (short) 1);
        org.joda.time.Period period3 = period1.minusMinutes((int) (short) 10);
        org.joda.time.Period period5 = period3.withWeeks((int) (byte) -1);
        org.joda.time.Period period7 = period3.plusHours((int) (short) -1);
        org.joda.time.Period period8 = period7.normalizedStandard();
        int int9 = period8.size();
        int int10 = period8.size();
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(period3);
        org.junit.Assert.assertNotNull(period5);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 8 + "'", int9 == 8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 8 + "'", int10 == 8);
    }

    @Test
    public void test17724() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17724");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((-1L));
        long long2 = duration1.getStandardMinutes();
        org.joda.time.Duration duration4 = org.joda.time.Duration.standardMinutes((-1L));
        long long5 = duration4.getStandardMinutes();
        boolean boolean6 = duration1.isLongerThan((org.joda.time.ReadableDuration) duration4);
        org.joda.time.Duration duration8 = duration4.withMillis((long) 1);
        org.joda.time.Chronology chronology10 = null;
        org.joda.time.MutablePeriod mutablePeriod11 = new org.joda.time.MutablePeriod(1L, chronology10);
        org.joda.time.Chronology chronology13 = null;
        org.joda.time.MutablePeriod mutablePeriod14 = new org.joda.time.MutablePeriod(1L, chronology13);
        mutablePeriod11.add((org.joda.time.ReadablePeriod) mutablePeriod14);
        boolean boolean16 = duration8.equals((java.lang.Object) mutablePeriod14);
        org.joda.time.Period period17 = duration8.toPeriod();
        org.joda.time.ReadableInstant readableInstant18 = null;
        org.joda.time.MutablePeriod mutablePeriod19 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration8, readableInstant18);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType21 = mutablePeriod19.getFieldType((-9));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: -9");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + (-1L) + "'", long2 == (-1L));
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + (-1L) + "'", long5 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(duration8);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(period17);
    }

    @Test
    public void test17725() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17725");
        org.joda.time.Period period1 = org.joda.time.Period.seconds((int) '#');
        int int2 = period1.getMillis();
        org.joda.time.Period period4 = period1.withMillis((int) '#');
        int int5 = period1.size();
        org.joda.time.Period period7 = period1.withMinutes(0);
        org.joda.time.Period period9 = period1.plusHours((int) (byte) 0);
        org.joda.time.Period period11 = period1.withYears(7);
        org.joda.time.Period period13 = period11.minusMinutes((int) (byte) 1);
        org.joda.time.Period period14 = period11.normalizedStandard();
        org.joda.time.Period period16 = period14.plusDays(35);
        int int17 = period14.getYears();
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 8 + "'", int5 == 8);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(period13);
        org.junit.Assert.assertNotNull(period14);
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 7 + "'", int17 == 7);
    }

    @Test
    public void test17726() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17726");
        org.joda.time.format.PeriodPrinter periodPrinter0 = null;
        org.joda.time.format.PeriodParser periodParser1 = null;
        org.joda.time.format.PeriodFormatter periodFormatter2 = new org.joda.time.format.PeriodFormatter(periodPrinter0, periodParser1);
        org.joda.time.format.PeriodPrinter periodPrinter3 = periodFormatter2.getPrinter();
        boolean boolean4 = periodFormatter2.isParser();
        java.util.Locale locale5 = periodFormatter2.getLocale();
        org.joda.time.PeriodType periodType6 = periodFormatter2.getParseType();
        java.util.Locale locale7 = null;
        org.joda.time.format.PeriodFormatter periodFormatter8 = periodFormatter2.withLocale(locale7);
        org.joda.time.format.PeriodParser periodParser9 = periodFormatter2.getParser();
        org.joda.time.format.PeriodPrinter periodPrinter10 = periodFormatter2.getPrinter();
        java.util.Locale locale11 = null;
        org.joda.time.format.PeriodFormatter periodFormatter12 = periodFormatter2.withLocale(locale11);
        boolean boolean13 = periodFormatter12.isParser();
        java.util.Locale locale14 = periodFormatter12.getLocale();
        org.joda.time.format.PeriodPrinter periodPrinter15 = periodFormatter12.getPrinter();
        org.junit.Assert.assertNull(periodPrinter3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(locale5);
        org.junit.Assert.assertNull(periodType6);
        org.junit.Assert.assertNotNull(periodFormatter8);
        org.junit.Assert.assertNull(periodParser9);
        org.junit.Assert.assertNull(periodPrinter10);
        org.junit.Assert.assertNotNull(periodFormatter12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(locale14);
        org.junit.Assert.assertNull(periodPrinter15);
    }

    @Test
    public void test17727() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17727");
        org.joda.time.Duration duration2 = new org.joda.time.Duration((long) (-1), 0L);
        org.joda.time.Duration duration4 = new org.joda.time.Duration((long) (-102));
        org.joda.time.Duration duration5 = duration4.toDuration();
        int int6 = duration2.compareTo((org.joda.time.ReadableDuration) duration4);
        long long7 = duration4.getMillis();
        org.junit.Assert.assertNotNull(duration5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-102L) + "'", long7 == (-102L));
    }

    @Test
    public void test17728() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17728");
        org.joda.time.Period period1 = new org.joda.time.Period((-172800L));
    }

    @Test
    public void test17729() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17729");
        org.joda.time.MutablePeriod mutablePeriod2 = new org.joda.time.MutablePeriod((-101L), 1L);
        org.joda.time.Duration duration6 = org.joda.time.Duration.standardMinutes((-1L));
        long long7 = duration6.getStandardMinutes();
        org.joda.time.Period period8 = duration6.toPeriod();
        java.lang.String str9 = duration6.toString();
        org.joda.time.ReadableInstant readableInstant11 = null;
        org.joda.time.ReadableInstant readableInstant12 = null;
        org.joda.time.Duration duration14 = org.joda.time.Duration.standardMinutes((-1L));
        long long15 = duration14.getStandardMinutes();
        org.joda.time.Period period16 = duration14.toPeriod();
        org.joda.time.Duration duration18 = org.joda.time.Duration.standardMinutes((-1L));
        long long19 = duration18.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant20 = null;
        org.joda.time.Period period21 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration18, readableInstant20);
        org.joda.time.PeriodType periodType22 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology23 = null;
        org.joda.time.Period period24 = duration18.toPeriod(periodType22, chronology23);
        org.joda.time.Period period25 = duration14.toPeriod(periodType22);
        org.joda.time.MutablePeriod mutablePeriod26 = new org.joda.time.MutablePeriod(readableInstant11, readableInstant12, periodType22);
        org.joda.time.Period period28 = org.joda.time.Period.seconds((int) '#');
        int int29 = period28.getMillis();
        org.joda.time.DurationFieldType durationFieldType30 = org.joda.time.DurationFieldType.years();
        org.joda.time.Period period32 = period28.withField(durationFieldType30, (int) (short) 10);
        int int33 = periodType22.indexOf(durationFieldType30);
        org.joda.time.Period period34 = new org.joda.time.Period(0L, periodType22);
        org.joda.time.Chronology chronology35 = null;
        org.joda.time.Period period36 = duration6.toPeriod(periodType22, chronology35);
        org.joda.time.Period period37 = duration6.toPeriod();
        org.joda.time.Hours hours38 = duration6.toStandardHours();
        org.joda.time.ReadableInstant readableInstant39 = null;
        org.joda.time.Duration duration41 = org.joda.time.Duration.standardMinutes((long) 2);
        org.joda.time.ReadableInstant readableInstant42 = null;
        org.joda.time.PeriodType periodType46 = org.joda.time.PeriodType.months();
        org.joda.time.MutablePeriod mutablePeriod47 = new org.joda.time.MutablePeriod((long) (byte) 100, periodType46);
        org.joda.time.Chronology chronology48 = null;
        org.joda.time.Period period49 = new org.joda.time.Period((long) '#', (long) 1, periodType46, chronology48);
        org.joda.time.PeriodType periodType50 = periodType46.withMinutesRemoved();
        org.joda.time.Period period51 = duration41.toPeriodTo(readableInstant42, periodType46);
        org.joda.time.MutablePeriod mutablePeriod52 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration6, readableInstant39, periodType46);
        org.joda.time.MutablePeriod mutablePeriod53 = new org.joda.time.MutablePeriod(periodType46);
        org.joda.time.Period period54 = new org.joda.time.Period((long) (byte) 1, (-6060L), periodType46);
        mutablePeriod2.setPeriod((org.joda.time.ReadablePeriod) period54);
        mutablePeriod2.setMinutes(0);
        org.junit.Assert.assertNotNull(duration6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "PT-60S" + "'", str9, "PT-60S");
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + (-1L) + "'", long15 == (-1L));
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertNotNull(duration18);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + (-1L) + "'", long19 == (-1L));
        org.junit.Assert.assertNotNull(periodType22);
        org.junit.Assert.assertNotNull(period24);
        org.junit.Assert.assertNotNull(period25);
        org.junit.Assert.assertNotNull(period28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNotNull(durationFieldType30);
        org.junit.Assert.assertNotNull(period32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertNotNull(period36);
        org.junit.Assert.assertNotNull(period37);
        org.junit.Assert.assertNotNull(hours38);
        org.junit.Assert.assertNotNull(duration41);
        org.junit.Assert.assertNotNull(periodType46);
        org.junit.Assert.assertNotNull(periodType50);
        org.junit.Assert.assertNotNull(period51);
    }

    @Test
    public void test17730() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17730");
        org.joda.time.MutablePeriod mutablePeriod2 = new org.joda.time.MutablePeriod((long) 59, (long) 'a');
    }

    @Test
    public void test17731() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17731");
        org.joda.time.MutablePeriod mutablePeriod4 = new org.joda.time.MutablePeriod((-2764800), 99, 92, (-7776));
    }

    @Test
    public void test17732() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17732");
        org.joda.time.Period period1 = org.joda.time.Period.seconds((int) '#');
        org.joda.time.Period period3 = period1.plusMinutes(10);
        org.joda.time.Period period5 = period1.minusSeconds((int) '4');
        org.joda.time.Period period7 = period1.plusMinutes(0);
        org.joda.time.Period period9 = period1.minusWeeks((int) (byte) 1);
        org.joda.time.Period period11 = period1.withSeconds(997);
        org.joda.time.MutablePeriod mutablePeriod16 = new org.joda.time.MutablePeriod(1, 0, (int) (byte) 1, 100);
        mutablePeriod16.setSeconds(0);
        mutablePeriod16.setWeeks((int) (byte) -1);
        int int21 = mutablePeriod16.size();
        org.joda.time.Period period23 = org.joda.time.Period.years((int) (short) 1);
        org.joda.time.Period period25 = period23.minusMinutes((int) (short) 10);
        org.joda.time.Period period27 = period25.withWeeks((int) (byte) -1);
        org.joda.time.Period period29 = period27.minusMinutes((int) (short) -1);
        mutablePeriod16.setPeriod((org.joda.time.ReadablePeriod) period27);
        org.joda.time.ReadableInstant readableInstant31 = null;
        org.joda.time.Duration duration33 = org.joda.time.Duration.standardMinutes((-1L));
        long long34 = duration33.getStandardMinutes();
        org.joda.time.Duration duration36 = org.joda.time.Duration.standardMinutes((-1L));
        long long37 = duration36.getStandardMinutes();
        boolean boolean38 = duration33.isLongerThan((org.joda.time.ReadableDuration) duration36);
        org.joda.time.Duration duration40 = duration36.withMillis(1L);
        org.joda.time.Period period41 = new org.joda.time.Period(readableInstant31, (org.joda.time.ReadableDuration) duration36);
        org.joda.time.DurationFieldType durationFieldType42 = org.joda.time.DurationFieldType.years();
        java.lang.String str43 = durationFieldType42.getName();
        org.joda.time.Chronology chronology44 = null;
        boolean boolean45 = durationFieldType42.isSupported(chronology44);
        org.joda.time.Period period47 = period41.withFieldAdded(durationFieldType42, 0);
        int int48 = period27.get(durationFieldType42);
        org.joda.time.Period period50 = period27.plusMinutes(0);
        org.joda.time.Chronology chronology52 = null;
        org.joda.time.MutablePeriod mutablePeriod53 = new org.joda.time.MutablePeriod(1L, chronology52);
        org.joda.time.Period period55 = org.joda.time.Period.seconds((int) '#');
        mutablePeriod53.setPeriod((org.joda.time.ReadablePeriod) period55);
        mutablePeriod53.addMillis((int) (short) 1);
        mutablePeriod53.setPeriod(8, (int) (byte) -1, 1, (int) (byte) 10, (int) (byte) -1, (int) (short) -1, 10, (int) (byte) -1);
        org.joda.time.PeriodType periodType68 = mutablePeriod53.getPeriodType();
        org.joda.time.DurationFieldType durationFieldType70 = mutablePeriod53.getFieldType((int) (short) 1);
        java.lang.String str71 = durationFieldType70.getName();
        org.joda.time.Period period73 = period50.withFieldAdded(durationFieldType70, (int) (byte) 10);
        org.joda.time.Period period74 = period11.minus((org.joda.time.ReadablePeriod) period73);
        int int76 = period11.getValue(3);
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(period3);
        org.junit.Assert.assertNotNull(period5);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 8 + "'", int21 == 8);
        org.junit.Assert.assertNotNull(period23);
        org.junit.Assert.assertNotNull(period25);
        org.junit.Assert.assertNotNull(period27);
        org.junit.Assert.assertNotNull(period29);
        org.junit.Assert.assertNotNull(duration33);
        org.junit.Assert.assertTrue("'" + long34 + "' != '" + (-1L) + "'", long34 == (-1L));
        org.junit.Assert.assertNotNull(duration36);
        org.junit.Assert.assertTrue("'" + long37 + "' != '" + (-1L) + "'", long37 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(duration40);
        org.junit.Assert.assertNotNull(durationFieldType42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "years" + "'", str43, "years");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(period47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 1 + "'", int48 == 1);
        org.junit.Assert.assertNotNull(period50);
        org.junit.Assert.assertNotNull(period55);
        org.junit.Assert.assertNotNull(periodType68);
        org.junit.Assert.assertNotNull(durationFieldType70);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "months" + "'", str71, "months");
        org.junit.Assert.assertNotNull(period73);
        org.junit.Assert.assertNotNull(period74);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 0 + "'", int76 == 0);
    }

    @Test
    public void test17733() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17733");
        org.joda.time.Duration duration1 = new org.joda.time.Duration(0L);
        org.joda.time.Period period3 = org.joda.time.Period.seconds((int) '#');
        int int4 = period3.getMillis();
        org.joda.time.Period period6 = period3.withMillis((int) '#');
        org.joda.time.DurationFieldType durationFieldType7 = org.joda.time.DurationFieldType.halfdays();
        boolean boolean8 = period3.isSupported(durationFieldType7);
        org.joda.time.Chronology chronology10 = null;
        org.joda.time.MutablePeriod mutablePeriod11 = new org.joda.time.MutablePeriod(1L, chronology10);
        org.joda.time.Period period13 = org.joda.time.Period.seconds((int) '#');
        mutablePeriod11.setPeriod((org.joda.time.ReadablePeriod) period13);
        org.joda.time.DurationFieldType durationFieldType15 = org.joda.time.DurationFieldType.years();
        java.lang.String str16 = durationFieldType15.getName();
        boolean boolean17 = mutablePeriod11.isSupported(durationFieldType15);
        int int18 = period3.get(durationFieldType15);
        org.joda.time.ReadableInstant readableInstant19 = null;
        org.joda.time.Duration duration21 = org.joda.time.Duration.standardMinutes((-1L));
        long long22 = duration21.getStandardMinutes();
        org.joda.time.Period period23 = duration21.toPeriod();
        org.joda.time.Duration duration25 = org.joda.time.Duration.standardMinutes((-1L));
        long long26 = duration25.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant27 = null;
        org.joda.time.Period period28 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration25, readableInstant27);
        org.joda.time.PeriodType periodType29 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology30 = null;
        org.joda.time.Period period31 = duration25.toPeriod(periodType29, chronology30);
        org.joda.time.Period period32 = duration21.toPeriod(periodType29);
        org.joda.time.Duration duration34 = org.joda.time.Duration.standardMinutes((-1L));
        long long35 = duration34.getStandardMinutes();
        boolean boolean36 = duration21.isLongerThan((org.joda.time.ReadableDuration) duration34);
        org.joda.time.PeriodType periodType37 = org.joda.time.PeriodType.weeks();
        org.joda.time.Period period38 = new org.joda.time.Period(readableInstant19, (org.joda.time.ReadableDuration) duration34, periodType37);
        boolean boolean39 = period3.equals((java.lang.Object) duration34);
        org.joda.time.Minutes minutes40 = duration34.toStandardMinutes();
        boolean boolean41 = duration1.isLongerThan((org.joda.time.ReadableDuration) duration34);
        org.joda.time.Period period42 = duration34.toPeriod();
        int int43 = period42.size();
        org.junit.Assert.assertNotNull(period3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(durationFieldType7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(period13);
        org.junit.Assert.assertNotNull(durationFieldType15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "years" + "'", str16, "years");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(duration21);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + (-1L) + "'", long22 == (-1L));
        org.junit.Assert.assertNotNull(period23);
        org.junit.Assert.assertNotNull(duration25);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + (-1L) + "'", long26 == (-1L));
        org.junit.Assert.assertNotNull(periodType29);
        org.junit.Assert.assertNotNull(period31);
        org.junit.Assert.assertNotNull(period32);
        org.junit.Assert.assertNotNull(duration34);
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + (-1L) + "'", long35 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(periodType37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(minutes40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(period42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 8 + "'", int43 == 8);
    }

    @Test
    public void test17734() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17734");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableInstant readableInstant1 = null;
        org.joda.time.ReadableInstant readableInstant2 = null;
        org.joda.time.Chronology chronology4 = null;
        org.joda.time.MutablePeriod mutablePeriod5 = new org.joda.time.MutablePeriod(1L, chronology4);
        org.joda.time.Chronology chronology7 = null;
        org.joda.time.MutablePeriod mutablePeriod8 = new org.joda.time.MutablePeriod(1L, chronology7);
        mutablePeriod5.add((org.joda.time.ReadablePeriod) mutablePeriod8);
        mutablePeriod5.addMonths((int) (short) -1);
        org.joda.time.DurationFieldType[] durationFieldTypeArray12 = mutablePeriod5.getFieldTypes();
        mutablePeriod5.setSeconds((int) (byte) -1);
        mutablePeriod5.setMillis((int) 'a');
        org.joda.time.Duration duration18 = org.joda.time.Duration.standardMinutes((-1L));
        long long19 = duration18.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant20 = null;
        org.joda.time.Period period21 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration18, readableInstant20);
        org.joda.time.Duration duration23 = org.joda.time.Duration.standardMinutes((-1L));
        long long24 = duration23.getStandardMinutes();
        org.joda.time.Period period25 = duration23.toPeriod();
        boolean boolean26 = duration18.isLongerThan((org.joda.time.ReadableDuration) duration23);
        org.joda.time.Duration duration28 = org.joda.time.Duration.standardMinutes((-1L));
        long long29 = duration28.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant30 = null;
        org.joda.time.Period period31 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration28, readableInstant30);
        org.joda.time.PeriodType periodType32 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology33 = null;
        org.joda.time.Period period34 = duration28.toPeriod(periodType32, chronology33);
        org.joda.time.Duration duration35 = duration23.minus((org.joda.time.ReadableDuration) duration28);
        mutablePeriod5.add((org.joda.time.ReadableDuration) duration23);
        org.joda.time.PeriodType periodType37 = mutablePeriod5.getPeriodType();
        org.joda.time.Duration duration40 = new org.joda.time.Duration((-2L), (long) (byte) 0);
        org.joda.time.Duration duration42 = org.joda.time.Duration.standardMinutes((-1L));
        long long43 = duration42.getStandardMinutes();
        org.joda.time.Duration duration45 = org.joda.time.Duration.standardMinutes((-1L));
        long long46 = duration45.getStandardMinutes();
        boolean boolean47 = duration42.isLongerThan((org.joda.time.ReadableDuration) duration45);
        org.joda.time.Duration duration49 = duration45.withMillis((long) 1);
        org.joda.time.Duration duration51 = org.joda.time.Duration.standardMinutes((-1L));
        long long52 = duration51.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant53 = null;
        org.joda.time.Period period54 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration51, readableInstant53);
        org.joda.time.PeriodType periodType55 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology56 = null;
        org.joda.time.Period period57 = duration51.toPeriod(periodType55, chronology56);
        org.joda.time.Duration duration60 = duration51.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration62 = org.joda.time.Duration.standardMinutes((-1L));
        long long63 = duration62.getStandardMinutes();
        org.joda.time.Duration duration65 = org.joda.time.Duration.standardMinutes((-1L));
        long long66 = duration65.getStandardMinutes();
        boolean boolean67 = duration62.isLongerThan((org.joda.time.ReadableDuration) duration65);
        org.joda.time.Duration duration69 = duration65.withMillis((long) 1);
        boolean boolean70 = duration60.isShorterThan((org.joda.time.ReadableDuration) duration65);
        boolean boolean71 = duration45.isLongerThan((org.joda.time.ReadableDuration) duration65);
        org.joda.time.Duration duration72 = duration40.plus((org.joda.time.ReadableDuration) duration45);
        boolean boolean73 = mutablePeriod5.equals((java.lang.Object) duration40);
        org.joda.time.Seconds seconds74 = duration40.toStandardSeconds();
        org.joda.time.PeriodType periodType78 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period79 = new org.joda.time.Period(10L, periodType78);
        org.joda.time.PeriodType periodType80 = periodType78.withWeeksRemoved();
        org.joda.time.MutablePeriod mutablePeriod81 = new org.joda.time.MutablePeriod((long) (byte) 0, periodType78);
        org.joda.time.PeriodType periodType82 = periodType78.withMillisRemoved();
        java.lang.String str83 = periodType78.getName();
        org.joda.time.Chronology chronology84 = null;
        org.joda.time.Period period85 = new org.joda.time.Period((long) (byte) 0, periodType78, chronology84);
        org.joda.time.MutablePeriod mutablePeriod86 = new org.joda.time.MutablePeriod(readableInstant2, (org.joda.time.ReadableDuration) duration40, periodType78);
        org.joda.time.PeriodType periodType87 = periodType78.withHoursRemoved();
        org.joda.time.PeriodType periodType88 = periodType78.withHoursRemoved();
        org.joda.time.Period period89 = new org.joda.time.Period(readableInstant0, readableInstant1, periodType88);
        org.junit.Assert.assertNotNull(durationFieldTypeArray12);
        org.junit.Assert.assertNotNull(duration18);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + (-1L) + "'", long19 == (-1L));
        org.junit.Assert.assertNotNull(duration23);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + (-1L) + "'", long24 == (-1L));
        org.junit.Assert.assertNotNull(period25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(duration28);
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + (-1L) + "'", long29 == (-1L));
        org.junit.Assert.assertNotNull(periodType32);
        org.junit.Assert.assertNotNull(period34);
        org.junit.Assert.assertNotNull(duration35);
        org.junit.Assert.assertNotNull(periodType37);
        org.junit.Assert.assertNotNull(duration42);
        org.junit.Assert.assertTrue("'" + long43 + "' != '" + (-1L) + "'", long43 == (-1L));
        org.junit.Assert.assertNotNull(duration45);
        org.junit.Assert.assertTrue("'" + long46 + "' != '" + (-1L) + "'", long46 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(duration49);
        org.junit.Assert.assertNotNull(duration51);
        org.junit.Assert.assertTrue("'" + long52 + "' != '" + (-1L) + "'", long52 == (-1L));
        org.junit.Assert.assertNotNull(periodType55);
        org.junit.Assert.assertNotNull(period57);
        org.junit.Assert.assertNotNull(duration60);
        org.junit.Assert.assertNotNull(duration62);
        org.junit.Assert.assertTrue("'" + long63 + "' != '" + (-1L) + "'", long63 == (-1L));
        org.junit.Assert.assertNotNull(duration65);
        org.junit.Assert.assertTrue("'" + long66 + "' != '" + (-1L) + "'", long66 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(duration69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(duration72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(seconds74);
        org.junit.Assert.assertNotNull(periodType78);
        org.junit.Assert.assertNotNull(periodType80);
        org.junit.Assert.assertNotNull(periodType82);
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "Seconds" + "'", str83, "Seconds");
        org.junit.Assert.assertNotNull(periodType87);
        org.junit.Assert.assertNotNull(periodType88);
    }

    @Test
    public void test17735() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17735");
        org.joda.time.Period period1 = org.joda.time.Period.seconds((int) '#');
        int int2 = period1.getMillis();
        org.joda.time.Period period4 = period1.withMillis((int) '#');
        int int5 = period1.size();
        org.joda.time.Period period7 = period1.plusYears((int) 'a');
        org.joda.time.Period period9 = period1.minusHours((int) (byte) 100);
        org.joda.time.Period period11 = period9.minusSeconds((int) (short) 10);
        org.joda.time.Period period13 = period11.withWeeks(101);
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 8 + "'", int5 == 8);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(period13);
    }

    @Test
    public void test17736() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17736");
        org.joda.time.Period period1 = org.joda.time.Period.seconds((int) '#');
        org.joda.time.Period period2 = period1.toPeriod();
        org.joda.time.Period period4 = period1.plusYears(2);
        org.joda.time.Period period6 = period1.plusDays((int) (byte) 0);
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.Duration duration9 = org.joda.time.Duration.standardMinutes((-1L));
        long long10 = duration9.getStandardMinutes();
        org.joda.time.Duration duration12 = org.joda.time.Duration.standardMinutes((-1L));
        long long13 = duration12.getStandardMinutes();
        boolean boolean14 = duration9.isLongerThan((org.joda.time.ReadableDuration) duration12);
        org.joda.time.Duration duration16 = duration12.withMillis(1L);
        org.joda.time.Period period17 = new org.joda.time.Period(readableInstant7, (org.joda.time.ReadableDuration) duration12);
        org.joda.time.DurationFieldType durationFieldType18 = org.joda.time.DurationFieldType.years();
        java.lang.String str19 = durationFieldType18.getName();
        org.joda.time.Chronology chronology20 = null;
        boolean boolean21 = durationFieldType18.isSupported(chronology20);
        org.joda.time.Period period23 = period17.withFieldAdded(durationFieldType18, 0);
        org.joda.time.Period period25 = period17.plusHours((int) (short) 0);
        int int26 = period17.getHours();
        org.joda.time.Period period27 = period6.withFields((org.joda.time.ReadablePeriod) period17);
        org.joda.time.Period period29 = period17.plusSeconds((int) (byte) -1);
        org.joda.time.Period period31 = period17.plusMillis(129);
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(period2);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + (-1L) + "'", long10 == (-1L));
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + (-1L) + "'", long13 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(duration16);
        org.junit.Assert.assertNotNull(durationFieldType18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "years" + "'", str19, "years");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(period23);
        org.junit.Assert.assertNotNull(period25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(period27);
        org.junit.Assert.assertNotNull(period29);
        org.junit.Assert.assertNotNull(period31);
    }

    @Test
    public void test17737() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17737");
        org.joda.time.Period period4 = new org.joda.time.Period(34, 9, (-99), 0);
    }

    @Test
    public void test17738() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17738");
        org.joda.time.MutablePeriod mutablePeriod4 = new org.joda.time.MutablePeriod(12, (int) (short) 0, (-947), (-935));
    }

    @Test
    public void test17739() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17739");
        org.joda.time.Period period1 = org.joda.time.Period.weeks((-947));
        org.junit.Assert.assertNotNull(period1);
    }

    @Test
    public void test17740() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17740");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardSeconds(1L);
        org.joda.time.ReadableInstant readableInstant2 = null;
        org.joda.time.Duration duration4 = org.joda.time.Duration.standardMinutes((-1L));
        long long5 = duration4.getStandardMinutes();
        org.joda.time.Duration duration7 = org.joda.time.Duration.standardMinutes((-1L));
        long long8 = duration7.getStandardMinutes();
        boolean boolean9 = duration4.isLongerThan((org.joda.time.ReadableDuration) duration7);
        org.joda.time.Period period10 = duration7.toPeriod();
        org.joda.time.Minutes minutes11 = duration7.toStandardMinutes();
        org.joda.time.Duration duration13 = org.joda.time.Duration.standardMinutes((-1L));
        long long14 = duration13.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant15 = null;
        org.joda.time.Period period16 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration13, readableInstant15);
        org.joda.time.PeriodType periodType17 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology18 = null;
        org.joda.time.Period period19 = duration13.toPeriod(periodType17, chronology18);
        org.joda.time.Duration duration22 = duration13.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration23 = duration7.plus((org.joda.time.ReadableDuration) duration22);
        org.joda.time.Period period25 = org.joda.time.Period.seconds((int) '#');
        org.joda.time.Period period27 = period25.plusMinutes(10);
        org.joda.time.PeriodType periodType28 = period27.getPeriodType();
        org.joda.time.Period period29 = new org.joda.time.Period(readableInstant2, (org.joda.time.ReadableDuration) duration22, periodType28);
        org.joda.time.Duration duration31 = org.joda.time.Duration.standardMinutes((-1L));
        long long32 = duration31.getStandardMinutes();
        org.joda.time.Duration duration34 = org.joda.time.Duration.standardMinutes((-1L));
        long long35 = duration34.getStandardMinutes();
        boolean boolean36 = duration31.isLongerThan((org.joda.time.ReadableDuration) duration34);
        org.joda.time.Duration duration38 = duration34.withMillis(1L);
        boolean boolean39 = duration22.isShorterThan((org.joda.time.ReadableDuration) duration34);
        boolean boolean40 = duration1.isShorterThan((org.joda.time.ReadableDuration) duration34);
        long long41 = duration1.getStandardSeconds();
        java.lang.String str42 = duration1.toString();
        org.joda.time.Period period44 = org.joda.time.Period.seconds((int) '#');
        int int45 = period44.getMillis();
        org.joda.time.Period period47 = period44.withMillis((int) '#');
        org.joda.time.DurationFieldType durationFieldType48 = org.joda.time.DurationFieldType.halfdays();
        boolean boolean49 = period44.isSupported(durationFieldType48);
        org.joda.time.Chronology chronology51 = null;
        org.joda.time.MutablePeriod mutablePeriod52 = new org.joda.time.MutablePeriod(1L, chronology51);
        org.joda.time.Period period54 = org.joda.time.Period.seconds((int) '#');
        mutablePeriod52.setPeriod((org.joda.time.ReadablePeriod) period54);
        org.joda.time.DurationFieldType durationFieldType56 = org.joda.time.DurationFieldType.years();
        java.lang.String str57 = durationFieldType56.getName();
        boolean boolean58 = mutablePeriod52.isSupported(durationFieldType56);
        int int59 = period44.get(durationFieldType56);
        org.joda.time.ReadableInstant readableInstant60 = null;
        org.joda.time.Duration duration62 = org.joda.time.Duration.standardMinutes((-1L));
        long long63 = duration62.getStandardMinutes();
        org.joda.time.Period period64 = duration62.toPeriod();
        org.joda.time.Duration duration66 = org.joda.time.Duration.standardMinutes((-1L));
        long long67 = duration66.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant68 = null;
        org.joda.time.Period period69 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration66, readableInstant68);
        org.joda.time.PeriodType periodType70 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology71 = null;
        org.joda.time.Period period72 = duration66.toPeriod(periodType70, chronology71);
        org.joda.time.Period period73 = duration62.toPeriod(periodType70);
        org.joda.time.Duration duration75 = org.joda.time.Duration.standardMinutes((-1L));
        long long76 = duration75.getStandardMinutes();
        boolean boolean77 = duration62.isLongerThan((org.joda.time.ReadableDuration) duration75);
        org.joda.time.PeriodType periodType78 = org.joda.time.PeriodType.weeks();
        org.joda.time.Period period79 = new org.joda.time.Period(readableInstant60, (org.joda.time.ReadableDuration) duration75, periodType78);
        boolean boolean80 = period44.equals((java.lang.Object) duration75);
        int int81 = period44.getDays();
        org.joda.time.ReadableInstant readableInstant82 = null;
        org.joda.time.Duration duration83 = period44.toDurationTo(readableInstant82);
        org.joda.time.Chronology chronology85 = null;
        org.joda.time.MutablePeriod mutablePeriod86 = new org.joda.time.MutablePeriod(1L, chronology85);
        org.joda.time.Chronology chronology88 = null;
        org.joda.time.MutablePeriod mutablePeriod89 = new org.joda.time.MutablePeriod(1L, chronology88);
        mutablePeriod86.add((org.joda.time.ReadablePeriod) mutablePeriod89);
        mutablePeriod86.addMonths((int) (short) -1);
        org.joda.time.ReadableInstant readableInstant93 = null;
        org.joda.time.Duration duration94 = mutablePeriod86.toDurationTo(readableInstant93);
        org.joda.time.Duration duration96 = duration83.withDurationAdded((org.joda.time.ReadableDuration) duration94, 5);
        org.joda.time.Duration duration97 = duration1.plus((org.joda.time.ReadableDuration) duration96);
        org.joda.time.Chronology chronology98 = null;
        org.joda.time.Period period99 = duration1.toPeriod(chronology98);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + (-1L) + "'", long5 == (-1L));
        org.junit.Assert.assertNotNull(duration7);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + (-1L) + "'", long8 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + (-1L) + "'", long14 == (-1L));
        org.junit.Assert.assertNotNull(periodType17);
        org.junit.Assert.assertNotNull(period19);
        org.junit.Assert.assertNotNull(duration22);
        org.junit.Assert.assertNotNull(duration23);
        org.junit.Assert.assertNotNull(period25);
        org.junit.Assert.assertNotNull(period27);
        org.junit.Assert.assertNotNull(periodType28);
        org.junit.Assert.assertNotNull(duration31);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + (-1L) + "'", long32 == (-1L));
        org.junit.Assert.assertNotNull(duration34);
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + (-1L) + "'", long35 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(duration38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + long41 + "' != '" + 1L + "'", long41 == 1L);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "PT1S" + "'", str42, "PT1S");
        org.junit.Assert.assertNotNull(period44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertNotNull(period47);
        org.junit.Assert.assertNotNull(durationFieldType48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(period54);
        org.junit.Assert.assertNotNull(durationFieldType56);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "years" + "'", str57, "years");
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
        org.junit.Assert.assertNotNull(duration62);
        org.junit.Assert.assertTrue("'" + long63 + "' != '" + (-1L) + "'", long63 == (-1L));
        org.junit.Assert.assertNotNull(period64);
        org.junit.Assert.assertNotNull(duration66);
        org.junit.Assert.assertTrue("'" + long67 + "' != '" + (-1L) + "'", long67 == (-1L));
        org.junit.Assert.assertNotNull(periodType70);
        org.junit.Assert.assertNotNull(period72);
        org.junit.Assert.assertNotNull(period73);
        org.junit.Assert.assertNotNull(duration75);
        org.junit.Assert.assertTrue("'" + long76 + "' != '" + (-1L) + "'", long76 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(periodType78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 0 + "'", int81 == 0);
        org.junit.Assert.assertNotNull(duration83);
        org.junit.Assert.assertNotNull(duration94);
        org.junit.Assert.assertNotNull(duration96);
        org.junit.Assert.assertNotNull(duration97);
        org.junit.Assert.assertNotNull(period99);
    }

    @Test
    public void test17741() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17741");
        org.joda.time.Period period1 = org.joda.time.Period.weeks(99);
        org.junit.Assert.assertNotNull(period1);
    }

    @Test
    public void test17742() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17742");
        org.joda.time.Period period3 = org.joda.time.Period.seconds((int) '#');
        org.joda.time.Period period4 = period3.toPeriod();
        org.joda.time.Period period6 = period4.minusWeeks(10);
        org.joda.time.Period period8 = period4.minusHours((int) (short) 100);
        org.joda.time.DurationFieldType[] durationFieldTypeArray9 = period8.getFieldTypes();
        org.joda.time.PeriodType periodType10 = org.joda.time.PeriodType.forFields(durationFieldTypeArray9);
        org.joda.time.Chronology chronology11 = null;
        org.joda.time.Period period12 = new org.joda.time.Period((long) 8, (long) '4', periodType10, chronology11);
        org.joda.time.Period period14 = period12.withDays((int) (byte) 0);
        int int15 = period12.getHours();
        org.joda.time.MutablePeriod mutablePeriod16 = period12.toMutablePeriod();
        org.joda.time.Hours hours17 = period12.toStandardHours();
        org.junit.Assert.assertNotNull(period3);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertNotNull(durationFieldTypeArray9);
        org.junit.Assert.assertNotNull(periodType10);
        org.junit.Assert.assertNotNull(period14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod16);
        org.junit.Assert.assertNotNull(hours17);
    }

    @Test
    public void test17743() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17743");
        org.joda.time.MutablePeriod mutablePeriod1 = new org.joda.time.MutablePeriod((long) 32);
        mutablePeriod1.setMillis(35);
        org.joda.time.Chronology chronology5 = null;
        org.joda.time.MutablePeriod mutablePeriod6 = new org.joda.time.MutablePeriod(1L, chronology5);
        org.joda.time.Period period8 = org.joda.time.Period.seconds((int) '#');
        mutablePeriod6.setPeriod((org.joda.time.ReadablePeriod) period8);
        mutablePeriod6.addMillis((int) (short) 1);
        org.joda.time.Duration duration13 = org.joda.time.Duration.standardMinutes((-1L));
        long long14 = duration13.getStandardMinutes();
        org.joda.time.Duration duration16 = org.joda.time.Duration.standardMinutes((-1L));
        long long17 = duration16.getStandardMinutes();
        boolean boolean18 = duration13.isLongerThan((org.joda.time.ReadableDuration) duration16);
        org.joda.time.Duration duration20 = duration16.withMillis((long) 1);
        org.joda.time.Duration duration22 = org.joda.time.Duration.standardMinutes((-1L));
        long long23 = duration22.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant24 = null;
        org.joda.time.Period period25 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration22, readableInstant24);
        org.joda.time.PeriodType periodType26 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology27 = null;
        org.joda.time.Period period28 = duration22.toPeriod(periodType26, chronology27);
        org.joda.time.Duration duration31 = duration22.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration33 = org.joda.time.Duration.standardMinutes((-1L));
        long long34 = duration33.getStandardMinutes();
        org.joda.time.Duration duration36 = org.joda.time.Duration.standardMinutes((-1L));
        long long37 = duration36.getStandardMinutes();
        boolean boolean38 = duration33.isLongerThan((org.joda.time.ReadableDuration) duration36);
        org.joda.time.Duration duration40 = duration36.withMillis((long) 1);
        boolean boolean41 = duration31.isShorterThan((org.joda.time.ReadableDuration) duration36);
        boolean boolean42 = duration16.isLongerThan((org.joda.time.ReadableDuration) duration36);
        org.joda.time.Duration duration44 = org.joda.time.Duration.standardMinutes((-1L));
        long long45 = duration44.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant46 = null;
        org.joda.time.Period period47 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration44, readableInstant46);
        org.joda.time.PeriodType periodType48 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology49 = null;
        org.joda.time.Period period50 = duration44.toPeriod(periodType48, chronology49);
        org.joda.time.Duration duration51 = duration44.toDuration();
        boolean boolean52 = duration16.isEqual((org.joda.time.ReadableDuration) duration44);
        org.joda.time.ReadableInstant readableInstant53 = null;
        org.joda.time.Duration duration55 = org.joda.time.Duration.standardMinutes((-1L));
        long long56 = duration55.getStandardMinutes();
        org.joda.time.Duration duration58 = org.joda.time.Duration.standardMinutes((-1L));
        long long59 = duration58.getStandardMinutes();
        boolean boolean60 = duration55.isLongerThan((org.joda.time.ReadableDuration) duration58);
        org.joda.time.Duration duration62 = duration58.withMillis(1L);
        org.joda.time.Period period63 = new org.joda.time.Period(readableInstant53, (org.joda.time.ReadableDuration) duration58);
        org.joda.time.Duration duration64 = duration16.plus((org.joda.time.ReadableDuration) duration58);
        boolean boolean65 = mutablePeriod6.equals((java.lang.Object) duration16);
        mutablePeriod1.add((org.joda.time.ReadableDuration) duration16);
        org.joda.time.DurationFieldType[] durationFieldTypeArray67 = mutablePeriod1.getFieldTypes();
        org.joda.time.PeriodType periodType68 = org.joda.time.PeriodType.forFields(durationFieldTypeArray67);
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + (-1L) + "'", long14 == (-1L));
        org.junit.Assert.assertNotNull(duration16);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + (-1L) + "'", long17 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(duration20);
        org.junit.Assert.assertNotNull(duration22);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + (-1L) + "'", long23 == (-1L));
        org.junit.Assert.assertNotNull(periodType26);
        org.junit.Assert.assertNotNull(period28);
        org.junit.Assert.assertNotNull(duration31);
        org.junit.Assert.assertNotNull(duration33);
        org.junit.Assert.assertTrue("'" + long34 + "' != '" + (-1L) + "'", long34 == (-1L));
        org.junit.Assert.assertNotNull(duration36);
        org.junit.Assert.assertTrue("'" + long37 + "' != '" + (-1L) + "'", long37 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(duration40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(duration44);
        org.junit.Assert.assertTrue("'" + long45 + "' != '" + (-1L) + "'", long45 == (-1L));
        org.junit.Assert.assertNotNull(periodType48);
        org.junit.Assert.assertNotNull(period50);
        org.junit.Assert.assertNotNull(duration51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(duration55);
        org.junit.Assert.assertTrue("'" + long56 + "' != '" + (-1L) + "'", long56 == (-1L));
        org.junit.Assert.assertNotNull(duration58);
        org.junit.Assert.assertTrue("'" + long59 + "' != '" + (-1L) + "'", long59 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(duration62);
        org.junit.Assert.assertNotNull(duration64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(durationFieldTypeArray67);
        org.junit.Assert.assertNotNull(periodType68);
    }

    @Test
    public void test17744() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17744");
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.Duration duration5 = org.joda.time.Duration.standardMinutes((-1L));
        long long6 = duration5.getStandardMinutes();
        org.joda.time.Period period7 = duration5.toPeriod();
        org.joda.time.Duration duration9 = org.joda.time.Duration.standardMinutes((-1L));
        long long10 = duration9.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant11 = null;
        org.joda.time.Period period12 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration9, readableInstant11);
        org.joda.time.PeriodType periodType13 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology14 = null;
        org.joda.time.Period period15 = duration9.toPeriod(periodType13, chronology14);
        org.joda.time.Period period16 = duration5.toPeriod(periodType13);
        org.joda.time.Duration duration18 = org.joda.time.Duration.standardMinutes((-1L));
        long long19 = duration18.getStandardMinutes();
        boolean boolean20 = duration5.isLongerThan((org.joda.time.ReadableDuration) duration18);
        org.joda.time.PeriodType periodType21 = org.joda.time.PeriodType.weeks();
        org.joda.time.Period period22 = new org.joda.time.Period(readableInstant3, (org.joda.time.ReadableDuration) duration18, periodType21);
        org.joda.time.PeriodType periodType23 = periodType21.withMonthsRemoved();
        org.joda.time.Chronology chronology24 = null;
        org.joda.time.Period period25 = new org.joda.time.Period((-2L), (long) 2, periodType23, chronology24);
        org.joda.time.MutablePeriod mutablePeriod26 = new org.joda.time.MutablePeriod((-59909L), periodType23);
        int int27 = mutablePeriod26.getYears();
        org.junit.Assert.assertNotNull(duration5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + (-1L) + "'", long10 == (-1L));
        org.junit.Assert.assertNotNull(periodType13);
        org.junit.Assert.assertNotNull(period15);
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertNotNull(duration18);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + (-1L) + "'", long19 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(periodType21);
        org.junit.Assert.assertNotNull(periodType23);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
    }

    @Test
    public void test17745() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17745");
        org.joda.time.Period period1 = org.joda.time.Period.days(59);
        org.junit.Assert.assertNotNull(period1);
    }

    @Test
    public void test17746() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17746");
        org.joda.time.MutablePeriod mutablePeriod1 = org.joda.time.MutablePeriod.parse("PT0.011S");
        org.junit.Assert.assertNotNull(mutablePeriod1);
    }

    @Test
    public void test17747() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17747");
        org.joda.time.format.PeriodPrinter periodPrinter0 = null;
        org.joda.time.format.PeriodParser periodParser1 = null;
        org.joda.time.format.PeriodFormatter periodFormatter2 = new org.joda.time.format.PeriodFormatter(periodPrinter0, periodParser1);
        org.joda.time.format.PeriodPrinter periodPrinter3 = periodFormatter2.getPrinter();
        boolean boolean4 = periodFormatter2.isParser();
        org.joda.time.format.PeriodParser periodParser5 = periodFormatter2.getParser();
        boolean boolean6 = periodFormatter2.isParser();
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.Duration duration12 = org.joda.time.Duration.standardMinutes((-1L));
        long long13 = duration12.getStandardMinutes();
        org.joda.time.Period period14 = duration12.toPeriod();
        org.joda.time.Duration duration16 = org.joda.time.Duration.standardMinutes((-1L));
        long long17 = duration16.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant18 = null;
        org.joda.time.Period period19 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration16, readableInstant18);
        org.joda.time.PeriodType periodType20 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology21 = null;
        org.joda.time.Period period22 = duration16.toPeriod(periodType20, chronology21);
        org.joda.time.Period period23 = duration12.toPeriod(periodType20);
        org.joda.time.Chronology chronology24 = null;
        org.joda.time.MutablePeriod mutablePeriod25 = new org.joda.time.MutablePeriod(1L, (long) (byte) 100, periodType20, chronology24);
        org.joda.time.MutablePeriod mutablePeriod26 = new org.joda.time.MutablePeriod(readableInstant7, readableInstant8, periodType20);
        org.joda.time.format.PeriodFormatter periodFormatter27 = periodFormatter2.withParseType(periodType20);
        org.joda.time.PeriodType periodType28 = org.joda.time.PeriodType.yearDayTime();
        org.joda.time.Duration duration30 = org.joda.time.Duration.standardMinutes((-1L));
        long long31 = duration30.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant32 = null;
        org.joda.time.Period period33 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration30, readableInstant32);
        org.joda.time.PeriodType periodType34 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology35 = null;
        org.joda.time.Period period36 = duration30.toPeriod(periodType34, chronology35);
        org.joda.time.ReadableInstant readableInstant37 = null;
        org.joda.time.Period period38 = duration30.toPeriodTo(readableInstant37);
        int int39 = period38.getDays();
        org.joda.time.Period period41 = period38.withDays(100);
        org.joda.time.Period period42 = period38.toPeriod();
        org.joda.time.Chronology chronology44 = null;
        org.joda.time.MutablePeriod mutablePeriod45 = new org.joda.time.MutablePeriod(1L, chronology44);
        org.joda.time.Period period47 = org.joda.time.Period.seconds((int) '#');
        mutablePeriod45.setPeriod((org.joda.time.ReadablePeriod) period47);
        org.joda.time.DurationFieldType durationFieldType49 = org.joda.time.DurationFieldType.years();
        java.lang.String str50 = durationFieldType49.getName();
        boolean boolean51 = mutablePeriod45.isSupported(durationFieldType49);
        org.joda.time.Period period53 = period42.withField(durationFieldType49, (int) (byte) -1);
        int int54 = periodType28.indexOf(durationFieldType49);
        org.joda.time.format.PeriodFormatter periodFormatter55 = periodFormatter2.withParseType(periodType28);
        org.joda.time.PeriodType periodType56 = periodType28.withHoursRemoved();
        org.junit.Assert.assertNull(periodPrinter3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(periodParser5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + (-1L) + "'", long13 == (-1L));
        org.junit.Assert.assertNotNull(period14);
        org.junit.Assert.assertNotNull(duration16);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + (-1L) + "'", long17 == (-1L));
        org.junit.Assert.assertNotNull(periodType20);
        org.junit.Assert.assertNotNull(period22);
        org.junit.Assert.assertNotNull(period23);
        org.junit.Assert.assertNotNull(periodFormatter27);
        org.junit.Assert.assertNotNull(periodType28);
        org.junit.Assert.assertNotNull(duration30);
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + (-1L) + "'", long31 == (-1L));
        org.junit.Assert.assertNotNull(periodType34);
        org.junit.Assert.assertNotNull(period36);
        org.junit.Assert.assertNotNull(period38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNotNull(period41);
        org.junit.Assert.assertNotNull(period42);
        org.junit.Assert.assertNotNull(period47);
        org.junit.Assert.assertNotNull(durationFieldType49);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "years" + "'", str50, "years");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(period53);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
        org.junit.Assert.assertNotNull(periodFormatter55);
        org.junit.Assert.assertNotNull(periodType56);
    }

    @Test
    public void test17748() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17748");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((-1L));
        long long2 = duration1.getMillis();
        org.joda.time.Duration duration4 = org.joda.time.Duration.standardMinutes((-1L));
        long long5 = duration4.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant6 = null;
        org.joda.time.Period period7 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration4, readableInstant6);
        org.joda.time.PeriodType periodType8 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology9 = null;
        org.joda.time.Period period10 = duration4.toPeriod(periodType8, chronology9);
        org.joda.time.Duration duration13 = duration4.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration15 = org.joda.time.Duration.standardHours((long) 10);
        org.joda.time.Duration duration17 = org.joda.time.Duration.standardMinutes((-1L));
        long long18 = duration17.getStandardMinutes();
        org.joda.time.Duration duration20 = org.joda.time.Duration.standardMinutes((-1L));
        long long21 = duration20.getStandardMinutes();
        boolean boolean22 = duration17.isLongerThan((org.joda.time.ReadableDuration) duration20);
        org.joda.time.Period period23 = duration20.toPeriod();
        org.joda.time.Minutes minutes24 = duration20.toStandardMinutes();
        boolean boolean25 = duration15.isEqual((org.joda.time.ReadableDuration) duration20);
        boolean boolean26 = duration4.isShorterThan((org.joda.time.ReadableDuration) duration15);
        org.joda.time.Minutes minutes27 = duration4.toStandardMinutes();
        org.joda.time.ReadableInstant readableInstant28 = null;
        org.joda.time.MutablePeriod mutablePeriod29 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration4, readableInstant28);
        org.joda.time.Minutes minutes30 = duration4.toStandardMinutes();
        org.joda.time.Duration duration31 = duration4.toDuration();
        org.joda.time.Duration duration32 = duration1.plus((org.joda.time.ReadableDuration) duration31);
        long long33 = duration31.getMillis();
        org.joda.time.ReadableInstant readableInstant34 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Interval interval35 = duration31.toIntervalFrom(readableInstant34);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: The end instant must be greater or equal to the start");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + (-60000L) + "'", long2 == (-60000L));
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + (-1L) + "'", long5 == (-1L));
        org.junit.Assert.assertNotNull(periodType8);
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertNotNull(duration15);
        org.junit.Assert.assertNotNull(duration17);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + (-1L) + "'", long18 == (-1L));
        org.junit.Assert.assertNotNull(duration20);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + (-1L) + "'", long21 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(period23);
        org.junit.Assert.assertNotNull(minutes24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(minutes27);
        org.junit.Assert.assertNotNull(minutes30);
        org.junit.Assert.assertNotNull(duration31);
        org.junit.Assert.assertNotNull(duration32);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + (-60000L) + "'", long33 == (-60000L));
    }

    @Test
    public void test17749() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17749");
        org.joda.time.ReadableInstant readableInstant2 = null;
        org.joda.time.Duration duration4 = org.joda.time.Duration.standardMinutes((-1L));
        long long5 = duration4.getStandardMinutes();
        org.joda.time.Period period6 = duration4.toPeriod();
        org.joda.time.Duration duration8 = org.joda.time.Duration.standardMinutes((-1L));
        long long9 = duration8.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant10 = null;
        org.joda.time.Period period11 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration8, readableInstant10);
        org.joda.time.PeriodType periodType12 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology13 = null;
        org.joda.time.Period period14 = duration8.toPeriod(periodType12, chronology13);
        org.joda.time.Period period15 = duration4.toPeriod(periodType12);
        org.joda.time.Duration duration17 = org.joda.time.Duration.standardMinutes((-1L));
        long long18 = duration17.getStandardMinutes();
        boolean boolean19 = duration4.isLongerThan((org.joda.time.ReadableDuration) duration17);
        org.joda.time.PeriodType periodType20 = org.joda.time.PeriodType.weeks();
        org.joda.time.Period period21 = new org.joda.time.Period(readableInstant2, (org.joda.time.ReadableDuration) duration17, periodType20);
        org.joda.time.Duration duration23 = duration17.plus(10L);
        org.joda.time.ReadableInstant readableInstant24 = null;
        org.joda.time.Duration duration26 = org.joda.time.Duration.standardMinutes((-1L));
        long long27 = duration26.getStandardMinutes();
        org.joda.time.Period period28 = duration26.toPeriod();
        org.joda.time.Duration duration30 = org.joda.time.Duration.standardMinutes((-1L));
        long long31 = duration30.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant32 = null;
        org.joda.time.Period period33 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration30, readableInstant32);
        org.joda.time.PeriodType periodType34 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology35 = null;
        org.joda.time.Period period36 = duration30.toPeriod(periodType34, chronology35);
        org.joda.time.Period period37 = duration26.toPeriod(periodType34);
        org.joda.time.Duration duration39 = org.joda.time.Duration.standardMinutes((-1L));
        long long40 = duration39.getStandardMinutes();
        boolean boolean41 = duration26.isLongerThan((org.joda.time.ReadableDuration) duration39);
        org.joda.time.PeriodType periodType42 = org.joda.time.PeriodType.weeks();
        org.joda.time.Period period43 = new org.joda.time.Period(readableInstant24, (org.joda.time.ReadableDuration) duration39, periodType42);
        boolean boolean44 = duration23.isLongerThan((org.joda.time.ReadableDuration) duration39);
        org.joda.time.ReadableInstant readableInstant45 = null;
        org.joda.time.Duration duration47 = org.joda.time.Duration.standardMinutes((-1L));
        long long48 = duration47.getStandardMinutes();
        org.joda.time.Period period49 = duration47.toPeriod();
        org.joda.time.Duration duration51 = org.joda.time.Duration.standardMinutes((-1L));
        long long52 = duration51.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant53 = null;
        org.joda.time.Period period54 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration51, readableInstant53);
        org.joda.time.PeriodType periodType55 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology56 = null;
        org.joda.time.Period period57 = duration51.toPeriod(periodType55, chronology56);
        org.joda.time.Period period58 = duration47.toPeriod(periodType55);
        org.joda.time.Duration duration60 = org.joda.time.Duration.standardMinutes((-1L));
        long long61 = duration60.getStandardMinutes();
        boolean boolean62 = duration47.isLongerThan((org.joda.time.ReadableDuration) duration60);
        org.joda.time.Duration duration64 = org.joda.time.Duration.standardMinutes((-1L));
        long long65 = duration64.getStandardMinutes();
        org.joda.time.Duration duration67 = org.joda.time.Duration.standardMinutes((-1L));
        long long68 = duration67.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant69 = null;
        org.joda.time.Period period70 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration67, readableInstant69);
        org.joda.time.PeriodType periodType71 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology72 = null;
        org.joda.time.Period period73 = duration67.toPeriod(periodType71, chronology72);
        org.joda.time.Duration duration74 = duration67.toDuration();
        org.joda.time.Duration duration76 = duration64.withDurationAdded((org.joda.time.ReadableDuration) duration74, 100);
        int int77 = duration60.compareTo((org.joda.time.ReadableDuration) duration76);
        org.joda.time.PeriodType periodType78 = org.joda.time.PeriodType.yearWeekDay();
        org.joda.time.Period period79 = duration60.toPeriod(periodType78);
        org.joda.time.Period period80 = duration23.toPeriodTo(readableInstant45, periodType78);
        java.lang.String str81 = periodType78.toString();
        org.joda.time.PeriodType periodType82 = periodType78.withMillisRemoved();
        org.joda.time.PeriodType periodType83 = periodType78.withYearsRemoved();
        org.joda.time.Chronology chronology84 = null;
        org.joda.time.MutablePeriod mutablePeriod85 = new org.joda.time.MutablePeriod((-59990L), (long) 0, periodType83, chronology84);
        org.joda.time.MutablePeriod mutablePeriod86 = new org.joda.time.MutablePeriod(periodType83);
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + (-1L) + "'", long5 == (-1L));
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(duration8);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + (-1L) + "'", long9 == (-1L));
        org.junit.Assert.assertNotNull(periodType12);
        org.junit.Assert.assertNotNull(period14);
        org.junit.Assert.assertNotNull(period15);
        org.junit.Assert.assertNotNull(duration17);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + (-1L) + "'", long18 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(periodType20);
        org.junit.Assert.assertNotNull(duration23);
        org.junit.Assert.assertNotNull(duration26);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + (-1L) + "'", long27 == (-1L));
        org.junit.Assert.assertNotNull(period28);
        org.junit.Assert.assertNotNull(duration30);
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + (-1L) + "'", long31 == (-1L));
        org.junit.Assert.assertNotNull(periodType34);
        org.junit.Assert.assertNotNull(period36);
        org.junit.Assert.assertNotNull(period37);
        org.junit.Assert.assertNotNull(duration39);
        org.junit.Assert.assertTrue("'" + long40 + "' != '" + (-1L) + "'", long40 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(periodType42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(duration47);
        org.junit.Assert.assertTrue("'" + long48 + "' != '" + (-1L) + "'", long48 == (-1L));
        org.junit.Assert.assertNotNull(period49);
        org.junit.Assert.assertNotNull(duration51);
        org.junit.Assert.assertTrue("'" + long52 + "' != '" + (-1L) + "'", long52 == (-1L));
        org.junit.Assert.assertNotNull(periodType55);
        org.junit.Assert.assertNotNull(period57);
        org.junit.Assert.assertNotNull(period58);
        org.junit.Assert.assertNotNull(duration60);
        org.junit.Assert.assertTrue("'" + long61 + "' != '" + (-1L) + "'", long61 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(duration64);
        org.junit.Assert.assertTrue("'" + long65 + "' != '" + (-1L) + "'", long65 == (-1L));
        org.junit.Assert.assertNotNull(duration67);
        org.junit.Assert.assertTrue("'" + long68 + "' != '" + (-1L) + "'", long68 == (-1L));
        org.junit.Assert.assertNotNull(periodType71);
        org.junit.Assert.assertNotNull(period73);
        org.junit.Assert.assertNotNull(duration74);
        org.junit.Assert.assertNotNull(duration76);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 1 + "'", int77 == 1);
        org.junit.Assert.assertNotNull(periodType78);
        org.junit.Assert.assertNotNull(period79);
        org.junit.Assert.assertNotNull(period80);
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "PeriodType[YearWeekDay]" + "'", str81, "PeriodType[YearWeekDay]");
        org.junit.Assert.assertNotNull(periodType82);
        org.junit.Assert.assertNotNull(periodType83);
    }

    @Test
    public void test17750() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17750");
        org.joda.time.Period period1 = org.joda.time.Period.millis((int) (short) 0);
        org.joda.time.Period period3 = period1.withMonths((int) '#');
        org.joda.time.ReadableInstant readableInstant4 = null;
        org.joda.time.Duration duration6 = org.joda.time.Duration.standardMinutes((-1L));
        long long7 = duration6.getStandardMinutes();
        org.joda.time.Duration duration9 = org.joda.time.Duration.standardMinutes((-1L));
        long long10 = duration9.getStandardMinutes();
        boolean boolean11 = duration6.isLongerThan((org.joda.time.ReadableDuration) duration9);
        org.joda.time.Duration duration13 = duration9.withMillis(1L);
        org.joda.time.Period period14 = new org.joda.time.Period(readableInstant4, (org.joda.time.ReadableDuration) duration9);
        org.joda.time.DurationFieldType durationFieldType15 = org.joda.time.DurationFieldType.weekyears();
        int int16 = period14.get(durationFieldType15);
        org.joda.time.MutablePeriod mutablePeriod17 = period14.toMutablePeriod();
        org.joda.time.Period period18 = period3.plus((org.joda.time.ReadablePeriod) mutablePeriod17);
        org.joda.time.Period period20 = period3.minusMillis(97);
        org.joda.time.ReadableInstant readableInstant21 = null;
        org.joda.time.ReadableDuration readableDuration22 = null;
        org.joda.time.Period period23 = new org.joda.time.Period(readableInstant21, readableDuration22);
        org.joda.time.DurationFieldType durationFieldType24 = org.joda.time.DurationFieldType.centuries();
        org.joda.time.Period period26 = period23.withFieldAdded(durationFieldType24, (int) (byte) 0);
        org.joda.time.Period period28 = period23.withSeconds(8);
        org.joda.time.Period period30 = period23.minusYears(7);
        org.joda.time.PeriodType periodType31 = period30.getPeriodType();
        org.joda.time.PeriodType periodType32 = periodType31.withMinutesRemoved();
        org.joda.time.PeriodType periodType33 = periodType31.withMinutesRemoved();
        org.joda.time.MutablePeriod mutablePeriod34 = new org.joda.time.MutablePeriod((java.lang.Object) period3, periodType33);
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(period3);
        org.junit.Assert.assertNotNull(duration6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + (-1L) + "'", long10 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertNotNull(durationFieldType15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod17);
        org.junit.Assert.assertNotNull(period18);
        org.junit.Assert.assertNotNull(period20);
        org.junit.Assert.assertNotNull(durationFieldType24);
        org.junit.Assert.assertNotNull(period26);
        org.junit.Assert.assertNotNull(period28);
        org.junit.Assert.assertNotNull(period30);
        org.junit.Assert.assertNotNull(periodType31);
        org.junit.Assert.assertNotNull(periodType32);
        org.junit.Assert.assertNotNull(periodType33);
    }

    @Test
    public void test17751() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17751");
        org.joda.time.Period period1 = org.joda.time.Period.millis((-60));
        org.joda.time.Period period3 = period1.withDays(2);
        org.joda.time.Period period5 = period3.multipliedBy(100);
        org.joda.time.Period period7 = period5.minusWeeks((int) '#');
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.Duration duration10 = org.joda.time.Duration.standardMinutes((long) 35);
        org.joda.time.ReadableInstant readableInstant11 = null;
        org.joda.time.ReadableInstant readableInstant12 = null;
        org.joda.time.ReadableInstant readableInstant13 = null;
        org.joda.time.Duration duration15 = org.joda.time.Duration.standardMinutes((-1L));
        long long16 = duration15.getStandardMinutes();
        org.joda.time.Duration duration18 = org.joda.time.Duration.standardMinutes((-1L));
        long long19 = duration18.getStandardMinutes();
        boolean boolean20 = duration15.isLongerThan((org.joda.time.ReadableDuration) duration18);
        org.joda.time.Duration duration22 = duration18.withMillis((long) 1);
        org.joda.time.Duration duration24 = org.joda.time.Duration.standardMinutes((-1L));
        long long25 = duration24.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant26 = null;
        org.joda.time.Period period27 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration24, readableInstant26);
        org.joda.time.PeriodType periodType28 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology29 = null;
        org.joda.time.Period period30 = duration24.toPeriod(periodType28, chronology29);
        org.joda.time.Duration duration33 = duration24.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration35 = org.joda.time.Duration.standardMinutes((-1L));
        long long36 = duration35.getStandardMinutes();
        org.joda.time.Duration duration38 = org.joda.time.Duration.standardMinutes((-1L));
        long long39 = duration38.getStandardMinutes();
        boolean boolean40 = duration35.isLongerThan((org.joda.time.ReadableDuration) duration38);
        org.joda.time.Duration duration42 = duration38.withMillis((long) 1);
        boolean boolean43 = duration33.isShorterThan((org.joda.time.ReadableDuration) duration38);
        boolean boolean44 = duration18.isLongerThan((org.joda.time.ReadableDuration) duration38);
        org.joda.time.Duration duration46 = org.joda.time.Duration.standardMinutes((-1L));
        long long47 = duration46.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant48 = null;
        org.joda.time.Period period49 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration46, readableInstant48);
        org.joda.time.PeriodType periodType50 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology51 = null;
        org.joda.time.Period period52 = duration46.toPeriod(periodType50, chronology51);
        org.joda.time.Duration duration53 = duration46.toDuration();
        boolean boolean54 = duration18.isEqual((org.joda.time.ReadableDuration) duration46);
        org.joda.time.Duration duration56 = org.joda.time.Duration.standardMinutes((-1L));
        long long57 = duration56.getStandardMinutes();
        org.joda.time.Duration duration59 = org.joda.time.Duration.standardMinutes((-1L));
        long long60 = duration59.getStandardMinutes();
        boolean boolean61 = duration56.isLongerThan((org.joda.time.ReadableDuration) duration59);
        org.joda.time.Duration duration62 = duration18.plus((org.joda.time.ReadableDuration) duration59);
        org.joda.time.Duration duration65 = duration59.withDurationAdded((long) 0, (int) (byte) 10);
        org.joda.time.Duration duration67 = org.joda.time.Duration.standardMinutes((-1L));
        long long68 = duration67.getStandardMinutes();
        org.joda.time.Duration duration70 = org.joda.time.Duration.standardMinutes((-1L));
        long long71 = duration70.getStandardMinutes();
        boolean boolean72 = duration67.isLongerThan((org.joda.time.ReadableDuration) duration70);
        org.joda.time.Duration duration74 = duration70.withMillis((long) 1);
        org.joda.time.Duration duration75 = duration65.plus((org.joda.time.ReadableDuration) duration74);
        org.joda.time.PeriodType periodType78 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period79 = new org.joda.time.Period(10L, periodType78);
        org.joda.time.PeriodType periodType80 = periodType78.withWeeksRemoved();
        org.joda.time.MutablePeriod mutablePeriod81 = new org.joda.time.MutablePeriod((long) 10, periodType80);
        org.joda.time.MutablePeriod mutablePeriod82 = new org.joda.time.MutablePeriod(readableInstant13, (org.joda.time.ReadableDuration) duration65, periodType80);
        org.joda.time.MutablePeriod mutablePeriod83 = new org.joda.time.MutablePeriod(readableInstant11, readableInstant12, periodType80);
        org.joda.time.PeriodType periodType84 = periodType80.withMillisRemoved();
        org.joda.time.Period period85 = duration10.toPeriod(periodType80);
        org.joda.time.Period period86 = new org.joda.time.Period(readableInstant8, (org.joda.time.ReadableDuration) duration10);
        org.joda.time.Days days87 = duration10.toStandardDays();
        org.joda.time.Period period88 = period5.plus((org.joda.time.ReadablePeriod) days87);
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(period3);
        org.junit.Assert.assertNotNull(period5);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertNotNull(duration15);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + (-1L) + "'", long16 == (-1L));
        org.junit.Assert.assertNotNull(duration18);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + (-1L) + "'", long19 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(duration22);
        org.junit.Assert.assertNotNull(duration24);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + (-1L) + "'", long25 == (-1L));
        org.junit.Assert.assertNotNull(periodType28);
        org.junit.Assert.assertNotNull(period30);
        org.junit.Assert.assertNotNull(duration33);
        org.junit.Assert.assertNotNull(duration35);
        org.junit.Assert.assertTrue("'" + long36 + "' != '" + (-1L) + "'", long36 == (-1L));
        org.junit.Assert.assertNotNull(duration38);
        org.junit.Assert.assertTrue("'" + long39 + "' != '" + (-1L) + "'", long39 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(duration42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(duration46);
        org.junit.Assert.assertTrue("'" + long47 + "' != '" + (-1L) + "'", long47 == (-1L));
        org.junit.Assert.assertNotNull(periodType50);
        org.junit.Assert.assertNotNull(period52);
        org.junit.Assert.assertNotNull(duration53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(duration56);
        org.junit.Assert.assertTrue("'" + long57 + "' != '" + (-1L) + "'", long57 == (-1L));
        org.junit.Assert.assertNotNull(duration59);
        org.junit.Assert.assertTrue("'" + long60 + "' != '" + (-1L) + "'", long60 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(duration62);
        org.junit.Assert.assertNotNull(duration65);
        org.junit.Assert.assertNotNull(duration67);
        org.junit.Assert.assertTrue("'" + long68 + "' != '" + (-1L) + "'", long68 == (-1L));
        org.junit.Assert.assertNotNull(duration70);
        org.junit.Assert.assertTrue("'" + long71 + "' != '" + (-1L) + "'", long71 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(duration74);
        org.junit.Assert.assertNotNull(duration75);
        org.junit.Assert.assertNotNull(periodType78);
        org.junit.Assert.assertNotNull(periodType80);
        org.junit.Assert.assertNotNull(periodType84);
        org.junit.Assert.assertNotNull(period85);
        org.junit.Assert.assertNotNull(days87);
        org.junit.Assert.assertNotNull(period88);
    }

    @Test
    public void test17752() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17752");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.MutablePeriod mutablePeriod3 = new org.joda.time.MutablePeriod((long) 0, (long) 35, chronology2);
        org.joda.time.Duration duration5 = org.joda.time.Duration.standardMinutes((-1L));
        long long6 = duration5.getStandardMinutes();
        org.joda.time.Duration duration8 = org.joda.time.Duration.standardMinutes((-1L));
        long long9 = duration8.getStandardMinutes();
        boolean boolean10 = duration5.isLongerThan((org.joda.time.ReadableDuration) duration8);
        org.joda.time.Duration duration12 = duration8.withMillis((long) 1);
        org.joda.time.Duration duration14 = org.joda.time.Duration.standardMinutes((-1L));
        long long15 = duration14.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant16 = null;
        org.joda.time.Period period17 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration14, readableInstant16);
        org.joda.time.PeriodType periodType18 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology19 = null;
        org.joda.time.Period period20 = duration14.toPeriod(periodType18, chronology19);
        org.joda.time.Duration duration23 = duration14.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration25 = org.joda.time.Duration.standardMinutes((-1L));
        long long26 = duration25.getStandardMinutes();
        org.joda.time.Duration duration28 = org.joda.time.Duration.standardMinutes((-1L));
        long long29 = duration28.getStandardMinutes();
        boolean boolean30 = duration25.isLongerThan((org.joda.time.ReadableDuration) duration28);
        org.joda.time.Duration duration32 = duration28.withMillis((long) 1);
        boolean boolean33 = duration23.isShorterThan((org.joda.time.ReadableDuration) duration28);
        boolean boolean34 = duration8.isLongerThan((org.joda.time.ReadableDuration) duration28);
        org.joda.time.Duration duration36 = org.joda.time.Duration.standardMinutes((-1L));
        long long37 = duration36.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant38 = null;
        org.joda.time.Period period39 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration36, readableInstant38);
        org.joda.time.PeriodType periodType40 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology41 = null;
        org.joda.time.Period period42 = duration36.toPeriod(periodType40, chronology41);
        org.joda.time.Duration duration43 = duration36.toDuration();
        boolean boolean44 = duration8.isEqual((org.joda.time.ReadableDuration) duration36);
        org.joda.time.Duration duration46 = org.joda.time.Duration.standardMinutes((-1L));
        long long47 = duration46.getStandardMinutes();
        org.joda.time.Duration duration49 = org.joda.time.Duration.standardMinutes((-1L));
        long long50 = duration49.getStandardMinutes();
        boolean boolean51 = duration46.isLongerThan((org.joda.time.ReadableDuration) duration49);
        org.joda.time.Duration duration52 = duration8.plus((org.joda.time.ReadableDuration) duration49);
        org.joda.time.Duration duration55 = duration49.withDurationAdded((long) 0, (int) (byte) 10);
        org.joda.time.Duration duration57 = org.joda.time.Duration.standardMinutes((-1L));
        long long58 = duration57.getStandardMinutes();
        org.joda.time.Duration duration60 = org.joda.time.Duration.standardMinutes((-1L));
        long long61 = duration60.getStandardMinutes();
        boolean boolean62 = duration57.isLongerThan((org.joda.time.ReadableDuration) duration60);
        org.joda.time.Duration duration64 = duration60.withMillis((long) 1);
        org.joda.time.Duration duration65 = duration55.plus((org.joda.time.ReadableDuration) duration64);
        org.joda.time.Duration duration67 = duration65.minus((long) (-90));
        org.joda.time.Duration duration69 = org.joda.time.Duration.standardSeconds((long) (short) 0);
        boolean boolean70 = duration65.isShorterThan((org.joda.time.ReadableDuration) duration69);
        org.joda.time.ReadableInstant readableInstant71 = null;
        org.joda.time.Interval interval72 = duration69.toIntervalTo(readableInstant71);
        mutablePeriod3.add((org.joda.time.ReadableInterval) interval72);
        mutablePeriod3.setMonths((-2));
        org.junit.Assert.assertNotNull(duration5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
        org.junit.Assert.assertNotNull(duration8);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + (-1L) + "'", long9 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + (-1L) + "'", long15 == (-1L));
        org.junit.Assert.assertNotNull(periodType18);
        org.junit.Assert.assertNotNull(period20);
        org.junit.Assert.assertNotNull(duration23);
        org.junit.Assert.assertNotNull(duration25);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + (-1L) + "'", long26 == (-1L));
        org.junit.Assert.assertNotNull(duration28);
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + (-1L) + "'", long29 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(duration32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(duration36);
        org.junit.Assert.assertTrue("'" + long37 + "' != '" + (-1L) + "'", long37 == (-1L));
        org.junit.Assert.assertNotNull(periodType40);
        org.junit.Assert.assertNotNull(period42);
        org.junit.Assert.assertNotNull(duration43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(duration46);
        org.junit.Assert.assertTrue("'" + long47 + "' != '" + (-1L) + "'", long47 == (-1L));
        org.junit.Assert.assertNotNull(duration49);
        org.junit.Assert.assertTrue("'" + long50 + "' != '" + (-1L) + "'", long50 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(duration52);
        org.junit.Assert.assertNotNull(duration55);
        org.junit.Assert.assertNotNull(duration57);
        org.junit.Assert.assertTrue("'" + long58 + "' != '" + (-1L) + "'", long58 == (-1L));
        org.junit.Assert.assertNotNull(duration60);
        org.junit.Assert.assertTrue("'" + long61 + "' != '" + (-1L) + "'", long61 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(duration64);
        org.junit.Assert.assertNotNull(duration65);
        org.junit.Assert.assertNotNull(duration67);
        org.junit.Assert.assertNotNull(duration69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(interval72);
    }

    @Test
    public void test17753() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17753");
        org.joda.time.Period period1 = org.joda.time.Period.days(98);
        org.junit.Assert.assertNotNull(period1);
    }

    @Test
    public void test17754() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17754");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.MutablePeriod mutablePeriod3 = new org.joda.time.MutablePeriod(10L, (long) 1, chronology2);
        org.joda.time.Period period5 = org.joda.time.Period.seconds((int) '#');
        int int6 = period5.getMillis();
        org.joda.time.Period period8 = period5.withMillis((int) '#');
        int int9 = period5.size();
        org.joda.time.Period period11 = period5.withMinutes(0);
        org.joda.time.Hours hours12 = period5.toStandardHours();
        mutablePeriod3.add((org.joda.time.ReadablePeriod) hours12);
        java.lang.Object obj14 = mutablePeriod3.clone();
        org.joda.time.ReadableInstant readableInstant15 = null;
        org.joda.time.Duration duration16 = mutablePeriod3.toDurationTo(readableInstant15);
        java.lang.Object obj17 = mutablePeriod3.clone();
        mutablePeriod3.setMonths((int) '4');
        org.junit.Assert.assertNotNull(period5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 8 + "'", int9 == 8);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertEquals(obj14.toString(), "P52MT0.009S");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj14), "P52MT0.009S");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj14), "P52MT0.009S");
        org.junit.Assert.assertNotNull(duration16);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertEquals(obj17.toString(), "P52MT0.009S");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj17), "P52MT0.009S");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj17), "P52MT0.009S");
    }

    @Test
    public void test17755() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17755");
        org.joda.time.MutablePeriod mutablePeriod4 = new org.joda.time.MutablePeriod(1, 0, (int) (byte) 1, 100);
        mutablePeriod4.setSeconds(0);
        org.joda.time.Chronology chronology8 = null;
        mutablePeriod4.setPeriod((long) 0, chronology8);
        org.joda.time.Chronology chronology11 = null;
        mutablePeriod4.setPeriod(0L, chronology11);
        mutablePeriod4.add((long) (byte) 0);
        java.lang.Object obj15 = mutablePeriod4.clone();
        mutablePeriod4.addHours(108);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals(obj15.toString(), "PT108H");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj15), "PT108H");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj15), "PT108H");
    }

    @Test
    public void test17756() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17756");
        org.joda.time.MutablePeriod mutablePeriod4 = new org.joda.time.MutablePeriod(11, 11, (-17), (int) (byte) 10);
        org.joda.time.ReadableInstant readableInstant5 = null;
        org.joda.time.Duration duration7 = org.joda.time.Duration.standardMinutes((-1L));
        long long8 = duration7.getStandardMinutes();
        org.joda.time.Duration duration10 = org.joda.time.Duration.standardMinutes((-1L));
        long long11 = duration10.getStandardMinutes();
        boolean boolean12 = duration7.isLongerThan((org.joda.time.ReadableDuration) duration10);
        org.joda.time.Period period13 = duration10.toPeriod();
        org.joda.time.Minutes minutes14 = duration10.toStandardMinutes();
        org.joda.time.Duration duration16 = org.joda.time.Duration.standardMinutes((-1L));
        long long17 = duration16.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant18 = null;
        org.joda.time.Period period19 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration16, readableInstant18);
        org.joda.time.PeriodType periodType20 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology21 = null;
        org.joda.time.Period period22 = duration16.toPeriod(periodType20, chronology21);
        org.joda.time.Duration duration25 = duration16.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration26 = duration10.plus((org.joda.time.ReadableDuration) duration25);
        org.joda.time.Period period28 = org.joda.time.Period.seconds((int) '#');
        org.joda.time.Period period30 = period28.plusMinutes(10);
        org.joda.time.PeriodType periodType31 = period30.getPeriodType();
        org.joda.time.Period period32 = new org.joda.time.Period(readableInstant5, (org.joda.time.ReadableDuration) duration25, periodType31);
        org.joda.time.PeriodType periodType34 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology35 = null;
        org.joda.time.MutablePeriod mutablePeriod36 = new org.joda.time.MutablePeriod((long) '4', periodType34, chronology35);
        org.joda.time.ReadableDuration readableDuration37 = null;
        org.joda.time.Chronology chronology38 = null;
        mutablePeriod36.setPeriod(readableDuration37, chronology38);
        org.joda.time.ReadableInstant readableInstant40 = null;
        org.joda.time.Duration duration41 = mutablePeriod36.toDurationFrom(readableInstant40);
        boolean boolean42 = duration25.isShorterThan((org.joda.time.ReadableDuration) duration41);
        long long43 = duration25.getStandardDays();
        mutablePeriod4.setPeriod((org.joda.time.ReadableDuration) duration25);
        org.joda.time.ReadableInstant readableInstant45 = null;
        org.joda.time.Period period46 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration25, readableInstant45);
        org.junit.Assert.assertNotNull(duration7);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + (-1L) + "'", long8 == (-1L));
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + (-1L) + "'", long11 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(period13);
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertNotNull(duration16);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + (-1L) + "'", long17 == (-1L));
        org.junit.Assert.assertNotNull(periodType20);
        org.junit.Assert.assertNotNull(period22);
        org.junit.Assert.assertNotNull(duration25);
        org.junit.Assert.assertNotNull(duration26);
        org.junit.Assert.assertNotNull(period28);
        org.junit.Assert.assertNotNull(period30);
        org.junit.Assert.assertNotNull(periodType31);
        org.junit.Assert.assertNotNull(periodType34);
        org.junit.Assert.assertNotNull(duration41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + long43 + "' != '" + 0L + "'", long43 == 0L);
    }

    @Test
    public void test17757() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17757");
        org.joda.time.Chronology chronology1 = null;
        org.joda.time.MutablePeriod mutablePeriod2 = new org.joda.time.MutablePeriod(1L, chronology1);
        org.joda.time.Chronology chronology4 = null;
        org.joda.time.MutablePeriod mutablePeriod5 = new org.joda.time.MutablePeriod(1L, chronology4);
        mutablePeriod2.add((org.joda.time.ReadablePeriod) mutablePeriod5);
        mutablePeriod2.setMillis((int) (short) 0);
        org.joda.time.Chronology chronology10 = null;
        mutablePeriod2.add((long) (short) 0, chronology10);
        org.joda.time.PeriodType periodType14 = org.joda.time.PeriodType.seconds();
        org.joda.time.PeriodType periodType15 = periodType14.withMinutesRemoved();
        org.joda.time.Chronology chronology16 = null;
        org.joda.time.MutablePeriod mutablePeriod17 = new org.joda.time.MutablePeriod((long) 0, (long) (short) 100, periodType14, chronology16);
        org.joda.time.PeriodType periodType18 = periodType14.withMillisRemoved();
        org.joda.time.Chronology chronology19 = null;
        org.joda.time.MutablePeriod mutablePeriod20 = new org.joda.time.MutablePeriod((java.lang.Object) mutablePeriod2, periodType18, chronology19);
        org.joda.time.format.PeriodPrinter periodPrinter21 = null;
        org.joda.time.format.PeriodParser periodParser22 = null;
        org.joda.time.format.PeriodFormatter periodFormatter23 = new org.joda.time.format.PeriodFormatter(periodPrinter21, periodParser22);
        org.joda.time.format.PeriodPrinter periodPrinter24 = periodFormatter23.getPrinter();
        boolean boolean25 = periodFormatter23.isParser();
        java.util.Locale locale26 = periodFormatter23.getLocale();
        boolean boolean27 = periodType18.equals((java.lang.Object) periodFormatter23);
        org.joda.time.PeriodType periodType32 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period33 = new org.joda.time.Period(10L, periodType32);
        org.joda.time.PeriodType periodType34 = periodType32.withWeeksRemoved();
        org.joda.time.MutablePeriod mutablePeriod35 = new org.joda.time.MutablePeriod((long) (byte) 0, periodType32);
        org.joda.time.PeriodType periodType36 = periodType32.withWeeksRemoved();
        org.joda.time.MutablePeriod mutablePeriod37 = new org.joda.time.MutablePeriod(periodType32);
        org.joda.time.Chronology chronology38 = null;
        org.joda.time.Period period39 = new org.joda.time.Period((-60000L), 100L, periodType32, chronology38);
        org.joda.time.format.PeriodFormatter periodFormatter40 = periodFormatter23.withParseType(periodType32);
        org.joda.time.format.PeriodPrinter periodPrinter41 = periodFormatter40.getPrinter();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.MutablePeriod mutablePeriod43 = periodFormatter40.parseMutablePeriod("P8Y-1M-17W10DT-1H-1M9.999S");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Parsing not supported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(periodType14);
        org.junit.Assert.assertNotNull(periodType15);
        org.junit.Assert.assertNotNull(periodType18);
        org.junit.Assert.assertNull(periodPrinter24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNull(locale26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(periodType32);
        org.junit.Assert.assertNotNull(periodType34);
        org.junit.Assert.assertNotNull(periodType36);
        org.junit.Assert.assertNotNull(periodFormatter40);
        org.junit.Assert.assertNull(periodPrinter41);
    }

    @Test
    public void test17758() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17758");
        org.joda.time.Period period1 = new org.joda.time.Period(42L);
    }

    @Test
    public void test17759() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17759");
        org.joda.time.Period period1 = org.joda.time.Period.hours((-7776));
        org.junit.Assert.assertNotNull(period1);
    }

    @Test
    public void test17760() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17760");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.Duration duration2 = new org.joda.time.Duration(0L);
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.Interval interval4 = duration2.toIntervalFrom(readableInstant3);
        java.lang.String str5 = duration2.toString();
        org.joda.time.Seconds seconds6 = duration2.toStandardSeconds();
        java.lang.Object obj7 = null;
        org.joda.time.PeriodType periodType9 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period10 = new org.joda.time.Period(10L, periodType9);
        org.joda.time.DurationFieldType durationFieldType11 = org.joda.time.DurationFieldType.weeks();
        boolean boolean12 = periodType9.isSupported(durationFieldType11);
        org.joda.time.DurationFieldType durationFieldType13 = org.joda.time.DurationFieldType.centuries();
        int int14 = periodType9.indexOf(durationFieldType13);
        org.joda.time.PeriodType periodType15 = periodType9.withMinutesRemoved();
        org.joda.time.Chronology chronology16 = null;
        org.joda.time.MutablePeriod mutablePeriod17 = new org.joda.time.MutablePeriod(obj7, periodType9, chronology16);
        org.joda.time.Period period18 = new org.joda.time.Period(readableInstant0, (org.joda.time.ReadableDuration) duration2, periodType9);
        java.lang.Object obj19 = null;
        org.joda.time.Duration duration22 = org.joda.time.Duration.standardMinutes((-1L));
        long long23 = duration22.getStandardMinutes();
        org.joda.time.Period period24 = duration22.toPeriod();
        org.joda.time.Duration duration26 = org.joda.time.Duration.standardMinutes((-1L));
        long long27 = duration26.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant28 = null;
        org.joda.time.Period period29 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration26, readableInstant28);
        org.joda.time.PeriodType periodType30 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology31 = null;
        org.joda.time.Period period32 = duration26.toPeriod(periodType30, chronology31);
        org.joda.time.Period period33 = duration22.toPeriod(periodType30);
        org.joda.time.Duration duration35 = org.joda.time.Duration.standardMinutes((-1L));
        long long36 = duration35.getStandardMinutes();
        boolean boolean37 = duration22.isLongerThan((org.joda.time.ReadableDuration) duration35);
        org.joda.time.PeriodType periodType39 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology40 = null;
        org.joda.time.MutablePeriod mutablePeriod41 = new org.joda.time.MutablePeriod((long) '4', periodType39, chronology40);
        org.joda.time.Chronology chronology42 = null;
        org.joda.time.Period period43 = duration22.toPeriod(periodType39, chronology42);
        org.joda.time.Chronology chronology44 = null;
        org.joda.time.MutablePeriod mutablePeriod45 = new org.joda.time.MutablePeriod((long) '4', periodType39, chronology44);
        org.joda.time.PeriodType periodType46 = periodType39.withMonthsRemoved();
        org.joda.time.PeriodType periodType47 = periodType39.withWeeksRemoved();
        org.joda.time.PeriodType periodType48 = periodType47.withMinutesRemoved();
        org.joda.time.Period period49 = new org.joda.time.Period(obj19, periodType47);
        org.joda.time.Chronology chronology50 = null;
        org.joda.time.Period period51 = duration2.toPeriod(periodType47, chronology50);
        long long52 = duration2.getMillis();
        org.junit.Assert.assertNotNull(interval4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "PT0S" + "'", str5, "PT0S");
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertNotNull(periodType9);
        org.junit.Assert.assertNotNull(durationFieldType11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(durationFieldType13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNotNull(periodType15);
        org.junit.Assert.assertNotNull(duration22);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + (-1L) + "'", long23 == (-1L));
        org.junit.Assert.assertNotNull(period24);
        org.junit.Assert.assertNotNull(duration26);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + (-1L) + "'", long27 == (-1L));
        org.junit.Assert.assertNotNull(periodType30);
        org.junit.Assert.assertNotNull(period32);
        org.junit.Assert.assertNotNull(period33);
        org.junit.Assert.assertNotNull(duration35);
        org.junit.Assert.assertTrue("'" + long36 + "' != '" + (-1L) + "'", long36 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(periodType39);
        org.junit.Assert.assertNotNull(period43);
        org.junit.Assert.assertNotNull(periodType46);
        org.junit.Assert.assertNotNull(periodType47);
        org.junit.Assert.assertNotNull(periodType48);
        org.junit.Assert.assertNotNull(period51);
        org.junit.Assert.assertTrue("'" + long52 + "' != '" + 0L + "'", long52 == 0L);
    }

    @Test
    public void test17761() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17761");
        org.joda.time.Period period1 = org.joda.time.Period.weeks(11);
        org.junit.Assert.assertNotNull(period1);
    }

    @Test
    public void test17762() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17762");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((-1L));
        long long2 = duration1.getStandardMinutes();
        org.joda.time.Duration duration4 = org.joda.time.Duration.standardMinutes((-1L));
        long long5 = duration4.getStandardMinutes();
        boolean boolean6 = duration1.isLongerThan((org.joda.time.ReadableDuration) duration4);
        org.joda.time.Duration duration8 = duration4.withMillis((long) 1);
        org.joda.time.Duration duration10 = org.joda.time.Duration.standardMinutes((-1L));
        long long11 = duration10.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant12 = null;
        org.joda.time.Period period13 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration10, readableInstant12);
        org.joda.time.PeriodType periodType14 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology15 = null;
        org.joda.time.Period period16 = duration10.toPeriod(periodType14, chronology15);
        org.joda.time.Duration duration19 = duration10.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration21 = org.joda.time.Duration.standardMinutes((-1L));
        long long22 = duration21.getStandardMinutes();
        org.joda.time.Duration duration24 = org.joda.time.Duration.standardMinutes((-1L));
        long long25 = duration24.getStandardMinutes();
        boolean boolean26 = duration21.isLongerThan((org.joda.time.ReadableDuration) duration24);
        org.joda.time.Duration duration28 = duration24.withMillis((long) 1);
        boolean boolean29 = duration19.isShorterThan((org.joda.time.ReadableDuration) duration24);
        boolean boolean30 = duration4.isLongerThan((org.joda.time.ReadableDuration) duration24);
        org.joda.time.Duration duration32 = org.joda.time.Duration.standardMinutes((-1L));
        long long33 = duration32.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant34 = null;
        org.joda.time.Period period35 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration32, readableInstant34);
        org.joda.time.PeriodType periodType36 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology37 = null;
        org.joda.time.Period period38 = duration32.toPeriod(periodType36, chronology37);
        org.joda.time.Duration duration39 = duration32.toDuration();
        boolean boolean40 = duration4.isEqual((org.joda.time.ReadableDuration) duration32);
        org.joda.time.Duration duration42 = org.joda.time.Duration.standardMinutes((-1L));
        long long43 = duration42.getStandardMinutes();
        org.joda.time.Duration duration45 = org.joda.time.Duration.standardMinutes((-1L));
        long long46 = duration45.getStandardMinutes();
        boolean boolean47 = duration42.isLongerThan((org.joda.time.ReadableDuration) duration45);
        org.joda.time.Duration duration48 = duration4.plus((org.joda.time.ReadableDuration) duration45);
        org.joda.time.Duration duration51 = duration45.withDurationAdded((long) 0, (int) (byte) 10);
        org.joda.time.Duration duration53 = org.joda.time.Duration.standardMinutes((-1L));
        long long54 = duration53.getStandardMinutes();
        org.joda.time.Duration duration56 = org.joda.time.Duration.standardMinutes((-1L));
        long long57 = duration56.getStandardMinutes();
        boolean boolean58 = duration53.isLongerThan((org.joda.time.ReadableDuration) duration56);
        org.joda.time.Duration duration60 = duration56.withMillis((long) 1);
        org.joda.time.Duration duration61 = duration51.plus((org.joda.time.ReadableDuration) duration60);
        org.joda.time.Duration duration63 = new org.joda.time.Duration((-2L));
        boolean boolean64 = duration51.isLongerThan((org.joda.time.ReadableDuration) duration63);
        long long65 = duration63.getStandardDays();
        org.joda.time.ReadableInstant readableInstant66 = null;
        org.joda.time.PeriodType periodType67 = null;
        org.joda.time.MutablePeriod mutablePeriod68 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration63, readableInstant66, periodType67);
        org.joda.time.Minutes minutes69 = duration63.toStandardMinutes();
        org.joda.time.Chronology chronology71 = null;
        org.joda.time.Period period72 = new org.joda.time.Period(10L, chronology71);
        org.joda.time.Period period74 = period72.withMonths((-1));
        org.joda.time.ReadableInstant readableInstant75 = null;
        org.joda.time.Duration duration76 = period74.toDurationTo(readableInstant75);
        boolean boolean77 = duration63.isShorterThan((org.joda.time.ReadableDuration) duration76);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + (-1L) + "'", long2 == (-1L));
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + (-1L) + "'", long5 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(duration8);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + (-1L) + "'", long11 == (-1L));
        org.junit.Assert.assertNotNull(periodType14);
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertNotNull(duration19);
        org.junit.Assert.assertNotNull(duration21);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + (-1L) + "'", long22 == (-1L));
        org.junit.Assert.assertNotNull(duration24);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + (-1L) + "'", long25 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(duration28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(duration32);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + (-1L) + "'", long33 == (-1L));
        org.junit.Assert.assertNotNull(periodType36);
        org.junit.Assert.assertNotNull(period38);
        org.junit.Assert.assertNotNull(duration39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(duration42);
        org.junit.Assert.assertTrue("'" + long43 + "' != '" + (-1L) + "'", long43 == (-1L));
        org.junit.Assert.assertNotNull(duration45);
        org.junit.Assert.assertTrue("'" + long46 + "' != '" + (-1L) + "'", long46 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(duration48);
        org.junit.Assert.assertNotNull(duration51);
        org.junit.Assert.assertNotNull(duration53);
        org.junit.Assert.assertTrue("'" + long54 + "' != '" + (-1L) + "'", long54 == (-1L));
        org.junit.Assert.assertNotNull(duration56);
        org.junit.Assert.assertTrue("'" + long57 + "' != '" + (-1L) + "'", long57 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(duration60);
        org.junit.Assert.assertNotNull(duration61);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + long65 + "' != '" + 0L + "'", long65 == 0L);
        org.junit.Assert.assertNotNull(minutes69);
        org.junit.Assert.assertNotNull(period74);
        org.junit.Assert.assertNotNull(duration76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
    }

    @Test
    public void test17763() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17763");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes(0L);
        org.joda.time.ReadableInstant readableInstant2 = null;
        org.joda.time.Period period3 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration1, readableInstant2);
        org.joda.time.Hours hours4 = duration1.toStandardHours();
        long long5 = duration1.getStandardDays();
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 0L + "'", long5 == 0L);
    }

    @Test
    public void test17764() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17764");
        org.joda.time.Duration duration1 = org.joda.time.Duration.parse("PT-172800S");
        org.joda.time.Days days2 = duration1.toStandardDays();
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.MutablePeriod mutablePeriod4 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration1, readableInstant3);
        int int5 = mutablePeriod4.getHours();
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(days2);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
    }

    @Test
    public void test17765() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17765");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((-1L));
        long long2 = duration1.getStandardMinutes();
        org.joda.time.Period period3 = duration1.toPeriod();
        org.joda.time.Duration duration5 = org.joda.time.Duration.standardMinutes((-1L));
        long long6 = duration5.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.Period period8 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration5, readableInstant7);
        org.joda.time.PeriodType periodType9 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology10 = null;
        org.joda.time.Period period11 = duration5.toPeriod(periodType9, chronology10);
        org.joda.time.Period period12 = duration1.toPeriod(periodType9);
        org.joda.time.Duration duration14 = org.joda.time.Duration.standardMinutes((-1L));
        long long15 = duration14.getStandardMinutes();
        boolean boolean16 = duration1.isLongerThan((org.joda.time.ReadableDuration) duration14);
        org.joda.time.Duration duration18 = org.joda.time.Duration.standardMinutes((-1L));
        long long19 = duration18.getStandardMinutes();
        org.joda.time.Duration duration21 = org.joda.time.Duration.standardMinutes((-1L));
        long long22 = duration21.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant23 = null;
        org.joda.time.Period period24 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration21, readableInstant23);
        org.joda.time.PeriodType periodType25 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology26 = null;
        org.joda.time.Period period27 = duration21.toPeriod(periodType25, chronology26);
        org.joda.time.Duration duration28 = duration21.toDuration();
        org.joda.time.Duration duration30 = duration18.withDurationAdded((org.joda.time.ReadableDuration) duration28, 100);
        int int31 = duration14.compareTo((org.joda.time.ReadableDuration) duration30);
        org.joda.time.Duration duration32 = duration14.toDuration();
        org.joda.time.ReadableInstant readableInstant33 = null;
        org.joda.time.Period period34 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration32, readableInstant33);
        org.joda.time.Period period35 = new org.joda.time.Period();
        org.joda.time.Period period36 = period35.normalizedStandard();
        org.joda.time.PeriodType periodType37 = period36.getPeriodType();
        org.joda.time.Period period39 = period36.withWeeks((int) (short) 100);
        boolean boolean40 = duration32.equals((java.lang.Object) period36);
        org.joda.time.Duration duration41 = duration32.toDuration();
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + (-1L) + "'", long2 == (-1L));
        org.junit.Assert.assertNotNull(period3);
        org.junit.Assert.assertNotNull(duration5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
        org.junit.Assert.assertNotNull(periodType9);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + (-1L) + "'", long15 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(duration18);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + (-1L) + "'", long19 == (-1L));
        org.junit.Assert.assertNotNull(duration21);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + (-1L) + "'", long22 == (-1L));
        org.junit.Assert.assertNotNull(periodType25);
        org.junit.Assert.assertNotNull(period27);
        org.junit.Assert.assertNotNull(duration28);
        org.junit.Assert.assertNotNull(duration30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 1 + "'", int31 == 1);
        org.junit.Assert.assertNotNull(duration32);
        org.junit.Assert.assertNotNull(period36);
        org.junit.Assert.assertNotNull(periodType37);
        org.junit.Assert.assertNotNull(period39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(duration41);
    }

    @Test
    public void test17766() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17766");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((-1L));
        long long2 = duration1.getStandardMinutes();
        org.joda.time.Duration duration4 = org.joda.time.Duration.standardMinutes((-1L));
        long long5 = duration4.getStandardMinutes();
        boolean boolean6 = duration1.isLongerThan((org.joda.time.ReadableDuration) duration4);
        org.joda.time.PeriodType periodType9 = org.joda.time.PeriodType.seconds();
        org.joda.time.PeriodType periodType10 = periodType9.withMinutesRemoved();
        org.joda.time.Chronology chronology11 = null;
        org.joda.time.MutablePeriod mutablePeriod12 = new org.joda.time.MutablePeriod((long) 0, (long) (short) 100, periodType9, chronology11);
        org.joda.time.Duration duration14 = org.joda.time.Duration.standardMinutes((-1L));
        long long15 = duration14.getStandardMinutes();
        org.joda.time.Duration duration17 = org.joda.time.Duration.standardMinutes((-1L));
        long long18 = duration17.getStandardMinutes();
        boolean boolean19 = duration14.isLongerThan((org.joda.time.ReadableDuration) duration17);
        org.joda.time.Period period20 = duration17.toPeriod();
        org.joda.time.Minutes minutes21 = duration17.toStandardMinutes();
        mutablePeriod12.add((org.joda.time.ReadableDuration) duration17);
        org.joda.time.Duration duration24 = duration17.withMillis((long) (short) 10);
        org.joda.time.Duration duration25 = duration24.toDuration();
        org.joda.time.ReadableInstant readableInstant26 = null;
        org.joda.time.PeriodType periodType28 = org.joda.time.PeriodType.time();
        org.joda.time.MutablePeriod mutablePeriod29 = new org.joda.time.MutablePeriod((long) 'a', periodType28);
        org.joda.time.Period period30 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration25, readableInstant26, periodType28);
        org.joda.time.Duration duration31 = duration1.minus((org.joda.time.ReadableDuration) duration25);
        org.joda.time.Duration duration32 = duration25.toDuration();
        org.joda.time.ReadableInstant readableInstant33 = null;
        org.joda.time.Duration duration35 = org.joda.time.Duration.millis((long) (byte) 1);
        java.lang.Object obj36 = null;
        org.joda.time.PeriodType periodType38 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period39 = new org.joda.time.Period(10L, periodType38);
        org.joda.time.PeriodType periodType40 = periodType38.withHoursRemoved();
        org.joda.time.Period period41 = new org.joda.time.Period(obj36, periodType38);
        org.joda.time.Duration duration43 = org.joda.time.Duration.standardHours((long) 10);
        org.joda.time.ReadableInstant readableInstant44 = null;
        org.joda.time.MutablePeriod mutablePeriod45 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration43, readableInstant44);
        boolean boolean46 = periodType38.equals((java.lang.Object) duration43);
        boolean boolean47 = duration35.isShorterThan((org.joda.time.ReadableDuration) duration43);
        long long48 = duration43.getStandardHours();
        org.joda.time.ReadableInstant readableInstant49 = null;
        org.joda.time.ReadableInstant readableInstant50 = null;
        org.joda.time.Duration duration53 = org.joda.time.Duration.standardMinutes((-1L));
        long long54 = duration53.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant55 = null;
        org.joda.time.Period period56 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration53, readableInstant55);
        org.joda.time.Duration duration58 = org.joda.time.Duration.standardMinutes((-1L));
        long long59 = duration58.getStandardMinutes();
        org.joda.time.Period period60 = duration58.toPeriod();
        boolean boolean61 = duration53.isLongerThan((org.joda.time.ReadableDuration) duration58);
        org.joda.time.ReadableInstant readableInstant62 = null;
        org.joda.time.PeriodType periodType65 = org.joda.time.PeriodType.seconds();
        org.joda.time.PeriodType periodType66 = periodType65.withMinutesRemoved();
        org.joda.time.Chronology chronology67 = null;
        org.joda.time.MutablePeriod mutablePeriod68 = new org.joda.time.MutablePeriod((long) 0, (long) (short) 100, periodType65, chronology67);
        org.joda.time.PeriodType periodType69 = periodType65.withMillisRemoved();
        org.joda.time.Period period70 = duration53.toPeriodTo(readableInstant62, periodType69);
        org.joda.time.MutablePeriod mutablePeriod71 = new org.joda.time.MutablePeriod((-60L), periodType69);
        org.joda.time.PeriodType periodType72 = periodType69.withDaysRemoved();
        org.joda.time.Period period73 = new org.joda.time.Period(readableInstant49, readableInstant50, periodType72);
        org.joda.time.Chronology chronology74 = null;
        org.joda.time.Period period75 = duration43.toPeriod(periodType72, chronology74);
        org.joda.time.Period period76 = duration25.toPeriodTo(readableInstant33, periodType72);
        org.joda.time.PeriodType periodType77 = periodType72.withHoursRemoved();
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + (-1L) + "'", long2 == (-1L));
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + (-1L) + "'", long5 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(periodType9);
        org.junit.Assert.assertNotNull(periodType10);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + (-1L) + "'", long15 == (-1L));
        org.junit.Assert.assertNotNull(duration17);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + (-1L) + "'", long18 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(period20);
        org.junit.Assert.assertNotNull(minutes21);
        org.junit.Assert.assertNotNull(duration24);
        org.junit.Assert.assertNotNull(duration25);
        org.junit.Assert.assertNotNull(periodType28);
        org.junit.Assert.assertNotNull(duration31);
        org.junit.Assert.assertNotNull(duration32);
        org.junit.Assert.assertNotNull(duration35);
        org.junit.Assert.assertNotNull(periodType38);
        org.junit.Assert.assertNotNull(periodType40);
        org.junit.Assert.assertNotNull(duration43);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + long48 + "' != '" + 10L + "'", long48 == 10L);
        org.junit.Assert.assertNotNull(duration53);
        org.junit.Assert.assertTrue("'" + long54 + "' != '" + (-1L) + "'", long54 == (-1L));
        org.junit.Assert.assertNotNull(duration58);
        org.junit.Assert.assertTrue("'" + long59 + "' != '" + (-1L) + "'", long59 == (-1L));
        org.junit.Assert.assertNotNull(period60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(periodType65);
        org.junit.Assert.assertNotNull(periodType66);
        org.junit.Assert.assertNotNull(periodType69);
        org.junit.Assert.assertNotNull(period70);
        org.junit.Assert.assertNotNull(periodType72);
        org.junit.Assert.assertNotNull(period75);
        org.junit.Assert.assertNotNull(period76);
        org.junit.Assert.assertNotNull(periodType77);
    }

    @Test
    public void test17767() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17767");
        org.joda.time.Period period1 = org.joda.time.Period.seconds((int) '#');
        int int2 = period1.getMillis();
        org.joda.time.Period period4 = period1.withMillis((int) '#');
        int int5 = period1.size();
        org.joda.time.Period period7 = period1.withMinutes(0);
        org.joda.time.Hours hours8 = period1.toStandardHours();
        org.joda.time.Period period10 = period1.minusSeconds((int) (short) 0);
        org.joda.time.Period period12 = period1.minusMinutes((-1));
        org.joda.time.Period period14 = period12.minusMonths(100);
        org.joda.time.Period period16 = period12.plusMinutes((int) (byte) 0);
        org.joda.time.Period period18 = period12.minusWeeks((int) (byte) -1);
        org.joda.time.Chronology chronology20 = null;
        org.joda.time.MutablePeriod mutablePeriod21 = new org.joda.time.MutablePeriod(1L, chronology20);
        org.joda.time.Chronology chronology23 = null;
        org.joda.time.MutablePeriod mutablePeriod24 = new org.joda.time.MutablePeriod(1L, chronology23);
        mutablePeriod21.add((org.joda.time.ReadablePeriod) mutablePeriod24);
        org.joda.time.Duration duration27 = org.joda.time.Duration.standardMinutes((-1L));
        long long28 = duration27.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant29 = null;
        org.joda.time.Period period30 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration27, readableInstant29);
        mutablePeriod24.setPeriod((org.joda.time.ReadablePeriod) period30);
        mutablePeriod24.setMinutes((int) (short) 0);
        org.joda.time.DurationFieldType durationFieldType34 = org.joda.time.DurationFieldType.weeks();
        mutablePeriod24.add(durationFieldType34, 0);
        org.joda.time.Period period38 = period12.withFieldAdded(durationFieldType34, (int) '#');
        java.lang.String str39 = durationFieldType34.toString();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Duration duration40 = new org.joda.time.Duration((java.lang.Object) durationFieldType34);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: No duration converter found for type: org.joda.time.DurationFieldType$StandardDurationFieldType");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 8 + "'", int5 == 8);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertNotNull(period14);
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertNotNull(period18);
        org.junit.Assert.assertNotNull(duration27);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + (-1L) + "'", long28 == (-1L));
        org.junit.Assert.assertNotNull(durationFieldType34);
        org.junit.Assert.assertNotNull(period38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "weeks" + "'", str39, "weeks");
    }

    @Test
    public void test17768() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17768");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((long) '4');
        org.joda.time.Seconds seconds2 = duration1.toStandardSeconds();
        org.joda.time.Duration duration4 = org.joda.time.Duration.standardHours((long) 5);
        boolean boolean5 = duration1.isLongerThan((org.joda.time.ReadableDuration) duration4);
        org.joda.time.Duration duration6 = duration1.toDuration();
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.Period period9 = org.joda.time.Period.seconds((int) '#');
        org.joda.time.Period period10 = period9.toPeriod();
        org.joda.time.Period period12 = period10.minusWeeks(10);
        org.joda.time.Period period14 = period10.minusHours((int) (short) 100);
        org.joda.time.DurationFieldType[] durationFieldTypeArray15 = period14.getFieldTypes();
        org.joda.time.PeriodType periodType16 = org.joda.time.PeriodType.forFields(durationFieldTypeArray15);
        org.joda.time.PeriodType periodType17 = org.joda.time.PeriodType.forFields(durationFieldTypeArray15);
        org.joda.time.PeriodType periodType18 = org.joda.time.PeriodType.forFields(durationFieldTypeArray15);
        org.joda.time.Period period19 = duration6.toPeriodTo(readableInstant7, periodType18);
        long long20 = duration6.getStandardMinutes();
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(seconds2);
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(duration6);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertNotNull(period14);
        org.junit.Assert.assertNotNull(durationFieldTypeArray15);
        org.junit.Assert.assertNotNull(periodType16);
        org.junit.Assert.assertNotNull(periodType17);
        org.junit.Assert.assertNotNull(periodType18);
        org.junit.Assert.assertNotNull(period19);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 52L + "'", long20 == 52L);
    }

    @Test
    public void test17769() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17769");
        org.joda.time.format.PeriodPrinter periodPrinter1 = null;
        org.joda.time.format.PeriodParser periodParser2 = null;
        org.joda.time.format.PeriodFormatter periodFormatter3 = new org.joda.time.format.PeriodFormatter(periodPrinter1, periodParser2);
        org.joda.time.format.PeriodPrinter periodPrinter4 = periodFormatter3.getPrinter();
        boolean boolean5 = periodFormatter3.isParser();
        java.util.Locale locale6 = periodFormatter3.getLocale();
        org.joda.time.PeriodType periodType7 = periodFormatter3.getParseType();
        java.util.Locale locale8 = null;
        org.joda.time.format.PeriodFormatter periodFormatter9 = periodFormatter3.withLocale(locale8);
        boolean boolean10 = periodFormatter3.isParser();
        boolean boolean11 = periodFormatter3.isParser();
        java.util.Locale locale12 = null;
        org.joda.time.format.PeriodFormatter periodFormatter13 = periodFormatter3.withLocale(locale12);
        org.joda.time.ReadableInstant readableInstant14 = null;
        org.joda.time.Duration duration16 = org.joda.time.Duration.standardSeconds((long) 2);
        org.joda.time.ReadableInstant readableInstant17 = null;
        org.joda.time.Period period18 = duration16.toPeriodFrom(readableInstant17);
        org.joda.time.PeriodType periodType21 = org.joda.time.PeriodType.seconds();
        org.joda.time.PeriodType periodType22 = periodType21.withMinutesRemoved();
        org.joda.time.Chronology chronology23 = null;
        org.joda.time.MutablePeriod mutablePeriod24 = new org.joda.time.MutablePeriod((long) 0, (long) (short) 100, periodType21, chronology23);
        int int25 = periodType21.size();
        int int26 = periodType21.size();
        org.joda.time.PeriodType periodType27 = periodType21.withMonthsRemoved();
        org.joda.time.MutablePeriod mutablePeriod28 = new org.joda.time.MutablePeriod(readableInstant14, (org.joda.time.ReadableDuration) duration16, periodType21);
        org.joda.time.Period period30 = org.joda.time.Period.seconds((int) '#');
        org.joda.time.Period period32 = period30.plusMinutes(10);
        org.joda.time.Period period34 = period30.minusSeconds((int) '4');
        org.joda.time.Period period36 = org.joda.time.Period.seconds((int) '#');
        int int37 = period36.getMillis();
        org.joda.time.Period period39 = period36.withMillis((int) '#');
        int int40 = period39.size();
        org.joda.time.DurationFieldType durationFieldType41 = org.joda.time.DurationFieldType.halfdays();
        boolean boolean42 = period39.isSupported(durationFieldType41);
        int int43 = period34.get(durationFieldType41);
        int int44 = periodType21.indexOf(durationFieldType41);
        org.joda.time.format.PeriodFormatter periodFormatter45 = periodFormatter13.withParseType(periodType21);
        org.joda.time.Chronology chronology46 = null;
        org.joda.time.MutablePeriod mutablePeriod47 = new org.joda.time.MutablePeriod(480L, periodType21, chronology46);
        // The following exception was thrown during execution in test generation
        try {
            mutablePeriod47.setDays((-9));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Period does not support field 'days'");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(periodPrinter4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(locale6);
        org.junit.Assert.assertNull(periodType7);
        org.junit.Assert.assertNotNull(periodFormatter9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(periodFormatter13);
        org.junit.Assert.assertNotNull(duration16);
        org.junit.Assert.assertNotNull(period18);
        org.junit.Assert.assertNotNull(periodType21);
        org.junit.Assert.assertNotNull(periodType22);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 1 + "'", int25 == 1);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 1 + "'", int26 == 1);
        org.junit.Assert.assertNotNull(periodType27);
        org.junit.Assert.assertNotNull(period30);
        org.junit.Assert.assertNotNull(period32);
        org.junit.Assert.assertNotNull(period34);
        org.junit.Assert.assertNotNull(period36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertNotNull(period39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 8 + "'", int40 == 8);
        org.junit.Assert.assertNotNull(durationFieldType41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertNotNull(periodFormatter45);
    }

    @Test
    public void test17770() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17770");
        org.joda.time.Period period1 = org.joda.time.Period.seconds((int) '#');
        int int2 = period1.getMillis();
        org.joda.time.Period period4 = period1.withMillis((int) '#');
        int int5 = period1.size();
        org.joda.time.Period period7 = period1.plusYears((int) 'a');
        org.joda.time.Period period9 = period1.minusHours((int) (byte) 100);
        org.joda.time.Period period11 = period1.plusMonths(864000);
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 8 + "'", int5 == 8);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(period11);
    }

    @Test
    public void test17771() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17771");
        org.joda.time.PeriodType periodType2 = null;
        org.joda.time.MutablePeriod mutablePeriod3 = new org.joda.time.MutablePeriod((long) ' ', (-1L), periodType2);
        mutablePeriod3.addMinutes((int) ' ');
        mutablePeriod3.clear();
        mutablePeriod3.addYears((int) (byte) 1);
        org.joda.time.Duration duration10 = org.joda.time.Duration.standardMinutes((-1L));
        long long11 = duration10.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant12 = null;
        org.joda.time.Period period13 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration10, readableInstant12);
        org.joda.time.PeriodType periodType14 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology15 = null;
        org.joda.time.Period period16 = duration10.toPeriod(periodType14, chronology15);
        org.joda.time.ReadableInstant readableInstant17 = null;
        org.joda.time.Period period18 = duration10.toPeriodTo(readableInstant17);
        int int19 = period18.getDays();
        org.joda.time.Period period21 = period18.withDays(100);
        org.joda.time.Period period22 = period18.toPeriod();
        org.joda.time.Chronology chronology24 = null;
        org.joda.time.MutablePeriod mutablePeriod25 = new org.joda.time.MutablePeriod(1L, chronology24);
        org.joda.time.Period period27 = org.joda.time.Period.seconds((int) '#');
        mutablePeriod25.setPeriod((org.joda.time.ReadablePeriod) period27);
        org.joda.time.DurationFieldType durationFieldType29 = org.joda.time.DurationFieldType.years();
        java.lang.String str30 = durationFieldType29.getName();
        boolean boolean31 = mutablePeriod25.isSupported(durationFieldType29);
        org.joda.time.Period period33 = period22.withField(durationFieldType29, (int) (byte) -1);
        int int34 = mutablePeriod3.get(durationFieldType29);
        mutablePeriod3.addHours(0);
        org.joda.time.DurationFieldType[] durationFieldTypeArray37 = mutablePeriod3.getFieldTypes();
        org.joda.time.PeriodType periodType38 = org.joda.time.PeriodType.forFields(durationFieldTypeArray37);
        org.joda.time.PeriodType periodType39 = org.joda.time.PeriodType.forFields(durationFieldTypeArray37);
        org.joda.time.PeriodType periodType40 = org.joda.time.PeriodType.forFields(durationFieldTypeArray37);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + (-1L) + "'", long11 == (-1L));
        org.junit.Assert.assertNotNull(periodType14);
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertNotNull(period18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertNotNull(period22);
        org.junit.Assert.assertNotNull(period27);
        org.junit.Assert.assertNotNull(durationFieldType29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "years" + "'", str30, "years");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(period33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 1 + "'", int34 == 1);
        org.junit.Assert.assertNotNull(durationFieldTypeArray37);
        org.junit.Assert.assertNotNull(periodType38);
        org.junit.Assert.assertNotNull(periodType39);
        org.junit.Assert.assertNotNull(periodType40);
    }

    @Test
    public void test17772() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17772");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableInstant readableInstant1 = null;
        org.joda.time.PeriodType periodType3 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period4 = new org.joda.time.Period(10L, periodType3);
        org.joda.time.PeriodType periodType5 = periodType3.withHoursRemoved();
        org.joda.time.PeriodType periodType6 = periodType3.withSecondsRemoved();
        org.joda.time.PeriodType periodType7 = periodType6.withMillisRemoved();
        org.joda.time.MutablePeriod mutablePeriod8 = new org.joda.time.MutablePeriod(readableInstant0, readableInstant1, periodType6);
        org.joda.time.Chronology chronology10 = null;
        mutablePeriod8.setPeriod((long) 7, chronology10);
        org.joda.time.ReadableInstant readableInstant12 = null;
        org.joda.time.Duration duration13 = mutablePeriod8.toDurationFrom(readableInstant12);
        int int14 = mutablePeriod8.getWeeks();
        int int15 = mutablePeriod8.getHours();
        int int16 = mutablePeriod8.getWeeks();
        org.junit.Assert.assertNotNull(periodType3);
        org.junit.Assert.assertNotNull(periodType5);
        org.junit.Assert.assertNotNull(periodType6);
        org.junit.Assert.assertNotNull(periodType7);
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
    }

    @Test
    public void test17773() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17773");
        org.joda.time.Period period1 = org.joda.time.Period.months((-90));
        org.joda.time.Period period3 = period1.withWeeks(32);
        org.joda.time.PeriodType periodType4 = period3.getPeriodType();
        org.joda.time.Period period6 = period3.minusMillis(0);
        org.joda.time.Period period8 = period3.plusHours((-5));
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Seconds seconds9 = period3.toStandardSeconds();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Cannot convert to Seconds as this period contains months and months vary in length");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(period3);
        org.junit.Assert.assertNotNull(periodType4);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(period8);
    }

    @Test
    public void test17774() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17774");
        org.joda.time.format.PeriodPrinter periodPrinter0 = null;
        org.joda.time.format.PeriodParser periodParser1 = null;
        org.joda.time.format.PeriodFormatter periodFormatter2 = new org.joda.time.format.PeriodFormatter(periodPrinter0, periodParser1);
        boolean boolean3 = periodFormatter2.isPrinter();
        org.joda.time.format.PeriodParser periodParser4 = periodFormatter2.getParser();
        java.util.Locale locale5 = null;
        org.joda.time.format.PeriodFormatter periodFormatter6 = periodFormatter2.withLocale(locale5);
        org.joda.time.PeriodType periodType7 = periodFormatter6.getParseType();
        boolean boolean8 = periodFormatter6.isPrinter();
        java.util.Locale locale9 = null;
        org.joda.time.format.PeriodFormatter periodFormatter10 = periodFormatter6.withLocale(locale9);
        org.joda.time.PeriodType periodType11 = periodFormatter6.getParseType();
        org.joda.time.PeriodType periodType14 = org.joda.time.PeriodType.years();
        org.joda.time.Chronology chronology15 = null;
        org.joda.time.Period period16 = new org.joda.time.Period((long) '#', (long) (-1), periodType14, chronology15);
        int int17 = periodType14.size();
        org.joda.time.PeriodType periodType18 = periodType14.withYearsRemoved();
        org.joda.time.format.PeriodFormatter periodFormatter19 = periodFormatter6.withParseType(periodType14);
        boolean boolean20 = periodFormatter6.isPrinter();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(periodParser4);
        org.junit.Assert.assertNotNull(periodFormatter6);
        org.junit.Assert.assertNull(periodType7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(periodFormatter10);
        org.junit.Assert.assertNull(periodType11);
        org.junit.Assert.assertNotNull(periodType14);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertNotNull(periodType18);
        org.junit.Assert.assertNotNull(periodFormatter19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    }

    @Test
    public void test17775() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17775");
        org.joda.time.ReadableInstant readableInstant2 = null;
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.format.PeriodPrinter periodPrinter4 = null;
        org.joda.time.format.PeriodParser periodParser5 = null;
        org.joda.time.format.PeriodFormatter periodFormatter6 = new org.joda.time.format.PeriodFormatter(periodPrinter4, periodParser5);
        org.joda.time.format.PeriodPrinter periodPrinter7 = periodFormatter6.getPrinter();
        boolean boolean8 = periodFormatter6.isParser();
        org.joda.time.format.PeriodParser periodParser9 = periodFormatter6.getParser();
        boolean boolean10 = periodFormatter6.isParser();
        org.joda.time.ReadableInstant readableInstant11 = null;
        org.joda.time.ReadableInstant readableInstant12 = null;
        org.joda.time.Duration duration16 = org.joda.time.Duration.standardMinutes((-1L));
        long long17 = duration16.getStandardMinutes();
        org.joda.time.Period period18 = duration16.toPeriod();
        org.joda.time.Duration duration20 = org.joda.time.Duration.standardMinutes((-1L));
        long long21 = duration20.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant22 = null;
        org.joda.time.Period period23 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration20, readableInstant22);
        org.joda.time.PeriodType periodType24 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology25 = null;
        org.joda.time.Period period26 = duration20.toPeriod(periodType24, chronology25);
        org.joda.time.Period period27 = duration16.toPeriod(periodType24);
        org.joda.time.Chronology chronology28 = null;
        org.joda.time.MutablePeriod mutablePeriod29 = new org.joda.time.MutablePeriod(1L, (long) (byte) 100, periodType24, chronology28);
        org.joda.time.MutablePeriod mutablePeriod30 = new org.joda.time.MutablePeriod(readableInstant11, readableInstant12, periodType24);
        org.joda.time.format.PeriodFormatter periodFormatter31 = periodFormatter6.withParseType(periodType24);
        org.joda.time.PeriodType periodType32 = org.joda.time.PeriodType.yearDayTime();
        org.joda.time.Duration duration34 = org.joda.time.Duration.standardMinutes((-1L));
        long long35 = duration34.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant36 = null;
        org.joda.time.Period period37 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration34, readableInstant36);
        org.joda.time.PeriodType periodType38 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology39 = null;
        org.joda.time.Period period40 = duration34.toPeriod(periodType38, chronology39);
        org.joda.time.ReadableInstant readableInstant41 = null;
        org.joda.time.Period period42 = duration34.toPeriodTo(readableInstant41);
        int int43 = period42.getDays();
        org.joda.time.Period period45 = period42.withDays(100);
        org.joda.time.Period period46 = period42.toPeriod();
        org.joda.time.Chronology chronology48 = null;
        org.joda.time.MutablePeriod mutablePeriod49 = new org.joda.time.MutablePeriod(1L, chronology48);
        org.joda.time.Period period51 = org.joda.time.Period.seconds((int) '#');
        mutablePeriod49.setPeriod((org.joda.time.ReadablePeriod) period51);
        org.joda.time.DurationFieldType durationFieldType53 = org.joda.time.DurationFieldType.years();
        java.lang.String str54 = durationFieldType53.getName();
        boolean boolean55 = mutablePeriod49.isSupported(durationFieldType53);
        org.joda.time.Period period57 = period46.withField(durationFieldType53, (int) (byte) -1);
        int int58 = periodType32.indexOf(durationFieldType53);
        org.joda.time.format.PeriodFormatter periodFormatter59 = periodFormatter6.withParseType(periodType32);
        org.joda.time.PeriodType periodType60 = periodType32.withMinutesRemoved();
        org.joda.time.Period period61 = new org.joda.time.Period(readableInstant2, readableInstant3, periodType60);
        org.joda.time.Period period62 = new org.joda.time.Period((long) 7, periodType60);
        org.joda.time.Chronology chronology63 = null;
        org.joda.time.Period period64 = new org.joda.time.Period((long) (-42), periodType60, chronology63);
        org.junit.Assert.assertNull(periodPrinter7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(periodParser9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(duration16);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + (-1L) + "'", long17 == (-1L));
        org.junit.Assert.assertNotNull(period18);
        org.junit.Assert.assertNotNull(duration20);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + (-1L) + "'", long21 == (-1L));
        org.junit.Assert.assertNotNull(periodType24);
        org.junit.Assert.assertNotNull(period26);
        org.junit.Assert.assertNotNull(period27);
        org.junit.Assert.assertNotNull(periodFormatter31);
        org.junit.Assert.assertNotNull(periodType32);
        org.junit.Assert.assertNotNull(duration34);
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + (-1L) + "'", long35 == (-1L));
        org.junit.Assert.assertNotNull(periodType38);
        org.junit.Assert.assertNotNull(period40);
        org.junit.Assert.assertNotNull(period42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertNotNull(period45);
        org.junit.Assert.assertNotNull(period46);
        org.junit.Assert.assertNotNull(period51);
        org.junit.Assert.assertNotNull(durationFieldType53);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "years" + "'", str54, "years");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(period57);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertNotNull(periodFormatter59);
        org.junit.Assert.assertNotNull(periodType60);
    }

    @Test
    public void test17776() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17776");
        org.joda.time.Chronology chronology1 = null;
        org.joda.time.MutablePeriod mutablePeriod2 = new org.joda.time.MutablePeriod(1L, chronology1);
        int int3 = mutablePeriod2.getMinutes();
        org.joda.time.Chronology chronology6 = null;
        mutablePeriod2.setPeriod((long) (byte) 0, (long) (byte) 0, chronology6);
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.Duration duration10 = org.joda.time.Duration.standardSeconds(1L);
        org.joda.time.Duration duration12 = org.joda.time.Duration.standardMinutes((-1L));
        int int13 = duration10.compareTo((org.joda.time.ReadableDuration) duration12);
        org.joda.time.MutablePeriod mutablePeriod14 = new org.joda.time.MutablePeriod(readableInstant8, (org.joda.time.ReadableDuration) duration12);
        mutablePeriod2.mergePeriod((org.joda.time.ReadablePeriod) mutablePeriod14);
        org.joda.time.Chronology chronology17 = null;
        org.joda.time.MutablePeriod mutablePeriod18 = new org.joda.time.MutablePeriod(1L, chronology17);
        org.joda.time.Chronology chronology20 = null;
        org.joda.time.MutablePeriod mutablePeriod21 = new org.joda.time.MutablePeriod(1L, chronology20);
        mutablePeriod18.add((org.joda.time.ReadablePeriod) mutablePeriod21);
        org.joda.time.PeriodType periodType23 = mutablePeriod21.getPeriodType();
        org.joda.time.Chronology chronology24 = null;
        org.joda.time.MutablePeriod mutablePeriod25 = new org.joda.time.MutablePeriod((java.lang.Object) mutablePeriod2, periodType23, chronology24);
        int int26 = mutablePeriod2.getHours();
        int int27 = mutablePeriod2.getMonths();
        org.joda.time.Duration duration29 = new org.joda.time.Duration(0L);
        org.joda.time.ReadableInstant readableInstant30 = null;
        org.joda.time.Interval interval31 = duration29.toIntervalFrom(readableInstant30);
        org.joda.time.Duration duration33 = org.joda.time.Duration.standardMinutes((-1L));
        long long34 = duration33.getStandardMinutes();
        org.joda.time.Duration duration36 = org.joda.time.Duration.standardMinutes((-1L));
        long long37 = duration36.getStandardMinutes();
        boolean boolean38 = duration33.isLongerThan((org.joda.time.ReadableDuration) duration36);
        org.joda.time.Period period39 = duration36.toPeriod();
        org.joda.time.Minutes minutes40 = duration36.toStandardMinutes();
        org.joda.time.Duration duration42 = org.joda.time.Duration.standardMinutes((-1L));
        long long43 = duration42.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant44 = null;
        org.joda.time.Period period45 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration42, readableInstant44);
        org.joda.time.PeriodType periodType46 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology47 = null;
        org.joda.time.Period period48 = duration42.toPeriod(periodType46, chronology47);
        org.joda.time.Duration duration51 = duration42.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration52 = duration36.plus((org.joda.time.ReadableDuration) duration51);
        org.joda.time.Duration duration54 = duration51.withMillis((-1L));
        org.joda.time.Duration duration55 = duration29.plus((org.joda.time.ReadableDuration) duration54);
        org.joda.time.Chronology chronology56 = null;
        mutablePeriod2.setPeriod((org.joda.time.ReadableDuration) duration29, chronology56);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(periodType23);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertNotNull(interval31);
        org.junit.Assert.assertNotNull(duration33);
        org.junit.Assert.assertTrue("'" + long34 + "' != '" + (-1L) + "'", long34 == (-1L));
        org.junit.Assert.assertNotNull(duration36);
        org.junit.Assert.assertTrue("'" + long37 + "' != '" + (-1L) + "'", long37 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(period39);
        org.junit.Assert.assertNotNull(minutes40);
        org.junit.Assert.assertNotNull(duration42);
        org.junit.Assert.assertTrue("'" + long43 + "' != '" + (-1L) + "'", long43 == (-1L));
        org.junit.Assert.assertNotNull(periodType46);
        org.junit.Assert.assertNotNull(period48);
        org.junit.Assert.assertNotNull(duration51);
        org.junit.Assert.assertNotNull(duration52);
        org.junit.Assert.assertNotNull(duration54);
        org.junit.Assert.assertNotNull(duration55);
    }

    @Test
    public void test17777() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17777");
        org.joda.time.Period period1 = org.joda.time.Period.hours((-35));
        org.joda.time.Minutes minutes2 = period1.toStandardMinutes();
        org.joda.time.Period period4 = period1.minusHours((-7776));
        org.joda.time.MutablePeriod mutablePeriod5 = new org.joda.time.MutablePeriod((java.lang.Object) period1);
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(period4);
    }

    @Test
    public void test17778() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17778");
        org.joda.time.Period period1 = org.joda.time.Period.years(864000);
        org.joda.time.ReadableInstant readableInstant2 = null;
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.Duration duration5 = org.joda.time.Duration.standardMinutes((-1L));
        long long6 = duration5.getStandardMinutes();
        org.joda.time.Period period7 = duration5.toPeriod();
        org.joda.time.Duration duration9 = org.joda.time.Duration.standardMinutes((-1L));
        long long10 = duration9.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant11 = null;
        org.joda.time.Period period12 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration9, readableInstant11);
        org.joda.time.PeriodType periodType13 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology14 = null;
        org.joda.time.Period period15 = duration9.toPeriod(periodType13, chronology14);
        org.joda.time.Period period16 = duration5.toPeriod(periodType13);
        org.joda.time.PeriodType periodType17 = periodType13.withMillisRemoved();
        org.joda.time.MutablePeriod mutablePeriod18 = new org.joda.time.MutablePeriod(readableInstant2, readableInstant3, periodType17);
        org.joda.time.Period period19 = period1.minus((org.joda.time.ReadablePeriod) mutablePeriod18);
        org.joda.time.Period period21 = period1.minusMillis((-818));
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(duration5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + (-1L) + "'", long10 == (-1L));
        org.junit.Assert.assertNotNull(periodType13);
        org.junit.Assert.assertNotNull(period15);
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertNotNull(periodType17);
        org.junit.Assert.assertNotNull(period19);
        org.junit.Assert.assertNotNull(period21);
    }

    @Test
    public void test17779() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17779");
        org.joda.time.Period period4 = new org.joda.time.Period((-60), 0, (int) (short) 1, (int) (short) 1);
        java.lang.String str5 = period4.toString();
        org.joda.time.Period period7 = period4.plusDays(101);
        org.joda.time.Period period9 = org.joda.time.Period.parse("PT-3542400S");
        org.joda.time.PeriodType periodType12 = null;
        org.joda.time.MutablePeriod mutablePeriod13 = new org.joda.time.MutablePeriod((long) ' ', (-1L), periodType12);
        mutablePeriod13.addMinutes((int) ' ');
        mutablePeriod13.clear();
        java.lang.String str17 = mutablePeriod13.toString();
        mutablePeriod13.setYears(97);
        org.joda.time.Duration duration21 = org.joda.time.Duration.standardMinutes((-1L));
        long long22 = duration21.getStandardMinutes();
        org.joda.time.Period period23 = duration21.toPeriod();
        org.joda.time.Duration duration25 = org.joda.time.Duration.standardMinutes((-1L));
        long long26 = duration25.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant27 = null;
        org.joda.time.Period period28 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration25, readableInstant27);
        org.joda.time.PeriodType periodType29 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology30 = null;
        org.joda.time.Period period31 = duration25.toPeriod(periodType29, chronology30);
        org.joda.time.Period period32 = duration21.toPeriod(periodType29);
        org.joda.time.Duration duration34 = org.joda.time.Duration.standardMinutes((-1L));
        long long35 = duration34.getStandardMinutes();
        boolean boolean36 = duration21.isLongerThan((org.joda.time.ReadableDuration) duration34);
        org.joda.time.Duration duration38 = org.joda.time.Duration.standardMinutes((-1L));
        long long39 = duration38.getStandardMinutes();
        org.joda.time.Duration duration41 = org.joda.time.Duration.standardMinutes((-1L));
        long long42 = duration41.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant43 = null;
        org.joda.time.Period period44 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration41, readableInstant43);
        org.joda.time.PeriodType periodType45 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology46 = null;
        org.joda.time.Period period47 = duration41.toPeriod(periodType45, chronology46);
        org.joda.time.Duration duration48 = duration41.toDuration();
        org.joda.time.Duration duration50 = duration38.withDurationAdded((org.joda.time.ReadableDuration) duration48, 100);
        int int51 = duration34.compareTo((org.joda.time.ReadableDuration) duration50);
        org.joda.time.Duration duration52 = duration34.toDuration();
        org.joda.time.Period period53 = duration52.toPeriod();
        mutablePeriod13.add((org.joda.time.ReadableDuration) duration52);
        mutablePeriod13.add((int) (short) 100, (int) (short) 10, (int) (short) 1, (int) (short) 100, (-99), 11, (-1), (int) (byte) 10);
        mutablePeriod13.setYears(5);
        org.joda.time.Period period66 = period9.withFields((org.joda.time.ReadablePeriod) mutablePeriod13);
        org.joda.time.Period period67 = period4.minus((org.joda.time.ReadablePeriod) mutablePeriod13);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "PT-60H1.001S" + "'", str5, "PT-60H1.001S");
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "PT0S" + "'", str17, "PT0S");
        org.junit.Assert.assertNotNull(duration21);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + (-1L) + "'", long22 == (-1L));
        org.junit.Assert.assertNotNull(period23);
        org.junit.Assert.assertNotNull(duration25);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + (-1L) + "'", long26 == (-1L));
        org.junit.Assert.assertNotNull(periodType29);
        org.junit.Assert.assertNotNull(period31);
        org.junit.Assert.assertNotNull(period32);
        org.junit.Assert.assertNotNull(duration34);
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + (-1L) + "'", long35 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(duration38);
        org.junit.Assert.assertTrue("'" + long39 + "' != '" + (-1L) + "'", long39 == (-1L));
        org.junit.Assert.assertNotNull(duration41);
        org.junit.Assert.assertTrue("'" + long42 + "' != '" + (-1L) + "'", long42 == (-1L));
        org.junit.Assert.assertNotNull(periodType45);
        org.junit.Assert.assertNotNull(period47);
        org.junit.Assert.assertNotNull(duration48);
        org.junit.Assert.assertNotNull(duration50);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 1 + "'", int51 == 1);
        org.junit.Assert.assertNotNull(duration52);
        org.junit.Assert.assertNotNull(period53);
        org.junit.Assert.assertNotNull(period66);
        org.junit.Assert.assertNotNull(period67);
    }

    @Test
    public void test17780() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17780");
        org.joda.time.Period period2 = new org.joda.time.Period(1260000086L, (long) (-52));
    }

    @Test
    public void test17781() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17781");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((-1L));
        long long2 = duration1.getStandardMinutes();
        org.joda.time.Duration duration4 = org.joda.time.Duration.standardMinutes((-1L));
        long long5 = duration4.getStandardMinutes();
        boolean boolean6 = duration1.isLongerThan((org.joda.time.ReadableDuration) duration4);
        org.joda.time.Duration duration8 = duration4.withMillis((long) 1);
        org.joda.time.Chronology chronology10 = null;
        org.joda.time.MutablePeriod mutablePeriod11 = new org.joda.time.MutablePeriod(1L, chronology10);
        org.joda.time.Chronology chronology13 = null;
        org.joda.time.MutablePeriod mutablePeriod14 = new org.joda.time.MutablePeriod(1L, chronology13);
        mutablePeriod11.add((org.joda.time.ReadablePeriod) mutablePeriod14);
        boolean boolean16 = duration8.equals((java.lang.Object) mutablePeriod14);
        org.joda.time.Duration duration18 = org.joda.time.Duration.standardSeconds((-60L));
        boolean boolean19 = duration8.isEqual((org.joda.time.ReadableDuration) duration18);
        org.joda.time.Duration duration21 = org.joda.time.Duration.standardHours((long) (byte) 1);
        boolean boolean22 = duration18.isShorterThan((org.joda.time.ReadableDuration) duration21);
        org.joda.time.Period period23 = duration18.toPeriod();
        org.joda.time.ReadableInstant readableInstant24 = null;
        org.joda.time.Period period25 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration18, readableInstant24);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + (-1L) + "'", long2 == (-1L));
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + (-1L) + "'", long5 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(duration8);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(duration18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(duration21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(period23);
    }

    @Test
    public void test17782() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17782");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.Duration duration2 = new org.joda.time.Duration(2199L);
        org.joda.time.MutablePeriod mutablePeriod11 = new org.joda.time.MutablePeriod((int) ' ', (int) (byte) 100, 0, 10, (int) (short) 1, (int) (short) 0, (int) (byte) 100, (int) (short) 1);
        mutablePeriod11.setPeriod((int) '4', (int) '4', (int) 'a', (int) (byte) 100, (int) ' ', 0, (int) (short) 0, (int) (short) -1);
        mutablePeriod11.addMinutes((int) (short) 10);
        org.joda.time.PeriodType periodType23 = mutablePeriod11.getPeriodType();
        org.joda.time.PeriodType periodType24 = periodType23.withDaysRemoved();
        org.joda.time.MutablePeriod mutablePeriod25 = new org.joda.time.MutablePeriod(readableInstant0, (org.joda.time.ReadableDuration) duration2, periodType23);
        int int27 = mutablePeriod25.getValue(4);
        org.junit.Assert.assertNotNull(periodType23);
        org.junit.Assert.assertNotNull(periodType24);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
    }

    @Test
    public void test17783() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17783");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardHours((long) (-60));
        org.joda.time.Duration duration3 = duration1.minus((long) 9);
        org.joda.time.Duration duration5 = org.joda.time.Duration.standardMinutes((-1L));
        long long6 = duration5.getStandardMinutes();
        org.joda.time.Duration duration8 = org.joda.time.Duration.standardMinutes((-1L));
        long long9 = duration8.getStandardMinutes();
        boolean boolean10 = duration5.isLongerThan((org.joda.time.ReadableDuration) duration8);
        org.joda.time.Duration duration12 = duration8.withMillis((long) 1);
        org.joda.time.Chronology chronology14 = null;
        org.joda.time.MutablePeriod mutablePeriod15 = new org.joda.time.MutablePeriod(1L, chronology14);
        org.joda.time.Chronology chronology17 = null;
        org.joda.time.MutablePeriod mutablePeriod18 = new org.joda.time.MutablePeriod(1L, chronology17);
        mutablePeriod15.add((org.joda.time.ReadablePeriod) mutablePeriod18);
        boolean boolean20 = duration12.equals((java.lang.Object) mutablePeriod18);
        org.joda.time.Duration duration22 = duration12.minus(0L);
        org.joda.time.Seconds seconds23 = duration22.toStandardSeconds();
        org.joda.time.Duration duration24 = duration1.plus((org.joda.time.ReadableDuration) duration22);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertNotNull(duration5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
        org.junit.Assert.assertNotNull(duration8);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + (-1L) + "'", long9 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(duration22);
        org.junit.Assert.assertNotNull(seconds23);
        org.junit.Assert.assertNotNull(duration24);
    }

    @Test
    public void test17784() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17784");
        org.joda.time.MutablePeriod mutablePeriod2 = new org.joda.time.MutablePeriod((-6060000L), 7000L);
        org.joda.time.PeriodType periodType3 = mutablePeriod2.getPeriodType();
        mutablePeriod2.setSeconds((-935));
        org.junit.Assert.assertNotNull(periodType3);
    }

    @Test
    public void test17785() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17785");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.Duration duration3 = new org.joda.time.Duration((long) (-7), 32L);
        org.joda.time.Minutes minutes4 = duration3.toStandardMinutes();
        org.joda.time.ReadableInstant readableInstant5 = null;
        org.joda.time.Duration duration7 = org.joda.time.Duration.standardMinutes((-1L));
        long long8 = duration7.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant9 = null;
        org.joda.time.Period period10 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration7, readableInstant9);
        org.joda.time.PeriodType periodType11 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology12 = null;
        org.joda.time.Period period13 = duration7.toPeriod(periodType11, chronology12);
        org.joda.time.Duration duration16 = duration7.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration18 = org.joda.time.Duration.standardHours((long) 10);
        org.joda.time.Duration duration20 = org.joda.time.Duration.standardMinutes((-1L));
        long long21 = duration20.getStandardMinutes();
        org.joda.time.Duration duration23 = org.joda.time.Duration.standardMinutes((-1L));
        long long24 = duration23.getStandardMinutes();
        boolean boolean25 = duration20.isLongerThan((org.joda.time.ReadableDuration) duration23);
        org.joda.time.Period period26 = duration23.toPeriod();
        org.joda.time.Minutes minutes27 = duration23.toStandardMinutes();
        boolean boolean28 = duration18.isEqual((org.joda.time.ReadableDuration) duration23);
        boolean boolean29 = duration7.isShorterThan((org.joda.time.ReadableDuration) duration18);
        org.joda.time.Duration duration31 = org.joda.time.Duration.standardMinutes((-1L));
        long long32 = duration31.getStandardMinutes();
        org.joda.time.Period period33 = duration31.toPeriod();
        org.joda.time.Duration duration35 = org.joda.time.Duration.standardMinutes((-1L));
        long long36 = duration35.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant37 = null;
        org.joda.time.Period period38 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration35, readableInstant37);
        org.joda.time.PeriodType periodType39 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology40 = null;
        org.joda.time.Period period41 = duration35.toPeriod(periodType39, chronology40);
        org.joda.time.Period period42 = duration31.toPeriod(periodType39);
        org.joda.time.Duration duration44 = org.joda.time.Duration.standardMinutes((-1L));
        long long45 = duration44.getStandardMinutes();
        boolean boolean46 = duration31.isLongerThan((org.joda.time.ReadableDuration) duration44);
        org.joda.time.Duration duration48 = org.joda.time.Duration.standardMinutes((-1L));
        long long49 = duration48.getStandardMinutes();
        org.joda.time.Duration duration51 = org.joda.time.Duration.standardMinutes((-1L));
        long long52 = duration51.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant53 = null;
        org.joda.time.Period period54 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration51, readableInstant53);
        org.joda.time.PeriodType periodType55 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology56 = null;
        org.joda.time.Period period57 = duration51.toPeriod(periodType55, chronology56);
        org.joda.time.Duration duration58 = duration51.toDuration();
        org.joda.time.Duration duration60 = duration48.withDurationAdded((org.joda.time.ReadableDuration) duration58, 100);
        int int61 = duration44.compareTo((org.joda.time.ReadableDuration) duration60);
        org.joda.time.Duration duration62 = duration44.toDuration();
        java.lang.String str63 = duration62.toString();
        boolean boolean64 = duration18.equals((java.lang.Object) str63);
        long long65 = duration18.getStandardHours();
        org.joda.time.Period period67 = org.joda.time.Period.seconds((int) '#');
        org.joda.time.Period period69 = period67.plusMinutes(10);
        org.joda.time.PeriodType periodType70 = period69.getPeriodType();
        org.joda.time.MutablePeriod mutablePeriod71 = new org.joda.time.MutablePeriod(readableInstant5, (org.joda.time.ReadableDuration) duration18, periodType70);
        long long72 = duration18.getMillis();
        org.joda.time.Duration duration73 = duration3.minus((org.joda.time.ReadableDuration) duration18);
        org.joda.time.MutablePeriod mutablePeriod74 = new org.joda.time.MutablePeriod(readableInstant0, (org.joda.time.ReadableDuration) duration3);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(duration7);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + (-1L) + "'", long8 == (-1L));
        org.junit.Assert.assertNotNull(periodType11);
        org.junit.Assert.assertNotNull(period13);
        org.junit.Assert.assertNotNull(duration16);
        org.junit.Assert.assertNotNull(duration18);
        org.junit.Assert.assertNotNull(duration20);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + (-1L) + "'", long21 == (-1L));
        org.junit.Assert.assertNotNull(duration23);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + (-1L) + "'", long24 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(period26);
        org.junit.Assert.assertNotNull(minutes27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(duration31);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + (-1L) + "'", long32 == (-1L));
        org.junit.Assert.assertNotNull(period33);
        org.junit.Assert.assertNotNull(duration35);
        org.junit.Assert.assertTrue("'" + long36 + "' != '" + (-1L) + "'", long36 == (-1L));
        org.junit.Assert.assertNotNull(periodType39);
        org.junit.Assert.assertNotNull(period41);
        org.junit.Assert.assertNotNull(period42);
        org.junit.Assert.assertNotNull(duration44);
        org.junit.Assert.assertTrue("'" + long45 + "' != '" + (-1L) + "'", long45 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(duration48);
        org.junit.Assert.assertTrue("'" + long49 + "' != '" + (-1L) + "'", long49 == (-1L));
        org.junit.Assert.assertNotNull(duration51);
        org.junit.Assert.assertTrue("'" + long52 + "' != '" + (-1L) + "'", long52 == (-1L));
        org.junit.Assert.assertNotNull(periodType55);
        org.junit.Assert.assertNotNull(period57);
        org.junit.Assert.assertNotNull(duration58);
        org.junit.Assert.assertNotNull(duration60);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 1 + "'", int61 == 1);
        org.junit.Assert.assertNotNull(duration62);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "PT-60S" + "'", str63, "PT-60S");
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + long65 + "' != '" + 10L + "'", long65 == 10L);
        org.junit.Assert.assertNotNull(period67);
        org.junit.Assert.assertNotNull(period69);
        org.junit.Assert.assertNotNull(periodType70);
        org.junit.Assert.assertTrue("'" + long72 + "' != '" + 36000000L + "'", long72 == 36000000L);
        org.junit.Assert.assertNotNull(duration73);
    }

    @Test
    public void test17786() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17786");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.MutablePeriod mutablePeriod3 = new org.joda.time.MutablePeriod((long) (-60), (long) 101, chronology2);
        mutablePeriod3.setSeconds((-35));
        org.joda.time.Chronology chronology7 = null;
        org.joda.time.MutablePeriod mutablePeriod8 = new org.joda.time.MutablePeriod(1L, chronology7);
        org.joda.time.Chronology chronology10 = null;
        org.joda.time.MutablePeriod mutablePeriod11 = new org.joda.time.MutablePeriod(1L, chronology10);
        mutablePeriod8.add((org.joda.time.ReadablePeriod) mutablePeriod11);
        org.joda.time.Duration duration14 = org.joda.time.Duration.standardMinutes((-1L));
        long long15 = duration14.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant16 = null;
        org.joda.time.Period period17 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration14, readableInstant16);
        mutablePeriod11.setPeriod((org.joda.time.ReadablePeriod) period17);
        org.joda.time.PeriodType periodType19 = mutablePeriod11.getPeriodType();
        mutablePeriod11.addHours((int) (short) 0);
        int int22 = mutablePeriod11.getYears();
        org.joda.time.Period period24 = org.joda.time.Period.seconds((int) '#');
        org.joda.time.Period period25 = period24.toPeriod();
        org.joda.time.Period period27 = period24.withMonths((int) (short) 10);
        org.joda.time.Period period29 = period27.minusDays(97);
        org.joda.time.Period period31 = period27.minusMinutes(32);
        mutablePeriod11.add((org.joda.time.ReadablePeriod) period27);
        org.joda.time.Chronology chronology34 = null;
        org.joda.time.MutablePeriod mutablePeriod35 = new org.joda.time.MutablePeriod(2199L, chronology34);
        org.joda.time.Duration duration37 = org.joda.time.Duration.standardMinutes((-1L));
        long long38 = duration37.getStandardMinutes();
        org.joda.time.Duration duration40 = org.joda.time.Duration.standardMinutes((-1L));
        long long41 = duration40.getStandardMinutes();
        boolean boolean42 = duration37.isLongerThan((org.joda.time.ReadableDuration) duration40);
        org.joda.time.Duration duration44 = duration40.withMillis((long) 1);
        org.joda.time.Chronology chronology46 = null;
        org.joda.time.MutablePeriod mutablePeriod47 = new org.joda.time.MutablePeriod(1L, chronology46);
        org.joda.time.Chronology chronology49 = null;
        org.joda.time.MutablePeriod mutablePeriod50 = new org.joda.time.MutablePeriod(1L, chronology49);
        mutablePeriod47.add((org.joda.time.ReadablePeriod) mutablePeriod50);
        boolean boolean52 = duration44.equals((java.lang.Object) mutablePeriod50);
        org.joda.time.Duration duration54 = duration44.minus(0L);
        org.joda.time.Chronology chronology55 = null;
        org.joda.time.Period period56 = new org.joda.time.Period((java.lang.Object) duration44, chronology55);
        org.joda.time.Minutes minutes57 = duration44.toStandardMinutes();
        org.joda.time.ReadableInstant readableInstant58 = null;
        org.joda.time.Interval interval59 = duration44.toIntervalTo(readableInstant58);
        mutablePeriod35.setPeriod((org.joda.time.ReadableInterval) interval59);
        mutablePeriod11.add((org.joda.time.ReadableInterval) interval59);
        mutablePeriod3.setPeriod((org.joda.time.ReadableInterval) interval59);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + (-1L) + "'", long15 == (-1L));
        org.junit.Assert.assertNotNull(periodType19);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNotNull(period24);
        org.junit.Assert.assertNotNull(period25);
        org.junit.Assert.assertNotNull(period27);
        org.junit.Assert.assertNotNull(period29);
        org.junit.Assert.assertNotNull(period31);
        org.junit.Assert.assertNotNull(duration37);
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + (-1L) + "'", long38 == (-1L));
        org.junit.Assert.assertNotNull(duration40);
        org.junit.Assert.assertTrue("'" + long41 + "' != '" + (-1L) + "'", long41 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(duration44);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(duration54);
        org.junit.Assert.assertNotNull(minutes57);
        org.junit.Assert.assertNotNull(interval59);
    }

    @Test
    public void test17787() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17787");
        org.joda.time.Period period8 = new org.joda.time.Period((-41), (int) 'a', (-2764800), 107, 100, 357, (int) (short) 10, 350);
    }

    @Test
    public void test17788() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17788");
        org.joda.time.PeriodType periodType3 = org.joda.time.PeriodType.seconds();
        org.joda.time.PeriodType periodType4 = periodType3.withMinutesRemoved();
        org.joda.time.Chronology chronology5 = null;
        org.joda.time.MutablePeriod mutablePeriod6 = new org.joda.time.MutablePeriod((long) 0, (long) (short) 100, periodType3, chronology5);
        int int7 = periodType3.size();
        int int8 = periodType3.size();
        org.joda.time.PeriodType periodType9 = periodType3.withMonthsRemoved();
        org.joda.time.MutablePeriod mutablePeriod10 = new org.joda.time.MutablePeriod((long) (byte) -1, periodType3);
        int int11 = mutablePeriod10.getMinutes();
        org.joda.time.Duration duration13 = org.joda.time.Duration.standardSeconds(1L);
        mutablePeriod10.add((org.joda.time.ReadableDuration) duration13);
        org.joda.time.Duration duration16 = org.joda.time.Duration.standardMinutes((-1L));
        long long17 = duration16.getStandardMinutes();
        org.joda.time.Duration duration19 = org.joda.time.Duration.standardMinutes((-1L));
        long long20 = duration19.getStandardMinutes();
        boolean boolean21 = duration16.isLongerThan((org.joda.time.ReadableDuration) duration19);
        org.joda.time.Duration duration23 = duration19.withMillis((long) 1);
        org.joda.time.Duration duration25 = org.joda.time.Duration.standardMinutes((-1L));
        long long26 = duration25.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant27 = null;
        org.joda.time.Period period28 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration25, readableInstant27);
        org.joda.time.PeriodType periodType29 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology30 = null;
        org.joda.time.Period period31 = duration25.toPeriod(periodType29, chronology30);
        org.joda.time.Duration duration34 = duration25.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration36 = org.joda.time.Duration.standardMinutes((-1L));
        long long37 = duration36.getStandardMinutes();
        org.joda.time.Duration duration39 = org.joda.time.Duration.standardMinutes((-1L));
        long long40 = duration39.getStandardMinutes();
        boolean boolean41 = duration36.isLongerThan((org.joda.time.ReadableDuration) duration39);
        org.joda.time.Duration duration43 = duration39.withMillis((long) 1);
        boolean boolean44 = duration34.isShorterThan((org.joda.time.ReadableDuration) duration39);
        boolean boolean45 = duration19.isLongerThan((org.joda.time.ReadableDuration) duration39);
        org.joda.time.Duration duration47 = org.joda.time.Duration.standardMinutes((-1L));
        long long48 = duration47.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant49 = null;
        org.joda.time.Period period50 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration47, readableInstant49);
        org.joda.time.PeriodType periodType51 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology52 = null;
        org.joda.time.Period period53 = duration47.toPeriod(periodType51, chronology52);
        org.joda.time.Duration duration54 = duration47.toDuration();
        boolean boolean55 = duration19.isEqual((org.joda.time.ReadableDuration) duration47);
        org.joda.time.Duration duration57 = org.joda.time.Duration.standardMinutes((-1L));
        long long58 = duration57.getStandardMinutes();
        org.joda.time.Duration duration60 = org.joda.time.Duration.standardMinutes((-1L));
        long long61 = duration60.getStandardMinutes();
        boolean boolean62 = duration57.isLongerThan((org.joda.time.ReadableDuration) duration60);
        org.joda.time.Duration duration63 = duration19.plus((org.joda.time.ReadableDuration) duration60);
        org.joda.time.Duration duration66 = duration60.withDurationAdded((long) 0, (int) (byte) 10);
        org.joda.time.Duration duration68 = org.joda.time.Duration.standardMinutes((-1L));
        long long69 = duration68.getStandardMinutes();
        org.joda.time.Duration duration71 = org.joda.time.Duration.standardMinutes((-1L));
        long long72 = duration71.getStandardMinutes();
        boolean boolean73 = duration68.isLongerThan((org.joda.time.ReadableDuration) duration71);
        org.joda.time.Duration duration75 = duration71.withMillis((long) 1);
        org.joda.time.Duration duration76 = duration66.plus((org.joda.time.ReadableDuration) duration75);
        int int77 = duration13.compareTo((org.joda.time.ReadableDuration) duration76);
        org.joda.time.Duration duration79 = duration76.plus((-12095963990L));
        org.junit.Assert.assertNotNull(periodType3);
        org.junit.Assert.assertNotNull(periodType4);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertNotNull(periodType9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertNotNull(duration16);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + (-1L) + "'", long17 == (-1L));
        org.junit.Assert.assertNotNull(duration19);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + (-1L) + "'", long20 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(duration23);
        org.junit.Assert.assertNotNull(duration25);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + (-1L) + "'", long26 == (-1L));
        org.junit.Assert.assertNotNull(periodType29);
        org.junit.Assert.assertNotNull(period31);
        org.junit.Assert.assertNotNull(duration34);
        org.junit.Assert.assertNotNull(duration36);
        org.junit.Assert.assertTrue("'" + long37 + "' != '" + (-1L) + "'", long37 == (-1L));
        org.junit.Assert.assertNotNull(duration39);
        org.junit.Assert.assertTrue("'" + long40 + "' != '" + (-1L) + "'", long40 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(duration43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(duration47);
        org.junit.Assert.assertTrue("'" + long48 + "' != '" + (-1L) + "'", long48 == (-1L));
        org.junit.Assert.assertNotNull(periodType51);
        org.junit.Assert.assertNotNull(period53);
        org.junit.Assert.assertNotNull(duration54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(duration57);
        org.junit.Assert.assertTrue("'" + long58 + "' != '" + (-1L) + "'", long58 == (-1L));
        org.junit.Assert.assertNotNull(duration60);
        org.junit.Assert.assertTrue("'" + long61 + "' != '" + (-1L) + "'", long61 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(duration63);
        org.junit.Assert.assertNotNull(duration66);
        org.junit.Assert.assertNotNull(duration68);
        org.junit.Assert.assertTrue("'" + long69 + "' != '" + (-1L) + "'", long69 == (-1L));
        org.junit.Assert.assertNotNull(duration71);
        org.junit.Assert.assertTrue("'" + long72 + "' != '" + (-1L) + "'", long72 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(duration75);
        org.junit.Assert.assertNotNull(duration76);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 1 + "'", int77 == 1);
        org.junit.Assert.assertNotNull(duration79);
    }

    @Test
    public void test17789() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17789");
        org.joda.time.PeriodType periodType1 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.MutablePeriod mutablePeriod3 = new org.joda.time.MutablePeriod((long) '4', periodType1, chronology2);
        org.joda.time.MutablePeriod mutablePeriod4 = mutablePeriod3.copy();
        mutablePeriod4.setDays(1);
        int int7 = mutablePeriod4.getWeeks();
        // The following exception was thrown during execution in test generation
        try {
            mutablePeriod4.setMillis((-102));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Period does not support field 'millis'");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(periodType1);
        org.junit.Assert.assertNotNull(mutablePeriod4);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
    }

    @Test
    public void test17790() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17790");
        org.joda.time.MutablePeriod mutablePeriod4 = new org.joda.time.MutablePeriod((int) (byte) 0, (int) (byte) 1, (int) (byte) 10, 0);
        mutablePeriod4.setPeriod((int) (byte) 100, (int) (byte) 10, (int) (byte) 1, 1, (int) '#', (int) (short) -1, 0, (int) 'a');
        mutablePeriod4.addWeeks(2);
        org.joda.time.Period period17 = org.joda.time.Period.parse("P0D");
        int int18 = period17.size();
        mutablePeriod4.setPeriod((org.joda.time.ReadablePeriod) period17);
        org.joda.time.Period period21 = period17.minusMonths((int) 'a');
        org.joda.time.Period period23 = period21.plusMonths((int) (byte) 10);
        org.joda.time.Period period25 = period23.minusMinutes((-100));
        org.junit.Assert.assertNotNull(period17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 8 + "'", int18 == 8);
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertNotNull(period23);
        org.junit.Assert.assertNotNull(period25);
    }

    @Test
    public void test17791() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17791");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((-6060L));
        org.junit.Assert.assertNotNull(duration1);
    }

    @Test
    public void test17792() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17792");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.Duration duration2 = org.joda.time.Duration.standardMinutes((-1L));
        long long3 = duration2.getStandardMinutes();
        org.joda.time.Duration duration5 = org.joda.time.Duration.standardMinutes((-1L));
        long long6 = duration5.getStandardMinutes();
        boolean boolean7 = duration2.isLongerThan((org.joda.time.ReadableDuration) duration5);
        org.joda.time.Duration duration9 = duration5.withMillis(1L);
        org.joda.time.Duration duration11 = org.joda.time.Duration.standardMinutes((-1L));
        long long12 = duration11.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant13 = null;
        org.joda.time.Period period14 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration11, readableInstant13);
        org.joda.time.PeriodType periodType15 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology16 = null;
        org.joda.time.Period period17 = duration11.toPeriod(periodType15, chronology16);
        org.joda.time.Duration duration18 = duration11.toDuration();
        int int19 = duration5.compareTo((org.joda.time.ReadableDuration) duration11);
        org.joda.time.Duration duration22 = duration5.withDurationAdded(10L, (int) '#');
        org.joda.time.Duration duration28 = org.joda.time.Duration.standardMinutes((-1L));
        long long29 = duration28.getStandardMinutes();
        org.joda.time.Period period30 = duration28.toPeriod();
        org.joda.time.Duration duration32 = org.joda.time.Duration.standardMinutes((-1L));
        long long33 = duration32.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant34 = null;
        org.joda.time.Period period35 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration32, readableInstant34);
        org.joda.time.PeriodType periodType36 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology37 = null;
        org.joda.time.Period period38 = duration32.toPeriod(periodType36, chronology37);
        org.joda.time.Period period39 = duration28.toPeriod(periodType36);
        org.joda.time.Chronology chronology40 = null;
        org.joda.time.MutablePeriod mutablePeriod41 = new org.joda.time.MutablePeriod(1L, (long) (byte) 100, periodType36, chronology40);
        org.joda.time.PeriodType periodType42 = periodType36.withMillisRemoved();
        org.joda.time.Period period43 = new org.joda.time.Period((long) '#', (long) 'a', periodType42);
        org.joda.time.PeriodType periodType44 = period43.getPeriodType();
        int int45 = periodType44.size();
        org.joda.time.PeriodType periodType46 = periodType44.withMillisRemoved();
        org.joda.time.MutablePeriod mutablePeriod47 = new org.joda.time.MutablePeriod(readableInstant0, (org.joda.time.ReadableDuration) duration22, periodType46);
        org.joda.time.Period period49 = org.joda.time.Period.seconds((int) '#');
        int int50 = period49.getMillis();
        org.joda.time.Period period52 = period49.withMillis((int) '#');
        org.joda.time.DurationFieldType durationFieldType53 = org.joda.time.DurationFieldType.halfdays();
        boolean boolean54 = period49.isSupported(durationFieldType53);
        org.joda.time.Chronology chronology56 = null;
        org.joda.time.MutablePeriod mutablePeriod57 = new org.joda.time.MutablePeriod(1L, chronology56);
        org.joda.time.Period period59 = org.joda.time.Period.seconds((int) '#');
        mutablePeriod57.setPeriod((org.joda.time.ReadablePeriod) period59);
        org.joda.time.DurationFieldType durationFieldType61 = org.joda.time.DurationFieldType.years();
        java.lang.String str62 = durationFieldType61.getName();
        boolean boolean63 = mutablePeriod57.isSupported(durationFieldType61);
        int int64 = period49.get(durationFieldType61);
        org.joda.time.Duration duration66 = org.joda.time.Duration.standardMinutes((-1L));
        long long67 = duration66.getStandardMinutes();
        org.joda.time.Period period68 = duration66.toPeriod();
        org.joda.time.Duration duration70 = org.joda.time.Duration.standardMinutes((-1L));
        long long71 = duration70.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant72 = null;
        org.joda.time.Period period73 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration70, readableInstant72);
        org.joda.time.PeriodType periodType74 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology75 = null;
        org.joda.time.Period period76 = duration70.toPeriod(periodType74, chronology75);
        org.joda.time.Period period77 = duration66.toPeriod(periodType74);
        org.joda.time.PeriodType periodType79 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period80 = new org.joda.time.Period(10L, periodType79);
        org.joda.time.PeriodType periodType81 = periodType79.withWeeksRemoved();
        org.joda.time.Period period82 = period77.withPeriodType(periodType81);
        org.joda.time.Period period83 = period49.normalizedStandard(periodType81);
        org.joda.time.DurationFieldType durationFieldType85 = periodType81.getFieldType(0);
        int int86 = mutablePeriod47.get(durationFieldType85);
        java.lang.String str87 = durationFieldType85.getName();
        org.junit.Assert.assertNotNull(duration2);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + (-1L) + "'", long3 == (-1L));
        org.junit.Assert.assertNotNull(duration5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + (-1L) + "'", long12 == (-1L));
        org.junit.Assert.assertNotNull(periodType15);
        org.junit.Assert.assertNotNull(period17);
        org.junit.Assert.assertNotNull(duration18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(duration22);
        org.junit.Assert.assertNotNull(duration28);
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + (-1L) + "'", long29 == (-1L));
        org.junit.Assert.assertNotNull(period30);
        org.junit.Assert.assertNotNull(duration32);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + (-1L) + "'", long33 == (-1L));
        org.junit.Assert.assertNotNull(periodType36);
        org.junit.Assert.assertNotNull(period38);
        org.junit.Assert.assertNotNull(period39);
        org.junit.Assert.assertNotNull(periodType42);
        org.junit.Assert.assertNotNull(periodType44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 1 + "'", int45 == 1);
        org.junit.Assert.assertNotNull(periodType46);
        org.junit.Assert.assertNotNull(period49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertNotNull(period52);
        org.junit.Assert.assertNotNull(durationFieldType53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(period59);
        org.junit.Assert.assertNotNull(durationFieldType61);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "years" + "'", str62, "years");
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 0 + "'", int64 == 0);
        org.junit.Assert.assertNotNull(duration66);
        org.junit.Assert.assertTrue("'" + long67 + "' != '" + (-1L) + "'", long67 == (-1L));
        org.junit.Assert.assertNotNull(period68);
        org.junit.Assert.assertNotNull(duration70);
        org.junit.Assert.assertTrue("'" + long71 + "' != '" + (-1L) + "'", long71 == (-1L));
        org.junit.Assert.assertNotNull(periodType74);
        org.junit.Assert.assertNotNull(period76);
        org.junit.Assert.assertNotNull(period77);
        org.junit.Assert.assertNotNull(periodType79);
        org.junit.Assert.assertNotNull(periodType81);
        org.junit.Assert.assertNotNull(period82);
        org.junit.Assert.assertNotNull(period83);
        org.junit.Assert.assertNotNull(durationFieldType85);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + 0 + "'", int86 == 0);
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "seconds" + "'", str87, "seconds");
    }

    @Test
    public void test17793() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17793");
        org.joda.time.Period period4 = new org.joda.time.Period((-1), 10, 35, (-900));
    }

    @Test
    public void test17794() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17794");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.Duration duration2 = org.joda.time.Duration.standardMinutes((-1L));
        long long3 = duration2.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant4 = null;
        org.joda.time.Period period5 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration2, readableInstant4);
        org.joda.time.PeriodType periodType6 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology7 = null;
        org.joda.time.Period period8 = duration2.toPeriod(periodType6, chronology7);
        org.joda.time.Duration duration11 = duration2.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration13 = org.joda.time.Duration.standardHours((long) 10);
        org.joda.time.Duration duration15 = org.joda.time.Duration.standardMinutes((-1L));
        long long16 = duration15.getStandardMinutes();
        org.joda.time.Duration duration18 = org.joda.time.Duration.standardMinutes((-1L));
        long long19 = duration18.getStandardMinutes();
        boolean boolean20 = duration15.isLongerThan((org.joda.time.ReadableDuration) duration18);
        org.joda.time.Period period21 = duration18.toPeriod();
        org.joda.time.Minutes minutes22 = duration18.toStandardMinutes();
        boolean boolean23 = duration13.isEqual((org.joda.time.ReadableDuration) duration18);
        boolean boolean24 = duration2.isShorterThan((org.joda.time.ReadableDuration) duration13);
        org.joda.time.Minutes minutes25 = duration2.toStandardMinutes();
        org.joda.time.MutablePeriod mutablePeriod26 = new org.joda.time.MutablePeriod(readableInstant0, (org.joda.time.ReadableDuration) duration2);
        mutablePeriod26.setSeconds((int) (short) -1);
        mutablePeriod26.setWeeks((int) (short) -1);
        org.junit.Assert.assertNotNull(duration2);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + (-1L) + "'", long3 == (-1L));
        org.junit.Assert.assertNotNull(periodType6);
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertNotNull(duration15);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + (-1L) + "'", long16 == (-1L));
        org.junit.Assert.assertNotNull(duration18);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + (-1L) + "'", long19 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertNotNull(minutes22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(minutes25);
    }

    @Test
    public void test17795() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17795");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.MutablePeriod mutablePeriod3 = new org.joda.time.MutablePeriod(1L, chronology2);
        org.joda.time.Chronology chronology5 = null;
        org.joda.time.MutablePeriod mutablePeriod6 = new org.joda.time.MutablePeriod(1L, chronology5);
        mutablePeriod3.add((org.joda.time.ReadablePeriod) mutablePeriod6);
        mutablePeriod3.addMonths((int) (short) -1);
        org.joda.time.DurationFieldType[] durationFieldTypeArray10 = mutablePeriod3.getFieldTypes();
        mutablePeriod3.setSeconds((int) (byte) -1);
        mutablePeriod3.setMillis((int) 'a');
        org.joda.time.Duration duration16 = org.joda.time.Duration.standardMinutes((-1L));
        long long17 = duration16.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant18 = null;
        org.joda.time.Period period19 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration16, readableInstant18);
        org.joda.time.Duration duration21 = org.joda.time.Duration.standardMinutes((-1L));
        long long22 = duration21.getStandardMinutes();
        org.joda.time.Period period23 = duration21.toPeriod();
        boolean boolean24 = duration16.isLongerThan((org.joda.time.ReadableDuration) duration21);
        org.joda.time.Duration duration26 = org.joda.time.Duration.standardMinutes((-1L));
        long long27 = duration26.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant28 = null;
        org.joda.time.Period period29 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration26, readableInstant28);
        org.joda.time.PeriodType periodType30 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology31 = null;
        org.joda.time.Period period32 = duration26.toPeriod(periodType30, chronology31);
        org.joda.time.Duration duration33 = duration21.minus((org.joda.time.ReadableDuration) duration26);
        mutablePeriod3.add((org.joda.time.ReadableDuration) duration21);
        org.joda.time.Duration duration35 = duration21.toDuration();
        org.joda.time.Period period37 = org.joda.time.Period.seconds((int) '#');
        org.joda.time.Period period38 = period37.toPeriod();
        org.joda.time.Period period40 = period38.minusWeeks(10);
        org.joda.time.Period period42 = period38.minusSeconds((int) (byte) 1);
        org.joda.time.PeriodType periodType43 = period42.getPeriodType();
        org.joda.time.Period period44 = new org.joda.time.Period(readableInstant0, (org.joda.time.ReadableDuration) duration35, periodType43);
        org.joda.time.Period period46 = period44.minusWeeks((int) '4');
        org.junit.Assert.assertNotNull(durationFieldTypeArray10);
        org.junit.Assert.assertNotNull(duration16);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + (-1L) + "'", long17 == (-1L));
        org.junit.Assert.assertNotNull(duration21);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + (-1L) + "'", long22 == (-1L));
        org.junit.Assert.assertNotNull(period23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(duration26);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + (-1L) + "'", long27 == (-1L));
        org.junit.Assert.assertNotNull(periodType30);
        org.junit.Assert.assertNotNull(period32);
        org.junit.Assert.assertNotNull(duration33);
        org.junit.Assert.assertNotNull(duration35);
        org.junit.Assert.assertNotNull(period37);
        org.junit.Assert.assertNotNull(period38);
        org.junit.Assert.assertNotNull(period40);
        org.junit.Assert.assertNotNull(period42);
        org.junit.Assert.assertNotNull(periodType43);
        org.junit.Assert.assertNotNull(period46);
    }

    @Test
    public void test17796() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17796");
        org.joda.time.MutablePeriod mutablePeriod1 = new org.joda.time.MutablePeriod((-60000L));
        org.joda.time.MutablePeriod mutablePeriod2 = mutablePeriod1.copy();
        int int3 = mutablePeriod2.getMinutes();
        mutablePeriod2.setYears(1);
        java.lang.Object obj6 = mutablePeriod2.clone();
        org.junit.Assert.assertNotNull(mutablePeriod2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertEquals(obj6.toString(), "P1YT-1M");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj6), "P1YT-1M");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj6), "P1YT-1M");
    }

    @Test
    public void test17797() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17797");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((-1L));
        long long2 = duration1.getStandardMinutes();
        org.joda.time.Duration duration4 = org.joda.time.Duration.standardMinutes((-1L));
        long long5 = duration4.getStandardMinutes();
        boolean boolean6 = duration1.isLongerThan((org.joda.time.ReadableDuration) duration4);
        org.joda.time.Duration duration8 = duration4.withMillis((long) 1);
        org.joda.time.Chronology chronology10 = null;
        org.joda.time.MutablePeriod mutablePeriod11 = new org.joda.time.MutablePeriod(1L, chronology10);
        org.joda.time.Chronology chronology13 = null;
        org.joda.time.MutablePeriod mutablePeriod14 = new org.joda.time.MutablePeriod(1L, chronology13);
        mutablePeriod11.add((org.joda.time.ReadablePeriod) mutablePeriod14);
        boolean boolean16 = duration8.equals((java.lang.Object) mutablePeriod14);
        org.joda.time.ReadableInstant readableInstant17 = null;
        org.joda.time.ReadableInstant readableInstant18 = null;
        org.joda.time.PeriodType periodType19 = org.joda.time.PeriodType.days();
        org.joda.time.Period period20 = new org.joda.time.Period(readableInstant17, readableInstant18, periodType19);
        org.joda.time.DurationFieldType durationFieldType21 = org.joda.time.DurationFieldType.days();
        int int22 = periodType19.indexOf(durationFieldType21);
        int int23 = mutablePeriod14.get(durationFieldType21);
        org.joda.time.PeriodType periodType24 = org.joda.time.PeriodType.seconds();
        org.joda.time.PeriodType periodType25 = periodType24.withMinutesRemoved();
        org.joda.time.DurationFieldType durationFieldType26 = org.joda.time.DurationFieldType.minutes();
        int int27 = periodType25.indexOf(durationFieldType26);
        org.joda.time.MutablePeriod mutablePeriod28 = new org.joda.time.MutablePeriod(periodType25);
        mutablePeriod28.setPeriod(0L, (long) '4');
        org.joda.time.PeriodType periodType34 = null;
        org.joda.time.MutablePeriod mutablePeriod35 = new org.joda.time.MutablePeriod((long) ' ', (-1L), periodType34);
        mutablePeriod35.addMinutes((int) ' ');
        mutablePeriod35.clear();
        mutablePeriod35.addWeeks((int) (byte) 100);
        org.joda.time.Duration duration42 = new org.joda.time.Duration((long) (short) 100);
        org.joda.time.ReadableInstant readableInstant43 = null;
        org.joda.time.ReadableInstant readableInstant45 = null;
        org.joda.time.ReadableInstant readableInstant46 = null;
        org.joda.time.Duration duration48 = org.joda.time.Duration.standardMinutes((-1L));
        long long49 = duration48.getStandardMinutes();
        org.joda.time.Period period50 = duration48.toPeriod();
        org.joda.time.Duration duration52 = org.joda.time.Duration.standardMinutes((-1L));
        long long53 = duration52.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant54 = null;
        org.joda.time.Period period55 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration52, readableInstant54);
        org.joda.time.PeriodType periodType56 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology57 = null;
        org.joda.time.Period period58 = duration52.toPeriod(periodType56, chronology57);
        org.joda.time.Period period59 = duration48.toPeriod(periodType56);
        org.joda.time.MutablePeriod mutablePeriod60 = new org.joda.time.MutablePeriod(readableInstant45, readableInstant46, periodType56);
        org.joda.time.Period period62 = org.joda.time.Period.seconds((int) '#');
        int int63 = period62.getMillis();
        org.joda.time.DurationFieldType durationFieldType64 = org.joda.time.DurationFieldType.years();
        org.joda.time.Period period66 = period62.withField(durationFieldType64, (int) (short) 10);
        int int67 = periodType56.indexOf(durationFieldType64);
        org.joda.time.Period period68 = new org.joda.time.Period(0L, periodType56);
        org.joda.time.Period period69 = duration42.toPeriodTo(readableInstant43, periodType56);
        org.joda.time.Hours hours70 = duration42.toStandardHours();
        org.joda.time.ReadableInstant readableInstant71 = null;
        org.joda.time.Interval interval72 = duration42.toIntervalTo(readableInstant71);
        mutablePeriod35.setPeriod((org.joda.time.ReadableInterval) interval72);
        mutablePeriod28.setPeriod((org.joda.time.ReadableInterval) interval72);
        mutablePeriod14.setPeriod((org.joda.time.ReadableInterval) interval72);
        int int76 = mutablePeriod14.getYears();
        mutablePeriod14.setHours(0);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + (-1L) + "'", long2 == (-1L));
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + (-1L) + "'", long5 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(duration8);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(periodType19);
        org.junit.Assert.assertNotNull(durationFieldType21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(periodType24);
        org.junit.Assert.assertNotNull(periodType25);
        org.junit.Assert.assertNotNull(durationFieldType26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(duration48);
        org.junit.Assert.assertTrue("'" + long49 + "' != '" + (-1L) + "'", long49 == (-1L));
        org.junit.Assert.assertNotNull(period50);
        org.junit.Assert.assertNotNull(duration52);
        org.junit.Assert.assertTrue("'" + long53 + "' != '" + (-1L) + "'", long53 == (-1L));
        org.junit.Assert.assertNotNull(periodType56);
        org.junit.Assert.assertNotNull(period58);
        org.junit.Assert.assertNotNull(period59);
        org.junit.Assert.assertNotNull(period62);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 0 + "'", int63 == 0);
        org.junit.Assert.assertNotNull(durationFieldType64);
        org.junit.Assert.assertNotNull(period66);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + (-1) + "'", int67 == (-1));
        org.junit.Assert.assertNotNull(period69);
        org.junit.Assert.assertNotNull(hours70);
        org.junit.Assert.assertNotNull(interval72);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 0 + "'", int76 == 0);
    }

    @Test
    public void test17798() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17798");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((-1L));
        long long2 = duration1.getStandardMinutes();
        org.joda.time.Period period3 = duration1.toPeriod();
        org.joda.time.Duration duration5 = org.joda.time.Duration.standardMinutes((-1L));
        long long6 = duration5.getStandardMinutes();
        org.joda.time.Duration duration8 = org.joda.time.Duration.standardMinutes((-1L));
        long long9 = duration8.getStandardMinutes();
        boolean boolean10 = duration5.isLongerThan((org.joda.time.ReadableDuration) duration8);
        org.joda.time.Duration duration12 = duration8.withMillis(1L);
        org.joda.time.Duration duration14 = org.joda.time.Duration.standardMinutes((-1L));
        long long15 = duration14.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant16 = null;
        org.joda.time.Period period17 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration14, readableInstant16);
        org.joda.time.PeriodType periodType18 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology19 = null;
        org.joda.time.Period period20 = duration14.toPeriod(periodType18, chronology19);
        org.joda.time.Duration duration21 = duration14.toDuration();
        int int22 = duration8.compareTo((org.joda.time.ReadableDuration) duration14);
        boolean boolean23 = duration1.isLongerThan((org.joda.time.ReadableDuration) duration8);
        org.joda.time.Duration duration25 = org.joda.time.Duration.standardMinutes((-1L));
        long long26 = duration25.getStandardMinutes();
        org.joda.time.Duration duration28 = org.joda.time.Duration.standardMinutes((-1L));
        long long29 = duration28.getStandardMinutes();
        boolean boolean30 = duration25.isLongerThan((org.joda.time.ReadableDuration) duration28);
        org.joda.time.Duration duration32 = duration28.withMillis(1L);
        long long33 = duration32.getMillis();
        int int34 = duration8.compareTo((org.joda.time.ReadableDuration) duration32);
        org.joda.time.ReadableInstant readableInstant35 = null;
        org.joda.time.Period period36 = duration32.toPeriodFrom(readableInstant35);
        org.joda.time.Duration duration38 = duration32.plus(34980000L);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + (-1L) + "'", long2 == (-1L));
        org.junit.Assert.assertNotNull(period3);
        org.junit.Assert.assertNotNull(duration5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
        org.junit.Assert.assertNotNull(duration8);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + (-1L) + "'", long9 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + (-1L) + "'", long15 == (-1L));
        org.junit.Assert.assertNotNull(periodType18);
        org.junit.Assert.assertNotNull(period20);
        org.junit.Assert.assertNotNull(duration21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(duration25);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + (-1L) + "'", long26 == (-1L));
        org.junit.Assert.assertNotNull(duration28);
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + (-1L) + "'", long29 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(duration32);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + 1L + "'", long33 == 1L);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertNotNull(period36);
        org.junit.Assert.assertNotNull(duration38);
    }

    @Test
    public void test17799() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17799");
        org.joda.time.Period period1 = org.joda.time.Period.seconds((int) '#');
        int int2 = period1.getMillis();
        org.joda.time.Period period4 = period1.withMillis((int) '#');
        org.joda.time.DurationFieldType durationFieldType5 = org.joda.time.DurationFieldType.halfdays();
        boolean boolean6 = period1.isSupported(durationFieldType5);
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.Duration duration8 = period1.toDurationTo(readableInstant7);
        org.joda.time.Duration duration10 = duration8.plus((long) (-5));
        org.joda.time.Duration duration12 = duration10.minus(120L);
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(durationFieldType5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(duration8);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertNotNull(duration12);
    }

    @Test
    public void test17800() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17800");
        org.joda.time.MutablePeriod mutablePeriod2 = new org.joda.time.MutablePeriod(36000L, 0L);
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.ReadableInstant readableInstant4 = null;
        org.joda.time.Duration duration8 = org.joda.time.Duration.standardMinutes((-1L));
        long long9 = duration8.getStandardMinutes();
        org.joda.time.Period period10 = duration8.toPeriod();
        org.joda.time.Duration duration12 = org.joda.time.Duration.standardMinutes((-1L));
        long long13 = duration12.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant14 = null;
        org.joda.time.Period period15 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration12, readableInstant14);
        org.joda.time.PeriodType periodType16 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology17 = null;
        org.joda.time.Period period18 = duration12.toPeriod(periodType16, chronology17);
        org.joda.time.Period period19 = duration8.toPeriod(periodType16);
        org.joda.time.Chronology chronology20 = null;
        org.joda.time.MutablePeriod mutablePeriod21 = new org.joda.time.MutablePeriod(1L, (long) (byte) 100, periodType16, chronology20);
        org.joda.time.PeriodType periodType22 = periodType16.withYearsRemoved();
        org.joda.time.Period period23 = new org.joda.time.Period(readableInstant3, readableInstant4, periodType22);
        boolean boolean24 = mutablePeriod2.equals((java.lang.Object) periodType22);
        mutablePeriod2.setPeriod(100, 11, (int) (short) 100, 8, (int) (short) 10, 5, 1, (int) '4');
        mutablePeriod2.addWeeks((int) (byte) 0);
        org.joda.time.Period period36 = mutablePeriod2.toPeriod();
        org.junit.Assert.assertNotNull(duration8);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + (-1L) + "'", long9 == (-1L));
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + (-1L) + "'", long13 == (-1L));
        org.junit.Assert.assertNotNull(periodType16);
        org.junit.Assert.assertNotNull(period18);
        org.junit.Assert.assertNotNull(period19);
        org.junit.Assert.assertNotNull(periodType22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(period36);
    }

    @Test
    public void test17801() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17801");
        org.joda.time.Period period1 = org.joda.time.Period.seconds((int) '#');
        org.joda.time.Period period2 = period1.toPeriod();
        org.joda.time.Period period4 = period1.withMonths((int) (short) 10);
        org.joda.time.Period period5 = period1.negated();
        org.joda.time.Days days6 = period1.toStandardDays();
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.Duration duration10 = org.joda.time.Duration.standardMinutes((-1L));
        long long11 = duration10.getStandardMinutes();
        org.joda.time.Duration duration13 = org.joda.time.Duration.standardMinutes((-1L));
        long long14 = duration13.getStandardMinutes();
        boolean boolean15 = duration10.isLongerThan((org.joda.time.ReadableDuration) duration13);
        org.joda.time.Duration duration17 = duration13.withMillis(1L);
        org.joda.time.Period period18 = new org.joda.time.Period(readableInstant8, (org.joda.time.ReadableDuration) duration13);
        org.joda.time.MutablePeriod mutablePeriod19 = new org.joda.time.MutablePeriod(readableInstant7, (org.joda.time.ReadableDuration) duration13);
        org.joda.time.PeriodType periodType21 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period22 = new org.joda.time.Period(10L, periodType21);
        org.joda.time.DurationFieldType durationFieldType23 = org.joda.time.DurationFieldType.weeks();
        boolean boolean24 = periodType21.isSupported(durationFieldType23);
        org.joda.time.Chronology chronology25 = null;
        boolean boolean26 = durationFieldType23.isSupported(chronology25);
        mutablePeriod19.set(durationFieldType23, (-60));
        mutablePeriod19.addHours((-1));
        org.joda.time.Period period31 = period1.withFields((org.joda.time.ReadablePeriod) mutablePeriod19);
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(period2);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(period5);
        org.junit.Assert.assertNotNull(days6);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + (-1L) + "'", long11 == (-1L));
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + (-1L) + "'", long14 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(duration17);
        org.junit.Assert.assertNotNull(periodType21);
        org.junit.Assert.assertNotNull(durationFieldType23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(period31);
    }

    @Test
    public void test17802() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17802");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((-1L));
        long long2 = duration1.getStandardMinutes();
        org.joda.time.Duration duration4 = org.joda.time.Duration.standardMinutes((-1L));
        long long5 = duration4.getStandardMinutes();
        boolean boolean6 = duration1.isLongerThan((org.joda.time.ReadableDuration) duration4);
        org.joda.time.Duration duration8 = duration4.withMillis((long) 1);
        org.joda.time.Duration duration10 = org.joda.time.Duration.standardMinutes((-1L));
        long long11 = duration10.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant12 = null;
        org.joda.time.Period period13 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration10, readableInstant12);
        org.joda.time.PeriodType periodType14 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology15 = null;
        org.joda.time.Period period16 = duration10.toPeriod(periodType14, chronology15);
        org.joda.time.Duration duration19 = duration10.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration21 = org.joda.time.Duration.standardMinutes((-1L));
        long long22 = duration21.getStandardMinutes();
        org.joda.time.Duration duration24 = org.joda.time.Duration.standardMinutes((-1L));
        long long25 = duration24.getStandardMinutes();
        boolean boolean26 = duration21.isLongerThan((org.joda.time.ReadableDuration) duration24);
        org.joda.time.Duration duration28 = duration24.withMillis((long) 1);
        boolean boolean29 = duration19.isShorterThan((org.joda.time.ReadableDuration) duration24);
        boolean boolean30 = duration4.isLongerThan((org.joda.time.ReadableDuration) duration24);
        org.joda.time.Duration duration32 = org.joda.time.Duration.standardMinutes((-1L));
        long long33 = duration32.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant34 = null;
        org.joda.time.Period period35 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration32, readableInstant34);
        org.joda.time.PeriodType periodType36 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology37 = null;
        org.joda.time.Period period38 = duration32.toPeriod(periodType36, chronology37);
        org.joda.time.Duration duration39 = duration32.toDuration();
        boolean boolean40 = duration4.isEqual((org.joda.time.ReadableDuration) duration32);
        org.joda.time.ReadableInstant readableInstant41 = null;
        org.joda.time.Duration duration43 = org.joda.time.Duration.standardMinutes((-1L));
        long long44 = duration43.getStandardMinutes();
        org.joda.time.Duration duration46 = org.joda.time.Duration.standardMinutes((-1L));
        long long47 = duration46.getStandardMinutes();
        boolean boolean48 = duration43.isLongerThan((org.joda.time.ReadableDuration) duration46);
        org.joda.time.Duration duration50 = duration46.withMillis(1L);
        org.joda.time.Period period51 = new org.joda.time.Period(readableInstant41, (org.joda.time.ReadableDuration) duration46);
        org.joda.time.Duration duration52 = duration4.plus((org.joda.time.ReadableDuration) duration46);
        long long53 = duration52.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant54 = null;
        org.joda.time.MutablePeriod mutablePeriod55 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration52, readableInstant54);
        org.joda.time.ReadableInstant readableInstant56 = null;
        org.joda.time.Period period61 = new org.joda.time.Period((int) '#', (int) (byte) 100, 0, (-1));
        org.joda.time.ReadableInstant readableInstant62 = null;
        org.joda.time.Duration duration63 = period61.toDurationFrom(readableInstant62);
        org.joda.time.PeriodType periodType64 = org.joda.time.PeriodType.millis();
        org.joda.time.PeriodType periodType65 = periodType64.withMonthsRemoved();
        java.lang.String str66 = periodType64.toString();
        java.lang.String str67 = periodType64.toString();
        java.lang.String str68 = periodType64.getName();
        org.joda.time.PeriodType periodType69 = periodType64.withMillisRemoved();
        org.joda.time.PeriodType periodType70 = periodType64.withHoursRemoved();
        org.joda.time.MutablePeriod mutablePeriod79 = new org.joda.time.MutablePeriod((-60), 34, (int) ' ', (-90), (-60), 34, 34, 5);
        org.joda.time.Duration duration81 = org.joda.time.Duration.standardMinutes((-1L));
        long long82 = duration81.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant83 = null;
        org.joda.time.Period period84 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration81, readableInstant83);
        org.joda.time.PeriodType periodType85 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology86 = null;
        org.joda.time.Period period87 = duration81.toPeriod(periodType85, chronology86);
        org.joda.time.Duration duration88 = duration81.toDuration();
        org.joda.time.Seconds seconds89 = duration88.toStandardSeconds();
        mutablePeriod79.mergePeriod((org.joda.time.ReadablePeriod) seconds89);
        org.joda.time.DurationFieldType durationFieldType92 = mutablePeriod79.getFieldType(3);
        boolean boolean93 = periodType70.isSupported(durationFieldType92);
        org.joda.time.Chronology chronology94 = null;
        org.joda.time.Period period95 = duration63.toPeriod(periodType70, chronology94);
        org.joda.time.Period period96 = duration52.toPeriodTo(readableInstant56, periodType70);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + (-1L) + "'", long2 == (-1L));
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + (-1L) + "'", long5 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(duration8);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + (-1L) + "'", long11 == (-1L));
        org.junit.Assert.assertNotNull(periodType14);
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertNotNull(duration19);
        org.junit.Assert.assertNotNull(duration21);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + (-1L) + "'", long22 == (-1L));
        org.junit.Assert.assertNotNull(duration24);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + (-1L) + "'", long25 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(duration28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(duration32);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + (-1L) + "'", long33 == (-1L));
        org.junit.Assert.assertNotNull(periodType36);
        org.junit.Assert.assertNotNull(period38);
        org.junit.Assert.assertNotNull(duration39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(duration43);
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + (-1L) + "'", long44 == (-1L));
        org.junit.Assert.assertNotNull(duration46);
        org.junit.Assert.assertTrue("'" + long47 + "' != '" + (-1L) + "'", long47 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(duration50);
        org.junit.Assert.assertNotNull(duration52);
        org.junit.Assert.assertTrue("'" + long53 + "' != '" + (-2L) + "'", long53 == (-2L));
        org.junit.Assert.assertNotNull(duration63);
        org.junit.Assert.assertNotNull(periodType64);
        org.junit.Assert.assertNotNull(periodType65);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "PeriodType[Millis]" + "'", str66, "PeriodType[Millis]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "PeriodType[Millis]" + "'", str67, "PeriodType[Millis]");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "Millis" + "'", str68, "Millis");
        org.junit.Assert.assertNotNull(periodType69);
        org.junit.Assert.assertNotNull(periodType70);
        org.junit.Assert.assertNotNull(duration81);
        org.junit.Assert.assertTrue("'" + long82 + "' != '" + (-1L) + "'", long82 == (-1L));
        org.junit.Assert.assertNotNull(periodType85);
        org.junit.Assert.assertNotNull(period87);
        org.junit.Assert.assertNotNull(duration88);
        org.junit.Assert.assertNotNull(seconds89);
        org.junit.Assert.assertNotNull(durationFieldType92);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertNotNull(period95);
        org.junit.Assert.assertNotNull(period96);
    }

    @Test
    public void test17803() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17803");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.Period period3 = new org.joda.time.Period(1L, (long) (byte) 10, chronology2);
        org.joda.time.Period period4 = period3.toPeriod();
        org.joda.time.Period period6 = period4.plusYears((int) 'a');
        org.joda.time.Period period8 = period4.plusDays((int) (short) 10);
        org.joda.time.Chronology chronology10 = null;
        org.joda.time.MutablePeriod mutablePeriod11 = new org.joda.time.MutablePeriod(1L, chronology10);
        org.joda.time.Chronology chronology13 = null;
        org.joda.time.MutablePeriod mutablePeriod14 = new org.joda.time.MutablePeriod(1L, chronology13);
        mutablePeriod11.add((org.joda.time.ReadablePeriod) mutablePeriod14);
        mutablePeriod11.setMillis((int) (short) 0);
        org.joda.time.PeriodType periodType20 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period21 = new org.joda.time.Period(10L, periodType20);
        org.joda.time.PeriodType periodType22 = periodType20.withWeeksRemoved();
        org.joda.time.MutablePeriod mutablePeriod23 = new org.joda.time.MutablePeriod((long) (byte) 0, periodType20);
        org.joda.time.Duration duration25 = org.joda.time.Duration.standardMinutes((-1L));
        long long26 = duration25.getStandardMinutes();
        org.joda.time.PeriodType periodType27 = null;
        org.joda.time.Period period28 = duration25.toPeriod(periodType27);
        org.joda.time.Chronology chronology29 = null;
        mutablePeriod23.setPeriod((org.joda.time.ReadableDuration) duration25, chronology29);
        org.joda.time.PeriodType periodType31 = mutablePeriod23.getPeriodType();
        org.joda.time.MutablePeriod mutablePeriod32 = mutablePeriod23.toMutablePeriod();
        mutablePeriod11.add((org.joda.time.ReadablePeriod) mutablePeriod32);
        org.joda.time.Period period34 = period8.withFields((org.joda.time.ReadablePeriod) mutablePeriod32);
        org.joda.time.PeriodType periodType36 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period37 = new org.joda.time.Period(10L, periodType36);
        org.joda.time.DurationFieldType durationFieldType38 = org.joda.time.DurationFieldType.weeks();
        boolean boolean39 = periodType36.isSupported(durationFieldType38);
        org.joda.time.Chronology chronology40 = null;
        boolean boolean41 = durationFieldType38.isSupported(chronology40);
        org.joda.time.Period period43 = period8.withFieldAdded(durationFieldType38, 0);
        org.joda.time.ReadableInstant readableInstant44 = null;
        org.joda.time.Duration duration46 = org.joda.time.Duration.standardMinutes((-1L));
        long long47 = duration46.getStandardMinutes();
        org.joda.time.Period period48 = duration46.toPeriod();
        org.joda.time.Duration duration50 = org.joda.time.Duration.standardMinutes((-1L));
        long long51 = duration50.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant52 = null;
        org.joda.time.Period period53 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration50, readableInstant52);
        org.joda.time.PeriodType periodType54 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology55 = null;
        org.joda.time.Period period56 = duration50.toPeriod(periodType54, chronology55);
        org.joda.time.Period period57 = duration46.toPeriod(periodType54);
        org.joda.time.Duration duration59 = org.joda.time.Duration.standardMinutes((-1L));
        long long60 = duration59.getStandardMinutes();
        boolean boolean61 = duration46.isLongerThan((org.joda.time.ReadableDuration) duration59);
        org.joda.time.PeriodType periodType62 = org.joda.time.PeriodType.weeks();
        org.joda.time.Period period63 = new org.joda.time.Period(readableInstant44, (org.joda.time.ReadableDuration) duration59, periodType62);
        org.joda.time.Chronology chronology64 = null;
        org.joda.time.Period period65 = duration59.toPeriod(chronology64);
        org.joda.time.ReadableInstant readableInstant66 = null;
        org.joda.time.Period period67 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration59, readableInstant66);
        org.joda.time.Duration duration68 = period67.toStandardDuration();
        java.lang.Object obj69 = null;
        org.joda.time.PeriodType periodType72 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period73 = new org.joda.time.Period(10L, periodType72);
        org.joda.time.PeriodType periodType74 = periodType72.withHoursRemoved();
        org.joda.time.PeriodType periodType75 = periodType72.withSecondsRemoved();
        org.joda.time.Period period76 = new org.joda.time.Period((long) (short) 1, periodType72);
        org.joda.time.Period period77 = new org.joda.time.Period(obj69, periodType72);
        boolean boolean78 = duration68.equals((java.lang.Object) periodType72);
        org.joda.time.Period period80 = org.joda.time.Period.months((int) (short) 10);
        org.joda.time.Chronology chronology82 = null;
        org.joda.time.MutablePeriod mutablePeriod83 = new org.joda.time.MutablePeriod(1L, chronology82);
        org.joda.time.Chronology chronology85 = null;
        org.joda.time.MutablePeriod mutablePeriod86 = new org.joda.time.MutablePeriod(1L, chronology85);
        mutablePeriod83.add((org.joda.time.ReadablePeriod) mutablePeriod86);
        org.joda.time.PeriodType periodType88 = mutablePeriod86.getPeriodType();
        org.joda.time.DurationFieldType durationFieldType89 = org.joda.time.DurationFieldType.years();
        java.lang.String str90 = durationFieldType89.getName();
        org.joda.time.Chronology chronology91 = null;
        boolean boolean92 = durationFieldType89.isSupported(chronology91);
        boolean boolean93 = periodType88.isSupported(durationFieldType89);
        java.lang.String str94 = durationFieldType89.getName();
        boolean boolean95 = period80.isSupported(durationFieldType89);
        org.joda.time.Chronology chronology96 = null;
        boolean boolean97 = durationFieldType89.isSupported(chronology96);
        boolean boolean98 = duration68.equals((java.lang.Object) durationFieldType89);
        int int99 = period43.get(durationFieldType89);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertNotNull(periodType20);
        org.junit.Assert.assertNotNull(periodType22);
        org.junit.Assert.assertNotNull(duration25);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + (-1L) + "'", long26 == (-1L));
        org.junit.Assert.assertNotNull(period28);
        org.junit.Assert.assertNotNull(periodType31);
        org.junit.Assert.assertNotNull(mutablePeriod32);
        org.junit.Assert.assertNotNull(period34);
        org.junit.Assert.assertNotNull(periodType36);
        org.junit.Assert.assertNotNull(durationFieldType38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(period43);
        org.junit.Assert.assertNotNull(duration46);
        org.junit.Assert.assertTrue("'" + long47 + "' != '" + (-1L) + "'", long47 == (-1L));
        org.junit.Assert.assertNotNull(period48);
        org.junit.Assert.assertNotNull(duration50);
        org.junit.Assert.assertTrue("'" + long51 + "' != '" + (-1L) + "'", long51 == (-1L));
        org.junit.Assert.assertNotNull(periodType54);
        org.junit.Assert.assertNotNull(period56);
        org.junit.Assert.assertNotNull(period57);
        org.junit.Assert.assertNotNull(duration59);
        org.junit.Assert.assertTrue("'" + long60 + "' != '" + (-1L) + "'", long60 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(periodType62);
        org.junit.Assert.assertNotNull(period65);
        org.junit.Assert.assertNotNull(duration68);
        org.junit.Assert.assertNotNull(periodType72);
        org.junit.Assert.assertNotNull(periodType74);
        org.junit.Assert.assertNotNull(periodType75);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(period80);
        org.junit.Assert.assertNotNull(periodType88);
        org.junit.Assert.assertNotNull(durationFieldType89);
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "years" + "'", str90, "years");
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + true + "'", boolean93 == true);
        org.junit.Assert.assertEquals("'" + str94 + "' != '" + "years" + "'", str94, "years");
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + true + "'", boolean95 == true);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + true + "'", boolean97 == true);
        org.junit.Assert.assertTrue("'" + boolean98 + "' != '" + false + "'", boolean98 == false);
        org.junit.Assert.assertTrue("'" + int99 + "' != '" + 0 + "'", int99 == 0);
    }

    @Test
    public void test17804() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17804");
        org.joda.time.Duration duration1 = new org.joda.time.Duration((-2L));
        org.joda.time.ReadableInstant readableInstant2 = null;
        java.lang.Object obj3 = null;
        org.joda.time.PeriodType periodType5 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology6 = null;
        org.joda.time.MutablePeriod mutablePeriod7 = new org.joda.time.MutablePeriod((long) '4', periodType5, chronology6);
        org.joda.time.Chronology chronology8 = null;
        org.joda.time.MutablePeriod mutablePeriod9 = new org.joda.time.MutablePeriod(obj3, periodType5, chronology8);
        org.joda.time.PeriodType periodType10 = periodType5.withWeeksRemoved();
        org.joda.time.PeriodType periodType11 = periodType10.withMonthsRemoved();
        org.joda.time.Period period12 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration1, readableInstant2, periodType11);
        org.joda.time.Duration duration14 = duration1.minus((long) '#');
        org.joda.time.Duration duration16 = org.joda.time.Duration.standardDays((long) (byte) 10);
        org.joda.time.Duration duration18 = org.joda.time.Duration.standardSeconds(1L);
        org.joda.time.ReadableInstant readableInstant19 = null;
        org.joda.time.Duration duration21 = org.joda.time.Duration.standardMinutes((-1L));
        long long22 = duration21.getStandardMinutes();
        org.joda.time.Duration duration24 = org.joda.time.Duration.standardMinutes((-1L));
        long long25 = duration24.getStandardMinutes();
        boolean boolean26 = duration21.isLongerThan((org.joda.time.ReadableDuration) duration24);
        org.joda.time.Period period27 = duration24.toPeriod();
        org.joda.time.Minutes minutes28 = duration24.toStandardMinutes();
        org.joda.time.Duration duration30 = org.joda.time.Duration.standardMinutes((-1L));
        long long31 = duration30.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant32 = null;
        org.joda.time.Period period33 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration30, readableInstant32);
        org.joda.time.PeriodType periodType34 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology35 = null;
        org.joda.time.Period period36 = duration30.toPeriod(periodType34, chronology35);
        org.joda.time.Duration duration39 = duration30.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration40 = duration24.plus((org.joda.time.ReadableDuration) duration39);
        org.joda.time.Period period42 = org.joda.time.Period.seconds((int) '#');
        org.joda.time.Period period44 = period42.plusMinutes(10);
        org.joda.time.PeriodType periodType45 = period44.getPeriodType();
        org.joda.time.Period period46 = new org.joda.time.Period(readableInstant19, (org.joda.time.ReadableDuration) duration39, periodType45);
        org.joda.time.Duration duration48 = org.joda.time.Duration.standardMinutes((-1L));
        long long49 = duration48.getStandardMinutes();
        org.joda.time.Duration duration51 = org.joda.time.Duration.standardMinutes((-1L));
        long long52 = duration51.getStandardMinutes();
        boolean boolean53 = duration48.isLongerThan((org.joda.time.ReadableDuration) duration51);
        org.joda.time.Duration duration55 = duration51.withMillis(1L);
        boolean boolean56 = duration39.isShorterThan((org.joda.time.ReadableDuration) duration51);
        boolean boolean57 = duration18.isShorterThan((org.joda.time.ReadableDuration) duration51);
        org.joda.time.ReadableInstant readableInstant58 = null;
        org.joda.time.PeriodType periodType60 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period61 = new org.joda.time.Period(10L, periodType60);
        org.joda.time.PeriodType periodType62 = periodType60.withHoursRemoved();
        org.joda.time.PeriodType periodType63 = periodType60.withSecondsRemoved();
        org.joda.time.Period period64 = duration51.toPeriodFrom(readableInstant58, periodType60);
        org.joda.time.PeriodType periodType65 = periodType60.withSecondsRemoved();
        org.joda.time.Chronology chronology67 = null;
        org.joda.time.MutablePeriod mutablePeriod68 = new org.joda.time.MutablePeriod(1L, chronology67);
        org.joda.time.Period period70 = org.joda.time.Period.seconds((int) '#');
        mutablePeriod68.setPeriod((org.joda.time.ReadablePeriod) period70);
        mutablePeriod68.setPeriod((long) '#');
        int int74 = mutablePeriod68.getMinutes();
        org.joda.time.DurationFieldType durationFieldType75 = org.joda.time.DurationFieldType.weeks();
        int int76 = mutablePeriod68.indexOf(durationFieldType75);
        boolean boolean77 = periodType60.isSupported(durationFieldType75);
        org.joda.time.Period period78 = duration16.toPeriod(periodType60);
        int int79 = duration14.compareTo((org.joda.time.ReadableDuration) duration16);
        long long80 = duration16.getMillis();
        org.junit.Assert.assertNotNull(periodType5);
        org.junit.Assert.assertNotNull(periodType10);
        org.junit.Assert.assertNotNull(periodType11);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertNotNull(duration16);
        org.junit.Assert.assertNotNull(duration18);
        org.junit.Assert.assertNotNull(duration21);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + (-1L) + "'", long22 == (-1L));
        org.junit.Assert.assertNotNull(duration24);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + (-1L) + "'", long25 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(period27);
        org.junit.Assert.assertNotNull(minutes28);
        org.junit.Assert.assertNotNull(duration30);
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + (-1L) + "'", long31 == (-1L));
        org.junit.Assert.assertNotNull(periodType34);
        org.junit.Assert.assertNotNull(period36);
        org.junit.Assert.assertNotNull(duration39);
        org.junit.Assert.assertNotNull(duration40);
        org.junit.Assert.assertNotNull(period42);
        org.junit.Assert.assertNotNull(period44);
        org.junit.Assert.assertNotNull(periodType45);
        org.junit.Assert.assertNotNull(duration48);
        org.junit.Assert.assertTrue("'" + long49 + "' != '" + (-1L) + "'", long49 == (-1L));
        org.junit.Assert.assertNotNull(duration51);
        org.junit.Assert.assertTrue("'" + long52 + "' != '" + (-1L) + "'", long52 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(duration55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(periodType60);
        org.junit.Assert.assertNotNull(periodType62);
        org.junit.Assert.assertNotNull(periodType63);
        org.junit.Assert.assertNotNull(period64);
        org.junit.Assert.assertNotNull(periodType65);
        org.junit.Assert.assertNotNull(period70);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 0 + "'", int74 == 0);
        org.junit.Assert.assertNotNull(durationFieldType75);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 2 + "'", int76 == 2);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(period78);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + (-1) + "'", int79 == (-1));
        org.junit.Assert.assertTrue("'" + long80 + "' != '" + 864000000L + "'", long80 == 864000000L);
    }

    @Test
    public void test17805() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17805");
        org.joda.time.Chronology chronology1 = null;
        org.joda.time.Period period2 = new org.joda.time.Period((long) (byte) -1, chronology1);
        org.joda.time.Period period4 = period2.plusYears(135);
        org.junit.Assert.assertNotNull(period4);
    }

    @Test
    public void test17806() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17806");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.Duration duration2 = org.joda.time.Duration.standardMinutes((-1L));
        long long3 = duration2.getStandardMinutes();
        org.joda.time.Duration duration5 = org.joda.time.Duration.standardMinutes((-1L));
        long long6 = duration5.getStandardMinutes();
        boolean boolean7 = duration2.isLongerThan((org.joda.time.ReadableDuration) duration5);
        org.joda.time.Period period8 = duration5.toPeriod();
        org.joda.time.Minutes minutes9 = duration5.toStandardMinutes();
        org.joda.time.Duration duration11 = org.joda.time.Duration.standardMinutes((-1L));
        long long12 = duration11.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant13 = null;
        org.joda.time.Period period14 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration11, readableInstant13);
        org.joda.time.PeriodType periodType15 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology16 = null;
        org.joda.time.Period period17 = duration11.toPeriod(periodType15, chronology16);
        org.joda.time.Duration duration20 = duration11.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration21 = duration5.plus((org.joda.time.ReadableDuration) duration20);
        long long22 = duration20.getStandardDays();
        long long23 = duration20.getMillis();
        org.joda.time.Period period24 = new org.joda.time.Period(readableInstant0, (org.joda.time.ReadableDuration) duration20);
        org.joda.time.Duration duration25 = duration20.toDuration();
        org.joda.time.Duration duration27 = duration20.plus(100L);
        org.joda.time.Duration duration30 = duration20.withDurationAdded((long) 'a', 357);
        org.joda.time.Duration duration32 = org.joda.time.Duration.standardMinutes((-1L));
        long long33 = duration32.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant34 = null;
        org.joda.time.Period period35 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration32, readableInstant34);
        org.joda.time.PeriodType periodType36 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology37 = null;
        org.joda.time.Period period38 = duration32.toPeriod(periodType36, chronology37);
        org.joda.time.Duration duration41 = duration32.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration43 = org.joda.time.Duration.standardDays((long) (short) 0);
        long long44 = duration43.getMillis();
        boolean boolean45 = duration41.isEqual((org.joda.time.ReadableDuration) duration43);
        org.joda.time.Duration duration46 = duration30.minus((org.joda.time.ReadableDuration) duration41);
        org.joda.time.Duration duration48 = duration41.withMillis((long) (-90));
        org.joda.time.ReadableInstant readableInstant49 = null;
        org.joda.time.ReadableInstant readableInstant50 = null;
        org.joda.time.ReadableInstant readableInstant51 = null;
        org.joda.time.ReadableInstant readableInstant52 = null;
        org.joda.time.ReadableInstant readableInstant53 = null;
        org.joda.time.Period period54 = org.joda.time.Period.ZERO;
        org.joda.time.Period period55 = period54.negated();
        org.joda.time.Period period57 = period54.withWeeks(10);
        org.joda.time.PeriodType periodType62 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period63 = new org.joda.time.Period(10L, periodType62);
        org.joda.time.Chronology chronology64 = null;
        org.joda.time.Period period65 = new org.joda.time.Period((long) 'a', periodType62, chronology64);
        org.joda.time.Chronology chronology66 = null;
        org.joda.time.Period period67 = new org.joda.time.Period(100L, (long) (-60), periodType62, chronology66);
        org.joda.time.Period period68 = period57.normalizedStandard(periodType62);
        org.joda.time.Period period69 = new org.joda.time.Period(readableInstant52, readableInstant53, periodType62);
        org.joda.time.MutablePeriod mutablePeriod70 = new org.joda.time.MutablePeriod(readableInstant50, readableInstant51, periodType62);
        org.joda.time.Period period71 = duration41.toPeriodTo(readableInstant49, periodType62);
        org.junit.Assert.assertNotNull(duration2);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + (-1L) + "'", long3 == (-1L));
        org.junit.Assert.assertNotNull(duration5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + (-1L) + "'", long12 == (-1L));
        org.junit.Assert.assertNotNull(periodType15);
        org.junit.Assert.assertNotNull(period17);
        org.junit.Assert.assertNotNull(duration20);
        org.junit.Assert.assertNotNull(duration21);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + 0L + "'", long22 == 0L);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + (-60000L) + "'", long23 == (-60000L));
        org.junit.Assert.assertNotNull(duration25);
        org.junit.Assert.assertNotNull(duration27);
        org.junit.Assert.assertNotNull(duration30);
        org.junit.Assert.assertNotNull(duration32);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + (-1L) + "'", long33 == (-1L));
        org.junit.Assert.assertNotNull(periodType36);
        org.junit.Assert.assertNotNull(period38);
        org.junit.Assert.assertNotNull(duration41);
        org.junit.Assert.assertNotNull(duration43);
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + 0L + "'", long44 == 0L);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(duration46);
        org.junit.Assert.assertNotNull(duration48);
        org.junit.Assert.assertNotNull(period54);
        org.junit.Assert.assertNotNull(period55);
        org.junit.Assert.assertNotNull(period57);
        org.junit.Assert.assertNotNull(periodType62);
        org.junit.Assert.assertNotNull(period68);
        org.junit.Assert.assertNotNull(period71);
    }

    @Test
    public void test17807() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17807");
        org.joda.time.Period period2 = new org.joda.time.Period(0L, (long) (byte) -1);
        org.joda.time.Period period4 = period2.withMinutes((int) (byte) 0);
        int int5 = period4.getDays();
        org.joda.time.PeriodType periodType6 = period4.getPeriodType();
        org.joda.time.MutablePeriod mutablePeriod9 = new org.joda.time.MutablePeriod((long) (byte) 1, 31409400000L);
        mutablePeriod9.setYears(6);
        int int12 = mutablePeriod9.getDays();
        org.joda.time.Chronology chronology14 = null;
        org.joda.time.MutablePeriod mutablePeriod15 = new org.joda.time.MutablePeriod(1L, chronology14);
        org.joda.time.Chronology chronology17 = null;
        org.joda.time.MutablePeriod mutablePeriod18 = new org.joda.time.MutablePeriod(1L, chronology17);
        mutablePeriod15.add((org.joda.time.ReadablePeriod) mutablePeriod18);
        org.joda.time.Duration duration21 = org.joda.time.Duration.standardMinutes((-1L));
        long long22 = duration21.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant23 = null;
        org.joda.time.Period period24 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration21, readableInstant23);
        mutablePeriod18.setPeriod((org.joda.time.ReadablePeriod) period24);
        org.joda.time.PeriodType periodType26 = mutablePeriod18.getPeriodType();
        org.joda.time.Chronology chronology28 = null;
        org.joda.time.Period period29 = new org.joda.time.Period((long) (short) -1, chronology28);
        org.joda.time.Period period31 = period29.plusMonths((-90));
        org.joda.time.Period period33 = period29.withDays((int) (short) 0);
        org.joda.time.Period period35 = period33.plusSeconds((-1));
        org.joda.time.Period period37 = period35.plusHours((int) 'a');
        org.joda.time.Period period39 = period35.plusWeeks(34);
        org.joda.time.Period period40 = period35.toPeriod();
        boolean boolean41 = mutablePeriod18.equals((java.lang.Object) period40);
        mutablePeriod18.setPeriod(8, 0, (int) (short) 1, 0, (int) (byte) 100, 101, 9, (int) (short) 100);
        org.joda.time.Period period52 = org.joda.time.Period.seconds((int) '#');
        int int53 = period52.getMillis();
        org.joda.time.Period period55 = period52.withMillis((int) '#');
        int int56 = period52.size();
        org.joda.time.Period period58 = period52.withMinutes(0);
        org.joda.time.Hours hours59 = period52.toStandardHours();
        org.joda.time.Period period61 = period52.minusSeconds((int) (short) 0);
        org.joda.time.Period period63 = period52.minusMinutes((-1));
        org.joda.time.Period period65 = period63.minusMonths(100);
        org.joda.time.Period period67 = period63.plusMinutes((int) (byte) 0);
        org.joda.time.Period period69 = period63.minusWeeks((int) (byte) -1);
        org.joda.time.Chronology chronology71 = null;
        org.joda.time.MutablePeriod mutablePeriod72 = new org.joda.time.MutablePeriod(1L, chronology71);
        org.joda.time.Chronology chronology74 = null;
        org.joda.time.MutablePeriod mutablePeriod75 = new org.joda.time.MutablePeriod(1L, chronology74);
        mutablePeriod72.add((org.joda.time.ReadablePeriod) mutablePeriod75);
        org.joda.time.Duration duration78 = org.joda.time.Duration.standardMinutes((-1L));
        long long79 = duration78.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant80 = null;
        org.joda.time.Period period81 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration78, readableInstant80);
        mutablePeriod75.setPeriod((org.joda.time.ReadablePeriod) period81);
        mutablePeriod75.setMinutes((int) (short) 0);
        org.joda.time.DurationFieldType durationFieldType85 = org.joda.time.DurationFieldType.weeks();
        mutablePeriod75.add(durationFieldType85, 0);
        org.joda.time.Period period89 = period63.withFieldAdded(durationFieldType85, (int) '#');
        int int90 = mutablePeriod18.indexOf(durationFieldType85);
        mutablePeriod9.set(durationFieldType85, (int) (byte) 100);
        org.joda.time.Period period94 = period4.withFieldAdded(durationFieldType85, (int) (byte) 1);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(periodType6);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertNotNull(duration21);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + (-1L) + "'", long22 == (-1L));
        org.junit.Assert.assertNotNull(periodType26);
        org.junit.Assert.assertNotNull(period31);
        org.junit.Assert.assertNotNull(period33);
        org.junit.Assert.assertNotNull(period35);
        org.junit.Assert.assertNotNull(period37);
        org.junit.Assert.assertNotNull(period39);
        org.junit.Assert.assertNotNull(period40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(period52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertNotNull(period55);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 8 + "'", int56 == 8);
        org.junit.Assert.assertNotNull(period58);
        org.junit.Assert.assertNotNull(hours59);
        org.junit.Assert.assertNotNull(period61);
        org.junit.Assert.assertNotNull(period63);
        org.junit.Assert.assertNotNull(period65);
        org.junit.Assert.assertNotNull(period67);
        org.junit.Assert.assertNotNull(period69);
        org.junit.Assert.assertNotNull(duration78);
        org.junit.Assert.assertTrue("'" + long79 + "' != '" + (-1L) + "'", long79 == (-1L));
        org.junit.Assert.assertNotNull(durationFieldType85);
        org.junit.Assert.assertNotNull(period89);
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + 2 + "'", int90 == 2);
        org.junit.Assert.assertNotNull(period94);
    }

    @Test
    public void test17808() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17808");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.Duration duration2 = org.joda.time.Duration.standardHours((long) 10);
        org.joda.time.Period period3 = new org.joda.time.Period(readableInstant0, (org.joda.time.ReadableDuration) duration2);
        org.joda.time.ReadableInstant readableInstant4 = null;
        org.joda.time.Duration duration6 = org.joda.time.Duration.standardMinutes((-1L));
        long long7 = duration6.getStandardMinutes();
        org.joda.time.Duration duration9 = org.joda.time.Duration.standardMinutes((-1L));
        long long10 = duration9.getStandardMinutes();
        boolean boolean11 = duration6.isLongerThan((org.joda.time.ReadableDuration) duration9);
        org.joda.time.Duration duration13 = duration9.withMillis(1L);
        org.joda.time.Period period14 = new org.joda.time.Period(readableInstant4, (org.joda.time.ReadableDuration) duration9);
        org.joda.time.Days days15 = period14.toStandardDays();
        org.joda.time.Period period17 = period14.multipliedBy((int) (short) -1);
        org.joda.time.Period period19 = period14.plusMonths((int) (byte) 0);
        org.joda.time.Chronology chronology21 = null;
        org.joda.time.MutablePeriod mutablePeriod22 = new org.joda.time.MutablePeriod(1L, chronology21);
        org.joda.time.Chronology chronology24 = null;
        org.joda.time.MutablePeriod mutablePeriod25 = new org.joda.time.MutablePeriod(1L, chronology24);
        mutablePeriod22.add((org.joda.time.ReadablePeriod) mutablePeriod25);
        org.joda.time.PeriodType periodType27 = mutablePeriod25.getPeriodType();
        org.joda.time.MutablePeriod mutablePeriod28 = new org.joda.time.MutablePeriod((java.lang.Object) period19, periodType27);
        org.joda.time.PeriodType periodType29 = periodType27.withHoursRemoved();
        org.joda.time.Chronology chronology30 = null;
        org.joda.time.Period period31 = duration2.toPeriod(periodType29, chronology30);
        org.joda.time.Period period32 = duration2.toPeriod();
        org.joda.time.ReadableInstant readableInstant33 = null;
        org.joda.time.ReadableInstant readableInstant34 = null;
        org.joda.time.ReadableInstant readableInstant35 = null;
        org.joda.time.Duration duration37 = org.joda.time.Duration.standardMinutes((-1L));
        long long38 = duration37.getStandardMinutes();
        org.joda.time.Period period39 = duration37.toPeriod();
        org.joda.time.Duration duration41 = org.joda.time.Duration.standardMinutes((-1L));
        long long42 = duration41.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant43 = null;
        org.joda.time.Period period44 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration41, readableInstant43);
        org.joda.time.PeriodType periodType45 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology46 = null;
        org.joda.time.Period period47 = duration41.toPeriod(periodType45, chronology46);
        org.joda.time.Period period48 = duration37.toPeriod(periodType45);
        org.joda.time.MutablePeriod mutablePeriod49 = new org.joda.time.MutablePeriod(readableInstant34, readableInstant35, periodType45);
        org.joda.time.Period period51 = org.joda.time.Period.seconds((int) '#');
        int int52 = period51.getMillis();
        org.joda.time.DurationFieldType durationFieldType53 = org.joda.time.DurationFieldType.years();
        org.joda.time.Period period55 = period51.withField(durationFieldType53, (int) (short) 10);
        int int56 = periodType45.indexOf(durationFieldType53);
        org.joda.time.Period period57 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration2, readableInstant33, periodType45);
        org.joda.time.ReadableDuration readableDuration58 = null;
        org.joda.time.Duration duration59 = duration2.minus(readableDuration58);
        long long60 = duration2.getStandardMinutes();
        java.lang.String str61 = duration2.toString();
        org.joda.time.MutablePeriod mutablePeriod62 = new org.joda.time.MutablePeriod((java.lang.Object) str61);
        org.junit.Assert.assertNotNull(duration2);
        org.junit.Assert.assertNotNull(duration6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + (-1L) + "'", long10 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertNotNull(days15);
        org.junit.Assert.assertNotNull(period17);
        org.junit.Assert.assertNotNull(period19);
        org.junit.Assert.assertNotNull(periodType27);
        org.junit.Assert.assertNotNull(periodType29);
        org.junit.Assert.assertNotNull(period31);
        org.junit.Assert.assertNotNull(period32);
        org.junit.Assert.assertNotNull(duration37);
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + (-1L) + "'", long38 == (-1L));
        org.junit.Assert.assertNotNull(period39);
        org.junit.Assert.assertNotNull(duration41);
        org.junit.Assert.assertTrue("'" + long42 + "' != '" + (-1L) + "'", long42 == (-1L));
        org.junit.Assert.assertNotNull(periodType45);
        org.junit.Assert.assertNotNull(period47);
        org.junit.Assert.assertNotNull(period48);
        org.junit.Assert.assertNotNull(period51);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertNotNull(durationFieldType53);
        org.junit.Assert.assertNotNull(period55);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1));
        org.junit.Assert.assertNotNull(duration59);
        org.junit.Assert.assertTrue("'" + long60 + "' != '" + 600L + "'", long60 == 600L);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "PT36000S" + "'", str61, "PT36000S");
    }

    @Test
    public void test17809() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17809");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.Duration duration2 = org.joda.time.Duration.standardMinutes((-1L));
        long long3 = duration2.getStandardMinutes();
        org.joda.time.Duration duration5 = org.joda.time.Duration.standardMinutes((-1L));
        long long6 = duration5.getStandardMinutes();
        boolean boolean7 = duration2.isLongerThan((org.joda.time.ReadableDuration) duration5);
        org.joda.time.Period period8 = duration5.toPeriod();
        org.joda.time.Minutes minutes9 = duration5.toStandardMinutes();
        org.joda.time.Duration duration11 = org.joda.time.Duration.standardMinutes((-1L));
        long long12 = duration11.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant13 = null;
        org.joda.time.Period period14 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration11, readableInstant13);
        org.joda.time.PeriodType periodType15 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology16 = null;
        org.joda.time.Period period17 = duration11.toPeriod(periodType15, chronology16);
        org.joda.time.Duration duration20 = duration11.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration21 = duration5.plus((org.joda.time.ReadableDuration) duration20);
        org.joda.time.Period period23 = org.joda.time.Period.seconds((int) '#');
        org.joda.time.Period period25 = period23.plusMinutes(10);
        org.joda.time.PeriodType periodType26 = period25.getPeriodType();
        org.joda.time.Period period27 = new org.joda.time.Period(readableInstant0, (org.joda.time.ReadableDuration) duration20, periodType26);
        org.joda.time.PeriodType periodType29 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology30 = null;
        org.joda.time.MutablePeriod mutablePeriod31 = new org.joda.time.MutablePeriod((long) '4', periodType29, chronology30);
        org.joda.time.ReadableDuration readableDuration32 = null;
        org.joda.time.Chronology chronology33 = null;
        mutablePeriod31.setPeriod(readableDuration32, chronology33);
        org.joda.time.ReadableInstant readableInstant35 = null;
        org.joda.time.Duration duration36 = mutablePeriod31.toDurationFrom(readableInstant35);
        boolean boolean37 = duration20.isShorterThan((org.joda.time.ReadableDuration) duration36);
        long long38 = duration20.getStandardDays();
        org.joda.time.Duration duration39 = duration20.toDuration();
        org.junit.Assert.assertNotNull(duration2);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + (-1L) + "'", long3 == (-1L));
        org.junit.Assert.assertNotNull(duration5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + (-1L) + "'", long12 == (-1L));
        org.junit.Assert.assertNotNull(periodType15);
        org.junit.Assert.assertNotNull(period17);
        org.junit.Assert.assertNotNull(duration20);
        org.junit.Assert.assertNotNull(duration21);
        org.junit.Assert.assertNotNull(period23);
        org.junit.Assert.assertNotNull(period25);
        org.junit.Assert.assertNotNull(periodType26);
        org.junit.Assert.assertNotNull(periodType29);
        org.junit.Assert.assertNotNull(duration36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + 0L + "'", long38 == 0L);
        org.junit.Assert.assertNotNull(duration39);
    }

    @Test
    public void test17810() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17810");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.Duration duration2 = org.joda.time.Duration.standardMinutes((-1L));
        long long3 = duration2.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant4 = null;
        org.joda.time.Period period5 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration2, readableInstant4);
        org.joda.time.PeriodType periodType6 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology7 = null;
        org.joda.time.Period period8 = duration2.toPeriod(periodType6, chronology7);
        org.joda.time.Duration duration11 = duration2.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration13 = org.joda.time.Duration.standardMinutes((-1L));
        long long14 = duration13.getStandardMinutes();
        org.joda.time.Duration duration16 = org.joda.time.Duration.standardMinutes((-1L));
        long long17 = duration16.getStandardMinutes();
        boolean boolean18 = duration13.isLongerThan((org.joda.time.ReadableDuration) duration16);
        org.joda.time.Duration duration20 = duration16.withMillis((long) 1);
        boolean boolean21 = duration11.isShorterThan((org.joda.time.ReadableDuration) duration16);
        org.joda.time.ReadableInstant readableInstant22 = null;
        org.joda.time.Period period23 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration11, readableInstant22);
        org.joda.time.Period period24 = new org.joda.time.Period(readableInstant0, (org.joda.time.ReadableDuration) duration11);
        org.joda.time.Period period26 = org.joda.time.Period.seconds((int) '#');
        int int27 = period26.getMillis();
        org.joda.time.Period period29 = period26.withMillis((int) '#');
        int int30 = period26.size();
        org.joda.time.Period period32 = period26.withMinutes(0);
        org.joda.time.Hours hours33 = period26.toStandardHours();
        org.joda.time.Period period35 = period26.minusSeconds((int) (short) 0);
        org.joda.time.MutablePeriod mutablePeriod36 = period35.toMutablePeriod();
        mutablePeriod36.setMinutes((-1));
        int int39 = mutablePeriod36.getHours();
        org.joda.time.Period period41 = org.joda.time.Period.seconds((int) '#');
        int int42 = period41.getMillis();
        org.joda.time.Period period44 = period41.withMillis((int) '#');
        int int45 = period41.size();
        org.joda.time.Period period47 = period41.plusYears((int) 'a');
        org.joda.time.MutablePeriod mutablePeriod48 = period47.toMutablePeriod();
        org.joda.time.Period period50 = period47.minusHours((int) (byte) 100);
        org.joda.time.Period period51 = period47.toPeriod();
        org.joda.time.Chronology chronology53 = null;
        org.joda.time.MutablePeriod mutablePeriod54 = new org.joda.time.MutablePeriod(1L, chronology53);
        int int55 = mutablePeriod54.getMinutes();
        int int56 = mutablePeriod54.getHours();
        org.joda.time.ReadableInstant readableInstant57 = null;
        org.joda.time.ReadableInstant readableInstant58 = null;
        org.joda.time.MutablePeriod mutablePeriod59 = new org.joda.time.MutablePeriod(readableInstant57, readableInstant58);
        org.joda.time.ReadableInstant readableInstant60 = null;
        org.joda.time.ReadableInstant readableInstant61 = null;
        org.joda.time.MutablePeriod mutablePeriod62 = new org.joda.time.MutablePeriod(readableInstant60, readableInstant61);
        mutablePeriod62.setPeriod((long) 10, (long) 10);
        boolean boolean66 = mutablePeriod59.equals((java.lang.Object) mutablePeriod62);
        mutablePeriod54.mergePeriod((org.joda.time.ReadablePeriod) mutablePeriod62);
        org.joda.time.Period period68 = period47.withFields((org.joda.time.ReadablePeriod) mutablePeriod54);
        org.joda.time.Period period70 = period68.minusMonths((-35));
        mutablePeriod36.setPeriod((org.joda.time.ReadablePeriod) period70);
        org.joda.time.Duration duration73 = org.joda.time.Duration.millis((-2L));
        mutablePeriod36.setPeriod((org.joda.time.ReadableDuration) duration73);
        org.joda.time.Duration duration76 = duration11.withDurationAdded((org.joda.time.ReadableDuration) duration73, (int) (byte) -1);
        org.joda.time.Duration duration77 = new org.joda.time.Duration((java.lang.Object) duration76);
        org.junit.Assert.assertNotNull(duration2);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + (-1L) + "'", long3 == (-1L));
        org.junit.Assert.assertNotNull(periodType6);
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + (-1L) + "'", long14 == (-1L));
        org.junit.Assert.assertNotNull(duration16);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + (-1L) + "'", long17 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(duration20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(period26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertNotNull(period29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 8 + "'", int30 == 8);
        org.junit.Assert.assertNotNull(period32);
        org.junit.Assert.assertNotNull(hours33);
        org.junit.Assert.assertNotNull(period35);
        org.junit.Assert.assertNotNull(mutablePeriod36);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNotNull(period41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertNotNull(period44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 8 + "'", int45 == 8);
        org.junit.Assert.assertNotNull(period47);
        org.junit.Assert.assertNotNull(mutablePeriod48);
        org.junit.Assert.assertNotNull(period50);
        org.junit.Assert.assertNotNull(period51);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(period68);
        org.junit.Assert.assertNotNull(period70);
        org.junit.Assert.assertNotNull(duration73);
        org.junit.Assert.assertNotNull(duration76);
    }

    @Test
    public void test17811() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17811");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardHours((long) 10);
        org.joda.time.ReadableDuration readableDuration2 = null;
        org.joda.time.Duration duration3 = duration1.plus(readableDuration2);
        org.joda.time.Duration duration5 = org.joda.time.Duration.standardMinutes((-1L));
        long long6 = duration5.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.Period period8 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration5, readableInstant7);
        org.joda.time.PeriodType periodType9 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology10 = null;
        org.joda.time.Period period11 = duration5.toPeriod(periodType9, chronology10);
        org.joda.time.Duration duration14 = duration5.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.ReadableInstant readableInstant15 = null;
        org.joda.time.ReadableInstant readableInstant16 = null;
        org.joda.time.Duration duration18 = org.joda.time.Duration.standardMinutes((-1L));
        long long19 = duration18.getStandardMinutes();
        org.joda.time.Period period20 = duration18.toPeriod();
        org.joda.time.Duration duration22 = org.joda.time.Duration.standardMinutes((-1L));
        long long23 = duration22.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant24 = null;
        org.joda.time.Period period25 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration22, readableInstant24);
        org.joda.time.PeriodType periodType26 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology27 = null;
        org.joda.time.Period period28 = duration22.toPeriod(periodType26, chronology27);
        org.joda.time.Period period29 = duration18.toPeriod(periodType26);
        org.joda.time.MutablePeriod mutablePeriod30 = new org.joda.time.MutablePeriod(readableInstant15, readableInstant16, periodType26);
        org.joda.time.Chronology chronology31 = null;
        org.joda.time.Period period32 = duration5.toPeriod(periodType26, chronology31);
        org.joda.time.Duration duration34 = duration5.minus((-60L));
        boolean boolean35 = duration1.isLongerThan((org.joda.time.ReadableDuration) duration34);
        org.joda.time.ReadableInstant readableInstant36 = null;
        org.joda.time.PeriodType periodType38 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period39 = new org.joda.time.Period(10L, periodType38);
        org.joda.time.PeriodType periodType40 = periodType38.withHoursRemoved();
        org.joda.time.PeriodType periodType41 = periodType40.withDaysRemoved();
        org.joda.time.PeriodType periodType42 = org.joda.time.PeriodType.standard();
        org.joda.time.PeriodType periodType43 = periodType42.withMinutesRemoved();
        org.joda.time.PeriodType periodType44 = periodType42.withWeeksRemoved();
        org.joda.time.PeriodType periodType46 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period47 = new org.joda.time.Period(10L, periodType46);
        org.joda.time.DurationFieldType durationFieldType48 = org.joda.time.DurationFieldType.weeks();
        boolean boolean49 = periodType46.isSupported(durationFieldType48);
        org.joda.time.DurationFieldType durationFieldType50 = org.joda.time.DurationFieldType.centuries();
        int int51 = periodType46.indexOf(durationFieldType50);
        org.joda.time.Chronology chronology52 = null;
        boolean boolean53 = durationFieldType50.isSupported(chronology52);
        int int54 = periodType44.indexOf(durationFieldType50);
        org.joda.time.Chronology chronology55 = null;
        org.joda.time.DurationField durationField56 = durationFieldType50.getField(chronology55);
        boolean boolean57 = periodType40.isSupported(durationFieldType50);
        org.joda.time.Period period58 = duration34.toPeriodFrom(readableInstant36, periodType40);
        int int59 = period58.size();
        int int60 = period58.getHours();
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertNotNull(duration5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
        org.junit.Assert.assertNotNull(periodType9);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertNotNull(duration18);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + (-1L) + "'", long19 == (-1L));
        org.junit.Assert.assertNotNull(period20);
        org.junit.Assert.assertNotNull(duration22);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + (-1L) + "'", long23 == (-1L));
        org.junit.Assert.assertNotNull(periodType26);
        org.junit.Assert.assertNotNull(period28);
        org.junit.Assert.assertNotNull(period29);
        org.junit.Assert.assertNotNull(period32);
        org.junit.Assert.assertNotNull(duration34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(periodType38);
        org.junit.Assert.assertNotNull(periodType40);
        org.junit.Assert.assertNotNull(periodType41);
        org.junit.Assert.assertNotNull(periodType42);
        org.junit.Assert.assertNotNull(periodType43);
        org.junit.Assert.assertNotNull(periodType44);
        org.junit.Assert.assertNotNull(periodType46);
        org.junit.Assert.assertNotNull(durationFieldType48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(durationFieldType50);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1));
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
        org.junit.Assert.assertNotNull(durationField56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(period58);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 1 + "'", int59 == 1);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 0 + "'", int60 == 0);
    }

    @Test
    public void test17812() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17812");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.MutablePeriod mutablePeriod3 = new org.joda.time.MutablePeriod((-3600000L), 1L, chronology2);
        org.joda.time.Duration duration5 = org.joda.time.Duration.standardMinutes((-1L));
        long long6 = duration5.getStandardMinutes();
        org.joda.time.Duration duration8 = org.joda.time.Duration.standardMinutes((-1L));
        long long9 = duration8.getStandardMinutes();
        boolean boolean10 = duration5.isLongerThan((org.joda.time.ReadableDuration) duration8);
        org.joda.time.Duration duration12 = duration8.withMillis((long) 1);
        org.joda.time.Chronology chronology14 = null;
        org.joda.time.MutablePeriod mutablePeriod15 = new org.joda.time.MutablePeriod(1L, chronology14);
        org.joda.time.Chronology chronology17 = null;
        org.joda.time.MutablePeriod mutablePeriod18 = new org.joda.time.MutablePeriod(1L, chronology17);
        mutablePeriod15.add((org.joda.time.ReadablePeriod) mutablePeriod18);
        boolean boolean20 = duration12.equals((java.lang.Object) mutablePeriod18);
        org.joda.time.Period period21 = duration12.toPeriod();
        org.joda.time.Period period22 = duration12.toPeriod();
        org.joda.time.ReadableInstant readableInstant23 = null;
        org.joda.time.Interval interval24 = duration12.toIntervalTo(readableInstant23);
        mutablePeriod3.setPeriod((org.joda.time.ReadableInterval) interval24);
        org.junit.Assert.assertNotNull(duration5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
        org.junit.Assert.assertNotNull(duration8);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + (-1L) + "'", long9 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertNotNull(period22);
        org.junit.Assert.assertNotNull(interval24);
    }

    @Test
    public void test17813() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17813");
        org.joda.time.format.PeriodPrinter periodPrinter0 = null;
        org.joda.time.format.PeriodParser periodParser1 = null;
        org.joda.time.format.PeriodFormatter periodFormatter2 = new org.joda.time.format.PeriodFormatter(periodPrinter0, periodParser1);
        org.joda.time.format.PeriodPrinter periodPrinter3 = periodFormatter2.getPrinter();
        boolean boolean4 = periodFormatter2.isParser();
        org.joda.time.format.PeriodParser periodParser5 = periodFormatter2.getParser();
        boolean boolean6 = periodFormatter2.isParser();
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.Duration duration9 = org.joda.time.Duration.standardMinutes((-1L));
        long long10 = duration9.getStandardMinutes();
        org.joda.time.Duration duration12 = org.joda.time.Duration.standardMinutes((-1L));
        long long13 = duration12.getStandardMinutes();
        boolean boolean14 = duration9.isLongerThan((org.joda.time.ReadableDuration) duration12);
        org.joda.time.Period period15 = duration12.toPeriod();
        org.joda.time.Minutes minutes16 = duration12.toStandardMinutes();
        org.joda.time.Duration duration18 = org.joda.time.Duration.standardMinutes((-1L));
        long long19 = duration18.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant20 = null;
        org.joda.time.Period period21 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration18, readableInstant20);
        org.joda.time.PeriodType periodType22 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology23 = null;
        org.joda.time.Period period24 = duration18.toPeriod(periodType22, chronology23);
        org.joda.time.Duration duration27 = duration18.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration28 = duration12.plus((org.joda.time.ReadableDuration) duration27);
        org.joda.time.PeriodType periodType30 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period31 = new org.joda.time.Period(10L, periodType30);
        org.joda.time.PeriodType periodType32 = periodType30.withWeeksRemoved();
        org.joda.time.MutablePeriod mutablePeriod33 = new org.joda.time.MutablePeriod(readableInstant7, (org.joda.time.ReadableDuration) duration27, periodType32);
        int int34 = periodType32.size();
        org.joda.time.format.PeriodFormatter periodFormatter35 = periodFormatter2.withParseType(periodType32);
        java.util.Locale locale36 = null;
        org.joda.time.format.PeriodFormatter periodFormatter37 = periodFormatter35.withLocale(locale36);
        org.joda.time.format.PeriodPrinter periodPrinter38 = periodFormatter35.getPrinter();
        org.joda.time.Duration duration40 = org.joda.time.Duration.standardMinutes((-1L));
        long long41 = duration40.getStandardMinutes();
        org.joda.time.Period period42 = duration40.toPeriod();
        org.joda.time.Period period44 = period42.withMonths(0);
        int int45 = period42.size();
        org.joda.time.MutablePeriod mutablePeriod46 = period42.toMutablePeriod();
        org.joda.time.Chronology chronology48 = null;
        org.joda.time.MutablePeriod mutablePeriod49 = new org.joda.time.MutablePeriod(1L, chronology48);
        org.joda.time.Period period51 = org.joda.time.Period.seconds((int) '#');
        mutablePeriod49.setPeriod((org.joda.time.ReadablePeriod) period51);
        org.joda.time.DurationFieldType durationFieldType53 = org.joda.time.DurationFieldType.years();
        java.lang.String str54 = durationFieldType53.getName();
        boolean boolean55 = mutablePeriod49.isSupported(durationFieldType53);
        int int56 = mutablePeriod46.get(durationFieldType53);
        org.joda.time.PeriodType periodType57 = mutablePeriod46.getPeriodType();
        org.joda.time.format.PeriodFormatter periodFormatter58 = periodFormatter35.withParseType(periodType57);
        boolean boolean59 = periodFormatter58.isParser();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Period period61 = periodFormatter58.parsePeriod("centuries");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Parsing not supported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(periodPrinter3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(periodParser5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + (-1L) + "'", long10 == (-1L));
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + (-1L) + "'", long13 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(period15);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertNotNull(duration18);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + (-1L) + "'", long19 == (-1L));
        org.junit.Assert.assertNotNull(periodType22);
        org.junit.Assert.assertNotNull(period24);
        org.junit.Assert.assertNotNull(duration27);
        org.junit.Assert.assertNotNull(duration28);
        org.junit.Assert.assertNotNull(periodType30);
        org.junit.Assert.assertNotNull(periodType32);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 1 + "'", int34 == 1);
        org.junit.Assert.assertNotNull(periodFormatter35);
        org.junit.Assert.assertNotNull(periodFormatter37);
        org.junit.Assert.assertNull(periodPrinter38);
        org.junit.Assert.assertNotNull(duration40);
        org.junit.Assert.assertTrue("'" + long41 + "' != '" + (-1L) + "'", long41 == (-1L));
        org.junit.Assert.assertNotNull(period42);
        org.junit.Assert.assertNotNull(period44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 8 + "'", int45 == 8);
        org.junit.Assert.assertNotNull(mutablePeriod46);
        org.junit.Assert.assertNotNull(period51);
        org.junit.Assert.assertNotNull(durationFieldType53);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "years" + "'", str54, "years");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertNotNull(periodType57);
        org.junit.Assert.assertNotNull(periodFormatter58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
    }

    @Test
    public void test17814() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17814");
        org.joda.time.Chronology chronology1 = null;
        org.joda.time.MutablePeriod mutablePeriod2 = new org.joda.time.MutablePeriod(1L, chronology1);
        int int3 = mutablePeriod2.getMinutes();
        int int4 = mutablePeriod2.getHours();
        org.joda.time.ReadableInstant readableInstant5 = null;
        org.joda.time.ReadableInstant readableInstant6 = null;
        org.joda.time.MutablePeriod mutablePeriod7 = new org.joda.time.MutablePeriod(readableInstant5, readableInstant6);
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.ReadableInstant readableInstant9 = null;
        org.joda.time.MutablePeriod mutablePeriod10 = new org.joda.time.MutablePeriod(readableInstant8, readableInstant9);
        mutablePeriod10.setPeriod((long) 10, (long) 10);
        boolean boolean14 = mutablePeriod7.equals((java.lang.Object) mutablePeriod10);
        mutablePeriod2.mergePeriod((org.joda.time.ReadablePeriod) mutablePeriod10);
        java.lang.Object obj16 = mutablePeriod2.clone();
        org.joda.time.ReadableInstant readableInstant17 = null;
        org.joda.time.Duration duration19 = org.joda.time.Duration.standardHours((long) 10);
        org.joda.time.Duration duration21 = org.joda.time.Duration.standardMinutes((-1L));
        long long22 = duration21.getStandardMinutes();
        org.joda.time.Duration duration24 = org.joda.time.Duration.standardMinutes((-1L));
        long long25 = duration24.getStandardMinutes();
        boolean boolean26 = duration21.isLongerThan((org.joda.time.ReadableDuration) duration24);
        org.joda.time.Period period27 = duration24.toPeriod();
        org.joda.time.Minutes minutes28 = duration24.toStandardMinutes();
        boolean boolean29 = duration19.isEqual((org.joda.time.ReadableDuration) duration24);
        org.joda.time.Duration duration31 = org.joda.time.Duration.standardMinutes((-1L));
        long long32 = duration31.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant33 = null;
        org.joda.time.Period period34 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration31, readableInstant33);
        org.joda.time.PeriodType periodType35 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology36 = null;
        org.joda.time.Period period37 = duration31.toPeriod(periodType35, chronology36);
        org.joda.time.Duration duration40 = duration31.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration42 = org.joda.time.Duration.standardMinutes((-1L));
        long long43 = duration42.getStandardMinutes();
        org.joda.time.Duration duration45 = org.joda.time.Duration.standardMinutes((-1L));
        long long46 = duration45.getStandardMinutes();
        boolean boolean47 = duration42.isLongerThan((org.joda.time.ReadableDuration) duration45);
        org.joda.time.Duration duration49 = duration45.withMillis((long) 1);
        boolean boolean50 = duration40.isShorterThan((org.joda.time.ReadableDuration) duration45);
        boolean boolean51 = duration24.isEqual((org.joda.time.ReadableDuration) duration45);
        org.joda.time.ReadableInstant readableInstant52 = null;
        org.joda.time.MutablePeriod mutablePeriod53 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration24, readableInstant52);
        int int54 = mutablePeriod53.size();
        org.joda.time.ReadableInterval readableInterval55 = null;
        mutablePeriod53.add(readableInterval55);
        org.joda.time.ReadableInstant readableInstant57 = null;
        org.joda.time.Duration duration58 = mutablePeriod53.toDurationFrom(readableInstant57);
        org.joda.time.Duration duration60 = duration58.plus((long) '#');
        org.joda.time.MutablePeriod mutablePeriod61 = new org.joda.time.MutablePeriod(readableInstant17, (org.joda.time.ReadableDuration) duration58);
        org.joda.time.ReadableInstant readableInstant62 = null;
        org.joda.time.ReadableInstant readableInstant63 = null;
        org.joda.time.ReadableInstant readableInstant64 = null;
        org.joda.time.Duration duration68 = org.joda.time.Duration.standardMinutes((-1L));
        long long69 = duration68.getStandardMinutes();
        org.joda.time.Period period70 = duration68.toPeriod();
        org.joda.time.Duration duration72 = org.joda.time.Duration.standardMinutes((-1L));
        long long73 = duration72.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant74 = null;
        org.joda.time.Period period75 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration72, readableInstant74);
        org.joda.time.PeriodType periodType76 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology77 = null;
        org.joda.time.Period period78 = duration72.toPeriod(periodType76, chronology77);
        org.joda.time.Period period79 = duration68.toPeriod(periodType76);
        org.joda.time.Chronology chronology80 = null;
        org.joda.time.MutablePeriod mutablePeriod81 = new org.joda.time.MutablePeriod(1L, (long) (byte) 100, periodType76, chronology80);
        org.joda.time.PeriodType periodType82 = periodType76.withYearsRemoved();
        org.joda.time.MutablePeriod mutablePeriod83 = new org.joda.time.MutablePeriod(readableInstant63, readableInstant64, periodType82);
        org.joda.time.PeriodType periodType84 = periodType82.withMonthsRemoved();
        org.joda.time.MutablePeriod mutablePeriod85 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration58, readableInstant62, periodType82);
        org.joda.time.ReadableInstant readableInstant86 = null;
        org.joda.time.Duration duration87 = mutablePeriod85.toDurationTo(readableInstant86);
        mutablePeriod2.add((org.joda.time.ReadablePeriod) mutablePeriod85);
        // The following exception was thrown during execution in test generation
        try {
            mutablePeriod85.addMillis(9);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Period does not support field 'millis'");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertEquals(obj16.toString(), "PT0S");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj16), "PT0S");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj16), "PT0S");
        org.junit.Assert.assertNotNull(duration19);
        org.junit.Assert.assertNotNull(duration21);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + (-1L) + "'", long22 == (-1L));
        org.junit.Assert.assertNotNull(duration24);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + (-1L) + "'", long25 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(period27);
        org.junit.Assert.assertNotNull(minutes28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(duration31);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + (-1L) + "'", long32 == (-1L));
        org.junit.Assert.assertNotNull(periodType35);
        org.junit.Assert.assertNotNull(period37);
        org.junit.Assert.assertNotNull(duration40);
        org.junit.Assert.assertNotNull(duration42);
        org.junit.Assert.assertTrue("'" + long43 + "' != '" + (-1L) + "'", long43 == (-1L));
        org.junit.Assert.assertNotNull(duration45);
        org.junit.Assert.assertTrue("'" + long46 + "' != '" + (-1L) + "'", long46 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(duration49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 8 + "'", int54 == 8);
        org.junit.Assert.assertNotNull(duration58);
        org.junit.Assert.assertNotNull(duration60);
        org.junit.Assert.assertNotNull(duration68);
        org.junit.Assert.assertTrue("'" + long69 + "' != '" + (-1L) + "'", long69 == (-1L));
        org.junit.Assert.assertNotNull(period70);
        org.junit.Assert.assertNotNull(duration72);
        org.junit.Assert.assertTrue("'" + long73 + "' != '" + (-1L) + "'", long73 == (-1L));
        org.junit.Assert.assertNotNull(periodType76);
        org.junit.Assert.assertNotNull(period78);
        org.junit.Assert.assertNotNull(period79);
        org.junit.Assert.assertNotNull(periodType82);
        org.junit.Assert.assertNotNull(periodType84);
        org.junit.Assert.assertNotNull(duration87);
    }

    @Test
    public void test17815() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17815");
        org.joda.time.ReadableInstant readableInstant2 = null;
        org.joda.time.Duration duration4 = org.joda.time.Duration.standardMinutes((-1L));
        long long5 = duration4.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant6 = null;
        org.joda.time.Period period7 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration4, readableInstant6);
        org.joda.time.PeriodType periodType8 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology9 = null;
        org.joda.time.Period period10 = duration4.toPeriod(periodType8, chronology9);
        org.joda.time.Duration duration13 = duration4.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration15 = org.joda.time.Duration.standardHours((long) 10);
        org.joda.time.Duration duration17 = org.joda.time.Duration.standardMinutes((-1L));
        long long18 = duration17.getStandardMinutes();
        org.joda.time.Duration duration20 = org.joda.time.Duration.standardMinutes((-1L));
        long long21 = duration20.getStandardMinutes();
        boolean boolean22 = duration17.isLongerThan((org.joda.time.ReadableDuration) duration20);
        org.joda.time.Period period23 = duration20.toPeriod();
        org.joda.time.Minutes minutes24 = duration20.toStandardMinutes();
        boolean boolean25 = duration15.isEqual((org.joda.time.ReadableDuration) duration20);
        boolean boolean26 = duration4.isShorterThan((org.joda.time.ReadableDuration) duration15);
        org.joda.time.Duration duration28 = org.joda.time.Duration.standardMinutes((-1L));
        long long29 = duration28.getStandardMinutes();
        org.joda.time.Period period30 = duration28.toPeriod();
        org.joda.time.Duration duration32 = org.joda.time.Duration.standardMinutes((-1L));
        long long33 = duration32.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant34 = null;
        org.joda.time.Period period35 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration32, readableInstant34);
        org.joda.time.PeriodType periodType36 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology37 = null;
        org.joda.time.Period period38 = duration32.toPeriod(periodType36, chronology37);
        org.joda.time.Period period39 = duration28.toPeriod(periodType36);
        org.joda.time.Duration duration41 = org.joda.time.Duration.standardMinutes((-1L));
        long long42 = duration41.getStandardMinutes();
        boolean boolean43 = duration28.isLongerThan((org.joda.time.ReadableDuration) duration41);
        org.joda.time.Duration duration45 = org.joda.time.Duration.standardMinutes((-1L));
        long long46 = duration45.getStandardMinutes();
        org.joda.time.Duration duration48 = org.joda.time.Duration.standardMinutes((-1L));
        long long49 = duration48.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant50 = null;
        org.joda.time.Period period51 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration48, readableInstant50);
        org.joda.time.PeriodType periodType52 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology53 = null;
        org.joda.time.Period period54 = duration48.toPeriod(periodType52, chronology53);
        org.joda.time.Duration duration55 = duration48.toDuration();
        org.joda.time.Duration duration57 = duration45.withDurationAdded((org.joda.time.ReadableDuration) duration55, 100);
        int int58 = duration41.compareTo((org.joda.time.ReadableDuration) duration57);
        org.joda.time.Duration duration59 = duration41.toDuration();
        java.lang.String str60 = duration59.toString();
        boolean boolean61 = duration15.equals((java.lang.Object) str60);
        long long62 = duration15.getStandardHours();
        org.joda.time.ReadableInstant readableInstant63 = null;
        org.joda.time.Period period64 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration15, readableInstant63);
        org.joda.time.Chronology chronology66 = null;
        org.joda.time.MutablePeriod mutablePeriod67 = new org.joda.time.MutablePeriod(1L, chronology66);
        org.joda.time.Chronology chronology69 = null;
        org.joda.time.MutablePeriod mutablePeriod70 = new org.joda.time.MutablePeriod(1L, chronology69);
        mutablePeriod67.add((org.joda.time.ReadablePeriod) mutablePeriod70);
        org.joda.time.Duration duration73 = org.joda.time.Duration.standardMinutes((-1L));
        long long74 = duration73.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant75 = null;
        org.joda.time.Period period76 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration73, readableInstant75);
        mutablePeriod70.setPeriod((org.joda.time.ReadablePeriod) period76);
        org.joda.time.PeriodType periodType78 = mutablePeriod70.getPeriodType();
        org.joda.time.MutablePeriod mutablePeriod79 = new org.joda.time.MutablePeriod(readableInstant2, (org.joda.time.ReadableDuration) duration15, periodType78);
        org.joda.time.MutablePeriod mutablePeriod80 = new org.joda.time.MutablePeriod((-2L), (long) 35, periodType78);
        org.joda.time.Chronology chronology82 = null;
        mutablePeriod80.setPeriod((-60000L), chronology82);
        org.joda.time.Chronology chronology86 = null;
        mutablePeriod80.setPeriod((long) '#', (long) 12, chronology86);
        int int88 = mutablePeriod80.getMillis();
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + (-1L) + "'", long5 == (-1L));
        org.junit.Assert.assertNotNull(periodType8);
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertNotNull(duration15);
        org.junit.Assert.assertNotNull(duration17);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + (-1L) + "'", long18 == (-1L));
        org.junit.Assert.assertNotNull(duration20);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + (-1L) + "'", long21 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(period23);
        org.junit.Assert.assertNotNull(minutes24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(duration28);
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + (-1L) + "'", long29 == (-1L));
        org.junit.Assert.assertNotNull(period30);
        org.junit.Assert.assertNotNull(duration32);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + (-1L) + "'", long33 == (-1L));
        org.junit.Assert.assertNotNull(periodType36);
        org.junit.Assert.assertNotNull(period38);
        org.junit.Assert.assertNotNull(period39);
        org.junit.Assert.assertNotNull(duration41);
        org.junit.Assert.assertTrue("'" + long42 + "' != '" + (-1L) + "'", long42 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(duration45);
        org.junit.Assert.assertTrue("'" + long46 + "' != '" + (-1L) + "'", long46 == (-1L));
        org.junit.Assert.assertNotNull(duration48);
        org.junit.Assert.assertTrue("'" + long49 + "' != '" + (-1L) + "'", long49 == (-1L));
        org.junit.Assert.assertNotNull(periodType52);
        org.junit.Assert.assertNotNull(period54);
        org.junit.Assert.assertNotNull(duration55);
        org.junit.Assert.assertNotNull(duration57);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 1 + "'", int58 == 1);
        org.junit.Assert.assertNotNull(duration59);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "PT-60S" + "'", str60, "PT-60S");
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + long62 + "' != '" + 10L + "'", long62 == 10L);
        org.junit.Assert.assertNotNull(duration73);
        org.junit.Assert.assertTrue("'" + long74 + "' != '" + (-1L) + "'", long74 == (-1L));
        org.junit.Assert.assertNotNull(periodType78);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + (-23) + "'", int88 == (-23));
    }

    @Test
    public void test17816() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17816");
        org.joda.time.MutablePeriod mutablePeriod1 = new org.joda.time.MutablePeriod((-6059968L));
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.Period period3 = new org.joda.time.Period((java.lang.Object) mutablePeriod1, chronology2);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType5 = mutablePeriod1.getFieldType(49);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 49");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
    }

    @Test
    public void test17817() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17817");
        org.joda.time.Duration duration2 = org.joda.time.Duration.standardMinutes((-1L));
        long long3 = duration2.getStandardMinutes();
        org.joda.time.Period period4 = duration2.toPeriod();
        org.joda.time.Duration duration6 = org.joda.time.Duration.standardMinutes((-1L));
        long long7 = duration6.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.Period period9 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration6, readableInstant8);
        org.joda.time.PeriodType periodType10 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology11 = null;
        org.joda.time.Period period12 = duration6.toPeriod(periodType10, chronology11);
        org.joda.time.Period period13 = duration2.toPeriod(periodType10);
        org.joda.time.Duration duration15 = org.joda.time.Duration.standardMinutes((-1L));
        long long16 = duration15.getStandardMinutes();
        boolean boolean17 = duration2.isLongerThan((org.joda.time.ReadableDuration) duration15);
        org.joda.time.PeriodType periodType19 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology20 = null;
        org.joda.time.MutablePeriod mutablePeriod21 = new org.joda.time.MutablePeriod((long) '4', periodType19, chronology20);
        org.joda.time.Chronology chronology22 = null;
        org.joda.time.Period period23 = duration2.toPeriod(periodType19, chronology22);
        org.joda.time.MutablePeriod mutablePeriod24 = new org.joda.time.MutablePeriod((long) 100, periodType19);
        org.joda.time.ReadableInstant readableInstant25 = null;
        org.joda.time.Duration duration27 = org.joda.time.Duration.standardMinutes((-1L));
        long long28 = duration27.getStandardMinutes();
        org.joda.time.Period period29 = duration27.toPeriod();
        org.joda.time.Duration duration31 = org.joda.time.Duration.standardMinutes((-1L));
        long long32 = duration31.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant33 = null;
        org.joda.time.Period period34 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration31, readableInstant33);
        org.joda.time.PeriodType periodType35 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology36 = null;
        org.joda.time.Period period37 = duration31.toPeriod(periodType35, chronology36);
        org.joda.time.Period period38 = duration27.toPeriod(periodType35);
        org.joda.time.Duration duration40 = org.joda.time.Duration.standardMinutes((-1L));
        long long41 = duration40.getStandardMinutes();
        boolean boolean42 = duration27.isLongerThan((org.joda.time.ReadableDuration) duration40);
        org.joda.time.PeriodType periodType43 = org.joda.time.PeriodType.weeks();
        org.joda.time.Period period44 = new org.joda.time.Period(readableInstant25, (org.joda.time.ReadableDuration) duration40, periodType43);
        org.joda.time.Chronology chronology45 = null;
        org.joda.time.Period period46 = duration40.toPeriod(chronology45);
        org.joda.time.Duration duration48 = org.joda.time.Duration.standardMinutes((-1L));
        long long49 = duration48.getStandardMinutes();
        org.joda.time.Period period50 = duration48.toPeriod();
        org.joda.time.Duration duration52 = org.joda.time.Duration.standardMinutes((-1L));
        long long53 = duration52.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant54 = null;
        org.joda.time.Period period55 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration52, readableInstant54);
        org.joda.time.PeriodType periodType56 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology57 = null;
        org.joda.time.Period period58 = duration52.toPeriod(periodType56, chronology57);
        org.joda.time.Period period59 = duration48.toPeriod(periodType56);
        boolean boolean60 = duration40.isShorterThan((org.joda.time.ReadableDuration) duration48);
        boolean boolean61 = periodType19.equals((java.lang.Object) duration40);
        org.joda.time.Chronology chronology62 = null;
        org.joda.time.Period period63 = duration40.toPeriod(chronology62);
        int int65 = period63.getValue((int) (byte) 1);
        org.joda.time.Period period67 = period63.withMonths(8);
        org.joda.time.Period period69 = period63.plusSeconds((int) (byte) -1);
        org.joda.time.Period period71 = period63.plusMonths(350);
        java.lang.String str72 = period63.toString();
        org.junit.Assert.assertNotNull(duration2);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + (-1L) + "'", long3 == (-1L));
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(duration6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(periodType10);
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertNotNull(period13);
        org.junit.Assert.assertNotNull(duration15);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + (-1L) + "'", long16 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(periodType19);
        org.junit.Assert.assertNotNull(period23);
        org.junit.Assert.assertNotNull(duration27);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + (-1L) + "'", long28 == (-1L));
        org.junit.Assert.assertNotNull(period29);
        org.junit.Assert.assertNotNull(duration31);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + (-1L) + "'", long32 == (-1L));
        org.junit.Assert.assertNotNull(periodType35);
        org.junit.Assert.assertNotNull(period37);
        org.junit.Assert.assertNotNull(period38);
        org.junit.Assert.assertNotNull(duration40);
        org.junit.Assert.assertTrue("'" + long41 + "' != '" + (-1L) + "'", long41 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(periodType43);
        org.junit.Assert.assertNotNull(period46);
        org.junit.Assert.assertNotNull(duration48);
        org.junit.Assert.assertTrue("'" + long49 + "' != '" + (-1L) + "'", long49 == (-1L));
        org.junit.Assert.assertNotNull(period50);
        org.junit.Assert.assertNotNull(duration52);
        org.junit.Assert.assertTrue("'" + long53 + "' != '" + (-1L) + "'", long53 == (-1L));
        org.junit.Assert.assertNotNull(periodType56);
        org.junit.Assert.assertNotNull(period58);
        org.junit.Assert.assertNotNull(period59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(period63);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 0 + "'", int65 == 0);
        org.junit.Assert.assertNotNull(period67);
        org.junit.Assert.assertNotNull(period69);
        org.junit.Assert.assertNotNull(period71);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "PT-1M" + "'", str72, "PT-1M");
    }

    @Test
    public void test17818() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17818");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.Duration duration2 = org.joda.time.Duration.standardMinutes((-1L));
        long long3 = duration2.getStandardMinutes();
        org.joda.time.Duration duration5 = org.joda.time.Duration.standardMinutes((-1L));
        long long6 = duration5.getStandardMinutes();
        boolean boolean7 = duration2.isLongerThan((org.joda.time.ReadableDuration) duration5);
        org.joda.time.Duration duration9 = duration5.withMillis(1L);
        long long10 = duration5.getStandardMinutes();
        org.joda.time.Days days11 = duration5.toStandardDays();
        org.joda.time.Duration duration13 = org.joda.time.Duration.standardMinutes((-1L));
        long long14 = duration13.getStandardMinutes();
        org.joda.time.Duration duration16 = org.joda.time.Duration.standardMinutes((-1L));
        long long17 = duration16.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant18 = null;
        org.joda.time.Period period19 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration16, readableInstant18);
        org.joda.time.PeriodType periodType20 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology21 = null;
        org.joda.time.Period period22 = duration16.toPeriod(periodType20, chronology21);
        org.joda.time.Duration duration23 = duration16.toDuration();
        org.joda.time.Duration duration25 = duration13.withDurationAdded((org.joda.time.ReadableDuration) duration23, 100);
        org.joda.time.Chronology chronology26 = null;
        org.joda.time.Period period27 = duration25.toPeriod(chronology26);
        org.joda.time.ReadableInstant readableInstant28 = null;
        org.joda.time.Duration duration33 = org.joda.time.Duration.standardMinutes((-1L));
        long long34 = duration33.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant35 = null;
        org.joda.time.Period period36 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration33, readableInstant35);
        org.joda.time.Duration duration38 = org.joda.time.Duration.standardMinutes((-1L));
        long long39 = duration38.getStandardMinutes();
        org.joda.time.Period period40 = duration38.toPeriod();
        boolean boolean41 = duration33.isLongerThan((org.joda.time.ReadableDuration) duration38);
        org.joda.time.ReadableInstant readableInstant42 = null;
        org.joda.time.PeriodType periodType45 = org.joda.time.PeriodType.seconds();
        org.joda.time.PeriodType periodType46 = periodType45.withMinutesRemoved();
        org.joda.time.Chronology chronology47 = null;
        org.joda.time.MutablePeriod mutablePeriod48 = new org.joda.time.MutablePeriod((long) 0, (long) (short) 100, periodType45, chronology47);
        org.joda.time.PeriodType periodType49 = periodType45.withMillisRemoved();
        org.joda.time.Period period50 = duration33.toPeriodTo(readableInstant42, periodType49);
        org.joda.time.Chronology chronology51 = null;
        org.joda.time.Period period52 = new org.joda.time.Period((long) (short) 1, (long) 1, periodType49, chronology51);
        org.joda.time.PeriodType periodType53 = periodType49.withYearsRemoved();
        org.joda.time.PeriodType periodType54 = periodType53.withYearsRemoved();
        org.joda.time.Chronology chronology55 = null;
        org.joda.time.Period period56 = new org.joda.time.Period((long) (short) 100, periodType53, chronology55);
        org.joda.time.MutablePeriod mutablePeriod57 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration25, readableInstant28, periodType53);
        boolean boolean58 = duration5.equals((java.lang.Object) duration25);
        long long59 = duration25.getMillis();
        org.joda.time.Period period60 = new org.joda.time.Period(readableInstant0, (org.joda.time.ReadableDuration) duration25);
        org.junit.Assert.assertNotNull(duration2);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + (-1L) + "'", long3 == (-1L));
        org.junit.Assert.assertNotNull(duration5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + (-1L) + "'", long10 == (-1L));
        org.junit.Assert.assertNotNull(days11);
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + (-1L) + "'", long14 == (-1L));
        org.junit.Assert.assertNotNull(duration16);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + (-1L) + "'", long17 == (-1L));
        org.junit.Assert.assertNotNull(periodType20);
        org.junit.Assert.assertNotNull(period22);
        org.junit.Assert.assertNotNull(duration23);
        org.junit.Assert.assertNotNull(duration25);
        org.junit.Assert.assertNotNull(period27);
        org.junit.Assert.assertNotNull(duration33);
        org.junit.Assert.assertTrue("'" + long34 + "' != '" + (-1L) + "'", long34 == (-1L));
        org.junit.Assert.assertNotNull(duration38);
        org.junit.Assert.assertTrue("'" + long39 + "' != '" + (-1L) + "'", long39 == (-1L));
        org.junit.Assert.assertNotNull(period40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(periodType45);
        org.junit.Assert.assertNotNull(periodType46);
        org.junit.Assert.assertNotNull(periodType49);
        org.junit.Assert.assertNotNull(period50);
        org.junit.Assert.assertNotNull(periodType53);
        org.junit.Assert.assertNotNull(periodType54);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + long59 + "' != '" + (-6060000L) + "'", long59 == (-6060000L));
    }

    @Test
    public void test17819() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17819");
        org.joda.time.format.PeriodPrinter periodPrinter0 = null;
        org.joda.time.format.PeriodParser periodParser1 = null;
        org.joda.time.format.PeriodFormatter periodFormatter2 = new org.joda.time.format.PeriodFormatter(periodPrinter0, periodParser1);
        boolean boolean3 = periodFormatter2.isPrinter();
        org.joda.time.format.PeriodParser periodParser4 = periodFormatter2.getParser();
        java.util.Locale locale5 = null;
        org.joda.time.format.PeriodFormatter periodFormatter6 = periodFormatter2.withLocale(locale5);
        java.util.Locale locale7 = null;
        org.joda.time.format.PeriodFormatter periodFormatter8 = periodFormatter2.withLocale(locale7);
        org.joda.time.ReadableInstant readableInstant13 = null;
        org.joda.time.ReadableInstant readableInstant14 = null;
        org.joda.time.Duration duration16 = org.joda.time.Duration.standardMinutes((-1L));
        long long17 = duration16.getStandardMinutes();
        org.joda.time.Period period18 = duration16.toPeriod();
        org.joda.time.Duration duration20 = org.joda.time.Duration.standardMinutes((-1L));
        long long21 = duration20.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant22 = null;
        org.joda.time.Period period23 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration20, readableInstant22);
        org.joda.time.PeriodType periodType24 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology25 = null;
        org.joda.time.Period period26 = duration20.toPeriod(periodType24, chronology25);
        org.joda.time.Period period27 = duration16.toPeriod(periodType24);
        org.joda.time.MutablePeriod mutablePeriod28 = new org.joda.time.MutablePeriod(readableInstant13, readableInstant14, periodType24);
        org.joda.time.Chronology chronology29 = null;
        org.joda.time.MutablePeriod mutablePeriod30 = new org.joda.time.MutablePeriod((long) 10, (long) (short) 0, periodType24, chronology29);
        org.joda.time.Chronology chronology31 = null;
        org.joda.time.MutablePeriod mutablePeriod32 = new org.joda.time.MutablePeriod(10L, (long) 7, periodType24, chronology31);
        org.joda.time.PeriodType periodType33 = periodType24.withMinutesRemoved();
        org.joda.time.format.PeriodFormatter periodFormatter34 = periodFormatter2.withParseType(periodType24);
        org.joda.time.PeriodType periodType35 = periodFormatter34.getParseType();
        java.util.Locale locale36 = null;
        org.joda.time.format.PeriodFormatter periodFormatter37 = periodFormatter34.withLocale(locale36);
        org.joda.time.format.PeriodParser periodParser38 = periodFormatter37.getParser();
        java.io.Writer writer39 = null;
        org.joda.time.ReadableInstant readableInstant40 = null;
        org.joda.time.ReadableDuration readableDuration41 = null;
        org.joda.time.Period period42 = new org.joda.time.Period(readableInstant40, readableDuration41);
        org.joda.time.DurationFieldType durationFieldType43 = org.joda.time.DurationFieldType.centuries();
        org.joda.time.Period period45 = period42.withFieldAdded(durationFieldType43, (int) (byte) 0);
        org.joda.time.Period period47 = period42.withSeconds(8);
        org.joda.time.Period period49 = period42.minusYears(7);
        org.joda.time.Period period51 = period49.minusWeeks((int) '#');
        // The following exception was thrown during execution in test generation
        try {
            periodFormatter37.printTo(writer39, (org.joda.time.ReadablePeriod) period51);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Printing not supported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(periodParser4);
        org.junit.Assert.assertNotNull(periodFormatter6);
        org.junit.Assert.assertNotNull(periodFormatter8);
        org.junit.Assert.assertNotNull(duration16);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + (-1L) + "'", long17 == (-1L));
        org.junit.Assert.assertNotNull(period18);
        org.junit.Assert.assertNotNull(duration20);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + (-1L) + "'", long21 == (-1L));
        org.junit.Assert.assertNotNull(periodType24);
        org.junit.Assert.assertNotNull(period26);
        org.junit.Assert.assertNotNull(period27);
        org.junit.Assert.assertNotNull(periodType33);
        org.junit.Assert.assertNotNull(periodFormatter34);
        org.junit.Assert.assertNotNull(periodType35);
        org.junit.Assert.assertNotNull(periodFormatter37);
        org.junit.Assert.assertNull(periodParser38);
        org.junit.Assert.assertNotNull(durationFieldType43);
        org.junit.Assert.assertNotNull(period45);
        org.junit.Assert.assertNotNull(period47);
        org.junit.Assert.assertNotNull(period49);
        org.junit.Assert.assertNotNull(period51);
    }

    @Test
    public void test17820() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17820");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((-1L));
        long long2 = duration1.getStandardMinutes();
        org.joda.time.Period period3 = duration1.toPeriod();
        java.lang.String str4 = duration1.toString();
        org.joda.time.ReadableInstant readableInstant6 = null;
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.Duration duration9 = org.joda.time.Duration.standardMinutes((-1L));
        long long10 = duration9.getStandardMinutes();
        org.joda.time.Period period11 = duration9.toPeriod();
        org.joda.time.Duration duration13 = org.joda.time.Duration.standardMinutes((-1L));
        long long14 = duration13.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant15 = null;
        org.joda.time.Period period16 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration13, readableInstant15);
        org.joda.time.PeriodType periodType17 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology18 = null;
        org.joda.time.Period period19 = duration13.toPeriod(periodType17, chronology18);
        org.joda.time.Period period20 = duration9.toPeriod(periodType17);
        org.joda.time.MutablePeriod mutablePeriod21 = new org.joda.time.MutablePeriod(readableInstant6, readableInstant7, periodType17);
        org.joda.time.Period period23 = org.joda.time.Period.seconds((int) '#');
        int int24 = period23.getMillis();
        org.joda.time.DurationFieldType durationFieldType25 = org.joda.time.DurationFieldType.years();
        org.joda.time.Period period27 = period23.withField(durationFieldType25, (int) (short) 10);
        int int28 = periodType17.indexOf(durationFieldType25);
        org.joda.time.Period period29 = new org.joda.time.Period(0L, periodType17);
        org.joda.time.Chronology chronology30 = null;
        org.joda.time.Period period31 = duration1.toPeriod(periodType17, chronology30);
        org.joda.time.Period period32 = duration1.toPeriod();
        java.lang.Object obj33 = null;
        org.joda.time.PeriodType periodType35 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology36 = null;
        org.joda.time.MutablePeriod mutablePeriod37 = new org.joda.time.MutablePeriod((long) '4', periodType35, chronology36);
        org.joda.time.Chronology chronology38 = null;
        org.joda.time.MutablePeriod mutablePeriod39 = new org.joda.time.MutablePeriod(obj33, periodType35, chronology38);
        org.joda.time.MutablePeriod mutablePeriod40 = new org.joda.time.MutablePeriod((java.lang.Object) duration1, periodType35);
        org.joda.time.Duration duration42 = org.joda.time.Duration.standardMinutes((-1L));
        long long43 = duration42.getStandardMinutes();
        org.joda.time.Period period44 = duration42.toPeriod();
        org.joda.time.Duration duration46 = org.joda.time.Duration.standardMinutes((-1L));
        long long47 = duration46.getStandardMinutes();
        org.joda.time.Duration duration49 = org.joda.time.Duration.standardMinutes((-1L));
        long long50 = duration49.getStandardMinutes();
        boolean boolean51 = duration46.isLongerThan((org.joda.time.ReadableDuration) duration49);
        org.joda.time.Duration duration53 = duration49.withMillis(1L);
        org.joda.time.Duration duration55 = org.joda.time.Duration.standardMinutes((-1L));
        long long56 = duration55.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant57 = null;
        org.joda.time.Period period58 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration55, readableInstant57);
        org.joda.time.PeriodType periodType59 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology60 = null;
        org.joda.time.Period period61 = duration55.toPeriod(periodType59, chronology60);
        org.joda.time.Duration duration62 = duration55.toDuration();
        int int63 = duration49.compareTo((org.joda.time.ReadableDuration) duration55);
        boolean boolean64 = duration42.isLongerThan((org.joda.time.ReadableDuration) duration49);
        org.joda.time.Duration duration66 = org.joda.time.Duration.standardMinutes((-1L));
        long long67 = duration66.getStandardMinutes();
        org.joda.time.Duration duration69 = org.joda.time.Duration.standardMinutes((-1L));
        long long70 = duration69.getStandardMinutes();
        boolean boolean71 = duration66.isLongerThan((org.joda.time.ReadableDuration) duration69);
        org.joda.time.Duration duration73 = duration69.withMillis(1L);
        long long74 = duration73.getMillis();
        int int75 = duration49.compareTo((org.joda.time.ReadableDuration) duration73);
        org.joda.time.ReadableInstant readableInstant76 = null;
        org.joda.time.PeriodType periodType77 = org.joda.time.PeriodType.hours();
        org.joda.time.Period period78 = duration73.toPeriodTo(readableInstant76, periodType77);
        org.joda.time.Period period80 = org.joda.time.Period.seconds((int) '#');
        int int81 = period80.getMillis();
        org.joda.time.Period period83 = period80.withMillis((int) '#');
        int int84 = period83.size();
        org.joda.time.DurationFieldType durationFieldType85 = org.joda.time.DurationFieldType.halfdays();
        boolean boolean86 = period83.isSupported(durationFieldType85);
        boolean boolean87 = periodType77.isSupported(durationFieldType85);
        java.lang.String str88 = durationFieldType85.getName();
        org.joda.time.Chronology chronology89 = null;
        boolean boolean90 = durationFieldType85.isSupported(chronology89);
        boolean boolean91 = mutablePeriod40.isSupported(durationFieldType85);
        // The following exception was thrown during execution in test generation
        try {
            mutablePeriod40.setMonths((-17));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Period does not support field 'months'");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + (-1L) + "'", long2 == (-1L));
        org.junit.Assert.assertNotNull(period3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "PT-60S" + "'", str4, "PT-60S");
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + (-1L) + "'", long10 == (-1L));
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + (-1L) + "'", long14 == (-1L));
        org.junit.Assert.assertNotNull(periodType17);
        org.junit.Assert.assertNotNull(period19);
        org.junit.Assert.assertNotNull(period20);
        org.junit.Assert.assertNotNull(period23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNotNull(durationFieldType25);
        org.junit.Assert.assertNotNull(period27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNotNull(period31);
        org.junit.Assert.assertNotNull(period32);
        org.junit.Assert.assertNotNull(periodType35);
        org.junit.Assert.assertNotNull(duration42);
        org.junit.Assert.assertTrue("'" + long43 + "' != '" + (-1L) + "'", long43 == (-1L));
        org.junit.Assert.assertNotNull(period44);
        org.junit.Assert.assertNotNull(duration46);
        org.junit.Assert.assertTrue("'" + long47 + "' != '" + (-1L) + "'", long47 == (-1L));
        org.junit.Assert.assertNotNull(duration49);
        org.junit.Assert.assertTrue("'" + long50 + "' != '" + (-1L) + "'", long50 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(duration53);
        org.junit.Assert.assertNotNull(duration55);
        org.junit.Assert.assertTrue("'" + long56 + "' != '" + (-1L) + "'", long56 == (-1L));
        org.junit.Assert.assertNotNull(periodType59);
        org.junit.Assert.assertNotNull(period61);
        org.junit.Assert.assertNotNull(duration62);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 0 + "'", int63 == 0);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(duration66);
        org.junit.Assert.assertTrue("'" + long67 + "' != '" + (-1L) + "'", long67 == (-1L));
        org.junit.Assert.assertNotNull(duration69);
        org.junit.Assert.assertTrue("'" + long70 + "' != '" + (-1L) + "'", long70 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(duration73);
        org.junit.Assert.assertTrue("'" + long74 + "' != '" + 1L + "'", long74 == 1L);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + (-1) + "'", int75 == (-1));
        org.junit.Assert.assertNotNull(periodType77);
        org.junit.Assert.assertNotNull(period78);
        org.junit.Assert.assertNotNull(period80);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 0 + "'", int81 == 0);
        org.junit.Assert.assertNotNull(period83);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 8 + "'", int84 == 8);
        org.junit.Assert.assertNotNull(durationFieldType85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "halfdays" + "'", str88, "halfdays");
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
    }

    @Test
    public void test17821() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17821");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardHours((long) 10);
        org.joda.time.Duration duration3 = org.joda.time.Duration.standardMinutes((-1L));
        long long4 = duration3.getStandardMinutes();
        org.joda.time.Duration duration6 = org.joda.time.Duration.standardMinutes((-1L));
        long long7 = duration6.getStandardMinutes();
        boolean boolean8 = duration3.isLongerThan((org.joda.time.ReadableDuration) duration6);
        org.joda.time.Period period9 = duration6.toPeriod();
        org.joda.time.Minutes minutes10 = duration6.toStandardMinutes();
        boolean boolean11 = duration1.isEqual((org.joda.time.ReadableDuration) duration6);
        org.joda.time.Duration duration13 = org.joda.time.Duration.standardMinutes((-1L));
        long long14 = duration13.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant15 = null;
        org.joda.time.Period period16 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration13, readableInstant15);
        org.joda.time.PeriodType periodType17 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology18 = null;
        org.joda.time.Period period19 = duration13.toPeriod(periodType17, chronology18);
        org.joda.time.Duration duration22 = duration13.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration24 = org.joda.time.Duration.standardMinutes((-1L));
        long long25 = duration24.getStandardMinutes();
        org.joda.time.Duration duration27 = org.joda.time.Duration.standardMinutes((-1L));
        long long28 = duration27.getStandardMinutes();
        boolean boolean29 = duration24.isLongerThan((org.joda.time.ReadableDuration) duration27);
        org.joda.time.Duration duration31 = duration27.withMillis((long) 1);
        boolean boolean32 = duration22.isShorterThan((org.joda.time.ReadableDuration) duration27);
        boolean boolean33 = duration6.isEqual((org.joda.time.ReadableDuration) duration27);
        org.joda.time.ReadableInstant readableInstant34 = null;
        org.joda.time.MutablePeriod mutablePeriod35 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration6, readableInstant34);
        int int36 = mutablePeriod35.size();
        org.joda.time.ReadableInterval readableInterval37 = null;
        mutablePeriod35.add(readableInterval37);
        org.joda.time.ReadableDuration readableDuration39 = null;
        org.joda.time.Chronology chronology40 = null;
        mutablePeriod35.setPeriod(readableDuration39, chronology40);
        int int42 = mutablePeriod35.getMonths();
        mutablePeriod35.addMinutes(34);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + (-1L) + "'", long4 == (-1L));
        org.junit.Assert.assertNotNull(duration6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + (-1L) + "'", long14 == (-1L));
        org.junit.Assert.assertNotNull(periodType17);
        org.junit.Assert.assertNotNull(period19);
        org.junit.Assert.assertNotNull(duration22);
        org.junit.Assert.assertNotNull(duration24);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + (-1L) + "'", long25 == (-1L));
        org.junit.Assert.assertNotNull(duration27);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + (-1L) + "'", long28 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(duration31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 8 + "'", int36 == 8);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
    }

    @Test
    public void test17822() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17822");
        org.joda.time.Period period1 = org.joda.time.Period.seconds((-947));
        org.joda.time.Chronology chronology3 = null;
        org.joda.time.MutablePeriod mutablePeriod4 = new org.joda.time.MutablePeriod(1L, chronology3);
        org.joda.time.Chronology chronology6 = null;
        org.joda.time.MutablePeriod mutablePeriod7 = new org.joda.time.MutablePeriod(1L, chronology6);
        mutablePeriod4.add((org.joda.time.ReadablePeriod) mutablePeriod7);
        org.joda.time.Duration duration10 = org.joda.time.Duration.standardMinutes((-1L));
        long long11 = duration10.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant12 = null;
        org.joda.time.Period period13 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration10, readableInstant12);
        mutablePeriod7.setPeriod((org.joda.time.ReadablePeriod) period13);
        org.joda.time.PeriodType periodType15 = mutablePeriod7.getPeriodType();
        mutablePeriod7.addHours((int) (short) 0);
        int int18 = mutablePeriod7.getYears();
        mutablePeriod7.addMillis((int) (short) 1);
        org.joda.time.Period period21 = period1.plus((org.joda.time.ReadablePeriod) mutablePeriod7);
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + (-1L) + "'", long11 == (-1L));
        org.junit.Assert.assertNotNull(periodType15);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(period21);
    }

    @Test
    public void test17823() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17823");
        org.joda.time.PeriodType periodType2 = org.joda.time.PeriodType.seconds();
        org.joda.time.PeriodType periodType3 = periodType2.withMinutesRemoved();
        org.joda.time.Chronology chronology4 = null;
        org.joda.time.MutablePeriod mutablePeriod5 = new org.joda.time.MutablePeriod((long) 0, (long) (short) 100, periodType2, chronology4);
        int int6 = mutablePeriod5.getDays();
        int int7 = mutablePeriod5.getMillis();
        int[] intArray8 = mutablePeriod5.getValues();
        org.joda.time.Duration duration11 = org.joda.time.Duration.standardMinutes((-1L));
        long long12 = duration11.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant13 = null;
        org.joda.time.Period period14 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration11, readableInstant13);
        org.joda.time.PeriodType periodType15 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology16 = null;
        org.joda.time.Period period17 = duration11.toPeriod(periodType15, chronology16);
        org.joda.time.Duration duration20 = duration11.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.ReadableInstant readableInstant21 = null;
        org.joda.time.ReadableInstant readableInstant22 = null;
        org.joda.time.Duration duration24 = org.joda.time.Duration.standardMinutes((-1L));
        long long25 = duration24.getStandardMinutes();
        org.joda.time.Period period26 = duration24.toPeriod();
        org.joda.time.Duration duration28 = org.joda.time.Duration.standardMinutes((-1L));
        long long29 = duration28.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant30 = null;
        org.joda.time.Period period31 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration28, readableInstant30);
        org.joda.time.PeriodType periodType32 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology33 = null;
        org.joda.time.Period period34 = duration28.toPeriod(periodType32, chronology33);
        org.joda.time.Period period35 = duration24.toPeriod(periodType32);
        org.joda.time.MutablePeriod mutablePeriod36 = new org.joda.time.MutablePeriod(readableInstant21, readableInstant22, periodType32);
        org.joda.time.Chronology chronology37 = null;
        org.joda.time.Period period38 = duration11.toPeriod(periodType32, chronology37);
        org.joda.time.PeriodType periodType39 = org.joda.time.PeriodType.seconds();
        org.joda.time.PeriodType periodType40 = periodType39.withMinutesRemoved();
        org.joda.time.Chronology chronology41 = null;
        org.joda.time.MutablePeriod mutablePeriod42 = new org.joda.time.MutablePeriod((java.lang.Object) duration11, periodType40, chronology41);
        org.joda.time.Period period43 = new org.joda.time.Period((long) 'a', periodType40);
        mutablePeriod5.add((org.joda.time.ReadablePeriod) period43);
        int int45 = mutablePeriod5.getMillis();
        // The following exception was thrown during execution in test generation
        try {
            mutablePeriod5.setMillis(35);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Period does not support field 'millis'");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(periodType3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0]");
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + (-1L) + "'", long12 == (-1L));
        org.junit.Assert.assertNotNull(periodType15);
        org.junit.Assert.assertNotNull(period17);
        org.junit.Assert.assertNotNull(duration20);
        org.junit.Assert.assertNotNull(duration24);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + (-1L) + "'", long25 == (-1L));
        org.junit.Assert.assertNotNull(period26);
        org.junit.Assert.assertNotNull(duration28);
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + (-1L) + "'", long29 == (-1L));
        org.junit.Assert.assertNotNull(periodType32);
        org.junit.Assert.assertNotNull(period34);
        org.junit.Assert.assertNotNull(period35);
        org.junit.Assert.assertNotNull(period38);
        org.junit.Assert.assertNotNull(periodType39);
        org.junit.Assert.assertNotNull(periodType40);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
    }

    @Test
    public void test17824() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17824");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((-1L));
        long long2 = duration1.getStandardMinutes();
        org.joda.time.Period period3 = duration1.toPeriod();
        org.joda.time.DurationFieldType durationFieldType4 = org.joda.time.DurationFieldType.halfdays();
        org.joda.time.Period period6 = period3.withField(durationFieldType4, (int) (byte) 0);
        org.joda.time.Period period8 = period3.minusMinutes(97);
        org.joda.time.Period period10 = period8.plusMinutes(0);
        org.joda.time.Period period12 = period10.plusMinutes((-997));
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + (-1L) + "'", long2 == (-1L));
        org.junit.Assert.assertNotNull(period3);
        org.junit.Assert.assertNotNull(durationFieldType4);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertNotNull(period12);
    }

    @Test
    public void test17825() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17825");
        org.joda.time.Chronology chronology1 = null;
        org.joda.time.Period period2 = new org.joda.time.Period(12L, chronology1);
    }

    @Test
    public void test17826() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17826");
        org.joda.time.Duration duration1 = org.joda.time.Duration.millis((long) 123);
        org.joda.time.Duration duration2 = duration1.toDuration();
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(duration2);
    }

    @Test
    public void test17827() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17827");
        org.joda.time.Period period1 = org.joda.time.Period.years(129);
        org.junit.Assert.assertNotNull(period1);
    }

    @Test
    public void test17828() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17828");
        org.joda.time.Period period2 = new org.joda.time.Period(357L, (-9L));
    }

    @Test
    public void test17829() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17829");
        org.joda.time.MutablePeriod mutablePeriod0 = new org.joda.time.MutablePeriod();
        int int1 = mutablePeriod0.getMonths();
        int int2 = mutablePeriod0.getYears();
        org.joda.time.MutablePeriod mutablePeriod3 = mutablePeriod0.copy();
        mutablePeriod0.addMillis((int) (short) 1);
        mutablePeriod0.setSeconds((int) '#');
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod3);
    }

    @Test
    public void test17830() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17830");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.Duration duration2 = org.joda.time.Duration.standardMinutes((-1L));
        long long3 = duration2.getStandardMinutes();
        org.joda.time.Duration duration5 = org.joda.time.Duration.standardMinutes((-1L));
        long long6 = duration5.getStandardMinutes();
        boolean boolean7 = duration2.isLongerThan((org.joda.time.ReadableDuration) duration5);
        org.joda.time.Duration duration9 = duration5.withMillis(1L);
        org.joda.time.Period period10 = new org.joda.time.Period(readableInstant0, (org.joda.time.ReadableDuration) duration5);
        org.joda.time.DurationFieldType durationFieldType11 = org.joda.time.DurationFieldType.years();
        java.lang.String str12 = durationFieldType11.getName();
        org.joda.time.Chronology chronology13 = null;
        boolean boolean14 = durationFieldType11.isSupported(chronology13);
        org.joda.time.Period period16 = period10.withFieldAdded(durationFieldType11, 0);
        int int17 = period10.getDays();
        org.joda.time.Period period19 = period10.plusDays((int) (short) 0);
        org.joda.time.Hours hours20 = period10.toStandardHours();
        org.joda.time.Chronology chronology21 = null;
        org.joda.time.MutablePeriod mutablePeriod22 = new org.joda.time.MutablePeriod((java.lang.Object) period10, chronology21);
        org.junit.Assert.assertNotNull(duration2);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + (-1L) + "'", long3 == (-1L));
        org.junit.Assert.assertNotNull(duration5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertNotNull(durationFieldType11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "years" + "'", str12, "years");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(period19);
        org.junit.Assert.assertNotNull(hours20);
    }

    @Test
    public void test17831() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17831");
        org.joda.time.Period period8 = new org.joda.time.Period((int) (byte) 100, (int) ' ', (-60), (int) 'a', (int) 'a', 5, 34, (int) (byte) 10);
        org.joda.time.Period period10 = period8.withMinutes((int) (short) -1);
        org.joda.time.Period period12 = period10.plusSeconds(9);
        org.joda.time.Period period14 = period10.multipliedBy(129);
        org.joda.time.Period period16 = period14.minusHours((-10));
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertNotNull(period14);
        org.junit.Assert.assertNotNull(period16);
    }

    @Test
    public void test17832() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17832");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableInstant readableInstant1 = null;
        org.joda.time.Duration duration3 = org.joda.time.Duration.standardMinutes((-1L));
        long long4 = duration3.getStandardMinutes();
        org.joda.time.Duration duration6 = org.joda.time.Duration.standardMinutes((-1L));
        long long7 = duration6.getStandardMinutes();
        boolean boolean8 = duration3.isLongerThan((org.joda.time.ReadableDuration) duration6);
        org.joda.time.Duration duration10 = duration6.withMillis(1L);
        org.joda.time.Period period11 = new org.joda.time.Period(readableInstant1, (org.joda.time.ReadableDuration) duration6);
        org.joda.time.MutablePeriod mutablePeriod12 = new org.joda.time.MutablePeriod(readableInstant0, (org.joda.time.ReadableDuration) duration6);
        org.joda.time.ReadableInstant readableInstant13 = null;
        org.joda.time.ReadableInstant readableInstant14 = null;
        org.joda.time.Duration duration16 = org.joda.time.Duration.standardMinutes((-1L));
        long long17 = duration16.getStandardMinutes();
        org.joda.time.Period period18 = duration16.toPeriod();
        org.joda.time.Duration duration20 = org.joda.time.Duration.standardMinutes((-1L));
        long long21 = duration20.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant22 = null;
        org.joda.time.Period period23 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration20, readableInstant22);
        org.joda.time.PeriodType periodType24 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology25 = null;
        org.joda.time.Period period26 = duration20.toPeriod(periodType24, chronology25);
        org.joda.time.Period period27 = duration16.toPeriod(periodType24);
        org.joda.time.Duration duration29 = org.joda.time.Duration.standardMinutes((-1L));
        long long30 = duration29.getStandardMinutes();
        boolean boolean31 = duration16.isLongerThan((org.joda.time.ReadableDuration) duration29);
        org.joda.time.PeriodType periodType32 = org.joda.time.PeriodType.weeks();
        org.joda.time.Period period33 = new org.joda.time.Period(readableInstant14, (org.joda.time.ReadableDuration) duration29, periodType32);
        org.joda.time.MutablePeriod mutablePeriod34 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration6, readableInstant13, periodType32);
        org.joda.time.Duration duration36 = duration6.minus(6000000L);
        org.joda.time.Duration duration39 = new org.joda.time.Duration((-60000L), (-120L));
        boolean boolean40 = duration6.isEqual((org.joda.time.ReadableDuration) duration39);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + (-1L) + "'", long4 == (-1L));
        org.junit.Assert.assertNotNull(duration6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertNotNull(duration16);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + (-1L) + "'", long17 == (-1L));
        org.junit.Assert.assertNotNull(period18);
        org.junit.Assert.assertNotNull(duration20);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + (-1L) + "'", long21 == (-1L));
        org.junit.Assert.assertNotNull(periodType24);
        org.junit.Assert.assertNotNull(period26);
        org.junit.Assert.assertNotNull(period27);
        org.junit.Assert.assertNotNull(duration29);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + (-1L) + "'", long30 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(periodType32);
        org.junit.Assert.assertNotNull(duration36);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
    }

    @Test
    public void test17833() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17833");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardSeconds(100L);
        org.joda.time.ReadableInstant readableInstant2 = null;
        org.joda.time.Duration duration4 = org.joda.time.Duration.standardMinutes((-1L));
        long long5 = duration4.getStandardMinutes();
        org.joda.time.Duration duration7 = org.joda.time.Duration.standardMinutes((-1L));
        long long8 = duration7.getStandardMinutes();
        boolean boolean9 = duration4.isLongerThan((org.joda.time.ReadableDuration) duration7);
        org.joda.time.Duration duration11 = duration7.withMillis(1L);
        org.joda.time.Period period12 = new org.joda.time.Period(readableInstant2, (org.joda.time.ReadableDuration) duration7);
        org.joda.time.DurationFieldType durationFieldType13 = org.joda.time.DurationFieldType.years();
        java.lang.String str14 = durationFieldType13.getName();
        org.joda.time.Chronology chronology15 = null;
        boolean boolean16 = durationFieldType13.isSupported(chronology15);
        org.joda.time.Period period18 = period12.withFieldAdded(durationFieldType13, 0);
        org.joda.time.Period period20 = period12.plusDays((int) (short) 0);
        org.joda.time.Period period22 = period12.plusMonths((int) 'a');
        org.joda.time.DurationFieldType durationFieldType24 = period22.getFieldType(0);
        boolean boolean25 = duration1.equals((java.lang.Object) period22);
        org.joda.time.Chronology chronology26 = null;
        org.joda.time.Period period27 = duration1.toPeriod(chronology26);
        org.joda.time.Period period29 = period27.withHours(0);
        org.joda.time.Period period31 = period27.withDays(34);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + (-1L) + "'", long5 == (-1L));
        org.junit.Assert.assertNotNull(duration7);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + (-1L) + "'", long8 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertNotNull(durationFieldType13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "years" + "'", str14, "years");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(period18);
        org.junit.Assert.assertNotNull(period20);
        org.junit.Assert.assertNotNull(period22);
        org.junit.Assert.assertNotNull(durationFieldType24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(period27);
        org.junit.Assert.assertNotNull(period29);
        org.junit.Assert.assertNotNull(period31);
    }

    @Test
    public void test17834() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17834");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.MutablePeriod mutablePeriod3 = new org.joda.time.MutablePeriod(60L, (long) ' ', chronology2);
        org.joda.time.Period period5 = org.joda.time.Period.seconds((int) '#');
        int int6 = period5.getMillis();
        org.joda.time.DurationFieldType durationFieldType7 = org.joda.time.DurationFieldType.years();
        org.joda.time.Period period9 = period5.withField(durationFieldType7, (int) (short) 10);
        int int10 = period9.size();
        org.joda.time.Period period12 = period9.plusDays((int) (short) 0);
        int int13 = period12.getDays();
        org.joda.time.Period period15 = period12.withMillis((-99));
        org.joda.time.DurationFieldType durationFieldType17 = period12.getFieldType((int) (short) 1);
        mutablePeriod3.set(durationFieldType17, 0);
        org.junit.Assert.assertNotNull(period5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(durationFieldType7);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 8 + "'", int10 == 8);
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(period15);
        org.junit.Assert.assertNotNull(durationFieldType17);
    }

    @Test
    public void test17835() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17835");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.Duration duration2 = org.joda.time.Duration.standardMinutes((-1L));
        long long3 = duration2.getStandardMinutes();
        org.joda.time.Period period4 = duration2.toPeriod();
        org.joda.time.Duration duration6 = org.joda.time.Duration.standardMinutes((-1L));
        long long7 = duration6.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.Period period9 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration6, readableInstant8);
        org.joda.time.PeriodType periodType10 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology11 = null;
        org.joda.time.Period period12 = duration6.toPeriod(periodType10, chronology11);
        org.joda.time.Period period13 = duration2.toPeriod(periodType10);
        org.joda.time.Duration duration15 = org.joda.time.Duration.standardMinutes((-1L));
        long long16 = duration15.getStandardMinutes();
        boolean boolean17 = duration2.isLongerThan((org.joda.time.ReadableDuration) duration15);
        org.joda.time.PeriodType periodType18 = org.joda.time.PeriodType.weeks();
        org.joda.time.Period period19 = new org.joda.time.Period(readableInstant0, (org.joda.time.ReadableDuration) duration15, periodType18);
        org.joda.time.Chronology chronology20 = null;
        org.joda.time.Period period21 = duration15.toPeriod(chronology20);
        org.joda.time.Period period23 = org.joda.time.Period.hours((int) 'a');
        org.joda.time.DurationFieldType durationFieldType25 = period23.getFieldType((int) (short) 1);
        boolean boolean26 = duration15.equals((java.lang.Object) (short) 1);
        org.joda.time.ReadableInstant readableInstant27 = null;
        org.joda.time.Duration duration31 = org.joda.time.Duration.standardMinutes((-1L));
        long long32 = duration31.getStandardMinutes();
        org.joda.time.Period period33 = duration31.toPeriod();
        org.joda.time.Duration duration35 = org.joda.time.Duration.standardMinutes((-1L));
        long long36 = duration35.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant37 = null;
        org.joda.time.Period period38 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration35, readableInstant37);
        org.joda.time.PeriodType periodType39 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology40 = null;
        org.joda.time.Period period41 = duration35.toPeriod(periodType39, chronology40);
        org.joda.time.Period period42 = duration31.toPeriod(periodType39);
        org.joda.time.Chronology chronology43 = null;
        org.joda.time.MutablePeriod mutablePeriod44 = new org.joda.time.MutablePeriod(1L, (long) (byte) 100, periodType39, chronology43);
        org.joda.time.PeriodType periodType45 = periodType39.withMillisRemoved();
        org.joda.time.PeriodType periodType46 = periodType45.withSecondsRemoved();
        org.joda.time.PeriodType periodType47 = periodType46.withHoursRemoved();
        org.joda.time.MutablePeriod mutablePeriod48 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration15, readableInstant27, periodType47);
        org.joda.time.ReadableInstant readableInstant49 = null;
        org.joda.time.Period period50 = duration15.toPeriodFrom(readableInstant49);
        org.joda.time.Duration duration52 = duration15.minus(30930600000L);
        org.joda.time.Duration duration54 = duration52.withMillis(52L);
        org.joda.time.Duration duration56 = org.joda.time.Duration.standardSeconds((long) (short) 1);
        org.joda.time.Period period57 = duration56.toPeriod();
        int int58 = duration52.compareTo((org.joda.time.ReadableDuration) duration56);
        org.junit.Assert.assertNotNull(duration2);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + (-1L) + "'", long3 == (-1L));
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(duration6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(periodType10);
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertNotNull(period13);
        org.junit.Assert.assertNotNull(duration15);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + (-1L) + "'", long16 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(periodType18);
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertNotNull(period23);
        org.junit.Assert.assertNotNull(durationFieldType25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(duration31);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + (-1L) + "'", long32 == (-1L));
        org.junit.Assert.assertNotNull(period33);
        org.junit.Assert.assertNotNull(duration35);
        org.junit.Assert.assertTrue("'" + long36 + "' != '" + (-1L) + "'", long36 == (-1L));
        org.junit.Assert.assertNotNull(periodType39);
        org.junit.Assert.assertNotNull(period41);
        org.junit.Assert.assertNotNull(period42);
        org.junit.Assert.assertNotNull(periodType45);
        org.junit.Assert.assertNotNull(periodType46);
        org.junit.Assert.assertNotNull(periodType47);
        org.junit.Assert.assertNotNull(period50);
        org.junit.Assert.assertNotNull(duration52);
        org.junit.Assert.assertNotNull(duration54);
        org.junit.Assert.assertNotNull(duration56);
        org.junit.Assert.assertNotNull(period57);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + (-1) + "'", int58 == (-1));
    }

    @Test
    public void test17836() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17836");
        org.joda.time.Period period1 = org.joda.time.Period.seconds((int) '#');
        int int2 = period1.getMillis();
        org.joda.time.Period period4 = period1.withMillis((int) '#');
        int int5 = period1.size();
        org.joda.time.Period period7 = period1.withMinutes(0);
        org.joda.time.Hours hours8 = period1.toStandardHours();
        org.joda.time.Period period10 = period1.minusSeconds((int) (short) 0);
        org.joda.time.Period period12 = period1.minusMinutes((-1));
        org.joda.time.PeriodType periodType13 = org.joda.time.PeriodType.standard();
        org.joda.time.Chronology chronology14 = null;
        org.joda.time.MutablePeriod mutablePeriod15 = new org.joda.time.MutablePeriod((java.lang.Object) period1, periodType13, chronology14);
        mutablePeriod15.addYears((int) (byte) 0);
        org.joda.time.Period period18 = mutablePeriod15.toPeriod();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType20 = period18.getFieldType(357);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 8 + "'", int5 == 8);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertNotNull(periodType13);
        org.junit.Assert.assertNotNull(period18);
    }

    @Test
    public void test17837() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17837");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes(100L);
        org.joda.time.Duration duration3 = org.joda.time.Duration.standardMinutes((-1L));
        long long4 = duration3.getStandardMinutes();
        org.joda.time.Duration duration6 = org.joda.time.Duration.standardMinutes((-1L));
        long long7 = duration6.getStandardMinutes();
        boolean boolean8 = duration3.isLongerThan((org.joda.time.ReadableDuration) duration6);
        org.joda.time.Duration duration10 = duration6.withMillis((long) 1);
        org.joda.time.Duration duration12 = org.joda.time.Duration.standardMinutes((-1L));
        long long13 = duration12.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant14 = null;
        org.joda.time.Period period15 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration12, readableInstant14);
        org.joda.time.PeriodType periodType16 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology17 = null;
        org.joda.time.Period period18 = duration12.toPeriod(periodType16, chronology17);
        org.joda.time.Duration duration21 = duration12.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration23 = org.joda.time.Duration.standardMinutes((-1L));
        long long24 = duration23.getStandardMinutes();
        org.joda.time.Duration duration26 = org.joda.time.Duration.standardMinutes((-1L));
        long long27 = duration26.getStandardMinutes();
        boolean boolean28 = duration23.isLongerThan((org.joda.time.ReadableDuration) duration26);
        org.joda.time.Duration duration30 = duration26.withMillis((long) 1);
        boolean boolean31 = duration21.isShorterThan((org.joda.time.ReadableDuration) duration26);
        boolean boolean32 = duration6.isLongerThan((org.joda.time.ReadableDuration) duration26);
        org.joda.time.Duration duration34 = org.joda.time.Duration.standardMinutes((-1L));
        long long35 = duration34.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant36 = null;
        org.joda.time.Period period37 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration34, readableInstant36);
        org.joda.time.PeriodType periodType38 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology39 = null;
        org.joda.time.Period period40 = duration34.toPeriod(periodType38, chronology39);
        org.joda.time.Duration duration41 = duration34.toDuration();
        boolean boolean42 = duration6.isEqual((org.joda.time.ReadableDuration) duration34);
        org.joda.time.Duration duration44 = org.joda.time.Duration.standardMinutes((-1L));
        long long45 = duration44.getStandardMinutes();
        org.joda.time.Duration duration47 = org.joda.time.Duration.standardMinutes((-1L));
        long long48 = duration47.getStandardMinutes();
        boolean boolean49 = duration44.isLongerThan((org.joda.time.ReadableDuration) duration47);
        org.joda.time.Duration duration50 = duration6.plus((org.joda.time.ReadableDuration) duration47);
        org.joda.time.Duration duration53 = duration47.withDurationAdded((long) 0, (int) (byte) 10);
        org.joda.time.Duration duration55 = org.joda.time.Duration.standardMinutes((-1L));
        long long56 = duration55.getStandardMinutes();
        org.joda.time.Duration duration58 = org.joda.time.Duration.standardMinutes((-1L));
        long long59 = duration58.getStandardMinutes();
        boolean boolean60 = duration55.isLongerThan((org.joda.time.ReadableDuration) duration58);
        org.joda.time.Duration duration62 = duration58.withMillis((long) 1);
        org.joda.time.Duration duration63 = duration53.plus((org.joda.time.ReadableDuration) duration62);
        boolean boolean64 = duration1.isShorterThan((org.joda.time.ReadableDuration) duration62);
        org.joda.time.Duration duration65 = duration62.toDuration();
        org.joda.time.Chronology chronology66 = null;
        org.joda.time.Period period67 = duration65.toPeriod(chronology66);
        org.joda.time.Chronology chronology68 = null;
        org.joda.time.Period period69 = new org.joda.time.Period((java.lang.Object) chronology66, chronology68);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + (-1L) + "'", long4 == (-1L));
        org.junit.Assert.assertNotNull(duration6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + (-1L) + "'", long13 == (-1L));
        org.junit.Assert.assertNotNull(periodType16);
        org.junit.Assert.assertNotNull(period18);
        org.junit.Assert.assertNotNull(duration21);
        org.junit.Assert.assertNotNull(duration23);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + (-1L) + "'", long24 == (-1L));
        org.junit.Assert.assertNotNull(duration26);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + (-1L) + "'", long27 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(duration30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(duration34);
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + (-1L) + "'", long35 == (-1L));
        org.junit.Assert.assertNotNull(periodType38);
        org.junit.Assert.assertNotNull(period40);
        org.junit.Assert.assertNotNull(duration41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(duration44);
        org.junit.Assert.assertTrue("'" + long45 + "' != '" + (-1L) + "'", long45 == (-1L));
        org.junit.Assert.assertNotNull(duration47);
        org.junit.Assert.assertTrue("'" + long48 + "' != '" + (-1L) + "'", long48 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(duration50);
        org.junit.Assert.assertNotNull(duration53);
        org.junit.Assert.assertNotNull(duration55);
        org.junit.Assert.assertTrue("'" + long56 + "' != '" + (-1L) + "'", long56 == (-1L));
        org.junit.Assert.assertNotNull(duration58);
        org.junit.Assert.assertTrue("'" + long59 + "' != '" + (-1L) + "'", long59 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(duration62);
        org.junit.Assert.assertNotNull(duration63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(duration65);
        org.junit.Assert.assertNotNull(period67);
    }

    @Test
    public void test17838() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17838");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.Duration duration2 = org.joda.time.Duration.standardMinutes((-1L));
        long long3 = duration2.getStandardMinutes();
        org.joda.time.Duration duration5 = org.joda.time.Duration.standardMinutes((-1L));
        long long6 = duration5.getStandardMinutes();
        boolean boolean7 = duration2.isLongerThan((org.joda.time.ReadableDuration) duration5);
        org.joda.time.Duration duration9 = duration5.withMillis(1L);
        org.joda.time.Period period10 = new org.joda.time.Period(readableInstant0, (org.joda.time.ReadableDuration) duration5);
        org.joda.time.DurationFieldType durationFieldType11 = org.joda.time.DurationFieldType.years();
        java.lang.String str12 = durationFieldType11.getName();
        org.joda.time.Chronology chronology13 = null;
        boolean boolean14 = durationFieldType11.isSupported(chronology13);
        org.joda.time.Period period16 = period10.withFieldAdded(durationFieldType11, 0);
        org.joda.time.Period period18 = period16.withMinutes((int) (byte) -1);
        org.joda.time.Period period20 = period18.minusMinutes((int) '4');
        org.joda.time.Period period22 = org.joda.time.Period.seconds((int) '#');
        int int23 = period22.getMillis();
        org.joda.time.Period period25 = period22.withMillis((int) '#');
        int int26 = period22.size();
        org.joda.time.Period period28 = period22.withMinutes(0);
        org.joda.time.Period period30 = period22.plusHours((int) (byte) 0);
        org.joda.time.Period period32 = period30.minusWeeks(100);
        org.joda.time.Duration duration35 = new org.joda.time.Duration((-2L), (long) (byte) 0);
        org.joda.time.ReadableInstant readableInstant36 = null;
        org.joda.time.Period period37 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration35, readableInstant36);
        org.joda.time.Period period39 = period37.withWeeks((-1));
        org.joda.time.DurationFieldType durationFieldType41 = period39.getFieldType((int) (short) 0);
        boolean boolean42 = period32.isSupported(durationFieldType41);
        int int43 = period20.get(durationFieldType41);
        org.joda.time.Period period45 = period20.minusWeeks((int) '4');
        org.joda.time.Period period47 = period45.plusYears((int) (short) 1);
        org.joda.time.Period period49 = org.joda.time.Period.seconds((int) '#');
        org.joda.time.Period period51 = period49.plusMinutes(10);
        org.joda.time.Period period53 = period49.minusSeconds((int) '4');
        org.joda.time.Period period55 = org.joda.time.Period.seconds((int) '#');
        int int56 = period55.getMillis();
        org.joda.time.Period period58 = period55.withMillis((int) '#');
        int int59 = period58.size();
        org.joda.time.DurationFieldType durationFieldType60 = org.joda.time.DurationFieldType.halfdays();
        boolean boolean61 = period58.isSupported(durationFieldType60);
        int int62 = period53.get(durationFieldType60);
        org.joda.time.Period period64 = period53.minusMillis((int) (byte) 100);
        org.joda.time.Period period65 = period64.negated();
        org.joda.time.Period period66 = new org.joda.time.Period((java.lang.Object) period64);
        org.joda.time.DurationFieldType durationFieldType67 = org.joda.time.DurationFieldType.years();
        boolean boolean68 = period66.isSupported(durationFieldType67);
        org.joda.time.Period period70 = period45.withFieldAdded(durationFieldType67, 1);
        org.joda.time.Period period71 = period45.toPeriod();
        org.joda.time.PeriodType periodType72 = null;
        org.joda.time.Period period73 = period45.normalizedStandard(periodType72);
        org.junit.Assert.assertNotNull(duration2);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + (-1L) + "'", long3 == (-1L));
        org.junit.Assert.assertNotNull(duration5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertNotNull(durationFieldType11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "years" + "'", str12, "years");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertNotNull(period18);
        org.junit.Assert.assertNotNull(period20);
        org.junit.Assert.assertNotNull(period22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(period25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 8 + "'", int26 == 8);
        org.junit.Assert.assertNotNull(period28);
        org.junit.Assert.assertNotNull(period30);
        org.junit.Assert.assertNotNull(period32);
        org.junit.Assert.assertNotNull(period39);
        org.junit.Assert.assertNotNull(durationFieldType41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertNotNull(period45);
        org.junit.Assert.assertNotNull(period47);
        org.junit.Assert.assertNotNull(period49);
        org.junit.Assert.assertNotNull(period51);
        org.junit.Assert.assertNotNull(period53);
        org.junit.Assert.assertNotNull(period55);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertNotNull(period58);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 8 + "'", int59 == 8);
        org.junit.Assert.assertNotNull(durationFieldType60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 0 + "'", int62 == 0);
        org.junit.Assert.assertNotNull(period64);
        org.junit.Assert.assertNotNull(period65);
        org.junit.Assert.assertNotNull(durationFieldType67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(period70);
        org.junit.Assert.assertNotNull(period71);
        org.junit.Assert.assertNotNull(period73);
    }

    @Test
    public void test17839() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17839");
        org.joda.time.format.PeriodPrinter periodPrinter1 = null;
        org.joda.time.format.PeriodParser periodParser2 = null;
        org.joda.time.format.PeriodFormatter periodFormatter3 = new org.joda.time.format.PeriodFormatter(periodPrinter1, periodParser2);
        org.joda.time.format.PeriodPrinter periodPrinter4 = periodFormatter3.getPrinter();
        boolean boolean5 = periodFormatter3.isParser();
        org.joda.time.format.PeriodParser periodParser6 = periodFormatter3.getParser();
        boolean boolean7 = periodFormatter3.isParser();
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.ReadableInstant readableInstant9 = null;
        org.joda.time.Duration duration13 = org.joda.time.Duration.standardMinutes((-1L));
        long long14 = duration13.getStandardMinutes();
        org.joda.time.Period period15 = duration13.toPeriod();
        org.joda.time.Duration duration17 = org.joda.time.Duration.standardMinutes((-1L));
        long long18 = duration17.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant19 = null;
        org.joda.time.Period period20 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration17, readableInstant19);
        org.joda.time.PeriodType periodType21 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology22 = null;
        org.joda.time.Period period23 = duration17.toPeriod(periodType21, chronology22);
        org.joda.time.Period period24 = duration13.toPeriod(periodType21);
        org.joda.time.Chronology chronology25 = null;
        org.joda.time.MutablePeriod mutablePeriod26 = new org.joda.time.MutablePeriod(1L, (long) (byte) 100, periodType21, chronology25);
        org.joda.time.MutablePeriod mutablePeriod27 = new org.joda.time.MutablePeriod(readableInstant8, readableInstant9, periodType21);
        org.joda.time.format.PeriodFormatter periodFormatter28 = periodFormatter3.withParseType(periodType21);
        java.util.Locale locale29 = null;
        org.joda.time.format.PeriodFormatter periodFormatter30 = periodFormatter3.withLocale(locale29);
        java.util.Locale locale31 = periodFormatter30.getLocale();
        boolean boolean32 = periodFormatter30.isPrinter();
        org.joda.time.format.PeriodParser periodParser33 = periodFormatter30.getParser();
        org.joda.time.format.PeriodPrinter periodPrinter34 = periodFormatter30.getPrinter();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.MutablePeriod mutablePeriod35 = org.joda.time.MutablePeriod.parse("P-97YT-17S", periodFormatter30);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Parsing not supported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(periodPrinter4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(periodParser6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + (-1L) + "'", long14 == (-1L));
        org.junit.Assert.assertNotNull(period15);
        org.junit.Assert.assertNotNull(duration17);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + (-1L) + "'", long18 == (-1L));
        org.junit.Assert.assertNotNull(periodType21);
        org.junit.Assert.assertNotNull(period23);
        org.junit.Assert.assertNotNull(period24);
        org.junit.Assert.assertNotNull(periodFormatter28);
        org.junit.Assert.assertNotNull(periodFormatter30);
        org.junit.Assert.assertNull(locale31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNull(periodParser33);
        org.junit.Assert.assertNull(periodPrinter34);
    }

    @Test
    public void test17840() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17840");
        org.joda.time.MutablePeriod mutablePeriod1 = new org.joda.time.MutablePeriod((-60000L));
        org.joda.time.MutablePeriod mutablePeriod2 = mutablePeriod1.copy();
        java.lang.Object obj3 = mutablePeriod2.clone();
        org.joda.time.MutablePeriod mutablePeriod4 = new org.joda.time.MutablePeriod((java.lang.Object) mutablePeriod2);
        org.junit.Assert.assertNotNull(mutablePeriod2);
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertEquals(obj3.toString(), "PT-1M");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj3), "PT-1M");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj3), "PT-1M");
    }

    @Test
    public void test17841() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17841");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((-1L));
        long long2 = duration1.getStandardMinutes();
        org.joda.time.Duration duration4 = org.joda.time.Duration.standardMinutes((-1L));
        long long5 = duration4.getStandardMinutes();
        boolean boolean6 = duration1.isLongerThan((org.joda.time.ReadableDuration) duration4);
        org.joda.time.Duration duration8 = duration4.withMillis((long) 1);
        org.joda.time.Chronology chronology10 = null;
        org.joda.time.MutablePeriod mutablePeriod11 = new org.joda.time.MutablePeriod(1L, chronology10);
        org.joda.time.Chronology chronology13 = null;
        org.joda.time.MutablePeriod mutablePeriod14 = new org.joda.time.MutablePeriod(1L, chronology13);
        mutablePeriod11.add((org.joda.time.ReadablePeriod) mutablePeriod14);
        boolean boolean16 = duration8.equals((java.lang.Object) mutablePeriod14);
        org.joda.time.Duration duration18 = org.joda.time.Duration.standardSeconds((-60L));
        boolean boolean19 = duration8.isEqual((org.joda.time.ReadableDuration) duration18);
        org.joda.time.Chronology chronology20 = null;
        org.joda.time.Period period21 = duration8.toPeriod(chronology20);
        org.joda.time.ReadableInstant readableInstant22 = null;
        org.joda.time.Interval interval23 = duration8.toIntervalTo(readableInstant22);
        org.joda.time.Duration duration25 = new org.joda.time.Duration((long) (short) 100);
        org.joda.time.ReadableInstant readableInstant26 = null;
        org.joda.time.ReadableInstant readableInstant28 = null;
        org.joda.time.ReadableInstant readableInstant29 = null;
        org.joda.time.Duration duration31 = org.joda.time.Duration.standardMinutes((-1L));
        long long32 = duration31.getStandardMinutes();
        org.joda.time.Period period33 = duration31.toPeriod();
        org.joda.time.Duration duration35 = org.joda.time.Duration.standardMinutes((-1L));
        long long36 = duration35.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant37 = null;
        org.joda.time.Period period38 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration35, readableInstant37);
        org.joda.time.PeriodType periodType39 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology40 = null;
        org.joda.time.Period period41 = duration35.toPeriod(periodType39, chronology40);
        org.joda.time.Period period42 = duration31.toPeriod(periodType39);
        org.joda.time.MutablePeriod mutablePeriod43 = new org.joda.time.MutablePeriod(readableInstant28, readableInstant29, periodType39);
        org.joda.time.Period period45 = org.joda.time.Period.seconds((int) '#');
        int int46 = period45.getMillis();
        org.joda.time.DurationFieldType durationFieldType47 = org.joda.time.DurationFieldType.years();
        org.joda.time.Period period49 = period45.withField(durationFieldType47, (int) (short) 10);
        int int50 = periodType39.indexOf(durationFieldType47);
        org.joda.time.Period period51 = new org.joda.time.Period(0L, periodType39);
        org.joda.time.Period period52 = duration25.toPeriodTo(readableInstant26, periodType39);
        long long53 = duration25.getMillis();
        int int54 = duration8.compareTo((org.joda.time.ReadableDuration) duration25);
        org.joda.time.ReadableInstant readableInstant55 = null;
        org.joda.time.PeriodType periodType58 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period59 = new org.joda.time.Period(10L, periodType58);
        org.joda.time.PeriodType periodType60 = periodType58.withHoursRemoved();
        org.joda.time.PeriodType periodType61 = periodType58.withSecondsRemoved();
        org.joda.time.PeriodType periodType62 = periodType61.withMillisRemoved();
        org.joda.time.Period period63 = new org.joda.time.Period((long) 2, periodType61);
        org.joda.time.PeriodType periodType64 = periodType61.withSecondsRemoved();
        org.joda.time.PeriodType periodType67 = org.joda.time.PeriodType.seconds();
        org.joda.time.PeriodType periodType68 = periodType67.withMinutesRemoved();
        org.joda.time.Chronology chronology69 = null;
        org.joda.time.MutablePeriod mutablePeriod70 = new org.joda.time.MutablePeriod((long) 0, (long) (short) 100, periodType67, chronology69);
        org.joda.time.Chronology chronology72 = null;
        org.joda.time.MutablePeriod mutablePeriod73 = new org.joda.time.MutablePeriod(1L, chronology72);
        org.joda.time.Period period75 = org.joda.time.Period.seconds((int) '#');
        mutablePeriod73.setPeriod((org.joda.time.ReadablePeriod) period75);
        mutablePeriod73.setPeriod((long) '#');
        int int79 = mutablePeriod73.getMinutes();
        org.joda.time.DurationFieldType durationFieldType80 = org.joda.time.DurationFieldType.weeks();
        int int81 = mutablePeriod73.indexOf(durationFieldType80);
        int int82 = periodType67.indexOf(durationFieldType80);
        boolean boolean83 = periodType61.isSupported(durationFieldType80);
        org.joda.time.MutablePeriod mutablePeriod84 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration8, readableInstant55, periodType61);
        org.joda.time.PeriodType periodType85 = periodType61.withMillisRemoved();
        org.joda.time.PeriodType periodType86 = periodType85.withHoursRemoved();
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + (-1L) + "'", long2 == (-1L));
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + (-1L) + "'", long5 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(duration8);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(duration18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertNotNull(interval23);
        org.junit.Assert.assertNotNull(duration31);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + (-1L) + "'", long32 == (-1L));
        org.junit.Assert.assertNotNull(period33);
        org.junit.Assert.assertNotNull(duration35);
        org.junit.Assert.assertTrue("'" + long36 + "' != '" + (-1L) + "'", long36 == (-1L));
        org.junit.Assert.assertNotNull(periodType39);
        org.junit.Assert.assertNotNull(period41);
        org.junit.Assert.assertNotNull(period42);
        org.junit.Assert.assertNotNull(period45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertNotNull(durationFieldType47);
        org.junit.Assert.assertNotNull(period49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertNotNull(period52);
        org.junit.Assert.assertTrue("'" + long53 + "' != '" + 100L + "'", long53 == 100L);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
        org.junit.Assert.assertNotNull(periodType58);
        org.junit.Assert.assertNotNull(periodType60);
        org.junit.Assert.assertNotNull(periodType61);
        org.junit.Assert.assertNotNull(periodType62);
        org.junit.Assert.assertNotNull(periodType64);
        org.junit.Assert.assertNotNull(periodType67);
        org.junit.Assert.assertNotNull(periodType68);
        org.junit.Assert.assertNotNull(period75);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 0 + "'", int79 == 0);
        org.junit.Assert.assertNotNull(durationFieldType80);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 2 + "'", int81 == 2);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + (-1) + "'", int82 == (-1));
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(periodType85);
        org.junit.Assert.assertNotNull(periodType86);
    }

    @Test
    public void test17842() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17842");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardHours((long) 10);
        org.joda.time.Duration duration3 = org.joda.time.Duration.standardMinutes((-1L));
        long long4 = duration3.getStandardMinutes();
        org.joda.time.Duration duration6 = org.joda.time.Duration.standardMinutes((-1L));
        long long7 = duration6.getStandardMinutes();
        boolean boolean8 = duration3.isLongerThan((org.joda.time.ReadableDuration) duration6);
        org.joda.time.Period period9 = duration6.toPeriod();
        org.joda.time.Minutes minutes10 = duration6.toStandardMinutes();
        boolean boolean11 = duration1.isEqual((org.joda.time.ReadableDuration) duration6);
        org.joda.time.Duration duration13 = org.joda.time.Duration.standardMinutes((-1L));
        long long14 = duration13.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant15 = null;
        org.joda.time.Period period16 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration13, readableInstant15);
        org.joda.time.PeriodType periodType17 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology18 = null;
        org.joda.time.Period period19 = duration13.toPeriod(periodType17, chronology18);
        org.joda.time.Duration duration22 = duration13.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration24 = org.joda.time.Duration.standardMinutes((-1L));
        long long25 = duration24.getStandardMinutes();
        org.joda.time.Duration duration27 = org.joda.time.Duration.standardMinutes((-1L));
        long long28 = duration27.getStandardMinutes();
        boolean boolean29 = duration24.isLongerThan((org.joda.time.ReadableDuration) duration27);
        org.joda.time.Duration duration31 = duration27.withMillis((long) 1);
        boolean boolean32 = duration22.isShorterThan((org.joda.time.ReadableDuration) duration27);
        boolean boolean33 = duration6.isEqual((org.joda.time.ReadableDuration) duration27);
        org.joda.time.ReadableInstant readableInstant34 = null;
        org.joda.time.MutablePeriod mutablePeriod35 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration6, readableInstant34);
        int int36 = mutablePeriod35.size();
        org.joda.time.ReadableInterval readableInterval37 = null;
        mutablePeriod35.add(readableInterval37);
        mutablePeriod35.setMonths((int) (short) 1);
        mutablePeriod35.addSeconds((int) '4');
        org.joda.time.PeriodType periodType45 = null;
        org.joda.time.Chronology chronology46 = null;
        org.joda.time.MutablePeriod mutablePeriod47 = new org.joda.time.MutablePeriod((long) 1, (long) (short) 0, periodType45, chronology46);
        int int48 = mutablePeriod47.getMinutes();
        mutablePeriod35.mergePeriod((org.joda.time.ReadablePeriod) mutablePeriod47);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + (-1L) + "'", long4 == (-1L));
        org.junit.Assert.assertNotNull(duration6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + (-1L) + "'", long14 == (-1L));
        org.junit.Assert.assertNotNull(periodType17);
        org.junit.Assert.assertNotNull(period19);
        org.junit.Assert.assertNotNull(duration22);
        org.junit.Assert.assertNotNull(duration24);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + (-1L) + "'", long25 == (-1L));
        org.junit.Assert.assertNotNull(duration27);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + (-1L) + "'", long28 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(duration31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 8 + "'", int36 == 8);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
    }

    @Test
    public void test17843() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17843");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardDays(0L);
        org.joda.time.Duration duration2 = duration1.toDuration();
        org.joda.time.Duration duration4 = org.joda.time.Duration.standardMinutes((-1L));
        long long5 = duration4.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant6 = null;
        org.joda.time.Period period7 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration4, readableInstant6);
        org.joda.time.PeriodType periodType8 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology9 = null;
        org.joda.time.Period period10 = duration4.toPeriod(periodType8, chronology9);
        org.joda.time.ReadableInstant readableInstant11 = null;
        org.joda.time.Period period12 = duration4.toPeriodTo(readableInstant11);
        org.joda.time.Chronology chronology13 = null;
        org.joda.time.Period period14 = duration4.toPeriod(chronology13);
        org.joda.time.Duration duration15 = duration4.toDuration();
        org.joda.time.Duration duration17 = org.joda.time.Duration.standardMinutes((-1L));
        long long18 = duration17.getStandardMinutes();
        org.joda.time.Period period19 = duration17.toPeriod();
        org.joda.time.Duration duration21 = org.joda.time.Duration.standardMinutes((-1L));
        long long22 = duration21.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant23 = null;
        org.joda.time.Period period24 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration21, readableInstant23);
        org.joda.time.PeriodType periodType25 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology26 = null;
        org.joda.time.Period period27 = duration21.toPeriod(periodType25, chronology26);
        org.joda.time.Period period28 = duration17.toPeriod(periodType25);
        org.joda.time.Duration duration30 = org.joda.time.Duration.standardMinutes((-1L));
        long long31 = duration30.getStandardMinutes();
        boolean boolean32 = duration17.isLongerThan((org.joda.time.ReadableDuration) duration30);
        org.joda.time.Duration duration34 = org.joda.time.Duration.standardMinutes((-1L));
        long long35 = duration34.getStandardMinutes();
        org.joda.time.Duration duration37 = org.joda.time.Duration.standardMinutes((-1L));
        long long38 = duration37.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant39 = null;
        org.joda.time.Period period40 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration37, readableInstant39);
        org.joda.time.PeriodType periodType41 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology42 = null;
        org.joda.time.Period period43 = duration37.toPeriod(periodType41, chronology42);
        org.joda.time.Duration duration44 = duration37.toDuration();
        org.joda.time.Duration duration46 = duration34.withDurationAdded((org.joda.time.ReadableDuration) duration44, 100);
        int int47 = duration30.compareTo((org.joda.time.ReadableDuration) duration46);
        org.joda.time.Duration duration48 = duration30.toDuration();
        int int49 = duration4.compareTo((org.joda.time.ReadableDuration) duration48);
        long long50 = duration4.getMillis();
        org.joda.time.Chronology chronology51 = null;
        org.joda.time.MutablePeriod mutablePeriod52 = new org.joda.time.MutablePeriod((java.lang.Object) duration4, chronology51);
        org.joda.time.ReadableInstant readableInstant53 = null;
        org.joda.time.ReadableInstant readableInstant54 = null;
        org.joda.time.Duration duration56 = org.joda.time.Duration.standardMinutes((-1L));
        long long57 = duration56.getStandardMinutes();
        org.joda.time.Duration duration59 = org.joda.time.Duration.standardMinutes((-1L));
        long long60 = duration59.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant61 = null;
        org.joda.time.Period period62 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration59, readableInstant61);
        org.joda.time.PeriodType periodType63 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology64 = null;
        org.joda.time.Period period65 = duration59.toPeriod(periodType63, chronology64);
        org.joda.time.Duration duration66 = duration59.toDuration();
        org.joda.time.Duration duration68 = duration56.withDurationAdded((org.joda.time.ReadableDuration) duration66, 100);
        org.joda.time.Period period69 = new org.joda.time.Period(readableInstant54, (org.joda.time.ReadableDuration) duration56);
        org.joda.time.MutablePeriod mutablePeriod70 = new org.joda.time.MutablePeriod(readableInstant53, (org.joda.time.ReadableDuration) duration56);
        mutablePeriod52.setPeriod((org.joda.time.ReadableDuration) duration56);
        org.joda.time.Duration duration72 = duration2.plus((org.joda.time.ReadableDuration) duration56);
        org.joda.time.Duration duration74 = new org.joda.time.Duration((-7776000L));
        java.lang.String str75 = duration74.toString();
        boolean boolean76 = duration56.isEqual((org.joda.time.ReadableDuration) duration74);
        org.joda.time.Seconds seconds77 = duration56.toStandardSeconds();
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(duration2);
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + (-1L) + "'", long5 == (-1L));
        org.junit.Assert.assertNotNull(periodType8);
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertNotNull(period14);
        org.junit.Assert.assertNotNull(duration15);
        org.junit.Assert.assertNotNull(duration17);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + (-1L) + "'", long18 == (-1L));
        org.junit.Assert.assertNotNull(period19);
        org.junit.Assert.assertNotNull(duration21);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + (-1L) + "'", long22 == (-1L));
        org.junit.Assert.assertNotNull(periodType25);
        org.junit.Assert.assertNotNull(period27);
        org.junit.Assert.assertNotNull(period28);
        org.junit.Assert.assertNotNull(duration30);
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + (-1L) + "'", long31 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(duration34);
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + (-1L) + "'", long35 == (-1L));
        org.junit.Assert.assertNotNull(duration37);
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + (-1L) + "'", long38 == (-1L));
        org.junit.Assert.assertNotNull(periodType41);
        org.junit.Assert.assertNotNull(period43);
        org.junit.Assert.assertNotNull(duration44);
        org.junit.Assert.assertNotNull(duration46);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 1 + "'", int47 == 1);
        org.junit.Assert.assertNotNull(duration48);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertTrue("'" + long50 + "' != '" + (-60000L) + "'", long50 == (-60000L));
        org.junit.Assert.assertNotNull(duration56);
        org.junit.Assert.assertTrue("'" + long57 + "' != '" + (-1L) + "'", long57 == (-1L));
        org.junit.Assert.assertNotNull(duration59);
        org.junit.Assert.assertTrue("'" + long60 + "' != '" + (-1L) + "'", long60 == (-1L));
        org.junit.Assert.assertNotNull(periodType63);
        org.junit.Assert.assertNotNull(period65);
        org.junit.Assert.assertNotNull(duration66);
        org.junit.Assert.assertNotNull(duration68);
        org.junit.Assert.assertNotNull(duration72);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "PT-7776S" + "'", str75, "PT-7776S");
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(seconds77);
    }

    @Test
    public void test17844() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17844");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardHours(5L);
        org.joda.time.ReadableInstant readableInstant2 = null;
        org.joda.time.MutablePeriod mutablePeriod3 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration1, readableInstant2);
        org.junit.Assert.assertNotNull(duration1);
    }

    @Test
    public void test17845() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17845");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.Duration duration2 = org.joda.time.Duration.standardMinutes((-1L));
        long long3 = duration2.getStandardMinutes();
        org.joda.time.Duration duration5 = org.joda.time.Duration.standardMinutes((-1L));
        long long6 = duration5.getStandardMinutes();
        boolean boolean7 = duration2.isLongerThan((org.joda.time.ReadableDuration) duration5);
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.Duration duration10 = org.joda.time.Duration.standardMinutes((-1L));
        long long11 = duration10.getStandardMinutes();
        org.joda.time.Period period12 = duration10.toPeriod();
        org.joda.time.Duration duration14 = org.joda.time.Duration.standardMinutes((-1L));
        long long15 = duration14.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant16 = null;
        org.joda.time.Period period17 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration14, readableInstant16);
        org.joda.time.PeriodType periodType18 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology19 = null;
        org.joda.time.Period period20 = duration14.toPeriod(periodType18, chronology19);
        org.joda.time.Period period21 = duration10.toPeriod(periodType18);
        org.joda.time.Duration duration23 = org.joda.time.Duration.standardMinutes((-1L));
        long long24 = duration23.getStandardMinutes();
        boolean boolean25 = duration10.isLongerThan((org.joda.time.ReadableDuration) duration23);
        org.joda.time.PeriodType periodType26 = org.joda.time.PeriodType.weeks();
        org.joda.time.Period period27 = new org.joda.time.Period(readableInstant8, (org.joda.time.ReadableDuration) duration23, periodType26);
        org.joda.time.Duration duration29 = duration23.plus(10L);
        org.joda.time.ReadableInstant readableInstant30 = null;
        org.joda.time.Duration duration32 = org.joda.time.Duration.standardMinutes((-1L));
        long long33 = duration32.getStandardMinutes();
        org.joda.time.Period period34 = duration32.toPeriod();
        org.joda.time.Duration duration36 = org.joda.time.Duration.standardMinutes((-1L));
        long long37 = duration36.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant38 = null;
        org.joda.time.Period period39 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration36, readableInstant38);
        org.joda.time.PeriodType periodType40 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology41 = null;
        org.joda.time.Period period42 = duration36.toPeriod(periodType40, chronology41);
        org.joda.time.Period period43 = duration32.toPeriod(periodType40);
        org.joda.time.Duration duration45 = org.joda.time.Duration.standardMinutes((-1L));
        long long46 = duration45.getStandardMinutes();
        boolean boolean47 = duration32.isLongerThan((org.joda.time.ReadableDuration) duration45);
        org.joda.time.PeriodType periodType48 = org.joda.time.PeriodType.weeks();
        org.joda.time.Period period49 = new org.joda.time.Period(readableInstant30, (org.joda.time.ReadableDuration) duration45, periodType48);
        boolean boolean50 = duration29.isLongerThan((org.joda.time.ReadableDuration) duration45);
        boolean boolean51 = duration5.isLongerThan((org.joda.time.ReadableDuration) duration29);
        org.joda.time.ReadableInstant readableInstant54 = null;
        org.joda.time.ReadableInstant readableInstant55 = null;
        org.joda.time.Duration duration59 = org.joda.time.Duration.standardMinutes((-1L));
        long long60 = duration59.getStandardMinutes();
        org.joda.time.Period period61 = duration59.toPeriod();
        org.joda.time.Duration duration63 = org.joda.time.Duration.standardMinutes((-1L));
        long long64 = duration63.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant65 = null;
        org.joda.time.Period period66 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration63, readableInstant65);
        org.joda.time.PeriodType periodType67 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology68 = null;
        org.joda.time.Period period69 = duration63.toPeriod(periodType67, chronology68);
        org.joda.time.Period period70 = duration59.toPeriod(periodType67);
        org.joda.time.Chronology chronology71 = null;
        org.joda.time.MutablePeriod mutablePeriod72 = new org.joda.time.MutablePeriod(1L, (long) (byte) 100, periodType67, chronology71);
        org.joda.time.MutablePeriod mutablePeriod73 = new org.joda.time.MutablePeriod(readableInstant54, readableInstant55, periodType67);
        org.joda.time.Chronology chronology74 = null;
        org.joda.time.Period period75 = new org.joda.time.Period((long) 100, (long) (short) 100, periodType67, chronology74);
        org.joda.time.PeriodType periodType76 = periodType67.withDaysRemoved();
        org.joda.time.Period period77 = new org.joda.time.Period(readableInstant0, (org.joda.time.ReadableDuration) duration29, periodType76);
        org.joda.time.PeriodType periodType78 = periodType76.withSecondsRemoved();
        org.junit.Assert.assertNotNull(duration2);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + (-1L) + "'", long3 == (-1L));
        org.junit.Assert.assertNotNull(duration5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + (-1L) + "'", long11 == (-1L));
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + (-1L) + "'", long15 == (-1L));
        org.junit.Assert.assertNotNull(periodType18);
        org.junit.Assert.assertNotNull(period20);
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertNotNull(duration23);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + (-1L) + "'", long24 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(periodType26);
        org.junit.Assert.assertNotNull(duration29);
        org.junit.Assert.assertNotNull(duration32);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + (-1L) + "'", long33 == (-1L));
        org.junit.Assert.assertNotNull(period34);
        org.junit.Assert.assertNotNull(duration36);
        org.junit.Assert.assertTrue("'" + long37 + "' != '" + (-1L) + "'", long37 == (-1L));
        org.junit.Assert.assertNotNull(periodType40);
        org.junit.Assert.assertNotNull(period42);
        org.junit.Assert.assertNotNull(period43);
        org.junit.Assert.assertNotNull(duration45);
        org.junit.Assert.assertTrue("'" + long46 + "' != '" + (-1L) + "'", long46 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(periodType48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(duration59);
        org.junit.Assert.assertTrue("'" + long60 + "' != '" + (-1L) + "'", long60 == (-1L));
        org.junit.Assert.assertNotNull(period61);
        org.junit.Assert.assertNotNull(duration63);
        org.junit.Assert.assertTrue("'" + long64 + "' != '" + (-1L) + "'", long64 == (-1L));
        org.junit.Assert.assertNotNull(periodType67);
        org.junit.Assert.assertNotNull(period69);
        org.junit.Assert.assertNotNull(period70);
        org.junit.Assert.assertNotNull(periodType76);
        org.junit.Assert.assertNotNull(periodType78);
    }

    @Test
    public void test17846() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17846");
        org.joda.time.ReadableInstant readableInstant2 = null;
        org.joda.time.Duration duration4 = org.joda.time.Duration.standardHours((long) 10);
        org.joda.time.Duration duration6 = org.joda.time.Duration.standardMinutes((-1L));
        long long7 = duration6.getStandardMinutes();
        org.joda.time.Duration duration9 = org.joda.time.Duration.standardMinutes((-1L));
        long long10 = duration9.getStandardMinutes();
        boolean boolean11 = duration6.isLongerThan((org.joda.time.ReadableDuration) duration9);
        org.joda.time.Period period12 = duration9.toPeriod();
        org.joda.time.Minutes minutes13 = duration9.toStandardMinutes();
        boolean boolean14 = duration4.isEqual((org.joda.time.ReadableDuration) duration9);
        org.joda.time.Duration duration16 = org.joda.time.Duration.standardMinutes((-1L));
        long long17 = duration16.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant18 = null;
        org.joda.time.Period period19 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration16, readableInstant18);
        org.joda.time.PeriodType periodType20 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology21 = null;
        org.joda.time.Period period22 = duration16.toPeriod(periodType20, chronology21);
        org.joda.time.Duration duration25 = duration16.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration27 = org.joda.time.Duration.standardMinutes((-1L));
        long long28 = duration27.getStandardMinutes();
        org.joda.time.Duration duration30 = org.joda.time.Duration.standardMinutes((-1L));
        long long31 = duration30.getStandardMinutes();
        boolean boolean32 = duration27.isLongerThan((org.joda.time.ReadableDuration) duration30);
        org.joda.time.Duration duration34 = duration30.withMillis((long) 1);
        boolean boolean35 = duration25.isShorterThan((org.joda.time.ReadableDuration) duration30);
        boolean boolean36 = duration9.isEqual((org.joda.time.ReadableDuration) duration30);
        org.joda.time.ReadableInstant readableInstant37 = null;
        org.joda.time.MutablePeriod mutablePeriod38 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration9, readableInstant37);
        org.joda.time.Duration duration40 = org.joda.time.Duration.standardMinutes((-1L));
        long long41 = duration40.getStandardMinutes();
        org.joda.time.Period period42 = duration40.toPeriod();
        org.joda.time.Duration duration44 = org.joda.time.Duration.standardMinutes((-1L));
        long long45 = duration44.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant46 = null;
        org.joda.time.Period period47 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration44, readableInstant46);
        org.joda.time.PeriodType periodType48 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology49 = null;
        org.joda.time.Period period50 = duration44.toPeriod(periodType48, chronology49);
        org.joda.time.Period period51 = duration40.toPeriod(periodType48);
        org.joda.time.Duration duration53 = org.joda.time.Duration.standardMinutes((-1L));
        long long54 = duration53.getStandardMinutes();
        boolean boolean55 = duration40.isLongerThan((org.joda.time.ReadableDuration) duration53);
        org.joda.time.Duration duration57 = duration53.withMillis((long) 0);
        org.joda.time.PeriodType periodType58 = org.joda.time.PeriodType.weeks();
        org.joda.time.Period period59 = duration57.toPeriod(periodType58);
        org.joda.time.Period period60 = new org.joda.time.Period(readableInstant2, (org.joda.time.ReadableDuration) duration9, periodType58);
        org.joda.time.PeriodType periodType61 = periodType58.withYearsRemoved();
        org.joda.time.Chronology chronology62 = null;
        org.joda.time.MutablePeriod mutablePeriod63 = new org.joda.time.MutablePeriod((long) (short) 10, (long) (-1), periodType58, chronology62);
        org.joda.time.Chronology chronology66 = null;
        org.joda.time.Period period67 = new org.joda.time.Period(1L, (long) (byte) 10, chronology66);
        org.joda.time.Period period68 = period67.toPeriod();
        org.joda.time.Period period70 = period68.plusYears(10);
        org.joda.time.DurationFieldType durationFieldType72 = period68.getFieldType(0);
        int int73 = periodType58.indexOf(durationFieldType72);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Duration duration74 = new org.joda.time.Duration((java.lang.Object) durationFieldType72);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: No duration converter found for type: org.joda.time.DurationFieldType$StandardDurationFieldType");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertNotNull(duration6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + (-1L) + "'", long10 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(duration16);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + (-1L) + "'", long17 == (-1L));
        org.junit.Assert.assertNotNull(periodType20);
        org.junit.Assert.assertNotNull(period22);
        org.junit.Assert.assertNotNull(duration25);
        org.junit.Assert.assertNotNull(duration27);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + (-1L) + "'", long28 == (-1L));
        org.junit.Assert.assertNotNull(duration30);
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + (-1L) + "'", long31 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(duration34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(duration40);
        org.junit.Assert.assertTrue("'" + long41 + "' != '" + (-1L) + "'", long41 == (-1L));
        org.junit.Assert.assertNotNull(period42);
        org.junit.Assert.assertNotNull(duration44);
        org.junit.Assert.assertTrue("'" + long45 + "' != '" + (-1L) + "'", long45 == (-1L));
        org.junit.Assert.assertNotNull(periodType48);
        org.junit.Assert.assertNotNull(period50);
        org.junit.Assert.assertNotNull(period51);
        org.junit.Assert.assertNotNull(duration53);
        org.junit.Assert.assertTrue("'" + long54 + "' != '" + (-1L) + "'", long54 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(duration57);
        org.junit.Assert.assertNotNull(periodType58);
        org.junit.Assert.assertNotNull(period59);
        org.junit.Assert.assertNotNull(periodType61);
        org.junit.Assert.assertNotNull(period68);
        org.junit.Assert.assertNotNull(period70);
        org.junit.Assert.assertNotNull(durationFieldType72);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + (-1) + "'", int73 == (-1));
    }

    @Test
    public void test17847() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17847");
        org.joda.time.PeriodType periodType3 = org.joda.time.PeriodType.seconds();
        org.joda.time.PeriodType periodType4 = periodType3.withMinutesRemoved();
        org.joda.time.Chronology chronology5 = null;
        org.joda.time.MutablePeriod mutablePeriod6 = new org.joda.time.MutablePeriod((long) 0, (long) (short) 100, periodType3, chronology5);
        org.joda.time.Duration duration8 = org.joda.time.Duration.standardMinutes((-1L));
        long long9 = duration8.getStandardMinutes();
        org.joda.time.Duration duration11 = org.joda.time.Duration.standardMinutes((-1L));
        long long12 = duration11.getStandardMinutes();
        boolean boolean13 = duration8.isLongerThan((org.joda.time.ReadableDuration) duration11);
        org.joda.time.Period period14 = duration11.toPeriod();
        org.joda.time.Minutes minutes15 = duration11.toStandardMinutes();
        mutablePeriod6.add((org.joda.time.ReadableDuration) duration11);
        org.joda.time.Duration duration18 = duration11.withMillis((long) (short) 10);
        org.joda.time.Duration duration19 = duration18.toDuration();
        org.joda.time.ReadableInstant readableInstant20 = null;
        org.joda.time.PeriodType periodType22 = org.joda.time.PeriodType.time();
        org.joda.time.MutablePeriod mutablePeriod23 = new org.joda.time.MutablePeriod((long) 'a', periodType22);
        org.joda.time.Period period24 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration19, readableInstant20, periodType22);
        org.joda.time.PeriodType periodType25 = periodType22.withSecondsRemoved();
        org.joda.time.Duration duration27 = org.joda.time.Duration.standardMinutes((-1L));
        long long28 = duration27.getStandardMinutes();
        org.joda.time.Period period29 = duration27.toPeriod();
        java.lang.String str30 = duration27.toString();
        org.joda.time.ReadableInstant readableInstant32 = null;
        org.joda.time.ReadableInstant readableInstant33 = null;
        org.joda.time.Duration duration35 = org.joda.time.Duration.standardMinutes((-1L));
        long long36 = duration35.getStandardMinutes();
        org.joda.time.Period period37 = duration35.toPeriod();
        org.joda.time.Duration duration39 = org.joda.time.Duration.standardMinutes((-1L));
        long long40 = duration39.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant41 = null;
        org.joda.time.Period period42 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration39, readableInstant41);
        org.joda.time.PeriodType periodType43 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology44 = null;
        org.joda.time.Period period45 = duration39.toPeriod(periodType43, chronology44);
        org.joda.time.Period period46 = duration35.toPeriod(periodType43);
        org.joda.time.MutablePeriod mutablePeriod47 = new org.joda.time.MutablePeriod(readableInstant32, readableInstant33, periodType43);
        org.joda.time.Period period49 = org.joda.time.Period.seconds((int) '#');
        int int50 = period49.getMillis();
        org.joda.time.DurationFieldType durationFieldType51 = org.joda.time.DurationFieldType.years();
        org.joda.time.Period period53 = period49.withField(durationFieldType51, (int) (short) 10);
        int int54 = periodType43.indexOf(durationFieldType51);
        org.joda.time.Period period55 = new org.joda.time.Period(0L, periodType43);
        org.joda.time.Chronology chronology56 = null;
        org.joda.time.Period period57 = duration27.toPeriod(periodType43, chronology56);
        org.joda.time.Period period58 = duration27.toPeriod();
        org.joda.time.Period period60 = period58.multipliedBy(6);
        boolean boolean61 = periodType22.equals((java.lang.Object) period58);
        org.joda.time.PeriodType periodType62 = periodType22.withHoursRemoved();
        org.joda.time.Chronology chronology63 = null;
        org.joda.time.Period period64 = new org.joda.time.Period(100L, periodType62, chronology63);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Duration duration65 = new org.joda.time.Duration((java.lang.Object) periodType62);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: No duration converter found for type: org.joda.time.PeriodType");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(periodType3);
        org.junit.Assert.assertNotNull(periodType4);
        org.junit.Assert.assertNotNull(duration8);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + (-1L) + "'", long9 == (-1L));
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + (-1L) + "'", long12 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(period14);
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertNotNull(duration18);
        org.junit.Assert.assertNotNull(duration19);
        org.junit.Assert.assertNotNull(periodType22);
        org.junit.Assert.assertNotNull(periodType25);
        org.junit.Assert.assertNotNull(duration27);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + (-1L) + "'", long28 == (-1L));
        org.junit.Assert.assertNotNull(period29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "PT-60S" + "'", str30, "PT-60S");
        org.junit.Assert.assertNotNull(duration35);
        org.junit.Assert.assertTrue("'" + long36 + "' != '" + (-1L) + "'", long36 == (-1L));
        org.junit.Assert.assertNotNull(period37);
        org.junit.Assert.assertNotNull(duration39);
        org.junit.Assert.assertTrue("'" + long40 + "' != '" + (-1L) + "'", long40 == (-1L));
        org.junit.Assert.assertNotNull(periodType43);
        org.junit.Assert.assertNotNull(period45);
        org.junit.Assert.assertNotNull(period46);
        org.junit.Assert.assertNotNull(period49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertNotNull(durationFieldType51);
        org.junit.Assert.assertNotNull(period53);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
        org.junit.Assert.assertNotNull(period57);
        org.junit.Assert.assertNotNull(period58);
        org.junit.Assert.assertNotNull(period60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(periodType62);
    }

    @Test
    public void test17848() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17848");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.Duration duration2 = org.joda.time.Duration.standardMinutes((-1L));
        long long3 = duration2.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant4 = null;
        org.joda.time.Period period5 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration2, readableInstant4);
        org.joda.time.PeriodType periodType6 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology7 = null;
        org.joda.time.Period period8 = duration2.toPeriod(periodType6, chronology7);
        org.joda.time.ReadableInstant readableInstant9 = null;
        org.joda.time.Period period10 = duration2.toPeriodTo(readableInstant9);
        org.joda.time.Chronology chronology11 = null;
        org.joda.time.Period period12 = duration2.toPeriod(chronology11);
        org.joda.time.Duration duration14 = org.joda.time.Duration.standardMinutes((-1L));
        long long15 = duration14.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant16 = null;
        org.joda.time.Period period17 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration14, readableInstant16);
        org.joda.time.PeriodType periodType18 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology19 = null;
        org.joda.time.Period period20 = duration14.toPeriod(periodType18, chronology19);
        org.joda.time.Duration duration23 = duration14.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration25 = org.joda.time.Duration.standardMinutes((-1L));
        long long26 = duration25.getStandardMinutes();
        org.joda.time.Duration duration28 = org.joda.time.Duration.standardMinutes((-1L));
        long long29 = duration28.getStandardMinutes();
        boolean boolean30 = duration25.isLongerThan((org.joda.time.ReadableDuration) duration28);
        org.joda.time.Duration duration32 = duration28.withMillis((long) 1);
        boolean boolean33 = duration23.isShorterThan((org.joda.time.ReadableDuration) duration28);
        boolean boolean34 = duration2.isShorterThan((org.joda.time.ReadableDuration) duration23);
        org.joda.time.MutablePeriod mutablePeriod35 = new org.joda.time.MutablePeriod(readableInstant0, (org.joda.time.ReadableDuration) duration2);
        org.joda.time.Duration duration38 = new org.joda.time.Duration(37943L, 60L);
        boolean boolean39 = duration2.isEqual((org.joda.time.ReadableDuration) duration38);
        java.lang.Object obj40 = null;
        boolean boolean41 = duration38.equals(obj40);
        org.junit.Assert.assertNotNull(duration2);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + (-1L) + "'", long3 == (-1L));
        org.junit.Assert.assertNotNull(periodType6);
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + (-1L) + "'", long15 == (-1L));
        org.junit.Assert.assertNotNull(periodType18);
        org.junit.Assert.assertNotNull(period20);
        org.junit.Assert.assertNotNull(duration23);
        org.junit.Assert.assertNotNull(duration25);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + (-1L) + "'", long26 == (-1L));
        org.junit.Assert.assertNotNull(duration28);
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + (-1L) + "'", long29 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(duration32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
    }

    @Test
    public void test17849() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17849");
        org.joda.time.PeriodType periodType2 = org.joda.time.PeriodType.seconds();
        org.joda.time.PeriodType periodType3 = periodType2.withMinutesRemoved();
        org.joda.time.Chronology chronology4 = null;
        org.joda.time.MutablePeriod mutablePeriod5 = new org.joda.time.MutablePeriod((long) 0, (long) (short) 100, periodType2, chronology4);
        org.joda.time.Duration duration7 = org.joda.time.Duration.standardMinutes((-1L));
        long long8 = duration7.getStandardMinutes();
        org.joda.time.Duration duration10 = org.joda.time.Duration.standardMinutes((-1L));
        long long11 = duration10.getStandardMinutes();
        boolean boolean12 = duration7.isLongerThan((org.joda.time.ReadableDuration) duration10);
        org.joda.time.Period period13 = duration10.toPeriod();
        org.joda.time.Minutes minutes14 = duration10.toStandardMinutes();
        mutablePeriod5.add((org.joda.time.ReadableDuration) duration10);
        mutablePeriod5.setSeconds(8);
        org.joda.time.ReadableInstant readableInstant18 = null;
        org.joda.time.ReadableInstant readableInstant19 = null;
        mutablePeriod5.setPeriod(readableInstant18, readableInstant19);
        org.joda.time.Chronology chronology22 = null;
        org.joda.time.MutablePeriod mutablePeriod23 = new org.joda.time.MutablePeriod(1L, chronology22);
        org.joda.time.Period period25 = org.joda.time.Period.seconds((int) '#');
        mutablePeriod23.setPeriod((org.joda.time.ReadablePeriod) period25);
        mutablePeriod23.addMillis((int) (short) 1);
        mutablePeriod23.setPeriod(8, (int) (byte) -1, 1, (int) (byte) 10, (int) (byte) -1, (int) (short) -1, 10, (int) (byte) -1);
        int[] intArray38 = mutablePeriod23.getValues();
        org.joda.time.ReadableInstant readableInstant39 = null;
        org.joda.time.Duration duration41 = org.joda.time.Duration.standardMinutes((-1L));
        long long42 = duration41.getStandardMinutes();
        org.joda.time.Period period43 = duration41.toPeriod();
        org.joda.time.Duration duration45 = org.joda.time.Duration.standardMinutes((-1L));
        long long46 = duration45.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant47 = null;
        org.joda.time.Period period48 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration45, readableInstant47);
        org.joda.time.PeriodType periodType49 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology50 = null;
        org.joda.time.Period period51 = duration45.toPeriod(periodType49, chronology50);
        org.joda.time.Period period52 = duration41.toPeriod(periodType49);
        org.joda.time.Duration duration54 = org.joda.time.Duration.standardMinutes((-1L));
        long long55 = duration54.getStandardMinutes();
        boolean boolean56 = duration41.isLongerThan((org.joda.time.ReadableDuration) duration54);
        org.joda.time.PeriodType periodType57 = org.joda.time.PeriodType.weeks();
        org.joda.time.Period period58 = new org.joda.time.Period(readableInstant39, (org.joda.time.ReadableDuration) duration54, periodType57);
        org.joda.time.Chronology chronology59 = null;
        mutablePeriod23.setPeriod((org.joda.time.ReadableDuration) duration54, chronology59);
        java.lang.String str61 = duration54.toString();
        org.joda.time.Chronology chronology62 = null;
        mutablePeriod5.setPeriod((org.joda.time.ReadableDuration) duration54, chronology62);
        org.joda.time.ReadableInstant readableInstant64 = null;
        org.joda.time.MutablePeriod mutablePeriod65 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration54, readableInstant64);
        org.joda.time.Duration duration67 = duration54.minus(10L);
        org.joda.time.ReadableInstant readableInstant68 = null;
        org.joda.time.MutablePeriod mutablePeriod69 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration54, readableInstant68);
        org.joda.time.Duration duration71 = duration54.withMillis((long) (-52));
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(periodType3);
        org.junit.Assert.assertNotNull(duration7);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + (-1L) + "'", long8 == (-1L));
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + (-1L) + "'", long11 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(period13);
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertNotNull(period25);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[8, -1, 1, 10, -1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(duration41);
        org.junit.Assert.assertTrue("'" + long42 + "' != '" + (-1L) + "'", long42 == (-1L));
        org.junit.Assert.assertNotNull(period43);
        org.junit.Assert.assertNotNull(duration45);
        org.junit.Assert.assertTrue("'" + long46 + "' != '" + (-1L) + "'", long46 == (-1L));
        org.junit.Assert.assertNotNull(periodType49);
        org.junit.Assert.assertNotNull(period51);
        org.junit.Assert.assertNotNull(period52);
        org.junit.Assert.assertNotNull(duration54);
        org.junit.Assert.assertTrue("'" + long55 + "' != '" + (-1L) + "'", long55 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(periodType57);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "PT-60S" + "'", str61, "PT-60S");
        org.junit.Assert.assertNotNull(duration67);
        org.junit.Assert.assertNotNull(duration71);
    }

    @Test
    public void test17850() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17850");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((-1L));
        long long2 = duration1.getStandardMinutes();
        org.joda.time.Duration duration4 = org.joda.time.Duration.standardMinutes((-1L));
        long long5 = duration4.getStandardMinutes();
        boolean boolean6 = duration1.isLongerThan((org.joda.time.ReadableDuration) duration4);
        org.joda.time.Period period7 = duration4.toPeriod();
        org.joda.time.Minutes minutes8 = duration4.toStandardMinutes();
        org.joda.time.Duration duration10 = org.joda.time.Duration.standardMinutes((-1L));
        long long11 = duration10.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant12 = null;
        org.joda.time.Period period13 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration10, readableInstant12);
        org.joda.time.PeriodType periodType14 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology15 = null;
        org.joda.time.Period period16 = duration10.toPeriod(periodType14, chronology15);
        org.joda.time.Duration duration19 = duration10.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration20 = duration4.plus((org.joda.time.ReadableDuration) duration19);
        org.joda.time.ReadableInstant readableInstant21 = null;
        org.joda.time.Duration duration25 = org.joda.time.Duration.standardMinutes((-1L));
        long long26 = duration25.getStandardMinutes();
        org.joda.time.Period period27 = duration25.toPeriod();
        org.joda.time.Duration duration29 = org.joda.time.Duration.standardMinutes((-1L));
        long long30 = duration29.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant31 = null;
        org.joda.time.Period period32 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration29, readableInstant31);
        org.joda.time.PeriodType periodType33 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology34 = null;
        org.joda.time.Period period35 = duration29.toPeriod(periodType33, chronology34);
        org.joda.time.Period period36 = duration25.toPeriod(periodType33);
        org.joda.time.Chronology chronology37 = null;
        org.joda.time.MutablePeriod mutablePeriod38 = new org.joda.time.MutablePeriod(1L, (long) (byte) 100, periodType33, chronology37);
        org.joda.time.Period period39 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration4, readableInstant21, periodType33);
        org.joda.time.ReadableInstant readableInstant40 = null;
        org.joda.time.Period period41 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration4, readableInstant40);
        org.joda.time.Period period43 = period41.minusHours((int) (byte) 10);
        org.joda.time.Chronology chronology45 = null;
        org.joda.time.MutablePeriod mutablePeriod46 = new org.joda.time.MutablePeriod(1L, chronology45);
        org.joda.time.Chronology chronology48 = null;
        org.joda.time.MutablePeriod mutablePeriod49 = new org.joda.time.MutablePeriod(1L, chronology48);
        mutablePeriod46.add((org.joda.time.ReadablePeriod) mutablePeriod49);
        mutablePeriod46.addMonths((int) (short) -1);
        org.joda.time.DurationFieldType[] durationFieldTypeArray53 = mutablePeriod46.getFieldTypes();
        mutablePeriod46.setSeconds((int) (byte) -1);
        org.joda.time.MutablePeriod mutablePeriod60 = new org.joda.time.MutablePeriod(1, 0, (int) (byte) 1, 100);
        mutablePeriod60.setSeconds(0);
        org.joda.time.Chronology chronology64 = null;
        mutablePeriod60.setPeriod((long) 0, chronology64);
        int int66 = mutablePeriod60.getMonths();
        mutablePeriod46.setPeriod((org.joda.time.ReadablePeriod) mutablePeriod60);
        org.joda.time.Chronology chronology70 = null;
        mutablePeriod60.setPeriod((long) (byte) 100, 0L, chronology70);
        org.joda.time.Period period72 = period41.minus((org.joda.time.ReadablePeriod) mutablePeriod60);
        org.joda.time.MutablePeriod mutablePeriod73 = mutablePeriod60.copy();
        org.joda.time.Chronology chronology75 = null;
        mutablePeriod60.setPeriod((long) (short) 100, chronology75);
        int int77 = mutablePeriod60.getWeeks();
        org.joda.time.DurationFieldType[] durationFieldTypeArray78 = mutablePeriod60.getFieldTypes();
        org.joda.time.PeriodType periodType79 = org.joda.time.PeriodType.forFields(durationFieldTypeArray78);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + (-1L) + "'", long2 == (-1L));
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + (-1L) + "'", long5 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + (-1L) + "'", long11 == (-1L));
        org.junit.Assert.assertNotNull(periodType14);
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertNotNull(duration19);
        org.junit.Assert.assertNotNull(duration20);
        org.junit.Assert.assertNotNull(duration25);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + (-1L) + "'", long26 == (-1L));
        org.junit.Assert.assertNotNull(period27);
        org.junit.Assert.assertNotNull(duration29);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + (-1L) + "'", long30 == (-1L));
        org.junit.Assert.assertNotNull(periodType33);
        org.junit.Assert.assertNotNull(period35);
        org.junit.Assert.assertNotNull(period36);
        org.junit.Assert.assertNotNull(period43);
        org.junit.Assert.assertNotNull(durationFieldTypeArray53);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 0 + "'", int66 == 0);
        org.junit.Assert.assertNotNull(period72);
        org.junit.Assert.assertNotNull(mutablePeriod73);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 0 + "'", int77 == 0);
        org.junit.Assert.assertNotNull(durationFieldTypeArray78);
        org.junit.Assert.assertNotNull(periodType79);
    }

    @Test
    public void test17851() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17851");
        org.joda.time.Period period1 = org.joda.time.Period.seconds(37);
        org.junit.Assert.assertNotNull(period1);
    }

    @Test
    public void test17852() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17852");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableInstant readableInstant1 = null;
        org.joda.time.format.PeriodPrinter periodPrinter2 = null;
        org.joda.time.format.PeriodParser periodParser3 = null;
        org.joda.time.format.PeriodFormatter periodFormatter4 = new org.joda.time.format.PeriodFormatter(periodPrinter2, periodParser3);
        boolean boolean5 = periodFormatter4.isPrinter();
        org.joda.time.format.PeriodParser periodParser6 = periodFormatter4.getParser();
        java.util.Locale locale7 = null;
        org.joda.time.format.PeriodFormatter periodFormatter8 = periodFormatter4.withLocale(locale7);
        java.util.Locale locale9 = null;
        org.joda.time.format.PeriodFormatter periodFormatter10 = periodFormatter4.withLocale(locale9);
        org.joda.time.ReadableInstant readableInstant15 = null;
        org.joda.time.ReadableInstant readableInstant16 = null;
        org.joda.time.Duration duration18 = org.joda.time.Duration.standardMinutes((-1L));
        long long19 = duration18.getStandardMinutes();
        org.joda.time.Period period20 = duration18.toPeriod();
        org.joda.time.Duration duration22 = org.joda.time.Duration.standardMinutes((-1L));
        long long23 = duration22.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant24 = null;
        org.joda.time.Period period25 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration22, readableInstant24);
        org.joda.time.PeriodType periodType26 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology27 = null;
        org.joda.time.Period period28 = duration22.toPeriod(periodType26, chronology27);
        org.joda.time.Period period29 = duration18.toPeriod(periodType26);
        org.joda.time.MutablePeriod mutablePeriod30 = new org.joda.time.MutablePeriod(readableInstant15, readableInstant16, periodType26);
        org.joda.time.Chronology chronology31 = null;
        org.joda.time.MutablePeriod mutablePeriod32 = new org.joda.time.MutablePeriod((long) 10, (long) (short) 0, periodType26, chronology31);
        org.joda.time.Chronology chronology33 = null;
        org.joda.time.MutablePeriod mutablePeriod34 = new org.joda.time.MutablePeriod(10L, (long) 7, periodType26, chronology33);
        org.joda.time.PeriodType periodType35 = periodType26.withMinutesRemoved();
        org.joda.time.format.PeriodFormatter periodFormatter36 = periodFormatter4.withParseType(periodType26);
        org.joda.time.MutablePeriod mutablePeriod37 = new org.joda.time.MutablePeriod(readableInstant0, readableInstant1, periodType26);
        mutablePeriod37.add((long) (byte) 1);
        java.lang.Object obj40 = null;
        org.joda.time.Chronology chronology41 = null;
        org.joda.time.MutablePeriod mutablePeriod42 = new org.joda.time.MutablePeriod(obj40, chronology41);
        int int43 = mutablePeriod42.getSeconds();
        org.joda.time.Chronology chronology46 = null;
        org.joda.time.MutablePeriod mutablePeriod47 = new org.joda.time.MutablePeriod((-60000L), 0L, chronology46);
        org.joda.time.DurationFieldType[] durationFieldTypeArray48 = mutablePeriod47.getFieldTypes();
        mutablePeriod42.setPeriod((org.joda.time.ReadablePeriod) mutablePeriod47);
        // The following exception was thrown during execution in test generation
        try {
            mutablePeriod37.add((org.joda.time.ReadablePeriod) mutablePeriod47);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Period does not support field 'minutes'");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(periodParser6);
        org.junit.Assert.assertNotNull(periodFormatter8);
        org.junit.Assert.assertNotNull(periodFormatter10);
        org.junit.Assert.assertNotNull(duration18);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + (-1L) + "'", long19 == (-1L));
        org.junit.Assert.assertNotNull(period20);
        org.junit.Assert.assertNotNull(duration22);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + (-1L) + "'", long23 == (-1L));
        org.junit.Assert.assertNotNull(periodType26);
        org.junit.Assert.assertNotNull(period28);
        org.junit.Assert.assertNotNull(period29);
        org.junit.Assert.assertNotNull(periodType35);
        org.junit.Assert.assertNotNull(periodFormatter36);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertNotNull(durationFieldTypeArray48);
    }

    @Test
    public void test17853() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17853");
        org.joda.time.Period period1 = org.joda.time.Period.parse("P101YT97M");
        org.joda.time.Period period3 = period1.plusSeconds((int) (short) 0);
        org.joda.time.Period period5 = org.joda.time.Period.seconds((int) (short) 1);
        org.joda.time.DurationFieldType durationFieldType6 = org.joda.time.DurationFieldType.days();
        int int7 = period5.get(durationFieldType6);
        boolean boolean8 = period1.isSupported(durationFieldType6);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Hours hours9 = period1.toStandardHours();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Cannot convert to Hours as this period contains years and years vary in length");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(period3);
        org.junit.Assert.assertNotNull(period5);
        org.junit.Assert.assertNotNull(durationFieldType6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
    }

    @Test
    public void test17854() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17854");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.Duration duration2 = org.joda.time.Duration.standardHours((long) 10);
        org.joda.time.Duration duration4 = org.joda.time.Duration.standardMinutes((-1L));
        long long5 = duration4.getStandardMinutes();
        org.joda.time.Duration duration7 = org.joda.time.Duration.standardMinutes((-1L));
        long long8 = duration7.getStandardMinutes();
        boolean boolean9 = duration4.isLongerThan((org.joda.time.ReadableDuration) duration7);
        org.joda.time.Period period10 = duration7.toPeriod();
        org.joda.time.Minutes minutes11 = duration7.toStandardMinutes();
        boolean boolean12 = duration2.isEqual((org.joda.time.ReadableDuration) duration7);
        org.joda.time.Duration duration14 = org.joda.time.Duration.standardMinutes((-1L));
        long long15 = duration14.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant16 = null;
        org.joda.time.Period period17 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration14, readableInstant16);
        org.joda.time.PeriodType periodType18 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology19 = null;
        org.joda.time.Period period20 = duration14.toPeriod(periodType18, chronology19);
        org.joda.time.Duration duration23 = duration14.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration25 = org.joda.time.Duration.standardMinutes((-1L));
        long long26 = duration25.getStandardMinutes();
        org.joda.time.Duration duration28 = org.joda.time.Duration.standardMinutes((-1L));
        long long29 = duration28.getStandardMinutes();
        boolean boolean30 = duration25.isLongerThan((org.joda.time.ReadableDuration) duration28);
        org.joda.time.Duration duration32 = duration28.withMillis((long) 1);
        boolean boolean33 = duration23.isShorterThan((org.joda.time.ReadableDuration) duration28);
        boolean boolean34 = duration7.isEqual((org.joda.time.ReadableDuration) duration28);
        org.joda.time.ReadableInstant readableInstant35 = null;
        org.joda.time.MutablePeriod mutablePeriod36 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration7, readableInstant35);
        org.joda.time.Duration duration38 = org.joda.time.Duration.standardMinutes((-1L));
        long long39 = duration38.getStandardMinutes();
        org.joda.time.Period period40 = duration38.toPeriod();
        org.joda.time.Duration duration42 = org.joda.time.Duration.standardMinutes((-1L));
        long long43 = duration42.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant44 = null;
        org.joda.time.Period period45 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration42, readableInstant44);
        org.joda.time.PeriodType periodType46 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology47 = null;
        org.joda.time.Period period48 = duration42.toPeriod(periodType46, chronology47);
        org.joda.time.Period period49 = duration38.toPeriod(periodType46);
        org.joda.time.Duration duration51 = org.joda.time.Duration.standardMinutes((-1L));
        long long52 = duration51.getStandardMinutes();
        boolean boolean53 = duration38.isLongerThan((org.joda.time.ReadableDuration) duration51);
        org.joda.time.Duration duration55 = duration51.withMillis((long) 0);
        org.joda.time.PeriodType periodType56 = org.joda.time.PeriodType.weeks();
        org.joda.time.Period period57 = duration55.toPeriod(periodType56);
        org.joda.time.Period period58 = new org.joda.time.Period(readableInstant0, (org.joda.time.ReadableDuration) duration7, periodType56);
        org.joda.time.PeriodType periodType59 = periodType56.withMillisRemoved();
        org.joda.time.PeriodType periodType60 = periodType56.withDaysRemoved();
        org.joda.time.Period period62 = org.joda.time.Period.seconds((int) '#');
        int int63 = period62.getMillis();
        org.joda.time.Period period65 = period62.withMillis((int) '#');
        int int66 = period62.size();
        org.joda.time.Period period68 = period62.withMinutes(0);
        org.joda.time.Period period70 = period62.plusHours((int) (byte) 0);
        org.joda.time.Period period72 = period70.minusWeeks(100);
        org.joda.time.Period period73 = period72.toPeriod();
        org.joda.time.Period period75 = period73.withDays((int) (short) -1);
        org.joda.time.Period period77 = org.joda.time.Period.seconds((int) '#');
        int int78 = period77.getMillis();
        org.joda.time.Period period80 = period77.withMillis((int) '#');
        org.joda.time.DurationFieldType durationFieldType81 = org.joda.time.DurationFieldType.halfdays();
        boolean boolean82 = period77.isSupported(durationFieldType81);
        org.joda.time.Chronology chronology84 = null;
        org.joda.time.MutablePeriod mutablePeriod85 = new org.joda.time.MutablePeriod(1L, chronology84);
        org.joda.time.Period period87 = org.joda.time.Period.seconds((int) '#');
        mutablePeriod85.setPeriod((org.joda.time.ReadablePeriod) period87);
        org.joda.time.DurationFieldType durationFieldType89 = org.joda.time.DurationFieldType.years();
        java.lang.String str90 = durationFieldType89.getName();
        boolean boolean91 = mutablePeriod85.isSupported(durationFieldType89);
        int int92 = period77.get(durationFieldType89);
        int int93 = period73.indexOf(durationFieldType89);
        boolean boolean94 = periodType56.isSupported(durationFieldType89);
        org.junit.Assert.assertNotNull(duration2);
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + (-1L) + "'", long5 == (-1L));
        org.junit.Assert.assertNotNull(duration7);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + (-1L) + "'", long8 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + (-1L) + "'", long15 == (-1L));
        org.junit.Assert.assertNotNull(periodType18);
        org.junit.Assert.assertNotNull(period20);
        org.junit.Assert.assertNotNull(duration23);
        org.junit.Assert.assertNotNull(duration25);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + (-1L) + "'", long26 == (-1L));
        org.junit.Assert.assertNotNull(duration28);
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + (-1L) + "'", long29 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(duration32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(duration38);
        org.junit.Assert.assertTrue("'" + long39 + "' != '" + (-1L) + "'", long39 == (-1L));
        org.junit.Assert.assertNotNull(period40);
        org.junit.Assert.assertNotNull(duration42);
        org.junit.Assert.assertTrue("'" + long43 + "' != '" + (-1L) + "'", long43 == (-1L));
        org.junit.Assert.assertNotNull(periodType46);
        org.junit.Assert.assertNotNull(period48);
        org.junit.Assert.assertNotNull(period49);
        org.junit.Assert.assertNotNull(duration51);
        org.junit.Assert.assertTrue("'" + long52 + "' != '" + (-1L) + "'", long52 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(duration55);
        org.junit.Assert.assertNotNull(periodType56);
        org.junit.Assert.assertNotNull(period57);
        org.junit.Assert.assertNotNull(periodType59);
        org.junit.Assert.assertNotNull(periodType60);
        org.junit.Assert.assertNotNull(period62);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 0 + "'", int63 == 0);
        org.junit.Assert.assertNotNull(period65);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 8 + "'", int66 == 8);
        org.junit.Assert.assertNotNull(period68);
        org.junit.Assert.assertNotNull(period70);
        org.junit.Assert.assertNotNull(period72);
        org.junit.Assert.assertNotNull(period73);
        org.junit.Assert.assertNotNull(period75);
        org.junit.Assert.assertNotNull(period77);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 0 + "'", int78 == 0);
        org.junit.Assert.assertNotNull(period80);
        org.junit.Assert.assertNotNull(durationFieldType81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(period87);
        org.junit.Assert.assertNotNull(durationFieldType89);
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "years" + "'", str90, "years");
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + 0 + "'", int92 == 0);
        org.junit.Assert.assertTrue("'" + int93 + "' != '" + 0 + "'", int93 == 0);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
    }

    @Test
    public void test17855() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17855");
        org.joda.time.ReadableInstant readableInstant1 = null;
        org.joda.time.Duration duration3 = org.joda.time.Duration.standardMinutes((-1L));
        long long4 = duration3.getStandardMinutes();
        org.joda.time.Period period5 = duration3.toPeriod();
        org.joda.time.Duration duration7 = org.joda.time.Duration.standardMinutes((-1L));
        long long8 = duration7.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant9 = null;
        org.joda.time.Period period10 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration7, readableInstant9);
        org.joda.time.PeriodType periodType11 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology12 = null;
        org.joda.time.Period period13 = duration7.toPeriod(periodType11, chronology12);
        org.joda.time.Period period14 = duration3.toPeriod(periodType11);
        org.joda.time.Duration duration16 = org.joda.time.Duration.standardMinutes((-1L));
        long long17 = duration16.getStandardMinutes();
        boolean boolean18 = duration3.isLongerThan((org.joda.time.ReadableDuration) duration16);
        org.joda.time.Duration duration20 = org.joda.time.Duration.standardMinutes((-1L));
        long long21 = duration20.getStandardMinutes();
        org.joda.time.Duration duration23 = org.joda.time.Duration.standardMinutes((-1L));
        long long24 = duration23.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant25 = null;
        org.joda.time.Period period26 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration23, readableInstant25);
        org.joda.time.PeriodType periodType27 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology28 = null;
        org.joda.time.Period period29 = duration23.toPeriod(periodType27, chronology28);
        org.joda.time.Duration duration30 = duration23.toDuration();
        org.joda.time.Duration duration32 = duration20.withDurationAdded((org.joda.time.ReadableDuration) duration30, 100);
        int int33 = duration16.compareTo((org.joda.time.ReadableDuration) duration32);
        org.joda.time.Duration duration34 = duration16.toDuration();
        org.joda.time.Duration duration36 = org.joda.time.Duration.standardMinutes((-1L));
        long long37 = duration36.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant38 = null;
        org.joda.time.Period period39 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration36, readableInstant38);
        org.joda.time.PeriodType periodType40 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology41 = null;
        org.joda.time.Period period42 = duration36.toPeriod(periodType40, chronology41);
        org.joda.time.Duration duration45 = duration36.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.ReadableInstant readableInstant46 = null;
        org.joda.time.ReadableInstant readableInstant47 = null;
        org.joda.time.Duration duration49 = org.joda.time.Duration.standardMinutes((-1L));
        long long50 = duration49.getStandardMinutes();
        org.joda.time.Period period51 = duration49.toPeriod();
        org.joda.time.Duration duration53 = org.joda.time.Duration.standardMinutes((-1L));
        long long54 = duration53.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant55 = null;
        org.joda.time.Period period56 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration53, readableInstant55);
        org.joda.time.PeriodType periodType57 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology58 = null;
        org.joda.time.Period period59 = duration53.toPeriod(periodType57, chronology58);
        org.joda.time.Period period60 = duration49.toPeriod(periodType57);
        org.joda.time.MutablePeriod mutablePeriod61 = new org.joda.time.MutablePeriod(readableInstant46, readableInstant47, periodType57);
        org.joda.time.Chronology chronology62 = null;
        org.joda.time.Period period63 = duration36.toPeriod(periodType57, chronology62);
        org.joda.time.Period period64 = new org.joda.time.Period(readableInstant1, (org.joda.time.ReadableDuration) duration16, periodType57);
        org.joda.time.Period period65 = new org.joda.time.Period((-1L), periodType57);
        org.joda.time.PeriodType periodType66 = periodType57.withWeeksRemoved();
        org.joda.time.PeriodType periodType67 = periodType66.withMonthsRemoved();
        org.joda.time.PeriodType periodType68 = periodType67.withYearsRemoved();
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + (-1L) + "'", long4 == (-1L));
        org.junit.Assert.assertNotNull(period5);
        org.junit.Assert.assertNotNull(duration7);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + (-1L) + "'", long8 == (-1L));
        org.junit.Assert.assertNotNull(periodType11);
        org.junit.Assert.assertNotNull(period13);
        org.junit.Assert.assertNotNull(period14);
        org.junit.Assert.assertNotNull(duration16);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + (-1L) + "'", long17 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(duration20);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + (-1L) + "'", long21 == (-1L));
        org.junit.Assert.assertNotNull(duration23);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + (-1L) + "'", long24 == (-1L));
        org.junit.Assert.assertNotNull(periodType27);
        org.junit.Assert.assertNotNull(period29);
        org.junit.Assert.assertNotNull(duration30);
        org.junit.Assert.assertNotNull(duration32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 1 + "'", int33 == 1);
        org.junit.Assert.assertNotNull(duration34);
        org.junit.Assert.assertNotNull(duration36);
        org.junit.Assert.assertTrue("'" + long37 + "' != '" + (-1L) + "'", long37 == (-1L));
        org.junit.Assert.assertNotNull(periodType40);
        org.junit.Assert.assertNotNull(period42);
        org.junit.Assert.assertNotNull(duration45);
        org.junit.Assert.assertNotNull(duration49);
        org.junit.Assert.assertTrue("'" + long50 + "' != '" + (-1L) + "'", long50 == (-1L));
        org.junit.Assert.assertNotNull(period51);
        org.junit.Assert.assertNotNull(duration53);
        org.junit.Assert.assertTrue("'" + long54 + "' != '" + (-1L) + "'", long54 == (-1L));
        org.junit.Assert.assertNotNull(periodType57);
        org.junit.Assert.assertNotNull(period59);
        org.junit.Assert.assertNotNull(period60);
        org.junit.Assert.assertNotNull(period63);
        org.junit.Assert.assertNotNull(periodType66);
        org.junit.Assert.assertNotNull(periodType67);
        org.junit.Assert.assertNotNull(periodType68);
    }

    @Test
    public void test17856() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17856");
        org.joda.time.Period period8 = new org.joda.time.Period((int) 'a', 101, (int) (short) 10, (int) '4', (-10), (-60), 997, (int) (byte) 1);
        org.joda.time.Duration duration10 = org.joda.time.Duration.standardMinutes((-1L));
        long long11 = duration10.getStandardMinutes();
        org.joda.time.Period period12 = duration10.toPeriod();
        org.joda.time.Period period14 = period12.withMonths(0);
        int int15 = period12.size();
        org.joda.time.MutablePeriod mutablePeriod16 = period12.toMutablePeriod();
        mutablePeriod16.addYears(100);
        org.joda.time.Chronology chronology20 = null;
        org.joda.time.MutablePeriod mutablePeriod21 = new org.joda.time.MutablePeriod(1L, chronology20);
        org.joda.time.Period period23 = org.joda.time.Period.seconds((int) '#');
        mutablePeriod21.setPeriod((org.joda.time.ReadablePeriod) period23);
        org.joda.time.DurationFieldType durationFieldType25 = org.joda.time.DurationFieldType.years();
        java.lang.String str26 = durationFieldType25.getName();
        boolean boolean27 = mutablePeriod21.isSupported(durationFieldType25);
        mutablePeriod21.setSeconds((int) (byte) -1);
        java.lang.Object obj30 = mutablePeriod21.clone();
        org.joda.time.Period period31 = mutablePeriod21.toPeriod();
        org.joda.time.Chronology chronology33 = null;
        org.joda.time.MutablePeriod mutablePeriod34 = new org.joda.time.MutablePeriod(1L, chronology33);
        org.joda.time.Period period36 = org.joda.time.Period.seconds((int) '#');
        mutablePeriod34.setPeriod((org.joda.time.ReadablePeriod) period36);
        mutablePeriod34.setPeriod((long) '#');
        int int40 = mutablePeriod34.getMinutes();
        org.joda.time.DurationFieldType durationFieldType41 = org.joda.time.DurationFieldType.weeks();
        int int42 = mutablePeriod34.indexOf(durationFieldType41);
        org.joda.time.Period period44 = period31.withField(durationFieldType41, (-1));
        int int45 = mutablePeriod16.get(durationFieldType41);
        org.joda.time.Period period47 = period8.withFieldAdded(durationFieldType41, 997);
        org.joda.time.Period period49 = period47.minusYears(0);
        org.joda.time.Period period51 = period49.minusDays(0);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + (-1L) + "'", long11 == (-1L));
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertNotNull(period14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 8 + "'", int15 == 8);
        org.junit.Assert.assertNotNull(mutablePeriod16);
        org.junit.Assert.assertNotNull(period23);
        org.junit.Assert.assertNotNull(durationFieldType25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "years" + "'", str26, "years");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertEquals(obj30.toString(), "PT-1S");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj30), "PT-1S");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj30), "PT-1S");
        org.junit.Assert.assertNotNull(period31);
        org.junit.Assert.assertNotNull(period36);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertNotNull(durationFieldType41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 2 + "'", int42 == 2);
        org.junit.Assert.assertNotNull(period44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertNotNull(period47);
        org.junit.Assert.assertNotNull(period49);
        org.junit.Assert.assertNotNull(period51);
    }

    @Test
    public void test17857() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17857");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.Duration duration2 = org.joda.time.Duration.standardMinutes((-1L));
        long long3 = duration2.getStandardMinutes();
        org.joda.time.Period period4 = duration2.toPeriod();
        org.joda.time.Duration duration6 = org.joda.time.Duration.standardMinutes((-1L));
        long long7 = duration6.getStandardMinutes();
        org.joda.time.Duration duration9 = org.joda.time.Duration.standardMinutes((-1L));
        long long10 = duration9.getStandardMinutes();
        boolean boolean11 = duration6.isLongerThan((org.joda.time.ReadableDuration) duration9);
        org.joda.time.Duration duration13 = duration9.withMillis(1L);
        org.joda.time.Duration duration15 = org.joda.time.Duration.standardMinutes((-1L));
        long long16 = duration15.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant17 = null;
        org.joda.time.Period period18 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration15, readableInstant17);
        org.joda.time.PeriodType periodType19 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology20 = null;
        org.joda.time.Period period21 = duration15.toPeriod(periodType19, chronology20);
        org.joda.time.Duration duration22 = duration15.toDuration();
        int int23 = duration9.compareTo((org.joda.time.ReadableDuration) duration15);
        boolean boolean24 = duration2.isLongerThan((org.joda.time.ReadableDuration) duration9);
        org.joda.time.Duration duration26 = org.joda.time.Duration.standardMinutes((-1L));
        long long27 = duration26.getStandardMinutes();
        org.joda.time.Duration duration29 = org.joda.time.Duration.standardMinutes((-1L));
        long long30 = duration29.getStandardMinutes();
        boolean boolean31 = duration26.isLongerThan((org.joda.time.ReadableDuration) duration29);
        org.joda.time.Duration duration33 = duration29.withMillis(1L);
        long long34 = duration33.getMillis();
        int int35 = duration9.compareTo((org.joda.time.ReadableDuration) duration33);
        org.joda.time.ReadableInstant readableInstant36 = null;
        org.joda.time.PeriodType periodType37 = org.joda.time.PeriodType.hours();
        org.joda.time.Period period38 = duration33.toPeriodTo(readableInstant36, periodType37);
        org.joda.time.MutablePeriod mutablePeriod39 = new org.joda.time.MutablePeriod(readableInstant0, (org.joda.time.ReadableDuration) duration33);
        org.joda.time.Duration duration41 = new org.joda.time.Duration((long) (short) 100);
        org.joda.time.ReadableInstant readableInstant42 = null;
        org.joda.time.ReadableInstant readableInstant44 = null;
        org.joda.time.ReadableInstant readableInstant45 = null;
        org.joda.time.Duration duration47 = org.joda.time.Duration.standardMinutes((-1L));
        long long48 = duration47.getStandardMinutes();
        org.joda.time.Period period49 = duration47.toPeriod();
        org.joda.time.Duration duration51 = org.joda.time.Duration.standardMinutes((-1L));
        long long52 = duration51.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant53 = null;
        org.joda.time.Period period54 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration51, readableInstant53);
        org.joda.time.PeriodType periodType55 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology56 = null;
        org.joda.time.Period period57 = duration51.toPeriod(periodType55, chronology56);
        org.joda.time.Period period58 = duration47.toPeriod(periodType55);
        org.joda.time.MutablePeriod mutablePeriod59 = new org.joda.time.MutablePeriod(readableInstant44, readableInstant45, periodType55);
        org.joda.time.Period period61 = org.joda.time.Period.seconds((int) '#');
        int int62 = period61.getMillis();
        org.joda.time.DurationFieldType durationFieldType63 = org.joda.time.DurationFieldType.years();
        org.joda.time.Period period65 = period61.withField(durationFieldType63, (int) (short) 10);
        int int66 = periodType55.indexOf(durationFieldType63);
        org.joda.time.Period period67 = new org.joda.time.Period(0L, periodType55);
        org.joda.time.Period period68 = duration41.toPeriodTo(readableInstant42, periodType55);
        long long69 = duration41.getMillis();
        org.joda.time.Duration duration70 = duration33.minus((org.joda.time.ReadableDuration) duration41);
        org.joda.time.Period period71 = duration41.toPeriod();
        org.joda.time.Period period73 = period71.plusMillis(135);
        org.junit.Assert.assertNotNull(duration2);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + (-1L) + "'", long3 == (-1L));
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(duration6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + (-1L) + "'", long10 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertNotNull(duration15);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + (-1L) + "'", long16 == (-1L));
        org.junit.Assert.assertNotNull(periodType19);
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertNotNull(duration22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(duration26);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + (-1L) + "'", long27 == (-1L));
        org.junit.Assert.assertNotNull(duration29);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + (-1L) + "'", long30 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(duration33);
        org.junit.Assert.assertTrue("'" + long34 + "' != '" + 1L + "'", long34 == 1L);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertNotNull(periodType37);
        org.junit.Assert.assertNotNull(period38);
        org.junit.Assert.assertNotNull(duration47);
        org.junit.Assert.assertTrue("'" + long48 + "' != '" + (-1L) + "'", long48 == (-1L));
        org.junit.Assert.assertNotNull(period49);
        org.junit.Assert.assertNotNull(duration51);
        org.junit.Assert.assertTrue("'" + long52 + "' != '" + (-1L) + "'", long52 == (-1L));
        org.junit.Assert.assertNotNull(periodType55);
        org.junit.Assert.assertNotNull(period57);
        org.junit.Assert.assertNotNull(period58);
        org.junit.Assert.assertNotNull(period61);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 0 + "'", int62 == 0);
        org.junit.Assert.assertNotNull(durationFieldType63);
        org.junit.Assert.assertNotNull(period65);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + (-1) + "'", int66 == (-1));
        org.junit.Assert.assertNotNull(period68);
        org.junit.Assert.assertTrue("'" + long69 + "' != '" + 100L + "'", long69 == 100L);
        org.junit.Assert.assertNotNull(duration70);
        org.junit.Assert.assertNotNull(period71);
        org.junit.Assert.assertNotNull(period73);
    }

    @Test
    public void test17858() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17858");
        org.joda.time.Duration duration1 = new org.joda.time.Duration((long) (short) 100);
        org.joda.time.ReadableInstant readableInstant2 = null;
        org.joda.time.ReadableInstant readableInstant4 = null;
        org.joda.time.ReadableInstant readableInstant5 = null;
        org.joda.time.Duration duration7 = org.joda.time.Duration.standardMinutes((-1L));
        long long8 = duration7.getStandardMinutes();
        org.joda.time.Period period9 = duration7.toPeriod();
        org.joda.time.Duration duration11 = org.joda.time.Duration.standardMinutes((-1L));
        long long12 = duration11.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant13 = null;
        org.joda.time.Period period14 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration11, readableInstant13);
        org.joda.time.PeriodType periodType15 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology16 = null;
        org.joda.time.Period period17 = duration11.toPeriod(periodType15, chronology16);
        org.joda.time.Period period18 = duration7.toPeriod(periodType15);
        org.joda.time.MutablePeriod mutablePeriod19 = new org.joda.time.MutablePeriod(readableInstant4, readableInstant5, periodType15);
        org.joda.time.Period period21 = org.joda.time.Period.seconds((int) '#');
        int int22 = period21.getMillis();
        org.joda.time.DurationFieldType durationFieldType23 = org.joda.time.DurationFieldType.years();
        org.joda.time.Period period25 = period21.withField(durationFieldType23, (int) (short) 10);
        int int26 = periodType15.indexOf(durationFieldType23);
        org.joda.time.Period period27 = new org.joda.time.Period(0L, periodType15);
        org.joda.time.Period period28 = duration1.toPeriodTo(readableInstant2, periodType15);
        org.joda.time.Period period30 = org.joda.time.Period.seconds((int) '#');
        org.joda.time.Period period31 = period30.toPeriod();
        org.joda.time.Period period33 = period31.minusWeeks(10);
        org.joda.time.Period period35 = period31.minusSeconds((int) (byte) 1);
        boolean boolean36 = period28.equals((java.lang.Object) (byte) 1);
        org.joda.time.Period period38 = period28.plusMonths((int) (byte) 0);
        java.lang.String str39 = period28.toString();
        org.junit.Assert.assertNotNull(duration7);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + (-1L) + "'", long8 == (-1L));
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + (-1L) + "'", long12 == (-1L));
        org.junit.Assert.assertNotNull(periodType15);
        org.junit.Assert.assertNotNull(period17);
        org.junit.Assert.assertNotNull(period18);
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNotNull(durationFieldType23);
        org.junit.Assert.assertNotNull(period25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNotNull(period28);
        org.junit.Assert.assertNotNull(period30);
        org.junit.Assert.assertNotNull(period31);
        org.junit.Assert.assertNotNull(period33);
        org.junit.Assert.assertNotNull(period35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(period38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "P0D" + "'", str39, "P0D");
    }

    @Test
    public void test17859() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17859");
        org.joda.time.Period period1 = org.joda.time.Period.seconds((int) '#');
        org.joda.time.Period period2 = period1.toPeriod();
        org.joda.time.Period period4 = period2.minusWeeks(10);
        org.joda.time.Period period6 = period2.multipliedBy((int) (short) 10);
        org.joda.time.Period period8 = period6.minusMillis((int) (short) 10);
        org.joda.time.Period period9 = period8.toPeriod();
        int int10 = period9.getYears();
        org.joda.time.Period period12 = period9.withMinutes((-32));
        org.joda.time.MutablePeriod mutablePeriod17 = new org.joda.time.MutablePeriod((int) (short) 0, (int) 'a', (int) (byte) -1, 97);
        org.joda.time.DurationFieldType durationFieldType18 = org.joda.time.DurationFieldType.weekyears();
        boolean boolean19 = mutablePeriod17.isSupported(durationFieldType18);
        mutablePeriod17.addHours(12);
        org.joda.time.Chronology chronology24 = null;
        mutablePeriod17.setPeriod(36000L, 0L, chronology24);
        org.joda.time.Period period26 = period12.withFields((org.joda.time.ReadablePeriod) mutablePeriod17);
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(period2);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertNotNull(durationFieldType18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(period26);
    }

    @Test
    public void test17860() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17860");
        org.joda.time.Duration duration1 = new org.joda.time.Duration((long) (short) 100);
        org.joda.time.ReadableInstant readableInstant2 = null;
        org.joda.time.ReadableInstant readableInstant4 = null;
        org.joda.time.ReadableInstant readableInstant5 = null;
        org.joda.time.Duration duration7 = org.joda.time.Duration.standardMinutes((-1L));
        long long8 = duration7.getStandardMinutes();
        org.joda.time.Period period9 = duration7.toPeriod();
        org.joda.time.Duration duration11 = org.joda.time.Duration.standardMinutes((-1L));
        long long12 = duration11.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant13 = null;
        org.joda.time.Period period14 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration11, readableInstant13);
        org.joda.time.PeriodType periodType15 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology16 = null;
        org.joda.time.Period period17 = duration11.toPeriod(periodType15, chronology16);
        org.joda.time.Period period18 = duration7.toPeriod(periodType15);
        org.joda.time.MutablePeriod mutablePeriod19 = new org.joda.time.MutablePeriod(readableInstant4, readableInstant5, periodType15);
        org.joda.time.Period period21 = org.joda.time.Period.seconds((int) '#');
        int int22 = period21.getMillis();
        org.joda.time.DurationFieldType durationFieldType23 = org.joda.time.DurationFieldType.years();
        org.joda.time.Period period25 = period21.withField(durationFieldType23, (int) (short) 10);
        int int26 = periodType15.indexOf(durationFieldType23);
        org.joda.time.Period period27 = new org.joda.time.Period(0L, periodType15);
        org.joda.time.Period period28 = duration1.toPeriodTo(readableInstant2, periodType15);
        long long29 = duration1.getStandardMinutes();
        org.junit.Assert.assertNotNull(duration7);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + (-1L) + "'", long8 == (-1L));
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + (-1L) + "'", long12 == (-1L));
        org.junit.Assert.assertNotNull(periodType15);
        org.junit.Assert.assertNotNull(period17);
        org.junit.Assert.assertNotNull(period18);
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNotNull(durationFieldType23);
        org.junit.Assert.assertNotNull(period25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNotNull(period28);
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + 0L + "'", long29 == 0L);
    }

    @Test
    public void test17861() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17861");
        java.lang.Object obj0 = null;
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.MutablePeriod mutablePeriod3 = new org.joda.time.MutablePeriod(1L, chronology2);
        org.joda.time.Chronology chronology5 = null;
        org.joda.time.MutablePeriod mutablePeriod6 = new org.joda.time.MutablePeriod(1L, chronology5);
        mutablePeriod3.add((org.joda.time.ReadablePeriod) mutablePeriod6);
        mutablePeriod3.setMillis((int) (short) 0);
        org.joda.time.Chronology chronology11 = null;
        mutablePeriod3.add((long) (short) 0, chronology11);
        org.joda.time.PeriodType periodType15 = org.joda.time.PeriodType.seconds();
        org.joda.time.PeriodType periodType16 = periodType15.withMinutesRemoved();
        org.joda.time.Chronology chronology17 = null;
        org.joda.time.MutablePeriod mutablePeriod18 = new org.joda.time.MutablePeriod((long) 0, (long) (short) 100, periodType15, chronology17);
        org.joda.time.PeriodType periodType19 = periodType15.withMillisRemoved();
        org.joda.time.Chronology chronology20 = null;
        org.joda.time.MutablePeriod mutablePeriod21 = new org.joda.time.MutablePeriod((java.lang.Object) mutablePeriod3, periodType19, chronology20);
        org.joda.time.format.PeriodPrinter periodPrinter22 = null;
        org.joda.time.format.PeriodParser periodParser23 = null;
        org.joda.time.format.PeriodFormatter periodFormatter24 = new org.joda.time.format.PeriodFormatter(periodPrinter22, periodParser23);
        org.joda.time.format.PeriodPrinter periodPrinter25 = periodFormatter24.getPrinter();
        boolean boolean26 = periodFormatter24.isParser();
        java.util.Locale locale27 = periodFormatter24.getLocale();
        boolean boolean28 = periodType19.equals((java.lang.Object) periodFormatter24);
        int int29 = periodType19.size();
        org.joda.time.Duration duration31 = org.joda.time.Duration.standardMinutes((-1L));
        long long32 = duration31.getStandardMinutes();
        org.joda.time.Duration duration34 = org.joda.time.Duration.standardMinutes((-1L));
        long long35 = duration34.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant36 = null;
        org.joda.time.Period period37 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration34, readableInstant36);
        org.joda.time.PeriodType periodType38 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology39 = null;
        org.joda.time.Period period40 = duration34.toPeriod(periodType38, chronology39);
        org.joda.time.Duration duration41 = duration34.toDuration();
        org.joda.time.Duration duration43 = duration31.withDurationAdded((org.joda.time.ReadableDuration) duration41, 100);
        org.joda.time.Duration duration45 = org.joda.time.Duration.standardMinutes((-1L));
        long long46 = duration45.getStandardMinutes();
        org.joda.time.Period period47 = duration45.toPeriod();
        org.joda.time.Duration duration49 = org.joda.time.Duration.standardMinutes((-1L));
        long long50 = duration49.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant51 = null;
        org.joda.time.Period period52 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration49, readableInstant51);
        org.joda.time.PeriodType periodType53 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology54 = null;
        org.joda.time.Period period55 = duration49.toPeriod(periodType53, chronology54);
        org.joda.time.Period period56 = duration45.toPeriod(periodType53);
        org.joda.time.Duration duration58 = org.joda.time.Duration.standardMinutes((-1L));
        long long59 = duration58.getStandardMinutes();
        boolean boolean60 = duration45.isLongerThan((org.joda.time.ReadableDuration) duration58);
        boolean boolean61 = duration41.isEqual((org.joda.time.ReadableDuration) duration45);
        boolean boolean62 = periodType19.equals((java.lang.Object) duration41);
        org.joda.time.Chronology chronology63 = null;
        org.joda.time.MutablePeriod mutablePeriod64 = new org.joda.time.MutablePeriod(obj0, periodType19, chronology63);
        org.junit.Assert.assertNotNull(periodType15);
        org.junit.Assert.assertNotNull(periodType16);
        org.junit.Assert.assertNotNull(periodType19);
        org.junit.Assert.assertNull(periodPrinter25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNull(locale27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1 + "'", int29 == 1);
        org.junit.Assert.assertNotNull(duration31);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + (-1L) + "'", long32 == (-1L));
        org.junit.Assert.assertNotNull(duration34);
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + (-1L) + "'", long35 == (-1L));
        org.junit.Assert.assertNotNull(periodType38);
        org.junit.Assert.assertNotNull(period40);
        org.junit.Assert.assertNotNull(duration41);
        org.junit.Assert.assertNotNull(duration43);
        org.junit.Assert.assertNotNull(duration45);
        org.junit.Assert.assertTrue("'" + long46 + "' != '" + (-1L) + "'", long46 == (-1L));
        org.junit.Assert.assertNotNull(period47);
        org.junit.Assert.assertNotNull(duration49);
        org.junit.Assert.assertTrue("'" + long50 + "' != '" + (-1L) + "'", long50 == (-1L));
        org.junit.Assert.assertNotNull(periodType53);
        org.junit.Assert.assertNotNull(period55);
        org.junit.Assert.assertNotNull(period56);
        org.junit.Assert.assertNotNull(duration58);
        org.junit.Assert.assertTrue("'" + long59 + "' != '" + (-1L) + "'", long59 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
    }

    @Test
    public void test17862() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17862");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.Duration duration2 = org.joda.time.Duration.standardMinutes((-1L));
        long long3 = duration2.getStandardMinutes();
        org.joda.time.Period period4 = duration2.toPeriod();
        org.joda.time.Duration duration6 = org.joda.time.Duration.standardMinutes((-1L));
        long long7 = duration6.getStandardMinutes();
        org.joda.time.Duration duration9 = org.joda.time.Duration.standardMinutes((-1L));
        long long10 = duration9.getStandardMinutes();
        boolean boolean11 = duration6.isLongerThan((org.joda.time.ReadableDuration) duration9);
        org.joda.time.Duration duration13 = duration9.withMillis(1L);
        org.joda.time.Duration duration15 = org.joda.time.Duration.standardMinutes((-1L));
        long long16 = duration15.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant17 = null;
        org.joda.time.Period period18 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration15, readableInstant17);
        org.joda.time.PeriodType periodType19 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology20 = null;
        org.joda.time.Period period21 = duration15.toPeriod(periodType19, chronology20);
        org.joda.time.Duration duration22 = duration15.toDuration();
        int int23 = duration9.compareTo((org.joda.time.ReadableDuration) duration15);
        boolean boolean24 = duration2.isLongerThan((org.joda.time.ReadableDuration) duration9);
        org.joda.time.Duration duration28 = org.joda.time.Duration.standardMinutes((-1L));
        long long29 = duration28.getStandardMinutes();
        org.joda.time.Period period30 = duration28.toPeriod();
        org.joda.time.Duration duration32 = org.joda.time.Duration.standardMinutes((-1L));
        long long33 = duration32.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant34 = null;
        org.joda.time.Period period35 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration32, readableInstant34);
        org.joda.time.PeriodType periodType36 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology37 = null;
        org.joda.time.Period period38 = duration32.toPeriod(periodType36, chronology37);
        org.joda.time.Period period39 = duration28.toPeriod(periodType36);
        org.joda.time.Chronology chronology40 = null;
        org.joda.time.MutablePeriod mutablePeriod41 = new org.joda.time.MutablePeriod(1L, (long) (byte) 100, periodType36, chronology40);
        org.joda.time.PeriodType periodType42 = periodType36.withMillisRemoved();
        org.joda.time.PeriodType periodType43 = periodType42.withSecondsRemoved();
        org.joda.time.Period period44 = new org.joda.time.Period(readableInstant0, (org.joda.time.ReadableDuration) duration2, periodType43);
        org.joda.time.ReadableInstant readableInstant45 = null;
        org.joda.time.MutablePeriod mutablePeriod46 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration2, readableInstant45);
        org.joda.time.Duration duration48 = duration2.plus((-60L));
        org.joda.time.Duration duration50 = org.joda.time.Duration.standardMinutes((-1L));
        long long51 = duration50.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant52 = null;
        org.joda.time.Period period53 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration50, readableInstant52);
        org.joda.time.PeriodType periodType54 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology55 = null;
        org.joda.time.Period period56 = duration50.toPeriod(periodType54, chronology55);
        org.joda.time.Duration duration59 = duration50.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration61 = org.joda.time.Duration.standardHours((long) 10);
        org.joda.time.Duration duration63 = org.joda.time.Duration.standardMinutes((-1L));
        long long64 = duration63.getStandardMinutes();
        org.joda.time.Duration duration66 = org.joda.time.Duration.standardMinutes((-1L));
        long long67 = duration66.getStandardMinutes();
        boolean boolean68 = duration63.isLongerThan((org.joda.time.ReadableDuration) duration66);
        org.joda.time.Period period69 = duration66.toPeriod();
        org.joda.time.Minutes minutes70 = duration66.toStandardMinutes();
        boolean boolean71 = duration61.isEqual((org.joda.time.ReadableDuration) duration66);
        boolean boolean72 = duration50.isShorterThan((org.joda.time.ReadableDuration) duration61);
        org.joda.time.Duration duration75 = duration61.withDurationAdded((-2L), (int) (byte) 10);
        boolean boolean76 = duration48.isLongerThan((org.joda.time.ReadableDuration) duration61);
        org.joda.time.Period period80 = org.joda.time.Period.weeks(35);
        org.joda.time.PeriodType periodType81 = period80.getPeriodType();
        org.joda.time.Chronology chronology82 = null;
        org.joda.time.MutablePeriod mutablePeriod83 = new org.joda.time.MutablePeriod(100L, (long) 1, periodType81, chronology82);
        java.lang.String str84 = periodType81.getName();
        org.joda.time.Chronology chronology85 = null;
        org.joda.time.Period period86 = duration48.toPeriod(periodType81, chronology85);
        org.joda.time.Period period88 = period86.withSeconds((-997));
        org.junit.Assert.assertNotNull(duration2);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + (-1L) + "'", long3 == (-1L));
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(duration6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + (-1L) + "'", long10 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertNotNull(duration15);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + (-1L) + "'", long16 == (-1L));
        org.junit.Assert.assertNotNull(periodType19);
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertNotNull(duration22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(duration28);
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + (-1L) + "'", long29 == (-1L));
        org.junit.Assert.assertNotNull(period30);
        org.junit.Assert.assertNotNull(duration32);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + (-1L) + "'", long33 == (-1L));
        org.junit.Assert.assertNotNull(periodType36);
        org.junit.Assert.assertNotNull(period38);
        org.junit.Assert.assertNotNull(period39);
        org.junit.Assert.assertNotNull(periodType42);
        org.junit.Assert.assertNotNull(periodType43);
        org.junit.Assert.assertNotNull(duration48);
        org.junit.Assert.assertNotNull(duration50);
        org.junit.Assert.assertTrue("'" + long51 + "' != '" + (-1L) + "'", long51 == (-1L));
        org.junit.Assert.assertNotNull(periodType54);
        org.junit.Assert.assertNotNull(period56);
        org.junit.Assert.assertNotNull(duration59);
        org.junit.Assert.assertNotNull(duration61);
        org.junit.Assert.assertNotNull(duration63);
        org.junit.Assert.assertTrue("'" + long64 + "' != '" + (-1L) + "'", long64 == (-1L));
        org.junit.Assert.assertNotNull(duration66);
        org.junit.Assert.assertTrue("'" + long67 + "' != '" + (-1L) + "'", long67 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(period69);
        org.junit.Assert.assertNotNull(minutes70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(duration75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(period80);
        org.junit.Assert.assertNotNull(periodType81);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "Standard" + "'", str84, "Standard");
        org.junit.Assert.assertNotNull(period86);
        org.junit.Assert.assertNotNull(period88);
    }

    @Test
    public void test17863() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17863");
        org.joda.time.Period period1 = org.joda.time.Period.weeks((-17));
        org.joda.time.MutablePeriod mutablePeriod2 = period1.toMutablePeriod();
        org.joda.time.Chronology chronology4 = null;
        org.joda.time.MutablePeriod mutablePeriod5 = new org.joda.time.MutablePeriod(1L, chronology4);
        org.joda.time.Chronology chronology7 = null;
        org.joda.time.MutablePeriod mutablePeriod8 = new org.joda.time.MutablePeriod(1L, chronology7);
        mutablePeriod5.add((org.joda.time.ReadablePeriod) mutablePeriod8);
        org.joda.time.Duration duration11 = org.joda.time.Duration.standardMinutes((-1L));
        long long12 = duration11.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant13 = null;
        org.joda.time.Period period14 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration11, readableInstant13);
        mutablePeriod8.setPeriod((org.joda.time.ReadablePeriod) period14);
        org.joda.time.Period period16 = period14.toPeriod();
        org.joda.time.Period period18 = period16.plusMinutes((int) (short) -1);
        org.joda.time.Period period20 = period18.withSeconds((int) '#');
        org.joda.time.Period period21 = period18.normalizedStandard();
        org.joda.time.Period period23 = period18.minusDays(0);
        mutablePeriod2.mergePeriod((org.joda.time.ReadablePeriod) period23);
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(mutablePeriod2);
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + (-1L) + "'", long12 == (-1L));
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertNotNull(period18);
        org.junit.Assert.assertNotNull(period20);
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertNotNull(period23);
    }

    @Test
    public void test17864() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17864");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((-1L));
        long long2 = duration1.getStandardMinutes();
        org.joda.time.Duration duration4 = org.joda.time.Duration.standardMinutes((-1L));
        long long5 = duration4.getStandardMinutes();
        boolean boolean6 = duration1.isLongerThan((org.joda.time.ReadableDuration) duration4);
        org.joda.time.Period period7 = duration4.toPeriod();
        org.joda.time.Minutes minutes8 = duration4.toStandardMinutes();
        org.joda.time.Duration duration10 = org.joda.time.Duration.standardMinutes((-1L));
        long long11 = duration10.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant12 = null;
        org.joda.time.Period period13 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration10, readableInstant12);
        org.joda.time.PeriodType periodType14 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology15 = null;
        org.joda.time.Period period16 = duration10.toPeriod(periodType14, chronology15);
        org.joda.time.Duration duration19 = duration10.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration20 = duration4.plus((org.joda.time.ReadableDuration) duration19);
        org.joda.time.Period period21 = duration19.toPeriod();
        org.joda.time.Duration duration23 = org.joda.time.Duration.standardMinutes((-1L));
        long long24 = duration23.getStandardMinutes();
        org.joda.time.Duration duration26 = org.joda.time.Duration.standardMinutes((-1L));
        long long27 = duration26.getStandardMinutes();
        boolean boolean28 = duration23.isLongerThan((org.joda.time.ReadableDuration) duration26);
        org.joda.time.Period period29 = duration26.toPeriod();
        org.joda.time.Minutes minutes30 = duration26.toStandardMinutes();
        org.joda.time.Minutes minutes31 = duration26.toStandardMinutes();
        org.joda.time.Duration duration32 = duration19.minus((org.joda.time.ReadableDuration) duration26);
        org.joda.time.Duration duration33 = duration19.toDuration();
        org.joda.time.Duration duration34 = duration19.toDuration();
        long long35 = duration19.getStandardDays();
        org.joda.time.ReadableInstant readableInstant36 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Interval interval37 = duration19.toIntervalTo(readableInstant36);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: The end instant must be greater or equal to the start");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + (-1L) + "'", long2 == (-1L));
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + (-1L) + "'", long5 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + (-1L) + "'", long11 == (-1L));
        org.junit.Assert.assertNotNull(periodType14);
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertNotNull(duration19);
        org.junit.Assert.assertNotNull(duration20);
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertNotNull(duration23);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + (-1L) + "'", long24 == (-1L));
        org.junit.Assert.assertNotNull(duration26);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + (-1L) + "'", long27 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(period29);
        org.junit.Assert.assertNotNull(minutes30);
        org.junit.Assert.assertNotNull(minutes31);
        org.junit.Assert.assertNotNull(duration32);
        org.junit.Assert.assertNotNull(duration33);
        org.junit.Assert.assertNotNull(duration34);
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + 0L + "'", long35 == 0L);
    }

    @Test
    public void test17865() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17865");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableInstant readableInstant1 = null;
        org.joda.time.Duration duration5 = org.joda.time.Duration.standardMinutes((-1L));
        long long6 = duration5.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.Period period8 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration5, readableInstant7);
        org.joda.time.Duration duration10 = org.joda.time.Duration.standardMinutes((-1L));
        long long11 = duration10.getStandardMinutes();
        org.joda.time.Period period12 = duration10.toPeriod();
        boolean boolean13 = duration5.isLongerThan((org.joda.time.ReadableDuration) duration10);
        org.joda.time.ReadableInstant readableInstant14 = null;
        org.joda.time.PeriodType periodType17 = org.joda.time.PeriodType.seconds();
        org.joda.time.PeriodType periodType18 = periodType17.withMinutesRemoved();
        org.joda.time.Chronology chronology19 = null;
        org.joda.time.MutablePeriod mutablePeriod20 = new org.joda.time.MutablePeriod((long) 0, (long) (short) 100, periodType17, chronology19);
        org.joda.time.PeriodType periodType21 = periodType17.withMillisRemoved();
        org.joda.time.Period period22 = duration5.toPeriodTo(readableInstant14, periodType21);
        org.joda.time.Chronology chronology23 = null;
        org.joda.time.Period period24 = new org.joda.time.Period((long) (short) 1, (long) 1, periodType21, chronology23);
        org.joda.time.PeriodType periodType25 = periodType21.withYearsRemoved();
        org.joda.time.MutablePeriod mutablePeriod26 = new org.joda.time.MutablePeriod(readableInstant0, readableInstant1, periodType21);
        int int27 = mutablePeriod26.getMinutes();
        org.junit.Assert.assertNotNull(duration5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + (-1L) + "'", long11 == (-1L));
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(periodType17);
        org.junit.Assert.assertNotNull(periodType18);
        org.junit.Assert.assertNotNull(periodType21);
        org.junit.Assert.assertNotNull(period22);
        org.junit.Assert.assertNotNull(periodType25);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
    }

    @Test
    public void test17866() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17866");
        org.joda.time.Period period2 = new org.joda.time.Period(0L, (long) (byte) -1);
        org.joda.time.Period period4 = period2.withMinutes((int) (byte) 0);
        org.joda.time.Duration duration5 = period4.toStandardDuration();
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(duration5);
    }

    @Test
    public void test17867() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17867");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.Period period3 = new org.joda.time.Period(1L, (long) (byte) 10, chronology2);
        org.joda.time.Period period4 = period3.toPeriod();
        org.joda.time.Period period6 = period4.plusYears((int) 'a');
        org.joda.time.Period period8 = period4.plusDays((int) (short) 10);
        org.joda.time.Chronology chronology10 = null;
        org.joda.time.MutablePeriod mutablePeriod11 = new org.joda.time.MutablePeriod(1L, chronology10);
        org.joda.time.Chronology chronology13 = null;
        org.joda.time.MutablePeriod mutablePeriod14 = new org.joda.time.MutablePeriod(1L, chronology13);
        mutablePeriod11.add((org.joda.time.ReadablePeriod) mutablePeriod14);
        mutablePeriod11.setMillis((int) (short) 0);
        org.joda.time.PeriodType periodType20 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period21 = new org.joda.time.Period(10L, periodType20);
        org.joda.time.PeriodType periodType22 = periodType20.withWeeksRemoved();
        org.joda.time.MutablePeriod mutablePeriod23 = new org.joda.time.MutablePeriod((long) (byte) 0, periodType20);
        org.joda.time.Duration duration25 = org.joda.time.Duration.standardMinutes((-1L));
        long long26 = duration25.getStandardMinutes();
        org.joda.time.PeriodType periodType27 = null;
        org.joda.time.Period period28 = duration25.toPeriod(periodType27);
        org.joda.time.Chronology chronology29 = null;
        mutablePeriod23.setPeriod((org.joda.time.ReadableDuration) duration25, chronology29);
        org.joda.time.PeriodType periodType31 = mutablePeriod23.getPeriodType();
        org.joda.time.MutablePeriod mutablePeriod32 = mutablePeriod23.toMutablePeriod();
        mutablePeriod11.add((org.joda.time.ReadablePeriod) mutablePeriod32);
        org.joda.time.Period period34 = period8.withFields((org.joda.time.ReadablePeriod) mutablePeriod32);
        org.joda.time.Duration duration36 = org.joda.time.Duration.standardMinutes((-1L));
        long long37 = duration36.getStandardMinutes();
        org.joda.time.Period period38 = duration36.toPeriod();
        org.joda.time.Period period40 = period38.withMonths(0);
        int int41 = period38.size();
        org.joda.time.MutablePeriod mutablePeriod42 = period38.toMutablePeriod();
        org.joda.time.PeriodType periodType45 = org.joda.time.PeriodType.seconds();
        org.joda.time.PeriodType periodType46 = periodType45.withMinutesRemoved();
        org.joda.time.Chronology chronology47 = null;
        org.joda.time.MutablePeriod mutablePeriod48 = new org.joda.time.MutablePeriod((long) 0, (long) (short) 100, periodType45, chronology47);
        org.joda.time.Duration duration50 = org.joda.time.Duration.standardMinutes((-1L));
        long long51 = duration50.getStandardMinutes();
        org.joda.time.Duration duration53 = org.joda.time.Duration.standardMinutes((-1L));
        long long54 = duration53.getStandardMinutes();
        boolean boolean55 = duration50.isLongerThan((org.joda.time.ReadableDuration) duration53);
        org.joda.time.Period period56 = duration53.toPeriod();
        org.joda.time.Minutes minutes57 = duration53.toStandardMinutes();
        mutablePeriod48.add((org.joda.time.ReadableDuration) duration53);
        org.joda.time.Duration duration60 = duration53.withMillis((long) (short) 10);
        org.joda.time.Duration duration61 = duration60.toDuration();
        org.joda.time.Duration duration63 = duration61.plus((long) (byte) 100);
        boolean boolean64 = period38.equals((java.lang.Object) duration61);
        boolean boolean65 = period34.equals((java.lang.Object) period38);
        java.lang.Class<?> wildcardClass66 = period38.getClass();
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertNotNull(periodType20);
        org.junit.Assert.assertNotNull(periodType22);
        org.junit.Assert.assertNotNull(duration25);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + (-1L) + "'", long26 == (-1L));
        org.junit.Assert.assertNotNull(period28);
        org.junit.Assert.assertNotNull(periodType31);
        org.junit.Assert.assertNotNull(mutablePeriod32);
        org.junit.Assert.assertNotNull(period34);
        org.junit.Assert.assertNotNull(duration36);
        org.junit.Assert.assertTrue("'" + long37 + "' != '" + (-1L) + "'", long37 == (-1L));
        org.junit.Assert.assertNotNull(period38);
        org.junit.Assert.assertNotNull(period40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 8 + "'", int41 == 8);
        org.junit.Assert.assertNotNull(mutablePeriod42);
        org.junit.Assert.assertNotNull(periodType45);
        org.junit.Assert.assertNotNull(periodType46);
        org.junit.Assert.assertNotNull(duration50);
        org.junit.Assert.assertTrue("'" + long51 + "' != '" + (-1L) + "'", long51 == (-1L));
        org.junit.Assert.assertNotNull(duration53);
        org.junit.Assert.assertTrue("'" + long54 + "' != '" + (-1L) + "'", long54 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(period56);
        org.junit.Assert.assertNotNull(minutes57);
        org.junit.Assert.assertNotNull(duration60);
        org.junit.Assert.assertNotNull(duration61);
        org.junit.Assert.assertNotNull(duration63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(wildcardClass66);
    }

    @Test
    public void test17868() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17868");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((-1L));
        long long2 = duration1.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.Period period4 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration1, readableInstant3);
        org.joda.time.PeriodType periodType5 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology6 = null;
        org.joda.time.Period period7 = duration1.toPeriod(periodType5, chronology6);
        org.joda.time.Duration duration10 = duration1.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration12 = org.joda.time.Duration.standardHours((long) 10);
        org.joda.time.Duration duration14 = org.joda.time.Duration.standardMinutes((-1L));
        long long15 = duration14.getStandardMinutes();
        org.joda.time.Duration duration17 = org.joda.time.Duration.standardMinutes((-1L));
        long long18 = duration17.getStandardMinutes();
        boolean boolean19 = duration14.isLongerThan((org.joda.time.ReadableDuration) duration17);
        org.joda.time.Period period20 = duration17.toPeriod();
        org.joda.time.Minutes minutes21 = duration17.toStandardMinutes();
        boolean boolean22 = duration12.isEqual((org.joda.time.ReadableDuration) duration17);
        boolean boolean23 = duration1.isShorterThan((org.joda.time.ReadableDuration) duration12);
        org.joda.time.Duration duration25 = org.joda.time.Duration.standardMinutes((-1L));
        long long26 = duration25.getStandardMinutes();
        org.joda.time.Period period27 = duration25.toPeriod();
        org.joda.time.Duration duration29 = org.joda.time.Duration.standardMinutes((-1L));
        long long30 = duration29.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant31 = null;
        org.joda.time.Period period32 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration29, readableInstant31);
        org.joda.time.PeriodType periodType33 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology34 = null;
        org.joda.time.Period period35 = duration29.toPeriod(periodType33, chronology34);
        org.joda.time.Period period36 = duration25.toPeriod(periodType33);
        org.joda.time.Duration duration38 = org.joda.time.Duration.standardMinutes((-1L));
        long long39 = duration38.getStandardMinutes();
        boolean boolean40 = duration25.isLongerThan((org.joda.time.ReadableDuration) duration38);
        org.joda.time.Duration duration42 = org.joda.time.Duration.standardMinutes((-1L));
        long long43 = duration42.getStandardMinutes();
        org.joda.time.Duration duration45 = org.joda.time.Duration.standardMinutes((-1L));
        long long46 = duration45.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant47 = null;
        org.joda.time.Period period48 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration45, readableInstant47);
        org.joda.time.PeriodType periodType49 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology50 = null;
        org.joda.time.Period period51 = duration45.toPeriod(periodType49, chronology50);
        org.joda.time.Duration duration52 = duration45.toDuration();
        org.joda.time.Duration duration54 = duration42.withDurationAdded((org.joda.time.ReadableDuration) duration52, 100);
        int int55 = duration38.compareTo((org.joda.time.ReadableDuration) duration54);
        org.joda.time.Duration duration56 = duration38.toDuration();
        java.lang.String str57 = duration56.toString();
        boolean boolean58 = duration12.equals((java.lang.Object) str57);
        long long59 = duration12.getStandardHours();
        org.joda.time.ReadableInstant readableInstant60 = null;
        org.joda.time.Period period61 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration12, readableInstant60);
        org.joda.time.ReadableInstant readableInstant62 = null;
        org.joda.time.Period period63 = duration12.toPeriodFrom(readableInstant62);
        org.joda.time.Period period64 = period63.normalizedStandard();
        org.joda.time.Period period66 = period64.minusWeeks((int) (byte) 0);
        // The following exception was thrown during execution in test generation
        try {
            int int68 = period66.getValue((int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 100");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + (-1L) + "'", long2 == (-1L));
        org.junit.Assert.assertNotNull(periodType5);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + (-1L) + "'", long15 == (-1L));
        org.junit.Assert.assertNotNull(duration17);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + (-1L) + "'", long18 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(period20);
        org.junit.Assert.assertNotNull(minutes21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(duration25);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + (-1L) + "'", long26 == (-1L));
        org.junit.Assert.assertNotNull(period27);
        org.junit.Assert.assertNotNull(duration29);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + (-1L) + "'", long30 == (-1L));
        org.junit.Assert.assertNotNull(periodType33);
        org.junit.Assert.assertNotNull(period35);
        org.junit.Assert.assertNotNull(period36);
        org.junit.Assert.assertNotNull(duration38);
        org.junit.Assert.assertTrue("'" + long39 + "' != '" + (-1L) + "'", long39 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(duration42);
        org.junit.Assert.assertTrue("'" + long43 + "' != '" + (-1L) + "'", long43 == (-1L));
        org.junit.Assert.assertNotNull(duration45);
        org.junit.Assert.assertTrue("'" + long46 + "' != '" + (-1L) + "'", long46 == (-1L));
        org.junit.Assert.assertNotNull(periodType49);
        org.junit.Assert.assertNotNull(period51);
        org.junit.Assert.assertNotNull(duration52);
        org.junit.Assert.assertNotNull(duration54);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 1 + "'", int55 == 1);
        org.junit.Assert.assertNotNull(duration56);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "PT-60S" + "'", str57, "PT-60S");
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + long59 + "' != '" + 10L + "'", long59 == 10L);
        org.junit.Assert.assertNotNull(period63);
        org.junit.Assert.assertNotNull(period64);
        org.junit.Assert.assertNotNull(period66);
    }

    @Test
    public void test17869() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17869");
        org.joda.time.MutablePeriod mutablePeriod4 = new org.joda.time.MutablePeriod((int) (byte) 0, (int) (byte) 1, (int) (byte) 10, 0);
        mutablePeriod4.setPeriod((int) (byte) 100, (int) (byte) 10, (int) (byte) 1, 1, (int) '#', (int) (short) -1, 0, (int) 'a');
        mutablePeriod4.addWeeks(2);
        org.joda.time.Period period17 = org.joda.time.Period.parse("P0D");
        int int18 = period17.size();
        mutablePeriod4.setPeriod((org.joda.time.ReadablePeriod) period17);
        org.joda.time.Period period21 = period17.minusMonths((int) 'a');
        org.joda.time.PeriodType periodType22 = period21.getPeriodType();
        org.joda.time.ReadableInstant readableInstant23 = null;
        org.joda.time.Duration duration25 = org.joda.time.Duration.standardMinutes((-1L));
        long long26 = duration25.getStandardMinutes();
        org.joda.time.Duration duration28 = org.joda.time.Duration.standardMinutes((-1L));
        long long29 = duration28.getStandardMinutes();
        boolean boolean30 = duration25.isLongerThan((org.joda.time.ReadableDuration) duration28);
        org.joda.time.Duration duration32 = duration28.withMillis(1L);
        org.joda.time.Period period33 = new org.joda.time.Period(readableInstant23, (org.joda.time.ReadableDuration) duration28);
        org.joda.time.Days days34 = period33.toStandardDays();
        org.joda.time.Period period36 = period33.multipliedBy((int) (short) -1);
        org.joda.time.Period period38 = period33.plusMonths((int) (byte) 0);
        org.joda.time.Chronology chronology40 = null;
        org.joda.time.MutablePeriod mutablePeriod41 = new org.joda.time.MutablePeriod(1L, chronology40);
        org.joda.time.Chronology chronology43 = null;
        org.joda.time.MutablePeriod mutablePeriod44 = new org.joda.time.MutablePeriod(1L, chronology43);
        mutablePeriod41.add((org.joda.time.ReadablePeriod) mutablePeriod44);
        org.joda.time.PeriodType periodType46 = mutablePeriod44.getPeriodType();
        org.joda.time.MutablePeriod mutablePeriod47 = new org.joda.time.MutablePeriod((java.lang.Object) period38, periodType46);
        int int48 = mutablePeriod47.size();
        mutablePeriod47.setMillis((int) (short) 10);
        org.joda.time.MutablePeriod mutablePeriod55 = new org.joda.time.MutablePeriod(1, 0, (int) (byte) 1, 100);
        org.joda.time.DurationFieldType durationFieldType56 = org.joda.time.DurationFieldType.weeks();
        mutablePeriod55.set(durationFieldType56, (int) '#');
        mutablePeriod47.set(durationFieldType56, 34);
        org.joda.time.Period period62 = period21.withFieldAdded(durationFieldType56, (-818));
        java.lang.String str63 = durationFieldType56.getName();
        org.junit.Assert.assertNotNull(period17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 8 + "'", int18 == 8);
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertNotNull(periodType22);
        org.junit.Assert.assertNotNull(duration25);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + (-1L) + "'", long26 == (-1L));
        org.junit.Assert.assertNotNull(duration28);
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + (-1L) + "'", long29 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(duration32);
        org.junit.Assert.assertNotNull(days34);
        org.junit.Assert.assertNotNull(period36);
        org.junit.Assert.assertNotNull(period38);
        org.junit.Assert.assertNotNull(periodType46);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 8 + "'", int48 == 8);
        org.junit.Assert.assertNotNull(durationFieldType56);
        org.junit.Assert.assertNotNull(period62);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "weeks" + "'", str63, "weeks");
    }

    @Test
    public void test17870() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17870");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardHours((long) 9);
        org.joda.time.Duration duration2 = duration1.toDuration();
        org.joda.time.Duration duration3 = duration1.toDuration();
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(duration2);
        org.junit.Assert.assertNotNull(duration3);
    }

    @Test
    public void test17871() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17871");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((-1L));
        long long2 = duration1.getStandardMinutes();
        org.joda.time.Duration duration4 = org.joda.time.Duration.standardMinutes((-1L));
        long long5 = duration4.getStandardMinutes();
        boolean boolean6 = duration1.isLongerThan((org.joda.time.ReadableDuration) duration4);
        org.joda.time.Period period7 = duration4.toPeriod();
        org.joda.time.Minutes minutes8 = duration4.toStandardMinutes();
        org.joda.time.Duration duration10 = org.joda.time.Duration.standardMinutes((-1L));
        long long11 = duration10.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant12 = null;
        org.joda.time.Period period13 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration10, readableInstant12);
        org.joda.time.PeriodType periodType14 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology15 = null;
        org.joda.time.Period period16 = duration10.toPeriod(periodType14, chronology15);
        org.joda.time.Duration duration19 = duration10.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration20 = duration4.plus((org.joda.time.ReadableDuration) duration19);
        long long21 = duration19.getStandardDays();
        org.joda.time.Duration duration23 = new org.joda.time.Duration((long) (byte) 0);
        org.joda.time.Duration duration24 = duration19.plus((org.joda.time.ReadableDuration) duration23);
        org.joda.time.ReadableInstant readableInstant25 = null;
        org.joda.time.Duration duration28 = new org.joda.time.Duration((long) (short) -1, (long) (-60));
        org.joda.time.Duration duration30 = org.joda.time.Duration.standardSeconds((long) 2);
        org.joda.time.Minutes minutes31 = duration30.toStandardMinutes();
        org.joda.time.ReadableInstant readableInstant32 = null;
        org.joda.time.Duration duration36 = org.joda.time.Duration.standardMinutes((-1L));
        long long37 = duration36.getStandardMinutes();
        org.joda.time.Period period38 = duration36.toPeriod();
        org.joda.time.Duration duration40 = org.joda.time.Duration.standardMinutes((-1L));
        long long41 = duration40.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant42 = null;
        org.joda.time.Period period43 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration40, readableInstant42);
        org.joda.time.PeriodType periodType44 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology45 = null;
        org.joda.time.Period period46 = duration40.toPeriod(periodType44, chronology45);
        org.joda.time.Period period47 = duration36.toPeriod(periodType44);
        org.joda.time.Chronology chronology48 = null;
        org.joda.time.MutablePeriod mutablePeriod49 = new org.joda.time.MutablePeriod(1L, (long) (byte) 100, periodType44, chronology48);
        org.joda.time.PeriodType periodType50 = periodType44.withMillisRemoved();
        int int51 = periodType44.size();
        org.joda.time.Period period52 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration30, readableInstant32, periodType44);
        org.joda.time.PeriodType periodType53 = periodType44.withDaysRemoved();
        org.joda.time.Period period54 = duration28.toPeriod(periodType53);
        org.joda.time.Period period55 = duration19.toPeriodFrom(readableInstant25, periodType53);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + (-1L) + "'", long2 == (-1L));
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + (-1L) + "'", long5 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + (-1L) + "'", long11 == (-1L));
        org.junit.Assert.assertNotNull(periodType14);
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertNotNull(duration19);
        org.junit.Assert.assertNotNull(duration20);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 0L + "'", long21 == 0L);
        org.junit.Assert.assertNotNull(duration24);
        org.junit.Assert.assertNotNull(duration30);
        org.junit.Assert.assertNotNull(minutes31);
        org.junit.Assert.assertNotNull(duration36);
        org.junit.Assert.assertTrue("'" + long37 + "' != '" + (-1L) + "'", long37 == (-1L));
        org.junit.Assert.assertNotNull(period38);
        org.junit.Assert.assertNotNull(duration40);
        org.junit.Assert.assertTrue("'" + long41 + "' != '" + (-1L) + "'", long41 == (-1L));
        org.junit.Assert.assertNotNull(periodType44);
        org.junit.Assert.assertNotNull(period46);
        org.junit.Assert.assertNotNull(period47);
        org.junit.Assert.assertNotNull(periodType50);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 1 + "'", int51 == 1);
        org.junit.Assert.assertNotNull(periodType53);
        org.junit.Assert.assertNotNull(period54);
        org.junit.Assert.assertNotNull(period55);
    }

    @Test
    public void test17872() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17872");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((-1L));
        long long2 = duration1.getStandardMinutes();
        org.joda.time.Period period3 = duration1.toPeriod();
        java.lang.String str4 = duration1.toString();
        org.joda.time.ReadableInstant readableInstant6 = null;
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.Duration duration9 = org.joda.time.Duration.standardMinutes((-1L));
        long long10 = duration9.getStandardMinutes();
        org.joda.time.Period period11 = duration9.toPeriod();
        org.joda.time.Duration duration13 = org.joda.time.Duration.standardMinutes((-1L));
        long long14 = duration13.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant15 = null;
        org.joda.time.Period period16 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration13, readableInstant15);
        org.joda.time.PeriodType periodType17 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology18 = null;
        org.joda.time.Period period19 = duration13.toPeriod(periodType17, chronology18);
        org.joda.time.Period period20 = duration9.toPeriod(periodType17);
        org.joda.time.MutablePeriod mutablePeriod21 = new org.joda.time.MutablePeriod(readableInstant6, readableInstant7, periodType17);
        org.joda.time.Period period23 = org.joda.time.Period.seconds((int) '#');
        int int24 = period23.getMillis();
        org.joda.time.DurationFieldType durationFieldType25 = org.joda.time.DurationFieldType.years();
        org.joda.time.Period period27 = period23.withField(durationFieldType25, (int) (short) 10);
        int int28 = periodType17.indexOf(durationFieldType25);
        org.joda.time.Period period29 = new org.joda.time.Period(0L, periodType17);
        org.joda.time.Chronology chronology30 = null;
        org.joda.time.Period period31 = duration1.toPeriod(periodType17, chronology30);
        org.joda.time.Period period32 = duration1.toPeriod();
        org.joda.time.ReadableInstant readableInstant33 = null;
        org.joda.time.ReadableInstant readableInstant35 = null;
        org.joda.time.Duration duration37 = org.joda.time.Duration.standardMinutes((-1L));
        long long38 = duration37.getStandardMinutes();
        org.joda.time.Period period39 = duration37.toPeriod();
        org.joda.time.Duration duration41 = org.joda.time.Duration.standardMinutes((-1L));
        long long42 = duration41.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant43 = null;
        org.joda.time.Period period44 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration41, readableInstant43);
        org.joda.time.PeriodType periodType45 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology46 = null;
        org.joda.time.Period period47 = duration41.toPeriod(periodType45, chronology46);
        org.joda.time.Period period48 = duration37.toPeriod(periodType45);
        org.joda.time.Duration duration50 = org.joda.time.Duration.standardMinutes((-1L));
        long long51 = duration50.getStandardMinutes();
        boolean boolean52 = duration37.isLongerThan((org.joda.time.ReadableDuration) duration50);
        org.joda.time.PeriodType periodType53 = org.joda.time.PeriodType.weeks();
        org.joda.time.Period period54 = new org.joda.time.Period(readableInstant35, (org.joda.time.ReadableDuration) duration50, periodType53);
        org.joda.time.PeriodType periodType55 = periodType53.withMonthsRemoved();
        org.joda.time.PeriodType periodType56 = periodType53.withYearsRemoved();
        org.joda.time.Period period57 = new org.joda.time.Period((-120L), periodType53);
        org.joda.time.PeriodType periodType58 = periodType53.withMillisRemoved();
        org.joda.time.Period period59 = duration1.toPeriodTo(readableInstant33, periodType53);
        org.joda.time.PeriodType periodType60 = periodType53.withMinutesRemoved();
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + (-1L) + "'", long2 == (-1L));
        org.junit.Assert.assertNotNull(period3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "PT-60S" + "'", str4, "PT-60S");
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + (-1L) + "'", long10 == (-1L));
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + (-1L) + "'", long14 == (-1L));
        org.junit.Assert.assertNotNull(periodType17);
        org.junit.Assert.assertNotNull(period19);
        org.junit.Assert.assertNotNull(period20);
        org.junit.Assert.assertNotNull(period23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNotNull(durationFieldType25);
        org.junit.Assert.assertNotNull(period27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNotNull(period31);
        org.junit.Assert.assertNotNull(period32);
        org.junit.Assert.assertNotNull(duration37);
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + (-1L) + "'", long38 == (-1L));
        org.junit.Assert.assertNotNull(period39);
        org.junit.Assert.assertNotNull(duration41);
        org.junit.Assert.assertTrue("'" + long42 + "' != '" + (-1L) + "'", long42 == (-1L));
        org.junit.Assert.assertNotNull(periodType45);
        org.junit.Assert.assertNotNull(period47);
        org.junit.Assert.assertNotNull(period48);
        org.junit.Assert.assertNotNull(duration50);
        org.junit.Assert.assertTrue("'" + long51 + "' != '" + (-1L) + "'", long51 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(periodType53);
        org.junit.Assert.assertNotNull(periodType55);
        org.junit.Assert.assertNotNull(periodType56);
        org.junit.Assert.assertNotNull(periodType58);
        org.junit.Assert.assertNotNull(period59);
        org.junit.Assert.assertNotNull(periodType60);
    }

    @Test
    public void test17873() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17873");
        org.joda.time.Period period4 = new org.joda.time.Period((int) '#', (int) (byte) 100, 0, (-1));
        org.joda.time.MutablePeriod mutablePeriod5 = new org.joda.time.MutablePeriod();
        org.joda.time.ReadableInstant readableInstant6 = null;
        org.joda.time.Duration duration7 = mutablePeriod5.toDurationTo(readableInstant6);
        org.joda.time.Chronology chronology8 = null;
        org.joda.time.Period period9 = duration7.toPeriod(chronology8);
        org.joda.time.ReadableInstant readableInstant10 = null;
        org.joda.time.PeriodType periodType11 = org.joda.time.PeriodType.dayTime();
        org.joda.time.DurationFieldType durationFieldType12 = org.joda.time.DurationFieldType.days();
        int int13 = periodType11.indexOf(durationFieldType12);
        int int14 = periodType11.size();
        org.joda.time.Period period15 = duration7.toPeriodTo(readableInstant10, periodType11);
        org.joda.time.Period period16 = period4.normalizedStandard(periodType11);
        org.joda.time.DurationFieldType durationFieldType17 = null;
        int int18 = period16.get(durationFieldType17);
        org.joda.time.Period period20 = period16.plusMinutes((int) (short) 1);
        org.joda.time.Period period21 = period20.toPeriod();
        org.joda.time.PeriodType periodType22 = period21.getPeriodType();
        org.junit.Assert.assertNotNull(duration7);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(periodType11);
        org.junit.Assert.assertNotNull(durationFieldType12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 5 + "'", int14 == 5);
        org.junit.Assert.assertNotNull(period15);
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(period20);
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertNotNull(periodType22);
    }

    @Test
    public void test17874() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17874");
        org.joda.time.Period period1 = org.joda.time.Period.hours((-40));
        org.junit.Assert.assertNotNull(period1);
    }

    @Test
    public void test17875() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17875");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes(100L);
        org.joda.time.Duration duration3 = org.joda.time.Duration.standardMinutes((-1L));
        long long4 = duration3.getStandardMinutes();
        org.joda.time.Duration duration6 = org.joda.time.Duration.standardMinutes((-1L));
        long long7 = duration6.getStandardMinutes();
        boolean boolean8 = duration3.isLongerThan((org.joda.time.ReadableDuration) duration6);
        org.joda.time.Duration duration10 = duration6.withMillis((long) 1);
        org.joda.time.Duration duration12 = org.joda.time.Duration.standardMinutes((-1L));
        long long13 = duration12.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant14 = null;
        org.joda.time.Period period15 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration12, readableInstant14);
        org.joda.time.PeriodType periodType16 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology17 = null;
        org.joda.time.Period period18 = duration12.toPeriod(periodType16, chronology17);
        org.joda.time.Duration duration21 = duration12.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration23 = org.joda.time.Duration.standardMinutes((-1L));
        long long24 = duration23.getStandardMinutes();
        org.joda.time.Duration duration26 = org.joda.time.Duration.standardMinutes((-1L));
        long long27 = duration26.getStandardMinutes();
        boolean boolean28 = duration23.isLongerThan((org.joda.time.ReadableDuration) duration26);
        org.joda.time.Duration duration30 = duration26.withMillis((long) 1);
        boolean boolean31 = duration21.isShorterThan((org.joda.time.ReadableDuration) duration26);
        boolean boolean32 = duration6.isLongerThan((org.joda.time.ReadableDuration) duration26);
        org.joda.time.Duration duration34 = org.joda.time.Duration.standardMinutes((-1L));
        long long35 = duration34.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant36 = null;
        org.joda.time.Period period37 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration34, readableInstant36);
        org.joda.time.PeriodType periodType38 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology39 = null;
        org.joda.time.Period period40 = duration34.toPeriod(periodType38, chronology39);
        org.joda.time.Duration duration41 = duration34.toDuration();
        boolean boolean42 = duration6.isEqual((org.joda.time.ReadableDuration) duration34);
        org.joda.time.Duration duration44 = org.joda.time.Duration.standardMinutes((-1L));
        long long45 = duration44.getStandardMinutes();
        org.joda.time.Duration duration47 = org.joda.time.Duration.standardMinutes((-1L));
        long long48 = duration47.getStandardMinutes();
        boolean boolean49 = duration44.isLongerThan((org.joda.time.ReadableDuration) duration47);
        org.joda.time.Duration duration50 = duration6.plus((org.joda.time.ReadableDuration) duration47);
        org.joda.time.Duration duration53 = duration47.withDurationAdded((long) 0, (int) (byte) 10);
        org.joda.time.Duration duration55 = org.joda.time.Duration.standardMinutes((-1L));
        long long56 = duration55.getStandardMinutes();
        org.joda.time.Duration duration58 = org.joda.time.Duration.standardMinutes((-1L));
        long long59 = duration58.getStandardMinutes();
        boolean boolean60 = duration55.isLongerThan((org.joda.time.ReadableDuration) duration58);
        org.joda.time.Duration duration62 = duration58.withMillis((long) 1);
        org.joda.time.Duration duration63 = duration53.plus((org.joda.time.ReadableDuration) duration62);
        boolean boolean64 = duration1.isShorterThan((org.joda.time.ReadableDuration) duration62);
        org.joda.time.Duration duration65 = duration62.toDuration();
        org.joda.time.Chronology chronology66 = null;
        org.joda.time.Period period67 = duration65.toPeriod(chronology66);
        long long68 = duration65.getStandardMinutes();
        org.joda.time.Chronology chronology69 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.MutablePeriod mutablePeriod70 = new org.joda.time.MutablePeriod((java.lang.Object) long68, chronology69);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: No period converter found for type: java.lang.Long");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + (-1L) + "'", long4 == (-1L));
        org.junit.Assert.assertNotNull(duration6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + (-1L) + "'", long13 == (-1L));
        org.junit.Assert.assertNotNull(periodType16);
        org.junit.Assert.assertNotNull(period18);
        org.junit.Assert.assertNotNull(duration21);
        org.junit.Assert.assertNotNull(duration23);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + (-1L) + "'", long24 == (-1L));
        org.junit.Assert.assertNotNull(duration26);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + (-1L) + "'", long27 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(duration30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(duration34);
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + (-1L) + "'", long35 == (-1L));
        org.junit.Assert.assertNotNull(periodType38);
        org.junit.Assert.assertNotNull(period40);
        org.junit.Assert.assertNotNull(duration41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(duration44);
        org.junit.Assert.assertTrue("'" + long45 + "' != '" + (-1L) + "'", long45 == (-1L));
        org.junit.Assert.assertNotNull(duration47);
        org.junit.Assert.assertTrue("'" + long48 + "' != '" + (-1L) + "'", long48 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(duration50);
        org.junit.Assert.assertNotNull(duration53);
        org.junit.Assert.assertNotNull(duration55);
        org.junit.Assert.assertTrue("'" + long56 + "' != '" + (-1L) + "'", long56 == (-1L));
        org.junit.Assert.assertNotNull(duration58);
        org.junit.Assert.assertTrue("'" + long59 + "' != '" + (-1L) + "'", long59 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(duration62);
        org.junit.Assert.assertNotNull(duration63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(duration65);
        org.junit.Assert.assertNotNull(period67);
        org.junit.Assert.assertTrue("'" + long68 + "' != '" + 0L + "'", long68 == 0L);
    }

    @Test
    public void test17876() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17876");
        org.joda.time.Period period4 = new org.joda.time.Period(0, (int) ' ', 100, (int) (short) 10);
        org.joda.time.Period period6 = period4.withMillis((-1));
        org.joda.time.Period period8 = period4.withDays(2);
        org.joda.time.Period period10 = period4.withHours((-947));
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertNotNull(period10);
    }

    @Test
    public void test17877() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17877");
        org.joda.time.Chronology chronology1 = null;
        org.joda.time.MutablePeriod mutablePeriod2 = new org.joda.time.MutablePeriod(1L, chronology1);
        org.joda.time.Period period4 = org.joda.time.Period.seconds((int) '#');
        mutablePeriod2.setPeriod((org.joda.time.ReadablePeriod) period4);
        mutablePeriod2.setWeeks((int) ' ');
        org.joda.time.PeriodType periodType8 = mutablePeriod2.getPeriodType();
        org.joda.time.Duration duration10 = org.joda.time.Duration.standardMinutes((-1L));
        long long11 = duration10.getStandardMinutes();
        org.joda.time.Period period12 = duration10.toPeriod();
        org.joda.time.Period period14 = period12.withMonths(0);
        int int15 = period12.size();
        org.joda.time.MutablePeriod mutablePeriod16 = period12.toMutablePeriod();
        mutablePeriod16.addMillis((int) '#');
        int int19 = mutablePeriod16.getDays();
        mutablePeriod2.setPeriod((org.joda.time.ReadablePeriod) mutablePeriod16);
        mutablePeriod16.addMinutes((-90));
        org.joda.time.Duration duration24 = new org.joda.time.Duration(0L);
        org.joda.time.ReadableInstant readableInstant25 = null;
        org.joda.time.Interval interval26 = duration24.toIntervalFrom(readableInstant25);
        mutablePeriod16.add((org.joda.time.ReadableInterval) interval26);
        mutablePeriod16.addMinutes((int) (byte) 100);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(periodType8);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + (-1L) + "'", long11 == (-1L));
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertNotNull(period14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 8 + "'", int15 == 8);
        org.junit.Assert.assertNotNull(mutablePeriod16);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(interval26);
    }

    @Test
    public void test17878() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17878");
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.ReadableInstant readableInstant9 = null;
        org.joda.time.format.PeriodPrinter periodPrinter12 = null;
        org.joda.time.format.PeriodParser periodParser13 = null;
        org.joda.time.format.PeriodFormatter periodFormatter14 = new org.joda.time.format.PeriodFormatter(periodPrinter12, periodParser13);
        org.joda.time.format.PeriodPrinter periodPrinter15 = periodFormatter14.getPrinter();
        boolean boolean16 = periodFormatter14.isPrinter();
        org.joda.time.PeriodType periodType17 = org.joda.time.PeriodType.standard();
        org.joda.time.PeriodType periodType18 = periodType17.withMinutesRemoved();
        org.joda.time.PeriodType periodType19 = periodType18.withMillisRemoved();
        org.joda.time.format.PeriodFormatter periodFormatter20 = periodFormatter14.withParseType(periodType18);
        org.joda.time.PeriodType periodType21 = periodType18.withDaysRemoved();
        org.joda.time.Chronology chronology22 = null;
        org.joda.time.MutablePeriod mutablePeriod23 = new org.joda.time.MutablePeriod((-1L), (long) (short) 0, periodType18, chronology22);
        org.joda.time.MutablePeriod mutablePeriod24 = new org.joda.time.MutablePeriod(periodType18);
        org.joda.time.Period period25 = new org.joda.time.Period(readableInstant8, readableInstant9, periodType18);
        java.lang.String str26 = periodType18.toString();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.MutablePeriod mutablePeriod27 = new org.joda.time.MutablePeriod(2, (-520), (-65), 864000, (-40), 129, (int) '4', (-935), periodType18);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Period does not support field 'minutes'");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(periodPrinter15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(periodType17);
        org.junit.Assert.assertNotNull(periodType18);
        org.junit.Assert.assertNotNull(periodType19);
        org.junit.Assert.assertNotNull(periodFormatter20);
        org.junit.Assert.assertNotNull(periodType21);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "PeriodType[StandardNoMinutes]" + "'", str26, "PeriodType[StandardNoMinutes]");
    }

    @Test
    public void test17879() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17879");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardHours((long) 10);
        org.joda.time.Duration duration3 = org.joda.time.Duration.standardMinutes((-1L));
        long long4 = duration3.getStandardMinutes();
        org.joda.time.Duration duration6 = org.joda.time.Duration.standardMinutes((-1L));
        long long7 = duration6.getStandardMinutes();
        boolean boolean8 = duration3.isLongerThan((org.joda.time.ReadableDuration) duration6);
        org.joda.time.Period period9 = duration6.toPeriod();
        org.joda.time.Minutes minutes10 = duration6.toStandardMinutes();
        boolean boolean11 = duration1.isEqual((org.joda.time.ReadableDuration) duration6);
        org.joda.time.Duration duration13 = org.joda.time.Duration.standardMinutes((-1L));
        long long14 = duration13.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant15 = null;
        org.joda.time.Period period16 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration13, readableInstant15);
        org.joda.time.PeriodType periodType17 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology18 = null;
        org.joda.time.Period period19 = duration13.toPeriod(periodType17, chronology18);
        org.joda.time.Duration duration22 = duration13.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration24 = org.joda.time.Duration.standardMinutes((-1L));
        long long25 = duration24.getStandardMinutes();
        org.joda.time.Duration duration27 = org.joda.time.Duration.standardMinutes((-1L));
        long long28 = duration27.getStandardMinutes();
        boolean boolean29 = duration24.isLongerThan((org.joda.time.ReadableDuration) duration27);
        org.joda.time.Duration duration31 = duration27.withMillis((long) 1);
        boolean boolean32 = duration22.isShorterThan((org.joda.time.ReadableDuration) duration27);
        boolean boolean33 = duration6.isEqual((org.joda.time.ReadableDuration) duration27);
        org.joda.time.Duration duration35 = org.joda.time.Duration.standardMinutes((-1L));
        long long36 = duration35.getStandardMinutes();
        org.joda.time.Duration duration38 = org.joda.time.Duration.standardMinutes((-1L));
        long long39 = duration38.getStandardMinutes();
        boolean boolean40 = duration35.isLongerThan((org.joda.time.ReadableDuration) duration38);
        org.joda.time.Period period41 = duration38.toPeriod();
        org.joda.time.Minutes minutes42 = duration38.toStandardMinutes();
        org.joda.time.Duration duration44 = org.joda.time.Duration.standardMinutes((-1L));
        long long45 = duration44.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant46 = null;
        org.joda.time.Period period47 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration44, readableInstant46);
        org.joda.time.PeriodType periodType48 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology49 = null;
        org.joda.time.Period period50 = duration44.toPeriod(periodType48, chronology49);
        org.joda.time.Duration duration53 = duration44.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration54 = duration38.plus((org.joda.time.ReadableDuration) duration53);
        long long55 = duration53.getStandardDays();
        org.joda.time.Duration duration56 = duration27.plus((org.joda.time.ReadableDuration) duration53);
        org.joda.time.ReadableInstant readableInstant57 = null;
        org.joda.time.ReadableInstant readableInstant58 = null;
        org.joda.time.PeriodType periodType64 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period65 = new org.joda.time.Period(10L, periodType64);
        org.joda.time.PeriodType periodType66 = periodType64.withWeeksRemoved();
        org.joda.time.DurationFieldType durationFieldType67 = org.joda.time.DurationFieldType.millis();
        int int68 = periodType66.indexOf(durationFieldType67);
        org.joda.time.Period period69 = new org.joda.time.Period((long) 0, (long) (-60), periodType66);
        java.lang.String str70 = periodType66.toString();
        org.joda.time.Chronology chronology71 = null;
        org.joda.time.Period period72 = new org.joda.time.Period((long) 34, periodType66, chronology71);
        org.joda.time.PeriodType periodType73 = periodType66.withMillisRemoved();
        org.joda.time.Chronology chronology74 = null;
        org.joda.time.Period period75 = new org.joda.time.Period((long) (byte) 1, periodType66, chronology74);
        org.joda.time.Period period76 = new org.joda.time.Period(readableInstant57, readableInstant58, periodType66);
        org.joda.time.Period period77 = duration53.toPeriod(periodType66);
        org.joda.time.ReadableInstant readableInstant78 = null;
        org.joda.time.ReadableDuration readableDuration79 = null;
        org.joda.time.Period period80 = new org.joda.time.Period(readableInstant78, readableDuration79);
        org.joda.time.DurationFieldType durationFieldType81 = org.joda.time.DurationFieldType.centuries();
        org.joda.time.Period period83 = period80.withFieldAdded(durationFieldType81, (int) (byte) 0);
        org.joda.time.Period period85 = period80.withSeconds(8);
        org.joda.time.Period period87 = period80.minusYears(7);
        org.joda.time.PeriodType periodType88 = period87.getPeriodType();
        org.joda.time.PeriodType periodType89 = periodType88.withMinutesRemoved();
        org.joda.time.Period period90 = period77.withPeriodType(periodType89);
        org.joda.time.MutablePeriod mutablePeriod91 = period77.toMutablePeriod();
        org.joda.time.Period period96 = new org.joda.time.Period(100, 5, 35, 10);
        org.joda.time.Period period98 = period96.withSeconds((int) (short) 100);
        boolean boolean99 = mutablePeriod91.equals((java.lang.Object) period96);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + (-1L) + "'", long4 == (-1L));
        org.junit.Assert.assertNotNull(duration6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + (-1L) + "'", long14 == (-1L));
        org.junit.Assert.assertNotNull(periodType17);
        org.junit.Assert.assertNotNull(period19);
        org.junit.Assert.assertNotNull(duration22);
        org.junit.Assert.assertNotNull(duration24);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + (-1L) + "'", long25 == (-1L));
        org.junit.Assert.assertNotNull(duration27);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + (-1L) + "'", long28 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(duration31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(duration35);
        org.junit.Assert.assertTrue("'" + long36 + "' != '" + (-1L) + "'", long36 == (-1L));
        org.junit.Assert.assertNotNull(duration38);
        org.junit.Assert.assertTrue("'" + long39 + "' != '" + (-1L) + "'", long39 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(period41);
        org.junit.Assert.assertNotNull(minutes42);
        org.junit.Assert.assertNotNull(duration44);
        org.junit.Assert.assertTrue("'" + long45 + "' != '" + (-1L) + "'", long45 == (-1L));
        org.junit.Assert.assertNotNull(periodType48);
        org.junit.Assert.assertNotNull(period50);
        org.junit.Assert.assertNotNull(duration53);
        org.junit.Assert.assertNotNull(duration54);
        org.junit.Assert.assertTrue("'" + long55 + "' != '" + 0L + "'", long55 == 0L);
        org.junit.Assert.assertNotNull(duration56);
        org.junit.Assert.assertNotNull(periodType64);
        org.junit.Assert.assertNotNull(periodType66);
        org.junit.Assert.assertNotNull(durationFieldType67);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + (-1) + "'", int68 == (-1));
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "PeriodType[Seconds]" + "'", str70, "PeriodType[Seconds]");
        org.junit.Assert.assertNotNull(periodType73);
        org.junit.Assert.assertNotNull(period77);
        org.junit.Assert.assertNotNull(durationFieldType81);
        org.junit.Assert.assertNotNull(period83);
        org.junit.Assert.assertNotNull(period85);
        org.junit.Assert.assertNotNull(period87);
        org.junit.Assert.assertNotNull(periodType88);
        org.junit.Assert.assertNotNull(periodType89);
        org.junit.Assert.assertNotNull(period90);
        org.junit.Assert.assertNotNull(mutablePeriod91);
        org.junit.Assert.assertNotNull(period98);
        org.junit.Assert.assertTrue("'" + boolean99 + "' != '" + false + "'", boolean99 == false);
    }

    @Test
    public void test17880() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17880");
        org.joda.time.ReadableInstant readableInstant2 = null;
        org.joda.time.ReadableDuration readableDuration3 = null;
        org.joda.time.Period period4 = new org.joda.time.Period(readableInstant2, readableDuration3);
        org.joda.time.DurationFieldType durationFieldType5 = org.joda.time.DurationFieldType.centuries();
        org.joda.time.Period period7 = period4.withFieldAdded(durationFieldType5, (int) (byte) 0);
        org.joda.time.Period period9 = period4.withSeconds(8);
        org.joda.time.Period period11 = period4.minusYears(7);
        org.joda.time.PeriodType periodType12 = period11.getPeriodType();
        org.joda.time.PeriodType periodType13 = periodType12.withMinutesRemoved();
        org.joda.time.MutablePeriod mutablePeriod14 = new org.joda.time.MutablePeriod(2000L, (long) 98, periodType13);
        mutablePeriod14.clear();
        int int16 = mutablePeriod14.getWeeks();
        org.junit.Assert.assertNotNull(durationFieldType5);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(periodType12);
        org.junit.Assert.assertNotNull(periodType13);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
    }

    @Test
    public void test17881() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17881");
        org.joda.time.format.PeriodPrinter periodPrinter0 = null;
        org.joda.time.format.PeriodParser periodParser1 = null;
        org.joda.time.format.PeriodFormatter periodFormatter2 = new org.joda.time.format.PeriodFormatter(periodPrinter0, periodParser1);
        org.joda.time.format.PeriodPrinter periodPrinter3 = periodFormatter2.getPrinter();
        boolean boolean4 = periodFormatter2.isParser();
        org.joda.time.format.PeriodParser periodParser5 = periodFormatter2.getParser();
        java.lang.StringBuffer stringBuffer6 = null;
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.PeriodType periodType9 = org.joda.time.PeriodType.yearWeekDay();
        org.joda.time.MutablePeriod mutablePeriod10 = new org.joda.time.MutablePeriod(readableInstant7, readableInstant8, periodType9);
        org.joda.time.ReadableInstant readableInstant11 = null;
        org.joda.time.ReadableInstant readableInstant12 = null;
        mutablePeriod10.setPeriod(readableInstant11, readableInstant12);
        // The following exception was thrown during execution in test generation
        try {
            periodFormatter2.printTo(stringBuffer6, (org.joda.time.ReadablePeriod) mutablePeriod10);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Printing not supported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(periodPrinter3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(periodParser5);
        org.junit.Assert.assertNotNull(periodType9);
    }

    @Test
    public void test17882() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17882");
        org.joda.time.Chronology chronology1 = null;
        org.joda.time.MutablePeriod mutablePeriod2 = new org.joda.time.MutablePeriod(1L, chronology1);
        org.joda.time.Chronology chronology4 = null;
        org.joda.time.MutablePeriod mutablePeriod5 = new org.joda.time.MutablePeriod(1L, chronology4);
        mutablePeriod2.add((org.joda.time.ReadablePeriod) mutablePeriod5);
        org.joda.time.Duration duration8 = org.joda.time.Duration.standardMinutes((-1L));
        long long9 = duration8.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant10 = null;
        org.joda.time.Period period11 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration8, readableInstant10);
        mutablePeriod5.setPeriod((org.joda.time.ReadablePeriod) period11);
        mutablePeriod5.setMinutes((int) (short) 0);
        org.joda.time.DurationFieldType durationFieldType15 = org.joda.time.DurationFieldType.weeks();
        mutablePeriod5.add(durationFieldType15, 0);
        java.lang.Object obj18 = null;
        org.joda.time.Chronology chronology19 = null;
        org.joda.time.Period period20 = new org.joda.time.Period(obj18, chronology19);
        mutablePeriod5.setPeriod((org.joda.time.ReadablePeriod) period20);
        org.junit.Assert.assertNotNull(duration8);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + (-1L) + "'", long9 == (-1L));
        org.junit.Assert.assertNotNull(durationFieldType15);
    }

    @Test
    public void test17883() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17883");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((-1L));
        long long2 = duration1.getStandardMinutes();
        org.joda.time.Duration duration4 = org.joda.time.Duration.standardMinutes((-1L));
        long long5 = duration4.getStandardMinutes();
        boolean boolean6 = duration1.isLongerThan((org.joda.time.ReadableDuration) duration4);
        org.joda.time.Duration duration8 = duration4.withMillis(1L);
        org.joda.time.PeriodType periodType11 = null;
        org.joda.time.Chronology chronology12 = null;
        org.joda.time.Period period13 = new org.joda.time.Period(100L, (-2L), periodType11, chronology12);
        org.joda.time.PeriodType periodType14 = period13.getPeriodType();
        org.joda.time.Chronology chronology15 = null;
        org.joda.time.Period period16 = duration4.toPeriod(periodType14, chronology15);
        org.joda.time.ReadableInstant readableInstant17 = null;
        org.joda.time.ReadableInstant readableInstant18 = null;
        org.joda.time.Duration duration19 = new org.joda.time.Duration(readableInstant17, readableInstant18);
        org.joda.time.ReadableInstant readableInstant20 = null;
        org.joda.time.Period period21 = duration19.toPeriodTo(readableInstant20);
        org.joda.time.Period period22 = duration19.toPeriod();
        org.joda.time.Period period23 = period16.plus((org.joda.time.ReadablePeriod) period22);
        org.joda.time.Period period25 = period22.withSeconds(7);
        org.joda.time.Period period27 = period22.minusDays(52);
        java.lang.String str28 = period22.toString();
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + (-1L) + "'", long2 == (-1L));
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + (-1L) + "'", long5 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(duration8);
        org.junit.Assert.assertNotNull(periodType14);
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertNotNull(period22);
        org.junit.Assert.assertNotNull(period23);
        org.junit.Assert.assertNotNull(period25);
        org.junit.Assert.assertNotNull(period27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "PT0S" + "'", str28, "PT0S");
    }

    @Test
    public void test17884() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17884");
        org.joda.time.Period period1 = org.joda.time.Period.seconds(34);
        org.joda.time.Period period3 = period1.plusSeconds(0);
        org.joda.time.Period period5 = period3.multipliedBy(12);
        org.joda.time.PeriodType periodType6 = org.joda.time.PeriodType.hours();
        org.joda.time.PeriodType periodType7 = periodType6.withHoursRemoved();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Period period8 = period5.withPeriodType(periodType7);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Period does not support field 'seconds'");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(period3);
        org.junit.Assert.assertNotNull(period5);
        org.junit.Assert.assertNotNull(periodType6);
        org.junit.Assert.assertNotNull(periodType7);
    }

    @Test
    public void test17885() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17885");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.MutablePeriod mutablePeriod3 = new org.joda.time.MutablePeriod((-60L), (long) (-900), chronology2);
    }

    @Test
    public void test17886() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17886");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.Duration duration2 = org.joda.time.Duration.standardMinutes((-1L));
        long long3 = duration2.getStandardMinutes();
        org.joda.time.Duration duration5 = org.joda.time.Duration.standardMinutes((-1L));
        long long6 = duration5.getStandardMinutes();
        boolean boolean7 = duration2.isLongerThan((org.joda.time.ReadableDuration) duration5);
        org.joda.time.Period period8 = duration5.toPeriod();
        org.joda.time.Minutes minutes9 = duration5.toStandardMinutes();
        org.joda.time.Duration duration11 = org.joda.time.Duration.standardMinutes((-1L));
        long long12 = duration11.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant13 = null;
        org.joda.time.Period period14 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration11, readableInstant13);
        org.joda.time.PeriodType periodType15 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology16 = null;
        org.joda.time.Period period17 = duration11.toPeriod(periodType15, chronology16);
        org.joda.time.Duration duration20 = duration11.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration21 = duration5.plus((org.joda.time.ReadableDuration) duration20);
        org.joda.time.Period period23 = org.joda.time.Period.seconds((int) '#');
        org.joda.time.Period period25 = period23.plusMinutes(10);
        org.joda.time.PeriodType periodType26 = period25.getPeriodType();
        org.joda.time.Period period27 = new org.joda.time.Period(readableInstant0, (org.joda.time.ReadableDuration) duration20, periodType26);
        org.joda.time.PeriodType periodType29 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology30 = null;
        org.joda.time.MutablePeriod mutablePeriod31 = new org.joda.time.MutablePeriod((long) '4', periodType29, chronology30);
        org.joda.time.ReadableDuration readableDuration32 = null;
        org.joda.time.Chronology chronology33 = null;
        mutablePeriod31.setPeriod(readableDuration32, chronology33);
        org.joda.time.ReadableInstant readableInstant35 = null;
        org.joda.time.Duration duration36 = mutablePeriod31.toDurationFrom(readableInstant35);
        boolean boolean37 = duration20.isShorterThan((org.joda.time.ReadableDuration) duration36);
        long long38 = duration20.getStandardDays();
        org.joda.time.Period period41 = new org.joda.time.Period(10L, (long) (short) 100);
        org.joda.time.Duration duration42 = period41.toStandardDuration();
        boolean boolean43 = duration20.isLongerThan((org.joda.time.ReadableDuration) duration42);
        org.joda.time.Duration duration44 = duration20.toDuration();
        org.joda.time.Duration duration46 = org.joda.time.Duration.standardDays(86400L);
        org.joda.time.PeriodType periodType47 = null;
        org.joda.time.Chronology chronology48 = null;
        org.joda.time.Period period49 = duration46.toPeriod(periodType47, chronology48);
        org.joda.time.Duration duration50 = duration20.minus((org.joda.time.ReadableDuration) duration46);
        org.junit.Assert.assertNotNull(duration2);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + (-1L) + "'", long3 == (-1L));
        org.junit.Assert.assertNotNull(duration5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + (-1L) + "'", long12 == (-1L));
        org.junit.Assert.assertNotNull(periodType15);
        org.junit.Assert.assertNotNull(period17);
        org.junit.Assert.assertNotNull(duration20);
        org.junit.Assert.assertNotNull(duration21);
        org.junit.Assert.assertNotNull(period23);
        org.junit.Assert.assertNotNull(period25);
        org.junit.Assert.assertNotNull(periodType26);
        org.junit.Assert.assertNotNull(periodType29);
        org.junit.Assert.assertNotNull(duration36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + 0L + "'", long38 == 0L);
        org.junit.Assert.assertNotNull(duration42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(duration44);
        org.junit.Assert.assertNotNull(duration46);
        org.junit.Assert.assertNotNull(period49);
        org.junit.Assert.assertNotNull(duration50);
    }

    @Test
    public void test17887() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17887");
        org.joda.time.Period period1 = org.joda.time.Period.weeks((-90));
        org.joda.time.Period period3 = period1.withMonths((int) (byte) 10);
        org.joda.time.Period period5 = period3.minusHours(100);
        org.joda.time.Period period7 = period5.plusMonths((-3));
        org.joda.time.Period period9 = org.joda.time.Period.seconds((int) '#');
        int int10 = period9.getMillis();
        org.joda.time.Period period12 = period9.withMillis((int) '#');
        int int13 = period9.size();
        org.joda.time.Period period15 = period9.withMinutes(0);
        org.joda.time.Hours hours16 = period9.toStandardHours();
        org.joda.time.Period period18 = period9.multipliedBy((int) (byte) 1);
        org.joda.time.MutablePeriod mutablePeriod19 = new org.joda.time.MutablePeriod((java.lang.Object) period9);
        org.joda.time.Duration duration21 = org.joda.time.Duration.standardMinutes((-1L));
        long long22 = duration21.getStandardMinutes();
        org.joda.time.Period period23 = duration21.toPeriod();
        org.joda.time.Duration duration25 = org.joda.time.Duration.standardMinutes((-1L));
        long long26 = duration25.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant27 = null;
        org.joda.time.Period period28 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration25, readableInstant27);
        org.joda.time.PeriodType periodType29 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology30 = null;
        org.joda.time.Period period31 = duration25.toPeriod(periodType29, chronology30);
        org.joda.time.Period period32 = duration21.toPeriod(periodType29);
        org.joda.time.PeriodType periodType34 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period35 = new org.joda.time.Period(10L, periodType34);
        org.joda.time.PeriodType periodType36 = periodType34.withWeeksRemoved();
        org.joda.time.Period period37 = period32.withPeriodType(periodType36);
        int int38 = period32.getMillis();
        org.joda.time.Period period40 = period32.minusDays((int) ' ');
        org.joda.time.PeriodType periodType41 = org.joda.time.PeriodType.seconds();
        org.joda.time.PeriodType periodType42 = periodType41.withMinutesRemoved();
        org.joda.time.DurationFieldType durationFieldType43 = org.joda.time.DurationFieldType.minutes();
        int int44 = periodType42.indexOf(durationFieldType43);
        org.joda.time.Period period45 = period40.normalizedStandard(periodType42);
        org.joda.time.Period period46 = period9.plus((org.joda.time.ReadablePeriod) period40);
        org.joda.time.PeriodType periodType47 = period40.getPeriodType();
        org.joda.time.DurationFieldType durationFieldType48 = org.joda.time.DurationFieldType.weekyears();
        org.joda.time.Chronology chronology49 = null;
        org.joda.time.DurationField durationField50 = durationFieldType48.getField(chronology49);
        boolean boolean51 = period40.isSupported(durationFieldType48);
        int int52 = period5.get(durationFieldType48);
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(period3);
        org.junit.Assert.assertNotNull(period5);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 8 + "'", int13 == 8);
        org.junit.Assert.assertNotNull(period15);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(period18);
        org.junit.Assert.assertNotNull(duration21);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + (-1L) + "'", long22 == (-1L));
        org.junit.Assert.assertNotNull(period23);
        org.junit.Assert.assertNotNull(duration25);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + (-1L) + "'", long26 == (-1L));
        org.junit.Assert.assertNotNull(periodType29);
        org.junit.Assert.assertNotNull(period31);
        org.junit.Assert.assertNotNull(period32);
        org.junit.Assert.assertNotNull(periodType34);
        org.junit.Assert.assertNotNull(periodType36);
        org.junit.Assert.assertNotNull(period37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertNotNull(period40);
        org.junit.Assert.assertNotNull(periodType41);
        org.junit.Assert.assertNotNull(periodType42);
        org.junit.Assert.assertNotNull(durationFieldType43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertNotNull(period45);
        org.junit.Assert.assertNotNull(period46);
        org.junit.Assert.assertNotNull(periodType47);
        org.junit.Assert.assertNotNull(durationFieldType48);
        org.junit.Assert.assertNotNull(durationField50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
    }

    @Test
    public void test17888() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17888");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardDays((long) (-67));
        org.joda.time.ReadableInstant readableInstant2 = null;
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.Duration duration5 = org.joda.time.Duration.standardMinutes((-1L));
        long long6 = duration5.getStandardMinutes();
        org.joda.time.Duration duration8 = org.joda.time.Duration.standardMinutes((-1L));
        long long9 = duration8.getStandardMinutes();
        boolean boolean10 = duration5.isLongerThan((org.joda.time.ReadableDuration) duration8);
        org.joda.time.Duration duration12 = duration8.withMillis(1L);
        org.joda.time.Period period13 = new org.joda.time.Period(readableInstant3, (org.joda.time.ReadableDuration) duration8);
        org.joda.time.Days days14 = period13.toStandardDays();
        org.joda.time.Period period16 = period13.multipliedBy((int) (short) -1);
        org.joda.time.Period period18 = period13.plusMonths((int) (byte) 0);
        org.joda.time.Chronology chronology20 = null;
        org.joda.time.MutablePeriod mutablePeriod21 = new org.joda.time.MutablePeriod(1L, chronology20);
        org.joda.time.Chronology chronology23 = null;
        org.joda.time.MutablePeriod mutablePeriod24 = new org.joda.time.MutablePeriod(1L, chronology23);
        mutablePeriod21.add((org.joda.time.ReadablePeriod) mutablePeriod24);
        org.joda.time.PeriodType periodType26 = mutablePeriod24.getPeriodType();
        org.joda.time.MutablePeriod mutablePeriod27 = new org.joda.time.MutablePeriod((java.lang.Object) period18, periodType26);
        mutablePeriod27.clear();
        org.joda.time.Period period29 = mutablePeriod27.toPeriod();
        org.joda.time.Period period31 = period29.withMinutes((int) (short) 1);
        org.joda.time.Duration duration32 = period31.toStandardDuration();
        org.joda.time.Chronology chronology34 = null;
        org.joda.time.MutablePeriod mutablePeriod35 = new org.joda.time.MutablePeriod(1L, chronology34);
        org.joda.time.Period period37 = org.joda.time.Period.seconds((int) '#');
        mutablePeriod35.setPeriod((org.joda.time.ReadablePeriod) period37);
        mutablePeriod35.setWeeks((int) ' ');
        org.joda.time.PeriodType periodType41 = mutablePeriod35.getPeriodType();
        org.joda.time.ReadableInstant readableInstant42 = null;
        org.joda.time.ReadableInstant readableInstant43 = null;
        mutablePeriod35.setPeriod(readableInstant42, readableInstant43);
        org.joda.time.ReadableInstant readableInstant45 = null;
        org.joda.time.Duration duration46 = mutablePeriod35.toDurationTo(readableInstant45);
        org.joda.time.ReadableInstant readableInstant47 = null;
        org.joda.time.ReadableInstant readableInstant48 = null;
        org.joda.time.PeriodType periodType49 = org.joda.time.PeriodType.days();
        org.joda.time.Period period50 = new org.joda.time.Period(readableInstant47, readableInstant48, periodType49);
        org.joda.time.Period period51 = duration46.toPeriod(periodType49);
        org.joda.time.MutablePeriod mutablePeriod52 = new org.joda.time.MutablePeriod((java.lang.Object) duration32, periodType49);
        org.joda.time.Period period53 = duration1.toPeriodFrom(readableInstant2, periodType49);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Period period55 = period53.withMinutes(997);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Field is not supported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(duration5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
        org.junit.Assert.assertNotNull(duration8);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + (-1L) + "'", long9 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertNotNull(days14);
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertNotNull(period18);
        org.junit.Assert.assertNotNull(periodType26);
        org.junit.Assert.assertNotNull(period29);
        org.junit.Assert.assertNotNull(period31);
        org.junit.Assert.assertNotNull(duration32);
        org.junit.Assert.assertNotNull(period37);
        org.junit.Assert.assertNotNull(periodType41);
        org.junit.Assert.assertNotNull(duration46);
        org.junit.Assert.assertNotNull(periodType49);
        org.junit.Assert.assertNotNull(period51);
        org.junit.Assert.assertNotNull(period53);
    }

    @Test
    public void test17889() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17889");
        org.joda.time.Chronology chronology1 = null;
        org.joda.time.MutablePeriod mutablePeriod2 = new org.joda.time.MutablePeriod(1L, chronology1);
        org.joda.time.Chronology chronology4 = null;
        org.joda.time.MutablePeriod mutablePeriod5 = new org.joda.time.MutablePeriod(1L, chronology4);
        mutablePeriod2.add((org.joda.time.ReadablePeriod) mutablePeriod5);
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.Duration duration9 = org.joda.time.Duration.standardMinutes((-1L));
        long long10 = duration9.getStandardMinutes();
        org.joda.time.Period period11 = duration9.toPeriod();
        org.joda.time.Duration duration13 = org.joda.time.Duration.standardMinutes((-1L));
        long long14 = duration13.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant15 = null;
        org.joda.time.Period period16 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration13, readableInstant15);
        org.joda.time.PeriodType periodType17 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology18 = null;
        org.joda.time.Period period19 = duration13.toPeriod(periodType17, chronology18);
        org.joda.time.Period period20 = duration9.toPeriod(periodType17);
        org.joda.time.Duration duration22 = org.joda.time.Duration.standardMinutes((-1L));
        long long23 = duration22.getStandardMinutes();
        boolean boolean24 = duration9.isLongerThan((org.joda.time.ReadableDuration) duration22);
        org.joda.time.PeriodType periodType25 = org.joda.time.PeriodType.weeks();
        org.joda.time.Period period26 = new org.joda.time.Period(readableInstant7, (org.joda.time.ReadableDuration) duration22, periodType25);
        org.joda.time.Chronology chronology27 = null;
        org.joda.time.Period period28 = duration22.toPeriod(chronology27);
        mutablePeriod2.add((org.joda.time.ReadablePeriod) period28);
        org.joda.time.Chronology chronology31 = null;
        mutablePeriod2.add((long) (short) 10, chronology31);
        org.joda.time.PeriodType periodType33 = mutablePeriod2.getPeriodType();
        mutablePeriod2.addSeconds(0);
        mutablePeriod2.setPeriod(5, 0, 97, 0, (int) (short) 1, (int) (short) 1, 5, 0);
        org.joda.time.Duration duration46 = org.joda.time.Duration.standardMinutes((-1L));
        long long47 = duration46.getStandardMinutes();
        org.joda.time.Period period48 = duration46.toPeriod();
        mutablePeriod2.setPeriod((org.joda.time.ReadablePeriod) period48);
        mutablePeriod2.setPeriod((-2419199998L));
        org.joda.time.MutablePeriod mutablePeriod60 = new org.joda.time.MutablePeriod((int) 'a', (int) (byte) 10, 5, 1, (int) (byte) 0, (int) (byte) 0, 3, (int) (short) 100);
        mutablePeriod2.add((org.joda.time.ReadablePeriod) mutablePeriod60);
        java.lang.String str62 = mutablePeriod60.toString();
        int int63 = mutablePeriod60.getWeeks();
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + (-1L) + "'", long10 == (-1L));
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + (-1L) + "'", long14 == (-1L));
        org.junit.Assert.assertNotNull(periodType17);
        org.junit.Assert.assertNotNull(period19);
        org.junit.Assert.assertNotNull(period20);
        org.junit.Assert.assertNotNull(duration22);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + (-1L) + "'", long23 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(periodType25);
        org.junit.Assert.assertNotNull(period28);
        org.junit.Assert.assertNotNull(periodType33);
        org.junit.Assert.assertNotNull(duration46);
        org.junit.Assert.assertTrue("'" + long47 + "' != '" + (-1L) + "'", long47 == (-1L));
        org.junit.Assert.assertNotNull(period48);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "P97Y10M5W1DT3.100S" + "'", str62, "P97Y10M5W1DT3.100S");
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 5 + "'", int63 == 5);
    }

    @Test
    public void test17890() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17890");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((-1L));
        long long2 = duration1.getStandardMinutes();
        org.joda.time.Duration duration4 = org.joda.time.Duration.standardMinutes((-1L));
        long long5 = duration4.getStandardMinutes();
        boolean boolean6 = duration1.isLongerThan((org.joda.time.ReadableDuration) duration4);
        org.joda.time.Period period7 = duration4.toPeriod();
        org.joda.time.Minutes minutes8 = duration4.toStandardMinutes();
        org.joda.time.Duration duration10 = org.joda.time.Duration.standardMinutes((-1L));
        long long11 = duration10.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant12 = null;
        org.joda.time.Period period13 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration10, readableInstant12);
        org.joda.time.PeriodType periodType14 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology15 = null;
        org.joda.time.Period period16 = duration10.toPeriod(periodType14, chronology15);
        org.joda.time.Duration duration19 = duration10.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration20 = duration4.plus((org.joda.time.ReadableDuration) duration19);
        org.joda.time.ReadableInstant readableInstant21 = null;
        org.joda.time.Duration duration25 = org.joda.time.Duration.standardMinutes((-1L));
        long long26 = duration25.getStandardMinutes();
        org.joda.time.Period period27 = duration25.toPeriod();
        org.joda.time.Duration duration29 = org.joda.time.Duration.standardMinutes((-1L));
        long long30 = duration29.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant31 = null;
        org.joda.time.Period period32 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration29, readableInstant31);
        org.joda.time.PeriodType periodType33 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology34 = null;
        org.joda.time.Period period35 = duration29.toPeriod(periodType33, chronology34);
        org.joda.time.Period period36 = duration25.toPeriod(periodType33);
        org.joda.time.Chronology chronology37 = null;
        org.joda.time.MutablePeriod mutablePeriod38 = new org.joda.time.MutablePeriod(1L, (long) (byte) 100, periodType33, chronology37);
        org.joda.time.Period period39 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration4, readableInstant21, periodType33);
        org.joda.time.ReadableInstant readableInstant40 = null;
        org.joda.time.Duration duration42 = org.joda.time.Duration.standardMinutes((-1L));
        long long43 = duration42.getStandardMinutes();
        org.joda.time.Duration duration45 = org.joda.time.Duration.standardMinutes((-1L));
        long long46 = duration45.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant47 = null;
        org.joda.time.Period period48 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration45, readableInstant47);
        org.joda.time.PeriodType periodType49 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology50 = null;
        org.joda.time.Period period51 = duration45.toPeriod(periodType49, chronology50);
        org.joda.time.Duration duration52 = duration45.toDuration();
        org.joda.time.Duration duration54 = duration42.withDurationAdded((org.joda.time.ReadableDuration) duration52, 100);
        org.joda.time.Period period55 = new org.joda.time.Period(readableInstant40, (org.joda.time.ReadableDuration) duration42);
        boolean boolean56 = duration4.equals((java.lang.Object) duration42);
        org.joda.time.Duration duration58 = duration42.withMillis((long) (byte) 10);
        org.joda.time.MutablePeriod mutablePeriod63 = new org.joda.time.MutablePeriod((int) (short) 0, (int) 'a', (int) (byte) -1, 97);
        org.joda.time.DurationFieldType durationFieldType64 = org.joda.time.DurationFieldType.weekyears();
        boolean boolean65 = mutablePeriod63.isSupported(durationFieldType64);
        boolean boolean66 = duration58.equals((java.lang.Object) boolean65);
        java.lang.String str67 = duration58.toString();
        org.joda.time.Chronology chronology70 = null;
        org.joda.time.MutablePeriod mutablePeriod71 = new org.joda.time.MutablePeriod((long) ' ', 0L, chronology70);
        mutablePeriod71.setPeriod((-1L), (long) 12);
        mutablePeriod71.setYears((int) 'a');
        mutablePeriod71.addHours(101);
        org.joda.time.Chronology chronology80 = null;
        org.joda.time.Period period81 = new org.joda.time.Period(2000L, chronology80);
        mutablePeriod71.add((org.joda.time.ReadablePeriod) period81);
        int int83 = mutablePeriod71.getDays();
        boolean boolean84 = duration58.equals((java.lang.Object) int83);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + (-1L) + "'", long2 == (-1L));
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + (-1L) + "'", long5 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + (-1L) + "'", long11 == (-1L));
        org.junit.Assert.assertNotNull(periodType14);
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertNotNull(duration19);
        org.junit.Assert.assertNotNull(duration20);
        org.junit.Assert.assertNotNull(duration25);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + (-1L) + "'", long26 == (-1L));
        org.junit.Assert.assertNotNull(period27);
        org.junit.Assert.assertNotNull(duration29);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + (-1L) + "'", long30 == (-1L));
        org.junit.Assert.assertNotNull(periodType33);
        org.junit.Assert.assertNotNull(period35);
        org.junit.Assert.assertNotNull(period36);
        org.junit.Assert.assertNotNull(duration42);
        org.junit.Assert.assertTrue("'" + long43 + "' != '" + (-1L) + "'", long43 == (-1L));
        org.junit.Assert.assertNotNull(duration45);
        org.junit.Assert.assertTrue("'" + long46 + "' != '" + (-1L) + "'", long46 == (-1L));
        org.junit.Assert.assertNotNull(periodType49);
        org.junit.Assert.assertNotNull(period51);
        org.junit.Assert.assertNotNull(duration52);
        org.junit.Assert.assertNotNull(duration54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(duration58);
        org.junit.Assert.assertNotNull(durationFieldType64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "PT0.010S" + "'", str67, "PT0.010S");
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 0 + "'", int83 == 0);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
    }

    @Test
    public void test17891() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17891");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.MutablePeriod mutablePeriod3 = new org.joda.time.MutablePeriod(1L, chronology2);
        org.joda.time.Period period5 = org.joda.time.Period.seconds((int) '#');
        mutablePeriod3.setPeriod((org.joda.time.ReadablePeriod) period5);
        org.joda.time.DurationFieldType durationFieldType7 = org.joda.time.DurationFieldType.years();
        java.lang.String str8 = durationFieldType7.getName();
        boolean boolean9 = mutablePeriod3.isSupported(durationFieldType7);
        mutablePeriod3.setSeconds((int) (byte) -1);
        java.lang.Object obj12 = mutablePeriod3.clone();
        org.joda.time.Period period13 = mutablePeriod3.toPeriod();
        org.joda.time.ReadableInstant readableInstant14 = null;
        org.joda.time.ReadableInstant readableInstant15 = null;
        org.joda.time.MutablePeriod mutablePeriod16 = new org.joda.time.MutablePeriod(readableInstant14, readableInstant15);
        org.joda.time.PeriodType periodType17 = mutablePeriod16.getPeriodType();
        org.joda.time.Period period19 = org.joda.time.Period.years((int) (short) 1);
        org.joda.time.Period period21 = period19.minusMinutes((int) (short) 10);
        org.joda.time.Period period23 = period21.withWeeks((int) (byte) -1);
        org.joda.time.Period period25 = period21.plusHours((int) (short) -1);
        mutablePeriod16.setPeriod((org.joda.time.ReadablePeriod) period21);
        org.joda.time.Period period27 = period13.minus((org.joda.time.ReadablePeriod) period21);
        org.joda.time.MutablePeriod mutablePeriod28 = new org.joda.time.MutablePeriod();
        mutablePeriod28.add((long) (-60));
        mutablePeriod28.addMinutes((int) (byte) 0);
        org.joda.time.Period period33 = period13.minus((org.joda.time.ReadablePeriod) mutablePeriod28);
        org.joda.time.Duration duration35 = org.joda.time.Duration.standardMinutes((-1L));
        long long36 = duration35.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant37 = null;
        org.joda.time.Period period38 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration35, readableInstant37);
        org.joda.time.PeriodType periodType39 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology40 = null;
        org.joda.time.Period period41 = duration35.toPeriod(periodType39, chronology40);
        org.joda.time.ReadableInstant readableInstant42 = null;
        org.joda.time.Period period43 = duration35.toPeriodTo(readableInstant42);
        org.joda.time.Chronology chronology44 = null;
        org.joda.time.Period period45 = duration35.toPeriod(chronology44);
        org.joda.time.Duration duration46 = duration35.toDuration();
        org.joda.time.Duration duration47 = duration35.toDuration();
        org.joda.time.Chronology chronology48 = null;
        mutablePeriod28.setPeriod((org.joda.time.ReadableDuration) duration35, chronology48);
        org.joda.time.PeriodType periodType52 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period53 = new org.joda.time.Period(10L, periodType52);
        org.joda.time.PeriodType periodType54 = periodType52.withWeeksRemoved();
        org.joda.time.MutablePeriod mutablePeriod55 = new org.joda.time.MutablePeriod((long) (byte) 0, periodType52);
        org.joda.time.Duration duration57 = org.joda.time.Duration.standardMinutes((-1L));
        long long58 = duration57.getStandardMinutes();
        org.joda.time.PeriodType periodType59 = null;
        org.joda.time.Period period60 = duration57.toPeriod(periodType59);
        org.joda.time.Chronology chronology61 = null;
        mutablePeriod55.setPeriod((org.joda.time.ReadableDuration) duration57, chronology61);
        mutablePeriod55.setSeconds(10);
        org.joda.time.ReadableInstant readableInstant65 = null;
        org.joda.time.Duration duration66 = mutablePeriod55.toDurationFrom(readableInstant65);
        org.joda.time.ReadableInstant readableInstant67 = null;
        org.joda.time.Period period68 = duration66.toPeriodFrom(readableInstant67);
        org.joda.time.Duration duration70 = duration66.withMillis((long) ' ');
        org.joda.time.Chronology chronology72 = null;
        org.joda.time.MutablePeriod mutablePeriod73 = new org.joda.time.MutablePeriod(1L, chronology72);
        org.joda.time.Chronology chronology75 = null;
        org.joda.time.MutablePeriod mutablePeriod76 = new org.joda.time.MutablePeriod(1L, chronology75);
        mutablePeriod73.add((org.joda.time.ReadablePeriod) mutablePeriod76);
        org.joda.time.PeriodType periodType78 = mutablePeriod76.getPeriodType();
        org.joda.time.DurationFieldType durationFieldType79 = org.joda.time.DurationFieldType.years();
        java.lang.String str80 = durationFieldType79.getName();
        org.joda.time.Chronology chronology81 = null;
        boolean boolean82 = durationFieldType79.isSupported(chronology81);
        boolean boolean83 = periodType78.isSupported(durationFieldType79);
        org.joda.time.Period period84 = duration66.toPeriod(periodType78);
        org.joda.time.Period period85 = new org.joda.time.Period(readableInstant0, (org.joda.time.ReadableDuration) duration35, periodType78);
        org.junit.Assert.assertNotNull(period5);
        org.junit.Assert.assertNotNull(durationFieldType7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "years" + "'", str8, "years");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals(obj12.toString(), "PT-1S");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj12), "PT-1S");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj12), "PT-1S");
        org.junit.Assert.assertNotNull(period13);
        org.junit.Assert.assertNotNull(periodType17);
        org.junit.Assert.assertNotNull(period19);
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertNotNull(period23);
        org.junit.Assert.assertNotNull(period25);
        org.junit.Assert.assertNotNull(period27);
        org.junit.Assert.assertNotNull(period33);
        org.junit.Assert.assertNotNull(duration35);
        org.junit.Assert.assertTrue("'" + long36 + "' != '" + (-1L) + "'", long36 == (-1L));
        org.junit.Assert.assertNotNull(periodType39);
        org.junit.Assert.assertNotNull(period41);
        org.junit.Assert.assertNotNull(period43);
        org.junit.Assert.assertNotNull(period45);
        org.junit.Assert.assertNotNull(duration46);
        org.junit.Assert.assertNotNull(duration47);
        org.junit.Assert.assertNotNull(periodType52);
        org.junit.Assert.assertNotNull(periodType54);
        org.junit.Assert.assertNotNull(duration57);
        org.junit.Assert.assertTrue("'" + long58 + "' != '" + (-1L) + "'", long58 == (-1L));
        org.junit.Assert.assertNotNull(period60);
        org.junit.Assert.assertNotNull(duration66);
        org.junit.Assert.assertNotNull(period68);
        org.junit.Assert.assertNotNull(duration70);
        org.junit.Assert.assertNotNull(periodType78);
        org.junit.Assert.assertNotNull(durationFieldType79);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "years" + "'", str80, "years");
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertNotNull(period84);
    }

    @Test
    public void test17892() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17892");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((-1L));
        long long2 = duration1.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.Period period4 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration1, readableInstant3);
        org.joda.time.PeriodType periodType5 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology6 = null;
        org.joda.time.Period period7 = duration1.toPeriod(periodType5, chronology6);
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.Period period9 = duration1.toPeriodTo(readableInstant8);
        org.joda.time.Chronology chronology10 = null;
        org.joda.time.Period period11 = duration1.toPeriod(chronology10);
        org.joda.time.Duration duration12 = duration1.toDuration();
        org.joda.time.Duration duration14 = org.joda.time.Duration.standardMinutes((-1L));
        long long15 = duration14.getStandardMinutes();
        org.joda.time.Period period16 = duration14.toPeriod();
        org.joda.time.Duration duration18 = org.joda.time.Duration.standardMinutes((-1L));
        long long19 = duration18.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant20 = null;
        org.joda.time.Period period21 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration18, readableInstant20);
        org.joda.time.PeriodType periodType22 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology23 = null;
        org.joda.time.Period period24 = duration18.toPeriod(periodType22, chronology23);
        org.joda.time.Period period25 = duration14.toPeriod(periodType22);
        org.joda.time.Duration duration27 = org.joda.time.Duration.standardMinutes((-1L));
        long long28 = duration27.getStandardMinutes();
        boolean boolean29 = duration14.isLongerThan((org.joda.time.ReadableDuration) duration27);
        org.joda.time.Duration duration31 = org.joda.time.Duration.standardMinutes((-1L));
        long long32 = duration31.getStandardMinutes();
        org.joda.time.Duration duration34 = org.joda.time.Duration.standardMinutes((-1L));
        long long35 = duration34.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant36 = null;
        org.joda.time.Period period37 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration34, readableInstant36);
        org.joda.time.PeriodType periodType38 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology39 = null;
        org.joda.time.Period period40 = duration34.toPeriod(periodType38, chronology39);
        org.joda.time.Duration duration41 = duration34.toDuration();
        org.joda.time.Duration duration43 = duration31.withDurationAdded((org.joda.time.ReadableDuration) duration41, 100);
        int int44 = duration27.compareTo((org.joda.time.ReadableDuration) duration43);
        org.joda.time.Duration duration45 = duration27.toDuration();
        int int46 = duration1.compareTo((org.joda.time.ReadableDuration) duration45);
        long long47 = duration1.getMillis();
        org.joda.time.Chronology chronology48 = null;
        org.joda.time.MutablePeriod mutablePeriod49 = new org.joda.time.MutablePeriod((java.lang.Object) duration1, chronology48);
        mutablePeriod49.addMillis(3);
        int int52 = mutablePeriod49.getHours();
        org.joda.time.ReadableInstant readableInstant53 = null;
        org.joda.time.ReadableInstant readableInstant54 = null;
        org.joda.time.PeriodType periodType56 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period57 = new org.joda.time.Period(10L, periodType56);
        org.joda.time.PeriodType periodType58 = periodType56.withHoursRemoved();
        org.joda.time.PeriodType periodType59 = periodType56.withSecondsRemoved();
        org.joda.time.PeriodType periodType60 = periodType59.withMillisRemoved();
        org.joda.time.MutablePeriod mutablePeriod61 = new org.joda.time.MutablePeriod(readableInstant53, readableInstant54, periodType59);
        org.joda.time.Chronology chronology63 = null;
        mutablePeriod61.setPeriod((long) 7, chronology63);
        org.joda.time.ReadableInstant readableInstant65 = null;
        org.joda.time.Duration duration66 = mutablePeriod61.toDurationFrom(readableInstant65);
        int int67 = mutablePeriod61.getWeeks();
        org.joda.time.format.PeriodPrinter periodPrinter70 = null;
        org.joda.time.format.PeriodParser periodParser71 = null;
        org.joda.time.format.PeriodFormatter periodFormatter72 = new org.joda.time.format.PeriodFormatter(periodPrinter70, periodParser71);
        org.joda.time.format.PeriodPrinter periodPrinter73 = periodFormatter72.getPrinter();
        boolean boolean74 = periodFormatter72.isPrinter();
        org.joda.time.PeriodType periodType75 = org.joda.time.PeriodType.standard();
        org.joda.time.PeriodType periodType76 = periodType75.withMinutesRemoved();
        org.joda.time.PeriodType periodType77 = periodType76.withMillisRemoved();
        org.joda.time.format.PeriodFormatter periodFormatter78 = periodFormatter72.withParseType(periodType76);
        org.joda.time.PeriodType periodType79 = periodType76.withDaysRemoved();
        org.joda.time.Chronology chronology80 = null;
        org.joda.time.MutablePeriod mutablePeriod81 = new org.joda.time.MutablePeriod((-1L), (long) (short) 0, periodType76, chronology80);
        org.joda.time.MutablePeriod mutablePeriod82 = new org.joda.time.MutablePeriod(periodType76);
        org.joda.time.ReadableInstant readableInstant83 = null;
        org.joda.time.ReadableInstant readableInstant84 = null;
        org.joda.time.PeriodType periodType86 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period87 = new org.joda.time.Period(10L, periodType86);
        org.joda.time.MutablePeriod mutablePeriod88 = new org.joda.time.MutablePeriod(readableInstant83, readableInstant84, periodType86);
        java.lang.String str89 = periodType86.toString();
        org.joda.time.DurationFieldType durationFieldType91 = periodType86.getFieldType((int) (byte) 0);
        mutablePeriod82.add(durationFieldType91, 0);
        boolean boolean94 = mutablePeriod61.isSupported(durationFieldType91);
        boolean boolean95 = mutablePeriod49.isSupported(durationFieldType91);
        java.lang.String str96 = durationFieldType91.getName();
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + (-1L) + "'", long2 == (-1L));
        org.junit.Assert.assertNotNull(periodType5);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + (-1L) + "'", long15 == (-1L));
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertNotNull(duration18);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + (-1L) + "'", long19 == (-1L));
        org.junit.Assert.assertNotNull(periodType22);
        org.junit.Assert.assertNotNull(period24);
        org.junit.Assert.assertNotNull(period25);
        org.junit.Assert.assertNotNull(duration27);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + (-1L) + "'", long28 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(duration31);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + (-1L) + "'", long32 == (-1L));
        org.junit.Assert.assertNotNull(duration34);
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + (-1L) + "'", long35 == (-1L));
        org.junit.Assert.assertNotNull(periodType38);
        org.junit.Assert.assertNotNull(period40);
        org.junit.Assert.assertNotNull(duration41);
        org.junit.Assert.assertNotNull(duration43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 1 + "'", int44 == 1);
        org.junit.Assert.assertNotNull(duration45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertTrue("'" + long47 + "' != '" + (-60000L) + "'", long47 == (-60000L));
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertNotNull(periodType56);
        org.junit.Assert.assertNotNull(periodType58);
        org.junit.Assert.assertNotNull(periodType59);
        org.junit.Assert.assertNotNull(periodType60);
        org.junit.Assert.assertNotNull(duration66);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 0 + "'", int67 == 0);
        org.junit.Assert.assertNull(periodPrinter73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(periodType75);
        org.junit.Assert.assertNotNull(periodType76);
        org.junit.Assert.assertNotNull(periodType77);
        org.junit.Assert.assertNotNull(periodFormatter78);
        org.junit.Assert.assertNotNull(periodType79);
        org.junit.Assert.assertNotNull(periodType86);
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "PeriodType[Seconds]" + "'", str89, "PeriodType[Seconds]");
        org.junit.Assert.assertNotNull(durationFieldType91);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + true + "'", boolean95 == true);
        org.junit.Assert.assertEquals("'" + str96 + "' != '" + "seconds" + "'", str96, "seconds");
    }

    @Test
    public void test17893() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17893");
        org.joda.time.MutablePeriod mutablePeriod4 = new org.joda.time.MutablePeriod(27, (-6059968), (-18), (-520));
    }

    @Test
    public void test17894() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17894");
        org.joda.time.Period period1 = org.joda.time.Period.parse("PT31409400S");
        org.junit.Assert.assertNotNull(period1);
    }

    @Test
    public void test17895() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17895");
        org.joda.time.Period period1 = org.joda.time.Period.weeks((int) '#');
        org.joda.time.Period period3 = org.joda.time.Period.seconds((int) '#');
        int int4 = period3.getMillis();
        org.joda.time.Period period6 = period3.withMillis((int) '#');
        int int7 = period3.size();
        org.joda.time.Period period9 = period3.withMinutes(0);
        org.joda.time.Hours hours10 = period3.toStandardHours();
        org.joda.time.Period period12 = period3.minusSeconds((int) (short) 0);
        org.joda.time.Period period13 = new org.joda.time.Period();
        org.joda.time.Period period14 = period12.minus((org.joda.time.ReadablePeriod) period13);
        int int15 = period14.getMonths();
        org.joda.time.PeriodType periodType16 = null;
        org.joda.time.Period period17 = period14.withPeriodType(periodType16);
        org.joda.time.Period period18 = period1.plus((org.joda.time.ReadablePeriod) period14);
        org.joda.time.Period period20 = period18.plusMinutes((-1));
        org.joda.time.PeriodType periodType21 = period20.getPeriodType();
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(period3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 8 + "'", int7 == 8);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertNotNull(period14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(period17);
        org.junit.Assert.assertNotNull(period18);
        org.junit.Assert.assertNotNull(period20);
        org.junit.Assert.assertNotNull(periodType21);
    }

    @Test
    public void test17896() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17896");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableInstant readableInstant1 = null;
        org.joda.time.Duration duration3 = org.joda.time.Duration.standardMinutes((-1L));
        long long4 = duration3.getStandardMinutes();
        org.joda.time.Period period5 = duration3.toPeriod();
        org.joda.time.Duration duration7 = org.joda.time.Duration.standardMinutes((-1L));
        long long8 = duration7.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant9 = null;
        org.joda.time.Period period10 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration7, readableInstant9);
        org.joda.time.PeriodType periodType11 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology12 = null;
        org.joda.time.Period period13 = duration7.toPeriod(periodType11, chronology12);
        org.joda.time.Period period14 = duration3.toPeriod(periodType11);
        org.joda.time.Duration duration16 = org.joda.time.Duration.standardMinutes((-1L));
        long long17 = duration16.getStandardMinutes();
        boolean boolean18 = duration3.isLongerThan((org.joda.time.ReadableDuration) duration16);
        org.joda.time.PeriodType periodType20 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology21 = null;
        org.joda.time.MutablePeriod mutablePeriod22 = new org.joda.time.MutablePeriod((long) '4', periodType20, chronology21);
        org.joda.time.Chronology chronology23 = null;
        org.joda.time.Period period24 = duration3.toPeriod(periodType20, chronology23);
        org.joda.time.MutablePeriod mutablePeriod25 = new org.joda.time.MutablePeriod(readableInstant0, readableInstant1, periodType20);
        mutablePeriod25.setDays(40);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + (-1L) + "'", long4 == (-1L));
        org.junit.Assert.assertNotNull(period5);
        org.junit.Assert.assertNotNull(duration7);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + (-1L) + "'", long8 == (-1L));
        org.junit.Assert.assertNotNull(periodType11);
        org.junit.Assert.assertNotNull(period13);
        org.junit.Assert.assertNotNull(period14);
        org.junit.Assert.assertNotNull(duration16);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + (-1L) + "'", long17 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(periodType20);
        org.junit.Assert.assertNotNull(period24);
    }

    @Test
    public void test17897() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17897");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardSeconds((long) 2);
        org.joda.time.Minutes minutes2 = duration1.toStandardMinutes();
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.Duration duration7 = org.joda.time.Duration.standardMinutes((-1L));
        long long8 = duration7.getStandardMinutes();
        org.joda.time.Period period9 = duration7.toPeriod();
        org.joda.time.Duration duration11 = org.joda.time.Duration.standardMinutes((-1L));
        long long12 = duration11.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant13 = null;
        org.joda.time.Period period14 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration11, readableInstant13);
        org.joda.time.PeriodType periodType15 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology16 = null;
        org.joda.time.Period period17 = duration11.toPeriod(periodType15, chronology16);
        org.joda.time.Period period18 = duration7.toPeriod(periodType15);
        org.joda.time.Chronology chronology19 = null;
        org.joda.time.MutablePeriod mutablePeriod20 = new org.joda.time.MutablePeriod(1L, (long) (byte) 100, periodType15, chronology19);
        org.joda.time.PeriodType periodType21 = periodType15.withMillisRemoved();
        int int22 = periodType15.size();
        org.joda.time.Period period23 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration1, readableInstant3, periodType15);
        org.joda.time.PeriodType periodType24 = periodType15.withDaysRemoved();
        org.joda.time.PeriodType periodType25 = periodType15.withMonthsRemoved();
        org.joda.time.PeriodType periodType26 = periodType15.withDaysRemoved();
        org.joda.time.PeriodType periodType27 = periodType26.withMillisRemoved();
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(duration7);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + (-1L) + "'", long8 == (-1L));
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + (-1L) + "'", long12 == (-1L));
        org.junit.Assert.assertNotNull(periodType15);
        org.junit.Assert.assertNotNull(period17);
        org.junit.Assert.assertNotNull(period18);
        org.junit.Assert.assertNotNull(periodType21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertNotNull(periodType24);
        org.junit.Assert.assertNotNull(periodType25);
        org.junit.Assert.assertNotNull(periodType26);
        org.junit.Assert.assertNotNull(periodType27);
    }

    @Test
    public void test17898() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17898");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableInstant readableInstant1 = null;
        org.joda.time.MutablePeriod mutablePeriod2 = new org.joda.time.MutablePeriod(readableInstant0, readableInstant1);
        mutablePeriod2.setPeriod((long) 10, (long) 10);
        org.joda.time.MutablePeriod mutablePeriod6 = mutablePeriod2.toMutablePeriod();
        mutablePeriod2.addMillis((int) (byte) 10);
        org.joda.time.MutablePeriod mutablePeriod9 = mutablePeriod2.copy();
        int[] intArray10 = mutablePeriod2.getValues();
        mutablePeriod2.add((long) (short) 0);
        org.joda.time.DurationFieldType durationFieldType14 = mutablePeriod2.getFieldType((int) (short) 0);
        java.lang.String str15 = durationFieldType14.getName();
        org.joda.time.Chronology chronology16 = null;
        org.joda.time.DurationField durationField17 = durationFieldType14.getField(chronology16);
        java.lang.String str18 = durationFieldType14.getName();
        org.junit.Assert.assertNotNull(mutablePeriod6);
        org.junit.Assert.assertNotNull(mutablePeriod9);
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[0, 0, 0, 0, 0, 0, 0, 10]");
        org.junit.Assert.assertNotNull(durationFieldType14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "years" + "'", str15, "years");
        org.junit.Assert.assertNotNull(durationField17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "years" + "'", str18, "years");
    }

    @Test
    public void test17899() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17899");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardHours((-120L));
        org.joda.time.Duration duration3 = duration1.withMillis((-59990L));
        org.joda.time.Duration duration4 = new org.joda.time.Duration((java.lang.Object) (-59990L));
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(duration3);
    }

    @Test
    public void test17900() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17900");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableInstant readableInstant1 = null;
        org.joda.time.Duration duration3 = org.joda.time.Duration.standardMinutes((-1L));
        long long4 = duration3.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant5 = null;
        org.joda.time.MutablePeriod mutablePeriod6 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration3, readableInstant5);
        org.joda.time.PeriodType periodType7 = org.joda.time.PeriodType.dayTime();
        org.joda.time.DurationFieldType durationFieldType8 = org.joda.time.DurationFieldType.days();
        int int9 = periodType7.indexOf(durationFieldType8);
        org.joda.time.Chronology chronology10 = null;
        org.joda.time.Period period11 = duration3.toPeriod(periodType7, chronology10);
        org.joda.time.Period period12 = new org.joda.time.Period(readableInstant0, readableInstant1, periodType7);
        org.joda.time.Period period14 = period12.withDays((int) (short) 100);
        org.joda.time.PeriodType periodType15 = period14.getPeriodType();
        org.joda.time.Duration duration17 = org.joda.time.Duration.standardMinutes((long) ' ');
        org.joda.time.Duration duration19 = org.joda.time.Duration.millis(0L);
        boolean boolean20 = duration17.isShorterThan((org.joda.time.ReadableDuration) duration19);
        org.joda.time.Chronology chronology22 = null;
        org.joda.time.MutablePeriod mutablePeriod23 = new org.joda.time.MutablePeriod((long) 100, chronology22);
        mutablePeriod23.addDays((int) (byte) 1);
        mutablePeriod23.setPeriod(1L);
        boolean boolean28 = duration19.equals((java.lang.Object) mutablePeriod23);
        boolean boolean29 = periodType15.equals((java.lang.Object) mutablePeriod23);
        org.joda.time.Chronology chronology31 = null;
        mutablePeriod23.add((long) 10, chronology31);
        int int33 = mutablePeriod23.getDays();
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + (-1L) + "'", long4 == (-1L));
        org.junit.Assert.assertNotNull(periodType7);
        org.junit.Assert.assertNotNull(durationFieldType8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(period14);
        org.junit.Assert.assertNotNull(periodType15);
        org.junit.Assert.assertNotNull(duration17);
        org.junit.Assert.assertNotNull(duration19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
    }

    @Test
    public void test17901() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17901");
        org.joda.time.PeriodType periodType2 = null;
        org.joda.time.MutablePeriod mutablePeriod3 = new org.joda.time.MutablePeriod((long) ' ', (-1L), periodType2);
        mutablePeriod3.addMinutes((int) ' ');
        mutablePeriod3.clear();
        mutablePeriod3.addYears((int) (byte) 1);
        org.joda.time.Duration duration10 = org.joda.time.Duration.standardMinutes((-1L));
        long long11 = duration10.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant12 = null;
        org.joda.time.Period period13 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration10, readableInstant12);
        org.joda.time.PeriodType periodType14 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology15 = null;
        org.joda.time.Period period16 = duration10.toPeriod(periodType14, chronology15);
        org.joda.time.ReadableInstant readableInstant17 = null;
        org.joda.time.Period period18 = duration10.toPeriodTo(readableInstant17);
        int int19 = period18.getDays();
        org.joda.time.Period period21 = period18.withDays(100);
        org.joda.time.Period period22 = period18.toPeriod();
        org.joda.time.Chronology chronology24 = null;
        org.joda.time.MutablePeriod mutablePeriod25 = new org.joda.time.MutablePeriod(1L, chronology24);
        org.joda.time.Period period27 = org.joda.time.Period.seconds((int) '#');
        mutablePeriod25.setPeriod((org.joda.time.ReadablePeriod) period27);
        org.joda.time.DurationFieldType durationFieldType29 = org.joda.time.DurationFieldType.years();
        java.lang.String str30 = durationFieldType29.getName();
        boolean boolean31 = mutablePeriod25.isSupported(durationFieldType29);
        org.joda.time.Period period33 = period22.withField(durationFieldType29, (int) (byte) -1);
        int int34 = mutablePeriod3.get(durationFieldType29);
        org.joda.time.Chronology chronology36 = null;
        org.joda.time.MutablePeriod mutablePeriod37 = new org.joda.time.MutablePeriod(1L, chronology36);
        org.joda.time.Chronology chronology39 = null;
        org.joda.time.MutablePeriod mutablePeriod40 = new org.joda.time.MutablePeriod(1L, chronology39);
        mutablePeriod37.add((org.joda.time.ReadablePeriod) mutablePeriod40);
        mutablePeriod37.setMillis((int) (short) 0);
        org.joda.time.Chronology chronology45 = null;
        mutablePeriod37.add((long) (short) 0, chronology45);
        org.joda.time.PeriodType periodType49 = org.joda.time.PeriodType.seconds();
        org.joda.time.PeriodType periodType50 = periodType49.withMinutesRemoved();
        org.joda.time.Chronology chronology51 = null;
        org.joda.time.MutablePeriod mutablePeriod52 = new org.joda.time.MutablePeriod((long) 0, (long) (short) 100, periodType49, chronology51);
        org.joda.time.PeriodType periodType53 = periodType49.withMillisRemoved();
        org.joda.time.Chronology chronology54 = null;
        org.joda.time.MutablePeriod mutablePeriod55 = new org.joda.time.MutablePeriod((java.lang.Object) mutablePeriod37, periodType53, chronology54);
        org.joda.time.ReadableInstant readableInstant56 = null;
        org.joda.time.ReadableInstant readableInstant57 = null;
        org.joda.time.PeriodType periodType58 = org.joda.time.PeriodType.yearMonthDay();
        org.joda.time.MutablePeriod mutablePeriod59 = new org.joda.time.MutablePeriod(readableInstant56, readableInstant57, periodType58);
        boolean boolean60 = periodType53.equals((java.lang.Object) periodType58);
        org.joda.time.Chronology chronology61 = null;
        org.joda.time.Period period62 = new org.joda.time.Period((java.lang.Object) mutablePeriod3, periodType58, chronology61);
        mutablePeriod3.addMillis(32);
        mutablePeriod3.setPeriod((-101), 11, 11, 35, (-997), 350, (int) (short) 100, (int) (short) 10);
        org.joda.time.MutablePeriod mutablePeriod74 = mutablePeriod3.copy();
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + (-1L) + "'", long11 == (-1L));
        org.junit.Assert.assertNotNull(periodType14);
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertNotNull(period18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertNotNull(period22);
        org.junit.Assert.assertNotNull(period27);
        org.junit.Assert.assertNotNull(durationFieldType29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "years" + "'", str30, "years");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(period33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 1 + "'", int34 == 1);
        org.junit.Assert.assertNotNull(periodType49);
        org.junit.Assert.assertNotNull(periodType50);
        org.junit.Assert.assertNotNull(periodType53);
        org.junit.Assert.assertNotNull(periodType58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(mutablePeriod74);
    }

    @Test
    public void test17902() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17902");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.Period period3 = new org.joda.time.Period((long) (byte) -1, (long) (short) 0, chronology2);
        org.joda.time.Period period5 = period3.plusWeeks((-65));
        org.joda.time.Seconds seconds6 = period5.toStandardSeconds();
        org.junit.Assert.assertNotNull(period5);
        org.junit.Assert.assertNotNull(seconds6);
    }

    @Test
    public void test17903() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17903");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardHours(349200L);
        org.joda.time.Duration duration2 = duration1.toDuration();
        org.joda.time.Duration duration4 = duration1.plus((-27L));
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(duration2);
        org.junit.Assert.assertNotNull(duration4);
    }

    @Test
    public void test17904() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17904");
        org.joda.time.Period period2 = new org.joda.time.Period((-1L), (-2L));
        org.joda.time.Period period4 = period2.plusSeconds(97);
        org.joda.time.Period period6 = period4.minusWeeks(12);
        org.joda.time.ReadablePeriod readablePeriod7 = null;
        org.joda.time.Period period8 = period6.withFields(readablePeriod7);
        org.joda.time.Period period10 = period6.plusDays((int) ' ');
        org.joda.time.Period period12 = period6.plusYears(129);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertNotNull(period12);
    }

    @Test
    public void test17905() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17905");
        org.joda.time.Period period1 = org.joda.time.Period.weeks(100);
        org.joda.time.Period period3 = period1.withDays(1);
        int int4 = period3.getMillis();
        org.joda.time.Duration duration5 = period3.toStandardDuration();
        org.joda.time.ReadableInstant readableInstant6 = null;
        org.joda.time.Duration duration10 = org.joda.time.Duration.standardMinutes((-1L));
        long long11 = duration10.getStandardMinutes();
        org.joda.time.Period period12 = duration10.toPeriod();
        org.joda.time.Duration duration14 = org.joda.time.Duration.standardMinutes((-1L));
        long long15 = duration14.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant16 = null;
        org.joda.time.Period period17 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration14, readableInstant16);
        org.joda.time.PeriodType periodType18 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology19 = null;
        org.joda.time.Period period20 = duration14.toPeriod(periodType18, chronology19);
        org.joda.time.Period period21 = duration10.toPeriod(periodType18);
        org.joda.time.Chronology chronology22 = null;
        org.joda.time.MutablePeriod mutablePeriod23 = new org.joda.time.MutablePeriod(1L, (long) (byte) 100, periodType18, chronology22);
        org.joda.time.PeriodType periodType24 = periodType18.withMillisRemoved();
        org.joda.time.PeriodType periodType25 = periodType24.withSecondsRemoved();
        org.joda.time.DurationFieldType durationFieldType27 = periodType25.getFieldType(0);
        org.joda.time.MutablePeriod mutablePeriod28 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration5, readableInstant6, periodType25);
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(period3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(duration5);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + (-1L) + "'", long11 == (-1L));
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + (-1L) + "'", long15 == (-1L));
        org.junit.Assert.assertNotNull(periodType18);
        org.junit.Assert.assertNotNull(period20);
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertNotNull(periodType24);
        org.junit.Assert.assertNotNull(periodType25);
        org.junit.Assert.assertNotNull(durationFieldType27);
    }

    @Test
    public void test17906() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17906");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((-1L));
        long long2 = duration1.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.Period period4 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration1, readableInstant3);
        org.joda.time.PeriodType periodType5 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology6 = null;
        org.joda.time.Period period7 = duration1.toPeriod(periodType5, chronology6);
        org.joda.time.Duration duration10 = duration1.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration12 = org.joda.time.Duration.standardMinutes((-1L));
        long long13 = duration12.getStandardMinutes();
        org.joda.time.Duration duration15 = org.joda.time.Duration.standardMinutes((-1L));
        long long16 = duration15.getStandardMinutes();
        boolean boolean17 = duration12.isLongerThan((org.joda.time.ReadableDuration) duration15);
        org.joda.time.Duration duration19 = duration15.withMillis((long) 1);
        boolean boolean20 = duration10.isShorterThan((org.joda.time.ReadableDuration) duration15);
        org.joda.time.Duration duration22 = org.joda.time.Duration.standardMinutes((-1L));
        long long23 = duration22.getStandardMinutes();
        org.joda.time.Period period24 = duration22.toPeriod();
        org.joda.time.Duration duration26 = org.joda.time.Duration.standardMinutes((-1L));
        long long27 = duration26.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant28 = null;
        org.joda.time.Period period29 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration26, readableInstant28);
        org.joda.time.PeriodType periodType30 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology31 = null;
        org.joda.time.Period period32 = duration26.toPeriod(periodType30, chronology31);
        org.joda.time.Period period33 = duration22.toPeriod(periodType30);
        org.joda.time.Period period34 = duration15.toPeriod(periodType30);
        org.joda.time.Period period35 = period34.toPeriod();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType37 = period35.getFieldType(1097);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 1097");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + (-1L) + "'", long2 == (-1L));
        org.junit.Assert.assertNotNull(periodType5);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + (-1L) + "'", long13 == (-1L));
        org.junit.Assert.assertNotNull(duration15);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + (-1L) + "'", long16 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(duration19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(duration22);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + (-1L) + "'", long23 == (-1L));
        org.junit.Assert.assertNotNull(period24);
        org.junit.Assert.assertNotNull(duration26);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + (-1L) + "'", long27 == (-1L));
        org.junit.Assert.assertNotNull(periodType30);
        org.junit.Assert.assertNotNull(period32);
        org.junit.Assert.assertNotNull(period33);
        org.junit.Assert.assertNotNull(period34);
        org.junit.Assert.assertNotNull(period35);
    }

    @Test
    public void test17907() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17907");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((-1L));
        long long2 = duration1.getStandardMinutes();
        org.joda.time.Period period3 = duration1.toPeriod();
        org.joda.time.Period period5 = period3.withMonths(0);
        int int6 = period3.size();
        org.joda.time.MutablePeriod mutablePeriod7 = period3.toMutablePeriod();
        int int8 = mutablePeriod7.getDays();
        org.joda.time.Period period10 = org.joda.time.Period.weeks((int) ' ');
        org.joda.time.Period period12 = period10.minusMillis((int) '#');
        org.joda.time.Period period14 = period12.minusHours((-1));
        org.joda.time.Period period16 = period12.withSeconds(35);
        org.joda.time.Period period18 = period16.minusMinutes((int) (short) 10);
        int int19 = period18.getYears();
        org.joda.time.Period period20 = period18.toPeriod();
        mutablePeriod7.setPeriod((org.joda.time.ReadablePeriod) period20);
        int int22 = mutablePeriod7.getDays();
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + (-1L) + "'", long2 == (-1L));
        org.junit.Assert.assertNotNull(period3);
        org.junit.Assert.assertNotNull(period5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 8 + "'", int6 == 8);
        org.junit.Assert.assertNotNull(mutablePeriod7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertNotNull(period14);
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertNotNull(period18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(period20);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
    }

    @Test
    public void test17908() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17908");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((-1L));
        long long2 = duration1.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.Period period4 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration1, readableInstant3);
        org.joda.time.PeriodType periodType5 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology6 = null;
        org.joda.time.Period period7 = duration1.toPeriod(periodType5, chronology6);
        org.joda.time.Duration duration8 = duration1.toDuration();
        org.joda.time.Duration duration10 = duration8.minus((-48L));
        java.lang.String str11 = duration10.toString();
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + (-1L) + "'", long2 == (-1L));
        org.junit.Assert.assertNotNull(periodType5);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(duration8);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "PT-59.952S" + "'", str11, "PT-59.952S");
    }

    @Test
    public void test17909() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17909");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((-1L));
        long long2 = duration1.getStandardMinutes();
        org.joda.time.Period period3 = duration1.toPeriod();
        org.joda.time.Duration duration5 = org.joda.time.Duration.standardMinutes((-1L));
        long long6 = duration5.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.Period period8 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration5, readableInstant7);
        org.joda.time.PeriodType periodType9 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology10 = null;
        org.joda.time.Period period11 = duration5.toPeriod(periodType9, chronology10);
        org.joda.time.Period period12 = duration1.toPeriod(periodType9);
        org.joda.time.Duration duration14 = org.joda.time.Duration.standardMinutes((-1L));
        long long15 = duration14.getStandardMinutes();
        boolean boolean16 = duration1.isLongerThan((org.joda.time.ReadableDuration) duration14);
        org.joda.time.Duration duration18 = org.joda.time.Duration.standardMinutes((-1L));
        long long19 = duration18.getStandardMinutes();
        org.joda.time.Duration duration21 = org.joda.time.Duration.standardMinutes((-1L));
        long long22 = duration21.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant23 = null;
        org.joda.time.Period period24 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration21, readableInstant23);
        org.joda.time.PeriodType periodType25 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology26 = null;
        org.joda.time.Period period27 = duration21.toPeriod(periodType25, chronology26);
        org.joda.time.Duration duration28 = duration21.toDuration();
        org.joda.time.Duration duration30 = duration18.withDurationAdded((org.joda.time.ReadableDuration) duration28, 100);
        int int31 = duration14.compareTo((org.joda.time.ReadableDuration) duration30);
        org.joda.time.Duration duration32 = duration14.toDuration();
        org.joda.time.Period period33 = duration32.toPeriod();
        org.joda.time.Duration duration37 = org.joda.time.Duration.standardMinutes((-1L));
        long long38 = duration37.getStandardMinutes();
        org.joda.time.Period period39 = duration37.toPeriod();
        org.joda.time.Duration duration41 = org.joda.time.Duration.standardMinutes((-1L));
        long long42 = duration41.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant43 = null;
        org.joda.time.Period period44 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration41, readableInstant43);
        org.joda.time.PeriodType periodType45 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology46 = null;
        org.joda.time.Period period47 = duration41.toPeriod(periodType45, chronology46);
        org.joda.time.Period period48 = duration37.toPeriod(periodType45);
        org.joda.time.Chronology chronology49 = null;
        org.joda.time.MutablePeriod mutablePeriod50 = new org.joda.time.MutablePeriod(1L, (long) (byte) 100, periodType45, chronology49);
        org.joda.time.PeriodType periodType51 = periodType45.withMillisRemoved();
        org.joda.time.Period period52 = duration32.toPeriod(periodType51);
        org.joda.time.ReadableInstant readableInstant53 = null;
        org.joda.time.Period period54 = duration32.toPeriodFrom(readableInstant53);
        java.lang.String str55 = duration32.toString();
        org.joda.time.Chronology chronology56 = null;
        org.joda.time.MutablePeriod mutablePeriod57 = new org.joda.time.MutablePeriod((java.lang.Object) duration32, chronology56);
        mutablePeriod57.setWeeks(8);
        org.joda.time.DurationFieldType durationFieldType61 = mutablePeriod57.getFieldType(1);
        int int62 = mutablePeriod57.size();
        org.joda.time.ReadableInstant readableInstant65 = null;
        org.joda.time.Period period67 = org.joda.time.Period.seconds((int) '#');
        int int68 = period67.getMillis();
        org.joda.time.Period period70 = period67.withMillis((int) '#');
        int int71 = period67.size();
        org.joda.time.Period period73 = period67.withMinutes(0);
        org.joda.time.Hours hours74 = period67.toStandardHours();
        org.joda.time.Period period76 = period67.minusSeconds((int) (short) 0);
        org.joda.time.Period period77 = new org.joda.time.Period();
        org.joda.time.Period period78 = period76.minus((org.joda.time.ReadablePeriod) period77);
        org.joda.time.ReadableInstant readableInstant79 = null;
        org.joda.time.Duration duration80 = period77.toDurationFrom(readableInstant79);
        org.joda.time.Period period84 = org.joda.time.Period.parse("PT-60S");
        org.joda.time.DurationFieldType[] durationFieldTypeArray85 = period84.getFieldTypes();
        org.joda.time.PeriodType periodType86 = org.joda.time.PeriodType.forFields(durationFieldTypeArray85);
        org.joda.time.Chronology chronology87 = null;
        org.joda.time.Period period88 = new org.joda.time.Period((-1L), (long) (-90), periodType86, chronology87);
        org.joda.time.MutablePeriod mutablePeriod89 = new org.joda.time.MutablePeriod(readableInstant65, (org.joda.time.ReadableDuration) duration80, periodType86);
        org.joda.time.MutablePeriod mutablePeriod90 = new org.joda.time.MutablePeriod((long) '4', 600000L, periodType86);
        org.joda.time.PeriodType periodType91 = periodType86.withDaysRemoved();
        org.joda.time.Chronology chronology92 = null;
        org.joda.time.Period period93 = new org.joda.time.Period((java.lang.Object) mutablePeriod57, periodType86, chronology92);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType95 = mutablePeriod57.getFieldType((-6000));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: -6000");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + (-1L) + "'", long2 == (-1L));
        org.junit.Assert.assertNotNull(period3);
        org.junit.Assert.assertNotNull(duration5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
        org.junit.Assert.assertNotNull(periodType9);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + (-1L) + "'", long15 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(duration18);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + (-1L) + "'", long19 == (-1L));
        org.junit.Assert.assertNotNull(duration21);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + (-1L) + "'", long22 == (-1L));
        org.junit.Assert.assertNotNull(periodType25);
        org.junit.Assert.assertNotNull(period27);
        org.junit.Assert.assertNotNull(duration28);
        org.junit.Assert.assertNotNull(duration30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 1 + "'", int31 == 1);
        org.junit.Assert.assertNotNull(duration32);
        org.junit.Assert.assertNotNull(period33);
        org.junit.Assert.assertNotNull(duration37);
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + (-1L) + "'", long38 == (-1L));
        org.junit.Assert.assertNotNull(period39);
        org.junit.Assert.assertNotNull(duration41);
        org.junit.Assert.assertTrue("'" + long42 + "' != '" + (-1L) + "'", long42 == (-1L));
        org.junit.Assert.assertNotNull(periodType45);
        org.junit.Assert.assertNotNull(period47);
        org.junit.Assert.assertNotNull(period48);
        org.junit.Assert.assertNotNull(periodType51);
        org.junit.Assert.assertNotNull(period52);
        org.junit.Assert.assertNotNull(period54);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "PT-60S" + "'", str55, "PT-60S");
        org.junit.Assert.assertNotNull(durationFieldType61);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 8 + "'", int62 == 8);
        org.junit.Assert.assertNotNull(period67);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 0 + "'", int68 == 0);
        org.junit.Assert.assertNotNull(period70);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 8 + "'", int71 == 8);
        org.junit.Assert.assertNotNull(period73);
        org.junit.Assert.assertNotNull(hours74);
        org.junit.Assert.assertNotNull(period76);
        org.junit.Assert.assertNotNull(period78);
        org.junit.Assert.assertNotNull(duration80);
        org.junit.Assert.assertNotNull(period84);
        org.junit.Assert.assertNotNull(durationFieldTypeArray85);
        org.junit.Assert.assertNotNull(periodType86);
        org.junit.Assert.assertNotNull(periodType91);
    }

    @Test
    public void test17910() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17910");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((-1L));
        long long2 = duration1.getStandardMinutes();
        org.joda.time.Duration duration4 = org.joda.time.Duration.standardMinutes((-1L));
        long long5 = duration4.getStandardMinutes();
        boolean boolean6 = duration1.isLongerThan((org.joda.time.ReadableDuration) duration4);
        org.joda.time.Duration duration8 = duration4.withMillis((long) 1);
        org.joda.time.Duration duration10 = org.joda.time.Duration.standardMinutes((-1L));
        long long11 = duration10.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant12 = null;
        org.joda.time.Period period13 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration10, readableInstant12);
        org.joda.time.PeriodType periodType14 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology15 = null;
        org.joda.time.Period period16 = duration10.toPeriod(periodType14, chronology15);
        org.joda.time.Duration duration19 = duration10.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration21 = org.joda.time.Duration.standardMinutes((-1L));
        long long22 = duration21.getStandardMinutes();
        org.joda.time.Duration duration24 = org.joda.time.Duration.standardMinutes((-1L));
        long long25 = duration24.getStandardMinutes();
        boolean boolean26 = duration21.isLongerThan((org.joda.time.ReadableDuration) duration24);
        org.joda.time.Duration duration28 = duration24.withMillis((long) 1);
        boolean boolean29 = duration19.isShorterThan((org.joda.time.ReadableDuration) duration24);
        boolean boolean30 = duration4.isLongerThan((org.joda.time.ReadableDuration) duration24);
        org.joda.time.Duration duration32 = org.joda.time.Duration.standardMinutes((-1L));
        long long33 = duration32.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant34 = null;
        org.joda.time.Period period35 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration32, readableInstant34);
        org.joda.time.PeriodType periodType36 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology37 = null;
        org.joda.time.Period period38 = duration32.toPeriod(periodType36, chronology37);
        org.joda.time.Duration duration39 = duration32.toDuration();
        boolean boolean40 = duration4.isEqual((org.joda.time.ReadableDuration) duration32);
        org.joda.time.Duration duration42 = org.joda.time.Duration.standardMinutes((-1L));
        long long43 = duration42.getStandardMinutes();
        org.joda.time.Duration duration45 = org.joda.time.Duration.standardMinutes((-1L));
        long long46 = duration45.getStandardMinutes();
        boolean boolean47 = duration42.isLongerThan((org.joda.time.ReadableDuration) duration45);
        org.joda.time.Duration duration48 = duration4.plus((org.joda.time.ReadableDuration) duration45);
        org.joda.time.ReadableInstant readableInstant49 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Interval interval50 = duration45.toIntervalTo(readableInstant49);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: The end instant must be greater or equal to the start");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + (-1L) + "'", long2 == (-1L));
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + (-1L) + "'", long5 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(duration8);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + (-1L) + "'", long11 == (-1L));
        org.junit.Assert.assertNotNull(periodType14);
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertNotNull(duration19);
        org.junit.Assert.assertNotNull(duration21);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + (-1L) + "'", long22 == (-1L));
        org.junit.Assert.assertNotNull(duration24);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + (-1L) + "'", long25 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(duration28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(duration32);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + (-1L) + "'", long33 == (-1L));
        org.junit.Assert.assertNotNull(periodType36);
        org.junit.Assert.assertNotNull(period38);
        org.junit.Assert.assertNotNull(duration39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(duration42);
        org.junit.Assert.assertTrue("'" + long43 + "' != '" + (-1L) + "'", long43 == (-1L));
        org.junit.Assert.assertNotNull(duration45);
        org.junit.Assert.assertTrue("'" + long46 + "' != '" + (-1L) + "'", long46 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(duration48);
    }

    @Test
    public void test17911() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17911");
        org.joda.time.Period period8 = new org.joda.time.Period(1, 8, (int) (short) 0, (int) (byte) -1, (int) (short) 0, 5, (int) (byte) 100, (int) (byte) 100);
        org.joda.time.Chronology chronology11 = null;
        org.joda.time.MutablePeriod mutablePeriod12 = new org.joda.time.MutablePeriod((long) (byte) 10, (long) 0, chronology11);
        mutablePeriod12.setPeriod((int) (byte) 1, 5, 35, 100, (int) (short) 100, 8, (int) 'a', (-90));
        int int22 = mutablePeriod12.getSeconds();
        org.joda.time.Period period24 = org.joda.time.Period.seconds((int) '#');
        org.joda.time.Period period25 = period24.toPeriod();
        org.joda.time.Period period27 = period24.withMonths((int) (short) 10);
        int int29 = period27.getValue((int) (byte) 1);
        mutablePeriod12.setPeriod((org.joda.time.ReadablePeriod) period27);
        org.joda.time.Period period31 = period8.withFields((org.joda.time.ReadablePeriod) mutablePeriod12);
        org.joda.time.Period period33 = period8.multipliedBy(350);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 97 + "'", int22 == 97);
        org.junit.Assert.assertNotNull(period24);
        org.junit.Assert.assertNotNull(period25);
        org.junit.Assert.assertNotNull(period27);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 10 + "'", int29 == 10);
        org.junit.Assert.assertNotNull(period31);
        org.junit.Assert.assertNotNull(period33);
    }

    @Test
    public void test17912() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17912");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.MutablePeriod mutablePeriod3 = new org.joda.time.MutablePeriod((long) 32, (long) (short) 100, chronology2);
        org.joda.time.Duration duration5 = org.joda.time.Duration.standardMinutes((-1L));
        long long6 = duration5.getStandardMinutes();
        org.joda.time.Duration duration8 = org.joda.time.Duration.standardMinutes((-1L));
        long long9 = duration8.getStandardMinutes();
        boolean boolean10 = duration5.isLongerThan((org.joda.time.ReadableDuration) duration8);
        org.joda.time.Duration duration13 = duration5.withDurationAdded((-60L), (int) (byte) 0);
        org.joda.time.ReadableInstant readableInstant14 = null;
        org.joda.time.ReadableInstant readableInstant15 = null;
        org.joda.time.Chronology chronology17 = null;
        org.joda.time.MutablePeriod mutablePeriod18 = new org.joda.time.MutablePeriod(1L, chronology17);
        org.joda.time.Chronology chronology20 = null;
        org.joda.time.MutablePeriod mutablePeriod21 = new org.joda.time.MutablePeriod(1L, chronology20);
        mutablePeriod18.add((org.joda.time.ReadablePeriod) mutablePeriod21);
        mutablePeriod18.setMillis((int) (short) 0);
        org.joda.time.Chronology chronology26 = null;
        mutablePeriod18.add((long) (short) 0, chronology26);
        org.joda.time.PeriodType periodType30 = org.joda.time.PeriodType.seconds();
        org.joda.time.PeriodType periodType31 = periodType30.withMinutesRemoved();
        org.joda.time.Chronology chronology32 = null;
        org.joda.time.MutablePeriod mutablePeriod33 = new org.joda.time.MutablePeriod((long) 0, (long) (short) 100, periodType30, chronology32);
        org.joda.time.PeriodType periodType34 = periodType30.withMillisRemoved();
        org.joda.time.Chronology chronology35 = null;
        org.joda.time.MutablePeriod mutablePeriod36 = new org.joda.time.MutablePeriod((java.lang.Object) mutablePeriod18, periodType34, chronology35);
        org.joda.time.format.PeriodPrinter periodPrinter37 = null;
        org.joda.time.format.PeriodParser periodParser38 = null;
        org.joda.time.format.PeriodFormatter periodFormatter39 = new org.joda.time.format.PeriodFormatter(periodPrinter37, periodParser38);
        org.joda.time.format.PeriodPrinter periodPrinter40 = periodFormatter39.getPrinter();
        boolean boolean41 = periodFormatter39.isParser();
        java.util.Locale locale42 = periodFormatter39.getLocale();
        boolean boolean43 = periodType34.equals((java.lang.Object) periodFormatter39);
        int int44 = periodType34.size();
        org.joda.time.MutablePeriod mutablePeriod45 = new org.joda.time.MutablePeriod(readableInstant14, readableInstant15, periodType34);
        mutablePeriod45.add((-59909L));
        int int48 = mutablePeriod45.getMinutes();
        org.joda.time.Duration duration50 = org.joda.time.Duration.standardMinutes((-1L));
        long long51 = duration50.getStandardMinutes();
        org.joda.time.Period period52 = duration50.toPeriod();
        org.joda.time.Duration duration54 = org.joda.time.Duration.standardMinutes((-1L));
        long long55 = duration54.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant56 = null;
        org.joda.time.Period period57 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration54, readableInstant56);
        org.joda.time.PeriodType periodType58 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology59 = null;
        org.joda.time.Period period60 = duration54.toPeriod(periodType58, chronology59);
        org.joda.time.Period period61 = duration50.toPeriod(periodType58);
        org.joda.time.Duration duration63 = org.joda.time.Duration.standardMinutes((-1L));
        long long64 = duration63.getStandardMinutes();
        boolean boolean65 = duration50.isLongerThan((org.joda.time.ReadableDuration) duration63);
        org.joda.time.Duration duration67 = org.joda.time.Duration.standardMinutes((-1L));
        long long68 = duration67.getStandardMinutes();
        org.joda.time.Duration duration70 = org.joda.time.Duration.standardMinutes((-1L));
        long long71 = duration70.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant72 = null;
        org.joda.time.Period period73 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration70, readableInstant72);
        org.joda.time.PeriodType periodType74 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology75 = null;
        org.joda.time.Period period76 = duration70.toPeriod(periodType74, chronology75);
        org.joda.time.Duration duration77 = duration70.toDuration();
        org.joda.time.Duration duration79 = duration67.withDurationAdded((org.joda.time.ReadableDuration) duration77, 100);
        int int80 = duration63.compareTo((org.joda.time.ReadableDuration) duration79);
        org.joda.time.Duration duration81 = duration63.toDuration();
        org.joda.time.PeriodType periodType84 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period85 = new org.joda.time.Period(10L, periodType84);
        org.joda.time.PeriodType periodType86 = periodType84.withWeeksRemoved();
        org.joda.time.MutablePeriod mutablePeriod87 = new org.joda.time.MutablePeriod((long) 10, periodType86);
        org.joda.time.Chronology chronology88 = null;
        org.joda.time.Period period89 = duration63.toPeriod(periodType86, chronology88);
        mutablePeriod45.add((org.joda.time.ReadableDuration) duration63);
        boolean boolean91 = duration5.isShorterThan((org.joda.time.ReadableDuration) duration63);
        org.joda.time.Chronology chronology92 = null;
        mutablePeriod3.setPeriod((org.joda.time.ReadableDuration) duration5, chronology92);
        int int94 = mutablePeriod3.getWeeks();
        int int95 = mutablePeriod3.getHours();
        org.joda.time.Period period96 = org.joda.time.Period.ZERO;
        org.joda.time.Period period97 = period96.negated();
        mutablePeriod3.setPeriod((org.joda.time.ReadablePeriod) period97);
        org.junit.Assert.assertNotNull(duration5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
        org.junit.Assert.assertNotNull(duration8);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + (-1L) + "'", long9 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertNotNull(periodType30);
        org.junit.Assert.assertNotNull(periodType31);
        org.junit.Assert.assertNotNull(periodType34);
        org.junit.Assert.assertNull(periodPrinter40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNull(locale42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 1 + "'", int44 == 1);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertNotNull(duration50);
        org.junit.Assert.assertTrue("'" + long51 + "' != '" + (-1L) + "'", long51 == (-1L));
        org.junit.Assert.assertNotNull(period52);
        org.junit.Assert.assertNotNull(duration54);
        org.junit.Assert.assertTrue("'" + long55 + "' != '" + (-1L) + "'", long55 == (-1L));
        org.junit.Assert.assertNotNull(periodType58);
        org.junit.Assert.assertNotNull(period60);
        org.junit.Assert.assertNotNull(period61);
        org.junit.Assert.assertNotNull(duration63);
        org.junit.Assert.assertTrue("'" + long64 + "' != '" + (-1L) + "'", long64 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(duration67);
        org.junit.Assert.assertTrue("'" + long68 + "' != '" + (-1L) + "'", long68 == (-1L));
        org.junit.Assert.assertNotNull(duration70);
        org.junit.Assert.assertTrue("'" + long71 + "' != '" + (-1L) + "'", long71 == (-1L));
        org.junit.Assert.assertNotNull(periodType74);
        org.junit.Assert.assertNotNull(period76);
        org.junit.Assert.assertNotNull(duration77);
        org.junit.Assert.assertNotNull(duration79);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 1 + "'", int80 == 1);
        org.junit.Assert.assertNotNull(duration81);
        org.junit.Assert.assertNotNull(periodType84);
        org.junit.Assert.assertNotNull(periodType86);
        org.junit.Assert.assertNotNull(period89);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertTrue("'" + int94 + "' != '" + 0 + "'", int94 == 0);
        org.junit.Assert.assertTrue("'" + int95 + "' != '" + 0 + "'", int95 == 0);
        org.junit.Assert.assertNotNull(period96);
        org.junit.Assert.assertNotNull(period97);
    }

    @Test
    public void test17913() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17913");
        org.joda.time.MutablePeriod mutablePeriod0 = new org.joda.time.MutablePeriod();
        int int1 = mutablePeriod0.getMonths();
        mutablePeriod0.setMinutes((int) 'a');
        mutablePeriod0.setMonths(35);
        int int6 = mutablePeriod0.getMillis();
        org.joda.time.Duration duration8 = org.joda.time.Duration.standardDays((long) (-90));
        org.joda.time.Duration duration9 = duration8.toDuration();
        org.joda.time.Minutes minutes10 = duration9.toStandardMinutes();
        mutablePeriod0.add((org.joda.time.ReadablePeriod) minutes10);
        java.lang.String str12 = minutes10.toString();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(duration8);
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "PT-129600M" + "'", str12, "PT-129600M");
    }

    @Test
    public void test17914() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17914");
        org.joda.time.Chronology chronology1 = null;
        org.joda.time.MutablePeriod mutablePeriod2 = new org.joda.time.MutablePeriod(1L, chronology1);
        org.joda.time.Period period4 = org.joda.time.Period.seconds((int) '#');
        mutablePeriod2.setPeriod((org.joda.time.ReadablePeriod) period4);
        mutablePeriod2.setWeeks((int) ' ');
        org.joda.time.PeriodType periodType8 = mutablePeriod2.getPeriodType();
        org.joda.time.ReadableInstant readableInstant9 = null;
        org.joda.time.ReadableInstant readableInstant10 = null;
        mutablePeriod2.setPeriod(readableInstant9, readableInstant10);
        org.joda.time.ReadableInstant readableInstant12 = null;
        org.joda.time.Duration duration13 = mutablePeriod2.toDurationTo(readableInstant12);
        org.joda.time.ReadableInstant readableInstant14 = null;
        org.joda.time.ReadableInstant readableInstant15 = null;
        org.joda.time.PeriodType periodType16 = org.joda.time.PeriodType.days();
        org.joda.time.Period period17 = new org.joda.time.Period(readableInstant14, readableInstant15, periodType16);
        org.joda.time.Period period18 = duration13.toPeriod(periodType16);
        org.joda.time.Duration duration20 = org.joda.time.Duration.standardMinutes((-1L));
        long long21 = duration20.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant22 = null;
        org.joda.time.Period period23 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration20, readableInstant22);
        org.joda.time.PeriodType periodType24 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology25 = null;
        org.joda.time.Period period26 = duration20.toPeriod(periodType24, chronology25);
        java.lang.String str27 = period26.toString();
        org.joda.time.Duration duration31 = org.joda.time.Duration.standardMinutes((-1L));
        long long32 = duration31.getStandardMinutes();
        org.joda.time.Period period33 = duration31.toPeriod();
        org.joda.time.Duration duration35 = org.joda.time.Duration.standardMinutes((-1L));
        long long36 = duration35.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant37 = null;
        org.joda.time.Period period38 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration35, readableInstant37);
        org.joda.time.PeriodType periodType39 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology40 = null;
        org.joda.time.Period period41 = duration35.toPeriod(periodType39, chronology40);
        org.joda.time.Period period42 = duration31.toPeriod(periodType39);
        org.joda.time.Chronology chronology43 = null;
        org.joda.time.MutablePeriod mutablePeriod44 = new org.joda.time.MutablePeriod(1L, (long) (byte) 100, periodType39, chronology43);
        org.joda.time.PeriodType periodType45 = periodType39.withMillisRemoved();
        org.joda.time.PeriodType periodType46 = periodType45.withSecondsRemoved();
        org.joda.time.PeriodType periodType47 = periodType46.withHoursRemoved();
        org.joda.time.Period period48 = period26.normalizedStandard(periodType47);
        org.joda.time.Period period49 = duration13.toPeriod(periodType47);
        long long50 = duration13.getStandardDays();
        org.joda.time.ReadableDuration readableDuration51 = null;
        boolean boolean52 = duration13.isLongerThan(readableDuration51);
        org.joda.time.PeriodType periodType55 = org.joda.time.PeriodType.millis();
        org.joda.time.PeriodType periodType56 = periodType55.withMonthsRemoved();
        org.joda.time.Chronology chronology57 = null;
        org.joda.time.MutablePeriod mutablePeriod58 = new org.joda.time.MutablePeriod(2199L, (long) 100, periodType56, chronology57);
        org.joda.time.Period period59 = duration13.toPeriod(periodType56);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(periodType8);
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertNotNull(periodType16);
        org.junit.Assert.assertNotNull(period18);
        org.junit.Assert.assertNotNull(duration20);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + (-1L) + "'", long21 == (-1L));
        org.junit.Assert.assertNotNull(periodType24);
        org.junit.Assert.assertNotNull(period26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "P0D" + "'", str27, "P0D");
        org.junit.Assert.assertNotNull(duration31);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + (-1L) + "'", long32 == (-1L));
        org.junit.Assert.assertNotNull(period33);
        org.junit.Assert.assertNotNull(duration35);
        org.junit.Assert.assertTrue("'" + long36 + "' != '" + (-1L) + "'", long36 == (-1L));
        org.junit.Assert.assertNotNull(periodType39);
        org.junit.Assert.assertNotNull(period41);
        org.junit.Assert.assertNotNull(period42);
        org.junit.Assert.assertNotNull(periodType45);
        org.junit.Assert.assertNotNull(periodType46);
        org.junit.Assert.assertNotNull(periodType47);
        org.junit.Assert.assertNotNull(period48);
        org.junit.Assert.assertNotNull(period49);
        org.junit.Assert.assertTrue("'" + long50 + "' != '" + 0L + "'", long50 == 0L);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(periodType55);
        org.junit.Assert.assertNotNull(periodType56);
        org.junit.Assert.assertNotNull(period59);
    }

    @Test
    public void test17915() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17915");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableInstant readableInstant1 = null;
        org.joda.time.MutablePeriod mutablePeriod2 = new org.joda.time.MutablePeriod(readableInstant0, readableInstant1);
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.ReadableInstant readableInstant4 = null;
        org.joda.time.MutablePeriod mutablePeriod5 = new org.joda.time.MutablePeriod(readableInstant3, readableInstant4);
        mutablePeriod5.setPeriod((long) 10, (long) 10);
        boolean boolean9 = mutablePeriod2.equals((java.lang.Object) mutablePeriod5);
        mutablePeriod2.addSeconds(1);
        org.joda.time.ReadableInstant readableInstant12 = null;
        org.joda.time.ReadableInstant readableInstant13 = null;
        mutablePeriod2.setPeriod(readableInstant12, readableInstant13);
        org.joda.time.PeriodType periodType15 = mutablePeriod2.getPeriodType();
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(periodType15);
    }

    @Test
    public void test17916() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17916");
        java.lang.Object obj4 = null;
        org.joda.time.PeriodType periodType6 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology7 = null;
        org.joda.time.MutablePeriod mutablePeriod8 = new org.joda.time.MutablePeriod((long) '4', periodType6, chronology7);
        org.joda.time.Chronology chronology9 = null;
        org.joda.time.MutablePeriod mutablePeriod10 = new org.joda.time.MutablePeriod(obj4, periodType6, chronology9);
        org.joda.time.PeriodType periodType11 = periodType6.withWeeksRemoved();
        org.joda.time.PeriodType periodType12 = periodType11.withMonthsRemoved();
        org.joda.time.Chronology chronology13 = null;
        org.joda.time.MutablePeriod mutablePeriod14 = new org.joda.time.MutablePeriod(0L, periodType12, chronology13);
        org.joda.time.Chronology chronology15 = null;
        org.joda.time.MutablePeriod mutablePeriod16 = new org.joda.time.MutablePeriod((long) 7, periodType12, chronology15);
        org.joda.time.MutablePeriod mutablePeriod17 = new org.joda.time.MutablePeriod(periodType12);
        java.lang.String str18 = periodType12.toString();
        org.joda.time.MutablePeriod mutablePeriod19 = new org.joda.time.MutablePeriod((long) '4', 42L, periodType12);
        org.junit.Assert.assertNotNull(periodType6);
        org.junit.Assert.assertNotNull(periodType11);
        org.junit.Assert.assertNotNull(periodType12);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "PeriodType[Days]" + "'", str18, "PeriodType[Days]");
    }

    @Test
    public void test17917() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17917");
        org.joda.time.Chronology chronology1 = null;
        org.joda.time.MutablePeriod mutablePeriod2 = new org.joda.time.MutablePeriod(1L, chronology1);
        org.joda.time.Chronology chronology4 = null;
        org.joda.time.MutablePeriod mutablePeriod5 = new org.joda.time.MutablePeriod(1L, chronology4);
        mutablePeriod2.add((org.joda.time.ReadablePeriod) mutablePeriod5);
        org.joda.time.Duration duration8 = org.joda.time.Duration.standardMinutes((-1L));
        long long9 = duration8.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant10 = null;
        org.joda.time.Period period11 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration8, readableInstant10);
        mutablePeriod5.setPeriod((org.joda.time.ReadablePeriod) period11);
        org.joda.time.PeriodType periodType13 = mutablePeriod5.getPeriodType();
        mutablePeriod5.addHours((int) (short) 0);
        int int16 = mutablePeriod5.getYears();
        mutablePeriod5.setMinutes(350);
        mutablePeriod5.setMinutes(32);
        org.junit.Assert.assertNotNull(duration8);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + (-1L) + "'", long9 == (-1L));
        org.junit.Assert.assertNotNull(periodType13);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
    }

    @Test
    public void test17918() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17918");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.MutablePeriod mutablePeriod3 = new org.joda.time.MutablePeriod(1L, chronology2);
        org.joda.time.Chronology chronology5 = null;
        org.joda.time.MutablePeriod mutablePeriod6 = new org.joda.time.MutablePeriod(1L, chronology5);
        mutablePeriod3.add((org.joda.time.ReadablePeriod) mutablePeriod6);
        mutablePeriod3.setMillis((int) (short) 0);
        org.joda.time.Chronology chronology11 = null;
        mutablePeriod3.add((long) (short) 0, chronology11);
        org.joda.time.PeriodType periodType15 = org.joda.time.PeriodType.seconds();
        org.joda.time.PeriodType periodType16 = periodType15.withMinutesRemoved();
        org.joda.time.Chronology chronology17 = null;
        org.joda.time.MutablePeriod mutablePeriod18 = new org.joda.time.MutablePeriod((long) 0, (long) (short) 100, periodType15, chronology17);
        org.joda.time.PeriodType periodType19 = periodType15.withMillisRemoved();
        org.joda.time.Chronology chronology20 = null;
        org.joda.time.MutablePeriod mutablePeriod21 = new org.joda.time.MutablePeriod((java.lang.Object) mutablePeriod3, periodType19, chronology20);
        org.joda.time.format.PeriodPrinter periodPrinter22 = null;
        org.joda.time.format.PeriodParser periodParser23 = null;
        org.joda.time.format.PeriodFormatter periodFormatter24 = new org.joda.time.format.PeriodFormatter(periodPrinter22, periodParser23);
        org.joda.time.format.PeriodPrinter periodPrinter25 = periodFormatter24.getPrinter();
        boolean boolean26 = periodFormatter24.isParser();
        java.util.Locale locale27 = periodFormatter24.getLocale();
        boolean boolean28 = periodType19.equals((java.lang.Object) periodFormatter24);
        org.joda.time.Chronology chronology29 = null;
        org.joda.time.Period period30 = new org.joda.time.Period((long) (byte) 100, periodType19, chronology29);
        int int31 = period30.getHours();
        int int32 = period30.getMillis();
        org.junit.Assert.assertNotNull(periodType15);
        org.junit.Assert.assertNotNull(periodType16);
        org.junit.Assert.assertNotNull(periodType19);
        org.junit.Assert.assertNull(periodPrinter25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNull(locale27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
    }

    @Test
    public void test17919() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17919");
        org.joda.time.Chronology chronology1 = null;
        org.joda.time.Period period2 = new org.joda.time.Period((long) (short) -1, chronology1);
        org.joda.time.Period period4 = period2.plusMonths((-90));
        org.joda.time.Period period6 = period2.withDays((int) (short) 0);
        org.joda.time.Period period8 = period6.plusSeconds((-1));
        org.joda.time.ReadableInstant readableInstant9 = null;
        org.joda.time.Duration duration11 = org.joda.time.Duration.standardMinutes((-1L));
        long long12 = duration11.getStandardMinutes();
        org.joda.time.Duration duration14 = org.joda.time.Duration.standardMinutes((-1L));
        long long15 = duration14.getStandardMinutes();
        boolean boolean16 = duration11.isLongerThan((org.joda.time.ReadableDuration) duration14);
        org.joda.time.Duration duration18 = duration14.withMillis(1L);
        org.joda.time.Period period19 = new org.joda.time.Period(readableInstant9, (org.joda.time.ReadableDuration) duration14);
        org.joda.time.DurationFieldType durationFieldType20 = org.joda.time.DurationFieldType.years();
        java.lang.String str21 = durationFieldType20.getName();
        org.joda.time.Chronology chronology22 = null;
        boolean boolean23 = durationFieldType20.isSupported(chronology22);
        org.joda.time.Period period25 = period19.withFieldAdded(durationFieldType20, 0);
        org.joda.time.Period period27 = period19.plusHours((int) (short) 0);
        org.joda.time.Duration duration28 = period27.toStandardDuration();
        org.joda.time.Chronology chronology29 = null;
        org.joda.time.Period period30 = duration28.toPeriod(chronology29);
        org.joda.time.Period period31 = period6.plus((org.joda.time.ReadablePeriod) period30);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + (-1L) + "'", long12 == (-1L));
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + (-1L) + "'", long15 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(duration18);
        org.junit.Assert.assertNotNull(durationFieldType20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "years" + "'", str21, "years");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(period25);
        org.junit.Assert.assertNotNull(period27);
        org.junit.Assert.assertNotNull(duration28);
        org.junit.Assert.assertNotNull(period30);
        org.junit.Assert.assertNotNull(period31);
    }

    @Test
    public void test17920() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17920");
        org.joda.time.MutablePeriod mutablePeriod2 = new org.joda.time.MutablePeriod(1L, 100L);
        org.joda.time.Period period4 = org.joda.time.Period.minutes(97);
        org.joda.time.Chronology chronology6 = null;
        org.joda.time.MutablePeriod mutablePeriod7 = new org.joda.time.MutablePeriod(1L, chronology6);
        int int8 = mutablePeriod7.getMinutes();
        org.joda.time.Chronology chronology11 = null;
        mutablePeriod7.setPeriod((long) (byte) 0, (long) (byte) 0, chronology11);
        int int13 = mutablePeriod7.getMonths();
        org.joda.time.Period period14 = period4.minus((org.joda.time.ReadablePeriod) mutablePeriod7);
        org.joda.time.Period period15 = period14.toPeriod();
        mutablePeriod2.mergePeriod((org.joda.time.ReadablePeriod) period15);
        mutablePeriod2.setWeeks((-935));
        org.joda.time.Chronology chronology20 = null;
        mutablePeriod2.setPeriod((-2419139998L), chronology20);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(period14);
        org.junit.Assert.assertNotNull(period15);
    }

    @Test
    public void test17921() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17921");
        org.joda.time.PeriodType periodType2 = null;
        org.joda.time.MutablePeriod mutablePeriod3 = new org.joda.time.MutablePeriod((long) ' ', (-1L), periodType2);
        mutablePeriod3.addMinutes((int) ' ');
        mutablePeriod3.clear();
        mutablePeriod3.addYears((int) (byte) 1);
        org.joda.time.Duration duration10 = org.joda.time.Duration.standardMinutes((-1L));
        long long11 = duration10.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant12 = null;
        org.joda.time.Period period13 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration10, readableInstant12);
        org.joda.time.PeriodType periodType14 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology15 = null;
        org.joda.time.Period period16 = duration10.toPeriod(periodType14, chronology15);
        org.joda.time.ReadableInstant readableInstant17 = null;
        org.joda.time.Period period18 = duration10.toPeriodTo(readableInstant17);
        int int19 = period18.getDays();
        org.joda.time.Period period21 = period18.withDays(100);
        org.joda.time.Period period22 = period18.toPeriod();
        org.joda.time.Chronology chronology24 = null;
        org.joda.time.MutablePeriod mutablePeriod25 = new org.joda.time.MutablePeriod(1L, chronology24);
        org.joda.time.Period period27 = org.joda.time.Period.seconds((int) '#');
        mutablePeriod25.setPeriod((org.joda.time.ReadablePeriod) period27);
        org.joda.time.DurationFieldType durationFieldType29 = org.joda.time.DurationFieldType.years();
        java.lang.String str30 = durationFieldType29.getName();
        boolean boolean31 = mutablePeriod25.isSupported(durationFieldType29);
        org.joda.time.Period period33 = period22.withField(durationFieldType29, (int) (byte) -1);
        int int34 = mutablePeriod3.get(durationFieldType29);
        org.joda.time.Chronology chronology36 = null;
        org.joda.time.MutablePeriod mutablePeriod37 = new org.joda.time.MutablePeriod(1L, chronology36);
        org.joda.time.Chronology chronology39 = null;
        org.joda.time.MutablePeriod mutablePeriod40 = new org.joda.time.MutablePeriod(1L, chronology39);
        mutablePeriod37.add((org.joda.time.ReadablePeriod) mutablePeriod40);
        mutablePeriod37.setMillis((int) (short) 0);
        org.joda.time.Chronology chronology45 = null;
        mutablePeriod37.add((long) (short) 0, chronology45);
        org.joda.time.PeriodType periodType49 = org.joda.time.PeriodType.seconds();
        org.joda.time.PeriodType periodType50 = periodType49.withMinutesRemoved();
        org.joda.time.Chronology chronology51 = null;
        org.joda.time.MutablePeriod mutablePeriod52 = new org.joda.time.MutablePeriod((long) 0, (long) (short) 100, periodType49, chronology51);
        org.joda.time.PeriodType periodType53 = periodType49.withMillisRemoved();
        org.joda.time.Chronology chronology54 = null;
        org.joda.time.MutablePeriod mutablePeriod55 = new org.joda.time.MutablePeriod((java.lang.Object) mutablePeriod37, periodType53, chronology54);
        org.joda.time.ReadableInstant readableInstant56 = null;
        org.joda.time.ReadableInstant readableInstant57 = null;
        org.joda.time.PeriodType periodType58 = org.joda.time.PeriodType.yearMonthDay();
        org.joda.time.MutablePeriod mutablePeriod59 = new org.joda.time.MutablePeriod(readableInstant56, readableInstant57, periodType58);
        boolean boolean60 = periodType53.equals((java.lang.Object) periodType58);
        org.joda.time.Chronology chronology61 = null;
        org.joda.time.Period period62 = new org.joda.time.Period((java.lang.Object) mutablePeriod3, periodType58, chronology61);
        mutablePeriod3.addDays(1);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + (-1L) + "'", long11 == (-1L));
        org.junit.Assert.assertNotNull(periodType14);
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertNotNull(period18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertNotNull(period22);
        org.junit.Assert.assertNotNull(period27);
        org.junit.Assert.assertNotNull(durationFieldType29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "years" + "'", str30, "years");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(period33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 1 + "'", int34 == 1);
        org.junit.Assert.assertNotNull(periodType49);
        org.junit.Assert.assertNotNull(periodType50);
        org.junit.Assert.assertNotNull(periodType53);
        org.junit.Assert.assertNotNull(periodType58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
    }

    @Test
    public void test17922() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17922");
        org.joda.time.Duration duration2 = new org.joda.time.Duration((-59909L), 30930600000L);
        org.joda.time.Duration duration4 = duration2.withMillis((-1440L));
        org.joda.time.ReadableInstant readableInstant5 = null;
        org.joda.time.Duration duration9 = org.joda.time.Duration.standardDays((long) (short) 0);
        org.joda.time.Duration duration12 = duration9.withDurationAdded((-59909L), 2);
        org.joda.time.ReadableInstant readableInstant13 = null;
        org.joda.time.Chronology chronology15 = null;
        org.joda.time.MutablePeriod mutablePeriod16 = new org.joda.time.MutablePeriod(1L, chronology15);
        org.joda.time.Period period18 = org.joda.time.Period.seconds((int) '#');
        mutablePeriod16.setPeriod((org.joda.time.ReadablePeriod) period18);
        mutablePeriod16.setWeeks((int) ' ');
        org.joda.time.PeriodType periodType22 = mutablePeriod16.getPeriodType();
        org.joda.time.PeriodType periodType23 = periodType22.withMillisRemoved();
        org.joda.time.Period period24 = duration12.toPeriodTo(readableInstant13, periodType22);
        org.joda.time.Chronology chronology25 = null;
        org.joda.time.Period period26 = new org.joda.time.Period((long) 12, (long) 10, periodType22, chronology25);
        org.joda.time.MutablePeriod mutablePeriod27 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration2, readableInstant5, periodType22);
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertNotNull(period18);
        org.junit.Assert.assertNotNull(periodType22);
        org.junit.Assert.assertNotNull(periodType23);
        org.junit.Assert.assertNotNull(period24);
    }

    @Test
    public void test17923() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17923");
        org.joda.time.PeriodType periodType1 = null;
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.MutablePeriod mutablePeriod3 = new org.joda.time.MutablePeriod((long) (byte) 10, periodType1, chronology2);
        org.joda.time.ReadableInstant readableInstant4 = null;
        org.joda.time.ReadableInstant readableInstant5 = null;
        org.joda.time.Duration duration7 = org.joda.time.Duration.standardMinutes((-1L));
        long long8 = duration7.getStandardMinutes();
        org.joda.time.Duration duration10 = org.joda.time.Duration.standardMinutes((-1L));
        long long11 = duration10.getStandardMinutes();
        boolean boolean12 = duration7.isLongerThan((org.joda.time.ReadableDuration) duration10);
        org.joda.time.Duration duration14 = duration10.withMillis(1L);
        org.joda.time.Period period15 = new org.joda.time.Period(readableInstant5, (org.joda.time.ReadableDuration) duration10);
        org.joda.time.MutablePeriod mutablePeriod16 = new org.joda.time.MutablePeriod(readableInstant4, (org.joda.time.ReadableDuration) duration10);
        mutablePeriod3.add((org.joda.time.ReadableDuration) duration10);
        org.joda.time.Duration duration19 = duration10.minus((long) '#');
        org.joda.time.Duration duration21 = new org.joda.time.Duration((long) (short) 100);
        org.joda.time.Duration duration23 = org.joda.time.Duration.standardMinutes((-1L));
        long long24 = duration23.getStandardMinutes();
        org.joda.time.Duration duration26 = org.joda.time.Duration.standardMinutes((-1L));
        long long27 = duration26.getStandardMinutes();
        boolean boolean28 = duration23.isLongerThan((org.joda.time.ReadableDuration) duration26);
        org.joda.time.Duration duration30 = duration26.withMillis((long) 1);
        org.joda.time.Duration duration32 = org.joda.time.Duration.standardMinutes((-1L));
        long long33 = duration32.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant34 = null;
        org.joda.time.Period period35 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration32, readableInstant34);
        org.joda.time.PeriodType periodType36 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology37 = null;
        org.joda.time.Period period38 = duration32.toPeriod(periodType36, chronology37);
        org.joda.time.Duration duration41 = duration32.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration43 = org.joda.time.Duration.standardMinutes((-1L));
        long long44 = duration43.getStandardMinutes();
        org.joda.time.Duration duration46 = org.joda.time.Duration.standardMinutes((-1L));
        long long47 = duration46.getStandardMinutes();
        boolean boolean48 = duration43.isLongerThan((org.joda.time.ReadableDuration) duration46);
        org.joda.time.Duration duration50 = duration46.withMillis((long) 1);
        boolean boolean51 = duration41.isShorterThan((org.joda.time.ReadableDuration) duration46);
        boolean boolean52 = duration26.isLongerThan((org.joda.time.ReadableDuration) duration46);
        org.joda.time.Duration duration54 = org.joda.time.Duration.standardMinutes((-1L));
        long long55 = duration54.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant56 = null;
        org.joda.time.Period period57 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration54, readableInstant56);
        org.joda.time.PeriodType periodType58 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology59 = null;
        org.joda.time.Period period60 = duration54.toPeriod(periodType58, chronology59);
        org.joda.time.Duration duration61 = duration54.toDuration();
        boolean boolean62 = duration26.isEqual((org.joda.time.ReadableDuration) duration54);
        org.joda.time.Duration duration64 = org.joda.time.Duration.standardMinutes((-1L));
        long long65 = duration64.getStandardMinutes();
        org.joda.time.Duration duration67 = org.joda.time.Duration.standardMinutes((-1L));
        long long68 = duration67.getStandardMinutes();
        boolean boolean69 = duration64.isLongerThan((org.joda.time.ReadableDuration) duration67);
        org.joda.time.Duration duration70 = duration26.plus((org.joda.time.ReadableDuration) duration67);
        org.joda.time.Duration duration71 = duration21.minus((org.joda.time.ReadableDuration) duration70);
        org.joda.time.Minutes minutes72 = duration70.toStandardMinutes();
        org.joda.time.ReadableInstant readableInstant73 = null;
        org.joda.time.Chronology chronology75 = null;
        org.joda.time.MutablePeriod mutablePeriod76 = new org.joda.time.MutablePeriod(1L, chronology75);
        org.joda.time.Period period78 = org.joda.time.Period.seconds((int) '#');
        mutablePeriod76.setPeriod((org.joda.time.ReadablePeriod) period78);
        mutablePeriod76.addMillis((int) (short) 1);
        org.joda.time.MutablePeriod mutablePeriod82 = mutablePeriod76.toMutablePeriod();
        mutablePeriod82.addYears((int) (byte) 1);
        org.joda.time.PeriodType periodType85 = mutablePeriod82.getPeriodType();
        org.joda.time.Period period86 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration70, readableInstant73, periodType85);
        boolean boolean87 = duration19.equals((java.lang.Object) periodType85);
        org.joda.time.PeriodType periodType88 = null;
        org.joda.time.Period period89 = duration19.toPeriod(periodType88);
        org.joda.time.Period period91 = period89.withMillis(0);
        org.junit.Assert.assertNotNull(duration7);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + (-1L) + "'", long8 == (-1L));
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + (-1L) + "'", long11 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertNotNull(duration19);
        org.junit.Assert.assertNotNull(duration23);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + (-1L) + "'", long24 == (-1L));
        org.junit.Assert.assertNotNull(duration26);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + (-1L) + "'", long27 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(duration30);
        org.junit.Assert.assertNotNull(duration32);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + (-1L) + "'", long33 == (-1L));
        org.junit.Assert.assertNotNull(periodType36);
        org.junit.Assert.assertNotNull(period38);
        org.junit.Assert.assertNotNull(duration41);
        org.junit.Assert.assertNotNull(duration43);
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + (-1L) + "'", long44 == (-1L));
        org.junit.Assert.assertNotNull(duration46);
        org.junit.Assert.assertTrue("'" + long47 + "' != '" + (-1L) + "'", long47 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(duration50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(duration54);
        org.junit.Assert.assertTrue("'" + long55 + "' != '" + (-1L) + "'", long55 == (-1L));
        org.junit.Assert.assertNotNull(periodType58);
        org.junit.Assert.assertNotNull(period60);
        org.junit.Assert.assertNotNull(duration61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(duration64);
        org.junit.Assert.assertTrue("'" + long65 + "' != '" + (-1L) + "'", long65 == (-1L));
        org.junit.Assert.assertNotNull(duration67);
        org.junit.Assert.assertTrue("'" + long68 + "' != '" + (-1L) + "'", long68 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(duration70);
        org.junit.Assert.assertNotNull(duration71);
        org.junit.Assert.assertNotNull(minutes72);
        org.junit.Assert.assertNotNull(period78);
        org.junit.Assert.assertNotNull(mutablePeriod82);
        org.junit.Assert.assertNotNull(periodType85);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNotNull(period89);
        org.junit.Assert.assertNotNull(period91);
    }

    @Test
    public void test17924() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17924");
        org.joda.time.format.PeriodPrinter periodPrinter0 = null;
        org.joda.time.format.PeriodParser periodParser1 = null;
        org.joda.time.format.PeriodFormatter periodFormatter2 = new org.joda.time.format.PeriodFormatter(periodPrinter0, periodParser1);
        org.joda.time.format.PeriodPrinter periodPrinter3 = periodFormatter2.getPrinter();
        boolean boolean4 = periodFormatter2.isParser();
        java.util.Locale locale5 = periodFormatter2.getLocale();
        org.joda.time.PeriodType periodType6 = periodFormatter2.getParseType();
        java.util.Locale locale7 = null;
        org.joda.time.format.PeriodFormatter periodFormatter8 = periodFormatter2.withLocale(locale7);
        boolean boolean9 = periodFormatter2.isParser();
        boolean boolean10 = periodFormatter2.isParser();
        java.util.Locale locale11 = null;
        org.joda.time.format.PeriodFormatter periodFormatter12 = periodFormatter2.withLocale(locale11);
        org.joda.time.ReadableInstant readableInstant15 = null;
        org.joda.time.Duration duration17 = org.joda.time.Duration.standardHours((long) 10);
        org.joda.time.Duration duration19 = org.joda.time.Duration.standardMinutes((-1L));
        long long20 = duration19.getStandardMinutes();
        org.joda.time.Duration duration22 = org.joda.time.Duration.standardMinutes((-1L));
        long long23 = duration22.getStandardMinutes();
        boolean boolean24 = duration19.isLongerThan((org.joda.time.ReadableDuration) duration22);
        org.joda.time.Period period25 = duration22.toPeriod();
        org.joda.time.Minutes minutes26 = duration22.toStandardMinutes();
        boolean boolean27 = duration17.isEqual((org.joda.time.ReadableDuration) duration22);
        org.joda.time.Duration duration29 = org.joda.time.Duration.standardMinutes((-1L));
        long long30 = duration29.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant31 = null;
        org.joda.time.Period period32 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration29, readableInstant31);
        org.joda.time.PeriodType periodType33 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology34 = null;
        org.joda.time.Period period35 = duration29.toPeriod(periodType33, chronology34);
        org.joda.time.Duration duration38 = duration29.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration40 = org.joda.time.Duration.standardMinutes((-1L));
        long long41 = duration40.getStandardMinutes();
        org.joda.time.Duration duration43 = org.joda.time.Duration.standardMinutes((-1L));
        long long44 = duration43.getStandardMinutes();
        boolean boolean45 = duration40.isLongerThan((org.joda.time.ReadableDuration) duration43);
        org.joda.time.Duration duration47 = duration43.withMillis((long) 1);
        boolean boolean48 = duration38.isShorterThan((org.joda.time.ReadableDuration) duration43);
        boolean boolean49 = duration22.isEqual((org.joda.time.ReadableDuration) duration43);
        org.joda.time.ReadableInstant readableInstant50 = null;
        org.joda.time.MutablePeriod mutablePeriod51 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration22, readableInstant50);
        org.joda.time.Duration duration53 = org.joda.time.Duration.standardMinutes((-1L));
        long long54 = duration53.getStandardMinutes();
        org.joda.time.Period period55 = duration53.toPeriod();
        org.joda.time.Duration duration57 = org.joda.time.Duration.standardMinutes((-1L));
        long long58 = duration57.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant59 = null;
        org.joda.time.Period period60 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration57, readableInstant59);
        org.joda.time.PeriodType periodType61 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology62 = null;
        org.joda.time.Period period63 = duration57.toPeriod(periodType61, chronology62);
        org.joda.time.Period period64 = duration53.toPeriod(periodType61);
        org.joda.time.Duration duration66 = org.joda.time.Duration.standardMinutes((-1L));
        long long67 = duration66.getStandardMinutes();
        boolean boolean68 = duration53.isLongerThan((org.joda.time.ReadableDuration) duration66);
        org.joda.time.Duration duration70 = duration66.withMillis((long) 0);
        org.joda.time.PeriodType periodType71 = org.joda.time.PeriodType.weeks();
        org.joda.time.Period period72 = duration70.toPeriod(periodType71);
        org.joda.time.Period period73 = new org.joda.time.Period(readableInstant15, (org.joda.time.ReadableDuration) duration22, periodType71);
        org.joda.time.PeriodType periodType74 = periodType71.withYearsRemoved();
        org.joda.time.Chronology chronology75 = null;
        org.joda.time.MutablePeriod mutablePeriod76 = new org.joda.time.MutablePeriod((long) (short) 10, (long) (-1), periodType71, chronology75);
        org.joda.time.PeriodType periodType77 = periodType71.withWeeksRemoved();
        org.joda.time.format.PeriodFormatter periodFormatter78 = periodFormatter2.withParseType(periodType71);
        org.joda.time.PeriodType periodType79 = periodFormatter2.getParseType();
        boolean boolean80 = periodFormatter2.isPrinter();
        java.util.Locale locale81 = periodFormatter2.getLocale();
        org.junit.Assert.assertNull(periodPrinter3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(locale5);
        org.junit.Assert.assertNull(periodType6);
        org.junit.Assert.assertNotNull(periodFormatter8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(periodFormatter12);
        org.junit.Assert.assertNotNull(duration17);
        org.junit.Assert.assertNotNull(duration19);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + (-1L) + "'", long20 == (-1L));
        org.junit.Assert.assertNotNull(duration22);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + (-1L) + "'", long23 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(period25);
        org.junit.Assert.assertNotNull(minutes26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(duration29);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + (-1L) + "'", long30 == (-1L));
        org.junit.Assert.assertNotNull(periodType33);
        org.junit.Assert.assertNotNull(period35);
        org.junit.Assert.assertNotNull(duration38);
        org.junit.Assert.assertNotNull(duration40);
        org.junit.Assert.assertTrue("'" + long41 + "' != '" + (-1L) + "'", long41 == (-1L));
        org.junit.Assert.assertNotNull(duration43);
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + (-1L) + "'", long44 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(duration47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(duration53);
        org.junit.Assert.assertTrue("'" + long54 + "' != '" + (-1L) + "'", long54 == (-1L));
        org.junit.Assert.assertNotNull(period55);
        org.junit.Assert.assertNotNull(duration57);
        org.junit.Assert.assertTrue("'" + long58 + "' != '" + (-1L) + "'", long58 == (-1L));
        org.junit.Assert.assertNotNull(periodType61);
        org.junit.Assert.assertNotNull(period63);
        org.junit.Assert.assertNotNull(period64);
        org.junit.Assert.assertNotNull(duration66);
        org.junit.Assert.assertTrue("'" + long67 + "' != '" + (-1L) + "'", long67 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(duration70);
        org.junit.Assert.assertNotNull(periodType71);
        org.junit.Assert.assertNotNull(period72);
        org.junit.Assert.assertNotNull(periodType74);
        org.junit.Assert.assertNotNull(periodType77);
        org.junit.Assert.assertNotNull(periodFormatter78);
        org.junit.Assert.assertNull(periodType79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNull(locale81);
    }

    @Test
    public void test17925() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17925");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableInstant readableInstant1 = null;
        org.joda.time.Duration duration2 = new org.joda.time.Duration(readableInstant0, readableInstant1);
        org.joda.time.Duration duration5 = duration2.withDurationAdded((long) 10, (int) (short) 1);
        org.joda.time.Duration duration6 = duration5.toDuration();
        org.junit.Assert.assertNotNull(duration5);
        org.junit.Assert.assertNotNull(duration6);
    }

    @Test
    public void test17926() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17926");
        org.joda.time.Period period1 = org.joda.time.Period.seconds((-900));
        org.junit.Assert.assertNotNull(period1);
    }

    @Test
    public void test17927() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17927");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.MutablePeriod mutablePeriod3 = new org.joda.time.MutablePeriod((long) 100, 10L, chronology2);
        int int4 = mutablePeriod3.getYears();
        mutablePeriod3.addMinutes(97);
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.MutablePeriod mutablePeriod9 = new org.joda.time.MutablePeriod(readableInstant7, readableInstant8);
        mutablePeriod9.setPeriod((long) 10, (long) 10);
        org.joda.time.MutablePeriod mutablePeriod13 = mutablePeriod9.toMutablePeriod();
        org.joda.time.Period period15 = org.joda.time.Period.minutes(34);
        boolean boolean16 = mutablePeriod13.equals((java.lang.Object) 34);
        mutablePeriod3.setPeriod((org.joda.time.ReadablePeriod) mutablePeriod13);
        org.joda.time.ReadableInstant readableInstant18 = null;
        org.joda.time.Duration duration19 = mutablePeriod13.toDurationTo(readableInstant18);
        org.joda.time.Duration duration21 = org.joda.time.Duration.standardMinutes((-1L));
        long long22 = duration21.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant23 = null;
        org.joda.time.Period period24 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration21, readableInstant23);
        org.joda.time.PeriodType periodType25 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology26 = null;
        org.joda.time.Period period27 = duration21.toPeriod(periodType25, chronology26);
        org.joda.time.Duration duration28 = duration21.toDuration();
        org.joda.time.Chronology chronology29 = null;
        org.joda.time.Period period30 = duration21.toPeriod(chronology29);
        org.joda.time.Duration duration32 = org.joda.time.Duration.standardMinutes((-1L));
        long long33 = duration32.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant34 = null;
        org.joda.time.Period period35 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration32, readableInstant34);
        org.joda.time.PeriodType periodType36 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology37 = null;
        org.joda.time.Period period38 = duration32.toPeriod(periodType36, chronology37);
        org.joda.time.Duration duration41 = duration32.withDurationAdded(0L, (int) (short) 10);
        java.lang.String str42 = duration41.toString();
        boolean boolean43 = duration21.isLongerThan((org.joda.time.ReadableDuration) duration41);
        long long44 = duration21.getStandardSeconds();
        org.joda.time.Duration duration45 = duration19.minus((org.joda.time.ReadableDuration) duration21);
        org.joda.time.Chronology chronology47 = null;
        org.joda.time.MutablePeriod mutablePeriod48 = new org.joda.time.MutablePeriod(1L, chronology47);
        org.joda.time.Chronology chronology50 = null;
        org.joda.time.MutablePeriod mutablePeriod51 = new org.joda.time.MutablePeriod(1L, chronology50);
        mutablePeriod48.add((org.joda.time.ReadablePeriod) mutablePeriod51);
        mutablePeriod48.setMillis((int) (short) 0);
        org.joda.time.PeriodType periodType57 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period58 = new org.joda.time.Period(10L, periodType57);
        org.joda.time.PeriodType periodType59 = periodType57.withWeeksRemoved();
        org.joda.time.MutablePeriod mutablePeriod60 = new org.joda.time.MutablePeriod((long) (byte) 0, periodType57);
        org.joda.time.Duration duration62 = org.joda.time.Duration.standardMinutes((-1L));
        long long63 = duration62.getStandardMinutes();
        org.joda.time.PeriodType periodType64 = null;
        org.joda.time.Period period65 = duration62.toPeriod(periodType64);
        org.joda.time.Chronology chronology66 = null;
        mutablePeriod60.setPeriod((org.joda.time.ReadableDuration) duration62, chronology66);
        org.joda.time.PeriodType periodType68 = mutablePeriod60.getPeriodType();
        org.joda.time.MutablePeriod mutablePeriod69 = mutablePeriod60.toMutablePeriod();
        mutablePeriod48.add((org.joda.time.ReadablePeriod) mutablePeriod69);
        int int71 = mutablePeriod48.getMillis();
        org.joda.time.Duration duration73 = new org.joda.time.Duration((-2L));
        org.joda.time.Chronology chronology74 = null;
        mutablePeriod48.setPeriod((org.joda.time.ReadableDuration) duration73, chronology74);
        org.joda.time.ReadableInstant readableInstant76 = null;
        org.joda.time.Period period77 = duration73.toPeriodFrom(readableInstant76);
        org.joda.time.MutablePeriod mutablePeriod82 = new org.joda.time.MutablePeriod(1, 0, (int) (byte) 1, 100);
        org.joda.time.DurationFieldType durationFieldType83 = org.joda.time.DurationFieldType.weeks();
        mutablePeriod82.set(durationFieldType83, (int) '#');
        mutablePeriod82.addWeeks(7);
        boolean boolean88 = duration73.equals((java.lang.Object) mutablePeriod82);
        org.joda.time.Period period89 = duration73.toPeriod();
        boolean boolean90 = duration45.isEqual((org.joda.time.ReadableDuration) duration73);
        org.joda.time.ReadableInstant readableInstant91 = null;
        org.joda.time.Period period92 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration45, readableInstant91);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod13);
        org.junit.Assert.assertNotNull(period15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(duration19);
        org.junit.Assert.assertNotNull(duration21);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + (-1L) + "'", long22 == (-1L));
        org.junit.Assert.assertNotNull(periodType25);
        org.junit.Assert.assertNotNull(period27);
        org.junit.Assert.assertNotNull(duration28);
        org.junit.Assert.assertNotNull(period30);
        org.junit.Assert.assertNotNull(duration32);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + (-1L) + "'", long33 == (-1L));
        org.junit.Assert.assertNotNull(periodType36);
        org.junit.Assert.assertNotNull(period38);
        org.junit.Assert.assertNotNull(duration41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "PT-60S" + "'", str42, "PT-60S");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + (-60L) + "'", long44 == (-60L));
        org.junit.Assert.assertNotNull(duration45);
        org.junit.Assert.assertNotNull(periodType57);
        org.junit.Assert.assertNotNull(periodType59);
        org.junit.Assert.assertNotNull(duration62);
        org.junit.Assert.assertTrue("'" + long63 + "' != '" + (-1L) + "'", long63 == (-1L));
        org.junit.Assert.assertNotNull(period65);
        org.junit.Assert.assertNotNull(periodType68);
        org.junit.Assert.assertNotNull(mutablePeriod69);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 0 + "'", int71 == 0);
        org.junit.Assert.assertNotNull(period77);
        org.junit.Assert.assertNotNull(durationFieldType83);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertNotNull(period89);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
    }

    @Test
    public void test17928() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17928");
        org.joda.time.Chronology chronology1 = null;
        org.joda.time.MutablePeriod mutablePeriod2 = new org.joda.time.MutablePeriod(1L, chronology1);
        org.joda.time.Period period4 = org.joda.time.Period.seconds((int) '#');
        mutablePeriod2.setPeriod((org.joda.time.ReadablePeriod) period4);
        org.joda.time.DurationFieldType durationFieldType6 = org.joda.time.DurationFieldType.years();
        java.lang.String str7 = durationFieldType6.getName();
        boolean boolean8 = mutablePeriod2.isSupported(durationFieldType6);
        mutablePeriod2.setSeconds((int) (byte) -1);
        java.lang.Object obj11 = mutablePeriod2.clone();
        org.joda.time.Period period12 = mutablePeriod2.toPeriod();
        int[] intArray13 = period12.getValues();
        int int14 = period12.getHours();
        org.joda.time.Duration duration18 = org.joda.time.Duration.standardMinutes((-1L));
        long long19 = duration18.getStandardMinutes();
        org.joda.time.Period period20 = duration18.toPeriod();
        org.joda.time.Duration duration22 = org.joda.time.Duration.standardMinutes((-1L));
        long long23 = duration22.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant24 = null;
        org.joda.time.Period period25 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration22, readableInstant24);
        org.joda.time.PeriodType periodType26 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology27 = null;
        org.joda.time.Period period28 = duration22.toPeriod(periodType26, chronology27);
        org.joda.time.Period period29 = duration18.toPeriod(periodType26);
        org.joda.time.Duration duration31 = org.joda.time.Duration.standardMinutes((-1L));
        long long32 = duration31.getStandardMinutes();
        boolean boolean33 = duration18.isLongerThan((org.joda.time.ReadableDuration) duration31);
        org.joda.time.Duration duration35 = org.joda.time.Duration.standardMinutes((-1L));
        long long36 = duration35.getStandardMinutes();
        org.joda.time.Duration duration38 = org.joda.time.Duration.standardMinutes((-1L));
        long long39 = duration38.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant40 = null;
        org.joda.time.Period period41 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration38, readableInstant40);
        org.joda.time.PeriodType periodType42 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology43 = null;
        org.joda.time.Period period44 = duration38.toPeriod(periodType42, chronology43);
        org.joda.time.Duration duration45 = duration38.toDuration();
        org.joda.time.Duration duration47 = duration35.withDurationAdded((org.joda.time.ReadableDuration) duration45, 100);
        int int48 = duration31.compareTo((org.joda.time.ReadableDuration) duration47);
        org.joda.time.Duration duration49 = duration31.toDuration();
        org.joda.time.Period period50 = duration49.toPeriod();
        org.joda.time.Period period51 = new org.joda.time.Period((java.lang.Object) period50);
        org.joda.time.PeriodType periodType52 = period50.getPeriodType();
        org.joda.time.Chronology chronology53 = null;
        org.joda.time.Period period54 = new org.joda.time.Period(10L, periodType52, chronology53);
        org.joda.time.Chronology chronology55 = null;
        org.joda.time.MutablePeriod mutablePeriod56 = new org.joda.time.MutablePeriod((long) (short) -1, periodType52, chronology55);
        org.joda.time.MutablePeriod mutablePeriod57 = mutablePeriod56.toMutablePeriod();
        mutablePeriod56.setWeeks(10);
        org.joda.time.Period period60 = mutablePeriod56.toPeriod();
        org.joda.time.Period period61 = period12.minus((org.joda.time.ReadablePeriod) mutablePeriod56);
        int int62 = period61.getMinutes();
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(durationFieldType6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "years" + "'", str7, "years");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertEquals(obj11.toString(), "PT-1S");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj11), "PT-1S");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj11), "PT-1S");
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[0, 0, 0, 0, 0, 0, -1, 0]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(duration18);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + (-1L) + "'", long19 == (-1L));
        org.junit.Assert.assertNotNull(period20);
        org.junit.Assert.assertNotNull(duration22);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + (-1L) + "'", long23 == (-1L));
        org.junit.Assert.assertNotNull(periodType26);
        org.junit.Assert.assertNotNull(period28);
        org.junit.Assert.assertNotNull(period29);
        org.junit.Assert.assertNotNull(duration31);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + (-1L) + "'", long32 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(duration35);
        org.junit.Assert.assertTrue("'" + long36 + "' != '" + (-1L) + "'", long36 == (-1L));
        org.junit.Assert.assertNotNull(duration38);
        org.junit.Assert.assertTrue("'" + long39 + "' != '" + (-1L) + "'", long39 == (-1L));
        org.junit.Assert.assertNotNull(periodType42);
        org.junit.Assert.assertNotNull(period44);
        org.junit.Assert.assertNotNull(duration45);
        org.junit.Assert.assertNotNull(duration47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 1 + "'", int48 == 1);
        org.junit.Assert.assertNotNull(duration49);
        org.junit.Assert.assertNotNull(period50);
        org.junit.Assert.assertNotNull(periodType52);
        org.junit.Assert.assertNotNull(mutablePeriod57);
        org.junit.Assert.assertNotNull(period60);
        org.junit.Assert.assertNotNull(period61);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 0 + "'", int62 == 0);
    }

    @Test
    public void test17929() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17929");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((-1L));
        long long2 = duration1.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.Period period4 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration1, readableInstant3);
        org.joda.time.PeriodType periodType5 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology6 = null;
        org.joda.time.Period period7 = duration1.toPeriod(periodType5, chronology6);
        org.joda.time.Duration duration10 = duration1.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration12 = org.joda.time.Duration.standardHours((long) 10);
        org.joda.time.Duration duration14 = org.joda.time.Duration.standardMinutes((-1L));
        long long15 = duration14.getStandardMinutes();
        org.joda.time.Duration duration17 = org.joda.time.Duration.standardMinutes((-1L));
        long long18 = duration17.getStandardMinutes();
        boolean boolean19 = duration14.isLongerThan((org.joda.time.ReadableDuration) duration17);
        org.joda.time.Period period20 = duration17.toPeriod();
        org.joda.time.Minutes minutes21 = duration17.toStandardMinutes();
        boolean boolean22 = duration12.isEqual((org.joda.time.ReadableDuration) duration17);
        boolean boolean23 = duration1.isShorterThan((org.joda.time.ReadableDuration) duration12);
        org.joda.time.Duration duration25 = org.joda.time.Duration.standardMinutes((-1L));
        long long26 = duration25.getStandardMinutes();
        org.joda.time.Period period27 = duration25.toPeriod();
        org.joda.time.Duration duration29 = org.joda.time.Duration.standardMinutes((-1L));
        long long30 = duration29.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant31 = null;
        org.joda.time.Period period32 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration29, readableInstant31);
        org.joda.time.PeriodType periodType33 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology34 = null;
        org.joda.time.Period period35 = duration29.toPeriod(periodType33, chronology34);
        org.joda.time.Period period36 = duration25.toPeriod(periodType33);
        org.joda.time.Duration duration38 = org.joda.time.Duration.standardMinutes((-1L));
        long long39 = duration38.getStandardMinutes();
        boolean boolean40 = duration25.isLongerThan((org.joda.time.ReadableDuration) duration38);
        org.joda.time.Duration duration42 = org.joda.time.Duration.standardMinutes((-1L));
        long long43 = duration42.getStandardMinutes();
        org.joda.time.Duration duration45 = org.joda.time.Duration.standardMinutes((-1L));
        long long46 = duration45.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant47 = null;
        org.joda.time.Period period48 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration45, readableInstant47);
        org.joda.time.PeriodType periodType49 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology50 = null;
        org.joda.time.Period period51 = duration45.toPeriod(periodType49, chronology50);
        org.joda.time.Duration duration52 = duration45.toDuration();
        org.joda.time.Duration duration54 = duration42.withDurationAdded((org.joda.time.ReadableDuration) duration52, 100);
        int int55 = duration38.compareTo((org.joda.time.ReadableDuration) duration54);
        org.joda.time.Duration duration56 = duration38.toDuration();
        java.lang.String str57 = duration56.toString();
        boolean boolean58 = duration12.equals((java.lang.Object) str57);
        long long59 = duration12.getStandardHours();
        org.joda.time.ReadableInstant readableInstant60 = null;
        org.joda.time.Period period61 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration12, readableInstant60);
        int int62 = period61.getSeconds();
        org.joda.time.Period period64 = period61.plusMinutes((-90));
        // The following exception was thrown during execution in test generation
        try {
            int int66 = period61.getValue(44);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 44");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + (-1L) + "'", long2 == (-1L));
        org.junit.Assert.assertNotNull(periodType5);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + (-1L) + "'", long15 == (-1L));
        org.junit.Assert.assertNotNull(duration17);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + (-1L) + "'", long18 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(period20);
        org.junit.Assert.assertNotNull(minutes21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(duration25);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + (-1L) + "'", long26 == (-1L));
        org.junit.Assert.assertNotNull(period27);
        org.junit.Assert.assertNotNull(duration29);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + (-1L) + "'", long30 == (-1L));
        org.junit.Assert.assertNotNull(periodType33);
        org.junit.Assert.assertNotNull(period35);
        org.junit.Assert.assertNotNull(period36);
        org.junit.Assert.assertNotNull(duration38);
        org.junit.Assert.assertTrue("'" + long39 + "' != '" + (-1L) + "'", long39 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(duration42);
        org.junit.Assert.assertTrue("'" + long43 + "' != '" + (-1L) + "'", long43 == (-1L));
        org.junit.Assert.assertNotNull(duration45);
        org.junit.Assert.assertTrue("'" + long46 + "' != '" + (-1L) + "'", long46 == (-1L));
        org.junit.Assert.assertNotNull(periodType49);
        org.junit.Assert.assertNotNull(period51);
        org.junit.Assert.assertNotNull(duration52);
        org.junit.Assert.assertNotNull(duration54);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 1 + "'", int55 == 1);
        org.junit.Assert.assertNotNull(duration56);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "PT-60S" + "'", str57, "PT-60S");
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + long59 + "' != '" + 10L + "'", long59 == 10L);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 0 + "'", int62 == 0);
        org.junit.Assert.assertNotNull(period64);
    }

    @Test
    public void test17930() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17930");
        org.joda.time.format.PeriodPrinter periodPrinter0 = null;
        org.joda.time.format.PeriodParser periodParser1 = null;
        org.joda.time.format.PeriodFormatter periodFormatter2 = new org.joda.time.format.PeriodFormatter(periodPrinter0, periodParser1);
        org.joda.time.format.PeriodPrinter periodPrinter3 = periodFormatter2.getPrinter();
        org.joda.time.Chronology chronology5 = null;
        org.joda.time.MutablePeriod mutablePeriod6 = new org.joda.time.MutablePeriod(1L, chronology5);
        org.joda.time.Period period8 = org.joda.time.Period.seconds((int) '#');
        mutablePeriod6.setPeriod((org.joda.time.ReadablePeriod) period8);
        mutablePeriod6.addMillis((int) (short) 1);
        mutablePeriod6.setPeriod(8, (int) (byte) -1, 1, (int) (byte) 10, (int) (byte) -1, (int) (short) -1, 10, (int) (byte) -1);
        org.joda.time.PeriodType periodType21 = mutablePeriod6.getPeriodType();
        org.joda.time.PeriodType periodType22 = periodType21.withMillisRemoved();
        org.joda.time.format.PeriodFormatter periodFormatter23 = periodFormatter2.withParseType(periodType22);
        java.util.Locale locale24 = periodFormatter2.getLocale();
        org.joda.time.MutablePeriod mutablePeriod27 = new org.joda.time.MutablePeriod((-89L), (-190320000L));
        // The following exception was thrown during execution in test generation
        try {
            int int30 = periodFormatter2.parseInto((org.joda.time.ReadWritablePeriod) mutablePeriod27, "PT34S", 100);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Parsing not supported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(periodPrinter3);
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertNotNull(periodType21);
        org.junit.Assert.assertNotNull(periodType22);
        org.junit.Assert.assertNotNull(periodFormatter23);
        org.junit.Assert.assertNull(locale24);
    }

    @Test
    public void test17931() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17931");
        org.joda.time.PeriodType periodType1 = org.joda.time.PeriodType.seconds();
        org.joda.time.PeriodType periodType2 = periodType1.withMinutesRemoved();
        org.joda.time.Chronology chronology3 = null;
        org.joda.time.Period period4 = new org.joda.time.Period(100L, periodType1, chronology3);
        org.joda.time.Period period5 = new org.joda.time.Period((java.lang.Object) period4);
        org.joda.time.ReadableInstant readableInstant6 = null;
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.PeriodType periodType9 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period10 = new org.joda.time.Period(10L, periodType9);
        org.joda.time.MutablePeriod mutablePeriod11 = new org.joda.time.MutablePeriod(readableInstant6, readableInstant7, periodType9);
        java.lang.String str12 = periodType9.toString();
        org.joda.time.DurationFieldType durationFieldType14 = periodType9.getFieldType((int) (byte) 0);
        org.joda.time.Chronology chronology15 = null;
        boolean boolean16 = durationFieldType14.isSupported(chronology15);
        boolean boolean17 = period4.isSupported(durationFieldType14);
        org.joda.time.Chronology chronology18 = null;
        boolean boolean19 = durationFieldType14.isSupported(chronology18);
        org.junit.Assert.assertNotNull(periodType1);
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(periodType9);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "PeriodType[Seconds]" + "'", str12, "PeriodType[Seconds]");
        org.junit.Assert.assertNotNull(durationFieldType14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
    }

    @Test
    public void test17932() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17932");
        org.joda.time.MutablePeriod mutablePeriod2 = new org.joda.time.MutablePeriod(35000L, (-59900L));
        mutablePeriod2.addMinutes((-1));
        mutablePeriod2.addDays((-35));
    }

    @Test
    public void test17933() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17933");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableInstant readableInstant1 = null;
        org.joda.time.MutablePeriod mutablePeriod2 = new org.joda.time.MutablePeriod(readableInstant0, readableInstant1);
        mutablePeriod2.setPeriod((long) 10, (long) 10);
        org.joda.time.MutablePeriod mutablePeriod6 = mutablePeriod2.toMutablePeriod();
        mutablePeriod2.addMillis((int) (byte) 10);
        org.joda.time.MutablePeriod mutablePeriod9 = mutablePeriod2.copy();
        int[] intArray10 = mutablePeriod2.getValues();
        mutablePeriod2.add((long) (short) 0);
        org.joda.time.Duration duration14 = org.joda.time.Duration.standardMinutes((-1L));
        long long15 = duration14.getStandardMinutes();
        org.joda.time.Duration duration17 = org.joda.time.Duration.standardMinutes((-1L));
        long long18 = duration17.getStandardMinutes();
        boolean boolean19 = duration14.isLongerThan((org.joda.time.ReadableDuration) duration17);
        org.joda.time.Period period20 = duration17.toPeriod();
        org.joda.time.Minutes minutes21 = duration17.toStandardMinutes();
        org.joda.time.Duration duration23 = org.joda.time.Duration.standardMinutes((-1L));
        long long24 = duration23.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant25 = null;
        org.joda.time.Period period26 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration23, readableInstant25);
        org.joda.time.PeriodType periodType27 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology28 = null;
        org.joda.time.Period period29 = duration23.toPeriod(periodType27, chronology28);
        org.joda.time.Duration duration32 = duration23.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration33 = duration17.plus((org.joda.time.ReadableDuration) duration32);
        org.joda.time.ReadableInstant readableInstant34 = null;
        org.joda.time.Duration duration38 = org.joda.time.Duration.standardMinutes((-1L));
        long long39 = duration38.getStandardMinutes();
        org.joda.time.Period period40 = duration38.toPeriod();
        org.joda.time.Duration duration42 = org.joda.time.Duration.standardMinutes((-1L));
        long long43 = duration42.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant44 = null;
        org.joda.time.Period period45 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration42, readableInstant44);
        org.joda.time.PeriodType periodType46 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology47 = null;
        org.joda.time.Period period48 = duration42.toPeriod(periodType46, chronology47);
        org.joda.time.Period period49 = duration38.toPeriod(periodType46);
        org.joda.time.Chronology chronology50 = null;
        org.joda.time.MutablePeriod mutablePeriod51 = new org.joda.time.MutablePeriod(1L, (long) (byte) 100, periodType46, chronology50);
        org.joda.time.Period period52 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration17, readableInstant34, periodType46);
        org.joda.time.ReadableInstant readableInstant53 = null;
        org.joda.time.Duration duration55 = org.joda.time.Duration.standardMinutes((-1L));
        long long56 = duration55.getStandardMinutes();
        org.joda.time.Duration duration58 = org.joda.time.Duration.standardMinutes((-1L));
        long long59 = duration58.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant60 = null;
        org.joda.time.Period period61 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration58, readableInstant60);
        org.joda.time.PeriodType periodType62 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology63 = null;
        org.joda.time.Period period64 = duration58.toPeriod(periodType62, chronology63);
        org.joda.time.Duration duration65 = duration58.toDuration();
        org.joda.time.Duration duration67 = duration55.withDurationAdded((org.joda.time.ReadableDuration) duration65, 100);
        org.joda.time.Period period68 = new org.joda.time.Period(readableInstant53, (org.joda.time.ReadableDuration) duration55);
        boolean boolean69 = duration17.equals((java.lang.Object) duration55);
        org.joda.time.Duration duration71 = duration55.withMillis((long) (byte) 10);
        mutablePeriod2.add((org.joda.time.ReadableDuration) duration71);
        mutablePeriod2.setMinutes((int) '#');
        org.joda.time.MutablePeriod mutablePeriod75 = mutablePeriod2.copy();
        int int76 = mutablePeriod2.getMinutes();
        org.junit.Assert.assertNotNull(mutablePeriod6);
        org.junit.Assert.assertNotNull(mutablePeriod9);
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[0, 0, 0, 0, 0, 0, 0, 10]");
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + (-1L) + "'", long15 == (-1L));
        org.junit.Assert.assertNotNull(duration17);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + (-1L) + "'", long18 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(period20);
        org.junit.Assert.assertNotNull(minutes21);
        org.junit.Assert.assertNotNull(duration23);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + (-1L) + "'", long24 == (-1L));
        org.junit.Assert.assertNotNull(periodType27);
        org.junit.Assert.assertNotNull(period29);
        org.junit.Assert.assertNotNull(duration32);
        org.junit.Assert.assertNotNull(duration33);
        org.junit.Assert.assertNotNull(duration38);
        org.junit.Assert.assertTrue("'" + long39 + "' != '" + (-1L) + "'", long39 == (-1L));
        org.junit.Assert.assertNotNull(period40);
        org.junit.Assert.assertNotNull(duration42);
        org.junit.Assert.assertTrue("'" + long43 + "' != '" + (-1L) + "'", long43 == (-1L));
        org.junit.Assert.assertNotNull(periodType46);
        org.junit.Assert.assertNotNull(period48);
        org.junit.Assert.assertNotNull(period49);
        org.junit.Assert.assertNotNull(duration55);
        org.junit.Assert.assertTrue("'" + long56 + "' != '" + (-1L) + "'", long56 == (-1L));
        org.junit.Assert.assertNotNull(duration58);
        org.junit.Assert.assertTrue("'" + long59 + "' != '" + (-1L) + "'", long59 == (-1L));
        org.junit.Assert.assertNotNull(periodType62);
        org.junit.Assert.assertNotNull(period64);
        org.junit.Assert.assertNotNull(duration65);
        org.junit.Assert.assertNotNull(duration67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(duration71);
        org.junit.Assert.assertNotNull(mutablePeriod75);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 35 + "'", int76 == 35);
    }

    @Test
    public void test17934() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17934");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.Duration duration2 = org.joda.time.Duration.standardMinutes((-1L));
        long long3 = duration2.getStandardMinutes();
        org.joda.time.Duration duration5 = org.joda.time.Duration.standardMinutes((-1L));
        long long6 = duration5.getStandardMinutes();
        boolean boolean7 = duration2.isLongerThan((org.joda.time.ReadableDuration) duration5);
        org.joda.time.Duration duration9 = duration5.withMillis(1L);
        org.joda.time.Period period10 = new org.joda.time.Period(readableInstant0, (org.joda.time.ReadableDuration) duration5);
        org.joda.time.Days days11 = period10.toStandardDays();
        org.joda.time.Period period13 = period10.withYears((int) '#');
        org.joda.time.Period period15 = period13.minusSeconds((int) (short) 10);
        org.joda.time.Period period17 = period13.withMonths(3);
        org.joda.time.PeriodType periodType19 = org.joda.time.PeriodType.seconds();
        org.joda.time.PeriodType periodType20 = periodType19.withMinutesRemoved();
        org.joda.time.Chronology chronology21 = null;
        org.joda.time.Period period22 = new org.joda.time.Period(100L, periodType19, chronology21);
        int int23 = period22.getSeconds();
        org.joda.time.Period period25 = period22.minusSeconds((int) ' ');
        org.joda.time.format.PeriodPrinter periodPrinter28 = null;
        org.joda.time.format.PeriodParser periodParser29 = null;
        org.joda.time.format.PeriodFormatter periodFormatter30 = new org.joda.time.format.PeriodFormatter(periodPrinter28, periodParser29);
        org.joda.time.format.PeriodPrinter periodPrinter31 = periodFormatter30.getPrinter();
        boolean boolean32 = periodFormatter30.isPrinter();
        org.joda.time.PeriodType periodType33 = org.joda.time.PeriodType.standard();
        org.joda.time.PeriodType periodType34 = periodType33.withMinutesRemoved();
        org.joda.time.PeriodType periodType35 = periodType34.withMillisRemoved();
        org.joda.time.format.PeriodFormatter periodFormatter36 = periodFormatter30.withParseType(periodType34);
        org.joda.time.PeriodType periodType37 = periodType34.withDaysRemoved();
        org.joda.time.Chronology chronology38 = null;
        org.joda.time.MutablePeriod mutablePeriod39 = new org.joda.time.MutablePeriod((-1L), (long) (short) 0, periodType34, chronology38);
        org.joda.time.MutablePeriod mutablePeriod40 = new org.joda.time.MutablePeriod(periodType34);
        org.joda.time.ReadableInstant readableInstant41 = null;
        org.joda.time.ReadableInstant readableInstant42 = null;
        org.joda.time.PeriodType periodType44 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period45 = new org.joda.time.Period(10L, periodType44);
        org.joda.time.MutablePeriod mutablePeriod46 = new org.joda.time.MutablePeriod(readableInstant41, readableInstant42, periodType44);
        java.lang.String str47 = periodType44.toString();
        org.joda.time.DurationFieldType durationFieldType49 = periodType44.getFieldType((int) (byte) 0);
        mutablePeriod40.add(durationFieldType49, 0);
        org.joda.time.Period period53 = period25.withField(durationFieldType49, (int) ' ');
        org.joda.time.Chronology chronology54 = null;
        org.joda.time.DurationField durationField55 = durationFieldType49.getField(chronology54);
        int int56 = period17.get(durationFieldType49);
        org.joda.time.Chronology chronology58 = null;
        org.joda.time.MutablePeriod mutablePeriod59 = new org.joda.time.MutablePeriod(1L, chronology58);
        org.joda.time.Period period61 = org.joda.time.Period.seconds((int) '#');
        mutablePeriod59.setPeriod((org.joda.time.ReadablePeriod) period61);
        org.joda.time.DurationFieldType durationFieldType63 = org.joda.time.DurationFieldType.years();
        java.lang.String str64 = durationFieldType63.getName();
        boolean boolean65 = mutablePeriod59.isSupported(durationFieldType63);
        mutablePeriod59.setSeconds((int) (byte) -1);
        java.lang.Object obj68 = mutablePeriod59.clone();
        org.joda.time.Period period69 = mutablePeriod59.toPeriod();
        org.joda.time.Chronology chronology71 = null;
        org.joda.time.MutablePeriod mutablePeriod72 = new org.joda.time.MutablePeriod(1L, chronology71);
        org.joda.time.Period period74 = org.joda.time.Period.seconds((int) '#');
        mutablePeriod72.setPeriod((org.joda.time.ReadablePeriod) period74);
        mutablePeriod72.setPeriod((long) '#');
        int int78 = mutablePeriod72.getMinutes();
        org.joda.time.DurationFieldType durationFieldType79 = org.joda.time.DurationFieldType.weeks();
        int int80 = mutablePeriod72.indexOf(durationFieldType79);
        org.joda.time.Period period82 = period69.withField(durationFieldType79, (-1));
        org.joda.time.Period period84 = period17.withField(durationFieldType79, (int) '4');
        org.joda.time.Chronology chronology85 = null;
        org.joda.time.DurationField durationField86 = durationFieldType79.getField(chronology85);
        org.junit.Assert.assertNotNull(duration2);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + (-1L) + "'", long3 == (-1L));
        org.junit.Assert.assertNotNull(duration5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertNotNull(days11);
        org.junit.Assert.assertNotNull(period13);
        org.junit.Assert.assertNotNull(period15);
        org.junit.Assert.assertNotNull(period17);
        org.junit.Assert.assertNotNull(periodType19);
        org.junit.Assert.assertNotNull(periodType20);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(period25);
        org.junit.Assert.assertNull(periodPrinter31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(periodType33);
        org.junit.Assert.assertNotNull(periodType34);
        org.junit.Assert.assertNotNull(periodType35);
        org.junit.Assert.assertNotNull(periodFormatter36);
        org.junit.Assert.assertNotNull(periodType37);
        org.junit.Assert.assertNotNull(periodType44);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "PeriodType[Seconds]" + "'", str47, "PeriodType[Seconds]");
        org.junit.Assert.assertNotNull(durationFieldType49);
        org.junit.Assert.assertNotNull(period53);
        org.junit.Assert.assertNotNull(durationField55);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertNotNull(period61);
        org.junit.Assert.assertNotNull(durationFieldType63);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "years" + "'", str64, "years");
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertEquals(obj68.toString(), "PT-1S");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj68), "PT-1S");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj68), "PT-1S");
        org.junit.Assert.assertNotNull(period69);
        org.junit.Assert.assertNotNull(period74);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 0 + "'", int78 == 0);
        org.junit.Assert.assertNotNull(durationFieldType79);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 2 + "'", int80 == 2);
        org.junit.Assert.assertNotNull(period82);
        org.junit.Assert.assertNotNull(period84);
        org.junit.Assert.assertNotNull(durationField86);
    }

    @Test
    public void test17935() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17935");
        org.joda.time.Period period1 = org.joda.time.Period.years(864000);
        org.joda.time.ReadableInstant readableInstant2 = null;
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.Duration duration5 = org.joda.time.Duration.standardMinutes((-1L));
        long long6 = duration5.getStandardMinutes();
        org.joda.time.Period period7 = duration5.toPeriod();
        org.joda.time.Duration duration9 = org.joda.time.Duration.standardMinutes((-1L));
        long long10 = duration9.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant11 = null;
        org.joda.time.Period period12 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration9, readableInstant11);
        org.joda.time.PeriodType periodType13 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology14 = null;
        org.joda.time.Period period15 = duration9.toPeriod(periodType13, chronology14);
        org.joda.time.Period period16 = duration5.toPeriod(periodType13);
        org.joda.time.PeriodType periodType17 = periodType13.withMillisRemoved();
        org.joda.time.MutablePeriod mutablePeriod18 = new org.joda.time.MutablePeriod(readableInstant2, readableInstant3, periodType17);
        org.joda.time.Period period19 = period1.minus((org.joda.time.ReadablePeriod) mutablePeriod18);
        int int20 = period1.getMonths();
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(duration5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + (-1L) + "'", long10 == (-1L));
        org.junit.Assert.assertNotNull(periodType13);
        org.junit.Assert.assertNotNull(period15);
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertNotNull(periodType17);
        org.junit.Assert.assertNotNull(period19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
    }

    @Test
    public void test17936() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17936");
        org.joda.time.ReadableInstant readableInstant1 = null;
        org.joda.time.ReadableInstant readableInstant2 = null;
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.ReadableInstant readableInstant4 = null;
        org.joda.time.PeriodType periodType5 = org.joda.time.PeriodType.yearWeekDay();
        org.joda.time.MutablePeriod mutablePeriod6 = new org.joda.time.MutablePeriod(readableInstant3, readableInstant4, periodType5);
        org.joda.time.Period period8 = org.joda.time.Period.hours((int) 'a');
        org.joda.time.DurationFieldType durationFieldType10 = period8.getFieldType((int) (short) 1);
        int int11 = periodType5.indexOf(durationFieldType10);
        org.joda.time.Period period12 = new org.joda.time.Period(readableInstant1, readableInstant2, periodType5);
        java.lang.String str13 = periodType5.getName();
        org.joda.time.Chronology chronology14 = null;
        org.joda.time.MutablePeriod mutablePeriod15 = new org.joda.time.MutablePeriod(0L, periodType5, chronology14);
        org.junit.Assert.assertNotNull(periodType5);
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertNotNull(durationFieldType10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "YearWeekDay" + "'", str13, "YearWeekDay");
    }

    @Test
    public void test17937() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17937");
        org.joda.time.Period period1 = new org.joda.time.Period((long) 108);
    }

    @Test
    public void test17938() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17938");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((-1L));
        long long2 = duration1.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.Period period4 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration1, readableInstant3);
        org.joda.time.PeriodType periodType5 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology6 = null;
        org.joda.time.Period period7 = duration1.toPeriod(periodType5, chronology6);
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.Period period9 = duration1.toPeriodTo(readableInstant8);
        int int10 = period9.getDays();
        org.joda.time.Period period12 = period9.withDays(100);
        org.joda.time.MutablePeriod mutablePeriod13 = period12.toMutablePeriod();
        org.joda.time.Period period14 = new org.joda.time.Period((java.lang.Object) mutablePeriod13);
        org.joda.time.MutablePeriod mutablePeriod16 = new org.joda.time.MutablePeriod((-59909L));
        org.joda.time.PeriodType periodType19 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period20 = new org.joda.time.Period(10L, periodType19);
        org.joda.time.PeriodType periodType21 = periodType19.withWeeksRemoved();
        org.joda.time.MutablePeriod mutablePeriod22 = new org.joda.time.MutablePeriod((long) (byte) 0, periodType19);
        org.joda.time.Duration duration24 = org.joda.time.Duration.standardMinutes((-1L));
        long long25 = duration24.getStandardMinutes();
        org.joda.time.PeriodType periodType26 = null;
        org.joda.time.Period period27 = duration24.toPeriod(periodType26);
        org.joda.time.Chronology chronology28 = null;
        mutablePeriod22.setPeriod((org.joda.time.ReadableDuration) duration24, chronology28);
        mutablePeriod22.setSeconds(10);
        org.joda.time.ReadableInstant readableInstant32 = null;
        org.joda.time.Duration duration33 = mutablePeriod22.toDurationFrom(readableInstant32);
        org.joda.time.ReadableInstant readableInstant34 = null;
        org.joda.time.Period period35 = duration33.toPeriodFrom(readableInstant34);
        org.joda.time.Period period36 = duration33.toPeriod();
        org.joda.time.ReadableInstant readableInstant37 = null;
        org.joda.time.Interval interval38 = duration33.toIntervalFrom(readableInstant37);
        mutablePeriod16.add((org.joda.time.ReadableInterval) interval38);
        mutablePeriod13.add((org.joda.time.ReadableInterval) interval38);
        org.joda.time.Period period42 = new org.joda.time.Period((long) (byte) 10);
        mutablePeriod13.setPeriod((org.joda.time.ReadablePeriod) period42);
        org.joda.time.Period period45 = org.joda.time.Period.seconds((int) '#');
        org.joda.time.Period period46 = period45.toPeriod();
        org.joda.time.Period period48 = period46.minusWeeks(10);
        org.joda.time.Period period50 = period46.multipliedBy((int) (short) 10);
        org.joda.time.Period period52 = period50.minusMillis((int) (short) 10);
        org.joda.time.Period period53 = period52.toPeriod();
        org.joda.time.Period period54 = period42.plus((org.joda.time.ReadablePeriod) period53);
        org.joda.time.Weeks weeks55 = period42.toStandardWeeks();
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + (-1L) + "'", long2 == (-1L));
        org.junit.Assert.assertNotNull(periodType5);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertNotNull(mutablePeriod13);
        org.junit.Assert.assertNotNull(periodType19);
        org.junit.Assert.assertNotNull(periodType21);
        org.junit.Assert.assertNotNull(duration24);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + (-1L) + "'", long25 == (-1L));
        org.junit.Assert.assertNotNull(period27);
        org.junit.Assert.assertNotNull(duration33);
        org.junit.Assert.assertNotNull(period35);
        org.junit.Assert.assertNotNull(period36);
        org.junit.Assert.assertNotNull(interval38);
        org.junit.Assert.assertNotNull(period45);
        org.junit.Assert.assertNotNull(period46);
        org.junit.Assert.assertNotNull(period48);
        org.junit.Assert.assertNotNull(period50);
        org.junit.Assert.assertNotNull(period52);
        org.junit.Assert.assertNotNull(period53);
        org.junit.Assert.assertNotNull(period54);
        org.junit.Assert.assertNotNull(weeks55);
    }

    @Test
    public void test17939() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17939");
        java.lang.Object obj0 = null;
        org.joda.time.Chronology chronology1 = null;
        org.joda.time.MutablePeriod mutablePeriod2 = new org.joda.time.MutablePeriod(obj0, chronology1);
        int int3 = mutablePeriod2.getSeconds();
        org.joda.time.Chronology chronology6 = null;
        org.joda.time.MutablePeriod mutablePeriod7 = new org.joda.time.MutablePeriod((-60000L), 0L, chronology6);
        org.joda.time.DurationFieldType[] durationFieldTypeArray8 = mutablePeriod7.getFieldTypes();
        mutablePeriod2.setPeriod((org.joda.time.ReadablePeriod) mutablePeriod7);
        // The following exception was thrown during execution in test generation
        try {
            mutablePeriod7.setValue((int) '4', 5);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 52");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(durationFieldTypeArray8);
    }

    @Test
    public void test17940() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17940");
        org.joda.time.Period period1 = org.joda.time.Period.seconds((int) '#');
        org.joda.time.Period period3 = period1.plusMinutes(10);
        org.joda.time.PeriodType periodType4 = period3.getPeriodType();
        org.joda.time.Period period6 = period3.plusMonths(0);
        org.joda.time.MutablePeriod mutablePeriod7 = period6.toMutablePeriod();
        mutablePeriod7.setDays(40);
        org.joda.time.Duration duration11 = org.joda.time.Duration.standardMinutes((-1L));
        long long12 = duration11.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant13 = null;
        org.joda.time.Period period14 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration11, readableInstant13);
        org.joda.time.PeriodType periodType15 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology16 = null;
        org.joda.time.Period period17 = duration11.toPeriod(periodType15, chronology16);
        org.joda.time.Duration duration20 = duration11.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration22 = org.joda.time.Duration.standardHours((long) 10);
        org.joda.time.Duration duration24 = org.joda.time.Duration.standardMinutes((-1L));
        long long25 = duration24.getStandardMinutes();
        org.joda.time.Duration duration27 = org.joda.time.Duration.standardMinutes((-1L));
        long long28 = duration27.getStandardMinutes();
        boolean boolean29 = duration24.isLongerThan((org.joda.time.ReadableDuration) duration27);
        org.joda.time.Period period30 = duration27.toPeriod();
        org.joda.time.Minutes minutes31 = duration27.toStandardMinutes();
        boolean boolean32 = duration22.isEqual((org.joda.time.ReadableDuration) duration27);
        boolean boolean33 = duration11.isShorterThan((org.joda.time.ReadableDuration) duration22);
        org.joda.time.Minutes minutes34 = duration11.toStandardMinutes();
        org.joda.time.ReadableInstant readableInstant35 = null;
        org.joda.time.MutablePeriod mutablePeriod36 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration11, readableInstant35);
        org.joda.time.Minutes minutes37 = duration11.toStandardMinutes();
        org.joda.time.Duration duration38 = duration11.toDuration();
        org.joda.time.Duration duration39 = duration11.toDuration();
        org.joda.time.Chronology chronology40 = null;
        mutablePeriod7.setPeriod((org.joda.time.ReadableDuration) duration11, chronology40);
        org.joda.time.Duration duration43 = duration11.plus((long) 8);
        org.joda.time.Duration duration45 = duration11.plus((long) 52);
        long long46 = duration11.getStandardMinutes();
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(period3);
        org.junit.Assert.assertNotNull(periodType4);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(mutablePeriod7);
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + (-1L) + "'", long12 == (-1L));
        org.junit.Assert.assertNotNull(periodType15);
        org.junit.Assert.assertNotNull(period17);
        org.junit.Assert.assertNotNull(duration20);
        org.junit.Assert.assertNotNull(duration22);
        org.junit.Assert.assertNotNull(duration24);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + (-1L) + "'", long25 == (-1L));
        org.junit.Assert.assertNotNull(duration27);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + (-1L) + "'", long28 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(period30);
        org.junit.Assert.assertNotNull(minutes31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(minutes34);
        org.junit.Assert.assertNotNull(minutes37);
        org.junit.Assert.assertNotNull(duration38);
        org.junit.Assert.assertNotNull(duration39);
        org.junit.Assert.assertNotNull(duration43);
        org.junit.Assert.assertNotNull(duration45);
        org.junit.Assert.assertTrue("'" + long46 + "' != '" + (-1L) + "'", long46 == (-1L));
    }

    @Test
    public void test17941() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17941");
        org.joda.time.Duration duration1 = new org.joda.time.Duration((-540000L));
    }

    @Test
    public void test17942() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17942");
        org.joda.time.Period period1 = org.joda.time.Period.years((int) (short) 1);
        org.joda.time.Period period3 = period1.minusMinutes((int) (short) 10);
        org.joda.time.Period period5 = period3.minusHours((int) '#');
        org.joda.time.ReadableInstant readableInstant6 = null;
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.MutablePeriod mutablePeriod8 = new org.joda.time.MutablePeriod(readableInstant6, readableInstant7);
        org.joda.time.PeriodType periodType9 = mutablePeriod8.getPeriodType();
        org.joda.time.Period period11 = org.joda.time.Period.years((int) (short) 1);
        org.joda.time.Period period13 = period11.minusMinutes((int) (short) 10);
        org.joda.time.Period period15 = period13.withWeeks((int) (byte) -1);
        org.joda.time.Period period17 = period13.plusHours((int) (short) -1);
        mutablePeriod8.setPeriod((org.joda.time.ReadablePeriod) period13);
        org.joda.time.PeriodType periodType20 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period21 = new org.joda.time.Period(10L, periodType20);
        org.joda.time.PeriodType periodType22 = periodType20.withWeeksRemoved();
        org.joda.time.DurationFieldType durationFieldType23 = org.joda.time.DurationFieldType.millis();
        int int24 = periodType22.indexOf(durationFieldType23);
        int int25 = mutablePeriod8.indexOf(durationFieldType23);
        org.joda.time.Period period27 = period3.withField(durationFieldType23, (int) (short) 100);
        org.joda.time.ReadableInstant readableInstant28 = null;
        org.joda.time.Duration duration29 = period27.toDurationTo(readableInstant28);
        org.joda.time.ReadableInstant readableInstant30 = null;
        org.joda.time.Period period31 = duration29.toPeriodTo(readableInstant30);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Weeks weeks32 = period31.toStandardWeeks();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Cannot convert to Weeks as this period contains months and months vary in length");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(period3);
        org.junit.Assert.assertNotNull(period5);
        org.junit.Assert.assertNotNull(periodType9);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(period13);
        org.junit.Assert.assertNotNull(period15);
        org.junit.Assert.assertNotNull(period17);
        org.junit.Assert.assertNotNull(periodType20);
        org.junit.Assert.assertNotNull(periodType22);
        org.junit.Assert.assertNotNull(durationFieldType23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 7 + "'", int25 == 7);
        org.junit.Assert.assertNotNull(period27);
        org.junit.Assert.assertNotNull(duration29);
        org.junit.Assert.assertNotNull(period31);
    }

    @Test
    public void test17943() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17943");
        org.joda.time.Period period3 = org.joda.time.Period.parse("PT-60S");
        org.joda.time.DurationFieldType[] durationFieldTypeArray4 = period3.getFieldTypes();
        org.joda.time.PeriodType periodType5 = org.joda.time.PeriodType.forFields(durationFieldTypeArray4);
        org.joda.time.Chronology chronology6 = null;
        org.joda.time.Period period7 = new org.joda.time.Period((-1L), (long) (-90), periodType5, chronology6);
        org.joda.time.Period period9 = period7.withMonths((int) (byte) 100);
        int int10 = period7.getHours();
        org.joda.time.Period period14 = org.joda.time.Period.seconds((int) '#');
        org.joda.time.Period period15 = period14.toPeriod();
        org.joda.time.Period period17 = period15.minusWeeks(10);
        org.joda.time.Period period19 = period15.minusHours((int) (short) 100);
        org.joda.time.DurationFieldType[] durationFieldTypeArray20 = period19.getFieldTypes();
        org.joda.time.PeriodType periodType21 = org.joda.time.PeriodType.forFields(durationFieldTypeArray20);
        org.joda.time.Chronology chronology22 = null;
        org.joda.time.Period period23 = new org.joda.time.Period((long) 8, (long) '4', periodType21, chronology22);
        org.joda.time.Period period25 = period23.withDays((int) (byte) 0);
        org.joda.time.Period period26 = period7.minus((org.joda.time.ReadablePeriod) period23);
        org.joda.time.Duration duration27 = period7.toStandardDuration();
        org.joda.time.Period period28 = period7.toPeriod();
        org.junit.Assert.assertNotNull(period3);
        org.junit.Assert.assertNotNull(durationFieldTypeArray4);
        org.junit.Assert.assertNotNull(periodType5);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(period14);
        org.junit.Assert.assertNotNull(period15);
        org.junit.Assert.assertNotNull(period17);
        org.junit.Assert.assertNotNull(period19);
        org.junit.Assert.assertNotNull(durationFieldTypeArray20);
        org.junit.Assert.assertNotNull(periodType21);
        org.junit.Assert.assertNotNull(period25);
        org.junit.Assert.assertNotNull(period26);
        org.junit.Assert.assertNotNull(duration27);
        org.junit.Assert.assertNotNull(period28);
    }

    @Test
    public void test17944() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17944");
        org.joda.time.PeriodType periodType2 = org.joda.time.PeriodType.seconds();
        org.joda.time.PeriodType periodType3 = periodType2.withMinutesRemoved();
        org.joda.time.Chronology chronology4 = null;
        org.joda.time.MutablePeriod mutablePeriod5 = new org.joda.time.MutablePeriod((long) 0, (long) (short) 100, periodType2, chronology4);
        org.joda.time.Duration duration7 = org.joda.time.Duration.standardMinutes((-1L));
        long long8 = duration7.getStandardMinutes();
        org.joda.time.Duration duration10 = org.joda.time.Duration.standardMinutes((-1L));
        long long11 = duration10.getStandardMinutes();
        boolean boolean12 = duration7.isLongerThan((org.joda.time.ReadableDuration) duration10);
        org.joda.time.Period period13 = duration10.toPeriod();
        org.joda.time.Minutes minutes14 = duration10.toStandardMinutes();
        mutablePeriod5.add((org.joda.time.ReadableDuration) duration10);
        org.joda.time.Duration duration17 = duration10.withMillis((long) (short) 10);
        org.joda.time.Duration duration19 = duration17.plus((long) 'a');
        org.joda.time.Period period21 = org.joda.time.Period.seconds((int) '#');
        int int22 = period21.getMillis();
        org.joda.time.Period period24 = period21.withMillis((int) '#');
        org.joda.time.DurationFieldType durationFieldType25 = org.joda.time.DurationFieldType.halfdays();
        boolean boolean26 = period21.isSupported(durationFieldType25);
        org.joda.time.Chronology chronology28 = null;
        org.joda.time.MutablePeriod mutablePeriod29 = new org.joda.time.MutablePeriod(1L, chronology28);
        org.joda.time.Period period31 = org.joda.time.Period.seconds((int) '#');
        mutablePeriod29.setPeriod((org.joda.time.ReadablePeriod) period31);
        org.joda.time.DurationFieldType durationFieldType33 = org.joda.time.DurationFieldType.years();
        java.lang.String str34 = durationFieldType33.getName();
        boolean boolean35 = mutablePeriod29.isSupported(durationFieldType33);
        int int36 = period21.get(durationFieldType33);
        org.joda.time.ReadableInstant readableInstant37 = null;
        org.joda.time.Duration duration39 = org.joda.time.Duration.standardMinutes((-1L));
        long long40 = duration39.getStandardMinutes();
        org.joda.time.Period period41 = duration39.toPeriod();
        org.joda.time.Duration duration43 = org.joda.time.Duration.standardMinutes((-1L));
        long long44 = duration43.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant45 = null;
        org.joda.time.Period period46 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration43, readableInstant45);
        org.joda.time.PeriodType periodType47 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology48 = null;
        org.joda.time.Period period49 = duration43.toPeriod(periodType47, chronology48);
        org.joda.time.Period period50 = duration39.toPeriod(periodType47);
        org.joda.time.Duration duration52 = org.joda.time.Duration.standardMinutes((-1L));
        long long53 = duration52.getStandardMinutes();
        boolean boolean54 = duration39.isLongerThan((org.joda.time.ReadableDuration) duration52);
        org.joda.time.PeriodType periodType55 = org.joda.time.PeriodType.weeks();
        org.joda.time.Period period56 = new org.joda.time.Period(readableInstant37, (org.joda.time.ReadableDuration) duration52, periodType55);
        boolean boolean57 = period21.equals((java.lang.Object) duration52);
        int int58 = duration19.compareTo((org.joda.time.ReadableDuration) duration52);
        long long59 = duration19.getStandardSeconds();
        java.lang.String str60 = duration19.toString();
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(periodType3);
        org.junit.Assert.assertNotNull(duration7);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + (-1L) + "'", long8 == (-1L));
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + (-1L) + "'", long11 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(period13);
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertNotNull(duration17);
        org.junit.Assert.assertNotNull(duration19);
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNotNull(period24);
        org.junit.Assert.assertNotNull(durationFieldType25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(period31);
        org.junit.Assert.assertNotNull(durationFieldType33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "years" + "'", str34, "years");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertNotNull(duration39);
        org.junit.Assert.assertTrue("'" + long40 + "' != '" + (-1L) + "'", long40 == (-1L));
        org.junit.Assert.assertNotNull(period41);
        org.junit.Assert.assertNotNull(duration43);
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + (-1L) + "'", long44 == (-1L));
        org.junit.Assert.assertNotNull(periodType47);
        org.junit.Assert.assertNotNull(period49);
        org.junit.Assert.assertNotNull(period50);
        org.junit.Assert.assertNotNull(duration52);
        org.junit.Assert.assertTrue("'" + long53 + "' != '" + (-1L) + "'", long53 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(periodType55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 1 + "'", int58 == 1);
        org.junit.Assert.assertTrue("'" + long59 + "' != '" + 0L + "'", long59 == 0L);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "PT0.107S" + "'", str60, "PT0.107S");
    }

    @Test
    public void test17945() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17945");
        org.joda.time.MutablePeriod mutablePeriod4 = new org.joda.time.MutablePeriod(2, 35, 135, (-520));
    }

    @Test
    public void test17946() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17946");
        org.joda.time.Period period4 = new org.joda.time.Period((int) '#', (int) (byte) 100, 0, (-1));
        org.joda.time.MutablePeriod mutablePeriod5 = new org.joda.time.MutablePeriod();
        org.joda.time.ReadableInstant readableInstant6 = null;
        org.joda.time.Duration duration7 = mutablePeriod5.toDurationTo(readableInstant6);
        org.joda.time.Chronology chronology8 = null;
        org.joda.time.Period period9 = duration7.toPeriod(chronology8);
        org.joda.time.ReadableInstant readableInstant10 = null;
        org.joda.time.PeriodType periodType11 = org.joda.time.PeriodType.dayTime();
        org.joda.time.DurationFieldType durationFieldType12 = org.joda.time.DurationFieldType.days();
        int int13 = periodType11.indexOf(durationFieldType12);
        int int14 = periodType11.size();
        org.joda.time.Period period15 = duration7.toPeriodTo(readableInstant10, periodType11);
        org.joda.time.Period period16 = period4.normalizedStandard(periodType11);
        org.joda.time.DurationFieldType durationFieldType17 = null;
        int int18 = period16.get(durationFieldType17);
        org.joda.time.Period period20 = period16.plusMinutes((int) (short) 1);
        org.joda.time.Period period21 = period20.normalizedStandard();
        org.joda.time.Period period23 = period21.plusYears(8);
        org.joda.time.Period period25 = period23.minusMonths(1);
        org.junit.Assert.assertNotNull(duration7);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(periodType11);
        org.junit.Assert.assertNotNull(durationFieldType12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 5 + "'", int14 == 5);
        org.junit.Assert.assertNotNull(period15);
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(period20);
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertNotNull(period23);
        org.junit.Assert.assertNotNull(period25);
    }

    @Test
    public void test17947() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17947");
        org.joda.time.Period period1 = org.joda.time.Period.seconds((int) (byte) 0);
        int int2 = period1.size();
        org.joda.time.Period period4 = period1.minusSeconds((int) (short) 10);
        org.joda.time.ReadableInstant readableInstant5 = null;
        org.joda.time.ReadableInstant readableInstant6 = null;
        org.joda.time.PeriodType periodType7 = org.joda.time.PeriodType.days();
        org.joda.time.Period period8 = new org.joda.time.Period(readableInstant5, readableInstant6, periodType7);
        org.joda.time.DurationFieldType durationFieldType9 = org.joda.time.DurationFieldType.days();
        int int10 = periodType7.indexOf(durationFieldType9);
        org.joda.time.Duration duration12 = org.joda.time.Duration.standardMinutes((-1L));
        long long13 = duration12.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant14 = null;
        org.joda.time.Period period15 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration12, readableInstant14);
        org.joda.time.PeriodType periodType16 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology17 = null;
        org.joda.time.Period period18 = duration12.toPeriod(periodType16, chronology17);
        org.joda.time.Duration duration21 = duration12.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.ReadableInstant readableInstant22 = null;
        org.joda.time.ReadableInstant readableInstant23 = null;
        org.joda.time.Duration duration25 = org.joda.time.Duration.standardMinutes((-1L));
        long long26 = duration25.getStandardMinutes();
        org.joda.time.Period period27 = duration25.toPeriod();
        org.joda.time.Duration duration29 = org.joda.time.Duration.standardMinutes((-1L));
        long long30 = duration29.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant31 = null;
        org.joda.time.Period period32 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration29, readableInstant31);
        org.joda.time.PeriodType periodType33 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology34 = null;
        org.joda.time.Period period35 = duration29.toPeriod(periodType33, chronology34);
        org.joda.time.Period period36 = duration25.toPeriod(periodType33);
        org.joda.time.MutablePeriod mutablePeriod37 = new org.joda.time.MutablePeriod(readableInstant22, readableInstant23, periodType33);
        org.joda.time.Chronology chronology38 = null;
        org.joda.time.Period period39 = duration12.toPeriod(periodType33, chronology38);
        org.joda.time.PeriodType periodType40 = org.joda.time.PeriodType.seconds();
        org.joda.time.PeriodType periodType41 = periodType40.withMinutesRemoved();
        org.joda.time.Chronology chronology42 = null;
        org.joda.time.MutablePeriod mutablePeriod43 = new org.joda.time.MutablePeriod((java.lang.Object) duration12, periodType41, chronology42);
        java.lang.String str44 = periodType41.getName();
        org.joda.time.MutablePeriod mutablePeriod49 = new org.joda.time.MutablePeriod(1, 0, (int) (byte) 1, 100);
        org.joda.time.DurationFieldType durationFieldType50 = org.joda.time.DurationFieldType.weeks();
        mutablePeriod49.set(durationFieldType50, (int) '#');
        boolean boolean53 = periodType41.isSupported(durationFieldType50);
        boolean boolean54 = periodType7.isSupported(durationFieldType50);
        org.joda.time.Period period56 = period4.withFieldAdded(durationFieldType50, (int) '#');
        org.joda.time.Chronology chronology58 = null;
        org.joda.time.MutablePeriod mutablePeriod59 = new org.joda.time.MutablePeriod(1L, chronology58);
        org.joda.time.Chronology chronology61 = null;
        org.joda.time.MutablePeriod mutablePeriod62 = new org.joda.time.MutablePeriod(1L, chronology61);
        mutablePeriod59.add((org.joda.time.ReadablePeriod) mutablePeriod62);
        org.joda.time.Duration duration65 = org.joda.time.Duration.standardMinutes((-1L));
        long long66 = duration65.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant67 = null;
        org.joda.time.Period period68 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration65, readableInstant67);
        mutablePeriod62.setPeriod((org.joda.time.ReadablePeriod) period68);
        mutablePeriod62.setMinutes((int) (short) 0);
        org.joda.time.PeriodType periodType74 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period75 = new org.joda.time.Period(10L, periodType74);
        org.joda.time.DurationFieldType durationFieldType76 = org.joda.time.DurationFieldType.weeks();
        boolean boolean77 = periodType74.isSupported(durationFieldType76);
        org.joda.time.DurationFieldType durationFieldType78 = org.joda.time.DurationFieldType.centuries();
        int int79 = periodType74.indexOf(durationFieldType78);
        org.joda.time.MutablePeriod mutablePeriod80 = new org.joda.time.MutablePeriod((long) '#', periodType74);
        org.joda.time.DurationFieldType durationFieldType81 = org.joda.time.DurationFieldType.weeks();
        boolean boolean82 = mutablePeriod80.isSupported(durationFieldType81);
        boolean boolean83 = mutablePeriod62.isSupported(durationFieldType81);
        org.joda.time.Period period84 = period4.minus((org.joda.time.ReadablePeriod) mutablePeriod62);
        org.joda.time.ReadableInstant readableInstant85 = null;
        org.joda.time.Duration duration86 = period4.toDurationTo(readableInstant85);
        org.joda.time.Period period88 = period4.withWeeks(0);
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 8 + "'", int2 == 8);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(periodType7);
        org.junit.Assert.assertNotNull(durationFieldType9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + (-1L) + "'", long13 == (-1L));
        org.junit.Assert.assertNotNull(periodType16);
        org.junit.Assert.assertNotNull(period18);
        org.junit.Assert.assertNotNull(duration21);
        org.junit.Assert.assertNotNull(duration25);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + (-1L) + "'", long26 == (-1L));
        org.junit.Assert.assertNotNull(period27);
        org.junit.Assert.assertNotNull(duration29);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + (-1L) + "'", long30 == (-1L));
        org.junit.Assert.assertNotNull(periodType33);
        org.junit.Assert.assertNotNull(period35);
        org.junit.Assert.assertNotNull(period36);
        org.junit.Assert.assertNotNull(period39);
        org.junit.Assert.assertNotNull(periodType40);
        org.junit.Assert.assertNotNull(periodType41);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "Seconds" + "'", str44, "Seconds");
        org.junit.Assert.assertNotNull(durationFieldType50);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(period56);
        org.junit.Assert.assertNotNull(duration65);
        org.junit.Assert.assertTrue("'" + long66 + "' != '" + (-1L) + "'", long66 == (-1L));
        org.junit.Assert.assertNotNull(periodType74);
        org.junit.Assert.assertNotNull(durationFieldType76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(durationFieldType78);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + (-1) + "'", int79 == (-1));
        org.junit.Assert.assertNotNull(durationFieldType81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertNotNull(period84);
        org.junit.Assert.assertNotNull(duration86);
        org.junit.Assert.assertNotNull(period88);
    }

    @Test
    public void test17948() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17948");
        org.joda.time.MutablePeriod mutablePeriod1 = new org.joda.time.MutablePeriod((-2L));
        org.joda.time.Duration duration3 = org.joda.time.Duration.standardHours((long) 5);
        mutablePeriod1.setPeriod((org.joda.time.ReadableDuration) duration3);
        org.joda.time.MutablePeriod mutablePeriod5 = mutablePeriod1.copy();
        org.joda.time.PeriodType periodType8 = org.joda.time.PeriodType.seconds();
        org.joda.time.PeriodType periodType9 = periodType8.withMinutesRemoved();
        org.joda.time.Chronology chronology10 = null;
        org.joda.time.MutablePeriod mutablePeriod11 = new org.joda.time.MutablePeriod((long) 0, (long) (short) 100, periodType8, chronology10);
        org.joda.time.Duration duration13 = org.joda.time.Duration.standardMinutes((-1L));
        long long14 = duration13.getStandardMinutes();
        org.joda.time.Duration duration16 = org.joda.time.Duration.standardMinutes((-1L));
        long long17 = duration16.getStandardMinutes();
        boolean boolean18 = duration13.isLongerThan((org.joda.time.ReadableDuration) duration16);
        org.joda.time.Period period19 = duration16.toPeriod();
        org.joda.time.Minutes minutes20 = duration16.toStandardMinutes();
        mutablePeriod11.add((org.joda.time.ReadableDuration) duration16);
        org.joda.time.Duration duration23 = duration16.withMillis((long) (short) 10);
        org.joda.time.Duration duration25 = duration23.plus((long) 'a');
        mutablePeriod1.setPeriod((org.joda.time.ReadableDuration) duration25);
        org.joda.time.PeriodType periodType28 = org.joda.time.PeriodType.seconds();
        org.joda.time.PeriodType periodType29 = periodType28.withMinutesRemoved();
        org.joda.time.Chronology chronology30 = null;
        org.joda.time.Period period31 = new org.joda.time.Period(100L, periodType28, chronology30);
        int int32 = period31.getSeconds();
        org.joda.time.Period period34 = period31.minusSeconds((int) ' ');
        org.joda.time.format.PeriodPrinter periodPrinter37 = null;
        org.joda.time.format.PeriodParser periodParser38 = null;
        org.joda.time.format.PeriodFormatter periodFormatter39 = new org.joda.time.format.PeriodFormatter(periodPrinter37, periodParser38);
        org.joda.time.format.PeriodPrinter periodPrinter40 = periodFormatter39.getPrinter();
        boolean boolean41 = periodFormatter39.isPrinter();
        org.joda.time.PeriodType periodType42 = org.joda.time.PeriodType.standard();
        org.joda.time.PeriodType periodType43 = periodType42.withMinutesRemoved();
        org.joda.time.PeriodType periodType44 = periodType43.withMillisRemoved();
        org.joda.time.format.PeriodFormatter periodFormatter45 = periodFormatter39.withParseType(periodType43);
        org.joda.time.PeriodType periodType46 = periodType43.withDaysRemoved();
        org.joda.time.Chronology chronology47 = null;
        org.joda.time.MutablePeriod mutablePeriod48 = new org.joda.time.MutablePeriod((-1L), (long) (short) 0, periodType43, chronology47);
        org.joda.time.MutablePeriod mutablePeriod49 = new org.joda.time.MutablePeriod(periodType43);
        org.joda.time.ReadableInstant readableInstant50 = null;
        org.joda.time.ReadableInstant readableInstant51 = null;
        org.joda.time.PeriodType periodType53 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period54 = new org.joda.time.Period(10L, periodType53);
        org.joda.time.MutablePeriod mutablePeriod55 = new org.joda.time.MutablePeriod(readableInstant50, readableInstant51, periodType53);
        java.lang.String str56 = periodType53.toString();
        org.joda.time.DurationFieldType durationFieldType58 = periodType53.getFieldType((int) (byte) 0);
        mutablePeriod49.add(durationFieldType58, 0);
        org.joda.time.Period period62 = period34.withField(durationFieldType58, (int) ' ');
        org.joda.time.Period period64 = period34.plusDays(0);
        org.joda.time.ReadableInstant readableInstant66 = null;
        org.joda.time.ReadableInstant readableInstant67 = null;
        org.joda.time.Duration duration69 = org.joda.time.Duration.standardMinutes((-1L));
        long long70 = duration69.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant71 = null;
        org.joda.time.MutablePeriod mutablePeriod72 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration69, readableInstant71);
        org.joda.time.PeriodType periodType73 = org.joda.time.PeriodType.dayTime();
        org.joda.time.DurationFieldType durationFieldType74 = org.joda.time.DurationFieldType.days();
        int int75 = periodType73.indexOf(durationFieldType74);
        org.joda.time.Chronology chronology76 = null;
        org.joda.time.Period period77 = duration69.toPeriod(periodType73, chronology76);
        org.joda.time.Period period78 = new org.joda.time.Period(readableInstant66, readableInstant67, periodType73);
        org.joda.time.MutablePeriod mutablePeriod79 = new org.joda.time.MutablePeriod((-7776000L), periodType73);
        org.joda.time.Period period80 = period64.normalizedStandard(periodType73);
        boolean boolean81 = duration25.equals((java.lang.Object) period80);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertNotNull(mutablePeriod5);
        org.junit.Assert.assertNotNull(periodType8);
        org.junit.Assert.assertNotNull(periodType9);
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + (-1L) + "'", long14 == (-1L));
        org.junit.Assert.assertNotNull(duration16);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + (-1L) + "'", long17 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(period19);
        org.junit.Assert.assertNotNull(minutes20);
        org.junit.Assert.assertNotNull(duration23);
        org.junit.Assert.assertNotNull(duration25);
        org.junit.Assert.assertNotNull(periodType28);
        org.junit.Assert.assertNotNull(periodType29);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNotNull(period34);
        org.junit.Assert.assertNull(periodPrinter40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(periodType42);
        org.junit.Assert.assertNotNull(periodType43);
        org.junit.Assert.assertNotNull(periodType44);
        org.junit.Assert.assertNotNull(periodFormatter45);
        org.junit.Assert.assertNotNull(periodType46);
        org.junit.Assert.assertNotNull(periodType53);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "PeriodType[Seconds]" + "'", str56, "PeriodType[Seconds]");
        org.junit.Assert.assertNotNull(durationFieldType58);
        org.junit.Assert.assertNotNull(period62);
        org.junit.Assert.assertNotNull(period64);
        org.junit.Assert.assertNotNull(duration69);
        org.junit.Assert.assertTrue("'" + long70 + "' != '" + (-1L) + "'", long70 == (-1L));
        org.junit.Assert.assertNotNull(periodType73);
        org.junit.Assert.assertNotNull(durationFieldType74);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 0 + "'", int75 == 0);
        org.junit.Assert.assertNotNull(period77);
        org.junit.Assert.assertNotNull(period80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
    }

    @Test
    public void test17949() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17949");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((-1L));
        long long2 = duration1.getStandardMinutes();
        org.joda.time.Period period3 = duration1.toPeriod();
        java.lang.String str4 = duration1.toString();
        org.joda.time.ReadableInstant readableInstant6 = null;
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.Duration duration9 = org.joda.time.Duration.standardMinutes((-1L));
        long long10 = duration9.getStandardMinutes();
        org.joda.time.Period period11 = duration9.toPeriod();
        org.joda.time.Duration duration13 = org.joda.time.Duration.standardMinutes((-1L));
        long long14 = duration13.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant15 = null;
        org.joda.time.Period period16 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration13, readableInstant15);
        org.joda.time.PeriodType periodType17 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology18 = null;
        org.joda.time.Period period19 = duration13.toPeriod(periodType17, chronology18);
        org.joda.time.Period period20 = duration9.toPeriod(periodType17);
        org.joda.time.MutablePeriod mutablePeriod21 = new org.joda.time.MutablePeriod(readableInstant6, readableInstant7, periodType17);
        org.joda.time.Period period23 = org.joda.time.Period.seconds((int) '#');
        int int24 = period23.getMillis();
        org.joda.time.DurationFieldType durationFieldType25 = org.joda.time.DurationFieldType.years();
        org.joda.time.Period period27 = period23.withField(durationFieldType25, (int) (short) 10);
        int int28 = periodType17.indexOf(durationFieldType25);
        org.joda.time.Period period29 = new org.joda.time.Period(0L, periodType17);
        org.joda.time.Chronology chronology30 = null;
        org.joda.time.Period period31 = duration1.toPeriod(periodType17, chronology30);
        org.joda.time.Period period33 = org.joda.time.Period.seconds((int) '#');
        org.joda.time.Period period35 = period33.plusMinutes(10);
        org.joda.time.Period period37 = period33.minusSeconds((int) '4');
        org.joda.time.Period period39 = org.joda.time.Period.seconds((int) '#');
        int int40 = period39.getMillis();
        org.joda.time.Period period42 = period39.withMillis((int) '#');
        int int43 = period42.size();
        org.joda.time.DurationFieldType durationFieldType44 = org.joda.time.DurationFieldType.halfdays();
        boolean boolean45 = period42.isSupported(durationFieldType44);
        int int46 = period37.get(durationFieldType44);
        int int47 = period31.indexOf(durationFieldType44);
        org.joda.time.Period period49 = period31.minusSeconds((int) (short) 0);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType51 = period31.getFieldType((-6000));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + (-1L) + "'", long2 == (-1L));
        org.junit.Assert.assertNotNull(period3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "PT-60S" + "'", str4, "PT-60S");
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + (-1L) + "'", long10 == (-1L));
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + (-1L) + "'", long14 == (-1L));
        org.junit.Assert.assertNotNull(periodType17);
        org.junit.Assert.assertNotNull(period19);
        org.junit.Assert.assertNotNull(period20);
        org.junit.Assert.assertNotNull(period23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNotNull(durationFieldType25);
        org.junit.Assert.assertNotNull(period27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNotNull(period31);
        org.junit.Assert.assertNotNull(period33);
        org.junit.Assert.assertNotNull(period35);
        org.junit.Assert.assertNotNull(period37);
        org.junit.Assert.assertNotNull(period39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertNotNull(period42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 8 + "'", int43 == 8);
        org.junit.Assert.assertNotNull(durationFieldType44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertNotNull(period49);
    }

    @Test
    public void test17950() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17950");
        org.joda.time.Period period8 = new org.joda.time.Period((int) (short) 0, 350, 135, (-65), (int) (byte) 0, 23, (-99), 59);
    }

    @Test
    public void test17951() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17951");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((-1L));
        long long2 = duration1.getStandardMinutes();
        org.joda.time.Duration duration4 = org.joda.time.Duration.standardMinutes((-1L));
        long long5 = duration4.getStandardMinutes();
        boolean boolean6 = duration1.isLongerThan((org.joda.time.ReadableDuration) duration4);
        org.joda.time.Duration duration8 = duration4.withMillis(1L);
        java.lang.String str9 = duration4.toString();
        org.joda.time.Hours hours10 = duration4.toStandardHours();
        org.joda.time.Duration duration12 = org.joda.time.Duration.standardMinutes((-1L));
        long long13 = duration12.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant14 = null;
        org.joda.time.Period period15 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration12, readableInstant14);
        org.joda.time.PeriodType periodType16 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology17 = null;
        org.joda.time.Period period18 = duration12.toPeriod(periodType16, chronology17);
        org.joda.time.Duration duration21 = duration12.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration23 = org.joda.time.Duration.standardMinutes((-1L));
        long long24 = duration23.getStandardMinutes();
        org.joda.time.Duration duration26 = org.joda.time.Duration.standardMinutes((-1L));
        long long27 = duration26.getStandardMinutes();
        boolean boolean28 = duration23.isLongerThan((org.joda.time.ReadableDuration) duration26);
        org.joda.time.Duration duration30 = duration26.withMillis((long) 1);
        boolean boolean31 = duration21.isShorterThan((org.joda.time.ReadableDuration) duration26);
        boolean boolean32 = duration4.isEqual((org.joda.time.ReadableDuration) duration26);
        org.joda.time.Duration duration34 = org.joda.time.Duration.standardMinutes((-1L));
        long long35 = duration34.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant36 = null;
        org.joda.time.Period period37 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration34, readableInstant36);
        org.joda.time.Duration duration39 = org.joda.time.Duration.standardMinutes((-1L));
        long long40 = duration39.getStandardMinutes();
        org.joda.time.Period period41 = duration39.toPeriod();
        boolean boolean42 = duration34.isLongerThan((org.joda.time.ReadableDuration) duration39);
        org.joda.time.Duration duration44 = org.joda.time.Duration.standardMinutes((-1L));
        long long45 = duration44.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant46 = null;
        org.joda.time.Period period47 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration44, readableInstant46);
        org.joda.time.PeriodType periodType48 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology49 = null;
        org.joda.time.Period period50 = duration44.toPeriod(periodType48, chronology49);
        org.joda.time.Duration duration51 = duration39.minus((org.joda.time.ReadableDuration) duration44);
        org.joda.time.Duration duration52 = duration44.toDuration();
        java.lang.String str53 = duration44.toString();
        boolean boolean54 = duration4.isLongerThan((org.joda.time.ReadableDuration) duration44);
        org.joda.time.Duration duration56 = duration44.plus((-59990L));
        org.joda.time.Hours hours57 = duration44.toStandardHours();
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + (-1L) + "'", long2 == (-1L));
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + (-1L) + "'", long5 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(duration8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "PT-60S" + "'", str9, "PT-60S");
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + (-1L) + "'", long13 == (-1L));
        org.junit.Assert.assertNotNull(periodType16);
        org.junit.Assert.assertNotNull(period18);
        org.junit.Assert.assertNotNull(duration21);
        org.junit.Assert.assertNotNull(duration23);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + (-1L) + "'", long24 == (-1L));
        org.junit.Assert.assertNotNull(duration26);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + (-1L) + "'", long27 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(duration30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(duration34);
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + (-1L) + "'", long35 == (-1L));
        org.junit.Assert.assertNotNull(duration39);
        org.junit.Assert.assertTrue("'" + long40 + "' != '" + (-1L) + "'", long40 == (-1L));
        org.junit.Assert.assertNotNull(period41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(duration44);
        org.junit.Assert.assertTrue("'" + long45 + "' != '" + (-1L) + "'", long45 == (-1L));
        org.junit.Assert.assertNotNull(periodType48);
        org.junit.Assert.assertNotNull(period50);
        org.junit.Assert.assertNotNull(duration51);
        org.junit.Assert.assertNotNull(duration52);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "PT-60S" + "'", str53, "PT-60S");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(duration56);
        org.junit.Assert.assertNotNull(hours57);
    }

    @Test
    public void test17952() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17952");
        org.joda.time.Duration duration1 = new org.joda.time.Duration((-59948L));
        org.joda.time.Period period2 = duration1.toPeriod();
        org.junit.Assert.assertNotNull(period2);
    }

    @Test
    public void test17953() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17953");
        org.joda.time.MutablePeriod mutablePeriod4 = new org.joda.time.MutablePeriod(11, 129, 864000, (int) (byte) 1);
    }

    @Test
    public void test17954() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17954");
        org.joda.time.Period period1 = org.joda.time.Period.weeks((-101));
        org.junit.Assert.assertNotNull(period1);
    }

    @Test
    public void test17955() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17955");
        org.joda.time.format.PeriodPrinter periodPrinter0 = null;
        org.joda.time.format.PeriodParser periodParser1 = null;
        org.joda.time.format.PeriodFormatter periodFormatter2 = new org.joda.time.format.PeriodFormatter(periodPrinter0, periodParser1);
        org.joda.time.format.PeriodPrinter periodPrinter3 = periodFormatter2.getPrinter();
        org.joda.time.MutablePeriod mutablePeriod4 = new org.joda.time.MutablePeriod((java.lang.Object) periodPrinter3);
        org.joda.time.MutablePeriod mutablePeriod5 = mutablePeriod4.toMutablePeriod();
        mutablePeriod5.addHours(0);
        org.junit.Assert.assertNull(periodPrinter3);
        org.junit.Assert.assertNotNull(mutablePeriod5);
    }

    @Test
    public void test17956() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17956");
        org.joda.time.Period period1 = org.joda.time.Period.seconds((int) '#');
        org.joda.time.Period period3 = period1.plusMinutes(10);
        org.joda.time.Period period5 = period1.minusSeconds((int) '4');
        org.joda.time.Period period6 = period5.normalizedStandard();
        org.joda.time.Period period8 = period6.plusYears(10);
        int int9 = period8.getHours();
        org.joda.time.ReadableInstant readableInstant10 = null;
        org.joda.time.Duration duration12 = new org.joda.time.Duration((long) (-102));
        org.joda.time.PeriodType periodType13 = null;
        org.joda.time.MutablePeriod mutablePeriod14 = new org.joda.time.MutablePeriod(readableInstant10, (org.joda.time.ReadableDuration) duration12, periodType13);
        org.joda.time.Period period15 = period8.withFields((org.joda.time.ReadablePeriod) mutablePeriod14);
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(period3);
        org.junit.Assert.assertNotNull(period5);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(period15);
    }

    @Test
    public void test17957() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17957");
        org.joda.time.PeriodType periodType3 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period4 = new org.joda.time.Period(10L, periodType3);
        org.joda.time.PeriodType periodType5 = periodType3.withWeeksRemoved();
        org.joda.time.MutablePeriod mutablePeriod6 = new org.joda.time.MutablePeriod((long) (byte) 0, periodType3);
        org.joda.time.PeriodType periodType7 = periodType3.withWeeksRemoved();
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.Duration duration10 = org.joda.time.Duration.standardMinutes((-1L));
        long long11 = duration10.getStandardMinutes();
        org.joda.time.Duration duration13 = org.joda.time.Duration.standardMinutes((-1L));
        long long14 = duration13.getStandardMinutes();
        boolean boolean15 = duration10.isLongerThan((org.joda.time.ReadableDuration) duration13);
        org.joda.time.Duration duration17 = duration13.withMillis(1L);
        org.joda.time.Period period18 = new org.joda.time.Period(readableInstant8, (org.joda.time.ReadableDuration) duration13);
        org.joda.time.DurationFieldType durationFieldType19 = org.joda.time.DurationFieldType.years();
        java.lang.String str20 = durationFieldType19.getName();
        org.joda.time.Chronology chronology21 = null;
        boolean boolean22 = durationFieldType19.isSupported(chronology21);
        org.joda.time.Period period24 = period18.withFieldAdded(durationFieldType19, 0);
        java.lang.String str25 = durationFieldType19.getName();
        boolean boolean26 = periodType7.isSupported(durationFieldType19);
        org.joda.time.PeriodType periodType27 = periodType7.withMonthsRemoved();
        org.joda.time.Chronology chronology28 = null;
        org.joda.time.MutablePeriod mutablePeriod29 = new org.joda.time.MutablePeriod(100L, periodType7, chronology28);
        org.joda.time.PeriodType periodType30 = org.joda.time.PeriodType.millis();
        org.joda.time.DurationFieldType durationFieldType31 = org.joda.time.DurationFieldType.minutes();
        boolean boolean32 = periodType30.isSupported(durationFieldType31);
        boolean boolean33 = periodType7.equals((java.lang.Object) durationFieldType31);
        org.joda.time.PeriodType periodType34 = periodType7.withDaysRemoved();
        org.joda.time.Chronology chronology36 = null;
        org.joda.time.MutablePeriod mutablePeriod37 = new org.joda.time.MutablePeriod(1L, chronology36);
        org.joda.time.Period period39 = org.joda.time.Period.seconds((int) '#');
        mutablePeriod37.setPeriod((org.joda.time.ReadablePeriod) period39);
        mutablePeriod37.setWeeks((int) ' ');
        org.joda.time.PeriodType periodType43 = mutablePeriod37.getPeriodType();
        mutablePeriod37.setPeriod((long) 35);
        int int46 = mutablePeriod37.getMillis();
        org.joda.time.DurationFieldType durationFieldType47 = org.joda.time.DurationFieldType.eras();
        int int48 = mutablePeriod37.indexOf(durationFieldType47);
        boolean boolean49 = periodType34.isSupported(durationFieldType47);
        org.joda.time.PeriodType periodType50 = periodType34.withMillisRemoved();
        org.joda.time.MutablePeriod mutablePeriod51 = new org.joda.time.MutablePeriod(periodType50);
        org.junit.Assert.assertNotNull(periodType3);
        org.junit.Assert.assertNotNull(periodType5);
        org.junit.Assert.assertNotNull(periodType7);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + (-1L) + "'", long11 == (-1L));
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + (-1L) + "'", long14 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(duration17);
        org.junit.Assert.assertNotNull(durationFieldType19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "years" + "'", str20, "years");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(period24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "years" + "'", str25, "years");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(periodType27);
        org.junit.Assert.assertNotNull(periodType30);
        org.junit.Assert.assertNotNull(durationFieldType31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(periodType34);
        org.junit.Assert.assertNotNull(period39);
        org.junit.Assert.assertNotNull(periodType43);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 35 + "'", int46 == 35);
        org.junit.Assert.assertNotNull(durationFieldType47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(periodType50);
    }

    @Test
    public void test17958() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17958");
        org.joda.time.Duration duration1 = org.joda.time.Duration.millis((long) 10);
        org.joda.time.Duration duration2 = duration1.toDuration();
        org.joda.time.Duration duration4 = org.joda.time.Duration.standardMinutes((-1L));
        long long5 = duration4.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant6 = null;
        org.joda.time.Period period7 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration4, readableInstant6);
        org.joda.time.PeriodType periodType8 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology9 = null;
        org.joda.time.Period period10 = duration4.toPeriod(periodType8, chronology9);
        org.joda.time.Period period12 = period10.plusSeconds(0);
        org.joda.time.ReadableInstant readableInstant13 = null;
        org.joda.time.Duration duration14 = period12.toDurationFrom(readableInstant13);
        org.joda.time.ReadableInstant readableInstant15 = null;
        org.joda.time.Period period16 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration14, readableInstant15);
        boolean boolean17 = duration2.equals((java.lang.Object) duration14);
        org.joda.time.Duration duration19 = org.joda.time.Duration.millis(36000L);
        boolean boolean20 = duration2.isEqual((org.joda.time.ReadableDuration) duration19);
        org.joda.time.Duration duration22 = duration19.withMillis(37943L);
        org.joda.time.ReadableInstant readableInstant23 = null;
        org.joda.time.ReadableInstant readableInstant24 = null;
        org.joda.time.ReadableInstant readableInstant25 = null;
        org.joda.time.Duration duration29 = org.joda.time.Duration.standardMinutes((-1L));
        long long30 = duration29.getStandardMinutes();
        org.joda.time.Period period31 = duration29.toPeriod();
        org.joda.time.Duration duration33 = org.joda.time.Duration.standardMinutes((-1L));
        long long34 = duration33.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant35 = null;
        org.joda.time.Period period36 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration33, readableInstant35);
        org.joda.time.PeriodType periodType37 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology38 = null;
        org.joda.time.Period period39 = duration33.toPeriod(periodType37, chronology38);
        org.joda.time.Period period40 = duration29.toPeriod(periodType37);
        org.joda.time.Chronology chronology41 = null;
        org.joda.time.MutablePeriod mutablePeriod42 = new org.joda.time.MutablePeriod(1L, (long) (byte) 100, periodType37, chronology41);
        org.joda.time.PeriodType periodType43 = periodType37.withYearsRemoved();
        org.joda.time.PeriodType periodType44 = periodType37.withMillisRemoved();
        org.joda.time.Period period45 = new org.joda.time.Period(readableInstant24, readableInstant25, periodType37);
        org.joda.time.PeriodType periodType46 = periodType37.withDaysRemoved();
        org.joda.time.Period period47 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration19, readableInstant23, periodType37);
        org.joda.time.Duration duration50 = duration19.withDurationAdded((long) ' ', 51);
        org.joda.time.Hours hours51 = duration19.toStandardHours();
        org.joda.time.Duration duration52 = duration19.toDuration();
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(duration2);
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + (-1L) + "'", long5 == (-1L));
        org.junit.Assert.assertNotNull(periodType8);
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(duration19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(duration22);
        org.junit.Assert.assertNotNull(duration29);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + (-1L) + "'", long30 == (-1L));
        org.junit.Assert.assertNotNull(period31);
        org.junit.Assert.assertNotNull(duration33);
        org.junit.Assert.assertTrue("'" + long34 + "' != '" + (-1L) + "'", long34 == (-1L));
        org.junit.Assert.assertNotNull(periodType37);
        org.junit.Assert.assertNotNull(period39);
        org.junit.Assert.assertNotNull(period40);
        org.junit.Assert.assertNotNull(periodType43);
        org.junit.Assert.assertNotNull(periodType44);
        org.junit.Assert.assertNotNull(periodType46);
        org.junit.Assert.assertNotNull(duration50);
        org.junit.Assert.assertNotNull(hours51);
        org.junit.Assert.assertNotNull(duration52);
    }

    @Test
    public void test17959() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17959");
        org.joda.time.Period period1 = org.joda.time.Period.seconds((int) '#');
        int int2 = period1.getMillis();
        org.joda.time.Period period4 = period1.withMillis((int) '#');
        org.joda.time.DurationFieldType durationFieldType5 = org.joda.time.DurationFieldType.halfdays();
        boolean boolean6 = period1.isSupported(durationFieldType5);
        org.joda.time.Chronology chronology8 = null;
        org.joda.time.MutablePeriod mutablePeriod9 = new org.joda.time.MutablePeriod(1L, chronology8);
        org.joda.time.Period period11 = org.joda.time.Period.seconds((int) '#');
        mutablePeriod9.setPeriod((org.joda.time.ReadablePeriod) period11);
        org.joda.time.DurationFieldType durationFieldType13 = org.joda.time.DurationFieldType.years();
        java.lang.String str14 = durationFieldType13.getName();
        boolean boolean15 = mutablePeriod9.isSupported(durationFieldType13);
        int int16 = period1.get(durationFieldType13);
        org.joda.time.ReadableInstant readableInstant17 = null;
        org.joda.time.Duration duration19 = org.joda.time.Duration.standardMinutes((-1L));
        long long20 = duration19.getStandardMinutes();
        org.joda.time.Period period21 = duration19.toPeriod();
        org.joda.time.Duration duration23 = org.joda.time.Duration.standardMinutes((-1L));
        long long24 = duration23.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant25 = null;
        org.joda.time.Period period26 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration23, readableInstant25);
        org.joda.time.PeriodType periodType27 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology28 = null;
        org.joda.time.Period period29 = duration23.toPeriod(periodType27, chronology28);
        org.joda.time.Period period30 = duration19.toPeriod(periodType27);
        org.joda.time.Duration duration32 = org.joda.time.Duration.standardMinutes((-1L));
        long long33 = duration32.getStandardMinutes();
        boolean boolean34 = duration19.isLongerThan((org.joda.time.ReadableDuration) duration32);
        org.joda.time.PeriodType periodType35 = org.joda.time.PeriodType.weeks();
        org.joda.time.Period period36 = new org.joda.time.Period(readableInstant17, (org.joda.time.ReadableDuration) duration32, periodType35);
        boolean boolean37 = period1.equals((java.lang.Object) duration32);
        int int38 = period1.getDays();
        org.joda.time.ReadableInstant readableInstant39 = null;
        org.joda.time.Duration duration40 = period1.toDurationFrom(readableInstant39);
        org.joda.time.ReadableInstant readableInstant41 = null;
        org.joda.time.Period period42 = duration40.toPeriodFrom(readableInstant41);
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(durationFieldType5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(durationFieldType13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "years" + "'", str14, "years");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(duration19);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + (-1L) + "'", long20 == (-1L));
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertNotNull(duration23);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + (-1L) + "'", long24 == (-1L));
        org.junit.Assert.assertNotNull(periodType27);
        org.junit.Assert.assertNotNull(period29);
        org.junit.Assert.assertNotNull(period30);
        org.junit.Assert.assertNotNull(duration32);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + (-1L) + "'", long33 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(periodType35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertNotNull(duration40);
        org.junit.Assert.assertNotNull(period42);
    }

    @Test
    public void test17960() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17960");
        org.joda.time.Period period1 = org.joda.time.Period.millis(32);
        int int2 = period1.getSeconds();
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
    }

    @Test
    public void test17961() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17961");
        org.joda.time.MutablePeriod mutablePeriod1 = new org.joda.time.MutablePeriod((long) (byte) 1);
        org.joda.time.Period period3 = org.joda.time.Period.millis(10);
        org.joda.time.Period period4 = period3.toPeriod();
        org.joda.time.DurationFieldType[] durationFieldTypeArray5 = period4.getFieldTypes();
        boolean boolean6 = mutablePeriod1.equals((java.lang.Object) durationFieldTypeArray5);
        int int7 = mutablePeriod1.getMonths();
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.Duration duration10 = org.joda.time.Duration.standardHours((long) 10);
        org.joda.time.Period period11 = new org.joda.time.Period(readableInstant8, (org.joda.time.ReadableDuration) duration10);
        int int12 = period11.size();
        org.joda.time.PeriodType periodType13 = org.joda.time.PeriodType.standard();
        org.joda.time.PeriodType periodType14 = periodType13.withMinutesRemoved();
        org.joda.time.PeriodType periodType15 = periodType14.withMillisRemoved();
        org.joda.time.Period period16 = period11.withPeriodType(periodType14);
        org.joda.time.ReadableInstant readableInstant19 = null;
        org.joda.time.ReadableInstant readableInstant20 = null;
        org.joda.time.PeriodType periodType21 = org.joda.time.PeriodType.yearMonthDay();
        org.joda.time.MutablePeriod mutablePeriod22 = new org.joda.time.MutablePeriod(readableInstant19, readableInstant20, periodType21);
        org.joda.time.PeriodType periodType23 = periodType21.withMonthsRemoved();
        org.joda.time.Chronology chronology24 = null;
        org.joda.time.MutablePeriod mutablePeriod25 = new org.joda.time.MutablePeriod(0L, (long) (byte) 1, periodType23, chronology24);
        org.joda.time.Duration duration31 = org.joda.time.Duration.standardMinutes((-1L));
        long long32 = duration31.getStandardMinutes();
        org.joda.time.Period period33 = duration31.toPeriod();
        org.joda.time.Duration duration35 = org.joda.time.Duration.standardMinutes((-1L));
        long long36 = duration35.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant37 = null;
        org.joda.time.Period period38 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration35, readableInstant37);
        org.joda.time.PeriodType periodType39 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology40 = null;
        org.joda.time.Period period41 = duration35.toPeriod(periodType39, chronology40);
        org.joda.time.Period period42 = duration31.toPeriod(periodType39);
        org.joda.time.Chronology chronology43 = null;
        org.joda.time.MutablePeriod mutablePeriod44 = new org.joda.time.MutablePeriod(1L, (long) (byte) 100, periodType39, chronology43);
        org.joda.time.PeriodType periodType45 = periodType39.withMillisRemoved();
        org.joda.time.PeriodType periodType46 = periodType45.withSecondsRemoved();
        org.joda.time.Chronology chronology47 = null;
        org.joda.time.MutablePeriod mutablePeriod48 = new org.joda.time.MutablePeriod(100L, (long) ' ', periodType46, chronology47);
        org.joda.time.DurationFieldType durationFieldType50 = periodType46.getFieldType(0);
        mutablePeriod25.set(durationFieldType50, (-90));
        int int53 = period16.get(durationFieldType50);
        boolean boolean54 = mutablePeriod1.isSupported(durationFieldType50);
        mutablePeriod1.addMillis((-18));
        org.junit.Assert.assertNotNull(period3);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(durationFieldTypeArray5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 8 + "'", int12 == 8);
        org.junit.Assert.assertNotNull(periodType13);
        org.junit.Assert.assertNotNull(periodType14);
        org.junit.Assert.assertNotNull(periodType15);
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertNotNull(periodType21);
        org.junit.Assert.assertNotNull(periodType23);
        org.junit.Assert.assertNotNull(duration31);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + (-1L) + "'", long32 == (-1L));
        org.junit.Assert.assertNotNull(period33);
        org.junit.Assert.assertNotNull(duration35);
        org.junit.Assert.assertTrue("'" + long36 + "' != '" + (-1L) + "'", long36 == (-1L));
        org.junit.Assert.assertNotNull(periodType39);
        org.junit.Assert.assertNotNull(period41);
        org.junit.Assert.assertNotNull(period42);
        org.junit.Assert.assertNotNull(periodType45);
        org.junit.Assert.assertNotNull(periodType46);
        org.junit.Assert.assertNotNull(durationFieldType50);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
    }

    @Test
    public void test17962() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17962");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableInstant readableInstant1 = null;
        org.joda.time.MutablePeriod mutablePeriod2 = new org.joda.time.MutablePeriod(readableInstant0, readableInstant1);
        mutablePeriod2.setPeriod((long) 10, (long) 10);
        org.joda.time.MutablePeriod mutablePeriod6 = mutablePeriod2.toMutablePeriod();
        mutablePeriod6.setPeriod((long) '4');
        org.joda.time.ReadableInstant readableInstant9 = null;
        org.joda.time.Duration duration11 = org.joda.time.Duration.standardMinutes((-1L));
        long long12 = duration11.getStandardMinutes();
        org.joda.time.Duration duration14 = org.joda.time.Duration.standardMinutes((-1L));
        long long15 = duration14.getStandardMinutes();
        boolean boolean16 = duration11.isLongerThan((org.joda.time.ReadableDuration) duration14);
        org.joda.time.Duration duration18 = duration14.withMillis(1L);
        org.joda.time.Period period19 = new org.joda.time.Period(readableInstant9, (org.joda.time.ReadableDuration) duration14);
        org.joda.time.Days days20 = period19.toStandardDays();
        org.joda.time.Period period22 = period19.withYears((int) '#');
        org.joda.time.Period period24 = org.joda.time.Period.seconds((int) '#');
        org.joda.time.Period period26 = period24.plusMinutes(10);
        org.joda.time.Period period28 = period24.minusSeconds((int) '4');
        org.joda.time.Period period30 = org.joda.time.Period.seconds((int) '#');
        int int31 = period30.getMillis();
        org.joda.time.Period period33 = period30.withMillis((int) '#');
        int int34 = period33.size();
        org.joda.time.DurationFieldType durationFieldType35 = org.joda.time.DurationFieldType.halfdays();
        boolean boolean36 = period33.isSupported(durationFieldType35);
        int int37 = period28.get(durationFieldType35);
        int int38 = period19.get(durationFieldType35);
        org.joda.time.Chronology chronology39 = null;
        org.joda.time.MutablePeriod mutablePeriod40 = new org.joda.time.MutablePeriod((java.lang.Object) period19, chronology39);
        int int41 = mutablePeriod40.getDays();
        org.joda.time.MutablePeriod mutablePeriod43 = new org.joda.time.MutablePeriod((long) (short) 100);
        org.joda.time.Period period45 = org.joda.time.Period.seconds((int) (short) 1);
        org.joda.time.DurationFieldType durationFieldType46 = org.joda.time.DurationFieldType.days();
        int int47 = period45.get(durationFieldType46);
        mutablePeriod43.add(durationFieldType46, 3);
        mutablePeriod40.add(durationFieldType46, 3);
        org.joda.time.Chronology chronology54 = null;
        org.joda.time.MutablePeriod mutablePeriod55 = new org.joda.time.MutablePeriod(0L, (long) 10, chronology54);
        org.joda.time.DurationFieldType durationFieldType56 = org.joda.time.DurationFieldType.hours();
        boolean boolean57 = mutablePeriod55.isSupported(durationFieldType56);
        mutablePeriod40.add(durationFieldType56, (int) (short) 1);
        mutablePeriod6.add(durationFieldType56, 7);
        mutablePeriod6.setPeriod((-96L), (-17000L));
        org.junit.Assert.assertNotNull(mutablePeriod6);
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + (-1L) + "'", long12 == (-1L));
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + (-1L) + "'", long15 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(duration18);
        org.junit.Assert.assertNotNull(days20);
        org.junit.Assert.assertNotNull(period22);
        org.junit.Assert.assertNotNull(period24);
        org.junit.Assert.assertNotNull(period26);
        org.junit.Assert.assertNotNull(period28);
        org.junit.Assert.assertNotNull(period30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNotNull(period33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 8 + "'", int34 == 8);
        org.junit.Assert.assertNotNull(durationFieldType35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertNotNull(period45);
        org.junit.Assert.assertNotNull(durationFieldType46);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertNotNull(durationFieldType56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
    }

    @Test
    public void test17963() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17963");
        org.joda.time.Period period1 = org.joda.time.Period.seconds((int) '#');
        int int2 = period1.getMillis();
        org.joda.time.Period period4 = period1.plusWeeks((int) (byte) 0);
        org.joda.time.ReadableInstant readableInstant5 = null;
        org.joda.time.ReadableInstant readableInstant6 = null;
        org.joda.time.Period period8 = org.joda.time.Period.seconds((int) '#');
        int int9 = period8.getMillis();
        org.joda.time.Period period11 = period8.withMillis((int) '#');
        org.joda.time.DurationFieldType durationFieldType12 = org.joda.time.DurationFieldType.halfdays();
        boolean boolean13 = period8.isSupported(durationFieldType12);
        org.joda.time.Chronology chronology15 = null;
        org.joda.time.MutablePeriod mutablePeriod16 = new org.joda.time.MutablePeriod(1L, chronology15);
        org.joda.time.Period period18 = org.joda.time.Period.seconds((int) '#');
        mutablePeriod16.setPeriod((org.joda.time.ReadablePeriod) period18);
        org.joda.time.DurationFieldType durationFieldType20 = org.joda.time.DurationFieldType.years();
        java.lang.String str21 = durationFieldType20.getName();
        boolean boolean22 = mutablePeriod16.isSupported(durationFieldType20);
        int int23 = period8.get(durationFieldType20);
        org.joda.time.Duration duration25 = org.joda.time.Duration.standardMinutes((-1L));
        long long26 = duration25.getStandardMinutes();
        org.joda.time.Period period27 = duration25.toPeriod();
        org.joda.time.Duration duration29 = org.joda.time.Duration.standardMinutes((-1L));
        long long30 = duration29.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant31 = null;
        org.joda.time.Period period32 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration29, readableInstant31);
        org.joda.time.PeriodType periodType33 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology34 = null;
        org.joda.time.Period period35 = duration29.toPeriod(periodType33, chronology34);
        org.joda.time.Period period36 = duration25.toPeriod(periodType33);
        org.joda.time.PeriodType periodType38 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period39 = new org.joda.time.Period(10L, periodType38);
        org.joda.time.PeriodType periodType40 = periodType38.withWeeksRemoved();
        org.joda.time.Period period41 = period36.withPeriodType(periodType40);
        org.joda.time.Period period42 = period8.normalizedStandard(periodType40);
        org.joda.time.PeriodType periodType43 = periodType40.withSecondsRemoved();
        org.joda.time.MutablePeriod mutablePeriod44 = new org.joda.time.MutablePeriod(readableInstant5, readableInstant6, periodType43);
        org.joda.time.Period period45 = period4.minus((org.joda.time.ReadablePeriod) mutablePeriod44);
        org.joda.time.Period period47 = period4.minusWeeks(32);
        org.joda.time.Period period49 = period4.minusDays((-997));
        org.joda.time.Period period51 = period4.plusHours((-41));
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(durationFieldType12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(period18);
        org.junit.Assert.assertNotNull(durationFieldType20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "years" + "'", str21, "years");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(duration25);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + (-1L) + "'", long26 == (-1L));
        org.junit.Assert.assertNotNull(period27);
        org.junit.Assert.assertNotNull(duration29);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + (-1L) + "'", long30 == (-1L));
        org.junit.Assert.assertNotNull(periodType33);
        org.junit.Assert.assertNotNull(period35);
        org.junit.Assert.assertNotNull(period36);
        org.junit.Assert.assertNotNull(periodType38);
        org.junit.Assert.assertNotNull(periodType40);
        org.junit.Assert.assertNotNull(period41);
        org.junit.Assert.assertNotNull(period42);
        org.junit.Assert.assertNotNull(periodType43);
        org.junit.Assert.assertNotNull(period45);
        org.junit.Assert.assertNotNull(period47);
        org.junit.Assert.assertNotNull(period49);
        org.junit.Assert.assertNotNull(period51);
    }

    @Test
    public void test17964() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17964");
        org.joda.time.Period period8 = new org.joda.time.Period(123, 99, (-5), (-41), 2, (int) (byte) -1, (-102), (-2764800));
    }

    @Test
    public void test17965() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17965");
        org.joda.time.Period period1 = org.joda.time.Period.seconds((int) '#');
        int int2 = period1.getMillis();
        org.joda.time.DurationFieldType durationFieldType3 = org.joda.time.DurationFieldType.years();
        org.joda.time.Period period5 = period1.withField(durationFieldType3, (int) (short) 10);
        org.joda.time.Period period6 = new org.joda.time.Period((java.lang.Object) period5);
        int int7 = period6.getDays();
        org.joda.time.Period period9 = period6.plusDays((int) (byte) 10);
        org.joda.time.Period period11 = period9.withDays((int) (short) 1);
        org.joda.time.Period period13 = org.joda.time.Period.seconds((int) '#');
        int int14 = period13.getMillis();
        org.joda.time.DurationFieldType durationFieldType15 = org.joda.time.DurationFieldType.years();
        org.joda.time.Period period17 = period13.withField(durationFieldType15, (int) (short) 10);
        org.joda.time.Period period18 = new org.joda.time.Period((java.lang.Object) period17);
        int int19 = period18.getDays();
        org.joda.time.Period period20 = period11.plus((org.joda.time.ReadablePeriod) period18);
        org.joda.time.Chronology chronology22 = null;
        org.joda.time.MutablePeriod mutablePeriod23 = new org.joda.time.MutablePeriod(1L, chronology22);
        org.joda.time.Period period25 = org.joda.time.Period.seconds((int) '#');
        mutablePeriod23.setPeriod((org.joda.time.ReadablePeriod) period25);
        mutablePeriod23.setWeeks((int) ' ');
        org.joda.time.PeriodType periodType29 = mutablePeriod23.getPeriodType();
        mutablePeriod23.setPeriod((long) 35);
        org.joda.time.Period period33 = org.joda.time.Period.seconds((int) '#');
        int int34 = period33.getMillis();
        org.joda.time.Period period36 = period33.withMillis((int) '#');
        int int37 = period33.size();
        org.joda.time.Period period39 = period33.plusYears((int) 'a');
        org.joda.time.PeriodType periodType41 = org.joda.time.PeriodType.seconds();
        org.joda.time.PeriodType periodType42 = periodType41.withMinutesRemoved();
        org.joda.time.Chronology chronology43 = null;
        org.joda.time.Period period44 = new org.joda.time.Period(100L, periodType41, chronology43);
        int int45 = period44.getSeconds();
        org.joda.time.Period period47 = period44.minusSeconds((int) ' ');
        org.joda.time.format.PeriodPrinter periodPrinter50 = null;
        org.joda.time.format.PeriodParser periodParser51 = null;
        org.joda.time.format.PeriodFormatter periodFormatter52 = new org.joda.time.format.PeriodFormatter(periodPrinter50, periodParser51);
        org.joda.time.format.PeriodPrinter periodPrinter53 = periodFormatter52.getPrinter();
        boolean boolean54 = periodFormatter52.isPrinter();
        org.joda.time.PeriodType periodType55 = org.joda.time.PeriodType.standard();
        org.joda.time.PeriodType periodType56 = periodType55.withMinutesRemoved();
        org.joda.time.PeriodType periodType57 = periodType56.withMillisRemoved();
        org.joda.time.format.PeriodFormatter periodFormatter58 = periodFormatter52.withParseType(periodType56);
        org.joda.time.PeriodType periodType59 = periodType56.withDaysRemoved();
        org.joda.time.Chronology chronology60 = null;
        org.joda.time.MutablePeriod mutablePeriod61 = new org.joda.time.MutablePeriod((-1L), (long) (short) 0, periodType56, chronology60);
        org.joda.time.MutablePeriod mutablePeriod62 = new org.joda.time.MutablePeriod(periodType56);
        org.joda.time.ReadableInstant readableInstant63 = null;
        org.joda.time.ReadableInstant readableInstant64 = null;
        org.joda.time.PeriodType periodType66 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period67 = new org.joda.time.Period(10L, periodType66);
        org.joda.time.MutablePeriod mutablePeriod68 = new org.joda.time.MutablePeriod(readableInstant63, readableInstant64, periodType66);
        java.lang.String str69 = periodType66.toString();
        org.joda.time.DurationFieldType durationFieldType71 = periodType66.getFieldType((int) (byte) 0);
        mutablePeriod62.add(durationFieldType71, 0);
        org.joda.time.Period period75 = period47.withField(durationFieldType71, (int) ' ');
        int int76 = period33.get(durationFieldType71);
        mutablePeriod23.setPeriod((org.joda.time.ReadablePeriod) period33);
        mutablePeriod23.setPeriod((int) (short) -1, 32, (int) (short) 100, 6, 2, (int) (byte) 0, 0, 32);
        org.joda.time.Period period87 = period20.minus((org.joda.time.ReadablePeriod) mutablePeriod23);
        org.joda.time.MutablePeriod mutablePeriod88 = new org.joda.time.MutablePeriod((java.lang.Object) mutablePeriod23);
        org.joda.time.MutablePeriod mutablePeriod89 = mutablePeriod88.copy();
        int int90 = mutablePeriod88.size();
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(durationFieldType3);
        org.junit.Assert.assertNotNull(period5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(period13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(durationFieldType15);
        org.junit.Assert.assertNotNull(period17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(period20);
        org.junit.Assert.assertNotNull(period25);
        org.junit.Assert.assertNotNull(periodType29);
        org.junit.Assert.assertNotNull(period33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertNotNull(period36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 8 + "'", int37 == 8);
        org.junit.Assert.assertNotNull(period39);
        org.junit.Assert.assertNotNull(periodType41);
        org.junit.Assert.assertNotNull(periodType42);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertNotNull(period47);
        org.junit.Assert.assertNull(periodPrinter53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(periodType55);
        org.junit.Assert.assertNotNull(periodType56);
        org.junit.Assert.assertNotNull(periodType57);
        org.junit.Assert.assertNotNull(periodFormatter58);
        org.junit.Assert.assertNotNull(periodType59);
        org.junit.Assert.assertNotNull(periodType66);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "PeriodType[Seconds]" + "'", str69, "PeriodType[Seconds]");
        org.junit.Assert.assertNotNull(durationFieldType71);
        org.junit.Assert.assertNotNull(period75);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 35 + "'", int76 == 35);
        org.junit.Assert.assertNotNull(period87);
        org.junit.Assert.assertNotNull(mutablePeriod89);
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + 8 + "'", int90 == 8);
    }

    @Test
    public void test17966() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17966");
        org.joda.time.Chronology chronology1 = null;
        org.joda.time.MutablePeriod mutablePeriod2 = new org.joda.time.MutablePeriod(1L, chronology1);
        org.joda.time.Period period4 = org.joda.time.Period.seconds((int) '#');
        mutablePeriod2.setPeriod((org.joda.time.ReadablePeriod) period4);
        mutablePeriod2.setWeeks((int) ' ');
        org.joda.time.PeriodType periodType8 = mutablePeriod2.getPeriodType();
        org.joda.time.ReadableInstant readableInstant9 = null;
        org.joda.time.ReadableInstant readableInstant10 = null;
        mutablePeriod2.setPeriod(readableInstant9, readableInstant10);
        org.joda.time.ReadableInstant readableInstant12 = null;
        org.joda.time.Duration duration13 = mutablePeriod2.toDurationTo(readableInstant12);
        org.joda.time.ReadableInstant readableInstant14 = null;
        org.joda.time.ReadableInstant readableInstant15 = null;
        org.joda.time.PeriodType periodType16 = org.joda.time.PeriodType.days();
        org.joda.time.Period period17 = new org.joda.time.Period(readableInstant14, readableInstant15, periodType16);
        org.joda.time.Period period18 = duration13.toPeriod(periodType16);
        org.joda.time.Duration duration20 = org.joda.time.Duration.standardMinutes((-1L));
        long long21 = duration20.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant22 = null;
        org.joda.time.Period period23 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration20, readableInstant22);
        org.joda.time.PeriodType periodType24 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology25 = null;
        org.joda.time.Period period26 = duration20.toPeriod(periodType24, chronology25);
        java.lang.String str27 = period26.toString();
        org.joda.time.Duration duration31 = org.joda.time.Duration.standardMinutes((-1L));
        long long32 = duration31.getStandardMinutes();
        org.joda.time.Period period33 = duration31.toPeriod();
        org.joda.time.Duration duration35 = org.joda.time.Duration.standardMinutes((-1L));
        long long36 = duration35.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant37 = null;
        org.joda.time.Period period38 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration35, readableInstant37);
        org.joda.time.PeriodType periodType39 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology40 = null;
        org.joda.time.Period period41 = duration35.toPeriod(periodType39, chronology40);
        org.joda.time.Period period42 = duration31.toPeriod(periodType39);
        org.joda.time.Chronology chronology43 = null;
        org.joda.time.MutablePeriod mutablePeriod44 = new org.joda.time.MutablePeriod(1L, (long) (byte) 100, periodType39, chronology43);
        org.joda.time.PeriodType periodType45 = periodType39.withMillisRemoved();
        org.joda.time.PeriodType periodType46 = periodType45.withSecondsRemoved();
        org.joda.time.PeriodType periodType47 = periodType46.withHoursRemoved();
        org.joda.time.Period period48 = period26.normalizedStandard(periodType47);
        org.joda.time.Period period49 = duration13.toPeriod(periodType47);
        int int50 = periodType47.size();
        org.joda.time.PeriodType periodType51 = periodType47.withSecondsRemoved();
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(periodType8);
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertNotNull(periodType16);
        org.junit.Assert.assertNotNull(period18);
        org.junit.Assert.assertNotNull(duration20);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + (-1L) + "'", long21 == (-1L));
        org.junit.Assert.assertNotNull(periodType24);
        org.junit.Assert.assertNotNull(period26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "P0D" + "'", str27, "P0D");
        org.junit.Assert.assertNotNull(duration31);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + (-1L) + "'", long32 == (-1L));
        org.junit.Assert.assertNotNull(period33);
        org.junit.Assert.assertNotNull(duration35);
        org.junit.Assert.assertTrue("'" + long36 + "' != '" + (-1L) + "'", long36 == (-1L));
        org.junit.Assert.assertNotNull(periodType39);
        org.junit.Assert.assertNotNull(period41);
        org.junit.Assert.assertNotNull(period42);
        org.junit.Assert.assertNotNull(periodType45);
        org.junit.Assert.assertNotNull(periodType46);
        org.junit.Assert.assertNotNull(periodType47);
        org.junit.Assert.assertNotNull(period48);
        org.junit.Assert.assertNotNull(period49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 1 + "'", int50 == 1);
        org.junit.Assert.assertNotNull(periodType51);
    }

    @Test
    public void test17967() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17967");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableInstant readableInstant1 = null;
        org.joda.time.Period period3 = org.joda.time.Period.seconds((int) '#');
        int int4 = period3.getMillis();
        org.joda.time.Period period6 = period3.withMillis((int) '#');
        org.joda.time.DurationFieldType durationFieldType7 = org.joda.time.DurationFieldType.halfdays();
        boolean boolean8 = period3.isSupported(durationFieldType7);
        org.joda.time.Chronology chronology10 = null;
        org.joda.time.MutablePeriod mutablePeriod11 = new org.joda.time.MutablePeriod(1L, chronology10);
        org.joda.time.Period period13 = org.joda.time.Period.seconds((int) '#');
        mutablePeriod11.setPeriod((org.joda.time.ReadablePeriod) period13);
        org.joda.time.DurationFieldType durationFieldType15 = org.joda.time.DurationFieldType.years();
        java.lang.String str16 = durationFieldType15.getName();
        boolean boolean17 = mutablePeriod11.isSupported(durationFieldType15);
        int int18 = period3.get(durationFieldType15);
        org.joda.time.Duration duration20 = org.joda.time.Duration.standardMinutes((-1L));
        long long21 = duration20.getStandardMinutes();
        org.joda.time.Period period22 = duration20.toPeriod();
        org.joda.time.Duration duration24 = org.joda.time.Duration.standardMinutes((-1L));
        long long25 = duration24.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant26 = null;
        org.joda.time.Period period27 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration24, readableInstant26);
        org.joda.time.PeriodType periodType28 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology29 = null;
        org.joda.time.Period period30 = duration24.toPeriod(periodType28, chronology29);
        org.joda.time.Period period31 = duration20.toPeriod(periodType28);
        org.joda.time.PeriodType periodType33 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period34 = new org.joda.time.Period(10L, periodType33);
        org.joda.time.PeriodType periodType35 = periodType33.withWeeksRemoved();
        org.joda.time.Period period36 = period31.withPeriodType(periodType35);
        org.joda.time.Period period37 = period3.normalizedStandard(periodType35);
        org.joda.time.PeriodType periodType38 = periodType35.withSecondsRemoved();
        org.joda.time.PeriodType periodType39 = periodType35.withHoursRemoved();
        org.joda.time.PeriodType periodType40 = periodType39.withWeeksRemoved();
        org.joda.time.MutablePeriod mutablePeriod41 = new org.joda.time.MutablePeriod(readableInstant0, readableInstant1, periodType39);
        org.junit.Assert.assertNotNull(period3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(durationFieldType7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(period13);
        org.junit.Assert.assertNotNull(durationFieldType15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "years" + "'", str16, "years");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(duration20);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + (-1L) + "'", long21 == (-1L));
        org.junit.Assert.assertNotNull(period22);
        org.junit.Assert.assertNotNull(duration24);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + (-1L) + "'", long25 == (-1L));
        org.junit.Assert.assertNotNull(periodType28);
        org.junit.Assert.assertNotNull(period30);
        org.junit.Assert.assertNotNull(period31);
        org.junit.Assert.assertNotNull(periodType33);
        org.junit.Assert.assertNotNull(periodType35);
        org.junit.Assert.assertNotNull(period36);
        org.junit.Assert.assertNotNull(period37);
        org.junit.Assert.assertNotNull(periodType38);
        org.junit.Assert.assertNotNull(periodType39);
        org.junit.Assert.assertNotNull(periodType40);
    }

    @Test
    public void test17968() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17968");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.ReadableInstant readableInstant2 = null;
        org.joda.time.Duration duration4 = org.joda.time.Duration.standardSeconds(136598340000L);
        org.joda.time.ReadableInstant readableInstant5 = null;
        org.joda.time.ReadableInstant readableInstant6 = null;
        org.joda.time.Duration duration8 = org.joda.time.Duration.standardHours((long) 10);
        org.joda.time.Period period9 = new org.joda.time.Period(readableInstant6, (org.joda.time.ReadableDuration) duration8);
        org.joda.time.Duration duration11 = org.joda.time.Duration.standardMinutes((-1L));
        long long12 = duration11.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant13 = null;
        org.joda.time.Period period14 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration11, readableInstant13);
        org.joda.time.Duration duration16 = org.joda.time.Duration.standardMinutes((-1L));
        long long17 = duration16.getStandardMinutes();
        org.joda.time.Period period18 = duration16.toPeriod();
        boolean boolean19 = duration11.isLongerThan((org.joda.time.ReadableDuration) duration16);
        org.joda.time.Duration duration21 = org.joda.time.Duration.standardMinutes((-1L));
        long long22 = duration21.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant23 = null;
        org.joda.time.Period period24 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration21, readableInstant23);
        org.joda.time.PeriodType periodType25 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology26 = null;
        org.joda.time.Period period27 = duration21.toPeriod(periodType25, chronology26);
        org.joda.time.Duration duration28 = duration16.minus((org.joda.time.ReadableDuration) duration21);
        org.joda.time.Duration duration29 = duration8.plus((org.joda.time.ReadableDuration) duration16);
        java.lang.Object obj30 = null;
        org.joda.time.PeriodType periodType32 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period33 = new org.joda.time.Period(10L, periodType32);
        org.joda.time.PeriodType periodType34 = periodType32.withHoursRemoved();
        org.joda.time.Period period35 = new org.joda.time.Period(obj30, periodType32);
        org.joda.time.MutablePeriod mutablePeriod36 = new org.joda.time.MutablePeriod(readableInstant5, (org.joda.time.ReadableDuration) duration16, periodType32);
        org.joda.time.PeriodType periodType37 = periodType32.withWeeksRemoved();
        org.joda.time.PeriodType periodType38 = periodType32.withHoursRemoved();
        org.joda.time.Period period40 = org.joda.time.Period.seconds((int) '#');
        int int41 = period40.getMillis();
        org.joda.time.Period period43 = period40.withMillis((int) '#');
        int int44 = period40.size();
        org.joda.time.ReadableInstant readableInstant45 = null;
        org.joda.time.Duration duration47 = org.joda.time.Duration.standardMinutes((-1L));
        long long48 = duration47.getStandardMinutes();
        org.joda.time.Period period49 = duration47.toPeriod();
        org.joda.time.Duration duration51 = org.joda.time.Duration.standardMinutes((-1L));
        long long52 = duration51.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant53 = null;
        org.joda.time.Period period54 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration51, readableInstant53);
        org.joda.time.PeriodType periodType55 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology56 = null;
        org.joda.time.Period period57 = duration51.toPeriod(periodType55, chronology56);
        org.joda.time.Period period58 = duration47.toPeriod(periodType55);
        org.joda.time.Duration duration60 = org.joda.time.Duration.standardMinutes((-1L));
        long long61 = duration60.getStandardMinutes();
        boolean boolean62 = duration47.isLongerThan((org.joda.time.ReadableDuration) duration60);
        org.joda.time.PeriodType periodType63 = org.joda.time.PeriodType.weeks();
        org.joda.time.Period period64 = new org.joda.time.Period(readableInstant45, (org.joda.time.ReadableDuration) duration60, periodType63);
        org.joda.time.Chronology chronology65 = null;
        org.joda.time.Period period66 = duration60.toPeriod(chronology65);
        org.joda.time.Hours hours67 = period66.toStandardHours();
        org.joda.time.Period period69 = period66.plusMinutes((int) (byte) -1);
        org.joda.time.Period period78 = new org.joda.time.Period((int) (byte) 1, 100, (int) 'a', (int) (short) 100, (int) (short) 0, 0, 0, (int) (short) 1);
        org.joda.time.Period period79 = period66.minus((org.joda.time.ReadablePeriod) period78);
        org.joda.time.DurationFieldType durationFieldType80 = org.joda.time.DurationFieldType.hours();
        org.joda.time.Period period82 = period78.withField(durationFieldType80, 8);
        java.lang.String str83 = durationFieldType80.getName();
        boolean boolean84 = period40.isSupported(durationFieldType80);
        org.joda.time.Chronology chronology85 = null;
        org.joda.time.DurationField durationField86 = durationFieldType80.getField(chronology85);
        int int87 = periodType38.indexOf(durationFieldType80);
        org.joda.time.PeriodType periodType88 = periodType38.withSecondsRemoved();
        org.joda.time.MutablePeriod mutablePeriod89 = new org.joda.time.MutablePeriod(readableInstant2, (org.joda.time.ReadableDuration) duration4, periodType88);
        org.joda.time.MutablePeriod mutablePeriod90 = new org.joda.time.MutablePeriod(readableInstant0, readableDuration1, periodType88);
        java.lang.String str91 = periodType88.getName();
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertNotNull(duration8);
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + (-1L) + "'", long12 == (-1L));
        org.junit.Assert.assertNotNull(duration16);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + (-1L) + "'", long17 == (-1L));
        org.junit.Assert.assertNotNull(period18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(duration21);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + (-1L) + "'", long22 == (-1L));
        org.junit.Assert.assertNotNull(periodType25);
        org.junit.Assert.assertNotNull(period27);
        org.junit.Assert.assertNotNull(duration28);
        org.junit.Assert.assertNotNull(duration29);
        org.junit.Assert.assertNotNull(periodType32);
        org.junit.Assert.assertNotNull(periodType34);
        org.junit.Assert.assertNotNull(periodType37);
        org.junit.Assert.assertNotNull(periodType38);
        org.junit.Assert.assertNotNull(period40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertNotNull(period43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 8 + "'", int44 == 8);
        org.junit.Assert.assertNotNull(duration47);
        org.junit.Assert.assertTrue("'" + long48 + "' != '" + (-1L) + "'", long48 == (-1L));
        org.junit.Assert.assertNotNull(period49);
        org.junit.Assert.assertNotNull(duration51);
        org.junit.Assert.assertTrue("'" + long52 + "' != '" + (-1L) + "'", long52 == (-1L));
        org.junit.Assert.assertNotNull(periodType55);
        org.junit.Assert.assertNotNull(period57);
        org.junit.Assert.assertNotNull(period58);
        org.junit.Assert.assertNotNull(duration60);
        org.junit.Assert.assertTrue("'" + long61 + "' != '" + (-1L) + "'", long61 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(periodType63);
        org.junit.Assert.assertNotNull(period66);
        org.junit.Assert.assertNotNull(hours67);
        org.junit.Assert.assertNotNull(period69);
        org.junit.Assert.assertNotNull(period79);
        org.junit.Assert.assertNotNull(durationFieldType80);
        org.junit.Assert.assertNotNull(period82);
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "hours" + "'", str83, "hours");
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertNotNull(durationField86);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + (-1) + "'", int87 == (-1));
        org.junit.Assert.assertNotNull(periodType88);
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + "SecondsNoSeconds" + "'", str91, "SecondsNoSeconds");
    }

    @Test
    public void test17969() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17969");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardHours((long) 10);
        org.joda.time.Duration duration3 = org.joda.time.Duration.standardMinutes((-1L));
        long long4 = duration3.getStandardMinutes();
        org.joda.time.Duration duration6 = org.joda.time.Duration.standardMinutes((-1L));
        long long7 = duration6.getStandardMinutes();
        boolean boolean8 = duration3.isLongerThan((org.joda.time.ReadableDuration) duration6);
        org.joda.time.Period period9 = duration6.toPeriod();
        org.joda.time.Minutes minutes10 = duration6.toStandardMinutes();
        boolean boolean11 = duration1.isEqual((org.joda.time.ReadableDuration) duration6);
        org.joda.time.Duration duration13 = org.joda.time.Duration.standardMinutes((-1L));
        long long14 = duration13.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant15 = null;
        org.joda.time.Period period16 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration13, readableInstant15);
        org.joda.time.PeriodType periodType17 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology18 = null;
        org.joda.time.Period period19 = duration13.toPeriod(periodType17, chronology18);
        org.joda.time.Duration duration22 = duration13.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration24 = org.joda.time.Duration.standardMinutes((-1L));
        long long25 = duration24.getStandardMinutes();
        org.joda.time.Duration duration27 = org.joda.time.Duration.standardMinutes((-1L));
        long long28 = duration27.getStandardMinutes();
        boolean boolean29 = duration24.isLongerThan((org.joda.time.ReadableDuration) duration27);
        org.joda.time.Duration duration31 = duration27.withMillis((long) 1);
        boolean boolean32 = duration22.isShorterThan((org.joda.time.ReadableDuration) duration27);
        boolean boolean33 = duration6.isEqual((org.joda.time.ReadableDuration) duration27);
        org.joda.time.Duration duration35 = org.joda.time.Duration.standardMinutes((-1L));
        long long36 = duration35.getStandardMinutes();
        org.joda.time.Duration duration38 = org.joda.time.Duration.standardMinutes((-1L));
        long long39 = duration38.getStandardMinutes();
        boolean boolean40 = duration35.isLongerThan((org.joda.time.ReadableDuration) duration38);
        org.joda.time.Period period41 = duration38.toPeriod();
        org.joda.time.Minutes minutes42 = duration38.toStandardMinutes();
        org.joda.time.Duration duration44 = org.joda.time.Duration.standardMinutes((-1L));
        long long45 = duration44.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant46 = null;
        org.joda.time.Period period47 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration44, readableInstant46);
        org.joda.time.PeriodType periodType48 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology49 = null;
        org.joda.time.Period period50 = duration44.toPeriod(periodType48, chronology49);
        org.joda.time.Duration duration53 = duration44.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration54 = duration38.plus((org.joda.time.ReadableDuration) duration53);
        long long55 = duration53.getStandardDays();
        org.joda.time.Duration duration56 = duration27.plus((org.joda.time.ReadableDuration) duration53);
        long long57 = duration56.getStandardSeconds();
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + (-1L) + "'", long4 == (-1L));
        org.junit.Assert.assertNotNull(duration6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + (-1L) + "'", long14 == (-1L));
        org.junit.Assert.assertNotNull(periodType17);
        org.junit.Assert.assertNotNull(period19);
        org.junit.Assert.assertNotNull(duration22);
        org.junit.Assert.assertNotNull(duration24);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + (-1L) + "'", long25 == (-1L));
        org.junit.Assert.assertNotNull(duration27);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + (-1L) + "'", long28 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(duration31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(duration35);
        org.junit.Assert.assertTrue("'" + long36 + "' != '" + (-1L) + "'", long36 == (-1L));
        org.junit.Assert.assertNotNull(duration38);
        org.junit.Assert.assertTrue("'" + long39 + "' != '" + (-1L) + "'", long39 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(period41);
        org.junit.Assert.assertNotNull(minutes42);
        org.junit.Assert.assertNotNull(duration44);
        org.junit.Assert.assertTrue("'" + long45 + "' != '" + (-1L) + "'", long45 == (-1L));
        org.junit.Assert.assertNotNull(periodType48);
        org.junit.Assert.assertNotNull(period50);
        org.junit.Assert.assertNotNull(duration53);
        org.junit.Assert.assertNotNull(duration54);
        org.junit.Assert.assertTrue("'" + long55 + "' != '" + 0L + "'", long55 == 0L);
        org.junit.Assert.assertNotNull(duration56);
        org.junit.Assert.assertTrue("'" + long57 + "' != '" + (-120L) + "'", long57 == (-120L));
    }

    @Test
    public void test17970() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17970");
        org.joda.time.Chronology chronology3 = null;
        org.joda.time.Period period4 = new org.joda.time.Period(1L, (long) (byte) 10, chronology3);
        org.joda.time.Period period5 = period4.toPeriod();
        org.joda.time.Period period7 = period5.plusYears(10);
        org.joda.time.Duration duration9 = org.joda.time.Duration.standardMinutes((-1L));
        long long10 = duration9.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant11 = null;
        org.joda.time.Period period12 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration9, readableInstant11);
        org.joda.time.Duration duration14 = org.joda.time.Duration.standardMinutes((-1L));
        long long15 = duration14.getStandardMinutes();
        org.joda.time.Period period16 = duration14.toPeriod();
        boolean boolean17 = duration9.isLongerThan((org.joda.time.ReadableDuration) duration14);
        org.joda.time.Period period18 = duration9.toPeriod();
        org.joda.time.PeriodType periodType19 = period18.getPeriodType();
        org.joda.time.Chronology chronology21 = null;
        org.joda.time.MutablePeriod mutablePeriod22 = new org.joda.time.MutablePeriod(1L, chronology21);
        org.joda.time.Chronology chronology24 = null;
        org.joda.time.MutablePeriod mutablePeriod25 = new org.joda.time.MutablePeriod(1L, chronology24);
        mutablePeriod22.add((org.joda.time.ReadablePeriod) mutablePeriod25);
        org.joda.time.PeriodType periodType27 = mutablePeriod25.getPeriodType();
        org.joda.time.DurationFieldType durationFieldType28 = org.joda.time.DurationFieldType.years();
        java.lang.String str29 = durationFieldType28.getName();
        org.joda.time.Chronology chronology30 = null;
        boolean boolean31 = durationFieldType28.isSupported(chronology30);
        boolean boolean32 = periodType27.isSupported(durationFieldType28);
        boolean boolean33 = periodType19.isSupported(durationFieldType28);
        org.joda.time.Period period34 = period5.normalizedStandard(periodType19);
        org.joda.time.Period period35 = new org.joda.time.Period(32000L, periodType19);
        org.joda.time.Period period37 = period35.plusYears(5);
        org.junit.Assert.assertNotNull(period5);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + (-1L) + "'", long10 == (-1L));
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + (-1L) + "'", long15 == (-1L));
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(period18);
        org.junit.Assert.assertNotNull(periodType19);
        org.junit.Assert.assertNotNull(periodType27);
        org.junit.Assert.assertNotNull(durationFieldType28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "years" + "'", str29, "years");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(period34);
        org.junit.Assert.assertNotNull(period37);
    }

    @Test
    public void test17971() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17971");
        org.joda.time.ReadableInstant readableInstant2 = null;
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.format.PeriodPrinter periodPrinter4 = null;
        org.joda.time.format.PeriodParser periodParser5 = null;
        org.joda.time.format.PeriodFormatter periodFormatter6 = new org.joda.time.format.PeriodFormatter(periodPrinter4, periodParser5);
        org.joda.time.format.PeriodPrinter periodPrinter7 = periodFormatter6.getPrinter();
        boolean boolean8 = periodFormatter6.isParser();
        java.util.Locale locale9 = periodFormatter6.getLocale();
        org.joda.time.PeriodType periodType10 = periodFormatter6.getParseType();
        java.util.Locale locale11 = null;
        org.joda.time.format.PeriodFormatter periodFormatter12 = periodFormatter6.withLocale(locale11);
        boolean boolean13 = periodFormatter6.isParser();
        boolean boolean14 = periodFormatter6.isParser();
        java.util.Locale locale15 = null;
        org.joda.time.format.PeriodFormatter periodFormatter16 = periodFormatter6.withLocale(locale15);
        org.joda.time.ReadableInstant readableInstant19 = null;
        org.joda.time.Duration duration21 = org.joda.time.Duration.standardHours((long) 10);
        org.joda.time.Duration duration23 = org.joda.time.Duration.standardMinutes((-1L));
        long long24 = duration23.getStandardMinutes();
        org.joda.time.Duration duration26 = org.joda.time.Duration.standardMinutes((-1L));
        long long27 = duration26.getStandardMinutes();
        boolean boolean28 = duration23.isLongerThan((org.joda.time.ReadableDuration) duration26);
        org.joda.time.Period period29 = duration26.toPeriod();
        org.joda.time.Minutes minutes30 = duration26.toStandardMinutes();
        boolean boolean31 = duration21.isEqual((org.joda.time.ReadableDuration) duration26);
        org.joda.time.Duration duration33 = org.joda.time.Duration.standardMinutes((-1L));
        long long34 = duration33.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant35 = null;
        org.joda.time.Period period36 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration33, readableInstant35);
        org.joda.time.PeriodType periodType37 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology38 = null;
        org.joda.time.Period period39 = duration33.toPeriod(periodType37, chronology38);
        org.joda.time.Duration duration42 = duration33.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration44 = org.joda.time.Duration.standardMinutes((-1L));
        long long45 = duration44.getStandardMinutes();
        org.joda.time.Duration duration47 = org.joda.time.Duration.standardMinutes((-1L));
        long long48 = duration47.getStandardMinutes();
        boolean boolean49 = duration44.isLongerThan((org.joda.time.ReadableDuration) duration47);
        org.joda.time.Duration duration51 = duration47.withMillis((long) 1);
        boolean boolean52 = duration42.isShorterThan((org.joda.time.ReadableDuration) duration47);
        boolean boolean53 = duration26.isEqual((org.joda.time.ReadableDuration) duration47);
        org.joda.time.ReadableInstant readableInstant54 = null;
        org.joda.time.MutablePeriod mutablePeriod55 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration26, readableInstant54);
        org.joda.time.Duration duration57 = org.joda.time.Duration.standardMinutes((-1L));
        long long58 = duration57.getStandardMinutes();
        org.joda.time.Period period59 = duration57.toPeriod();
        org.joda.time.Duration duration61 = org.joda.time.Duration.standardMinutes((-1L));
        long long62 = duration61.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant63 = null;
        org.joda.time.Period period64 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration61, readableInstant63);
        org.joda.time.PeriodType periodType65 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology66 = null;
        org.joda.time.Period period67 = duration61.toPeriod(periodType65, chronology66);
        org.joda.time.Period period68 = duration57.toPeriod(periodType65);
        org.joda.time.Duration duration70 = org.joda.time.Duration.standardMinutes((-1L));
        long long71 = duration70.getStandardMinutes();
        boolean boolean72 = duration57.isLongerThan((org.joda.time.ReadableDuration) duration70);
        org.joda.time.Duration duration74 = duration70.withMillis((long) 0);
        org.joda.time.PeriodType periodType75 = org.joda.time.PeriodType.weeks();
        org.joda.time.Period period76 = duration74.toPeriod(periodType75);
        org.joda.time.Period period77 = new org.joda.time.Period(readableInstant19, (org.joda.time.ReadableDuration) duration26, periodType75);
        org.joda.time.PeriodType periodType78 = periodType75.withYearsRemoved();
        org.joda.time.Chronology chronology79 = null;
        org.joda.time.MutablePeriod mutablePeriod80 = new org.joda.time.MutablePeriod((long) (short) 10, (long) (-1), periodType75, chronology79);
        org.joda.time.PeriodType periodType81 = periodType75.withWeeksRemoved();
        org.joda.time.format.PeriodFormatter periodFormatter82 = periodFormatter6.withParseType(periodType75);
        org.joda.time.MutablePeriod mutablePeriod83 = new org.joda.time.MutablePeriod(readableInstant2, readableInstant3, periodType75);
        org.joda.time.Period period84 = new org.joda.time.Period((long) (-41), 94800L, periodType75);
        org.junit.Assert.assertNull(periodPrinter7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(locale9);
        org.junit.Assert.assertNull(periodType10);
        org.junit.Assert.assertNotNull(periodFormatter12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(periodFormatter16);
        org.junit.Assert.assertNotNull(duration21);
        org.junit.Assert.assertNotNull(duration23);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + (-1L) + "'", long24 == (-1L));
        org.junit.Assert.assertNotNull(duration26);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + (-1L) + "'", long27 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(period29);
        org.junit.Assert.assertNotNull(minutes30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(duration33);
        org.junit.Assert.assertTrue("'" + long34 + "' != '" + (-1L) + "'", long34 == (-1L));
        org.junit.Assert.assertNotNull(periodType37);
        org.junit.Assert.assertNotNull(period39);
        org.junit.Assert.assertNotNull(duration42);
        org.junit.Assert.assertNotNull(duration44);
        org.junit.Assert.assertTrue("'" + long45 + "' != '" + (-1L) + "'", long45 == (-1L));
        org.junit.Assert.assertNotNull(duration47);
        org.junit.Assert.assertTrue("'" + long48 + "' != '" + (-1L) + "'", long48 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(duration51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(duration57);
        org.junit.Assert.assertTrue("'" + long58 + "' != '" + (-1L) + "'", long58 == (-1L));
        org.junit.Assert.assertNotNull(period59);
        org.junit.Assert.assertNotNull(duration61);
        org.junit.Assert.assertTrue("'" + long62 + "' != '" + (-1L) + "'", long62 == (-1L));
        org.junit.Assert.assertNotNull(periodType65);
        org.junit.Assert.assertNotNull(period67);
        org.junit.Assert.assertNotNull(period68);
        org.junit.Assert.assertNotNull(duration70);
        org.junit.Assert.assertTrue("'" + long71 + "' != '" + (-1L) + "'", long71 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(duration74);
        org.junit.Assert.assertNotNull(periodType75);
        org.junit.Assert.assertNotNull(period76);
        org.junit.Assert.assertNotNull(periodType78);
        org.junit.Assert.assertNotNull(periodType81);
        org.junit.Assert.assertNotNull(periodFormatter82);
    }

    @Test
    public void test17972() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17972");
        org.joda.time.Duration duration3 = org.joda.time.Duration.standardMinutes((-1L));
        long long4 = duration3.getStandardMinutes();
        org.joda.time.Duration duration6 = org.joda.time.Duration.standardMinutes((-1L));
        long long7 = duration6.getStandardMinutes();
        boolean boolean8 = duration3.isLongerThan((org.joda.time.ReadableDuration) duration6);
        org.joda.time.Duration duration10 = duration6.withMillis((long) 1);
        org.joda.time.Chronology chronology12 = null;
        org.joda.time.MutablePeriod mutablePeriod13 = new org.joda.time.MutablePeriod(1L, chronology12);
        org.joda.time.Chronology chronology15 = null;
        org.joda.time.MutablePeriod mutablePeriod16 = new org.joda.time.MutablePeriod(1L, chronology15);
        mutablePeriod13.add((org.joda.time.ReadablePeriod) mutablePeriod16);
        boolean boolean18 = duration10.equals((java.lang.Object) mutablePeriod16);
        org.joda.time.Duration duration20 = org.joda.time.Duration.standardSeconds((-60L));
        boolean boolean21 = duration10.isEqual((org.joda.time.ReadableDuration) duration20);
        org.joda.time.ReadableInstant readableInstant22 = null;
        org.joda.time.Duration duration25 = org.joda.time.Duration.standardMinutes((-1L));
        long long26 = duration25.getStandardMinutes();
        org.joda.time.Period period27 = duration25.toPeriod();
        org.joda.time.Duration duration29 = org.joda.time.Duration.standardMinutes((-1L));
        long long30 = duration29.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant31 = null;
        org.joda.time.Period period32 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration29, readableInstant31);
        org.joda.time.PeriodType periodType33 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology34 = null;
        org.joda.time.Period period35 = duration29.toPeriod(periodType33, chronology34);
        org.joda.time.Period period36 = duration25.toPeriod(periodType33);
        org.joda.time.Duration duration38 = org.joda.time.Duration.standardMinutes((-1L));
        long long39 = duration38.getStandardMinutes();
        boolean boolean40 = duration25.isLongerThan((org.joda.time.ReadableDuration) duration38);
        org.joda.time.PeriodType periodType42 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology43 = null;
        org.joda.time.MutablePeriod mutablePeriod44 = new org.joda.time.MutablePeriod((long) '4', periodType42, chronology43);
        org.joda.time.Chronology chronology45 = null;
        org.joda.time.Period period46 = duration25.toPeriod(periodType42, chronology45);
        org.joda.time.Chronology chronology47 = null;
        org.joda.time.MutablePeriod mutablePeriod48 = new org.joda.time.MutablePeriod((long) '4', periodType42, chronology47);
        org.joda.time.PeriodType periodType49 = periodType42.withMonthsRemoved();
        org.joda.time.Period period50 = duration20.toPeriodTo(readableInstant22, periodType49);
        org.joda.time.Period period51 = new org.joda.time.Period((-6060L), 30930600000L, periodType49);
        org.joda.time.Duration duration55 = org.joda.time.Duration.millis((long) (byte) 100);
        org.joda.time.ReadableInstant readableInstant56 = null;
        org.joda.time.MutablePeriod mutablePeriod57 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration55, readableInstant56);
        mutablePeriod57.setMinutes(0);
        org.joda.time.PeriodType periodType60 = mutablePeriod57.getPeriodType();
        org.joda.time.PeriodType periodType61 = periodType60.withWeeksRemoved();
        org.joda.time.Chronology chronology62 = null;
        org.joda.time.MutablePeriod mutablePeriod63 = new org.joda.time.MutablePeriod((long) 68, (-2160L), periodType60, chronology62);
        mutablePeriod63.setMinutes(0);
        int int66 = mutablePeriod63.getMonths();
        java.lang.Object obj67 = mutablePeriod63.clone();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Period period68 = period51.withFields((org.joda.time.ReadablePeriod) mutablePeriod63);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Period does not support field 'seconds'");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + (-1L) + "'", long4 == (-1L));
        org.junit.Assert.assertNotNull(duration6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(duration20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(duration25);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + (-1L) + "'", long26 == (-1L));
        org.junit.Assert.assertNotNull(period27);
        org.junit.Assert.assertNotNull(duration29);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + (-1L) + "'", long30 == (-1L));
        org.junit.Assert.assertNotNull(periodType33);
        org.junit.Assert.assertNotNull(period35);
        org.junit.Assert.assertNotNull(period36);
        org.junit.Assert.assertNotNull(duration38);
        org.junit.Assert.assertTrue("'" + long39 + "' != '" + (-1L) + "'", long39 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(periodType42);
        org.junit.Assert.assertNotNull(period46);
        org.junit.Assert.assertNotNull(periodType49);
        org.junit.Assert.assertNotNull(period50);
        org.junit.Assert.assertNotNull(duration55);
        org.junit.Assert.assertNotNull(periodType60);
        org.junit.Assert.assertNotNull(periodType61);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 0 + "'", int66 == 0);
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertEquals(obj67.toString(), "PT-2.228S");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj67), "PT-2.228S");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj67), "PT-2.228S");
    }

    @Test
    public void test17973() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17973");
        org.joda.time.PeriodType periodType2 = org.joda.time.PeriodType.seconds();
        org.joda.time.PeriodType periodType3 = periodType2.withMinutesRemoved();
        org.joda.time.Chronology chronology4 = null;
        org.joda.time.MutablePeriod mutablePeriod5 = new org.joda.time.MutablePeriod((long) 0, (long) (short) 100, periodType2, chronology4);
        org.joda.time.Duration duration7 = org.joda.time.Duration.standardMinutes((-1L));
        long long8 = duration7.getStandardMinutes();
        org.joda.time.Duration duration10 = org.joda.time.Duration.standardMinutes((-1L));
        long long11 = duration10.getStandardMinutes();
        boolean boolean12 = duration7.isLongerThan((org.joda.time.ReadableDuration) duration10);
        org.joda.time.Period period13 = duration10.toPeriod();
        org.joda.time.Minutes minutes14 = duration10.toStandardMinutes();
        mutablePeriod5.add((org.joda.time.ReadableDuration) duration10);
        org.joda.time.Duration duration17 = duration10.withMillis((long) (short) 10);
        org.joda.time.Duration duration18 = duration17.toDuration();
        org.joda.time.Duration duration20 = duration18.plus((long) (byte) 100);
        org.joda.time.ReadableInstant readableInstant21 = null;
        org.joda.time.Duration duration23 = org.joda.time.Duration.standardMinutes((-1L));
        long long24 = duration23.getStandardMinutes();
        org.joda.time.Period period25 = duration23.toPeriod();
        org.joda.time.Duration duration27 = org.joda.time.Duration.standardMinutes((-1L));
        long long28 = duration27.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant29 = null;
        org.joda.time.Period period30 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration27, readableInstant29);
        org.joda.time.PeriodType periodType31 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology32 = null;
        org.joda.time.Period period33 = duration27.toPeriod(periodType31, chronology32);
        org.joda.time.Period period34 = duration23.toPeriod(periodType31);
        org.joda.time.Duration duration36 = org.joda.time.Duration.standardMinutes((-1L));
        long long37 = duration36.getStandardMinutes();
        boolean boolean38 = duration23.isLongerThan((org.joda.time.ReadableDuration) duration36);
        org.joda.time.Duration duration40 = org.joda.time.Duration.standardMinutes((-1L));
        long long41 = duration40.getStandardMinutes();
        org.joda.time.Duration duration43 = org.joda.time.Duration.standardMinutes((-1L));
        long long44 = duration43.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant45 = null;
        org.joda.time.Period period46 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration43, readableInstant45);
        org.joda.time.PeriodType periodType47 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology48 = null;
        org.joda.time.Period period49 = duration43.toPeriod(periodType47, chronology48);
        org.joda.time.Duration duration50 = duration43.toDuration();
        org.joda.time.Duration duration52 = duration40.withDurationAdded((org.joda.time.ReadableDuration) duration50, 100);
        int int53 = duration36.compareTo((org.joda.time.ReadableDuration) duration52);
        org.joda.time.Duration duration54 = duration36.toDuration();
        org.joda.time.Duration duration56 = org.joda.time.Duration.standardMinutes((-1L));
        long long57 = duration56.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant58 = null;
        org.joda.time.Period period59 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration56, readableInstant58);
        org.joda.time.PeriodType periodType60 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology61 = null;
        org.joda.time.Period period62 = duration56.toPeriod(periodType60, chronology61);
        org.joda.time.Duration duration65 = duration56.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.ReadableInstant readableInstant66 = null;
        org.joda.time.ReadableInstant readableInstant67 = null;
        org.joda.time.Duration duration69 = org.joda.time.Duration.standardMinutes((-1L));
        long long70 = duration69.getStandardMinutes();
        org.joda.time.Period period71 = duration69.toPeriod();
        org.joda.time.Duration duration73 = org.joda.time.Duration.standardMinutes((-1L));
        long long74 = duration73.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant75 = null;
        org.joda.time.Period period76 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration73, readableInstant75);
        org.joda.time.PeriodType periodType77 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology78 = null;
        org.joda.time.Period period79 = duration73.toPeriod(periodType77, chronology78);
        org.joda.time.Period period80 = duration69.toPeriod(periodType77);
        org.joda.time.MutablePeriod mutablePeriod81 = new org.joda.time.MutablePeriod(readableInstant66, readableInstant67, periodType77);
        org.joda.time.Chronology chronology82 = null;
        org.joda.time.Period period83 = duration56.toPeriod(periodType77, chronology82);
        org.joda.time.Period period84 = new org.joda.time.Period(readableInstant21, (org.joda.time.ReadableDuration) duration36, periodType77);
        int int85 = duration20.compareTo((org.joda.time.ReadableDuration) duration36);
        org.joda.time.ReadableInstant readableInstant86 = null;
        org.joda.time.Period period87 = duration20.toPeriodTo(readableInstant86);
        org.joda.time.ReadableInstant readableInstant88 = null;
        org.joda.time.Period period89 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration20, readableInstant88);
        int int90 = period89.getMonths();
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(periodType3);
        org.junit.Assert.assertNotNull(duration7);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + (-1L) + "'", long8 == (-1L));
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + (-1L) + "'", long11 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(period13);
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertNotNull(duration17);
        org.junit.Assert.assertNotNull(duration18);
        org.junit.Assert.assertNotNull(duration20);
        org.junit.Assert.assertNotNull(duration23);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + (-1L) + "'", long24 == (-1L));
        org.junit.Assert.assertNotNull(period25);
        org.junit.Assert.assertNotNull(duration27);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + (-1L) + "'", long28 == (-1L));
        org.junit.Assert.assertNotNull(periodType31);
        org.junit.Assert.assertNotNull(period33);
        org.junit.Assert.assertNotNull(period34);
        org.junit.Assert.assertNotNull(duration36);
        org.junit.Assert.assertTrue("'" + long37 + "' != '" + (-1L) + "'", long37 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(duration40);
        org.junit.Assert.assertTrue("'" + long41 + "' != '" + (-1L) + "'", long41 == (-1L));
        org.junit.Assert.assertNotNull(duration43);
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + (-1L) + "'", long44 == (-1L));
        org.junit.Assert.assertNotNull(periodType47);
        org.junit.Assert.assertNotNull(period49);
        org.junit.Assert.assertNotNull(duration50);
        org.junit.Assert.assertNotNull(duration52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 1 + "'", int53 == 1);
        org.junit.Assert.assertNotNull(duration54);
        org.junit.Assert.assertNotNull(duration56);
        org.junit.Assert.assertTrue("'" + long57 + "' != '" + (-1L) + "'", long57 == (-1L));
        org.junit.Assert.assertNotNull(periodType60);
        org.junit.Assert.assertNotNull(period62);
        org.junit.Assert.assertNotNull(duration65);
        org.junit.Assert.assertNotNull(duration69);
        org.junit.Assert.assertTrue("'" + long70 + "' != '" + (-1L) + "'", long70 == (-1L));
        org.junit.Assert.assertNotNull(period71);
        org.junit.Assert.assertNotNull(duration73);
        org.junit.Assert.assertTrue("'" + long74 + "' != '" + (-1L) + "'", long74 == (-1L));
        org.junit.Assert.assertNotNull(periodType77);
        org.junit.Assert.assertNotNull(period79);
        org.junit.Assert.assertNotNull(period80);
        org.junit.Assert.assertNotNull(period83);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 1 + "'", int85 == 1);
        org.junit.Assert.assertNotNull(period87);
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + 0 + "'", int90 == 0);
    }

    @Test
    public void test17974() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17974");
        org.joda.time.MutablePeriod mutablePeriod1 = new org.joda.time.MutablePeriod((long) 32);
        org.joda.time.DurationFieldType[] durationFieldTypeArray2 = mutablePeriod1.getFieldTypes();
        org.joda.time.Period period7 = new org.joda.time.Period((-23), 99, 7, (-102));
        mutablePeriod1.add((org.joda.time.ReadablePeriod) period7);
        org.junit.Assert.assertNotNull(durationFieldTypeArray2);
    }

    @Test
    public void test17975() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17975");
        org.joda.time.MutablePeriod mutablePeriod2 = new org.joda.time.MutablePeriod((long) (byte) 10, (-172800000L));
        int int3 = mutablePeriod2.getMinutes();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
    }

    @Test
    public void test17976() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17976");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((-1L));
        long long2 = duration1.getStandardMinutes();
        org.joda.time.Duration duration4 = org.joda.time.Duration.standardMinutes((-1L));
        long long5 = duration4.getStandardMinutes();
        boolean boolean6 = duration1.isLongerThan((org.joda.time.ReadableDuration) duration4);
        org.joda.time.Duration duration8 = duration4.withMillis((long) 1);
        org.joda.time.Duration duration10 = org.joda.time.Duration.standardMinutes((-1L));
        long long11 = duration10.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant12 = null;
        org.joda.time.Period period13 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration10, readableInstant12);
        org.joda.time.PeriodType periodType14 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology15 = null;
        org.joda.time.Period period16 = duration10.toPeriod(periodType14, chronology15);
        org.joda.time.Duration duration19 = duration10.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration21 = org.joda.time.Duration.standardMinutes((-1L));
        long long22 = duration21.getStandardMinutes();
        org.joda.time.Duration duration24 = org.joda.time.Duration.standardMinutes((-1L));
        long long25 = duration24.getStandardMinutes();
        boolean boolean26 = duration21.isLongerThan((org.joda.time.ReadableDuration) duration24);
        org.joda.time.Duration duration28 = duration24.withMillis((long) 1);
        boolean boolean29 = duration19.isShorterThan((org.joda.time.ReadableDuration) duration24);
        boolean boolean30 = duration4.isLongerThan((org.joda.time.ReadableDuration) duration24);
        org.joda.time.Duration duration32 = org.joda.time.Duration.standardMinutes((-1L));
        long long33 = duration32.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant34 = null;
        org.joda.time.Period period35 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration32, readableInstant34);
        org.joda.time.PeriodType periodType36 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology37 = null;
        org.joda.time.Period period38 = duration32.toPeriod(periodType36, chronology37);
        org.joda.time.Duration duration39 = duration32.toDuration();
        boolean boolean40 = duration4.isEqual((org.joda.time.ReadableDuration) duration32);
        org.joda.time.ReadableInstant readableInstant41 = null;
        org.joda.time.Duration duration43 = org.joda.time.Duration.standardMinutes((-1L));
        long long44 = duration43.getStandardMinutes();
        org.joda.time.Duration duration46 = org.joda.time.Duration.standardMinutes((-1L));
        long long47 = duration46.getStandardMinutes();
        boolean boolean48 = duration43.isLongerThan((org.joda.time.ReadableDuration) duration46);
        org.joda.time.Duration duration50 = duration46.withMillis(1L);
        org.joda.time.Period period51 = new org.joda.time.Period(readableInstant41, (org.joda.time.ReadableDuration) duration46);
        org.joda.time.Duration duration52 = duration4.plus((org.joda.time.ReadableDuration) duration46);
        org.joda.time.Duration duration54 = org.joda.time.Duration.standardMinutes((-1L));
        long long55 = duration54.getMillis();
        org.joda.time.Duration duration57 = duration4.withDurationAdded((org.joda.time.ReadableDuration) duration54, 8);
        org.joda.time.Duration duration59 = org.joda.time.Duration.standardMinutes((-1L));
        long long60 = duration59.getStandardMinutes();
        org.joda.time.Duration duration62 = org.joda.time.Duration.standardMinutes((-1L));
        long long63 = duration62.getStandardMinutes();
        boolean boolean64 = duration59.isLongerThan((org.joda.time.ReadableDuration) duration62);
        org.joda.time.Duration duration66 = duration62.withMillis((long) 1);
        org.joda.time.Duration duration68 = org.joda.time.Duration.standardMinutes((-1L));
        long long69 = duration68.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant70 = null;
        org.joda.time.Period period71 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration68, readableInstant70);
        org.joda.time.PeriodType periodType72 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology73 = null;
        org.joda.time.Period period74 = duration68.toPeriod(periodType72, chronology73);
        org.joda.time.Duration duration77 = duration68.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration79 = org.joda.time.Duration.standardMinutes((-1L));
        long long80 = duration79.getStandardMinutes();
        org.joda.time.Duration duration82 = org.joda.time.Duration.standardMinutes((-1L));
        long long83 = duration82.getStandardMinutes();
        boolean boolean84 = duration79.isLongerThan((org.joda.time.ReadableDuration) duration82);
        org.joda.time.Duration duration86 = duration82.withMillis((long) 1);
        boolean boolean87 = duration77.isShorterThan((org.joda.time.ReadableDuration) duration82);
        boolean boolean88 = duration62.isLongerThan((org.joda.time.ReadableDuration) duration82);
        org.joda.time.Duration duration90 = duration62.plus(10L);
        boolean boolean91 = duration57.isShorterThan((org.joda.time.ReadableDuration) duration62);
        org.joda.time.Duration duration93 = org.joda.time.Duration.standardMinutes((-172800000L));
        org.joda.time.Duration duration95 = duration93.withMillis(0L);
        boolean boolean96 = duration62.isShorterThan((org.joda.time.ReadableDuration) duration93);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + (-1L) + "'", long2 == (-1L));
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + (-1L) + "'", long5 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(duration8);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + (-1L) + "'", long11 == (-1L));
        org.junit.Assert.assertNotNull(periodType14);
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertNotNull(duration19);
        org.junit.Assert.assertNotNull(duration21);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + (-1L) + "'", long22 == (-1L));
        org.junit.Assert.assertNotNull(duration24);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + (-1L) + "'", long25 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(duration28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(duration32);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + (-1L) + "'", long33 == (-1L));
        org.junit.Assert.assertNotNull(periodType36);
        org.junit.Assert.assertNotNull(period38);
        org.junit.Assert.assertNotNull(duration39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(duration43);
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + (-1L) + "'", long44 == (-1L));
        org.junit.Assert.assertNotNull(duration46);
        org.junit.Assert.assertTrue("'" + long47 + "' != '" + (-1L) + "'", long47 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(duration50);
        org.junit.Assert.assertNotNull(duration52);
        org.junit.Assert.assertNotNull(duration54);
        org.junit.Assert.assertTrue("'" + long55 + "' != '" + (-60000L) + "'", long55 == (-60000L));
        org.junit.Assert.assertNotNull(duration57);
        org.junit.Assert.assertNotNull(duration59);
        org.junit.Assert.assertTrue("'" + long60 + "' != '" + (-1L) + "'", long60 == (-1L));
        org.junit.Assert.assertNotNull(duration62);
        org.junit.Assert.assertTrue("'" + long63 + "' != '" + (-1L) + "'", long63 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(duration66);
        org.junit.Assert.assertNotNull(duration68);
        org.junit.Assert.assertTrue("'" + long69 + "' != '" + (-1L) + "'", long69 == (-1L));
        org.junit.Assert.assertNotNull(periodType72);
        org.junit.Assert.assertNotNull(period74);
        org.junit.Assert.assertNotNull(duration77);
        org.junit.Assert.assertNotNull(duration79);
        org.junit.Assert.assertTrue("'" + long80 + "' != '" + (-1L) + "'", long80 == (-1L));
        org.junit.Assert.assertNotNull(duration82);
        org.junit.Assert.assertTrue("'" + long83 + "' != '" + (-1L) + "'", long83 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNotNull(duration86);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertNotNull(duration90);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
        org.junit.Assert.assertNotNull(duration93);
        org.junit.Assert.assertNotNull(duration95);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
    }

    @Test
    public void test17977() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17977");
        org.joda.time.Period period1 = org.joda.time.Period.years((int) (short) 1);
        org.joda.time.Period period3 = period1.minusMinutes((int) (short) 10);
        org.joda.time.Period period5 = period3.withWeeks((int) (byte) -1);
        org.joda.time.Period period7 = period3.plusHours((int) (short) -1);
        org.joda.time.Period period9 = period3.minusMillis(0);
        int int10 = period9.getYears();
        int int11 = period9.getYears();
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(period3);
        org.junit.Assert.assertNotNull(period5);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
    }

    @Test
    public void test17978() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17978");
        org.joda.time.MutablePeriod mutablePeriod0 = new org.joda.time.MutablePeriod();
        int int1 = mutablePeriod0.getMonths();
        org.joda.time.MutablePeriod mutablePeriod2 = mutablePeriod0.toMutablePeriod();
        int int3 = mutablePeriod2.getMinutes();
        org.joda.time.Duration duration5 = org.joda.time.Duration.standardDays((long) (short) 1);
        org.joda.time.Chronology chronology6 = null;
        mutablePeriod2.setPeriod((org.joda.time.ReadableDuration) duration5, chronology6);
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.PeriodType periodType11 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period12 = new org.joda.time.Period(10L, periodType11);
        org.joda.time.DurationFieldType durationFieldType13 = org.joda.time.DurationFieldType.weeks();
        boolean boolean14 = periodType11.isSupported(durationFieldType13);
        org.joda.time.DurationFieldType durationFieldType15 = org.joda.time.DurationFieldType.centuries();
        int int16 = periodType11.indexOf(durationFieldType15);
        org.joda.time.MutablePeriod mutablePeriod17 = new org.joda.time.MutablePeriod((long) '#', periodType11);
        org.joda.time.PeriodType periodType18 = periodType11.withWeeksRemoved();
        org.joda.time.PeriodType periodType19 = periodType18.withMonthsRemoved();
        org.joda.time.Period period20 = duration5.toPeriodTo(readableInstant8, periodType19);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(duration5);
        org.junit.Assert.assertNotNull(periodType11);
        org.junit.Assert.assertNotNull(durationFieldType13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(durationFieldType15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(periodType18);
        org.junit.Assert.assertNotNull(periodType19);
        org.junit.Assert.assertNotNull(period20);
    }

    @Test
    public void test17979() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17979");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableInstant readableInstant1 = null;
        org.joda.time.Duration duration3 = org.joda.time.Duration.standardMinutes((-1L));
        long long4 = duration3.getStandardMinutes();
        org.joda.time.Period period5 = duration3.toPeriod();
        org.joda.time.Duration duration7 = org.joda.time.Duration.standardMinutes((-1L));
        long long8 = duration7.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant9 = null;
        org.joda.time.Period period10 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration7, readableInstant9);
        org.joda.time.PeriodType periodType11 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology12 = null;
        org.joda.time.Period period13 = duration7.toPeriod(periodType11, chronology12);
        org.joda.time.Period period14 = duration3.toPeriod(periodType11);
        org.joda.time.Duration duration16 = org.joda.time.Duration.standardMinutes((-1L));
        long long17 = duration16.getStandardMinutes();
        boolean boolean18 = duration3.isLongerThan((org.joda.time.ReadableDuration) duration16);
        org.joda.time.Duration duration20 = duration16.withMillis((long) 0);
        org.joda.time.Duration duration22 = org.joda.time.Duration.standardMinutes((-1L));
        long long23 = duration22.getStandardMinutes();
        org.joda.time.Duration duration25 = org.joda.time.Duration.standardMinutes((-1L));
        long long26 = duration25.getStandardMinutes();
        boolean boolean27 = duration22.isLongerThan((org.joda.time.ReadableDuration) duration25);
        org.joda.time.Duration duration29 = duration25.withMillis((long) 1);
        org.joda.time.Chronology chronology31 = null;
        org.joda.time.MutablePeriod mutablePeriod32 = new org.joda.time.MutablePeriod(1L, chronology31);
        org.joda.time.Chronology chronology34 = null;
        org.joda.time.MutablePeriod mutablePeriod35 = new org.joda.time.MutablePeriod(1L, chronology34);
        mutablePeriod32.add((org.joda.time.ReadablePeriod) mutablePeriod35);
        boolean boolean37 = duration29.equals((java.lang.Object) mutablePeriod35);
        org.joda.time.Duration duration39 = org.joda.time.Duration.standardSeconds((-60L));
        boolean boolean40 = duration29.isEqual((org.joda.time.ReadableDuration) duration39);
        org.joda.time.Duration duration42 = org.joda.time.Duration.standardHours((long) (byte) 1);
        boolean boolean43 = duration39.isShorterThan((org.joda.time.ReadableDuration) duration42);
        boolean boolean44 = duration20.isLongerThan((org.joda.time.ReadableDuration) duration39);
        org.joda.time.Period period45 = new org.joda.time.Period(readableInstant1, (org.joda.time.ReadableDuration) duration20);
        org.joda.time.MutablePeriod mutablePeriod46 = new org.joda.time.MutablePeriod(readableInstant0, (org.joda.time.ReadableDuration) duration20);
        org.joda.time.Minutes minutes47 = duration20.toStandardMinutes();
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + (-1L) + "'", long4 == (-1L));
        org.junit.Assert.assertNotNull(period5);
        org.junit.Assert.assertNotNull(duration7);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + (-1L) + "'", long8 == (-1L));
        org.junit.Assert.assertNotNull(periodType11);
        org.junit.Assert.assertNotNull(period13);
        org.junit.Assert.assertNotNull(period14);
        org.junit.Assert.assertNotNull(duration16);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + (-1L) + "'", long17 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(duration20);
        org.junit.Assert.assertNotNull(duration22);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + (-1L) + "'", long23 == (-1L));
        org.junit.Assert.assertNotNull(duration25);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + (-1L) + "'", long26 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(duration29);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(duration39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(duration42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(minutes47);
    }

    @Test
    public void test17980() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17980");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardSeconds((long) (short) 1);
        org.joda.time.Duration duration3 = org.joda.time.Duration.standardMinutes((-1L));
        long long4 = duration3.getStandardMinutes();
        org.joda.time.PeriodType periodType5 = null;
        org.joda.time.Period period6 = duration3.toPeriod(periodType5);
        int int7 = period6.getDays();
        org.joda.time.format.PeriodFormatter periodFormatter8 = null;
        java.lang.String str9 = period6.toString(periodFormatter8);
        org.joda.time.Period period11 = period6.minusDays((int) (short) 1);
        int int12 = period11.getMillis();
        org.joda.time.Period period14 = period11.multipliedBy((int) (short) 100);
        boolean boolean15 = duration1.equals((java.lang.Object) (short) 100);
        org.joda.time.Days days16 = duration1.toStandardDays();
        org.joda.time.Duration duration18 = duration1.plus((-58180L));
        long long19 = duration1.getStandardHours();
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + (-1L) + "'", long4 == (-1L));
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "PT-1M" + "'", str9, "PT-1M");
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(period14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(days16);
        org.junit.Assert.assertNotNull(duration18);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 0L + "'", long19 == 0L);
    }

    @Test
    public void test17981() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17981");
        org.joda.time.MutablePeriod mutablePeriod1 = org.joda.time.MutablePeriod.parse("P52Y52M97W100DT32H0.001S");
        org.joda.time.PeriodType periodType3 = null;
        org.joda.time.Chronology chronology4 = null;
        org.joda.time.MutablePeriod mutablePeriod5 = new org.joda.time.MutablePeriod((long) '#', periodType3, chronology4);
        org.joda.time.Duration duration7 = org.joda.time.Duration.standardMinutes((long) '4');
        org.joda.time.Seconds seconds8 = duration7.toStandardSeconds();
        org.joda.time.Duration duration10 = org.joda.time.Duration.standardHours((long) 5);
        boolean boolean11 = duration7.isLongerThan((org.joda.time.ReadableDuration) duration10);
        org.joda.time.Duration duration12 = duration7.toDuration();
        mutablePeriod5.setPeriod((org.joda.time.ReadableDuration) duration7);
        mutablePeriod1.add((org.joda.time.ReadableDuration) duration7);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(duration7);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(duration12);
    }

    @Test
    public void test17982() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17982");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.MutablePeriod mutablePeriod3 = new org.joda.time.MutablePeriod((-60000L), 0L, chronology2);
        org.joda.time.MutablePeriod mutablePeriod5 = new org.joda.time.MutablePeriod((long) (short) 100);
        org.joda.time.Duration duration7 = org.joda.time.Duration.standardMinutes((-1L));
        long long8 = duration7.getStandardMinutes();
        org.joda.time.Duration duration10 = org.joda.time.Duration.standardMinutes((-1L));
        long long11 = duration10.getStandardMinutes();
        boolean boolean12 = duration7.isLongerThan((org.joda.time.ReadableDuration) duration10);
        org.joda.time.Duration duration14 = duration10.withMillis((long) 1);
        org.joda.time.Chronology chronology16 = null;
        org.joda.time.MutablePeriod mutablePeriod17 = new org.joda.time.MutablePeriod(1L, chronology16);
        org.joda.time.Chronology chronology19 = null;
        org.joda.time.MutablePeriod mutablePeriod20 = new org.joda.time.MutablePeriod(1L, chronology19);
        mutablePeriod17.add((org.joda.time.ReadablePeriod) mutablePeriod20);
        boolean boolean22 = duration14.equals((java.lang.Object) mutablePeriod20);
        org.joda.time.Duration duration24 = duration14.minus(0L);
        org.joda.time.Chronology chronology25 = null;
        mutablePeriod5.setPeriod((org.joda.time.ReadableDuration) duration14, chronology25);
        org.joda.time.Duration duration28 = org.joda.time.Duration.standardMinutes((-1L));
        long long29 = duration28.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant30 = null;
        org.joda.time.Period period31 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration28, readableInstant30);
        org.joda.time.Duration duration33 = org.joda.time.Duration.standardMinutes((-1L));
        long long34 = duration33.getStandardMinutes();
        org.joda.time.Period period35 = duration33.toPeriod();
        boolean boolean36 = duration28.isLongerThan((org.joda.time.ReadableDuration) duration33);
        org.joda.time.ReadableInstant readableInstant37 = null;
        org.joda.time.PeriodType periodType40 = org.joda.time.PeriodType.seconds();
        org.joda.time.PeriodType periodType41 = periodType40.withMinutesRemoved();
        org.joda.time.Chronology chronology42 = null;
        org.joda.time.MutablePeriod mutablePeriod43 = new org.joda.time.MutablePeriod((long) 0, (long) (short) 100, periodType40, chronology42);
        org.joda.time.PeriodType periodType44 = periodType40.withMillisRemoved();
        org.joda.time.Period period45 = duration28.toPeriodTo(readableInstant37, periodType44);
        org.joda.time.Duration duration46 = duration14.minus((org.joda.time.ReadableDuration) duration28);
        mutablePeriod3.setPeriod((org.joda.time.ReadableDuration) duration14);
        int int48 = mutablePeriod3.getMonths();
        org.joda.time.Duration duration50 = org.joda.time.Duration.standardSeconds(1L);
        org.joda.time.Duration duration52 = org.joda.time.Duration.standardMinutes((-1L));
        int int53 = duration50.compareTo((org.joda.time.ReadableDuration) duration52);
        org.joda.time.Chronology chronology54 = null;
        mutablePeriod3.setPeriod((org.joda.time.ReadableDuration) duration52, chronology54);
        java.lang.Object obj56 = mutablePeriod3.clone();
        mutablePeriod3.setDays((-17));
        org.junit.Assert.assertNotNull(duration7);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + (-1L) + "'", long8 == (-1L));
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + (-1L) + "'", long11 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(duration24);
        org.junit.Assert.assertNotNull(duration28);
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + (-1L) + "'", long29 == (-1L));
        org.junit.Assert.assertNotNull(duration33);
        org.junit.Assert.assertTrue("'" + long34 + "' != '" + (-1L) + "'", long34 == (-1L));
        org.junit.Assert.assertNotNull(period35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(periodType40);
        org.junit.Assert.assertNotNull(periodType41);
        org.junit.Assert.assertNotNull(periodType44);
        org.junit.Assert.assertNotNull(period45);
        org.junit.Assert.assertNotNull(duration46);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertNotNull(duration50);
        org.junit.Assert.assertNotNull(duration52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 1 + "'", int53 == 1);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertEquals(obj56.toString(), "P-17DT-1M");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj56), "P-17DT-1M");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj56), "P-17DT-1M");
    }

    @Test
    public void test17983() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17983");
        org.joda.time.Period period1 = org.joda.time.Period.minutes((int) (short) 0);
        org.joda.time.Period period3 = period1.minusDays((int) (byte) 10);
        org.joda.time.Period period5 = period3.withYears((int) (short) 10);
        org.joda.time.MutablePeriod mutablePeriod6 = period5.toMutablePeriod();
        org.joda.time.MutablePeriod mutablePeriod7 = mutablePeriod6.copy();
        org.joda.time.Duration duration10 = new org.joda.time.Duration(10L, (-59990L));
        mutablePeriod6.add((org.joda.time.ReadableDuration) duration10);
        org.joda.time.ReadableInstant readableInstant12 = null;
        org.joda.time.Duration duration14 = org.joda.time.Duration.standardMinutes((-1L));
        long long15 = duration14.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant16 = null;
        org.joda.time.Period period17 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration14, readableInstant16);
        org.joda.time.Duration duration19 = org.joda.time.Duration.standardMinutes((-1L));
        long long20 = duration19.getStandardMinutes();
        org.joda.time.Period period21 = duration19.toPeriod();
        boolean boolean22 = duration14.isLongerThan((org.joda.time.ReadableDuration) duration19);
        org.joda.time.Period period23 = duration14.toPeriod();
        org.joda.time.Duration duration25 = duration14.minus((long) (byte) 10);
        org.joda.time.Duration duration27 = duration14.plus(36000L);
        java.lang.String str28 = duration14.toString();
        org.joda.time.ReadableInstant readableInstant29 = null;
        org.joda.time.ReadableDuration readableDuration30 = null;
        org.joda.time.ReadableInstant readableInstant31 = null;
        org.joda.time.ReadableInstant readableInstant32 = null;
        org.joda.time.PeriodType periodType34 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period35 = new org.joda.time.Period(10L, periodType34);
        org.joda.time.MutablePeriod mutablePeriod36 = new org.joda.time.MutablePeriod(readableInstant31, readableInstant32, periodType34);
        org.joda.time.Duration duration38 = org.joda.time.Duration.standardMinutes((-1L));
        long long39 = duration38.getStandardMinutes();
        org.joda.time.Period period40 = duration38.toPeriod();
        org.joda.time.Duration duration42 = org.joda.time.Duration.standardMinutes((-1L));
        long long43 = duration42.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant44 = null;
        org.joda.time.Period period45 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration42, readableInstant44);
        org.joda.time.PeriodType periodType46 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology47 = null;
        org.joda.time.Period period48 = duration42.toPeriod(periodType46, chronology47);
        org.joda.time.Period period49 = duration38.toPeriod(periodType46);
        org.joda.time.Duration duration51 = org.joda.time.Duration.standardMinutes((-1L));
        long long52 = duration51.getStandardMinutes();
        boolean boolean53 = duration38.isLongerThan((org.joda.time.ReadableDuration) duration51);
        org.joda.time.PeriodType periodType55 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology56 = null;
        org.joda.time.MutablePeriod mutablePeriod57 = new org.joda.time.MutablePeriod((long) '4', periodType55, chronology56);
        org.joda.time.Chronology chronology58 = null;
        org.joda.time.Period period59 = duration38.toPeriod(periodType55, chronology58);
        org.joda.time.Period period60 = new org.joda.time.Period((java.lang.Object) mutablePeriod36, periodType55);
        org.joda.time.PeriodType periodType61 = periodType55.withDaysRemoved();
        org.joda.time.Period period62 = new org.joda.time.Period(readableInstant29, readableDuration30, periodType61);
        org.joda.time.Period period63 = new org.joda.time.Period(readableInstant12, (org.joda.time.ReadableDuration) duration14, periodType61);
        org.joda.time.Chronology chronology64 = null;
        mutablePeriod6.setPeriod((org.joda.time.ReadableDuration) duration14, chronology64);
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(period3);
        org.junit.Assert.assertNotNull(period5);
        org.junit.Assert.assertNotNull(mutablePeriod6);
        org.junit.Assert.assertNotNull(mutablePeriod7);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + (-1L) + "'", long15 == (-1L));
        org.junit.Assert.assertNotNull(duration19);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + (-1L) + "'", long20 == (-1L));
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(period23);
        org.junit.Assert.assertNotNull(duration25);
        org.junit.Assert.assertNotNull(duration27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "PT-60S" + "'", str28, "PT-60S");
        org.junit.Assert.assertNotNull(periodType34);
        org.junit.Assert.assertNotNull(duration38);
        org.junit.Assert.assertTrue("'" + long39 + "' != '" + (-1L) + "'", long39 == (-1L));
        org.junit.Assert.assertNotNull(period40);
        org.junit.Assert.assertNotNull(duration42);
        org.junit.Assert.assertTrue("'" + long43 + "' != '" + (-1L) + "'", long43 == (-1L));
        org.junit.Assert.assertNotNull(periodType46);
        org.junit.Assert.assertNotNull(period48);
        org.junit.Assert.assertNotNull(period49);
        org.junit.Assert.assertNotNull(duration51);
        org.junit.Assert.assertTrue("'" + long52 + "' != '" + (-1L) + "'", long52 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(periodType55);
        org.junit.Assert.assertNotNull(period59);
        org.junit.Assert.assertNotNull(periodType61);
    }

    @Test
    public void test17984() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17984");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.Duration duration2 = org.joda.time.Duration.standardSeconds((long) 34);
        org.joda.time.MutablePeriod mutablePeriod3 = new org.joda.time.MutablePeriod(readableInstant0, (org.joda.time.ReadableDuration) duration2);
        org.joda.time.Minutes minutes4 = duration2.toStandardMinutes();
        org.joda.time.Duration duration5 = duration2.toDuration();
        org.joda.time.PeriodType periodType8 = null;
        org.joda.time.MutablePeriod mutablePeriod9 = new org.joda.time.MutablePeriod((long) ' ', (-1L), periodType8);
        mutablePeriod9.addMinutes((int) ' ');
        mutablePeriod9.clear();
        java.lang.String str13 = mutablePeriod9.toString();
        mutablePeriod9.setYears(97);
        org.joda.time.Duration duration17 = org.joda.time.Duration.standardMinutes((-1L));
        long long18 = duration17.getStandardMinutes();
        org.joda.time.Period period19 = duration17.toPeriod();
        org.joda.time.Duration duration21 = org.joda.time.Duration.standardMinutes((-1L));
        long long22 = duration21.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant23 = null;
        org.joda.time.Period period24 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration21, readableInstant23);
        org.joda.time.PeriodType periodType25 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology26 = null;
        org.joda.time.Period period27 = duration21.toPeriod(periodType25, chronology26);
        org.joda.time.Period period28 = duration17.toPeriod(periodType25);
        org.joda.time.Duration duration30 = org.joda.time.Duration.standardMinutes((-1L));
        long long31 = duration30.getStandardMinutes();
        boolean boolean32 = duration17.isLongerThan((org.joda.time.ReadableDuration) duration30);
        org.joda.time.Duration duration34 = org.joda.time.Duration.standardMinutes((-1L));
        long long35 = duration34.getStandardMinutes();
        org.joda.time.Duration duration37 = org.joda.time.Duration.standardMinutes((-1L));
        long long38 = duration37.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant39 = null;
        org.joda.time.Period period40 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration37, readableInstant39);
        org.joda.time.PeriodType periodType41 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology42 = null;
        org.joda.time.Period period43 = duration37.toPeriod(periodType41, chronology42);
        org.joda.time.Duration duration44 = duration37.toDuration();
        org.joda.time.Duration duration46 = duration34.withDurationAdded((org.joda.time.ReadableDuration) duration44, 100);
        int int47 = duration30.compareTo((org.joda.time.ReadableDuration) duration46);
        org.joda.time.Duration duration48 = duration30.toDuration();
        org.joda.time.Period period49 = duration48.toPeriod();
        mutablePeriod9.add((org.joda.time.ReadableDuration) duration48);
        org.joda.time.Duration duration52 = duration48.withMillis((long) (-100));
        org.joda.time.Duration duration54 = org.joda.time.Duration.standardMinutes((long) (short) 10);
        boolean boolean55 = duration48.isEqual((org.joda.time.ReadableDuration) duration54);
        org.joda.time.Minutes minutes56 = duration54.toStandardMinutes();
        boolean boolean57 = duration5.isEqual((org.joda.time.ReadableDuration) duration54);
        org.junit.Assert.assertNotNull(duration2);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(duration5);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "PT0S" + "'", str13, "PT0S");
        org.junit.Assert.assertNotNull(duration17);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + (-1L) + "'", long18 == (-1L));
        org.junit.Assert.assertNotNull(period19);
        org.junit.Assert.assertNotNull(duration21);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + (-1L) + "'", long22 == (-1L));
        org.junit.Assert.assertNotNull(periodType25);
        org.junit.Assert.assertNotNull(period27);
        org.junit.Assert.assertNotNull(period28);
        org.junit.Assert.assertNotNull(duration30);
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + (-1L) + "'", long31 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(duration34);
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + (-1L) + "'", long35 == (-1L));
        org.junit.Assert.assertNotNull(duration37);
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + (-1L) + "'", long38 == (-1L));
        org.junit.Assert.assertNotNull(periodType41);
        org.junit.Assert.assertNotNull(period43);
        org.junit.Assert.assertNotNull(duration44);
        org.junit.Assert.assertNotNull(duration46);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 1 + "'", int47 == 1);
        org.junit.Assert.assertNotNull(duration48);
        org.junit.Assert.assertNotNull(period49);
        org.junit.Assert.assertNotNull(duration52);
        org.junit.Assert.assertNotNull(duration54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(minutes56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
    }

    @Test
    public void test17985() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17985");
        org.joda.time.Period period1 = org.joda.time.Period.seconds((int) '#');
        org.joda.time.Period period3 = period1.plusMinutes(10);
        org.joda.time.PeriodType periodType4 = period3.getPeriodType();
        org.joda.time.Period period6 = period3.plusMonths(0);
        org.joda.time.Minutes minutes7 = period6.toStandardMinutes();
        org.joda.time.Period period8 = period6.negated();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType10 = period6.getFieldType(92);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 92");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(period3);
        org.junit.Assert.assertNotNull(periodType4);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertNotNull(period8);
    }

    @Test
    public void test17986() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17986");
        org.joda.time.format.PeriodPrinter periodPrinter0 = null;
        org.joda.time.format.PeriodParser periodParser1 = null;
        org.joda.time.format.PeriodFormatter periodFormatter2 = new org.joda.time.format.PeriodFormatter(periodPrinter0, periodParser1);
        boolean boolean3 = periodFormatter2.isPrinter();
        org.joda.time.format.PeriodParser periodParser4 = periodFormatter2.getParser();
        java.util.Locale locale5 = null;
        org.joda.time.format.PeriodFormatter periodFormatter6 = periodFormatter2.withLocale(locale5);
        org.joda.time.PeriodType periodType7 = periodFormatter6.getParseType();
        boolean boolean8 = periodFormatter6.isPrinter();
        java.util.Locale locale9 = null;
        org.joda.time.format.PeriodFormatter periodFormatter10 = periodFormatter6.withLocale(locale9);
        org.joda.time.PeriodType periodType11 = periodFormatter10.getParseType();
        org.joda.time.format.PeriodPrinter periodPrinter12 = periodFormatter10.getPrinter();
        org.joda.time.PeriodType periodType13 = periodFormatter10.getParseType();
        org.joda.time.MutablePeriod mutablePeriod16 = new org.joda.time.MutablePeriod((long) 2, (long) (byte) 100);
        mutablePeriod16.setSeconds(2);
        int int19 = mutablePeriod16.getYears();
        int int20 = mutablePeriod16.getMillis();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str21 = periodFormatter10.print((org.joda.time.ReadablePeriod) mutablePeriod16);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Printing not supported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(periodParser4);
        org.junit.Assert.assertNotNull(periodFormatter6);
        org.junit.Assert.assertNull(periodType7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(periodFormatter10);
        org.junit.Assert.assertNull(periodType11);
        org.junit.Assert.assertNull(periodPrinter12);
        org.junit.Assert.assertNull(periodType13);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 98 + "'", int20 == 98);
    }

    @Test
    public void test17987() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17987");
        org.joda.time.format.PeriodPrinter periodPrinter0 = null;
        org.joda.time.format.PeriodParser periodParser1 = null;
        org.joda.time.format.PeriodFormatter periodFormatter2 = new org.joda.time.format.PeriodFormatter(periodPrinter0, periodParser1);
        boolean boolean3 = periodFormatter2.isPrinter();
        org.joda.time.PeriodType periodType4 = periodFormatter2.getParseType();
        java.util.Locale locale5 = periodFormatter2.getLocale();
        org.joda.time.PeriodType periodType6 = periodFormatter2.getParseType();
        org.joda.time.MutablePeriod mutablePeriod15 = new org.joda.time.MutablePeriod(34, 997, 1, (int) (byte) 10, 12, (int) (byte) -1, (int) (short) 10, (int) (short) 10);
        org.joda.time.PeriodType periodType18 = null;
        org.joda.time.Chronology chronology19 = null;
        org.joda.time.Period period20 = new org.joda.time.Period(100L, (-2L), periodType18, chronology19);
        org.joda.time.Period period22 = period20.withMonths((int) (short) -1);
        int int23 = period20.getYears();
        org.joda.time.Duration duration25 = org.joda.time.Duration.standardMinutes((-1L));
        long long26 = duration25.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant27 = null;
        org.joda.time.Period period28 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration25, readableInstant27);
        org.joda.time.PeriodType periodType29 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology30 = null;
        org.joda.time.Period period31 = duration25.toPeriod(periodType29, chronology30);
        java.lang.String str32 = period31.toString();
        org.joda.time.Period period34 = period31.plusWeeks(0);
        org.joda.time.Period period35 = period20.plus((org.joda.time.ReadablePeriod) period31);
        org.joda.time.Duration duration37 = org.joda.time.Duration.standardSeconds((long) 2);
        org.joda.time.Minutes minutes38 = duration37.toStandardMinutes();
        org.joda.time.ReadableInstant readableInstant39 = null;
        org.joda.time.Duration duration43 = org.joda.time.Duration.standardMinutes((-1L));
        long long44 = duration43.getStandardMinutes();
        org.joda.time.Period period45 = duration43.toPeriod();
        org.joda.time.Duration duration47 = org.joda.time.Duration.standardMinutes((-1L));
        long long48 = duration47.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant49 = null;
        org.joda.time.Period period50 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration47, readableInstant49);
        org.joda.time.PeriodType periodType51 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology52 = null;
        org.joda.time.Period period53 = duration47.toPeriod(periodType51, chronology52);
        org.joda.time.Period period54 = duration43.toPeriod(periodType51);
        org.joda.time.Chronology chronology55 = null;
        org.joda.time.MutablePeriod mutablePeriod56 = new org.joda.time.MutablePeriod(1L, (long) (byte) 100, periodType51, chronology55);
        org.joda.time.PeriodType periodType57 = periodType51.withMillisRemoved();
        int int58 = periodType51.size();
        org.joda.time.Period period59 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration37, readableInstant39, periodType51);
        org.joda.time.PeriodType periodType60 = org.joda.time.PeriodType.days();
        org.joda.time.PeriodType periodType61 = periodType60.withMillisRemoved();
        org.joda.time.Chronology chronology62 = null;
        org.joda.time.Period period63 = duration37.toPeriod(periodType60, chronology62);
        org.joda.time.Period period64 = period31.withPeriodType(periodType60);
        org.joda.time.Period period66 = period64.multipliedBy(97);
        mutablePeriod15.setPeriod((org.joda.time.ReadablePeriod) period66);
        mutablePeriod15.setHours((int) (short) 1);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str70 = periodFormatter2.print((org.joda.time.ReadablePeriod) mutablePeriod15);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Printing not supported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(periodType4);
        org.junit.Assert.assertNull(locale5);
        org.junit.Assert.assertNull(periodType6);
        org.junit.Assert.assertNotNull(period22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(duration25);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + (-1L) + "'", long26 == (-1L));
        org.junit.Assert.assertNotNull(periodType29);
        org.junit.Assert.assertNotNull(period31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "P0D" + "'", str32, "P0D");
        org.junit.Assert.assertNotNull(period34);
        org.junit.Assert.assertNotNull(period35);
        org.junit.Assert.assertNotNull(duration37);
        org.junit.Assert.assertNotNull(minutes38);
        org.junit.Assert.assertNotNull(duration43);
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + (-1L) + "'", long44 == (-1L));
        org.junit.Assert.assertNotNull(period45);
        org.junit.Assert.assertNotNull(duration47);
        org.junit.Assert.assertTrue("'" + long48 + "' != '" + (-1L) + "'", long48 == (-1L));
        org.junit.Assert.assertNotNull(periodType51);
        org.junit.Assert.assertNotNull(period53);
        org.junit.Assert.assertNotNull(period54);
        org.junit.Assert.assertNotNull(periodType57);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 1 + "'", int58 == 1);
        org.junit.Assert.assertNotNull(periodType60);
        org.junit.Assert.assertNotNull(periodType61);
        org.junit.Assert.assertNotNull(period63);
        org.junit.Assert.assertNotNull(period64);
        org.junit.Assert.assertNotNull(period66);
    }

    @Test
    public void test17988() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17988");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableInstant readableInstant1 = null;
        org.joda.time.Duration duration3 = org.joda.time.Duration.standardMinutes((-1L));
        long long4 = duration3.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant5 = null;
        org.joda.time.Period period6 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration3, readableInstant5);
        org.joda.time.Duration duration8 = org.joda.time.Duration.standardMinutes((-1L));
        long long9 = duration8.getStandardMinutes();
        org.joda.time.Period period10 = duration8.toPeriod();
        boolean boolean11 = duration3.isLongerThan((org.joda.time.ReadableDuration) duration8);
        org.joda.time.ReadableInstant readableInstant12 = null;
        org.joda.time.PeriodType periodType15 = org.joda.time.PeriodType.seconds();
        org.joda.time.PeriodType periodType16 = periodType15.withMinutesRemoved();
        org.joda.time.Chronology chronology17 = null;
        org.joda.time.MutablePeriod mutablePeriod18 = new org.joda.time.MutablePeriod((long) 0, (long) (short) 100, periodType15, chronology17);
        org.joda.time.PeriodType periodType19 = periodType15.withMillisRemoved();
        org.joda.time.Period period20 = duration3.toPeriodTo(readableInstant12, periodType19);
        org.joda.time.Duration duration23 = duration3.withDurationAdded(100L, 1);
        org.joda.time.ReadableInstant readableInstant24 = null;
        java.lang.Object obj27 = null;
        org.joda.time.PeriodType periodType29 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology30 = null;
        org.joda.time.MutablePeriod mutablePeriod31 = new org.joda.time.MutablePeriod((long) '4', periodType29, chronology30);
        org.joda.time.Chronology chronology32 = null;
        org.joda.time.MutablePeriod mutablePeriod33 = new org.joda.time.MutablePeriod(obj27, periodType29, chronology32);
        org.joda.time.PeriodType periodType34 = periodType29.withWeeksRemoved();
        org.joda.time.PeriodType periodType35 = periodType29.withHoursRemoved();
        org.joda.time.Period period36 = new org.joda.time.Period((long) 8, (long) 32, periodType29);
        org.joda.time.PeriodType periodType37 = periodType29.withMinutesRemoved();
        org.joda.time.PeriodType periodType38 = periodType29.withMillisRemoved();
        org.joda.time.MutablePeriod mutablePeriod39 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration3, readableInstant24, periodType38);
        org.joda.time.MutablePeriod mutablePeriod40 = new org.joda.time.MutablePeriod(readableInstant0, readableInstant1, periodType38);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + (-1L) + "'", long4 == (-1L));
        org.junit.Assert.assertNotNull(duration8);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + (-1L) + "'", long9 == (-1L));
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(periodType15);
        org.junit.Assert.assertNotNull(periodType16);
        org.junit.Assert.assertNotNull(periodType19);
        org.junit.Assert.assertNotNull(period20);
        org.junit.Assert.assertNotNull(duration23);
        org.junit.Assert.assertNotNull(periodType29);
        org.junit.Assert.assertNotNull(periodType34);
        org.junit.Assert.assertNotNull(periodType35);
        org.junit.Assert.assertNotNull(periodType37);
        org.junit.Assert.assertNotNull(periodType38);
    }

    @Test
    public void test17989() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17989");
        org.joda.time.Chronology chronology1 = null;
        org.joda.time.MutablePeriod mutablePeriod2 = new org.joda.time.MutablePeriod(1L, chronology1);
        int int3 = mutablePeriod2.getMinutes();
        org.joda.time.Chronology chronology6 = null;
        mutablePeriod2.setPeriod((-60L), (long) (byte) 10, chronology6);
        org.joda.time.ReadableInterval readableInterval8 = null;
        mutablePeriod2.setPeriod(readableInterval8);
        org.joda.time.Duration duration11 = org.joda.time.Duration.standardMinutes((-1L));
        long long12 = duration11.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant13 = null;
        org.joda.time.Period period14 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration11, readableInstant13);
        org.joda.time.PeriodType periodType15 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology16 = null;
        org.joda.time.Period period17 = duration11.toPeriod(periodType15, chronology16);
        org.joda.time.ReadableInstant readableInstant18 = null;
        org.joda.time.Period period19 = duration11.toPeriodTo(readableInstant18);
        org.joda.time.Chronology chronology20 = null;
        org.joda.time.Period period21 = duration11.toPeriod(chronology20);
        mutablePeriod2.add((org.joda.time.ReadableDuration) duration11);
        org.joda.time.Period period24 = org.joda.time.Period.hours((int) 'a');
        org.joda.time.DurationFieldType durationFieldType26 = period24.getFieldType((int) (short) 1);
        int int27 = mutablePeriod2.indexOf(durationFieldType26);
        org.joda.time.Duration duration29 = org.joda.time.Duration.standardMinutes((-1L));
        long long30 = duration29.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant31 = null;
        org.joda.time.Period period32 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration29, readableInstant31);
        org.joda.time.PeriodType periodType33 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology34 = null;
        org.joda.time.Period period35 = duration29.toPeriod(periodType33, chronology34);
        org.joda.time.Duration duration36 = duration29.toDuration();
        org.joda.time.Chronology chronology37 = null;
        org.joda.time.Period period38 = duration29.toPeriod(chronology37);
        org.joda.time.Duration duration40 = org.joda.time.Duration.standardMinutes((-1L));
        long long41 = duration40.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant42 = null;
        org.joda.time.Period period43 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration40, readableInstant42);
        org.joda.time.PeriodType periodType44 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology45 = null;
        org.joda.time.Period period46 = duration40.toPeriod(periodType44, chronology45);
        org.joda.time.Duration duration49 = duration40.withDurationAdded(0L, (int) (short) 10);
        java.lang.String str50 = duration49.toString();
        boolean boolean51 = duration29.isLongerThan((org.joda.time.ReadableDuration) duration49);
        mutablePeriod2.setPeriod((org.joda.time.ReadableDuration) duration29);
        org.joda.time.ReadableInstant readableInstant53 = null;
        org.joda.time.PeriodType periodType54 = org.joda.time.PeriodType.days();
        org.joda.time.Period period55 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration29, readableInstant53, periodType54);
        org.joda.time.ReadableInstant readableInstant56 = null;
        org.joda.time.ReadableInstant readableInstant57 = null;
        org.joda.time.PeriodType periodType62 = org.joda.time.PeriodType.seconds();
        org.joda.time.PeriodType periodType63 = periodType62.withMinutesRemoved();
        org.joda.time.Chronology chronology64 = null;
        org.joda.time.MutablePeriod mutablePeriod65 = new org.joda.time.MutablePeriod((long) 0, (long) (short) 100, periodType62, chronology64);
        org.joda.time.Chronology chronology66 = null;
        org.joda.time.Period period67 = new org.joda.time.Period((-60000L), (long) 3, periodType62, chronology66);
        java.lang.String str68 = periodType62.toString();
        org.joda.time.PeriodType periodType69 = periodType62.withSecondsRemoved();
        org.joda.time.MutablePeriod mutablePeriod70 = new org.joda.time.MutablePeriod(readableInstant56, readableInstant57, periodType62);
        org.joda.time.MutablePeriod mutablePeriod71 = new org.joda.time.MutablePeriod((java.lang.Object) duration29, periodType62);
        mutablePeriod71.setPeriod((-58500L));
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + (-1L) + "'", long12 == (-1L));
        org.junit.Assert.assertNotNull(periodType15);
        org.junit.Assert.assertNotNull(period17);
        org.junit.Assert.assertNotNull(period19);
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertNotNull(period24);
        org.junit.Assert.assertNotNull(durationFieldType26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1 + "'", int27 == 1);
        org.junit.Assert.assertNotNull(duration29);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + (-1L) + "'", long30 == (-1L));
        org.junit.Assert.assertNotNull(periodType33);
        org.junit.Assert.assertNotNull(period35);
        org.junit.Assert.assertNotNull(duration36);
        org.junit.Assert.assertNotNull(period38);
        org.junit.Assert.assertNotNull(duration40);
        org.junit.Assert.assertTrue("'" + long41 + "' != '" + (-1L) + "'", long41 == (-1L));
        org.junit.Assert.assertNotNull(periodType44);
        org.junit.Assert.assertNotNull(period46);
        org.junit.Assert.assertNotNull(duration49);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "PT-60S" + "'", str50, "PT-60S");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(periodType54);
        org.junit.Assert.assertNotNull(periodType62);
        org.junit.Assert.assertNotNull(periodType63);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "PeriodType[Seconds]" + "'", str68, "PeriodType[Seconds]");
        org.junit.Assert.assertNotNull(periodType69);
    }

    @Test
    public void test17990() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17990");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableInstant readableInstant1 = null;
        org.joda.time.Duration duration3 = org.joda.time.Duration.standardMinutes((-1L));
        long long4 = duration3.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant5 = null;
        org.joda.time.Period period6 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration3, readableInstant5);
        org.joda.time.PeriodType periodType7 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology8 = null;
        org.joda.time.Period period9 = duration3.toPeriod(periodType7, chronology8);
        org.joda.time.Duration duration12 = duration3.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Period period13 = new org.joda.time.Period(readableInstant1, (org.joda.time.ReadableDuration) duration12);
        org.joda.time.ReadableInstant readableInstant14 = null;
        org.joda.time.MutablePeriod mutablePeriod15 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration12, readableInstant14);
        org.joda.time.Duration duration17 = org.joda.time.Duration.standardMinutes((-1L));
        long long18 = duration17.getStandardMinutes();
        org.joda.time.Duration duration20 = org.joda.time.Duration.standardMinutes((-1L));
        long long21 = duration20.getStandardMinutes();
        boolean boolean22 = duration17.isLongerThan((org.joda.time.ReadableDuration) duration20);
        org.joda.time.ReadableInstant readableInstant23 = null;
        org.joda.time.Duration duration25 = org.joda.time.Duration.standardMinutes((-1L));
        long long26 = duration25.getStandardMinutes();
        org.joda.time.Period period27 = duration25.toPeriod();
        org.joda.time.Duration duration29 = org.joda.time.Duration.standardMinutes((-1L));
        long long30 = duration29.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant31 = null;
        org.joda.time.Period period32 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration29, readableInstant31);
        org.joda.time.PeriodType periodType33 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology34 = null;
        org.joda.time.Period period35 = duration29.toPeriod(periodType33, chronology34);
        org.joda.time.Period period36 = duration25.toPeriod(periodType33);
        org.joda.time.Duration duration38 = org.joda.time.Duration.standardMinutes((-1L));
        long long39 = duration38.getStandardMinutes();
        boolean boolean40 = duration25.isLongerThan((org.joda.time.ReadableDuration) duration38);
        org.joda.time.PeriodType periodType41 = org.joda.time.PeriodType.weeks();
        org.joda.time.Period period42 = new org.joda.time.Period(readableInstant23, (org.joda.time.ReadableDuration) duration38, periodType41);
        org.joda.time.Chronology chronology43 = null;
        org.joda.time.Period period44 = duration38.toPeriod(chronology43);
        org.joda.time.ReadableInstant readableInstant45 = null;
        org.joda.time.Period period46 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration38, readableInstant45);
        org.joda.time.Duration duration47 = period46.toStandardDuration();
        org.joda.time.PeriodType periodType48 = org.joda.time.PeriodType.years();
        org.joda.time.Chronology chronology49 = null;
        org.joda.time.Period period50 = duration47.toPeriod(periodType48, chronology49);
        int int51 = duration20.compareTo((org.joda.time.ReadableDuration) duration47);
        org.joda.time.Duration duration53 = duration12.withDurationAdded((org.joda.time.ReadableDuration) duration47, (int) (byte) 0);
        org.joda.time.ReadableInstant readableInstant54 = null;
        org.joda.time.ReadableInstant readableInstant55 = null;
        org.joda.time.Duration duration56 = new org.joda.time.Duration(readableInstant54, readableInstant55);
        org.joda.time.ReadableInstant readableInstant57 = null;
        org.joda.time.Period period58 = duration56.toPeriodTo(readableInstant57);
        boolean boolean59 = duration12.isLongerThan((org.joda.time.ReadableDuration) duration56);
        org.joda.time.MutablePeriod mutablePeriod60 = new org.joda.time.MutablePeriod(readableInstant0, (org.joda.time.ReadableDuration) duration56);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + (-1L) + "'", long4 == (-1L));
        org.junit.Assert.assertNotNull(periodType7);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertNotNull(duration17);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + (-1L) + "'", long18 == (-1L));
        org.junit.Assert.assertNotNull(duration20);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + (-1L) + "'", long21 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(duration25);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + (-1L) + "'", long26 == (-1L));
        org.junit.Assert.assertNotNull(period27);
        org.junit.Assert.assertNotNull(duration29);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + (-1L) + "'", long30 == (-1L));
        org.junit.Assert.assertNotNull(periodType33);
        org.junit.Assert.assertNotNull(period35);
        org.junit.Assert.assertNotNull(period36);
        org.junit.Assert.assertNotNull(duration38);
        org.junit.Assert.assertTrue("'" + long39 + "' != '" + (-1L) + "'", long39 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(periodType41);
        org.junit.Assert.assertNotNull(period44);
        org.junit.Assert.assertNotNull(duration47);
        org.junit.Assert.assertNotNull(periodType48);
        org.junit.Assert.assertNotNull(period50);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertNotNull(duration53);
        org.junit.Assert.assertNotNull(period58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
    }

    @Test
    public void test17991() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17991");
        org.joda.time.format.PeriodPrinter periodPrinter0 = null;
        org.joda.time.format.PeriodParser periodParser1 = null;
        org.joda.time.format.PeriodFormatter periodFormatter2 = new org.joda.time.format.PeriodFormatter(periodPrinter0, periodParser1);
        org.joda.time.PeriodType periodType3 = periodFormatter2.getParseType();
        boolean boolean4 = periodFormatter2.isParser();
        org.joda.time.Duration duration6 = org.joda.time.Duration.millis((long) (byte) 100);
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.MutablePeriod mutablePeriod8 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration6, readableInstant7);
        mutablePeriod8.setMinutes(0);
        org.joda.time.PeriodType periodType11 = mutablePeriod8.getPeriodType();
        org.joda.time.MutablePeriod mutablePeriod12 = mutablePeriod8.copy();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str13 = periodFormatter2.print((org.joda.time.ReadablePeriod) mutablePeriod12);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Printing not supported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(periodType3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(duration6);
        org.junit.Assert.assertNotNull(periodType11);
        org.junit.Assert.assertNotNull(mutablePeriod12);
    }

    @Test
    public void test17992() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17992");
        org.joda.time.Period period1 = org.joda.time.Period.weeks(8);
        org.joda.time.Period period3 = period1.withMinutes(1);
        org.joda.time.Period period5 = period1.minusHours(52);
        org.joda.time.Period period7 = period1.withMonths((int) 'a');
        org.joda.time.MutablePeriod mutablePeriod8 = new org.joda.time.MutablePeriod((java.lang.Object) period7);
        org.joda.time.Duration duration12 = org.joda.time.Duration.standardMinutes((-1L));
        long long13 = duration12.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant14 = null;
        org.joda.time.Period period15 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration12, readableInstant14);
        org.joda.time.Duration duration17 = org.joda.time.Duration.standardMinutes((-1L));
        long long18 = duration17.getStandardMinutes();
        org.joda.time.Period period19 = duration17.toPeriod();
        boolean boolean20 = duration12.isLongerThan((org.joda.time.ReadableDuration) duration17);
        org.joda.time.ReadableInstant readableInstant21 = null;
        org.joda.time.PeriodType periodType24 = org.joda.time.PeriodType.seconds();
        org.joda.time.PeriodType periodType25 = periodType24.withMinutesRemoved();
        org.joda.time.Chronology chronology26 = null;
        org.joda.time.MutablePeriod mutablePeriod27 = new org.joda.time.MutablePeriod((long) 0, (long) (short) 100, periodType24, chronology26);
        org.joda.time.PeriodType periodType28 = periodType24.withMillisRemoved();
        org.joda.time.Period period29 = duration12.toPeriodTo(readableInstant21, periodType28);
        org.joda.time.Chronology chronology30 = null;
        org.joda.time.Period period31 = new org.joda.time.Period((long) (short) 1, (long) 1, periodType28, chronology30);
        org.joda.time.PeriodType periodType32 = periodType28.withYearsRemoved();
        org.joda.time.PeriodType periodType33 = periodType32.withYearsRemoved();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.MutablePeriod mutablePeriod34 = new org.joda.time.MutablePeriod((java.lang.Object) period7, periodType32);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Period does not support field 'months'");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(period3);
        org.junit.Assert.assertNotNull(period5);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + (-1L) + "'", long13 == (-1L));
        org.junit.Assert.assertNotNull(duration17);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + (-1L) + "'", long18 == (-1L));
        org.junit.Assert.assertNotNull(period19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(periodType24);
        org.junit.Assert.assertNotNull(periodType25);
        org.junit.Assert.assertNotNull(periodType28);
        org.junit.Assert.assertNotNull(period29);
        org.junit.Assert.assertNotNull(periodType32);
        org.junit.Assert.assertNotNull(periodType33);
    }

    @Test
    public void test17993() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17993");
        org.joda.time.PeriodType periodType5 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period6 = new org.joda.time.Period(10L, periodType5);
        org.joda.time.PeriodType periodType7 = periodType5.withHoursRemoved();
        org.joda.time.PeriodType periodType8 = periodType7.withDaysRemoved();
        org.joda.time.Chronology chronology9 = null;
        org.joda.time.MutablePeriod mutablePeriod10 = new org.joda.time.MutablePeriod((-1L), (long) (byte) -1, periodType8, chronology9);
        org.joda.time.PeriodType periodType11 = periodType8.withHoursRemoved();
        org.joda.time.Chronology chronology12 = null;
        org.joda.time.MutablePeriod mutablePeriod13 = new org.joda.time.MutablePeriod((-17000L), (-58180L), periodType11, chronology12);
        java.lang.String str14 = periodType11.toString();
        org.junit.Assert.assertNotNull(periodType5);
        org.junit.Assert.assertNotNull(periodType7);
        org.junit.Assert.assertNotNull(periodType8);
        org.junit.Assert.assertNotNull(periodType11);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "PeriodType[Seconds]" + "'", str14, "PeriodType[Seconds]");
    }

    @Test
    public void test17994() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17994");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.Period period2 = org.joda.time.Period.seconds((int) '#');
        org.joda.time.Period period4 = period2.plusMinutes(10);
        org.joda.time.Period period6 = period2.minusSeconds((int) '4');
        org.joda.time.Period period8 = period2.plusMinutes(0);
        org.joda.time.Period period10 = period2.minusWeeks((int) (byte) 1);
        org.joda.time.Period period12 = period10.withHours(10);
        int int13 = period10.getMillis();
        org.joda.time.Duration duration14 = period10.toStandardDuration();
        org.joda.time.Period period15 = new org.joda.time.Period(readableInstant0, (org.joda.time.ReadableDuration) duration14);
        org.joda.time.Duration duration17 = duration14.withMillis((long) (-520));
        org.junit.Assert.assertNotNull(period2);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertNotNull(duration17);
    }

    @Test
    public void test17995() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17995");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardSeconds((long) (-5));
        org.junit.Assert.assertNotNull(duration1);
    }

    @Test
    public void test17996() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17996");
        org.joda.time.Period period1 = org.joda.time.Period.seconds((int) '#');
        int int2 = period1.getMillis();
        org.joda.time.Period period4 = period1.withMillis((int) '#');
        org.joda.time.DurationFieldType durationFieldType5 = org.joda.time.DurationFieldType.halfdays();
        boolean boolean6 = period1.isSupported(durationFieldType5);
        org.joda.time.Chronology chronology8 = null;
        org.joda.time.MutablePeriod mutablePeriod9 = new org.joda.time.MutablePeriod(1L, chronology8);
        org.joda.time.Period period11 = org.joda.time.Period.seconds((int) '#');
        mutablePeriod9.setPeriod((org.joda.time.ReadablePeriod) period11);
        org.joda.time.DurationFieldType durationFieldType13 = org.joda.time.DurationFieldType.years();
        java.lang.String str14 = durationFieldType13.getName();
        boolean boolean15 = mutablePeriod9.isSupported(durationFieldType13);
        int int16 = period1.get(durationFieldType13);
        org.joda.time.ReadableInstant readableInstant17 = null;
        org.joda.time.Duration duration19 = org.joda.time.Duration.standardMinutes((-1L));
        long long20 = duration19.getStandardMinutes();
        org.joda.time.Period period21 = duration19.toPeriod();
        org.joda.time.Duration duration23 = org.joda.time.Duration.standardMinutes((-1L));
        long long24 = duration23.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant25 = null;
        org.joda.time.Period period26 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration23, readableInstant25);
        org.joda.time.PeriodType periodType27 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology28 = null;
        org.joda.time.Period period29 = duration23.toPeriod(periodType27, chronology28);
        org.joda.time.Period period30 = duration19.toPeriod(periodType27);
        org.joda.time.Duration duration32 = org.joda.time.Duration.standardMinutes((-1L));
        long long33 = duration32.getStandardMinutes();
        boolean boolean34 = duration19.isLongerThan((org.joda.time.ReadableDuration) duration32);
        org.joda.time.PeriodType periodType35 = org.joda.time.PeriodType.weeks();
        org.joda.time.Period period36 = new org.joda.time.Period(readableInstant17, (org.joda.time.ReadableDuration) duration32, periodType35);
        boolean boolean37 = period1.equals((java.lang.Object) duration32);
        org.joda.time.Minutes minutes38 = duration32.toStandardMinutes();
        org.joda.time.Period period39 = minutes38.toPeriod();
        org.joda.time.Period period41 = period39.withHours(357);
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(durationFieldType5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(durationFieldType13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "years" + "'", str14, "years");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(duration19);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + (-1L) + "'", long20 == (-1L));
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertNotNull(duration23);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + (-1L) + "'", long24 == (-1L));
        org.junit.Assert.assertNotNull(periodType27);
        org.junit.Assert.assertNotNull(period29);
        org.junit.Assert.assertNotNull(period30);
        org.junit.Assert.assertNotNull(duration32);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + (-1L) + "'", long33 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(periodType35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(minutes38);
        org.junit.Assert.assertNotNull(period39);
        org.junit.Assert.assertNotNull(period41);
    }

    @Test
    public void test17997() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17997");
        org.joda.time.PeriodType periodType1 = null;
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.MutablePeriod mutablePeriod3 = new org.joda.time.MutablePeriod((long) 0, periodType1, chronology2);
        mutablePeriod3.setSeconds(997);
        mutablePeriod3.setMinutes(9);
        int int8 = mutablePeriod3.size();
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 8 + "'", int8 == 8);
    }

    @Test
    public void test17998() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17998");
        org.joda.time.Chronology chronology1 = null;
        org.joda.time.MutablePeriod mutablePeriod2 = new org.joda.time.MutablePeriod(1L, chronology1);
        org.joda.time.Period period4 = org.joda.time.Period.seconds((int) '#');
        mutablePeriod2.setPeriod((org.joda.time.ReadablePeriod) period4);
        mutablePeriod2.addMillis((int) (short) 1);
        mutablePeriod2.setDays((int) (byte) 1);
        mutablePeriod2.addSeconds(100);
        org.joda.time.Chronology chronology13 = null;
        mutablePeriod2.add(10L, chronology13);
        org.joda.time.Period period16 = org.joda.time.Period.hours((int) 'a');
        org.joda.time.DurationFieldType durationFieldType18 = period16.getFieldType((int) (short) 1);
        int int19 = mutablePeriod2.get(durationFieldType18);
        org.joda.time.Chronology chronology20 = null;
        org.joda.time.DurationField durationField21 = durationFieldType18.getField(chronology20);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertNotNull(durationFieldType18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(durationField21);
    }

    @Test
    public void test17999() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17999");
        org.joda.time.Period period1 = new org.joda.time.Period((long) (byte) -1);
        int int2 = period1.getMonths();
        org.joda.time.Duration duration4 = org.joda.time.Duration.standardMinutes((-1L));
        long long5 = duration4.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant6 = null;
        org.joda.time.Period period7 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration4, readableInstant6);
        org.joda.time.PeriodType periodType8 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology9 = null;
        org.joda.time.Period period10 = duration4.toPeriod(periodType8, chronology9);
        org.joda.time.ReadableInstant readableInstant11 = null;
        org.joda.time.Period period12 = duration4.toPeriodTo(readableInstant11);
        org.joda.time.Period period14 = period12.withDays((-90));
        org.joda.time.ReadableInstant readableInstant15 = null;
        org.joda.time.Duration duration17 = org.joda.time.Duration.standardMinutes((-1L));
        long long18 = duration17.getStandardMinutes();
        org.joda.time.Period period19 = duration17.toPeriod();
        org.joda.time.Duration duration21 = org.joda.time.Duration.standardMinutes((-1L));
        long long22 = duration21.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant23 = null;
        org.joda.time.Period period24 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration21, readableInstant23);
        org.joda.time.PeriodType periodType25 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology26 = null;
        org.joda.time.Period period27 = duration21.toPeriod(periodType25, chronology26);
        org.joda.time.Period period28 = duration17.toPeriod(periodType25);
        org.joda.time.Duration duration30 = org.joda.time.Duration.standardMinutes((-1L));
        long long31 = duration30.getStandardMinutes();
        boolean boolean32 = duration17.isLongerThan((org.joda.time.ReadableDuration) duration30);
        org.joda.time.PeriodType periodType33 = org.joda.time.PeriodType.weeks();
        org.joda.time.Period period34 = new org.joda.time.Period(readableInstant15, (org.joda.time.ReadableDuration) duration30, periodType33);
        org.joda.time.Chronology chronology35 = null;
        org.joda.time.Period period36 = duration30.toPeriod(chronology35);
        org.joda.time.ReadableInstant readableInstant37 = null;
        org.joda.time.Period period38 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration30, readableInstant37);
        org.joda.time.Duration duration39 = period38.toStandardDuration();
        org.joda.time.PeriodType periodType40 = org.joda.time.PeriodType.years();
        org.joda.time.Chronology chronology41 = null;
        org.joda.time.Period period42 = duration39.toPeriod(periodType40, chronology41);
        org.joda.time.Period period44 = org.joda.time.Period.seconds((int) '#');
        int int45 = period44.getMillis();
        org.joda.time.Period period47 = period44.withMillis((int) '#');
        org.joda.time.DurationFieldType durationFieldType48 = org.joda.time.DurationFieldType.halfdays();
        boolean boolean49 = period44.isSupported(durationFieldType48);
        org.joda.time.Chronology chronology51 = null;
        org.joda.time.MutablePeriod mutablePeriod52 = new org.joda.time.MutablePeriod(1L, chronology51);
        org.joda.time.Period period54 = org.joda.time.Period.seconds((int) '#');
        mutablePeriod52.setPeriod((org.joda.time.ReadablePeriod) period54);
        org.joda.time.DurationFieldType durationFieldType56 = org.joda.time.DurationFieldType.years();
        java.lang.String str57 = durationFieldType56.getName();
        boolean boolean58 = mutablePeriod52.isSupported(durationFieldType56);
        int int59 = period44.get(durationFieldType56);
        org.joda.time.Duration duration61 = org.joda.time.Duration.standardMinutes((-1L));
        long long62 = duration61.getStandardMinutes();
        org.joda.time.Period period63 = duration61.toPeriod();
        org.joda.time.Duration duration65 = org.joda.time.Duration.standardMinutes((-1L));
        long long66 = duration65.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant67 = null;
        org.joda.time.Period period68 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration65, readableInstant67);
        org.joda.time.PeriodType periodType69 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology70 = null;
        org.joda.time.Period period71 = duration65.toPeriod(periodType69, chronology70);
        org.joda.time.Period period72 = duration61.toPeriod(periodType69);
        org.joda.time.PeriodType periodType74 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period75 = new org.joda.time.Period(10L, periodType74);
        org.joda.time.PeriodType periodType76 = periodType74.withWeeksRemoved();
        org.joda.time.Period period77 = period72.withPeriodType(periodType76);
        org.joda.time.Period period78 = period44.normalizedStandard(periodType76);
        org.joda.time.DurationFieldType durationFieldType80 = periodType76.getFieldType(0);
        java.lang.String str81 = durationFieldType80.toString();
        boolean boolean82 = period42.isSupported(durationFieldType80);
        boolean boolean83 = period12.isSupported(durationFieldType80);
        org.joda.time.Chronology chronology84 = null;
        boolean boolean85 = durationFieldType80.isSupported(chronology84);
        boolean boolean86 = period1.isSupported(durationFieldType80);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + (-1L) + "'", long5 == (-1L));
        org.junit.Assert.assertNotNull(periodType8);
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertNotNull(period14);
        org.junit.Assert.assertNotNull(duration17);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + (-1L) + "'", long18 == (-1L));
        org.junit.Assert.assertNotNull(period19);
        org.junit.Assert.assertNotNull(duration21);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + (-1L) + "'", long22 == (-1L));
        org.junit.Assert.assertNotNull(periodType25);
        org.junit.Assert.assertNotNull(period27);
        org.junit.Assert.assertNotNull(period28);
        org.junit.Assert.assertNotNull(duration30);
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + (-1L) + "'", long31 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(periodType33);
        org.junit.Assert.assertNotNull(period36);
        org.junit.Assert.assertNotNull(duration39);
        org.junit.Assert.assertNotNull(periodType40);
        org.junit.Assert.assertNotNull(period42);
        org.junit.Assert.assertNotNull(period44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertNotNull(period47);
        org.junit.Assert.assertNotNull(durationFieldType48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(period54);
        org.junit.Assert.assertNotNull(durationFieldType56);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "years" + "'", str57, "years");
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
        org.junit.Assert.assertNotNull(duration61);
        org.junit.Assert.assertTrue("'" + long62 + "' != '" + (-1L) + "'", long62 == (-1L));
        org.junit.Assert.assertNotNull(period63);
        org.junit.Assert.assertNotNull(duration65);
        org.junit.Assert.assertTrue("'" + long66 + "' != '" + (-1L) + "'", long66 == (-1L));
        org.junit.Assert.assertNotNull(periodType69);
        org.junit.Assert.assertNotNull(period71);
        org.junit.Assert.assertNotNull(period72);
        org.junit.Assert.assertNotNull(periodType74);
        org.junit.Assert.assertNotNull(periodType76);
        org.junit.Assert.assertNotNull(period77);
        org.junit.Assert.assertNotNull(period78);
        org.junit.Assert.assertNotNull(durationFieldType80);
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "seconds" + "'", str81, "seconds");
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
    }

    @Test
    public void test18000() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test18000");
        org.joda.time.Chronology chronology1 = null;
        org.joda.time.MutablePeriod mutablePeriod2 = new org.joda.time.MutablePeriod(1L, chronology1);
        org.joda.time.Period period4 = org.joda.time.Period.seconds((int) '#');
        mutablePeriod2.setPeriod((org.joda.time.ReadablePeriod) period4);
        mutablePeriod2.addMillis((int) (short) 1);
        mutablePeriod2.setPeriod(8, (int) (byte) -1, 1, (int) (byte) 10, (int) (byte) -1, (int) (short) -1, 10, (int) (byte) -1);
        org.joda.time.PeriodType periodType17 = mutablePeriod2.getPeriodType();
        org.joda.time.DurationFieldType durationFieldType19 = mutablePeriod2.getFieldType((int) (short) 1);
        mutablePeriod2.setPeriod((long) (-90), (long) 12);
        mutablePeriod2.addDays((-32));
        mutablePeriod2.setHours((-18));
        org.joda.time.MutablePeriod mutablePeriod27 = mutablePeriod2.copy();
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(periodType17);
        org.junit.Assert.assertNotNull(durationFieldType19);
        org.junit.Assert.assertNotNull(mutablePeriod27);
    }
}

