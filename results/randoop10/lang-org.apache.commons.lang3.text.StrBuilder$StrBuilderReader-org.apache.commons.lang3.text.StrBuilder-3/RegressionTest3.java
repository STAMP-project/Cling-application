import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest3 {

    public static boolean debug = false;

    @Test
    public void test01501() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01501");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        java.lang.String str3 = strBuilder2.getNullText();
        char[] charArray5 = new char[] { 'a' };
        char[] charArray6 = strBuilder2.getChars(charArray5);
        char[] charArray11 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray12 = strBuilder2.getChars(charArray11);
        java.io.Reader reader13 = strBuilder2.asReader();
        reader13.mark(10);
        reader13.close();
        boolean boolean17 = reader13.markSupported();
        int int18 = reader13.read();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder19.deleteFirst("hi!");
        java.lang.String str22 = strBuilder21.getNullText();
        char[] charArray24 = new char[] { 'a' };
        char[] charArray25 = strBuilder21.getChars(charArray24);
        char[] charArray30 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray31 = strBuilder21.getChars(charArray30);
        java.io.Reader reader32 = strBuilder21.asReader();
        long long34 = reader32.skip((long) 59);
        char[] charArray41 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = new org.apache.commons.lang3.text.StrTokenizer(charArray41, ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher45 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = new org.apache.commons.lang3.text.StrTokenizer(charArray41, strMatcher45);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher49 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int50 = strBuilder47.indexOf(strMatcher49);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder47.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher55 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int56 = strBuilder53.indexOf(strMatcher55);
        int int57 = strBuilder47.indexOf(strMatcher55);
        char[] charArray64 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer66 = new org.apache.commons.lang3.text.StrTokenizer(charArray64, ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher68 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer69 = new org.apache.commons.lang3.text.StrTokenizer(charArray64, strMatcher68);
        org.apache.commons.lang3.text.StrMatcher strMatcher70 = strTokenizer69.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer71 = new org.apache.commons.lang3.text.StrTokenizer(charArray41, strMatcher55, strMatcher70);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer72 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray41);
        int int73 = reader32.read(charArray41);
        int int74 = reader13.read(charArray41);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer77 = new org.apache.commons.lang3.text.StrTokenizer(charArray41, 'a', '#');
        java.lang.String str78 = strTokenizer77.next();
        java.lang.String str79 = strTokenizer77.getContent();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[a]");
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(reader13);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[a]");
        org.junit.Assert.assertNotNull(charArray25);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray25), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray25), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray25), "[a]");
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray30), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray30), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray30), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray31), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray31), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray31), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(reader32);
        org.junit.Assert.assertTrue("'" + long34 + "' != '" + 0L + "'", long34 == 0L);
        org.junit.Assert.assertNotNull(charArray41);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray41), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray41), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray41), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher45);
        org.junit.Assert.assertNotNull(strMatcher49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strMatcher55);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1));
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
        org.junit.Assert.assertNotNull(charArray64);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray64), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray64), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray64), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher68);
        org.junit.Assert.assertNotNull(strMatcher70);
        org.junit.Assert.assertNotNull(strTokenizer72);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + (-1) + "'", int73 == (-1));
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + (-1) + "'", int74 == (-1));
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "4" + "'", str78, "4");
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "#4#a4#" + "'", str79, "#4#a4#");
    }

    @Test
    public void test01502() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01502");
        java.lang.String[] strArray3 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList4 = new java.util.ArrayList<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        char[] charArray12 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strTokenizer14.setDelimiterString("hi!");
        boolean boolean17 = strTokenizer14.isIgnoreEmptyTokens();
        java.lang.String str18 = strTokenizer14.next();
        int int19 = strList4.indexOf((java.lang.Object) strTokenizer14);
        java.util.ListIterator<java.lang.String> strItor21 = strList4.listIterator((int) (byte) 0);
        java.util.Iterator<java.lang.String> strItor22 = strList4.iterator();
        java.lang.String[] strArray26 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList27 = new java.util.ArrayList<java.lang.String>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList27, strArray26);
        char[] charArray35 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = new org.apache.commons.lang3.text.StrTokenizer(charArray35, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = strTokenizer37.setDelimiterString("hi!");
        boolean boolean40 = strTokenizer37.isIgnoreEmptyTokens();
        java.lang.String str41 = strTokenizer37.next();
        int int42 = strList27.indexOf((java.lang.Object) strTokenizer37);
        boolean boolean43 = strList4.addAll((java.util.Collection<java.lang.String>) strList27);
        java.util.ListIterator<java.lang.String> strItor44 = strList27.listIterator();
        boolean boolean46 = strList27.add("");
        int int47 = strList27.size();
        char[] charArray54 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = new org.apache.commons.lang3.text.StrTokenizer(charArray54, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = strTokenizer56.setDelimiterString("hi!");
        boolean boolean59 = strTokenizer56.hasNext();
        java.util.List<java.lang.String> strList60 = strTokenizer56.getTokenList();
        boolean boolean61 = strList27.removeAll((java.util.Collection<java.lang.String>) strList60);
        java.util.function.UnaryOperator<java.lang.String> strUnaryOperator62 = null;
        // The following exception was thrown during execution in test generation
        try {
            strList60.replaceAll(strUnaryOperator62);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "#4#a4#" + "'", str18, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(strItor21);
        org.junit.Assert.assertNotNull(strItor22);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "#4#a4#" + "'", str41, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(strItor44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 4 + "'", int47 == 4);
        org.junit.Assert.assertNotNull(charArray54);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray54), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray54), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray54), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(strList60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
    }

    @Test
    public void test01503() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01503");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.appendln(10L);
        int int8 = strBuilder2.indexOf("#4#a4#", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder2.appendSeparator("", 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceFirst("java.io.IOException: StrTokenizer[", "1.0java.io.IOExceptionfalse1001.0\nfalse\nfalse");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder15.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder17.clear();
        java.lang.Throwable throwable22 = null;
        java.io.IOException iOException23 = new java.io.IOException("", throwable22);
        java.io.IOException iOException24 = new java.io.IOException("#4#a4#", throwable22);
        java.io.IOException iOException25 = new java.io.IOException(throwable22);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray29 = new java.lang.Object[] { 1.0f, iOException25, false, 100, strBuilder28 };
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder18.appendWithSeparators(objArray29, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder31.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder33.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder33.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder39.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder41.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder41.appendln(10L);
        int int47 = strBuilder41.indexOf("#4#a4#", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder41.insert(1, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder38.appendln(strBuilder50);
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder51.appendln("java.io.IOException: ", (int) (short) 1, (int) (byte) 10);
        boolean boolean57 = strBuilder51.startsWith("java.io.IOException: ");
        int int60 = strBuilder51.indexOf('4', (int) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder51.insert(5, (float) ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder11.appendFixedWidthPadRight((java.lang.Object) ' ', (int) '4', '0');
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(objArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray29), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray29), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-1) + "'", int60 == (-1));
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strBuilder66);
    }

    @Test
    public void test01504() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01504");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("1false0\n");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = strTokenizer1.setDelimiterString("java.io.IOException: StrTokenizer[");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str4 = strTokenizer3.previous();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strTokenizer1);
        org.junit.Assert.assertNotNull(strTokenizer3);
    }

    @Test
    public void test01505() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01505");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder18.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder18.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder18.append(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder18.appendln(100.0d);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder28.deleteAll("1.0java.io.IOExceptionfalse1001.0\n35.0\n");
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder30.appendln("StrTokenizer[not tokenized yet]", 30, 52);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: length must be valid");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
    }

    @Test
    public void test01506() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01506");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder(59);
    }

    @Test
    public void test01507() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01507");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer0 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance();
        int int1 = strTokenizer0.previousIndex();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance();
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = strTokenizer2.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = strTokenizer0.setQuoteMatcher(strMatcher3);
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer4.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: remove() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strTokenizer0);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-1) + "'", int1 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer2);
        org.junit.Assert.assertNotNull(strMatcher3);
        org.junit.Assert.assertNotNull(strTokenizer4);
    }

    @Test
    public void test01508() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01508");
        char[] charArray6 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = new org.apache.commons.lang3.text.StrTokenizer(charArray6);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = strTokenizer9.setDelimiterChar('a');
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = strTokenizer11.getTrimmerMatcher();
        int int13 = strTokenizer11.size();
        java.lang.String str14 = strTokenizer11.next();
        java.lang.String str15 = strTokenizer11.previous();
        java.util.List<java.lang.String> strList16 = strTokenizer11.getTokenList();
        // The following exception was thrown during execution in test generation
        try {
            strList16.add(46, "1false0\n\n#");
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 46, Size: 2");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer11);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2 + "'", int13 == 2);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "#4#" + "'", str14, "#4#");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "#4#" + "'", str15, "#4#");
        org.junit.Assert.assertNotNull(strList16);
    }

    @Test
    public void test01509() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01509");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("", '1', '1');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = new org.apache.commons.lang3.text.StrTokenizer(" ", ".0jav");
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = strTokenizer6.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer3.setTrimmerMatcher(strMatcher7);
        int int9 = strTokenizer8.nextIndex();
        org.junit.Assert.assertNotNull(strMatcher7);
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
    }

    @Test
    public void test01510() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01510");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder18.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder24.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder26.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.appendln(10L);
        int int32 = strBuilder26.indexOf("#4#a4#", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder26.insert(1, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder23.appendln(strBuilder35);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder36.appendSeparator('#', ' ');
        java.lang.String str41 = strBuilder36.substring(37);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder36.insert(100, ".IOExceptionfalse1001.0\n35.0\n1false0\n\n32");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 100");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "0\n1false0\n\n#" + "'", str41, "0\n1false0\n\n#");
    }

    @Test
    public void test01511() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01511");
        char[] charArray7 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = new org.apache.commons.lang3.text.StrTokenizer(charArray7, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = strTokenizer9.setDelimiterString("hi!");
        java.lang.String str12 = strTokenizer11.nextToken();
        java.util.List<java.lang.String> strList13 = strTokenizer11.getTokenList();
        boolean boolean15 = strList13.add("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("");
        java.lang.String str18 = strTokenizer17.getContent();
        boolean boolean19 = strList13.equals((java.lang.Object) strTokenizer17);
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = org.apache.commons.lang3.text.StrMatcher.singleQuoteMatcher();
        boolean boolean21 = strList13.equals((java.lang.Object) strMatcher20);
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer("0\nzinekoTrtSeslaf ", strMatcher20, strMatcher22);
        char[] charArray30 = new char[] { 'a', '4', 'a', 'a', '#', ' ' };
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int34 = strBuilder31.indexOf(strMatcher33);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder31.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int40 = strBuilder37.indexOf(strMatcher39);
        int int41 = strBuilder31.indexOf(strMatcher39);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = new org.apache.commons.lang3.text.StrTokenizer(charArray30, strMatcher39);
        char[] charArray49 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = new org.apache.commons.lang3.text.StrTokenizer(charArray49, ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = new org.apache.commons.lang3.text.StrTokenizer(charArray49, strMatcher53);
        org.apache.commons.lang3.text.StrMatcher strMatcher55 = strTokenizer54.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher56 = strTokenizer54.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = strTokenizer42.setIgnoredMatcher(strMatcher56);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = strTokenizer23.setIgnoredMatcher(strMatcher56);
        int int59 = strTokenizer58.nextIndex();
        org.junit.Assert.assertNotNull(charArray7);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray7), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray7), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray7), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "#4#a4#" + "'", str12, "#4#a4#");
        org.junit.Assert.assertNotNull(strList13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(strTokenizer17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(strMatcher20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray30), "a4aa# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray30), "a4aa# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray30), "[a, 4, a, a, #,  ]");
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strMatcher39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertNotNull(charArray49);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray49), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray49), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray49), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher53);
        org.junit.Assert.assertNotNull(strMatcher55);
        org.junit.Assert.assertNotNull(strMatcher56);
        org.junit.Assert.assertNotNull(strTokenizer57);
        org.junit.Assert.assertNotNull(strTokenizer58);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
    }

    @Test
    public void test01512() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01512");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder18.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder18.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder18.replaceFirst('#', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder27.appendNull();
        java.io.Reader reader29 = strBuilder28.asReader();
        int int30 = reader29.read();
        long long32 = reader29.skip((long) (short) -1);
        reader29.close();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(reader29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 49 + "'", int30 == 49);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + 0L + "'", long32 == 0L);
    }

    @Test
    public void test01513() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01513");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        java.lang.String str4 = strBuilder2.leftString(32);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteFirst("hi!");
        java.lang.String str8 = strBuilder7.getNullText();
        char[] charArray10 = new char[] { 'a' };
        char[] charArray11 = strBuilder7.getChars(charArray10);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder2.append((java.lang.Object) strBuilder7);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder2.replaceAll('#', ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = org.apache.commons.lang3.text.StrMatcher.splitMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder16.deleteAll(strMatcher19);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder16.append((double) 59);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder25.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder25.insert(0, (double) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder29.appendFixedWidthPadRight((java.lang.Object) 100.0d, 1, '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder33.trim();
        java.lang.Object[] objArray35 = new java.lang.Object[] {};
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder33.appendAll(objArray35);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder22.appendAll(objArray35);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder2.appendWithSeparators(objArray35, "1.0java.io.IOExceptionfalse1001.0\nfalse\nfalse");
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder39.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder40.appendNewLine();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[a]");
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(objArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray35), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray35), "[]");
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder41);
    }

    @Test
    public void test01514() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01514");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        java.lang.String str3 = strBuilder2.getNullText();
        char[] charArray5 = new char[] { 'a' };
        char[] charArray6 = strBuilder2.getChars(charArray5);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray5, ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray5);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder10.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder12.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder12.appendln(10L);
        int int18 = strBuilder12.indexOf("#4#a4#", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder12.appendSeparator("", 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder21.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int27 = strBuilder24.indexOf(strMatcher26);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder24.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder29.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder29.appendln((int) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder29.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int39 = strBuilder36.indexOf(strMatcher38);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder35.deleteFirst(strMatcher38);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int44 = strBuilder41.indexOf(strMatcher43);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder41.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder46.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder48.deleteFirst('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder48.append('4');
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = org.apache.commons.lang3.text.StrMatcher.quoteMatcher();
        int int55 = strBuilder52.lastIndexOf(strMatcher53, (int) (short) -1);
        int int56 = strBuilder40.indexOf(strMatcher53);
        boolean boolean57 = strBuilder23.contains(strMatcher53);
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder58.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder60.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder60.appendln(10L);
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder63.deleteFirst("");
        char[] charArray66 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder65.appendln(charArray66);
        boolean boolean68 = strBuilder65.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder70.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder72.clear();
        boolean boolean74 = strBuilder73.isEmpty();
        org.apache.commons.lang3.text.StrMatcher strMatcher76 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder77.deleteFirst("hi!");
        java.lang.String str80 = strBuilder79.getNullText();
        char[] charArray82 = new char[] { 'a' };
        char[] charArray83 = strBuilder79.getChars(charArray82);
        int int85 = strMatcher76.isMatch(charArray83, 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder86 = strBuilder73.append(charArray83);
        org.apache.commons.lang3.text.StrBuilder strBuilder87 = strBuilder65.insert((int) (byte) 1, charArray83);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer89 = new org.apache.commons.lang3.text.StrTokenizer(charArray83, "StrTokenizer[#4#a4#]");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer91 = strTokenizer89.setDelimiterChar('a');
        int int92 = strTokenizer89.nextIndex();
        org.apache.commons.lang3.text.StrMatcher strMatcher93 = strTokenizer89.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer94 = new org.apache.commons.lang3.text.StrTokenizer(charArray5, strMatcher53, strMatcher93);
        boolean boolean95 = strTokenizer94.hasNext();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[a]");
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[a]");
        org.junit.Assert.assertNotNull(strMatcher9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strMatcher38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strMatcher43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strMatcher53);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1));
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1));
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(strMatcher76);
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertNull(str80);
        org.junit.Assert.assertNotNull(charArray82);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray82), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray82), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray82), "[a]");
        org.junit.Assert.assertNotNull(charArray83);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray83), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray83), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray83), "[a]");
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 0 + "'", int85 == 0);
        org.junit.Assert.assertNotNull(strBuilder86);
        org.junit.Assert.assertNotNull(strBuilder87);
        org.junit.Assert.assertNotNull(strTokenizer91);
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + 0 + "'", int92 == 0);
        org.junit.Assert.assertNotNull(strMatcher93);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + true + "'", boolean95 == true);
    }

    @Test
    public void test01515() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01515");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        java.lang.String str3 = strBuilder2.getNullText();
        char[] charArray5 = new char[] { 'a' };
        char[] charArray6 = strBuilder2.getChars(charArray5);
        char[] charArray11 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray12 = strBuilder2.getChars(charArray11);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder2.insert((int) (byte) 100, false);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 100");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[a]");
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[a, 4,  , 4]");
    }

    @Test
    public void test01516() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01516");
        char[] charArray6 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer8.setDelimiterString("hi!");
        java.lang.String str11 = strTokenizer10.nextToken();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = strTokenizer10.setIgnoredChar('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = strTokenizer13.reset("#4#a4#");
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = strTokenizer15.getTrimmerMatcher();
        boolean boolean17 = strTokenizer15.hasNext();
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "#4#a4#" + "'", str11, "#4#a4#");
        org.junit.Assert.assertNotNull(strTokenizer13);
        org.junit.Assert.assertNotNull(strTokenizer15);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
    }

    @Test
    public void test01517() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01517");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.setLength((int) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder18.deleteFirst("0java.io.IOExceptionfalse100");
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder22.trim();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder24.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder26.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder27.append(false);
        java.lang.String str30 = strBuilder29.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int34 = strBuilder31.indexOf(strMatcher33);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder31.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder36.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder36.appendln((int) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder36.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher45 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int46 = strBuilder43.indexOf(strMatcher45);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder42.deleteFirst(strMatcher45);
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder47.minimizeCapacity();
        char[] charArray55 = new char[] { 'a', '4', 'a', 'a', '#', ' ' };
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher58 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int59 = strBuilder56.indexOf(strMatcher58);
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder56.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher64 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int65 = strBuilder62.indexOf(strMatcher64);
        int int66 = strBuilder56.indexOf(strMatcher64);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer67 = new org.apache.commons.lang3.text.StrTokenizer(charArray55, strMatcher64);
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder47.replace(strMatcher64, "", 2, (int) (short) 100, 10);
        char[] charArray75 = strBuilder47.toCharArray((int) (byte) 0, (int) (byte) 0);
        org.apache.commons.lang3.text.StrMatcher strMatcher76 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder77.deleteFirst("hi!");
        java.lang.String str80 = strBuilder79.getNullText();
        char[] charArray82 = new char[] { 'a' };
        char[] charArray83 = strBuilder79.getChars(charArray82);
        int int87 = strMatcher76.isMatch(charArray83, 0, 0, (int) (byte) 10);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer88 = new org.apache.commons.lang3.text.StrTokenizer(charArray75, strMatcher76);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer89 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray75);
        org.apache.commons.lang3.text.StrBuilder strBuilder90 = strBuilder29.append(charArray75);
        org.apache.commons.lang3.text.StrBuilder strBuilder92 = strBuilder29.append(100);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder95 = strBuilder23.append((java.lang.CharSequence) strBuilder29, 19, (int) '1');
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: startIndex must be valid");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strMatcher45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(charArray55);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray55), "a4aa# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray55), "a4aa# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray55), "[a, 4, a, a, #,  ]");
        org.junit.Assert.assertNotNull(strMatcher58);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-1) + "'", int59 == (-1));
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strMatcher64);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + (-1) + "'", int65 == (-1));
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + (-1) + "'", int66 == (-1));
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(charArray75);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray75), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray75), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray75), "[]");
        org.junit.Assert.assertNotNull(strMatcher76);
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertNull(str80);
        org.junit.Assert.assertNotNull(charArray82);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray82), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray82), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray82), "[a]");
        org.junit.Assert.assertNotNull(charArray83);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray83), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray83), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray83), "[a]");
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 0 + "'", int87 == 0);
        org.junit.Assert.assertNotNull(strTokenizer89);
        org.junit.Assert.assertNotNull(strBuilder90);
        org.junit.Assert.assertNotNull(strBuilder92);
    }

    @Test
    public void test01518() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01518");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.appendln((int) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder5.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int15 = strBuilder12.indexOf(strMatcher14);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder11.deleteFirst(strMatcher14);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder11.appendSeparator("true\n", "");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = strBuilder11.asTokenizer();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder11.delete((int) '1', 0);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: end < start");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strTokenizer20);
    }

    @Test
    public void test01519() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01519");
        char[] charArray6 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer8.setDelimiterString("hi!");
        boolean boolean11 = strTokenizer8.isIgnoreEmptyTokens();
        int int12 = strTokenizer8.nextIndex();
        int int13 = strTokenizer8.nextIndex();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = strTokenizer8.setIgnoreEmptyTokens(false);
        int int16 = strTokenizer8.previousIndex();
        java.lang.String str17 = strTokenizer8.getContent();
        boolean boolean18 = strTokenizer8.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = strTokenizer8.reset();
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer19.set("");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: set() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(strTokenizer15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "#4#a4#" + "'", str17, "#4#a4#");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(strTokenizer19);
    }

    @Test
    public void test01520() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01520");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.append(false);
        char[] charArray16 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer(charArray16, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = strTokenizer18.setDelimiterString("hi!");
        boolean boolean21 = strTokenizer18.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder5.appendFixedWidthPadRight((java.lang.Object) strTokenizer18, 10, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int28 = strBuilder25.indexOf(strMatcher27);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder25.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder30.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder30.appendln((int) (short) 10);
        boolean boolean35 = strBuilder5.equalsIgnoreCase(strBuilder30);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder30.insert((int) (byte) 1, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder38.appendln(false);
        char[] charArray47 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = new org.apache.commons.lang3.text.StrTokenizer(charArray47, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = strTokenizer49.setDelimiterString("hi!");
        java.lang.String str52 = strTokenizer51.nextToken();
        java.util.List<java.lang.String> strList53 = strTokenizer51.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder54.deleteFirst("hi!");
        java.lang.String str57 = strBuilder56.getNullText();
        char[] charArray59 = new char[] { 'a' };
        char[] charArray60 = strBuilder56.getChars(charArray59);
        char[] charArray65 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray66 = strBuilder56.getChars(charArray65);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer67 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray66);
        int int68 = strList53.indexOf((java.lang.Object) charArray66);
        char[] charArray69 = strBuilder40.getChars(charArray66);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer71 = new org.apache.commons.lang3.text.StrTokenizer(charArray66, "1false0\nfalse");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str72 = strTokenizer71.previous();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(charArray47);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray47), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray47), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray47), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer51);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "#4#a4#" + "'", str52, "#4#a4#");
        org.junit.Assert.assertNotNull(strList53);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNull(str57);
        org.junit.Assert.assertNotNull(charArray59);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray59), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray59), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray59), "[a]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[a]");
        org.junit.Assert.assertNotNull(charArray65);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray65), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray65), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray65), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray66);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray66), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray66), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray66), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(strTokenizer67);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + (-1) + "'", int68 == (-1));
        org.junit.Assert.assertNotNull(charArray69);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray69), " a10\nfalse\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray69), " a10\nfalse\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray69), "[ , a, 1, 0, \n, f, a, l, s, e, \n]");
    }

    @Test
    public void test01521() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01521");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.appendln(10L);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteFirst("");
        int int9 = strBuilder5.indexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder5.appendSeparator("java.io.IOException: ", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder12.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder13.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.ensureCapacity(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder16.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder16.appendln((int) (short) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder19.appendln((int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder21.appendSeparator("a10\n", (int) (short) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder25.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder27.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder28.append(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder28.deleteFirst('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder32.append((long) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher37 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int38 = strBuilder35.indexOf(strMatcher37);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder35.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder40.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder40.appendln((int) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder40.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher49 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int50 = strBuilder47.indexOf(strMatcher49);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder46.deleteFirst(strMatcher49);
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder32.replaceAll(strMatcher49, "1false0\nfalse");
        int int54 = strBuilder21.lastIndexOf(strMatcher49);
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder55.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder57.clear();
        boolean boolean59 = strBuilder58.isEmpty();
        org.apache.commons.lang3.text.StrMatcher strMatcher61 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder62.deleteFirst("hi!");
        java.lang.String str65 = strBuilder64.getNullText();
        char[] charArray67 = new char[] { 'a' };
        char[] charArray68 = strBuilder64.getChars(charArray67);
        int int70 = strMatcher61.isMatch(charArray68, 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder58.append(charArray68);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer73 = new org.apache.commons.lang3.text.StrTokenizer(charArray68, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer74 = new org.apache.commons.lang3.text.StrTokenizer(charArray68);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer75 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray68);
        // The following exception was thrown during execution in test generation
        try {
            int int77 = strMatcher49.isMatch(charArray68, 46);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 46");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strMatcher37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strMatcher49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 15 + "'", int54 == 15);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(strMatcher61);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNull(str65);
        org.junit.Assert.assertNotNull(charArray67);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray67), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray67), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray67), "[a]");
        org.junit.Assert.assertNotNull(charArray68);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray68), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray68), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray68), "[a]");
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 0 + "'", int70 == 0);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(strTokenizer75);
    }

    @Test
    public void test01522() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01522");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("");
        java.lang.String str2 = strTokenizer1.getContent();
        char[] charArray8 = new char[] { 'a', 'a', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = new org.apache.commons.lang3.text.StrTokenizer(charArray8);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer1.reset(charArray8);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = new org.apache.commons.lang3.text.StrTokenizer(charArray8, "a");
        java.lang.String[] strArray13 = strTokenizer12.getTokenArray();
        int int14 = strTokenizer12.nextIndex();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder15.deleteFirst("hi!");
        java.lang.String str18 = strBuilder17.getNullText();
        char[] charArray20 = new char[] { 'a' };
        char[] charArray21 = strBuilder17.getChars(charArray20);
        char[] charArray26 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray27 = strBuilder17.getChars(charArray26);
        java.io.Reader reader28 = strBuilder17.asReader();
        reader28.mark(10);
        reader28.close();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder32.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder34.clear();
        char[] charArray41 = new char[] { 'a', 'a', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = new org.apache.commons.lang3.text.StrTokenizer(charArray41);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder34.appendln(charArray41);
        int int44 = reader28.read(charArray41);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = new org.apache.commons.lang3.text.StrTokenizer(charArray41, ' ', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = new org.apache.commons.lang3.text.StrTokenizer(charArray41);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = strTokenizer12.reset(charArray41);
        java.lang.String str50 = strTokenizer12.next();
        org.junit.Assert.assertNotNull(strTokenizer1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "" + "'", str2, "");
        org.junit.Assert.assertNotNull(charArray8);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray8), "aa4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray8), "aa4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray8), "[a, a, 4, #, 4]");
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray20), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray20), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray20), "[a]");
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray21), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray21), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray21), "[a]");
        org.junit.Assert.assertNotNull(charArray26);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray26), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray26), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray26), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray27);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray27), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray27), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray27), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(reader28);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(charArray41);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray41), "aa4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray41), "aa4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray41), "[a, a, 4, #, 4]");
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer49);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "4#4" + "'", str50, "4#4");
    }

    @Test
    public void test01523() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01523");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.appendln((int) (short) 10);
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.spaceMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder5.replace(strMatcher10, "StrTokenizer[#4#a4#]", (int) (short) 1, 1, (int) (byte) 10);
        java.util.stream.IntStream intStream16 = strBuilder5.codePoints();
        boolean boolean17 = strBuilder5.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder5.append(0.0d);
        int int22 = strBuilder5.indexOf('\000', (int) (short) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder25.clear();
        java.lang.Throwable throwable30 = null;
        java.io.IOException iOException31 = new java.io.IOException("", throwable30);
        java.io.IOException iOException32 = new java.io.IOException("#4#a4#", throwable30);
        java.io.IOException iOException33 = new java.io.IOException(throwable30);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray37 = new java.lang.Object[] { 1.0f, iOException33, false, 100, strBuilder36 };
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder26.appendWithSeparators(objArray37, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder39.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder41.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder41.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder46.append((double) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder48.append((long) 2);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder48.deleteAll("35\n");
        int int54 = strBuilder48.indexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder48.insert(16, (double) 48);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder5.append((java.lang.CharSequence) strBuilder57, 18, (int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: length must be valid");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(intStream16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(objArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray37), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray37), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
        org.junit.Assert.assertNotNull(strBuilder57);
    }

    @Test
    public void test01524() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01524");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder18.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder24.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder26.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.appendln(10L);
        int int32 = strBuilder26.indexOf("#4#a4#", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder26.insert(1, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder23.appendln(strBuilder35);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder36.ensureCapacity(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher41 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int42 = strBuilder39.indexOf(strMatcher41);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder39.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder44.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder44.appendln((int) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder44.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int54 = strBuilder51.indexOf(strMatcher53);
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder50.deleteFirst(strMatcher53);
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder36.appendln(strBuilder55);
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder55.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder55.minimizeCapacity();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder58.insert(13, (double) (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 13");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strMatcher41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strMatcher53);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder58);
    }

    @Test
    public void test01525() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01525");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        java.lang.String str4 = strBuilder2.leftString(32);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteFirst("hi!");
        java.lang.String str8 = strBuilder7.getNullText();
        char[] charArray10 = new char[] { 'a' };
        char[] charArray11 = strBuilder7.getChars(charArray10);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder2.append((java.lang.Object) strBuilder7);
        int int14 = strBuilder12.indexOf(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder12.appendSeparator(' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = strBuilder12.asTokenizer();
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer17.set("0\n");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: set() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[a]");
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strTokenizer17);
    }

    @Test
    public void test01526() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01526");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder2.insert(0, (double) (byte) 100);
        java.io.Reader reader7 = strBuilder6.asReader();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str10 = strBuilder6.substring((int) '.', 66);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: end < start");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(reader7);
    }

    @Test
    public void test01527() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01527");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder2.insert(0, (double) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder6.appendFixedWidthPadRight((java.lang.Object) 100.0d, 1, '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder10.append(2);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder12.append(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder12.appendFixedWidthPadRight(10, 48, '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int22 = strBuilder19.indexOf(strMatcher21);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder19.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder24.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder26.deleteFirst('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher31 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int32 = strBuilder29.indexOf(strMatcher31);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder29.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder34.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder36.deleteFirst('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder28.appendln(strBuilder36);
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = org.apache.commons.lang3.text.StrMatcher.doubleQuoteMatcher();
        int int42 = strBuilder28.lastIndexOf(strMatcher40, (int) 'a');
        char[] charArray50 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = new org.apache.commons.lang3.text.StrTokenizer(charArray50, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = new org.apache.commons.lang3.text.StrTokenizer(charArray50);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = strTokenizer53.setDelimiterChar('a');
        org.apache.commons.lang3.text.StrMatcher strMatcher56 = strTokenizer55.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer59 = new org.apache.commons.lang3.text.StrTokenizer("", "#4#a4#");
        org.apache.commons.lang3.text.StrMatcher strMatcher60 = strTokenizer59.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer61 = new org.apache.commons.lang3.text.StrTokenizer("0java.io.IOExceptionfalse100", strMatcher56, strMatcher60);
        int int62 = strBuilder28.indexOf(strMatcher60);
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder12.append((java.lang.CharSequence) strBuilder28);
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder28.deleteAll("java.io.IOException: StrTokenizer[not tokenized yet]");
        java.io.Reader reader66 = strBuilder65.asReader();
        // The following exception was thrown during execution in test generation
        try {
            char[] charArray69 = strBuilder65.toCharArray(39, (int) '\000');
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: end < start");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strMatcher31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strMatcher40);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertNotNull(charArray50);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray50), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray50), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray50), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer55);
        org.junit.Assert.assertNotNull(strMatcher56);
        org.junit.Assert.assertNotNull(strMatcher60);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + (-1) + "'", int62 == (-1));
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(reader66);
    }

    @Test
    public void test01528() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01528");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder3.append(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder3.deleteFirst('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder7.append((long) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder9.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder10.trim();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.append(15);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder11.append('0');
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder11.appendSeparator('\000', '\000');
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder18.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder20.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder22.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.append(false);
        java.lang.String str26 = strBuilder25.getNewLineText();
        java.io.Writer writer27 = strBuilder25.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder18.append((java.lang.Object) writer27);
        boolean boolean30 = strBuilder18.startsWith("1false0\nfalse");
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(writer27);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
    }

    @Test
    public void test01529() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01529");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.appendln((int) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder5.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder12.deleteFirst("hi!");
        java.lang.String str15 = strBuilder14.getNullText();
        char[] charArray17 = new char[] { 'a' };
        char[] charArray18 = strBuilder14.getChars(charArray17);
        char[] charArray23 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray24 = strBuilder14.getChars(charArray23);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder25.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder27.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder27.insert(0, (double) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder31.appendFixedWidthPadRight((java.lang.Object) 100.0d, 1, '4');
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        int int38 = strBuilder35.lastIndexOf(strMatcher36, (int) (short) 10);
        boolean boolean39 = strBuilder14.contains(strMatcher36);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder5.appendln(strBuilder14);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder14.appendSeparator("", 48);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder14.replaceAll('1', 'a');
        int int48 = strBuilder46.indexOf('I');
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray17), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray17), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray17), "[a]");
        org.junit.Assert.assertNotNull(charArray18);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray18), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray18), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray18), "[a]");
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strMatcher36);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
    }

    @Test
    public void test01530() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01530");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder18.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder24.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder26.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.appendln(10L);
        int int32 = strBuilder26.indexOf("#4#a4#", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder26.insert(1, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder23.appendln(strBuilder35);
        java.io.Writer writer37 = strBuilder36.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder38.deleteFirst("hi!");
        java.lang.String str41 = strBuilder40.getNullText();
        char[] charArray43 = new char[] { 'a' };
        char[] charArray44 = strBuilder40.getChars(charArray43);
        char[] charArray49 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray50 = strBuilder40.getChars(charArray49);
        writer37.write(charArray49);
        writer37.close();
        java.io.Writer writer54 = writer37.append('4');
        writer54.write((int) (short) 0);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(writer37);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNotNull(charArray43);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray43), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray43), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray43), "[a]");
        org.junit.Assert.assertNotNull(charArray44);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray44), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray44), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray44), "[a]");
        org.junit.Assert.assertNotNull(charArray49);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray49), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray49), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray49), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray50);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray50), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray50), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray50), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(writer54);
    }

    @Test
    public void test01531() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01531");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.append(false);
        int int11 = strBuilder9.lastIndexOf('#');
        java.lang.String str12 = strBuilder9.getNullText();
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNull(str12);
    }

    @Test
    public void test01532() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01532");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = new org.apache.commons.lang3.text.StrTokenizer("hi!");
        java.lang.String str2 = strTokenizer1.previousToken();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = strTokenizer1.setQuoteChar(' ');
        java.lang.Object obj5 = strTokenizer4.clone();
        java.lang.String str6 = strTokenizer4.next();
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNotNull(strTokenizer4);
        org.junit.Assert.assertNotNull(obj5);
        org.junit.Assert.assertEquals(obj5.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj5), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj5), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
    }

    @Test
    public void test01533() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01533");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher8 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int9 = strBuilder6.indexOf(strMatcher8);
        int int10 = strBuilder0.indexOf(strMatcher8);
        char[] charArray11 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int15 = strMatcher8.isMatch(charArray11, (int) 'I', 10, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strMatcher8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
    }

    @Test
    public void test01534() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01534");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        java.lang.String str3 = strBuilder2.getNullText();
        char[] charArray5 = new char[] { 'a' };
        char[] charArray6 = strBuilder2.getChars(charArray5);
        char[] charArray11 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray12 = strBuilder2.getChars(charArray11);
        java.io.Reader reader13 = strBuilder2.asReader();
        reader13.mark((int) (byte) 0);
        boolean boolean16 = reader13.ready();
        boolean boolean17 = reader13.markSupported();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[a]");
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(reader13);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
    }

    @Test
    public void test01535() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01535");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder18.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder24.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder26.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.appendln(10L);
        int int32 = strBuilder26.indexOf("#4#a4#", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder26.insert(1, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder23.appendln(strBuilder35);
        java.io.Writer writer37 = strBuilder36.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder38.deleteFirst("hi!");
        java.lang.String str41 = strBuilder40.getNullText();
        char[] charArray43 = new char[] { 'a' };
        char[] charArray44 = strBuilder40.getChars(charArray43);
        char[] charArray49 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray50 = strBuilder40.getChars(charArray49);
        writer37.write(charArray49);
        writer37.close();
        java.io.Writer writer54 = writer37.append('4');
        writer54.write(52);
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder57.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder59.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder59.insert(0, (double) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder63.appendFixedWidthPadRight((java.lang.Object) 100.0d, 1, '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder67.append(2);
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder70.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder72.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder72.appendln(10L);
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder75.deleteFirst("");
        org.apache.commons.lang3.text.StrMatcher strMatcher78 = org.apache.commons.lang3.text.StrMatcher.spaceMatcher();
        int int80 = strBuilder75.indexOf(strMatcher78, 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder85 = strBuilder67.replace(strMatcher78, "java.io.IOException: ", (int) (byte) 1, (int) (byte) 10, (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder89 = strBuilder85.appendFixedWidthPadRight((int) (byte) 100, 0, '4');
        int int92 = strBuilder85.lastIndexOf("StrTokenizer[not tokenized yet]", 5);
        // The following exception was thrown during execution in test generation
        try {
            java.io.Writer writer95 = writer54.append((java.lang.CharSequence) strBuilder85, 32, 66);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 66");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(writer37);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNotNull(charArray43);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray43), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray43), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray43), "[a]");
        org.junit.Assert.assertNotNull(charArray44);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray44), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray44), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray44), "[a]");
        org.junit.Assert.assertNotNull(charArray49);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray49), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray49), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray49), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray50);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray50), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray50), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray50), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(writer54);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(strMatcher78);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + (-1) + "'", int80 == (-1));
        org.junit.Assert.assertNotNull(strBuilder85);
        org.junit.Assert.assertNotNull(strBuilder89);
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + (-1) + "'", int92 == (-1));
    }

    @Test
    public void test01536() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01536");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder18.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder18.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder18.replaceFirst('#', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder27.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder28.append(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder28.replaceFirst('1', '1');
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder33.replaceFirst(".IOExceptionfalse1001.0\n35.0\n1false0\n\naa4#4\n###############################1", "StrTokenizer[]");
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder36);
    }

    @Test
    public void test01537() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01537");
        char[] charArray6 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer8.setDelimiterString("hi!");
        boolean boolean11 = strTokenizer8.isIgnoreEmptyTokens();
        int int12 = strTokenizer8.nextIndex();
        int int13 = strTokenizer8.nextIndex();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = strTokenizer8.setIgnoreEmptyTokens(false);
        int int16 = strTokenizer8.previousIndex();
        java.lang.String str17 = strTokenizer8.getContent();
        boolean boolean18 = strTokenizer8.isEmptyTokenAsNull();
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer8.add("1.0java.io.IOEx");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: add() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(strTokenizer15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "#4#a4#" + "'", str17, "#4#a4#");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    }

    @Test
    public void test01538() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01538");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder2.insert(0, (double) (byte) 100);
        java.io.Reader reader7 = strBuilder6.asReader();
        boolean boolean8 = reader7.markSupported();
        java.nio.CharBuffer charBuffer9 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int10 = reader7.read(charBuffer9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(reader7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
    }

    @Test
    public void test01539() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01539");
        java.lang.String[] strArray3 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList4 = new java.util.ArrayList<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        char[] charArray12 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strTokenizer14.setDelimiterString("hi!");
        boolean boolean17 = strTokenizer14.isIgnoreEmptyTokens();
        java.lang.String str18 = strTokenizer14.next();
        int int19 = strList4.indexOf((java.lang.Object) strTokenizer14);
        java.util.ListIterator<java.lang.String> strItor21 = strList4.listIterator((int) (byte) 0);
        java.util.Iterator<java.lang.String> strItor22 = strList4.iterator();
        java.lang.String[] strArray26 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList27 = new java.util.ArrayList<java.lang.String>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList27, strArray26);
        char[] charArray35 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = new org.apache.commons.lang3.text.StrTokenizer(charArray35, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = strTokenizer37.setDelimiterString("hi!");
        boolean boolean40 = strTokenizer37.isIgnoreEmptyTokens();
        java.lang.String str41 = strTokenizer37.next();
        int int42 = strList27.indexOf((java.lang.Object) strTokenizer37);
        boolean boolean43 = strList4.addAll((java.util.Collection<java.lang.String>) strList27);
        java.util.ListIterator<java.lang.String> strItor44 = strList27.listIterator();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher47 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int48 = strBuilder45.indexOf(strMatcher47);
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder45.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int54 = strBuilder51.indexOf(strMatcher53);
        int int55 = strBuilder45.indexOf(strMatcher53);
        int int56 = strList27.indexOf((java.lang.Object) strBuilder45);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ListIterator<java.lang.String> strItor58 = strList27.listIterator(48);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 48");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "#4#a4#" + "'", str18, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(strItor21);
        org.junit.Assert.assertNotNull(strItor22);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "#4#a4#" + "'", str41, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(strItor44);
        org.junit.Assert.assertNotNull(strMatcher47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strMatcher53);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1));
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1));
    }

    @Test
    public void test01540() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01540");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append("#4#a4#");
        java.lang.String str7 = strBuilder0.leftString((int) (short) 100);
        int int9 = strBuilder0.lastIndexOf("StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder0.insert(0, (-1.0f));
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder0.appendSeparator(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder0.replaceAll("java.io.IOException: StrTokenizer[#4#a4#]", "#4#a4#");
        int int20 = strBuilder17.lastIndexOf(" ", 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder17.replaceAll(".IOExceptionfalse1001.0\n35.0\n1false0\n\naa4#4\n###############################1", "eptionfalse1001.0\n35.0\n1false0\n\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int27 = strBuilder24.indexOf(strMatcher26);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder24.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder29.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder29.appendln((int) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder29.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder36.deleteFirst("hi!");
        java.lang.String str39 = strBuilder38.getNullText();
        char[] charArray41 = new char[] { 'a' };
        char[] charArray42 = strBuilder38.getChars(charArray41);
        char[] charArray47 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray48 = strBuilder38.getChars(charArray47);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = new org.apache.commons.lang3.text.StrTokenizer(charArray47, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder29.appendln(charArray47, 0, 0);
        java.lang.String str56 = strBuilder29.midString((int) ' ', 59);
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder57.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder59.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder59.insert(0, (double) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder63.appendFixedWidthPadRight((java.lang.Object) 100.0d, 1, '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder67.append(2);
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder70.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder72.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder72.appendln(10L);
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder75.deleteFirst("");
        org.apache.commons.lang3.text.StrMatcher strMatcher78 = org.apache.commons.lang3.text.StrMatcher.spaceMatcher();
        int int80 = strBuilder75.indexOf(strMatcher78, 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder85 = strBuilder67.replace(strMatcher78, "java.io.IOException: ", (int) (byte) 1, (int) (byte) 10, (int) (byte) 0);
        boolean boolean86 = strBuilder29.equals(strBuilder85);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer89 = new org.apache.commons.lang3.text.StrTokenizer("", "#4#a4#");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer91 = strTokenizer89.setQuoteChar('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer93 = strTokenizer91.setEmptyTokenAsNull(false);
        java.lang.String str94 = strTokenizer93.getContent();
        java.util.List<java.lang.String> strList95 = strTokenizer93.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder96 = strBuilder85.append((java.lang.Object) strTokenizer93);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder99 = strBuilder23.append(strBuilder96, (int) (byte) 1, 51);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: length must be valid");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "#4#a4#" + "'", str7, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNotNull(charArray41);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray41), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray41), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray41), "[a]");
        org.junit.Assert.assertNotNull(charArray42);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray42), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray42), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray42), "[a]");
        org.junit.Assert.assertNotNull(charArray47);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray47), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray47), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray47), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray48);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray48), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray48), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray48), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "" + "'", str56, "");
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(strMatcher78);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + (-1) + "'", int80 == (-1));
        org.junit.Assert.assertNotNull(strBuilder85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertNotNull(strTokenizer91);
        org.junit.Assert.assertNotNull(strTokenizer93);
        org.junit.Assert.assertEquals("'" + str94 + "' != '" + "" + "'", str94, "");
        org.junit.Assert.assertNotNull(strList95);
        org.junit.Assert.assertNotNull(strBuilder96);
    }

    @Test
    public void test01541() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01541");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[not tokenized yet]", "hi!");
        java.lang.String[] strArray3 = strTokenizer2.getTokenArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer2.setIgnoreEmptyTokens(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = strTokenizer5.setIgnoredChar('a');
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer7.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: remove() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strTokenizer7);
    }

    @Test
    public void test01542() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01542");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder3.append(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder6.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder8.clear();
        int int10 = strBuilder8.capacity();
        java.lang.StringBuffer stringBuffer11 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder8.appendln(stringBuffer11, (int) (byte) 1, (int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder8.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder8.appendSeparator('a', ' ');
        java.lang.StringBuffer stringBuffer20 = strBuilder8.toStringBuffer();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder5.appendln(stringBuffer20, 49, 11);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: startIndex must be valid");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 32 + "'", int10 == 32);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(stringBuffer20);
        org.junit.Assert.assertEquals(stringBuffer20.toString(), "\na");
    }

    @Test
    public void test01543() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01543");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        java.lang.String str3 = strBuilder2.getNullText();
        char[] charArray5 = new char[] { 'a' };
        char[] charArray6 = strBuilder2.getChars(charArray5);
        char[] charArray11 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray12 = strBuilder2.getChars(charArray11);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray12);
        char[] charArray20 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = new org.apache.commons.lang3.text.StrTokenizer(charArray20, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer(charArray20);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = strTokenizer13.reset(charArray20);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder25.deleteFirst("hi!");
        java.lang.String str28 = strBuilder27.getNullText();
        char[] charArray30 = new char[] { 'a' };
        char[] charArray31 = strBuilder27.getChars(charArray30);
        char[] charArray36 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray37 = strBuilder27.getChars(charArray36);
        java.io.Reader reader38 = strBuilder27.asReader();
        reader38.mark((int) (byte) 0);
        char[] charArray47 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = new org.apache.commons.lang3.text.StrTokenizer(charArray47, ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher51 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = new org.apache.commons.lang3.text.StrTokenizer(charArray47, strMatcher51);
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher55 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int56 = strBuilder53.indexOf(strMatcher55);
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder53.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher61 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int62 = strBuilder59.indexOf(strMatcher61);
        int int63 = strBuilder53.indexOf(strMatcher61);
        char[] charArray70 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer72 = new org.apache.commons.lang3.text.StrTokenizer(charArray70, ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher74 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer75 = new org.apache.commons.lang3.text.StrTokenizer(charArray70, strMatcher74);
        org.apache.commons.lang3.text.StrMatcher strMatcher76 = strTokenizer75.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer77 = new org.apache.commons.lang3.text.StrTokenizer(charArray47, strMatcher61, strMatcher76);
        int int78 = reader38.read(charArray47);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer79 = strTokenizer13.reset(charArray47);
        java.lang.String str80 = strTokenizer13.previousToken();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str81 = strTokenizer13.previous();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[a]");
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(strTokenizer13);
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray20), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray20), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray20), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer24);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray30), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray30), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray30), "[a]");
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray31), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray31), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray31), "[a]");
        org.junit.Assert.assertNotNull(charArray36);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray36), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray36), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray36), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray37);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray37), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray37), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray37), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(reader38);
        org.junit.Assert.assertNotNull(charArray47);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray47), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray47), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray47), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher51);
        org.junit.Assert.assertNotNull(strMatcher55);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1));
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strMatcher61);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + (-1) + "'", int62 == (-1));
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + (-1) + "'", int63 == (-1));
        org.junit.Assert.assertNotNull(charArray70);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray70), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray70), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray70), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher74);
        org.junit.Assert.assertNotNull(strMatcher76);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + (-1) + "'", int78 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer79);
        org.junit.Assert.assertNull(str80);
    }

    @Test
    public void test01544() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01544");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = strTokenizer1.setIgnoreEmptyTokens(false);
        int int4 = strTokenizer1.previousIndex();
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer1.add("1.0java.io.IOExceptionfalse100");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: add() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strTokenizer1);
        org.junit.Assert.assertNotNull(strTokenizer3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
    }

    @Test
    public void test01545() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01545");
        char[] charArray6 = new char[] { 'a', '4', 'a', 'a', '#', ' ' };
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int10 = strBuilder7.indexOf(strMatcher9);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder7.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int16 = strBuilder13.indexOf(strMatcher15);
        int int17 = strBuilder7.indexOf(strMatcher15);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, strMatcher15);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int23 = strBuilder20.indexOf(strMatcher22);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = new org.apache.commons.lang3.text.StrTokenizer("#4#a4#", strMatcher22);
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("#4#a4#");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, strMatcher22, strMatcher26);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = strTokenizer27.setEmptyTokenAsNull(false);
        java.lang.Object obj30 = strTokenizer29.clone();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = strTokenizer29.setIgnoreEmptyTokens(false);
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer32.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: remove() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "a4aa# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "a4aa# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[a, 4, a, a, #,  ]");
        org.junit.Assert.assertNotNull(strMatcher9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strMatcher15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNotNull(strMatcher22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertNotNull(strTokenizer29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertEquals(obj30.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj30), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj30), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer32);
    }

    @Test
    public void test01546() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01546");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.appendln(10L);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder2.setNewLineText("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder2.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder8.appendln(strBuilder9, (int) (short) 1, (int) ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder8.appendln("1.0java.io.IOExceptionfalse1001.0\n35.0\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.deleteAll("java.io.IOException: StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder14.appendln("100.0false\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder19.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder21.appendNull();
        java.lang.String str25 = strBuilder22.substring((int) (short) 0, (int) (short) 100);
        int int28 = strBuilder22.lastIndexOf("1false0\n", 59);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder22.replace((int) (byte) 0, 0, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder32.minimizeCapacity();
        java.lang.StringBuffer stringBuffer34 = strBuilder32.toStringBuffer();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder18.append(stringBuffer34, 100, 65);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: startIndex must be valid");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(stringBuffer34);
        org.junit.Assert.assertEquals(stringBuffer34.toString(), "");
    }

    @Test
    public void test01547() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01547");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("#4#a4#java.io.IOException: zinekoTrtSeslaf \n");
    }

    @Test
    public void test01548() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01548");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int4 = strBuilder1.indexOf(strMatcher3);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer("#4#a4#", strMatcher3);
        int int6 = strTokenizer5.size();
        java.util.List<java.lang.String> strList7 = strTokenizer5.getTokenList();
        java.lang.String[] strArray12 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList13 = new java.util.ArrayList<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList13, strArray12);
        char[] charArray21 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer(charArray21, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = strTokenizer23.setDelimiterString("hi!");
        boolean boolean26 = strTokenizer23.isIgnoreEmptyTokens();
        java.lang.String str27 = strTokenizer23.next();
        int int28 = strList13.indexOf((java.lang.Object) strTokenizer23);
        java.util.ListIterator<java.lang.String> strItor30 = strList13.listIterator((int) (byte) 0);
        java.util.Iterator<java.lang.String> strItor31 = strList13.iterator();
        java.lang.String[] strArray35 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList36 = new java.util.ArrayList<java.lang.String>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList36, strArray35);
        char[] charArray44 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = new org.apache.commons.lang3.text.StrTokenizer(charArray44, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = strTokenizer46.setDelimiterString("hi!");
        boolean boolean49 = strTokenizer46.isIgnoreEmptyTokens();
        java.lang.String str50 = strTokenizer46.next();
        int int51 = strList36.indexOf((java.lang.Object) strTokenizer46);
        boolean boolean52 = strList13.addAll((java.util.Collection<java.lang.String>) strList36);
        java.util.ListIterator<java.lang.String> strItor53 = strList36.listIterator();
        boolean boolean55 = strList36.add("");
        int int56 = strList36.size();
        char[] charArray63 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer65 = new org.apache.commons.lang3.text.StrTokenizer(charArray63, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer67 = strTokenizer65.setDelimiterString("hi!");
        boolean boolean68 = strTokenizer65.hasNext();
        java.util.List<java.lang.String> strList69 = strTokenizer65.getTokenList();
        boolean boolean70 = strList36.removeAll((java.util.Collection<java.lang.String>) strList69);
        strList36.add((int) (byte) 1, "0.012true104444444444444444444444444444444444444444444444  \n");
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder74.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder76.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder76.appendln(10L);
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder83 = strBuilder79.appendln(strBuilder80, 1, (int) (short) 100);
        boolean boolean84 = strList36.equals((java.lang.Object) 1);
        strList36.clear();
        boolean boolean86 = strList7.addAll((int) (byte) 0, (java.util.Collection<java.lang.String>) strList36);
        org.junit.Assert.assertNotNull(strMatcher3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertNotNull(strList7);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray21), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray21), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray21), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "#4#a4#" + "'", str27, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNotNull(strItor30);
        org.junit.Assert.assertNotNull(strItor31);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(charArray44);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray44), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray44), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray44), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "#4#a4#" + "'", str50, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1));
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(strItor53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 4 + "'", int56 == 4);
        org.junit.Assert.assertNotNull(charArray63);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray63), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray63), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray63), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(strList69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertNotNull(strBuilder83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
    }

    @Test
    public void test01549() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01549");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.String str1 = strBuilder0.getNullText();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder3.deleteFirst("hi!");
        java.lang.String str6 = strBuilder5.getNullText();
        char[] charArray8 = new char[] { 'a' };
        char[] charArray9 = strBuilder5.getChars(charArray8);
        int int13 = strMatcher2.isMatch(charArray9, 0, 0, (int) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder0.replaceAll(strMatcher2, "java.io.IOException: ");
        java.util.stream.IntStream intStream16 = strBuilder0.codePoints();
        boolean boolean17 = strBuilder0.isEmpty();
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder20.deleteFirst("hi!");
        java.lang.String str23 = strBuilder22.getNullText();
        char[] charArray25 = new char[] { 'a' };
        char[] charArray26 = strBuilder22.getChars(charArray25);
        int int28 = strMatcher19.isMatch(charArray26, 100);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer(charArray26, '0', '\000');
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder0.append(charArray26, 15, (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: Invalid startIndex: -1");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(charArray8);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray8), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray8), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray8), "[a]");
        org.junit.Assert.assertNotNull(charArray9);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray9), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray9), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray9), "[a]");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(intStream16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNotNull(charArray25);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray25), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray25), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray25), "[a]");
        org.junit.Assert.assertNotNull(charArray26);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray26), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray26), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray26), "[a]");
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
    }

    @Test
    public void test01550() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01550");
        char[] charArray6 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer8.setDelimiterString("hi!");
        java.lang.String str11 = strTokenizer10.nextToken();
        java.util.List<java.lang.String> strList12 = strTokenizer10.getTokenList();
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = strTokenizer10.setTrimmerMatcher(strMatcher13);
        boolean boolean15 = strTokenizer14.hasPrevious();
        boolean boolean16 = strTokenizer14.isIgnoreEmptyTokens();
        java.lang.String str17 = strTokenizer14.toString();
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "#4#a4#" + "'", str11, "#4#a4#");
        org.junit.Assert.assertNotNull(strList12);
        org.junit.Assert.assertNotNull(strMatcher13);
        org.junit.Assert.assertNotNull(strTokenizer14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "StrTokenizer[#4#a4#]" + "'", str17, "StrTokenizer[#4#a4#]");
    }

    @Test
    public void test01551() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01551");
        java.lang.String[] strArray3 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList4 = new java.util.ArrayList<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        char[] charArray12 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strTokenizer14.setDelimiterString("hi!");
        boolean boolean17 = strTokenizer14.isIgnoreEmptyTokens();
        java.lang.String str18 = strTokenizer14.next();
        int int19 = strList4.indexOf((java.lang.Object) strTokenizer14);
        char[] charArray26 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = new org.apache.commons.lang3.text.StrTokenizer(charArray26, ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer(charArray26, strMatcher30);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int35 = strBuilder32.indexOf(strMatcher34);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder32.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int41 = strBuilder38.indexOf(strMatcher40);
        int int42 = strBuilder32.indexOf(strMatcher40);
        char[] charArray49 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = new org.apache.commons.lang3.text.StrTokenizer(charArray49, ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = new org.apache.commons.lang3.text.StrTokenizer(charArray49, strMatcher53);
        org.apache.commons.lang3.text.StrMatcher strMatcher55 = strTokenizer54.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = new org.apache.commons.lang3.text.StrTokenizer(charArray26, strMatcher40, strMatcher55);
        boolean boolean57 = strList4.equals((java.lang.Object) strMatcher55);
        java.util.ListIterator<java.lang.String> strItor58 = strList4.listIterator();
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder59.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder61.clear();
        java.lang.Throwable throwable66 = null;
        java.io.IOException iOException67 = new java.io.IOException("", throwable66);
        java.io.IOException iOException68 = new java.io.IOException("#4#a4#", throwable66);
        java.io.IOException iOException69 = new java.io.IOException(throwable66);
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray73 = new java.lang.Object[] { 1.0f, iOException69, false, 100, strBuilder72 };
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder62.appendWithSeparators(objArray73, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder75.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder77.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder77.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder84 = strBuilder82.append("java.io.IOException: ");
        org.apache.commons.lang3.text.StrBuilder strBuilder85 = strBuilder82.reverse();
        int int86 = strList4.lastIndexOf((java.lang.Object) strBuilder85);
        strList4.add(0, "59.0");
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "#4#a4#" + "'", str18, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(charArray26);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray26), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray26), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray26), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertNotNull(strMatcher34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strMatcher40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertNotNull(charArray49);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray49), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray49), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray49), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher53);
        org.junit.Assert.assertNotNull(strMatcher55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(strItor58);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(objArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray73), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray73), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertNotNull(strBuilder82);
        org.junit.Assert.assertNotNull(strBuilder84);
        org.junit.Assert.assertNotNull(strBuilder85);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + (-1) + "'", int86 == (-1));
    }

    @Test
    public void test01552() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01552");
        java.lang.String[] strArray3 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList4 = new java.util.ArrayList<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        char[] charArray12 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strTokenizer14.setDelimiterString("hi!");
        boolean boolean17 = strTokenizer14.isIgnoreEmptyTokens();
        java.lang.String str18 = strTokenizer14.next();
        int int19 = strList4.indexOf((java.lang.Object) strTokenizer14);
        java.lang.String str20 = strTokenizer14.toString();
        java.lang.String str21 = strTokenizer14.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = strTokenizer14.setIgnoreEmptyTokens(true);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = strTokenizer23.reset("eptionfalse1001.0\n35.0\n1false0\n\n");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str26 = strTokenizer23.previous();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "#4#a4#" + "'", str18, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "StrTokenizer[#4#a4#]" + "'", str20, "StrTokenizer[#4#a4#]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "StrTokenizer[#4#a4#]" + "'", str21, "StrTokenizer[#4#a4#]");
        org.junit.Assert.assertNotNull(strTokenizer23);
        org.junit.Assert.assertNotNull(strTokenizer25);
    }

    @Test
    public void test01553() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01553");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        java.lang.String str3 = strBuilder2.getNullText();
        char[] charArray5 = new char[] { 'a' };
        char[] charArray6 = strBuilder2.getChars(charArray5);
        char[] charArray11 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray12 = strBuilder2.getChars(charArray11);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray12);
        boolean boolean14 = strTokenizer13.hasNext();
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = strTokenizer13.getDelimiterMatcher();
        java.lang.String[] strArray16 = strTokenizer13.getTokenArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = strTokenizer13.setDelimiterString("35.0\n4aaaaaaaaaaaaaaaaaaaaaStrTokenizer[not1false0\ntokenized1false0\nyet]");
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[a]");
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(strTokenizer13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(strMatcher15);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertNotNull(strTokenizer18);
    }

    @Test
    public void test01554() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01554");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("java.io.IOException: StrTokenizer[");
        org.junit.Assert.assertNotNull(strTokenizer1);
    }

    @Test
    public void test01555() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01555");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = strTokenizer1.setEmptyTokenAsNull(true);
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = strTokenizer3.getQuoteMatcher();
        boolean boolean5 = strTokenizer3.hasPrevious();
        int int6 = strTokenizer3.previousIndex();
        boolean boolean7 = strTokenizer3.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder8.deleteFirst("hi!");
        java.lang.String str11 = strBuilder10.getNullText();
        char[] charArray13 = new char[] { 'a' };
        char[] charArray14 = strBuilder10.getChars(charArray13);
        char[] charArray19 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray20 = strBuilder10.getChars(charArray19);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray20);
        char[] charArray28 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = new org.apache.commons.lang3.text.StrTokenizer(charArray28, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer(charArray28);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = strTokenizer21.reset(charArray28);
        char[] charArray40 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = new org.apache.commons.lang3.text.StrTokenizer(charArray40, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = new org.apache.commons.lang3.text.StrTokenizer(charArray40);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = strTokenizer43.setDelimiterChar('a');
        org.apache.commons.lang3.text.StrMatcher strMatcher46 = strTokenizer45.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = new org.apache.commons.lang3.text.StrTokenizer("", "#4#a4#");
        org.apache.commons.lang3.text.StrMatcher strMatcher50 = strTokenizer49.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = new org.apache.commons.lang3.text.StrTokenizer("0java.io.IOExceptionfalse100", strMatcher46, strMatcher50);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = strTokenizer21.setIgnoredMatcher(strMatcher46);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = strTokenizer3.setIgnoredMatcher(strMatcher46);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str54 = strTokenizer53.previous();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strTokenizer1);
        org.junit.Assert.assertNotNull(strTokenizer3);
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[a]");
        org.junit.Assert.assertNotNull(charArray14);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray14), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray14), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray14), "[a]");
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray20), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray20), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray20), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(strTokenizer21);
        org.junit.Assert.assertNotNull(charArray28);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray28), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray28), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray28), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer32);
        org.junit.Assert.assertNotNull(charArray40);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray40), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray40), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray40), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer45);
        org.junit.Assert.assertNotNull(strMatcher46);
        org.junit.Assert.assertNotNull(strMatcher50);
        org.junit.Assert.assertNotNull(strTokenizer52);
        org.junit.Assert.assertNotNull(strTokenizer53);
    }

    @Test
    public void test01556() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01556");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.String str1 = strBuilder0.getNullText();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder2.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher5 = org.apache.commons.lang3.text.StrMatcher.splitMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder2.deleteAll(strMatcher5);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder0.appendln((java.lang.Object) strBuilder2);
        java.util.Iterator<java.lang.String> strItor8 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder0.appendAll(strItor8);
        boolean boolean11 = strBuilder0.equals((java.lang.Object) (-1L));
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder0.insert((int) (short) 1, (float) 0L);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder0.clear();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strMatcher5);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder15);
    }

    @Test
    public void test01557() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01557");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        java.lang.String str3 = strBuilder2.getNullText();
        char[] charArray5 = new char[] { 'a' };
        char[] charArray6 = strBuilder2.getChars(charArray5);
        char[] charArray11 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray12 = strBuilder2.getChars(charArray11);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray12);
        char[] charArray20 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = new org.apache.commons.lang3.text.StrTokenizer(charArray20, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer(charArray20);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = strTokenizer13.reset(charArray20);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder25.deleteFirst("hi!");
        java.lang.String str28 = strBuilder27.getNullText();
        char[] charArray30 = new char[] { 'a' };
        char[] charArray31 = strBuilder27.getChars(charArray30);
        char[] charArray36 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray37 = strBuilder27.getChars(charArray36);
        java.io.Reader reader38 = strBuilder27.asReader();
        reader38.mark((int) (byte) 0);
        char[] charArray47 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = new org.apache.commons.lang3.text.StrTokenizer(charArray47, ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher51 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = new org.apache.commons.lang3.text.StrTokenizer(charArray47, strMatcher51);
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher55 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int56 = strBuilder53.indexOf(strMatcher55);
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder53.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher61 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int62 = strBuilder59.indexOf(strMatcher61);
        int int63 = strBuilder53.indexOf(strMatcher61);
        char[] charArray70 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer72 = new org.apache.commons.lang3.text.StrTokenizer(charArray70, ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher74 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer75 = new org.apache.commons.lang3.text.StrTokenizer(charArray70, strMatcher74);
        org.apache.commons.lang3.text.StrMatcher strMatcher76 = strTokenizer75.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer77 = new org.apache.commons.lang3.text.StrTokenizer(charArray47, strMatcher61, strMatcher76);
        int int78 = reader38.read(charArray47);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer79 = strTokenizer13.reset(charArray47);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer80 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray47);
        int int81 = strTokenizer80.size();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[a]");
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(strTokenizer13);
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray20), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray20), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray20), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer24);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray30), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray30), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray30), "[a]");
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray31), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray31), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray31), "[a]");
        org.junit.Assert.assertNotNull(charArray36);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray36), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray36), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray36), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray37);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray37), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray37), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray37), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(reader38);
        org.junit.Assert.assertNotNull(charArray47);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray47), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray47), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray47), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher51);
        org.junit.Assert.assertNotNull(strMatcher55);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1));
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strMatcher61);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + (-1) + "'", int62 == (-1));
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + (-1) + "'", int63 == (-1));
        org.junit.Assert.assertNotNull(charArray70);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray70), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray70), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray70), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher74);
        org.junit.Assert.assertNotNull(strMatcher76);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + (-1) + "'", int78 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer79);
        org.junit.Assert.assertNotNull(strTokenizer80);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 1 + "'", int81 == 1);
    }

    @Test
    public void test01558() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01558");
        char[] charArray6 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer8.setDelimiterString("hi!");
        java.lang.String str11 = strTokenizer10.nextToken();
        java.util.List<java.lang.String> strList12 = strTokenizer10.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder13.deleteFirst("hi!");
        java.lang.String str16 = strBuilder15.getNullText();
        char[] charArray18 = new char[] { 'a' };
        char[] charArray19 = strBuilder15.getChars(charArray18);
        char[] charArray24 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray25 = strBuilder15.getChars(charArray24);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray25);
        int int27 = strList12.indexOf((java.lang.Object) charArray25);
        boolean boolean28 = strList12.isEmpty();
        java.util.stream.Stream<java.lang.String> strStream29 = strList12.parallelStream();
        // The following exception was thrown during execution in test generation
        try {
            java.util.ListIterator<java.lang.String> strItor31 = strList12.listIterator(72);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 72");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "#4#a4#" + "'", str11, "#4#a4#");
        org.junit.Assert.assertNotNull(strList12);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(charArray18);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray18), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray18), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray18), "[a]");
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[a]");
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray25);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray25), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray25), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray25), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(strTokenizer26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(strStream29);
    }

    @Test
    public void test01559() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01559");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        java.lang.String str3 = strBuilder2.getNullText();
        char[] charArray5 = new char[] { 'a' };
        char[] charArray6 = strBuilder2.getChars(charArray5);
        char[] charArray11 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray12 = strBuilder2.getChars(charArray11);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = new org.apache.commons.lang3.text.StrTokenizer(charArray11);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = strTokenizer13.setQuoteChar('#');
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer13.set("1.0java.io.IOExceptionfalse1001.0\n35.0\njava.io.IOException: 10.0\nStrTokenizer[#4#a4#]\n");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: set() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[a]");
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(strTokenizer15);
    }

    @Test
    public void test01560() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01560");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        char[] charArray9 = new char[] { 'a', 'a', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = new org.apache.commons.lang3.text.StrTokenizer(charArray9);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder2.appendln(charArray9);
        int int14 = strBuilder11.indexOf('4', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder11.appendFixedWidthPadLeft((int) (byte) 1, 32, '#');
        java.lang.String str19 = strBuilder18.getNullText();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder18.setNullText("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder21.replaceFirst("10\n\n", "0\nzinekoTrtSeslaf ");
        int int26 = strBuilder21.lastIndexOf('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder21.appendSeparator(".0j", "10\n\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder29.trim();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder30.appendln("");
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder30.insert(80, (double) (short) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 80");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(charArray9);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray9), "aa4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray9), "aa4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray9), "[a, a, 4, #, 4]");
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2 + "'", int14 == 2);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 1 + "'", int26 == 1);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder32);
    }

    @Test
    public void test01561() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01561");
        char[] charArray6 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = new org.apache.commons.lang3.text.StrTokenizer(charArray6);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray6);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder13.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder13.appendln(10L);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.deleteFirst("");
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = org.apache.commons.lang3.text.StrMatcher.spaceMatcher();
        int int21 = strBuilder16.indexOf(strMatcher19, 1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, strMatcher19);
        boolean boolean23 = strTokenizer22.hasNext();
        java.util.List<java.lang.String> strList24 = strTokenizer22.getTokenList();
        char[] charArray31 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray31, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = strTokenizer33.setDelimiterString("hi!");
        java.lang.String str36 = strTokenizer35.nextToken();
        java.util.List<java.lang.String> strList37 = strTokenizer35.getTokenList();
        boolean boolean39 = strList37.add("hi!");
        java.util.Iterator<java.lang.String> strItor40 = strList37.iterator();
        boolean boolean41 = strList37.isEmpty();
        boolean boolean42 = strList24.removeAll((java.util.Collection<java.lang.String>) strList37);
        strList24.clear();
        java.util.ListIterator<java.lang.String> strItor44 = strList24.listIterator();
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.lang.String> strList47 = strList24.subList(38, (int) '\000');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: fromIndex(38) > toIndex(0)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(strList24);
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray31), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray31), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray31), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "#4#a4#" + "'", str36, "#4#a4#");
        org.junit.Assert.assertNotNull(strList37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(strItor40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(strItor44);
    }

    @Test
    public void test01562() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01562");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder(15);
        java.io.Writer writer2 = strBuilder1.asWriter();
        writer2.write(4);
        // The following exception was thrown during execution in test generation
        try {
            writer2.write("a10", (int) 'e', 22);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: startIndex must be valid");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(writer2);
    }

    @Test
    public void test01563() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01563");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        java.lang.String str4 = strBuilder2.leftString(32);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder2.appendFixedWidthPadLeft((int) (short) 100, 27, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher11 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int12 = strBuilder9.indexOf(strMatcher11);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder9.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder14.appendln((int) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder14.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher23 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int24 = strBuilder21.indexOf(strMatcher23);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder21.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder26.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder26.appendln((int) (short) 10);
        char[] charArray37 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = new org.apache.commons.lang3.text.StrTokenizer(charArray37, ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher41 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = new org.apache.commons.lang3.text.StrTokenizer(charArray37, strMatcher41);
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = strTokenizer42.getIgnoredMatcher();
        int int45 = strBuilder26.indexOf(strMatcher43, (int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder26.appendln("0java.io.IOExceptionfalse100");
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder48.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder50.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder50.insert(0, (double) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder54.appendFixedWidthPadRight((java.lang.Object) 100.0d, 1, '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder58.trim();
        java.lang.Object[] objArray60 = new java.lang.Object[] {};
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder58.appendAll(objArray60);
        char[] charArray62 = strBuilder58.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder47.append(charArray62);
        boolean boolean65 = strBuilder63.startsWith("java.io.IOException: StrTokenizer[not tokenized yet]");
        java.lang.Throwable throwable68 = null;
        java.io.IOException iOException69 = new java.io.IOException("", throwable68);
        java.io.IOException iOException70 = new java.io.IOException("#4#a4#", throwable68);
        java.io.IOException iOException71 = new java.io.IOException(throwable68);
        java.lang.Throwable[] throwableArray72 = iOException71.getSuppressed();
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder63.appendWithSeparators((java.lang.Object[]) throwableArray72, "0\nfalse32.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder14.appendAll((java.lang.Object[]) throwableArray72);
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder2.appendAll((java.lang.Object[]) throwableArray72);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strMatcher11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strMatcher23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(charArray37);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray37), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray37), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray37), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher41);
        org.junit.Assert.assertNotNull(strMatcher43);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(objArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray60), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray60), "[]");
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(charArray62);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray62), "100.01");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray62), "100.01");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray62), "[1, 0, 0, ., 0, 1]");
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(throwableArray72);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNotNull(strBuilder76);
    }

    @Test
    public void test01564() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01564");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = new org.apache.commons.lang3.text.StrTokenizer("hi!");
        java.lang.Object obj2 = strTokenizer1.clone();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = strTokenizer1.reset();
        java.lang.Object obj4 = strTokenizer1.clone();
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertEquals(obj2.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj2), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj2), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "StrTokenizer[not tokenized yet]");
    }

    @Test
    public void test01565() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01565");
        java.lang.String[] strArray3 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList4 = new java.util.ArrayList<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        char[] charArray12 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strTokenizer14.setDelimiterString("hi!");
        boolean boolean17 = strTokenizer14.isIgnoreEmptyTokens();
        java.lang.String str18 = strTokenizer14.next();
        int int19 = strList4.indexOf((java.lang.Object) strTokenizer14);
        char[] charArray26 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = new org.apache.commons.lang3.text.StrTokenizer(charArray26, ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer(charArray26, strMatcher30);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int35 = strBuilder32.indexOf(strMatcher34);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder32.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int41 = strBuilder38.indexOf(strMatcher40);
        int int42 = strBuilder32.indexOf(strMatcher40);
        char[] charArray49 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = new org.apache.commons.lang3.text.StrTokenizer(charArray49, ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = new org.apache.commons.lang3.text.StrTokenizer(charArray49, strMatcher53);
        org.apache.commons.lang3.text.StrMatcher strMatcher55 = strTokenizer54.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = new org.apache.commons.lang3.text.StrTokenizer(charArray26, strMatcher40, strMatcher55);
        boolean boolean57 = strList4.equals((java.lang.Object) strMatcher55);
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder58.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder60.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder60.insert(0, (double) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder64.appendFixedWidthPadRight((java.lang.Object) 100.0d, 1, '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder68.trim();
        java.lang.Object[] objArray70 = new java.lang.Object[] {};
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder68.appendAll(objArray70);
        char[] charArray72 = strBuilder68.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer73 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray72);
        boolean boolean74 = strList4.equals((java.lang.Object) charArray72);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer75 = new org.apache.commons.lang3.text.StrTokenizer(charArray72);
        int int76 = strTokenizer75.previousIndex();
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "#4#a4#" + "'", str18, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(charArray26);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray26), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray26), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray26), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertNotNull(strMatcher34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strMatcher40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertNotNull(charArray49);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray49), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray49), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray49), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher53);
        org.junit.Assert.assertNotNull(strMatcher55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(objArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray70), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray70), "[]");
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(charArray72);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray72), "100.01");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray72), "100.01");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray72), "[1, 0, 0, ., 0, 1]");
        org.junit.Assert.assertNotNull(strTokenizer73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + (-1) + "'", int76 == (-1));
    }

    @Test
    public void test01566() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01566");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder18.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder18.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder18.replaceFirst('#', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder27.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder28.append(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder28.appendNewLine();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder28.replace(66, 65, "zinekoTrtSeslaf ");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: end < start");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder31);
    }

    @Test
    public void test01567() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01567");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer(".0jav", ' ', '0');
        int int4 = strTokenizer3.nextIndex();
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
    }

    @Test
    public void test01568() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01568");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        char[] charArray10 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = new org.apache.commons.lang3.text.StrTokenizer(charArray10, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder0.appendAll((java.util.Iterator<java.lang.String>) strTokenizer12);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.deleteFirst("hi!");
        java.lang.String str17 = strBuilder16.getNullText();
        char[] charArray19 = new char[] { 'a' };
        char[] charArray20 = strBuilder16.getChars(charArray19);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher23 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int24 = strBuilder21.indexOf(strMatcher23);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder21.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder26.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder26.appendln((int) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder26.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int36 = strBuilder33.indexOf(strMatcher35);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder32.deleteFirst(strMatcher35);
        int int38 = strBuilder16.indexOf(strMatcher35);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder0.deleteFirst(strMatcher35);
        int int41 = strBuilder0.lastIndexOf("StrTokenizer[1.0java.io.IOExceptionfalse1001.0, 35.0]");
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[a]");
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray20), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray20), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray20), "[a]");
        org.junit.Assert.assertNotNull(strMatcher23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
    }

    @Test
    public void test01569() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01569");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        java.lang.String str3 = strBuilder2.getNullText();
        char[] charArray5 = new char[] { 'a' };
        char[] charArray6 = strBuilder2.getChars(charArray5);
        java.lang.StringBuffer stringBuffer7 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder2.append(stringBuffer7);
        java.io.Writer writer9 = strBuilder8.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder10.deleteFirst("hi!");
        java.lang.String str13 = strBuilder12.getNullText();
        char[] charArray15 = new char[] { 'a' };
        char[] charArray16 = strBuilder12.getChars(charArray15);
        char[] charArray21 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray22 = strBuilder12.getChars(charArray21);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer(charArray21);
        writer9.write(charArray21);
        writer9.close();
        writer9.close();
        writer9.write("#4#a4#", 1, 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder31.deleteFirst("hi!");
        java.lang.String str34 = strBuilder33.getNullText();
        char[] charArray36 = new char[] { 'a' };
        char[] charArray37 = strBuilder33.getChars(charArray36);
        writer9.write(charArray36);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder39.deleteFirst("hi!");
        java.lang.String str42 = strBuilder41.getNullText();
        char[] charArray44 = new char[] { 'a' };
        char[] charArray45 = strBuilder41.getChars(charArray44);
        java.lang.StringBuffer stringBuffer46 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder41.append(stringBuffer46);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder41.deleteFirst('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder50.deleteFirst("hi!");
        java.lang.String str53 = strBuilder52.getNullText();
        char[] charArray55 = new char[] { 'a' };
        char[] charArray56 = strBuilder52.getChars(charArray55);
        char[] charArray57 = strBuilder49.getChars(charArray55);
        writer9.write(charArray55);
        writer9.write("java.");
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher63 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int64 = strBuilder61.indexOf(strMatcher63);
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder61.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder66.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder66.appendln((int) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder66.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder72.minimizeCapacity();
        // The following exception was thrown during execution in test generation
        try {
            java.io.Writer writer76 = writer9.append((java.lang.CharSequence) strBuilder73, 11, (int) 'I');
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 73");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[a]");
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[a]");
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(writer9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(charArray15);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray15), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray15), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray15), "[a]");
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[a]");
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray21), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray21), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray21), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray22), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray22), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray22), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNotNull(charArray36);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray36), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray36), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray36), "[a]");
        org.junit.Assert.assertNotNull(charArray37);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray37), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray37), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray37), "[a]");
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNotNull(charArray44);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray44), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray44), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray44), "[a]");
        org.junit.Assert.assertNotNull(charArray45);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray45), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray45), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray45), "[a]");
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertNotNull(charArray55);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray55), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray55), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray55), "[a]");
        org.junit.Assert.assertNotNull(charArray56);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray56), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray56), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray56), "[a]");
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[a]");
        org.junit.Assert.assertNotNull(strMatcher63);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + (-1) + "'", int64 == (-1));
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strBuilder73);
    }

    @Test
    public void test01570() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01570");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        java.lang.String str3 = strBuilder2.getNullText();
        char[] charArray5 = new char[] { 'a' };
        char[] charArray6 = strBuilder2.getChars(charArray5);
        char[] charArray11 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray12 = strBuilder2.getChars(charArray11);
        java.io.Reader reader13 = strBuilder2.asReader();
        reader13.reset();
        boolean boolean15 = reader13.ready();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder18.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder19.append(false);
        java.lang.String str22 = strBuilder21.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int26 = strBuilder23.indexOf(strMatcher25);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder23.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder28.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder28.appendln((int) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder28.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher37 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int38 = strBuilder35.indexOf(strMatcher37);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder34.deleteFirst(strMatcher37);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder39.minimizeCapacity();
        char[] charArray47 = new char[] { 'a', '4', 'a', 'a', '#', ' ' };
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher50 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int51 = strBuilder48.indexOf(strMatcher50);
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder48.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher56 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int57 = strBuilder54.indexOf(strMatcher56);
        int int58 = strBuilder48.indexOf(strMatcher56);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer59 = new org.apache.commons.lang3.text.StrTokenizer(charArray47, strMatcher56);
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder39.replace(strMatcher56, "", 2, (int) (short) 100, 10);
        char[] charArray67 = strBuilder39.toCharArray((int) (byte) 0, (int) (byte) 0);
        org.apache.commons.lang3.text.StrMatcher strMatcher68 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder69.deleteFirst("hi!");
        java.lang.String str72 = strBuilder71.getNullText();
        char[] charArray74 = new char[] { 'a' };
        char[] charArray75 = strBuilder71.getChars(charArray74);
        int int79 = strMatcher68.isMatch(charArray75, 0, 0, (int) (byte) 10);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer80 = new org.apache.commons.lang3.text.StrTokenizer(charArray67, strMatcher68);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer81 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray67);
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder21.append(charArray67);
        int int83 = reader13.read(charArray67);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer86 = new org.apache.commons.lang3.text.StrTokenizer(charArray67, 'e', '\000');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer88 = strTokenizer86.setIgnoredChar('.');
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[a]");
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(reader13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(strMatcher25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strMatcher37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(charArray47);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray47), "a4aa# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray47), "a4aa# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray47), "[a, 4, a, a, #,  ]");
        org.junit.Assert.assertNotNull(strMatcher50);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1));
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strMatcher56);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + (-1) + "'", int58 == (-1));
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(charArray67);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray67), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray67), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray67), "[]");
        org.junit.Assert.assertNotNull(strMatcher68);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNull(str72);
        org.junit.Assert.assertNotNull(charArray74);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray74), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray74), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray74), "[a]");
        org.junit.Assert.assertNotNull(charArray75);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray75), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray75), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray75), "[a]");
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 0 + "'", int79 == 0);
        org.junit.Assert.assertNotNull(strTokenizer81);
        org.junit.Assert.assertNotNull(strBuilder82);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 0 + "'", int83 == 0);
        org.junit.Assert.assertNotNull(strTokenizer88);
    }

    @Test
    public void test01571() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01571");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        char[] charArray9 = new char[] { 'a', 'a', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = new org.apache.commons.lang3.text.StrTokenizer(charArray9);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder2.appendln(charArray9);
        int int14 = strBuilder11.indexOf('4', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder11.appendFixedWidthPadLeft((int) (byte) 1, 32, '#');
        java.lang.String str19 = strBuilder18.getNullText();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder18.setNullText("hi!");
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder21.replace((int) '1', 74, "59.052.0");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: end < start");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(charArray9);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray9), "aa4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray9), "aa4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray9), "[a, a, 4, #, 4]");
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2 + "'", int14 == 2);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNotNull(strBuilder21);
    }

    @Test
    public void test01572() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01572");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = org.apache.commons.lang3.text.StrMatcher.splitMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder0.deleteAll(strMatcher3);
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder0.append((double) 59);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder7.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder9.clear();
        java.lang.Throwable throwable14 = null;
        java.io.IOException iOException15 = new java.io.IOException("", throwable14);
        java.io.IOException iOException16 = new java.io.IOException("#4#a4#", throwable14);
        java.io.IOException iOException17 = new java.io.IOException(throwable14);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray21 = new java.lang.Object[] { 1.0f, iOException17, false, 100, strBuilder20 };
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder10.appendWithSeparators(objArray21, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder6.appendln(strBuilder25, 4, (int) (byte) 10);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str31 = strBuilder6.substring((int) (byte) 100, 27);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: end < start");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strMatcher3);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(objArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray21), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray21), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder28);
    }

    @Test
    public void test01573() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01573");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        java.lang.String str3 = strBuilder2.getNullText();
        char[] charArray5 = new char[] { 'a' };
        char[] charArray6 = strBuilder2.getChars(charArray5);
        char[] charArray11 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray12 = strBuilder2.getChars(charArray11);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray12);
        char[] charArray20 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = new org.apache.commons.lang3.text.StrTokenizer(charArray20, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer(charArray20);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = strTokenizer13.reset(charArray20);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer(charArray20, '#', '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = new org.apache.commons.lang3.text.StrTokenizer(charArray20, "java.io.IOException: StrTokenizer[not tokenized yet]");
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer29.add("java.io.IOException:");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: add() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[a]");
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(strTokenizer13);
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray20), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray20), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray20), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer24);
    }

    @Test
    public void test01574() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01574");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = new org.apache.commons.lang3.text.StrTokenizer("hi!");
        java.lang.String str2 = strTokenizer1.previousToken();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = strTokenizer1.setQuoteChar(' ');
        java.lang.String str5 = strTokenizer1.nextToken();
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer1.add(".IOExceptionfalse1001.0\n35.0\n1false0\n\n32");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: add() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNotNull(strTokenizer4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
    }

    @Test
    public void test01575() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01575");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.appendln(10L);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder2.appendPadding((int) (short) 10, '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder2.ensureCapacity(2);
        java.lang.StringBuffer stringBuffer11 = strBuilder2.toStringBuffer();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = new org.apache.commons.lang3.text.StrTokenizer("100.01210\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.deleteFirst("hi!");
        java.lang.String str17 = strBuilder16.getNullText();
        char[] charArray19 = new char[] { 'a' };
        char[] charArray20 = strBuilder16.getChars(charArray19);
        char[] charArray25 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray26 = strBuilder16.getChars(charArray25);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = new org.apache.commons.lang3.text.StrTokenizer(charArray25, 'a');
        boolean boolean29 = strTokenizer28.hasPrevious();
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = strTokenizer28.getIgnoredMatcher();
        char[] charArray37 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = new org.apache.commons.lang3.text.StrTokenizer(charArray37, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = strTokenizer28.reset(charArray37);
        org.apache.commons.lang3.text.StrMatcher strMatcher41 = strTokenizer28.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = strTokenizer13.setIgnoredMatcher(strMatcher41);
        int int43 = strBuilder2.lastIndexOf(strMatcher41);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(stringBuffer11);
        org.junit.Assert.assertEquals(stringBuffer11.toString(), "10\n4444444444");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[a]");
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray20), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray20), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray20), "[a]");
        org.junit.Assert.assertNotNull(charArray25);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray25), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray25), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray25), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray26);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray26), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray26), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray26), "[a, 4,  , 4]");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertNotNull(charArray37);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray37), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray37), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray37), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer40);
        org.junit.Assert.assertNotNull(strMatcher41);
        org.junit.Assert.assertNotNull(strTokenizer42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
    }

    @Test
    public void test01576() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01576");
        java.lang.String[] strArray3 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList4 = new java.util.ArrayList<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        char[] charArray12 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strTokenizer14.setDelimiterString("hi!");
        boolean boolean17 = strTokenizer14.isIgnoreEmptyTokens();
        java.lang.String str18 = strTokenizer14.next();
        int int19 = strList4.indexOf((java.lang.Object) strTokenizer14);
        java.util.ListIterator<java.lang.String> strItor21 = strList4.listIterator((int) (byte) 0);
        java.util.Iterator<java.lang.String> strItor22 = strList4.iterator();
        java.lang.String[] strArray26 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList27 = new java.util.ArrayList<java.lang.String>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList27, strArray26);
        char[] charArray35 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = new org.apache.commons.lang3.text.StrTokenizer(charArray35, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = strTokenizer37.setDelimiterString("hi!");
        boolean boolean40 = strTokenizer37.isIgnoreEmptyTokens();
        java.lang.String str41 = strTokenizer37.next();
        int int42 = strList27.indexOf((java.lang.Object) strTokenizer37);
        boolean boolean43 = strList4.addAll((java.util.Collection<java.lang.String>) strList27);
        java.lang.String[] strArray47 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList48 = new java.util.ArrayList<java.lang.String>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList48, strArray47);
        char[] charArray56 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = new org.apache.commons.lang3.text.StrTokenizer(charArray56, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer60 = strTokenizer58.setDelimiterString("hi!");
        boolean boolean61 = strTokenizer58.isIgnoreEmptyTokens();
        java.lang.String str62 = strTokenizer58.next();
        int int63 = strList48.indexOf((java.lang.Object) strTokenizer58);
        java.util.ListIterator<java.lang.String> strItor65 = strList48.listIterator((int) (byte) 0);
        java.util.Iterator<java.lang.String> strItor66 = strList48.iterator();
        java.lang.String[] strArray70 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList71 = new java.util.ArrayList<java.lang.String>();
        boolean boolean72 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList71, strArray70);
        char[] charArray79 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer81 = new org.apache.commons.lang3.text.StrTokenizer(charArray79, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer83 = strTokenizer81.setDelimiterString("hi!");
        boolean boolean84 = strTokenizer81.isIgnoreEmptyTokens();
        java.lang.String str85 = strTokenizer81.next();
        int int86 = strList71.indexOf((java.lang.Object) strTokenizer81);
        java.util.ListIterator<java.lang.String> strItor88 = strList71.listIterator((int) (byte) 0);
        java.util.Iterator<java.lang.String> strItor89 = strList71.iterator();
        boolean boolean90 = strList48.remove((java.lang.Object) strItor89);
        boolean boolean91 = strList4.removeAll((java.util.Collection<java.lang.String>) strList48);
        java.lang.String str94 = strList48.set(2, "java.io.IOException: ");
        java.util.ListIterator<java.lang.String> strItor95 = strList48.listIterator();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str98 = strList48.set(17, "59.0");
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 17, Size: 3");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "#4#a4#" + "'", str18, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(strItor21);
        org.junit.Assert.assertNotNull(strItor22);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "#4#a4#" + "'", str41, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(charArray56);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray56), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray56), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray56), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "#4#a4#" + "'", str62, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + (-1) + "'", int63 == (-1));
        org.junit.Assert.assertNotNull(strItor65);
        org.junit.Assert.assertNotNull(strItor66);
        org.junit.Assert.assertNotNull(strArray70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(charArray79);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray79), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray79), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray79), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "#4#a4#" + "'", str85, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + (-1) + "'", int86 == (-1));
        org.junit.Assert.assertNotNull(strItor88);
        org.junit.Assert.assertNotNull(strItor89);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
        org.junit.Assert.assertEquals("'" + str94 + "' != '" + "" + "'", str94, "");
        org.junit.Assert.assertNotNull(strItor95);
    }

    @Test
    public void test01577() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01577");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder18.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder24.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder26.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.appendln(10L);
        int int32 = strBuilder26.indexOf("#4#a4#", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder26.insert(1, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder23.appendln(strBuilder35);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder36.appendln("java.io.IOException: ", (int) (short) 1, (int) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder40.appendSeparator(".IOExceptionfalse1001.0\n35.0\n1false0\n\n32");
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder43.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder45.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder45.insert(0, (double) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder49.replaceAll("StrTokenizer[not tokenized yet]", "StrTokenizer[#4#a4#]");
        int int54 = strBuilder52.lastIndexOf("10\n\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder55.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder57.clear();
        java.lang.Throwable throwable62 = null;
        java.io.IOException iOException63 = new java.io.IOException("", throwable62);
        java.io.IOException iOException64 = new java.io.IOException("#4#a4#", throwable62);
        java.io.IOException iOException65 = new java.io.IOException(throwable62);
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray69 = new java.lang.Object[] { 1.0f, iOException65, false, 100, strBuilder68 };
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder58.appendWithSeparators(objArray69, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder71.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder73.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder73.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder73.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder73.append(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder83 = strBuilder73.appendln(100.0d);
        org.apache.commons.lang3.text.StrBuilder strBuilder85 = strBuilder83.deleteAll("1.0java.io.IOExceptionfalse1001.0\n35.0\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder88 = strBuilder52.appendFixedWidthPadLeft((java.lang.Object) strBuilder85, (int) (short) -1, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder89 = strBuilder40.appendln(strBuilder88);
        org.apache.commons.lang3.text.StrBuilder strBuilder91 = strBuilder89.appendSeparator("va.io.IOExceptionfalse1001.");
        int int94 = strBuilder91.indexOf('.', 30);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(objArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray69), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray69), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertNotNull(strBuilder81);
        org.junit.Assert.assertNotNull(strBuilder83);
        org.junit.Assert.assertNotNull(strBuilder85);
        org.junit.Assert.assertNotNull(strBuilder88);
        org.junit.Assert.assertNotNull(strBuilder89);
        org.junit.Assert.assertNotNull(strBuilder91);
        org.junit.Assert.assertTrue("'" + int94 + "' != '" + 31 + "'", int94 == 31);
    }

    @Test
    public void test01578() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01578");
        char[] charArray6 = new char[] { 'a', '4', 'a', 'a', '#', ' ' };
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int10 = strBuilder7.indexOf(strMatcher9);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder7.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int16 = strBuilder13.indexOf(strMatcher15);
        int int17 = strBuilder7.indexOf(strMatcher15);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, strMatcher15);
        java.lang.String str19 = strTokenizer18.getContent();
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = strTokenizer18.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = strTokenizer18.setDelimiterChar('#');
        java.lang.String str23 = strTokenizer22.getContent();
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "a4aa# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "a4aa# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[a, 4, a, a, #,  ]");
        org.junit.Assert.assertNotNull(strMatcher9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strMatcher15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "a4aa# " + "'", str19, "a4aa# ");
        org.junit.Assert.assertNotNull(strMatcher20);
        org.junit.Assert.assertNotNull(strTokenizer22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "a4aa# " + "'", str23, "a4aa# ");
    }

    @Test
    public void test01579() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01579");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(" 10\n");
        org.junit.Assert.assertNotNull(strTokenizer1);
    }

    @Test
    public void test01580() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01580");
        char[] charArray6 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer8.setDelimiterString("hi!");
        java.lang.String str11 = strTokenizer10.nextToken();
        java.util.List<java.lang.String> strList12 = strTokenizer10.getTokenList();
        boolean boolean14 = strList12.add("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("");
        java.lang.String str17 = strTokenizer16.getContent();
        boolean boolean18 = strList12.equals((java.lang.Object) strTokenizer16);
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder21.deleteFirst("hi!");
        java.lang.String str24 = strBuilder23.getNullText();
        char[] charArray26 = new char[] { 'a' };
        char[] charArray27 = strBuilder23.getChars(charArray26);
        int int29 = strMatcher20.isMatch(charArray27, 100);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = strTokenizer16.setDelimiterMatcher(strMatcher20);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = strTokenizer30.setDelimiterChar('#');
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer32.set("100.0false\n");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: set() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "#4#a4#" + "'", str11, "#4#a4#");
        org.junit.Assert.assertNotNull(strList12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(strMatcher20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(charArray26);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray26), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray26), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray26), "[a]");
        org.junit.Assert.assertNotNull(charArray27);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray27), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray27), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray27), "[a]");
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNotNull(strTokenizer30);
        org.junit.Assert.assertNotNull(strTokenizer32);
    }

    @Test
    public void test01581() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01581");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder17.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder19.clear();
        java.lang.String str22 = strBuilder20.rightString((int) (short) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder3.append((java.lang.CharSequence) str22);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder25.insert(4, 5);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder25.appendln("0\nfalse32.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder30.appendln("100.01210\n", 1, (int) '\000');
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder30.append((float) 'I');
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
    }

    @Test
    public void test01582() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01582");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.appendln(10L);
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.appendln(strBuilder6, 1, (int) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder10.deleteFirst("hi!");
        java.lang.String str13 = strBuilder12.getNullText();
        char[] charArray15 = new char[] { 'a' };
        char[] charArray16 = strBuilder12.getChars(charArray15);
        char[] charArray21 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray22 = strBuilder12.getChars(charArray21);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder12.appendln("java.io.IOException: ");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder9.append(strBuilder24, 5, (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder9.appendSeparator('4', '1');
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder9.setNewLineText("");
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(charArray15);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray15), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray15), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray15), "[a]");
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[a]");
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray21), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray21), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray21), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray22), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray22), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray22), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder32);
    }

    @Test
    public void test01583() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01583");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = strTokenizer2.setQuoteChar('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.String str6 = strBuilder5.getNullText();
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder8.deleteFirst("hi!");
        java.lang.String str11 = strBuilder10.getNullText();
        char[] charArray13 = new char[] { 'a' };
        char[] charArray14 = strBuilder10.getChars(charArray13);
        int int18 = strMatcher7.isMatch(charArray14, 0, 0, (int) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder5.replaceAll(strMatcher7, "java.io.IOException: ");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = strTokenizer4.setTrimmerMatcher(strMatcher7);
        char[] charArray28 = new char[] { 'a', '4', 'a', 'a', '#', ' ' };
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher31 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int32 = strBuilder29.indexOf(strMatcher31);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder29.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher37 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int38 = strBuilder35.indexOf(strMatcher37);
        int int39 = strBuilder29.indexOf(strMatcher37);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = new org.apache.commons.lang3.text.StrTokenizer(charArray28, strMatcher37);
        char[] charArray47 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = new org.apache.commons.lang3.text.StrTokenizer(charArray47, ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher51 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = new org.apache.commons.lang3.text.StrTokenizer(charArray47, strMatcher51);
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = strTokenizer52.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher54 = strTokenizer52.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = strTokenizer40.setIgnoredMatcher(strMatcher54);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = new org.apache.commons.lang3.text.StrTokenizer("100.01210", strMatcher7, strMatcher54);
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer56.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: remove() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strTokenizer2);
        org.junit.Assert.assertNotNull(strTokenizer4);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(strMatcher7);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[a]");
        org.junit.Assert.assertNotNull(charArray14);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray14), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray14), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray14), "[a]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strTokenizer21);
        org.junit.Assert.assertNotNull(charArray28);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray28), "a4aa# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray28), "a4aa# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray28), "[a, 4, a, a, #,  ]");
        org.junit.Assert.assertNotNull(strMatcher31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strMatcher37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertNotNull(charArray47);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray47), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray47), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray47), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher51);
        org.junit.Assert.assertNotNull(strMatcher53);
        org.junit.Assert.assertNotNull(strMatcher54);
        org.junit.Assert.assertNotNull(strTokenizer55);
    }

    @Test
    public void test01584() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01584");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.append(false);
        char[] charArray16 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer(charArray16, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = strTokenizer18.setDelimiterString("hi!");
        boolean boolean21 = strTokenizer18.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder5.appendFixedWidthPadRight((java.lang.Object) strTokenizer18, 10, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int28 = strBuilder25.indexOf(strMatcher27);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder25.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder30.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder30.appendln((int) (short) 10);
        boolean boolean35 = strBuilder5.equalsIgnoreCase(strBuilder30);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder30.insert((int) (byte) 1, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder38.appendln(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder40.appendNewLine();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder40.insert(18, '3');
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 18");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder41);
    }

    @Test
    public void test01585() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01585");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = new org.apache.commons.lang3.text.StrTokenizer("#4#a4#java.io.IOException: zinekoTrtSeslaf \n");
    }

    @Test
    public void test01586() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01586");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append("#4#a4#");
        java.lang.String str7 = strBuilder0.leftString((int) (short) 100);
        int int9 = strBuilder0.lastIndexOf("StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder0.insert(0, (-1.0f));
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder0.appendSeparator(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder0.replaceAll("java.io.IOException: StrTokenizer[#4#a4#]", "#4#a4#");
        char[] charArray24 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = new org.apache.commons.lang3.text.StrTokenizer(charArray24, ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = new org.apache.commons.lang3.text.StrTokenizer(charArray24, strMatcher28);
        int int31 = strBuilder17.lastIndexOf(strMatcher28, 6);
        java.lang.String[] strArray35 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList36 = new java.util.ArrayList<java.lang.String>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList36, strArray35);
        char[] charArray44 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = new org.apache.commons.lang3.text.StrTokenizer(charArray44, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = strTokenizer46.setDelimiterString("hi!");
        boolean boolean49 = strTokenizer46.isIgnoreEmptyTokens();
        java.lang.String str50 = strTokenizer46.next();
        int int51 = strList36.indexOf((java.lang.Object) strTokenizer46);
        java.util.ListIterator<java.lang.String> strItor53 = strList36.listIterator((int) (byte) 0);
        java.util.Iterator<java.lang.String> strItor54 = strList36.iterator();
        java.lang.String[] strArray58 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList59 = new java.util.ArrayList<java.lang.String>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList59, strArray58);
        char[] charArray67 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer69 = new org.apache.commons.lang3.text.StrTokenizer(charArray67, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer71 = strTokenizer69.setDelimiterString("hi!");
        boolean boolean72 = strTokenizer69.isIgnoreEmptyTokens();
        java.lang.String str73 = strTokenizer69.next();
        int int74 = strList59.indexOf((java.lang.Object) strTokenizer69);
        boolean boolean75 = strList36.addAll((java.util.Collection<java.lang.String>) strList59);
        java.util.ListIterator<java.lang.String> strItor76 = strList59.listIterator();
        boolean boolean78 = strList59.add("");
        java.util.ListIterator<java.lang.String> strItor79 = strList59.listIterator();
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder80.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder83 = strBuilder82.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder85 = strBuilder82.appendln(10L);
        org.apache.commons.lang3.text.StrBuilder strBuilder88 = strBuilder82.appendPadding((int) (short) 10, '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder90 = strBuilder82.ensureCapacity(2);
        int int91 = strList59.lastIndexOf((java.lang.Object) strBuilder90);
        org.apache.commons.lang3.text.StrBuilder strBuilder92 = strBuilder17.appendAll((java.lang.Iterable<java.lang.String>) strList59);
        boolean boolean93 = strBuilder17.isEmpty();
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "#4#a4#" + "'", str7, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher28);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(charArray44);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray44), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray44), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray44), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "#4#a4#" + "'", str50, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1));
        org.junit.Assert.assertNotNull(strItor53);
        org.junit.Assert.assertNotNull(strItor54);
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(charArray67);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray67), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray67), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray67), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "#4#a4#" + "'", str73, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + (-1) + "'", int74 == (-1));
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(strItor76);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertNotNull(strItor79);
        org.junit.Assert.assertNotNull(strBuilder82);
        org.junit.Assert.assertNotNull(strBuilder83);
        org.junit.Assert.assertNotNull(strBuilder85);
        org.junit.Assert.assertNotNull(strBuilder88);
        org.junit.Assert.assertNotNull(strBuilder90);
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + (-1) + "'", int91 == (-1));
        org.junit.Assert.assertNotNull(strBuilder92);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
    }

    @Test
    public void test01587() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01587");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        java.lang.String str3 = strBuilder2.getNullText();
        char[] charArray5 = new char[] { 'a' };
        char[] charArray6 = strBuilder2.getChars(charArray5);
        char[] charArray11 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray12 = strBuilder2.getChars(charArray11);
        java.io.Reader reader13 = strBuilder2.asReader();
        reader13.mark(10);
        reader13.close();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder17.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder19.clear();
        char[] charArray26 = new char[] { 'a', 'a', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer(charArray26);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder19.appendln(charArray26);
        int int29 = reader13.read(charArray26);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder30.deleteFirst("hi!");
        java.lang.String str33 = strBuilder32.getNullText();
        char[] charArray35 = new char[] { 'a' };
        char[] charArray36 = strBuilder32.getChars(charArray35);
        char[] charArray41 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray42 = strBuilder32.getChars(charArray41);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = new org.apache.commons.lang3.text.StrTokenizer(charArray41);
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray41);
        int int45 = reader13.read(charArray41);
        boolean boolean46 = reader13.markSupported();
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder47.deleteFirst("hi!");
        java.lang.String str50 = strBuilder49.getNullText();
        char[] charArray52 = new char[] { 'a' };
        char[] charArray53 = strBuilder49.getChars(charArray52);
        char[] charArray58 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray59 = strBuilder49.getChars(charArray58);
        java.io.Reader reader60 = strBuilder49.asReader();
        reader60.mark(10);
        reader60.close();
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder64.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder66.clear();
        char[] charArray73 = new char[] { 'a', 'a', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer74 = new org.apache.commons.lang3.text.StrTokenizer(charArray73);
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder66.appendln(charArray73);
        int int76 = reader60.read(charArray73);
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder77.deleteFirst("hi!");
        java.lang.String str80 = strBuilder79.getNullText();
        char[] charArray82 = new char[] { 'a' };
        char[] charArray83 = strBuilder79.getChars(charArray82);
        char[] charArray88 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray89 = strBuilder79.getChars(charArray88);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer90 = new org.apache.commons.lang3.text.StrTokenizer(charArray88);
        org.apache.commons.lang3.text.StrMatcher strMatcher91 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray88);
        int int92 = reader60.read(charArray88);
        int int93 = reader13.read(charArray88);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer94 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray88);
        boolean boolean95 = strTokenizer94.hasPrevious();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[a]");
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(reader13);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(charArray26);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray26), "aa4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray26), "aa4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray26), "[a, a, 4, #, 4]");
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[a]");
        org.junit.Assert.assertNotNull(charArray36);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray36), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray36), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray36), "[a]");
        org.junit.Assert.assertNotNull(charArray41);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray41), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray41), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray41), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray42);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray42), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray42), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray42), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(strMatcher44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertNotNull(charArray52);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray52), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray52), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray52), "[a]");
        org.junit.Assert.assertNotNull(charArray53);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray53), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray53), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray53), "[a]");
        org.junit.Assert.assertNotNull(charArray58);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray58), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray58), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray58), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray59);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray59), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray59), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray59), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(reader60);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(charArray73);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray73), "aa4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray73), "aa4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray73), "[a, a, 4, #, 4]");
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + (-1) + "'", int76 == (-1));
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertNull(str80);
        org.junit.Assert.assertNotNull(charArray82);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray82), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray82), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray82), "[a]");
        org.junit.Assert.assertNotNull(charArray83);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray83), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray83), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray83), "[a]");
        org.junit.Assert.assertNotNull(charArray88);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray88), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray88), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray88), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray89);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray89), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray89), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray89), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(strMatcher91);
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + (-1) + "'", int92 == (-1));
        org.junit.Assert.assertTrue("'" + int93 + "' != '" + (-1) + "'", int93 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer94);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
    }

    @Test
    public void test01588() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01588");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder18.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.append("java.io.IOException: ");
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int30 = strBuilder27.indexOf(strMatcher29);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder27.append("#4#a4#");
        java.lang.String str34 = strBuilder27.leftString((int) (short) 100);
        int int36 = strBuilder27.lastIndexOf("StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder27.insert(0, (-1.0f));
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder27.appendSeparator(' ');
        char[] charArray48 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = new org.apache.commons.lang3.text.StrTokenizer(charArray48, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = strTokenizer50.setDelimiterString("hi!");
        java.lang.String str53 = strTokenizer52.nextToken();
        java.util.List<java.lang.String> strList54 = strTokenizer52.getTokenList();
        org.apache.commons.lang3.text.StrMatcher strMatcher55 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = strTokenizer52.setTrimmerMatcher(strMatcher55);
        char[] charArray63 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer65 = new org.apache.commons.lang3.text.StrTokenizer(charArray63, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer66 = new org.apache.commons.lang3.text.StrTokenizer(charArray63);
        int int68 = strMatcher55.isMatch(charArray63, 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder41.append(charArray63);
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder69.append(0.0d);
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder23.append((java.lang.Object) 0.0d);
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder23.appendln("0java.io.IOExceptionfalse100");
        int int76 = strBuilder23.indexOf('#');
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strMatcher29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "#4#a4#" + "'", str34, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(charArray48);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray48), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray48), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray48), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer52);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "#4#a4#" + "'", str53, "#4#a4#");
        org.junit.Assert.assertNotNull(strList54);
        org.junit.Assert.assertNotNull(strMatcher55);
        org.junit.Assert.assertNotNull(strTokenizer56);
        org.junit.Assert.assertNotNull(charArray63);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray63), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray63), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray63), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 0 + "'", int68 == 0);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + (-1) + "'", int76 == (-1));
    }

    @Test
    public void test01589() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01589");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.appendln((int) (short) 10);
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.spaceMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder5.replace(strMatcher10, "StrTokenizer[#4#a4#]", (int) (short) 1, 1, (int) (byte) 10);
        java.util.stream.IntStream intStream16 = strBuilder5.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder5.deleteAll('4');
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder18.insert(31, (double) 32);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 31");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(intStream16);
        org.junit.Assert.assertNotNull(strBuilder18);
    }

    @Test
    public void test01590() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01590");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.appendln((int) (short) 10);
        char[] charArray16 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer(charArray16, ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer(charArray16, strMatcher20);
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = strTokenizer21.getIgnoredMatcher();
        int int24 = strBuilder5.indexOf(strMatcher22, (int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder5.append(100.0d);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder5.append((int) '1');
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence31 = strBuilder28.subSequence((int) '0', 65);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 65");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher20);
        org.junit.Assert.assertNotNull(strMatcher22);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
    }

    @Test
    public void test01591() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01591");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.String str5 = strBuilder3.rightString((int) (short) -1);
        java.lang.String str7 = strBuilder3.rightString((int) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder3.append((double) (byte) 100);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = new org.apache.commons.lang3.text.StrTokenizer("4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder3.appendFixedWidthPadLeft((java.lang.Object) "4#", 51, '3');
        boolean boolean16 = strBuilder3.endsWith("100.0false");
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    }

    @Test
    public void test01592() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01592");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder16.appendln(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder20.append(false);
        java.io.Writer writer23 = strBuilder22.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.appendNull();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = strBuilder24.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder26.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder28.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder28.insert(0, (double) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder32.replaceAll("StrTokenizer[not tokenized yet]", "StrTokenizer[#4#a4#]");
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder36.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder38.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder38.appendln(10L);
        int int44 = strBuilder38.indexOf("#4#a4#", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder38.insert(1, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher50 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int51 = strBuilder48.indexOf(strMatcher50);
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder48.append("#4#a4#");
        java.lang.String str55 = strBuilder48.leftString((int) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher58 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int59 = strBuilder56.indexOf(strMatcher58);
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder56.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder61.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder61.append(false);
        char[] charArray72 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer74 = new org.apache.commons.lang3.text.StrTokenizer(charArray72, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer76 = strTokenizer74.setDelimiterString("hi!");
        boolean boolean77 = strTokenizer74.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder61.appendFixedWidthPadRight((java.lang.Object) strTokenizer74, 10, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher83 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int84 = strBuilder81.indexOf(strMatcher83);
        org.apache.commons.lang3.text.StrBuilder strBuilder86 = strBuilder81.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder88 = strBuilder86.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder90 = strBuilder86.appendln((int) (short) 10);
        boolean boolean91 = strBuilder61.equalsIgnoreCase(strBuilder86);
        org.apache.commons.lang3.text.StrBuilder strBuilder92 = strBuilder61.reverse();
        java.lang.StringBuffer stringBuffer93 = strBuilder92.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder96 = strBuilder48.append(stringBuffer93, (int) (byte) 0, 2);
        org.apache.commons.lang3.text.StrBuilder strBuilder97 = strBuilder47.append(stringBuffer93);
        org.apache.commons.lang3.text.StrBuilder strBuilder98 = strBuilder32.append((java.lang.Object) stringBuffer93);
        org.apache.commons.lang3.text.StrBuilder strBuilder99 = strBuilder24.append(stringBuffer93);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(writer23);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strTokenizer25);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strMatcher50);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1));
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "#4#a4#" + "'", str55, "#4#a4#");
        org.junit.Assert.assertNotNull(strMatcher58);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-1) + "'", int59 == (-1));
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(charArray72);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray72), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray72), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray72), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertNotNull(strMatcher83);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + (-1) + "'", int84 == (-1));
        org.junit.Assert.assertNotNull(strBuilder86);
        org.junit.Assert.assertNotNull(strBuilder88);
        org.junit.Assert.assertNotNull(strBuilder90);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertNotNull(strBuilder92);
        org.junit.Assert.assertNotNull(stringBuffer93);
        org.junit.Assert.assertEquals(stringBuffer93.toString(), "zinekoTrtSeslaf ");
        org.junit.Assert.assertNotNull(strBuilder96);
        org.junit.Assert.assertNotNull(strBuilder97);
        org.junit.Assert.assertNotNull(strBuilder98);
        org.junit.Assert.assertNotNull(strBuilder99);
    }

    @Test
    public void test01593() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01593");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder2.insert(0, (double) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder6.appendFixedWidthPadRight((java.lang.Object) 100.0d, 1, '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder10.append(2);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder13.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder15.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.appendln(10L);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.deleteFirst("");
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = org.apache.commons.lang3.text.StrMatcher.spaceMatcher();
        int int23 = strBuilder18.indexOf(strMatcher21, 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder10.replace(strMatcher21, "java.io.IOException: ", (int) (byte) 1, (int) (byte) 10, (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher31 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int32 = strBuilder29.indexOf(strMatcher31);
        char[] charArray39 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = new org.apache.commons.lang3.text.StrTokenizer(charArray39, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder29.appendAll((java.util.Iterator<java.lang.String>) strTokenizer41);
        java.lang.String str45 = strBuilder29.midString((int) (byte) 1, (-1));
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder46.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder48.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder48.appendln(10L);
        int int54 = strBuilder48.indexOf("#4#a4#", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder48.appendSeparator("", 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder48.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder48.append("java.io.IOException: ");
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder29.append((java.lang.Object) strBuilder60);
        boolean boolean62 = strBuilder10.equals((java.lang.Object) strBuilder61);
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher65 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int66 = strBuilder63.indexOf(strMatcher65);
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder63.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder68.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder70.deleteFirst('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder70.append('4');
        org.apache.commons.lang3.text.StrMatcher strMatcher75 = org.apache.commons.lang3.text.StrMatcher.quoteMatcher();
        int int77 = strBuilder74.lastIndexOf(strMatcher75, (int) (short) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder61.replace(strMatcher75, "a", 2, 15, (int) 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder84 = strBuilder82.appendln((double) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder86 = strBuilder82.ensureCapacity(24);
        int int87 = strBuilder86.size();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strMatcher31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNotNull(charArray39);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray39), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray39), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray39), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "" + "'", str45, "");
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(strMatcher65);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + (-1) + "'", int66 == (-1));
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(strMatcher75);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + (-1) + "'", int77 == (-1));
        org.junit.Assert.assertNotNull(strBuilder82);
        org.junit.Assert.assertNotNull(strBuilder84);
        org.junit.Assert.assertNotNull(strBuilder86);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 32 + "'", int87 == 32);
    }

    @Test
    public void test01594() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01594");
        java.lang.String[] strArray3 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList4 = new java.util.ArrayList<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        char[] charArray12 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strTokenizer14.setDelimiterString("hi!");
        boolean boolean17 = strTokenizer14.isIgnoreEmptyTokens();
        java.lang.String str18 = strTokenizer14.next();
        int int19 = strList4.indexOf((java.lang.Object) strTokenizer14);
        java.util.ListIterator<java.lang.String> strItor21 = strList4.listIterator((int) (byte) 0);
        java.util.Iterator<java.lang.String> strItor22 = strList4.iterator();
        java.lang.String[] strArray26 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList27 = new java.util.ArrayList<java.lang.String>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList27, strArray26);
        char[] charArray35 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = new org.apache.commons.lang3.text.StrTokenizer(charArray35, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = strTokenizer37.setDelimiterString("hi!");
        boolean boolean40 = strTokenizer37.isIgnoreEmptyTokens();
        java.lang.String str41 = strTokenizer37.next();
        int int42 = strList27.indexOf((java.lang.Object) strTokenizer37);
        boolean boolean43 = strList4.addAll((java.util.Collection<java.lang.String>) strList27);
        java.util.ListIterator<java.lang.String> strItor44 = strList27.listIterator();
        boolean boolean46 = strList27.add("");
        int int47 = strList27.size();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[#4#a4#]", "StrTokenizer[not tokenized yet]");
        boolean boolean51 = strTokenizer50.isEmptyTokenAsNull();
        java.util.List<java.lang.String> strList52 = strTokenizer50.getTokenList();
        int int53 = strList52.size();
        char[] charArray60 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer62 = new org.apache.commons.lang3.text.StrTokenizer(charArray60, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = strTokenizer62.setDelimiterString("hi!");
        java.lang.String str65 = strTokenizer64.nextToken();
        java.util.List<java.lang.String> strList66 = strTokenizer64.getTokenList();
        boolean boolean68 = strList66.add("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer70 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("");
        java.lang.String str71 = strTokenizer70.getContent();
        boolean boolean72 = strList66.equals((java.lang.Object) strTokenizer70);
        org.apache.commons.lang3.text.StrMatcher strMatcher73 = org.apache.commons.lang3.text.StrMatcher.singleQuoteMatcher();
        boolean boolean74 = strList66.equals((java.lang.Object) strMatcher73);
        boolean boolean75 = strList52.addAll((java.util.Collection<java.lang.String>) strList66);
        boolean boolean76 = strList27.retainAll((java.util.Collection<java.lang.String>) strList66);
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.lang.String> strList79 = strList27.subList(0, 11);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: toIndex = 11");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "#4#a4#" + "'", str18, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(strItor21);
        org.junit.Assert.assertNotNull(strItor22);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "#4#a4#" + "'", str41, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(strItor44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 4 + "'", int47 == 4);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(strList52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 1 + "'", int53 == 1);
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer64);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "#4#a4#" + "'", str65, "#4#a4#");
        org.junit.Assert.assertNotNull(strList66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(strTokenizer70);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "" + "'", str71, "");
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(strMatcher73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
    }

    @Test
    public void test01595() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01595");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        java.lang.String str3 = strBuilder2.getNullText();
        char[] charArray5 = new char[] { 'a' };
        char[] charArray6 = strBuilder2.getChars(charArray5);
        char[] charArray11 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray12 = strBuilder2.getChars(charArray11);
        java.io.Reader reader13 = strBuilder2.asReader();
        reader13.mark((int) (short) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.deleteFirst("hi!");
        java.lang.String str19 = strBuilder18.getNullText();
        char[] charArray21 = new char[] { 'a' };
        char[] charArray22 = strBuilder18.getChars(charArray21);
        char[] charArray27 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray28 = strBuilder18.getChars(charArray27);
        java.io.Reader reader29 = strBuilder18.asReader();
        reader29.mark(10);
        reader29.close();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder33.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder35.clear();
        char[] charArray42 = new char[] { 'a', 'a', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = new org.apache.commons.lang3.text.StrTokenizer(charArray42);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder35.appendln(charArray42);
        int int45 = reader29.read(charArray42);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = new org.apache.commons.lang3.text.StrTokenizer(charArray42, ' ', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray42);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = new org.apache.commons.lang3.text.StrTokenizer(charArray42, '0', 'a');
        // The following exception was thrown during execution in test generation
        try {
            int int55 = reader13.read(charArray42, (int) (short) 100, 66);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: null");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[a]");
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(reader13);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray21), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray21), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray21), "[a]");
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray22), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray22), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray22), "[a]");
        org.junit.Assert.assertNotNull(charArray27);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray27), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray27), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray27), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray28);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray28), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray28), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray28), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(reader29);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(charArray42);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray42), "aa4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray42), "aa4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray42), "[a, a, 4, #, 4]");
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer49);
    }

    @Test
    public void test01596() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01596");
        java.lang.String[] strArray3 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList4 = new java.util.ArrayList<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        char[] charArray12 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strTokenizer14.setDelimiterString("hi!");
        boolean boolean17 = strTokenizer14.isIgnoreEmptyTokens();
        java.lang.String str18 = strTokenizer14.next();
        int int19 = strList4.indexOf((java.lang.Object) strTokenizer14);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder20.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder22.clear();
        java.lang.Throwable throwable27 = null;
        java.io.IOException iOException28 = new java.io.IOException("", throwable27);
        java.io.IOException iOException29 = new java.io.IOException("#4#a4#", throwable27);
        java.io.IOException iOException30 = new java.io.IOException(throwable27);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray34 = new java.lang.Object[] { 1.0f, iOException30, false, 100, strBuilder33 };
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder23.appendWithSeparators(objArray34, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder36.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder38.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder38.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder38.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder38.replaceFirst('#', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder38.setLength((int) ' ');
        int int50 = strList4.lastIndexOf((java.lang.Object) strBuilder38);
        char[] charArray57 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer59 = new org.apache.commons.lang3.text.StrTokenizer(charArray57, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer61 = strTokenizer59.setDelimiterString("hi!");
        java.lang.String str62 = strTokenizer61.nextToken();
        java.util.List<java.lang.String> strList63 = strTokenizer61.getTokenList();
        boolean boolean65 = strList63.add("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer67 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("");
        java.lang.String str68 = strTokenizer67.getContent();
        boolean boolean69 = strList63.equals((java.lang.Object) strTokenizer67);
        org.apache.commons.lang3.text.StrMatcher strMatcher70 = org.apache.commons.lang3.text.StrMatcher.singleQuoteMatcher();
        boolean boolean71 = strList63.equals((java.lang.Object) strMatcher70);
        java.util.stream.Stream<java.lang.String> strStream72 = strList63.parallelStream();
        boolean boolean73 = strList4.removeAll((java.util.Collection<java.lang.String>) strList63);
        java.util.Iterator<java.lang.String> strItor74 = strList63.iterator();
        java.util.function.UnaryOperator<java.lang.String> strUnaryOperator75 = null;
        // The following exception was thrown during execution in test generation
        try {
            strList63.replaceAll(strUnaryOperator75);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "#4#a4#" + "'", str18, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(objArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray34), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray34), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer61);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "#4#a4#" + "'", str62, "#4#a4#");
        org.junit.Assert.assertNotNull(strList63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(strTokenizer67);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "" + "'", str68, "");
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(strMatcher70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(strStream72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(strItor74);
    }

    @Test
    public void test01597() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01597");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer(".0java.io.IOExceptionfalse1000", '#');
    }

    @Test
    public void test01598() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01598");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("aaaaaaaaaaaaaaaaaaaaaaaa100", "StrTokenizer[100.0\n]");
    }

    @Test
    public void test01599() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01599");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.appendln(10L);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteFirst("");
        char[] charArray8 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder7.appendln(charArray8);
        boolean boolean10 = strBuilder7.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder12.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder14.clear();
        boolean boolean16 = strBuilder15.isEmpty();
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder19.deleteFirst("hi!");
        java.lang.String str22 = strBuilder21.getNullText();
        char[] charArray24 = new char[] { 'a' };
        char[] charArray25 = strBuilder21.getChars(charArray24);
        int int27 = strMatcher18.isMatch(charArray25, 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder15.append(charArray25);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder7.insert((int) (byte) 1, charArray25);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer(charArray25, "StrTokenizer[#4#a4#]");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = strTokenizer31.setDelimiterChar('a');
        int int34 = strTokenizer31.nextIndex();
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = strTokenizer31.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = strTokenizer31.reset();
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer36.set("1.0java.io.IOExceptionfalse1001.0\n35.0\n1false0\n\n");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: set() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[a]");
        org.junit.Assert.assertNotNull(charArray25);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray25), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray25), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray25), "[a]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strTokenizer33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertNotNull(strTokenizer36);
    }

    @Test
    public void test01600() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01600");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("0java.io.IOExceptionfalse100");
    }

    @Test
    public void test01601() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01601");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.String str1 = strBuilder0.getNullText();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder2.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher5 = org.apache.commons.lang3.text.StrMatcher.splitMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder2.deleteAll(strMatcher5);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder0.appendln((java.lang.Object) strBuilder2);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder0.appendPadding(66, ' ');
        char[] charArray17 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = new org.apache.commons.lang3.text.StrTokenizer(charArray17, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = strTokenizer19.setDelimiterString("hi!");
        boolean boolean22 = strTokenizer19.isIgnoreEmptyTokens();
        int int23 = strTokenizer19.nextIndex();
        int int24 = strTokenizer19.nextIndex();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = strTokenizer19.setIgnoreEmptyTokens(false);
        int int27 = strTokenizer19.previousIndex();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = strTokenizer19.setIgnoredChar('4');
        java.lang.String[] strArray30 = strTokenizer19.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder10.appendAll((java.lang.Object[]) strArray30);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder32.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder34.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder35.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder36.appendln((long) '#');
        java.util.stream.IntStream intStream39 = strBuilder36.chars();
        boolean boolean41 = strBuilder36.contains('1');
        java.lang.String str43 = strBuilder36.substring((int) (byte) 0);
        java.lang.StringBuffer stringBuffer44 = strBuilder36.toStringBuffer();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder10.append((java.lang.CharSequence) strBuilder36, 22, (int) '1');
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: startIndex must be valid");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strMatcher5);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray17), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray17), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray17), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNotNull(strTokenizer26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer29);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(intStream39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "35\n" + "'", str43, "35\n");
        org.junit.Assert.assertNotNull(stringBuffer44);
        org.junit.Assert.assertEquals(stringBuffer44.toString(), "35\n");
    }

    @Test
    public void test01602() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01602");
        java.lang.String[] strArray3 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList4 = new java.util.ArrayList<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        char[] charArray12 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strTokenizer14.setDelimiterString("hi!");
        boolean boolean17 = strTokenizer14.isIgnoreEmptyTokens();
        java.lang.String str18 = strTokenizer14.next();
        int int19 = strList4.indexOf((java.lang.Object) strTokenizer14);
        java.util.ListIterator<java.lang.String> strItor21 = strList4.listIterator((int) (byte) 0);
        java.util.Iterator<java.lang.String> strItor22 = strList4.iterator();
        java.lang.String[] strArray26 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList27 = new java.util.ArrayList<java.lang.String>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList27, strArray26);
        char[] charArray35 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = new org.apache.commons.lang3.text.StrTokenizer(charArray35, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = strTokenizer37.setDelimiterString("hi!");
        boolean boolean40 = strTokenizer37.isIgnoreEmptyTokens();
        java.lang.String str41 = strTokenizer37.next();
        int int42 = strList27.indexOf((java.lang.Object) strTokenizer37);
        boolean boolean43 = strList4.addAll((java.util.Collection<java.lang.String>) strList27);
        java.util.ListIterator<java.lang.String> strItor44 = strList27.listIterator();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher47 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int48 = strBuilder45.indexOf(strMatcher47);
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder45.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int54 = strBuilder51.indexOf(strMatcher53);
        int int55 = strBuilder45.indexOf(strMatcher53);
        int int56 = strList27.indexOf((java.lang.Object) strBuilder45);
        java.util.ListIterator<java.lang.String> strItor57 = strList27.listIterator();
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder58.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder60.clear();
        java.lang.String str63 = strBuilder61.rightString((int) (short) -1);
        java.lang.String str65 = strBuilder61.rightString((int) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder61.append((double) (byte) 100);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer69 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer71 = strTokenizer69.setIgnoreEmptyTokens(false);
        int int72 = strTokenizer69.previousIndex();
        java.lang.Object obj73 = strTokenizer69.clone();
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder61.append((java.lang.Object) strTokenizer69);
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder74.reverse();
        java.io.Reader reader76 = strBuilder75.asReader();
        int int77 = strList27.lastIndexOf((java.lang.Object) reader76);
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.lang.String> strList80 = strList27.subList(46, 32);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: toIndex = 32");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "#4#a4#" + "'", str18, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(strItor21);
        org.junit.Assert.assertNotNull(strItor22);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "#4#a4#" + "'", str41, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(strItor44);
        org.junit.Assert.assertNotNull(strMatcher47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strMatcher53);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1));
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1));
        org.junit.Assert.assertNotNull(strItor57);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "" + "'", str63, "");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "" + "'", str65, "");
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strTokenizer69);
        org.junit.Assert.assertNotNull(strTokenizer71);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + (-1) + "'", int72 == (-1));
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertEquals(obj73.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj73), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj73), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNotNull(reader76);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + (-1) + "'", int77 == (-1));
    }

    @Test
    public void test01603() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01603");
        char[] charArray6 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer8.setDelimiterString("hi!");
        java.lang.String str11 = strTokenizer10.nextToken();
        java.util.List<java.lang.String> strList12 = strTokenizer10.getTokenList();
        java.util.ListIterator<java.lang.String> strItor13 = strList12.listIterator();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int17 = strBuilder14.indexOf(strMatcher16);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder14.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder19.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder19.append(false);
        char[] charArray30 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = new org.apache.commons.lang3.text.StrTokenizer(charArray30, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = strTokenizer32.setDelimiterString("hi!");
        boolean boolean35 = strTokenizer32.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder19.appendFixedWidthPadRight((java.lang.Object) strTokenizer32, 10, ' ');
        int int39 = strTokenizer32.previousIndex();
        boolean boolean40 = strTokenizer32.hasNext();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = strTokenizer32.reset("#4#a4#");
        java.util.List<java.lang.String> strList43 = strTokenizer42.getTokenList();
        boolean boolean44 = strList43.isEmpty();
        boolean boolean45 = strList12.retainAll((java.util.Collection<java.lang.String>) strList43);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder46.deleteFirst("hi!");
        java.lang.String str49 = strBuilder48.getNullText();
        char[] charArray51 = new char[] { 'a' };
        char[] charArray52 = strBuilder48.getChars(charArray51);
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder48.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder54.deleteFirst(' ');
        int int57 = strList12.lastIndexOf((java.lang.Object) ' ');
        java.lang.String str59 = strList12.get(0);
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "#4#a4#" + "'", str11, "#4#a4#");
        org.junit.Assert.assertNotNull(strList12);
        org.junit.Assert.assertNotNull(strItor13);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray30), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray30), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray30), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(strTokenizer42);
        org.junit.Assert.assertNotNull(strList43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertNotNull(charArray51);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray51), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray51), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray51), "[a]");
        org.junit.Assert.assertNotNull(charArray52);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray52), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray52), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray52), "[a]");
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "#4#a4#" + "'", str59, "#4#a4#");
    }

    @Test
    public void test01604() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01604");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        java.lang.String str3 = strBuilder2.getNullText();
        char[] charArray5 = new char[] { 'a' };
        char[] charArray6 = strBuilder2.getChars(charArray5);
        char[] charArray11 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray12 = strBuilder2.getChars(charArray11);
        java.io.Reader reader13 = strBuilder2.asReader();
        reader13.mark((int) (byte) 0);
        char[] charArray22 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = new org.apache.commons.lang3.text.StrTokenizer(charArray22, ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer(charArray22, strMatcher26);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int31 = strBuilder28.indexOf(strMatcher30);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder28.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int37 = strBuilder34.indexOf(strMatcher36);
        int int38 = strBuilder28.indexOf(strMatcher36);
        char[] charArray45 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = new org.apache.commons.lang3.text.StrTokenizer(charArray45, ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher49 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = new org.apache.commons.lang3.text.StrTokenizer(charArray45, strMatcher49);
        org.apache.commons.lang3.text.StrMatcher strMatcher51 = strTokenizer50.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = new org.apache.commons.lang3.text.StrTokenizer(charArray22, strMatcher36, strMatcher51);
        int int53 = reader13.read(charArray22);
        boolean boolean54 = reader13.ready();
        boolean boolean55 = reader13.markSupported();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[a]");
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(reader13);
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray22), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray22), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray22), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strMatcher36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNotNull(charArray45);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray45), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray45), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray45), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher49);
        org.junit.Assert.assertNotNull(strMatcher51);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
    }

    @Test
    public void test01605() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01605");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        java.lang.String str3 = strBuilder2.getNullText();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.appendSeparator('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder6.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder8.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder8.appendln(10L);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.deleteFirst("");
        int int15 = strBuilder11.indexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder11.appendSeparator("java.io.IOException: ", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder18.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder19.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder20.ensureCapacity(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder22.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder22.appendln((int) (short) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder25.appendln((int) (byte) 0);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder5.append((java.lang.CharSequence) strBuilder25, 27, 39);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: length must be valid");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder27);
    }

    @Test
    public void test01606() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01606");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder18.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder18.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder24.insert((int) (byte) 0, (int) (short) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder28.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder30.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder30.appendln(10L);
        int int36 = strBuilder30.indexOf("#4#a4#", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder30.insert(1, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int43 = strBuilder40.indexOf(strMatcher42);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder40.append("#4#a4#");
        java.lang.String str47 = strBuilder40.leftString((int) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher50 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int51 = strBuilder48.indexOf(strMatcher50);
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder48.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder53.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder53.append(false);
        char[] charArray64 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer66 = new org.apache.commons.lang3.text.StrTokenizer(charArray64, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer68 = strTokenizer66.setDelimiterString("hi!");
        boolean boolean69 = strTokenizer66.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder53.appendFixedWidthPadRight((java.lang.Object) strTokenizer66, 10, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher75 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int76 = strBuilder73.indexOf(strMatcher75);
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder73.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder78.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder78.appendln((int) (short) 10);
        boolean boolean83 = strBuilder53.equalsIgnoreCase(strBuilder78);
        org.apache.commons.lang3.text.StrBuilder strBuilder84 = strBuilder53.reverse();
        java.lang.StringBuffer stringBuffer85 = strBuilder84.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder88 = strBuilder40.append(stringBuffer85, (int) (byte) 0, 2);
        org.apache.commons.lang3.text.StrBuilder strBuilder89 = strBuilder39.append(stringBuffer85);
        org.apache.commons.lang3.text.StrBuilder strBuilder92 = strBuilder27.appendln(stringBuffer85, 2, (int) (short) 10);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence95 = strBuilder92.subSequence(37, 32);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -5");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strMatcher42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "#4#a4#" + "'", str47, "#4#a4#");
        org.junit.Assert.assertNotNull(strMatcher50);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1));
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(charArray64);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray64), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray64), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray64), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strMatcher75);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + (-1) + "'", int76 == (-1));
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertNotNull(strBuilder82);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(strBuilder84);
        org.junit.Assert.assertNotNull(stringBuffer85);
        org.junit.Assert.assertEquals(stringBuffer85.toString(), "zinekoTrtSeslaf ");
        org.junit.Assert.assertNotNull(strBuilder88);
        org.junit.Assert.assertNotNull(strBuilder89);
        org.junit.Assert.assertNotNull(strBuilder92);
    }

    @Test
    public void test01607() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01607");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("", '1', '1');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = new org.apache.commons.lang3.text.StrTokenizer(" ", ".0jav");
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = strTokenizer6.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer3.setTrimmerMatcher(strMatcher7);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str9 = strTokenizer8.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher7);
        org.junit.Assert.assertNotNull(strTokenizer8);
    }

    @Test
    public void test01608() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01608");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int4 = strBuilder1.indexOf(strMatcher3);
        char[] charArray11 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = new org.apache.commons.lang3.text.StrTokenizer(charArray11, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder1.appendAll((java.util.Iterator<java.lang.String>) strTokenizer13);
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("#4#a4#");
        int int17 = strBuilder14.indexOf(strMatcher16);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer("java.io.IOException: hi!", strMatcher16);
        java.lang.String[] strArray19 = strTokenizer18.getTokenArray();
        org.junit.Assert.assertNotNull(strMatcher3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(strArray19);
    }

    @Test
    public void test01609() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01609");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = strTokenizer1.setIgnoreEmptyTokens(false);
        java.lang.String str4 = strTokenizer1.nextToken();
        char[] charArray10 = new char[] { 'a', 'a', '#', '#', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = strTokenizer1.reset(charArray10);
        java.lang.String str12 = strTokenizer11.next();
        org.junit.Assert.assertNotNull(strTokenizer1);
        org.junit.Assert.assertNotNull(strTokenizer3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "aa## ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "aa## ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[a, a, #, #,  ]");
        org.junit.Assert.assertNotNull(strTokenizer11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "aa##" + "'", str12, "aa##");
    }

    @Test
    public void test01610() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01610");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.append(false);
        char[] charArray16 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer(charArray16, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = strTokenizer18.setDelimiterString("hi!");
        boolean boolean21 = strTokenizer18.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder5.appendFixedWidthPadRight((java.lang.Object) strTokenizer18, 10, ' ');
        int int25 = strTokenizer18.previousIndex();
        boolean boolean26 = strTokenizer18.hasNext();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = strTokenizer18.reset("#4#a4#");
        java.util.List<java.lang.String> strList29 = strTokenizer18.getTokenList();
        java.lang.Object[] objArray30 = strList29.toArray();
        java.lang.String str33 = strList29.set(0, "#a4#-1");
        java.lang.reflect.Type[] typeArray34 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.reflect.Type[] typeArray35 = strList29.toArray(typeArray34);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(strTokenizer28);
        org.junit.Assert.assertNotNull(strList29);
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray30), "[#4#a4#]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray30), "[#4#a4#]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "#4#a4#" + "'", str33, "#4#a4#");
    }

    @Test
    public void test01611() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01611");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.appendln(10L);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteFirst("");
        char[] charArray8 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder7.appendln(charArray8);
        int int10 = strBuilder9.capacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.deleteFirst("hi!");
        java.lang.String str14 = strBuilder13.getNullText();
        char[] charArray16 = new char[] { 'a' };
        char[] charArray17 = strBuilder13.getChars(charArray16);
        char[] charArray22 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray23 = strBuilder13.getChars(charArray22);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder24.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder26.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder26.insert(0, (double) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder30.appendFixedWidthPadRight((java.lang.Object) 100.0d, 1, '4');
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        int int37 = strBuilder34.lastIndexOf(strMatcher35, (int) (short) 10);
        boolean boolean38 = strBuilder13.contains(strMatcher35);
        int int39 = strBuilder9.lastIndexOf(strMatcher35);
        java.io.Reader reader40 = strBuilder9.asReader();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("");
        java.lang.String str43 = strTokenizer42.getContent();
        char[] charArray49 = new char[] { 'a', 'a', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = new org.apache.commons.lang3.text.StrTokenizer(charArray49);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = strTokenizer42.reset(charArray49);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = new org.apache.commons.lang3.text.StrTokenizer(charArray49, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = new org.apache.commons.lang3.text.StrTokenizer(charArray49, '4', '#');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray49);
        // The following exception was thrown during execution in test generation
        try {
            int int60 = reader40.read(charArray49, 70, 4);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: null");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 32 + "'", int10 == 32);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[a]");
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray17), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray17), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray17), "[a]");
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray22), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray22), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray22), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 3 + "'", int39 == 3);
        org.junit.Assert.assertNotNull(reader40);
        org.junit.Assert.assertNotNull(strTokenizer42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "" + "'", str43, "");
        org.junit.Assert.assertNotNull(charArray49);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray49), "aa4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray49), "aa4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray49), "[a, a, 4, #, 4]");
        org.junit.Assert.assertNotNull(strTokenizer51);
        org.junit.Assert.assertNotNull(strTokenizer57);
    }

    @Test
    public void test01612() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01612");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.appendln((int) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder5.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int15 = strBuilder12.indexOf(strMatcher14);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder11.deleteFirst(strMatcher14);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder16.minimizeCapacity();
        char[] charArray24 = new char[] { 'a', '4', 'a', 'a', '#', ' ' };
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int28 = strBuilder25.indexOf(strMatcher27);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder25.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int34 = strBuilder31.indexOf(strMatcher33);
        int int35 = strBuilder25.indexOf(strMatcher33);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = new org.apache.commons.lang3.text.StrTokenizer(charArray24, strMatcher33);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder16.replace(strMatcher33, "", 2, (int) (short) 100, 10);
        char[] charArray44 = strBuilder16.toCharArray((int) (byte) 0, (int) (byte) 0);
        org.apache.commons.lang3.text.StrMatcher strMatcher45 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder46.deleteFirst("hi!");
        java.lang.String str49 = strBuilder48.getNullText();
        char[] charArray51 = new char[] { 'a' };
        char[] charArray52 = strBuilder48.getChars(charArray51);
        int int56 = strMatcher45.isMatch(charArray52, 0, 0, (int) (byte) 10);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = new org.apache.commons.lang3.text.StrTokenizer(charArray44, strMatcher45);
        org.apache.commons.lang3.text.StrMatcher strMatcher58 = strTokenizer57.getTrimmerMatcher();
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer57.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: remove() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "a4aa# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "a4aa# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[a, 4, a, a, #,  ]");
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(charArray44);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray44), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray44), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray44), "[]");
        org.junit.Assert.assertNotNull(strMatcher45);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertNotNull(charArray51);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray51), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray51), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray51), "[a]");
        org.junit.Assert.assertNotNull(charArray52);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray52), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray52), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray52), "[a]");
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertNotNull(strMatcher58);
    }

    @Test
    public void test01613() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01613");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.appendln(10L);
        int int8 = strBuilder2.indexOf("#4#a4#", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder2.insert(1, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int15 = strBuilder12.indexOf(strMatcher14);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder12.append("#4#a4#");
        java.lang.String str19 = strBuilder12.leftString((int) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int23 = strBuilder20.indexOf(strMatcher22);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder20.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder25.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder25.append(false);
        char[] charArray36 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = new org.apache.commons.lang3.text.StrTokenizer(charArray36, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = strTokenizer38.setDelimiterString("hi!");
        boolean boolean41 = strTokenizer38.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder25.appendFixedWidthPadRight((java.lang.Object) strTokenizer38, 10, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher47 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int48 = strBuilder45.indexOf(strMatcher47);
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder45.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder50.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder50.appendln((int) (short) 10);
        boolean boolean55 = strBuilder25.equalsIgnoreCase(strBuilder50);
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder25.reverse();
        java.lang.StringBuffer stringBuffer57 = strBuilder56.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder12.append(stringBuffer57, (int) (byte) 0, 2);
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder11.append(stringBuffer57);
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher64 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int65 = strBuilder62.indexOf(strMatcher64);
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder62.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder67.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder67.append((int) (short) -1);
        boolean boolean72 = strBuilder11.equalsIgnoreCase(strBuilder71);
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder11.minimizeCapacity();
        int int75 = strBuilder73.indexOf("eptionfalse1001.0\n35.0\n1false0\n\n");
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder73.insert((int) (short) -1, '4');
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -1");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "#4#a4#" + "'", str19, "#4#a4#");
        org.junit.Assert.assertNotNull(strMatcher22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(charArray36);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray36), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray36), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray36), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strMatcher47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(stringBuffer57);
        org.junit.Assert.assertEquals(stringBuffer57.toString(), "zinekoTrtSeslaf ");
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strMatcher64);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + (-1) + "'", int65 == (-1));
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + (-1) + "'", int75 == (-1));
    }

    @Test
    public void test01614() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01614");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.append(false);
        char[] charArray16 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer(charArray16, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = strTokenizer18.setDelimiterString("hi!");
        boolean boolean21 = strTokenizer18.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder5.appendFixedWidthPadRight((java.lang.Object) strTokenizer18, 10, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int28 = strBuilder25.indexOf(strMatcher27);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder25.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder30.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder30.appendln((int) (short) 10);
        boolean boolean35 = strBuilder5.equalsIgnoreCase(strBuilder30);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder30.insert((int) (byte) 1, 'a');
        char char40 = strBuilder30.charAt(0);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = strBuilder30.asTokenizer();
        int int42 = strTokenizer41.nextIndex();
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer41.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: remove() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertTrue("'" + char40 + "' != '" + ' ' + "'", char40 == ' ');
        org.junit.Assert.assertNotNull(strTokenizer41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
    }

    @Test
    public void test01615() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01615");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder5.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str9 = strBuilder6.substring((int) (byte) 100, 16);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: end < start");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder6);
    }

    @Test
    public void test01616() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01616");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder18.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.insert(4, (double) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder26.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder26.replaceAll('a', '1');
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder30.appendFixedWidthPadLeft(48, 15, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher37 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int38 = strBuilder35.indexOf(strMatcher37);
        char[] charArray45 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = new org.apache.commons.lang3.text.StrTokenizer(charArray45, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder35.appendAll((java.util.Iterator<java.lang.String>) strTokenizer47);
        java.lang.String str51 = strBuilder35.midString((int) (byte) 1, (-1));
        char[] charArray58 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer60 = new org.apache.commons.lang3.text.StrTokenizer(charArray58, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer61 = new org.apache.commons.lang3.text.StrTokenizer(charArray58);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer63 = strTokenizer61.setDelimiterChar('a');
        org.apache.commons.lang3.text.StrMatcher strMatcher64 = strTokenizer63.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder35.replaceFirst(strMatcher64, "java.io.IOException: ");
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder35.appendSeparator("", "10\n\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder70.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher73 = org.apache.commons.lang3.text.StrMatcher.splitMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder70.deleteAll(strMatcher73);
        int int76 = strBuilder35.lastIndexOf(strMatcher73, (int) (byte) 0);
        org.apache.commons.lang3.text.StrMatcher strMatcher77 = org.apache.commons.lang3.text.StrMatcher.spaceMatcher();
        int int78 = strBuilder35.indexOf(strMatcher77);
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder30.replaceFirst(strMatcher77, "#4");
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strMatcher37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNotNull(charArray45);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray45), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray45), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray45), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "" + "'", str51, "");
        org.junit.Assert.assertNotNull(charArray58);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray58), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray58), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray58), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer63);
        org.junit.Assert.assertNotNull(strMatcher64);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strMatcher73);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + (-1) + "'", int76 == (-1));
        org.junit.Assert.assertNotNull(strMatcher77);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + (-1) + "'", int78 == (-1));
        org.junit.Assert.assertNotNull(strBuilder80);
    }

    @Test
    public void test01617() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01617");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder18.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder18.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder18.replaceFirst('#', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder18.setLength((int) ' ');
        int int31 = strBuilder29.lastIndexOf(" 10\n");
        int int33 = strBuilder29.lastIndexOf("StrTokenizer[1.0java.io.IOExceptionfalse1001.0]");
        java.lang.Class<?> wildcardClass34 = strBuilder29.getClass();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertNotNull(wildcardClass34);
    }

    @Test
    public void test01618() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01618");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[not tokenized yet]", "hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = strTokenizer2.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer2.setIgnoreEmptyTokens(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = strTokenizer2.reset();
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer6.add("java.io.IOException: ");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: add() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher3);
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strTokenizer6);
    }

    @Test
    public void test01619() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01619");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = strTokenizer1.setQuoteChar('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.String str5 = strBuilder4.getNullText();
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder7.deleteFirst("hi!");
        java.lang.String str10 = strBuilder9.getNullText();
        char[] charArray12 = new char[] { 'a' };
        char[] charArray13 = strBuilder9.getChars(charArray12);
        int int17 = strMatcher6.isMatch(charArray13, 0, 0, (int) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder4.replaceAll(strMatcher6, "java.io.IOException: ");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = strTokenizer3.setTrimmerMatcher(strMatcher6);
        boolean boolean21 = strTokenizer20.hasNext();
        org.junit.Assert.assertNotNull(strTokenizer1);
        org.junit.Assert.assertNotNull(strTokenizer3);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[a]");
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[a]");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strTokenizer20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
    }

    @Test
    public void test01620() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01620");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder17.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder19.clear();
        java.lang.String str22 = strBuilder20.rightString((int) (short) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder3.append((java.lang.CharSequence) str22);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.appendln(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int29 = strBuilder26.indexOf(strMatcher28);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder26.append("#4#a4#");
        boolean boolean32 = strBuilder25.equals(strBuilder31);
        int int35 = strBuilder31.indexOf('a', 32);
        boolean boolean37 = strBuilder31.endsWith("#4");
        int int40 = strBuilder31.lastIndexOf("", (int) (short) 0);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder31.setCharAt((int) (short) 10, '.');
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 10");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strMatcher28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
    }

    @Test
    public void test01621() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01621");
        char[] charArray6 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer8.setDelimiterString("hi!");
        java.lang.String str11 = strTokenizer10.nextToken();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = strTokenizer10.setIgnoredChar('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = strTokenizer13.reset("#4#a4#");
        boolean boolean16 = strTokenizer13.hasPrevious();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = strTokenizer13.setDelimiterChar('4');
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str19 = strTokenizer18.previous();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "#4#a4#" + "'", str11, "#4#a4#");
        org.junit.Assert.assertNotNull(strTokenizer13);
        org.junit.Assert.assertNotNull(strTokenizer15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(strTokenizer18);
    }

    @Test
    public void test01622() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01622");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.setLength((int) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder18.deleteFirst("0java.io.IOExceptionfalse100");
        java.lang.String[] strArray26 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList27 = new java.util.ArrayList<java.lang.String>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList27, strArray26);
        char[] charArray35 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = new org.apache.commons.lang3.text.StrTokenizer(charArray35, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = strTokenizer37.setDelimiterString("hi!");
        boolean boolean40 = strTokenizer37.isIgnoreEmptyTokens();
        java.lang.String str41 = strTokenizer37.next();
        int int42 = strList27.indexOf((java.lang.Object) strTokenizer37);
        java.util.ListIterator<java.lang.String> strItor44 = strList27.listIterator((int) (byte) 0);
        java.util.Iterator<java.lang.String> strItor45 = strList27.iterator();
        java.lang.String[] strArray49 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList50 = new java.util.ArrayList<java.lang.String>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList50, strArray49);
        char[] charArray58 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer60 = new org.apache.commons.lang3.text.StrTokenizer(charArray58, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer62 = strTokenizer60.setDelimiterString("hi!");
        boolean boolean63 = strTokenizer60.isIgnoreEmptyTokens();
        java.lang.String str64 = strTokenizer60.next();
        int int65 = strList50.indexOf((java.lang.Object) strTokenizer60);
        boolean boolean66 = strList27.addAll((java.util.Collection<java.lang.String>) strList50);
        java.util.ListIterator<java.lang.String> strItor67 = strList50.listIterator();
        boolean boolean69 = strList50.add("");
        int int70 = strList50.size();
        boolean boolean71 = strList50.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder22.appendWithSeparators((java.lang.Iterable<java.lang.String>) strList50, "aa");
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder73.append('I');
        java.lang.String str76 = strBuilder75.getNullText();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "#4#a4#" + "'", str41, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertNotNull(strItor44);
        org.junit.Assert.assertNotNull(strItor45);
        org.junit.Assert.assertNotNull(strArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(charArray58);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray58), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray58), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray58), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "#4#a4#" + "'", str64, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + (-1) + "'", int65 == (-1));
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(strItor67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 4 + "'", int70 == 4);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNull(str76);
    }

    @Test
    public void test01623() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01623");
        char[] charArray6 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer8.setDelimiterString("hi!");
        int int11 = strTokenizer8.previousIndex();
        char[] charArray18 = new char[] { 'a', '4', 'a', 'a', '#', ' ' };
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int22 = strBuilder19.indexOf(strMatcher21);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder19.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int28 = strBuilder25.indexOf(strMatcher27);
        int int29 = strBuilder19.indexOf(strMatcher27);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = new org.apache.commons.lang3.text.StrTokenizer(charArray18, strMatcher27);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int35 = strBuilder32.indexOf(strMatcher34);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = new org.apache.commons.lang3.text.StrTokenizer("#4#a4#", strMatcher34);
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("#4#a4#");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = new org.apache.commons.lang3.text.StrTokenizer(charArray18, strMatcher34, strMatcher38);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = strTokenizer8.setIgnoredMatcher(strMatcher38);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = strTokenizer8.setDelimiterChar('0');
        boolean boolean43 = strTokenizer42.isEmptyTokenAsNull();
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer42.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: remove() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(charArray18);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray18), "a4aa# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray18), "a4aa# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray18), "[a, 4, a, a, #,  ]");
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertNotNull(strMatcher34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertNotNull(strMatcher38);
        org.junit.Assert.assertNotNull(strTokenizer40);
        org.junit.Assert.assertNotNull(strTokenizer42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
    }

    @Test
    public void test01624() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01624");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.appendln(10L);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder7.replaceFirst('a', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = new org.apache.commons.lang3.text.StrTokenizer("hi!");
        java.lang.String str13 = strTokenizer12.previousToken();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = strTokenizer12.setQuoteChar(' ');
        java.lang.String[] strArray19 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList20 = new java.util.ArrayList<java.lang.String>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList20, strArray19);
        char[] charArray28 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = new org.apache.commons.lang3.text.StrTokenizer(charArray28, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = strTokenizer30.setDelimiterString("hi!");
        boolean boolean33 = strTokenizer30.isIgnoreEmptyTokens();
        java.lang.String str34 = strTokenizer30.next();
        int int35 = strList20.indexOf((java.lang.Object) strTokenizer30);
        char[] charArray42 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = new org.apache.commons.lang3.text.StrTokenizer(charArray42, ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher46 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = new org.apache.commons.lang3.text.StrTokenizer(charArray42, strMatcher46);
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher50 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int51 = strBuilder48.indexOf(strMatcher50);
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder48.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher56 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int57 = strBuilder54.indexOf(strMatcher56);
        int int58 = strBuilder48.indexOf(strMatcher56);
        char[] charArray65 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer67 = new org.apache.commons.lang3.text.StrTokenizer(charArray65, ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher69 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer70 = new org.apache.commons.lang3.text.StrTokenizer(charArray65, strMatcher69);
        org.apache.commons.lang3.text.StrMatcher strMatcher71 = strTokenizer70.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer72 = new org.apache.commons.lang3.text.StrTokenizer(charArray42, strMatcher56, strMatcher71);
        boolean boolean73 = strList20.equals((java.lang.Object) strMatcher71);
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher76 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int77 = strBuilder74.indexOf(strMatcher76);
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder74.append(' ');
        java.util.stream.IntStream intStream80 = strBuilder79.codePoints();
        org.apache.commons.lang3.text.StrMatcher strMatcher82 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("");
        int int83 = strBuilder79.lastIndexOf(strMatcher82);
        boolean boolean84 = strList20.remove((java.lang.Object) strMatcher82);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer85 = strTokenizer12.setTrimmerMatcher(strMatcher82);
        boolean boolean86 = strTokenizer85.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrMatcher strMatcher87 = strTokenizer85.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder90 = strBuilder7.appendFixedWidthPadRight((java.lang.Object) strMatcher87, 16, '#');
        java.io.Writer writer91 = strBuilder90.asWriter();
        writer91.flush();
        java.lang.CharSequence charSequence93 = null;
        java.io.Writer writer94 = writer91.append(charSequence93);
        writer91.write((int) (byte) 10);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(strTokenizer15);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(charArray28);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray28), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray28), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray28), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "#4#a4#" + "'", str34, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertNotNull(charArray42);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray42), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray42), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray42), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher46);
        org.junit.Assert.assertNotNull(strMatcher50);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1));
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strMatcher56);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + (-1) + "'", int58 == (-1));
        org.junit.Assert.assertNotNull(charArray65);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray65), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray65), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray65), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher69);
        org.junit.Assert.assertNotNull(strMatcher71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(strMatcher76);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + (-1) + "'", int77 == (-1));
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertNotNull(intStream80);
        org.junit.Assert.assertNotNull(strMatcher82);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + (-1) + "'", int83 == (-1));
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNotNull(strTokenizer85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(strMatcher87);
        org.junit.Assert.assertNotNull(strBuilder90);
        org.junit.Assert.assertNotNull(writer91);
        org.junit.Assert.assertNotNull(writer94);
    }

    @Test
    public void test01625() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01625");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder18.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder18.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder18.replaceFirst('#', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder27.appendNull();
        java.io.Reader reader29 = strBuilder28.asReader();
        reader29.close();
        boolean boolean31 = reader29.markSupported();
        boolean boolean32 = reader29.markSupported();
        reader29.mark(39);
        char[] charArray41 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = new org.apache.commons.lang3.text.StrTokenizer(charArray41, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = new org.apache.commons.lang3.text.StrTokenizer(charArray41);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray41);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder46.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder48.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder48.appendln(10L);
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder51.deleteFirst("");
        org.apache.commons.lang3.text.StrMatcher strMatcher54 = org.apache.commons.lang3.text.StrMatcher.spaceMatcher();
        int int56 = strBuilder51.indexOf(strMatcher54, 1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = new org.apache.commons.lang3.text.StrTokenizer(charArray41, strMatcher54);
        // The following exception was thrown during execution in test generation
        try {
            int int60 = reader29.read(charArray41, (int) '0', 16);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: null");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(reader29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(charArray41);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray41), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray41), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray41), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer45);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strMatcher54);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1));
    }

    @Test
    public void test01626() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01626");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.append(false);
        char[] charArray16 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer(charArray16, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = strTokenizer18.setDelimiterString("hi!");
        boolean boolean21 = strTokenizer18.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder5.appendFixedWidthPadRight((java.lang.Object) strTokenizer18, 10, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int28 = strBuilder25.indexOf(strMatcher27);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder25.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder30.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder30.appendln((int) (short) 10);
        boolean boolean35 = strBuilder5.equalsIgnoreCase(strBuilder30);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance();
        int int37 = strTokenizer36.nextIndex();
        boolean boolean38 = strTokenizer36.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = strTokenizer36.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder30.deleteAll(strMatcher39);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder40.appendln('a');
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder40.insert(100, 38);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 100");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(strTokenizer36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(strMatcher39);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder42);
    }

    @Test
    public void test01627() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01627");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder18.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder24.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder26.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.appendln(10L);
        int int32 = strBuilder26.indexOf("#4#a4#", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder26.insert(1, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder23.appendln(strBuilder35);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder36.appendln("java.io.IOException: ", (int) (short) 1, (int) (byte) 10);
        boolean boolean42 = strBuilder36.startsWith("java.io.IOException: ");
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher45 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int46 = strBuilder43.indexOf(strMatcher45);
        char[] charArray53 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = new org.apache.commons.lang3.text.StrTokenizer(charArray53, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder43.appendAll((java.util.Iterator<java.lang.String>) strTokenizer55);
        org.apache.commons.lang3.text.StrMatcher strMatcher58 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("#4#a4#");
        int int59 = strBuilder56.indexOf(strMatcher58);
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder36.deleteFirst(strMatcher58);
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder61.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder63.clear();
        java.lang.Throwable throwable68 = null;
        java.io.IOException iOException69 = new java.io.IOException("", throwable68);
        java.io.IOException iOException70 = new java.io.IOException("#4#a4#", throwable68);
        java.io.IOException iOException71 = new java.io.IOException(throwable68);
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray75 = new java.lang.Object[] { 1.0f, iOException71, false, 100, strBuilder74 };
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder64.appendWithSeparators(objArray75, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder78.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder80.clear();
        java.lang.String str83 = strBuilder81.rightString((int) (short) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder84 = strBuilder64.append((java.lang.CharSequence) str83);
        org.apache.commons.lang3.text.StrBuilder strBuilder86 = strBuilder84.appendln(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder87 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher89 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int90 = strBuilder87.indexOf(strMatcher89);
        org.apache.commons.lang3.text.StrBuilder strBuilder92 = strBuilder87.append("#4#a4#");
        boolean boolean93 = strBuilder86.equals(strBuilder92);
        boolean boolean94 = strBuilder36.equals(strBuilder92);
        int int96 = strBuilder36.indexOf('4');
        int int97 = strBuilder36.length();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(strMatcher45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertNotNull(charArray53);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray53), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray53), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray53), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strMatcher58);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(objArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray75), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray75), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertNotNull(strBuilder81);
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "" + "'", str83, "");
        org.junit.Assert.assertNotNull(strBuilder84);
        org.junit.Assert.assertNotNull(strBuilder86);
        org.junit.Assert.assertNotNull(strMatcher89);
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + (-1) + "'", int90 == (-1));
        org.junit.Assert.assertNotNull(strBuilder92);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertTrue("'" + int96 + "' != '" + (-1) + "'", int96 == (-1));
        org.junit.Assert.assertTrue("'" + int97 + "' != '" + 59 + "'", int97 == 59);
    }

    @Test
    public void test01628() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01628");
        char[] charArray6 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, strMatcher10);
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = strTokenizer11.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = strTokenizer11.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = strTokenizer11.setDelimiterChar('a');
        java.lang.String str16 = strTokenizer15.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = strTokenizer15.reset();
        java.lang.String str18 = strTokenizer15.next();
        java.lang.String str19 = strTokenizer15.toString();
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertNotNull(strMatcher13);
        org.junit.Assert.assertNotNull(strTokenizer15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str16, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "#4#" + "'", str18, "#4#");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "StrTokenizer[#4#, 4#]" + "'", str19, "StrTokenizer[#4#, 4#]");
    }

    @Test
    public void test01629() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01629");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder18.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder24.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder26.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.appendln(10L);
        int int32 = strBuilder26.indexOf("#4#a4#", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder26.insert(1, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder23.appendln(strBuilder35);
        java.io.Writer writer37 = strBuilder36.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder38.deleteFirst("hi!");
        java.lang.String str41 = strBuilder40.getNullText();
        char[] charArray43 = new char[] { 'a' };
        char[] charArray44 = strBuilder40.getChars(charArray43);
        char[] charArray49 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray50 = strBuilder40.getChars(charArray49);
        writer37.write(charArray49);
        writer37.write("10\n\n");
        writer37.close();
        writer37.write("0java.io.IOExceptionfalse100", 0, 0);
        writer37.close();
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder60.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder62.clear();
        java.lang.Throwable throwable67 = null;
        java.io.IOException iOException68 = new java.io.IOException("", throwable67);
        java.io.IOException iOException69 = new java.io.IOException("#4#a4#", throwable67);
        java.io.IOException iOException70 = new java.io.IOException(throwable67);
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray74 = new java.lang.Object[] { 1.0f, iOException70, false, 100, strBuilder73 };
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder63.appendWithSeparators(objArray74, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder63.replaceAll('4', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder63.trim();
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder63.appendSeparator('a');
        // The following exception was thrown during execution in test generation
        try {
            java.io.Writer writer85 = writer37.append((java.lang.CharSequence) strBuilder82, 70, 4);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -66");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(writer37);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNotNull(charArray43);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray43), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray43), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray43), "[a]");
        org.junit.Assert.assertNotNull(charArray44);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray44), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray44), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray44), "[a]");
        org.junit.Assert.assertNotNull(charArray49);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray49), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray49), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray49), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray50);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray50), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray50), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray50), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(objArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray74), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray74), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertNotNull(strBuilder82);
    }

    @Test
    public void test01630() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01630");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        java.lang.String str4 = strBuilder2.leftString(32);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteFirst("hi!");
        java.lang.String str8 = strBuilder7.getNullText();
        char[] charArray10 = new char[] { 'a' };
        char[] charArray11 = strBuilder7.getChars(charArray10);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder2.append((java.lang.Object) strBuilder7);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder2.replaceAll('#', ' ');
        java.util.stream.IntStream intStream16 = strBuilder2.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder2.appendSeparator('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder18.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder18.append((int) 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder24.clear();
        char[] charArray32 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = new org.apache.commons.lang3.text.StrTokenizer(charArray32, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = strTokenizer34.setDelimiterString("hi!");
        java.lang.String[] strArray37 = strTokenizer34.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder24.appendAll((java.lang.Object[]) strArray37);
        boolean boolean40 = strBuilder24.endsWith("#4#");
        int int41 = strBuilder24.capacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder18.appendln(strBuilder24);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder24.appendln((int) (short) 1);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[a]");
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(intStream16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(charArray32);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray32), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray32), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray32), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer36);
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 32 + "'", int41 == 32);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder44);
    }

    @Test
    public void test01631() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01631");
        char[] charArray6 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer8.setDelimiterString("hi!");
        java.lang.String str11 = strTokenizer10.nextToken();
        java.util.List<java.lang.String> strList12 = strTokenizer10.getTokenList();
        boolean boolean14 = strList12.add("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder15.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder17.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder18.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder19.appendln((long) '#');
        java.util.stream.IntStream intStream22 = strBuilder19.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder19.appendSeparator("10\n\n");
        java.lang.String[] strArray28 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList29 = new java.util.ArrayList<java.lang.String>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList29, strArray28);
        char[] charArray37 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = new org.apache.commons.lang3.text.StrTokenizer(charArray37, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = strTokenizer39.setDelimiterString("hi!");
        boolean boolean42 = strTokenizer39.isIgnoreEmptyTokens();
        java.lang.String str43 = strTokenizer39.next();
        int int44 = strList29.indexOf((java.lang.Object) strTokenizer39);
        java.util.ListIterator<java.lang.String> strItor46 = strList29.listIterator((int) (byte) 0);
        java.lang.String[] strArray50 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList51 = new java.util.ArrayList<java.lang.String>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList51, strArray50);
        char[] charArray59 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer61 = new org.apache.commons.lang3.text.StrTokenizer(charArray59, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer63 = strTokenizer61.setDelimiterString("hi!");
        boolean boolean64 = strTokenizer61.isIgnoreEmptyTokens();
        java.lang.String str65 = strTokenizer61.next();
        int int66 = strList51.indexOf((java.lang.Object) strTokenizer61);
        java.util.ListIterator<java.lang.String> strItor68 = strList51.listIterator((int) (byte) 0);
        java.util.Iterator<java.lang.String> strItor69 = strList51.iterator();
        boolean boolean70 = strList29.removeAll((java.util.Collection<java.lang.String>) strList51);
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder24.appendWithSeparators((java.lang.Iterable<java.lang.String>) strList29, "10\n\n");
        boolean boolean73 = strList12.retainAll((java.util.Collection<java.lang.String>) strList29);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str75 = strList29.remove(3);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 3, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "#4#a4#" + "'", str11, "#4#a4#");
        org.junit.Assert.assertNotNull(strList12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(intStream22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(charArray37);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray37), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray37), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray37), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "#4#a4#" + "'", str43, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertNotNull(strItor46);
        org.junit.Assert.assertNotNull(strArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(charArray59);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray59), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray59), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray59), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "#4#a4#" + "'", str65, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + (-1) + "'", int66 == (-1));
        org.junit.Assert.assertNotNull(strItor68);
        org.junit.Assert.assertNotNull(strItor69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
    }

    @Test
    public void test01632() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01632");
        char[] charArray6 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer8.setDelimiterString("hi!");
        java.lang.String str11 = strTokenizer10.nextToken();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = strTokenizer10.setIgnoredChar('4');
        java.lang.String str14 = strTokenizer13.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strTokenizer13.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = strTokenizer13.getIgnoredMatcher();
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer13.add("java.io.IOException: java.io.IOException: StrTokenizer[#4#a4#]");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: add() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "#4#a4#" + "'", str11, "#4#a4#");
        org.junit.Assert.assertNotNull(strTokenizer13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "StrTokenizer[#4#a4#]" + "'", str14, "StrTokenizer[#4#a4#]");
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertNotNull(strMatcher17);
    }

    @Test
    public void test01633() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01633");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = org.apache.commons.lang3.text.StrMatcher.splitMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder0.deleteAll(strMatcher3);
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder0.append((double) 59);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder7.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder9.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder9.insert(0, (double) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder13.appendFixedWidthPadRight((java.lang.Object) 100.0d, 1, '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder17.trim();
        java.lang.Object[] objArray19 = new java.lang.Object[] {};
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder17.appendAll(objArray19);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder6.appendAll(objArray19);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder21.setLength((int) ' ');
        java.io.Reader reader24 = strBuilder21.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int28 = strBuilder25.indexOf(strMatcher27);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder25.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder30.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder30.append(false);
        char[] charArray41 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = new org.apache.commons.lang3.text.StrTokenizer(charArray41, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = strTokenizer43.setDelimiterString("hi!");
        boolean boolean46 = strTokenizer43.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder30.appendFixedWidthPadRight((java.lang.Object) strTokenizer43, 10, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher52 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int53 = strBuilder50.indexOf(strMatcher52);
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder50.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder55.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder55.appendln((int) (short) 10);
        boolean boolean60 = strBuilder30.equalsIgnoreCase(strBuilder55);
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder55.insert((int) (byte) 1, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder63.appendln(false);
        char[] charArray72 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer74 = new org.apache.commons.lang3.text.StrTokenizer(charArray72, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer76 = strTokenizer74.setDelimiterString("hi!");
        java.lang.String str77 = strTokenizer76.nextToken();
        java.util.List<java.lang.String> strList78 = strTokenizer76.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder79.deleteFirst("hi!");
        java.lang.String str82 = strBuilder81.getNullText();
        char[] charArray84 = new char[] { 'a' };
        char[] charArray85 = strBuilder81.getChars(charArray84);
        char[] charArray90 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray91 = strBuilder81.getChars(charArray90);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer92 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray91);
        int int93 = strList78.indexOf((java.lang.Object) charArray91);
        char[] charArray94 = strBuilder65.getChars(charArray91);
        org.apache.commons.lang3.text.StrMatcher strMatcher96 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("#4#a4#");
        org.apache.commons.lang3.text.StrMatcher strMatcher97 = org.apache.commons.lang3.text.StrMatcher.commaMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer98 = new org.apache.commons.lang3.text.StrTokenizer(charArray94, strMatcher96, strMatcher97);
        org.apache.commons.lang3.text.StrBuilder strBuilder99 = strBuilder21.append(charArray94);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strMatcher3);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[]");
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(reader24);
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(charArray41);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray41), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray41), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray41), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strMatcher52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(charArray72);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray72), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray72), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray72), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer76);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "#4#a4#" + "'", str77, "#4#a4#");
        org.junit.Assert.assertNotNull(strList78);
        org.junit.Assert.assertNotNull(strBuilder81);
        org.junit.Assert.assertNull(str82);
        org.junit.Assert.assertNotNull(charArray84);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray84), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray84), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray84), "[a]");
        org.junit.Assert.assertNotNull(charArray85);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray85), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray85), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray85), "[a]");
        org.junit.Assert.assertNotNull(charArray90);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray90), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray90), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray90), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray91);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray91), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray91), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray91), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(strTokenizer92);
        org.junit.Assert.assertTrue("'" + int93 + "' != '" + (-1) + "'", int93 == (-1));
        org.junit.Assert.assertNotNull(charArray94);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray94), " a10\nfalse\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray94), " a10\nfalse\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray94), "[ , a, 1, 0, \n, f, a, l, s, e, \n]");
        org.junit.Assert.assertNotNull(strMatcher96);
        org.junit.Assert.assertNotNull(strMatcher97);
        org.junit.Assert.assertNotNull(strBuilder99);
    }

    @Test
    public void test01634() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01634");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("java.io.IOException: java.io.IOException: hi!", "a10\n");
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = strTokenizer2.getIgnoredMatcher();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str4 = strTokenizer2.previous();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher3);
    }

    @Test
    public void test01635() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01635");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.appendln(10L);
        int int8 = strBuilder2.indexOf("#4#a4#", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder2.appendSeparator("", 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder13.setNullText("#4#a4#");
        char[] charArray16 = strBuilder13.toCharArray();
        java.lang.String[] strArray20 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList21 = new java.util.ArrayList<java.lang.String>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList21, strArray20);
        char[] charArray29 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer(charArray29, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = strTokenizer31.setDelimiterString("hi!");
        boolean boolean34 = strTokenizer31.isIgnoreEmptyTokens();
        java.lang.String str35 = strTokenizer31.next();
        int int36 = strList21.indexOf((java.lang.Object) strTokenizer31);
        java.util.ListIterator<java.lang.String> strItor38 = strList21.listIterator((int) (byte) 0);
        java.util.Iterator<java.lang.String> strItor39 = strList21.iterator();
        char[] charArray46 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = new org.apache.commons.lang3.text.StrTokenizer(charArray46, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = strTokenizer48.setDelimiterString("hi!");
        boolean boolean51 = strTokenizer48.isIgnoreEmptyTokens();
        java.lang.String str52 = strTokenizer48.next();
        boolean boolean53 = strList21.equals((java.lang.Object) strTokenizer48);
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder13.appendWithSeparators((java.lang.Iterable<java.lang.String>) strList21, "java.io.IOException: hi!");
        // The following exception was thrown during execution in test generation
        try {
            strList21.add((-1), "#");
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: -1, Size: 3");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), "10\ntrue\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), "10\ntrue\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[1, 0, \n, t, r, u, e, \n]");
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(charArray29);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray29), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray29), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray29), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "#4#a4#" + "'", str35, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNotNull(strItor38);
        org.junit.Assert.assertNotNull(strItor39);
        org.junit.Assert.assertNotNull(charArray46);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray46), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray46), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray46), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "#4#a4#" + "'", str52, "#4#a4#");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(strBuilder55);
    }

    @Test
    public void test01636() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01636");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder1.deleteFirst("hi!");
        java.lang.String str4 = strBuilder3.getNullText();
        char[] charArray6 = new char[] { 'a' };
        char[] charArray7 = strBuilder3.getChars(charArray6);
        char[] charArray12 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray13 = strBuilder3.getChars(charArray12);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder16.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder16.insert(0, (double) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder20.appendFixedWidthPadRight((java.lang.Object) 100.0d, 1, '4');
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        int int27 = strBuilder24.lastIndexOf(strMatcher25, (int) (short) 10);
        boolean boolean28 = strBuilder3.contains(strMatcher25);
        char[] charArray35 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = new org.apache.commons.lang3.text.StrTokenizer(charArray35, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = strTokenizer37.setDelimiterString("hi!");
        java.lang.String str40 = strTokenizer39.nextToken();
        java.util.List<java.lang.String> strList41 = strTokenizer39.getTokenList();
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = strTokenizer39.setTrimmerMatcher(strMatcher42);
        char[] charArray50 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = new org.apache.commons.lang3.text.StrTokenizer(charArray50, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = new org.apache.commons.lang3.text.StrTokenizer(charArray50);
        int int55 = strMatcher42.isMatch(charArray50, 0);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher25, strMatcher42);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = strTokenizer56.setIgnoredChar('a');
        boolean boolean59 = strTokenizer58.hasNext();
        java.lang.String str60 = strTokenizer58.previousToken();
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[a]");
        org.junit.Assert.assertNotNull(charArray7);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray7), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray7), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray7), "[a]");
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strMatcher25);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "#4#a4#" + "'", str40, "#4#a4#");
        org.junit.Assert.assertNotNull(strList41);
        org.junit.Assert.assertNotNull(strMatcher42);
        org.junit.Assert.assertNotNull(strTokenizer43);
        org.junit.Assert.assertNotNull(charArray50);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray50), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray50), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray50), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertNotNull(strTokenizer58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNull(str60);
    }

    @Test
    public void test01637() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01637");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.appendln((int) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder5.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.deleteCharAt((int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int17 = strBuilder14.indexOf(strMatcher16);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder14.append("#4#a4#");
        java.lang.String str21 = strBuilder14.leftString((int) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int25 = strBuilder22.indexOf(strMatcher24);
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder22.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder27.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder27.append(false);
        char[] charArray38 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = new org.apache.commons.lang3.text.StrTokenizer(charArray38, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = strTokenizer40.setDelimiterString("hi!");
        boolean boolean43 = strTokenizer40.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder27.appendFixedWidthPadRight((java.lang.Object) strTokenizer40, 10, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher49 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int50 = strBuilder47.indexOf(strMatcher49);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder47.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder52.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder52.appendln((int) (short) 10);
        boolean boolean57 = strBuilder27.equalsIgnoreCase(strBuilder52);
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder27.reverse();
        java.lang.StringBuffer stringBuffer59 = strBuilder58.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder14.append(stringBuffer59, (int) (byte) 0, 2);
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder13.appendln(stringBuffer59);
        boolean boolean65 = strBuilder13.contains("StrTokenizer[1.0java.io.IOExceptionfalse1001.0, 35.0]");
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "#4#a4#" + "'", str21, "#4#a4#");
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strMatcher49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(stringBuffer59);
        org.junit.Assert.assertEquals(stringBuffer59.toString(), "zinekoTrtSeslaf ");
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
    }

    @Test
    public void test01638() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01638");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder3.append(false);
        java.lang.String str6 = strBuilder5.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int10 = strBuilder7.indexOf(strMatcher9);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder7.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder12.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder12.appendln((int) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder12.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int22 = strBuilder19.indexOf(strMatcher21);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder18.deleteFirst(strMatcher21);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder23.minimizeCapacity();
        char[] charArray31 = new char[] { 'a', '4', 'a', 'a', '#', ' ' };
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int35 = strBuilder32.indexOf(strMatcher34);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder32.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int41 = strBuilder38.indexOf(strMatcher40);
        int int42 = strBuilder32.indexOf(strMatcher40);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = new org.apache.commons.lang3.text.StrTokenizer(charArray31, strMatcher40);
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder23.replace(strMatcher40, "", 2, (int) (short) 100, 10);
        char[] charArray51 = strBuilder23.toCharArray((int) (byte) 0, (int) (byte) 0);
        org.apache.commons.lang3.text.StrMatcher strMatcher52 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder53.deleteFirst("hi!");
        java.lang.String str56 = strBuilder55.getNullText();
        char[] charArray58 = new char[] { 'a' };
        char[] charArray59 = strBuilder55.getChars(charArray58);
        int int63 = strMatcher52.isMatch(charArray59, 0, 0, (int) (byte) 10);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = new org.apache.commons.lang3.text.StrTokenizer(charArray51, strMatcher52);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer65 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray51);
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder5.append(charArray51);
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher70 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int71 = strBuilder68.indexOf(strMatcher70);
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder68.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder73.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder73.appendln((int) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder73.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher82 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int83 = strBuilder80.indexOf(strMatcher82);
        org.apache.commons.lang3.text.StrBuilder strBuilder84 = strBuilder79.deleteFirst(strMatcher82);
        char[] charArray85 = strBuilder84.toCharArray();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder86 = strBuilder66.insert(70, charArray85);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 70");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(strMatcher9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray31), "a4aa# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray31), "a4aa# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray31), "[a, 4, a, a, #,  ]");
        org.junit.Assert.assertNotNull(strMatcher34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strMatcher40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(charArray51);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray51), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray51), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray51), "[]");
        org.junit.Assert.assertNotNull(strMatcher52);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertNotNull(charArray58);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray58), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray58), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray58), "[a]");
        org.junit.Assert.assertNotNull(charArray59);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray59), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray59), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray59), "[a]");
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 0 + "'", int63 == 0);
        org.junit.Assert.assertNotNull(strTokenizer65);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strMatcher70);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + (-1) + "'", int71 == (-1));
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertNotNull(strMatcher82);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + (-1) + "'", int83 == (-1));
        org.junit.Assert.assertNotNull(strBuilder84);
        org.junit.Assert.assertNotNull(charArray85);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray85), " 10\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray85), " 10\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray85), "[ , 1, 0, \n]");
    }

    @Test
    public void test01639() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01639");
        java.lang.String[] strArray3 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList4 = new java.util.ArrayList<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        char[] charArray12 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strTokenizer14.setDelimiterString("hi!");
        boolean boolean17 = strTokenizer14.isIgnoreEmptyTokens();
        java.lang.String str18 = strTokenizer14.next();
        int int19 = strList4.indexOf((java.lang.Object) strTokenizer14);
        java.util.ListIterator<java.lang.String> strItor21 = strList4.listIterator((int) (byte) 0);
        java.lang.String[] strArray25 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList26 = new java.util.ArrayList<java.lang.String>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList26, strArray25);
        char[] charArray34 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = new org.apache.commons.lang3.text.StrTokenizer(charArray34, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = strTokenizer36.setDelimiterString("hi!");
        boolean boolean39 = strTokenizer36.isIgnoreEmptyTokens();
        java.lang.String str40 = strTokenizer36.next();
        int int41 = strList26.indexOf((java.lang.Object) strTokenizer36);
        java.util.ListIterator<java.lang.String> strItor43 = strList26.listIterator((int) (byte) 0);
        java.util.Iterator<java.lang.String> strItor44 = strList26.iterator();
        boolean boolean45 = strList4.removeAll((java.util.Collection<java.lang.String>) strList26);
        java.util.ListIterator<java.lang.String> strItor46 = strList26.listIterator();
        java.lang.String str49 = strList26.set(1, "59.052.0");
        java.util.function.UnaryOperator<java.lang.String> strUnaryOperator50 = null;
        // The following exception was thrown during execution in test generation
        try {
            strList26.replaceAll(strUnaryOperator50);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "#4#a4#" + "'", str18, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(strItor21);
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(charArray34);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray34), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray34), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray34), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "#4#a4#" + "'", str40, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertNotNull(strItor43);
        org.junit.Assert.assertNotNull(strItor44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(strItor46);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "" + "'", str49, "");
    }

    @Test
    public void test01640() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01640");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer0 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance();
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = strTokenizer0.getQuoteMatcher();
        int int2 = strTokenizer0.nextIndex();
        org.junit.Assert.assertNotNull(strTokenizer0);
        org.junit.Assert.assertNotNull(strMatcher1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
    }

    @Test
    public void test01641() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01641");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.append(false);
        boolean boolean11 = strBuilder9.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder9.replaceAll("10\n\n", "#4#a4#java.io.IOException: zinekoTrtSeslaf \n");
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.replaceFirst("java.io.IOException", "1");
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder17.insert(51, (double) (-1.0f));
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 51");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder17);
    }

    @Test
    public void test01642() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01642");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.appendln(10L);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder2.setNewLineText("hi!");
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder7.setCharAt(5, 'e');
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 5");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
    }

    @Test
    public void test01643() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01643");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = new org.apache.commons.lang3.text.StrTokenizer("hi!");
        java.lang.Object obj2 = strTokenizer1.clone();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = strTokenizer1.reset();
        boolean boolean4 = strTokenizer1.hasNext();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = strTokenizer1.setDelimiterString("StrTokenizer[]");
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer6.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: remove() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertEquals(obj2.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj2), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj2), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(strTokenizer6);
    }

    @Test
    public void test01644() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01644");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("", "#4#a4#");
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = strTokenizer2.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer2.setDelimiterString("#4#a4#");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = strTokenizer2.setIgnoredChar('a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer2.reset();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder11.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder11.insert(0, (double) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder15.appendFixedWidthPadRight((java.lang.Object) 100.0d, 1, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = new org.apache.commons.lang3.text.StrTokenizer("", "#4#a4#");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = strTokenizer22.setQuoteChar('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = strTokenizer24.setEmptyTokenAsNull(false);
        char[] charArray33 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = new org.apache.commons.lang3.text.StrTokenizer(charArray33, ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher37 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = new org.apache.commons.lang3.text.StrTokenizer(charArray33, strMatcher37);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher41 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int42 = strBuilder39.indexOf(strMatcher41);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder39.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher47 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int48 = strBuilder45.indexOf(strMatcher47);
        int int49 = strBuilder39.indexOf(strMatcher47);
        char[] charArray56 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = new org.apache.commons.lang3.text.StrTokenizer(charArray56, ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher60 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer61 = new org.apache.commons.lang3.text.StrTokenizer(charArray56, strMatcher60);
        org.apache.commons.lang3.text.StrMatcher strMatcher62 = strTokenizer61.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer63 = new org.apache.commons.lang3.text.StrTokenizer(charArray33, strMatcher47, strMatcher62);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = strTokenizer24.setDelimiterMatcher(strMatcher62);
        int int65 = strBuilder15.indexOf(strMatcher62);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer66 = strTokenizer2.setIgnoredMatcher(strMatcher62);
        boolean boolean67 = strTokenizer66.hasPrevious();
        org.junit.Assert.assertNotNull(strMatcher3);
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strTokenizer7);
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strTokenizer24);
        org.junit.Assert.assertNotNull(strTokenizer26);
        org.junit.Assert.assertNotNull(charArray33);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray33), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray33), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray33), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher37);
        org.junit.Assert.assertNotNull(strMatcher41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strMatcher47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertNotNull(charArray56);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray56), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray56), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray56), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher60);
        org.junit.Assert.assertNotNull(strMatcher62);
        org.junit.Assert.assertNotNull(strTokenizer64);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + (-1) + "'", int65 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
    }

    @Test
    public void test01645() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01645");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.append(false);
        char[] charArray16 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer(charArray16, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = strTokenizer18.setDelimiterString("hi!");
        boolean boolean21 = strTokenizer18.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder5.appendFixedWidthPadRight((java.lang.Object) strTokenizer18, 10, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int28 = strBuilder25.indexOf(strMatcher27);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder25.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder30.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder30.appendln((int) (short) 10);
        boolean boolean35 = strBuilder5.equalsIgnoreCase(strBuilder30);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder5.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder5.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder39.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder41.clear();
        java.lang.Throwable throwable46 = null;
        java.io.IOException iOException47 = new java.io.IOException("", throwable46);
        java.io.IOException iOException48 = new java.io.IOException("#4#a4#", throwable46);
        java.io.IOException iOException49 = new java.io.IOException(throwable46);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray53 = new java.lang.Object[] { 1.0f, iOException49, false, 100, strBuilder52 };
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder42.appendWithSeparators(objArray53, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder55.appendln((double) (short) 1);
        int int60 = strBuilder55.lastIndexOf("java.io.IOException: ", (int) (byte) 10);
        org.apache.commons.lang3.text.StrMatcher strMatcher61 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder62.deleteFirst("hi!");
        java.lang.String str65 = strBuilder64.getNullText();
        char[] charArray67 = new char[] { 'a' };
        char[] charArray68 = strBuilder64.getChars(charArray67);
        int int72 = strMatcher61.isMatch(charArray68, 0, 0, (int) (byte) 10);
        char[] charArray73 = strBuilder55.getChars(charArray68);
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder37.insert(0, charArray68);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer75 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray68);
        int int76 = strTokenizer75.nextIndex();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer78 = strTokenizer75.setQuoteChar('I');
        boolean boolean79 = strTokenizer75.hasNext();
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(objArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray53), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray53), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-1) + "'", int60 == (-1));
        org.junit.Assert.assertNotNull(strMatcher61);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNull(str65);
        org.junit.Assert.assertNotNull(charArray67);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray67), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray67), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray67), "[a]");
        org.junit.Assert.assertNotNull(charArray68);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray68), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray68), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray68), "[a]");
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 0 + "'", int72 == 0);
        org.junit.Assert.assertNotNull(charArray73);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray73), "1.0java.io.IOExceptionfalse1001.0\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray73), "1.0java.io.IOExceptionfalse1001.0\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray73), "[1, ., 0, j, a, v, a, ., i, o, ., I, O, E, x, c, e, p, t, i, o, n, f, a, l, s, e, 1, 0, 0, 1, ., 0, \n]");
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(strTokenizer75);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 0 + "'", int76 == 0);
        org.junit.Assert.assertNotNull(strTokenizer78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
    }

    @Test
    public void test01646() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01646");
        char[] charArray6 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer8.setDelimiterString("hi!");
        java.lang.String str11 = strTokenizer10.nextToken();
        java.util.List<java.lang.String> strList12 = strTokenizer10.getTokenList();
        boolean boolean14 = strList12.add("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("");
        java.lang.String str17 = strTokenizer16.getContent();
        boolean boolean18 = strList12.equals((java.lang.Object) strTokenizer16);
        int int19 = strTokenizer16.previousIndex();
        boolean boolean20 = strTokenizer16.hasPrevious();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder21.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder23.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.appendln(10L);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder26.deleteFirst("");
        char[] charArray29 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder28.appendln(charArray29);
        boolean boolean31 = strBuilder28.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder33.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder35.clear();
        boolean boolean37 = strBuilder36.isEmpty();
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder40.deleteFirst("hi!");
        java.lang.String str43 = strBuilder42.getNullText();
        char[] charArray45 = new char[] { 'a' };
        char[] charArray46 = strBuilder42.getChars(charArray45);
        int int48 = strMatcher39.isMatch(charArray46, 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder36.append(charArray46);
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder28.insert((int) (byte) 1, charArray46);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = new org.apache.commons.lang3.text.StrTokenizer(charArray46, "StrTokenizer[#4#a4#]");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = strTokenizer16.reset(charArray46);
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer53.set("#4#a4#");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: set() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "#4#a4#" + "'", str11, "#4#a4#");
        org.junit.Assert.assertNotNull(strList12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(strMatcher39);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertNotNull(charArray45);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray45), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray45), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray45), "[a]");
        org.junit.Assert.assertNotNull(charArray46);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray46), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray46), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray46), "[a]");
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strTokenizer53);
    }

    @Test
    public void test01647() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01647");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder18.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder24.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder26.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.appendln(10L);
        int int32 = strBuilder26.indexOf("#4#a4#", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder26.insert(1, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder23.appendln(strBuilder35);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder37.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder39.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder39.appendln(10L);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder42.appendln(strBuilder43, 1, (int) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder47.deleteFirst("hi!");
        java.lang.String str50 = strBuilder49.getNullText();
        char[] charArray52 = new char[] { 'a' };
        char[] charArray53 = strBuilder49.getChars(charArray52);
        char[] charArray58 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray59 = strBuilder49.getChars(charArray58);
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder49.appendln("java.io.IOException: ");
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder46.append(strBuilder61, 5, (int) (short) 1);
        boolean boolean65 = strBuilder35.equals(strBuilder61);
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder35.append((double) (short) 1);
        java.lang.String str69 = strBuilder67.rightString(100);
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder67.replaceAll("0\n", "59.0");
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertNotNull(charArray52);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray52), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray52), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray52), "[a]");
        org.junit.Assert.assertNotNull(charArray53);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray53), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray53), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray53), "[a]");
        org.junit.Assert.assertNotNull(charArray58);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray58), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray58), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray58), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray59);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray59), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray59), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray59), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "1false0\n1.0" + "'", str69, "1false0\n1.0");
        org.junit.Assert.assertNotNull(strBuilder72);
    }

    @Test
    public void test01648() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01648");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("", "#4#a4#");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = strTokenizer2.setQuoteChar('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = strTokenizer4.setEmptyTokenAsNull(false);
        char[] charArray13 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer(charArray13, ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer(charArray13, strMatcher17);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int22 = strBuilder19.indexOf(strMatcher21);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder19.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int28 = strBuilder25.indexOf(strMatcher27);
        int int29 = strBuilder19.indexOf(strMatcher27);
        char[] charArray36 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = new org.apache.commons.lang3.text.StrTokenizer(charArray36, ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = new org.apache.commons.lang3.text.StrTokenizer(charArray36, strMatcher40);
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = strTokenizer41.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = new org.apache.commons.lang3.text.StrTokenizer(charArray13, strMatcher27, strMatcher42);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = strTokenizer4.setDelimiterMatcher(strMatcher42);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = strTokenizer4.setIgnoreEmptyTokens(true);
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer4.set("ptionfalse100");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: set() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strTokenizer4);
        org.junit.Assert.assertNotNull(strTokenizer6);
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertNotNull(charArray36);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray36), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray36), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray36), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher40);
        org.junit.Assert.assertNotNull(strMatcher42);
        org.junit.Assert.assertNotNull(strTokenizer44);
        org.junit.Assert.assertNotNull(strTokenizer46);
    }

    @Test
    public void test01649() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01649");
        char[] charArray6 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer8.setDelimiterString("hi!");
        java.lang.String str11 = strTokenizer10.nextToken();
        java.util.List<java.lang.String> strList12 = strTokenizer10.getTokenList();
        boolean boolean14 = strList12.add("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("");
        java.lang.String str17 = strTokenizer16.getContent();
        boolean boolean18 = strList12.equals((java.lang.Object) strTokenizer16);
        int int19 = strTokenizer16.previousIndex();
        boolean boolean20 = strTokenizer16.hasNext();
        int int21 = strTokenizer16.nextIndex();
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "#4#a4#" + "'", str11, "#4#a4#");
        org.junit.Assert.assertNotNull(strList12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
    }

    @Test
    public void test01650() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01650");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder3.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder5.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.insert(0, (double) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder9.replaceAll("StrTokenizer[not tokenized yet]", "StrTokenizer[#4#a4#]");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder13.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder15.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.appendln(10L);
        int int21 = strBuilder15.indexOf("#4#a4#", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder15.insert(1, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int28 = strBuilder25.indexOf(strMatcher27);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder25.append("#4#a4#");
        java.lang.String str32 = strBuilder25.leftString((int) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int36 = strBuilder33.indexOf(strMatcher35);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder33.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder38.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder38.append(false);
        char[] charArray49 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = new org.apache.commons.lang3.text.StrTokenizer(charArray49, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = strTokenizer51.setDelimiterString("hi!");
        boolean boolean54 = strTokenizer51.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder38.appendFixedWidthPadRight((java.lang.Object) strTokenizer51, 10, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher60 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int61 = strBuilder58.indexOf(strMatcher60);
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder58.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder63.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder63.appendln((int) (short) 10);
        boolean boolean68 = strBuilder38.equalsIgnoreCase(strBuilder63);
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder38.reverse();
        java.lang.StringBuffer stringBuffer70 = strBuilder69.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder25.append(stringBuffer70, (int) (byte) 0, 2);
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder24.append(stringBuffer70);
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder9.append((java.lang.Object) stringBuffer70);
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder2.append(stringBuffer70);
        java.lang.CharSequence charSequence79 = strBuilder2.subSequence((int) (byte) 10, 15);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder2.insert(32, (double) 0L);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 32");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "#4#a4#" + "'", str32, "#4#a4#");
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(charArray49);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray49), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray49), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray49), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strMatcher60);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + (-1) + "'", int61 == (-1));
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(stringBuffer70);
        org.junit.Assert.assertEquals(stringBuffer70.toString(), "zinekoTrtSeslaf ");
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertEquals("'" + charSequence79 + "' != '" + "eslaf" + "'", charSequence79, "eslaf");
    }

    @Test
    public void test01651() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01651");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder18.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder18.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder18.replaceFirst('#', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder27.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder28.appendPadding(4, 'a');
        char[] charArray32 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder28.append(charArray32, (int) (byte) 0, (int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder35.appendSeparator("java.io.IOException: StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder35.append(0);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder39);
    }

    @Test
    public void test01652() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01652");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher8 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int9 = strBuilder6.indexOf(strMatcher8);
        int int10 = strBuilder0.indexOf(strMatcher8);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder0.appendPadding((int) '#', '#');
        int int14 = strBuilder0.size();
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strMatcher8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 36 + "'", int14 == 36);
    }

    @Test
    public void test01653() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01653");
        java.lang.String[] strArray3 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList4 = new java.util.ArrayList<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        char[] charArray12 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strTokenizer14.setDelimiterString("hi!");
        boolean boolean17 = strTokenizer14.isIgnoreEmptyTokens();
        java.lang.String str18 = strTokenizer14.next();
        int int19 = strList4.indexOf((java.lang.Object) strTokenizer14);
        java.util.ListIterator<java.lang.String> strItor21 = strList4.listIterator((int) (byte) 0);
        java.util.Iterator<java.lang.String> strItor22 = strList4.iterator();
        java.lang.String[] strArray26 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList27 = new java.util.ArrayList<java.lang.String>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList27, strArray26);
        char[] charArray35 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = new org.apache.commons.lang3.text.StrTokenizer(charArray35, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = strTokenizer37.setDelimiterString("hi!");
        boolean boolean40 = strTokenizer37.isIgnoreEmptyTokens();
        java.lang.String str41 = strTokenizer37.next();
        int int42 = strList27.indexOf((java.lang.Object) strTokenizer37);
        boolean boolean43 = strList4.addAll((java.util.Collection<java.lang.String>) strList27);
        java.util.ListIterator<java.lang.String> strItor44 = strList27.listIterator();
        java.util.stream.Stream<java.lang.String> strStream45 = strList27.stream();
        java.util.Iterator<java.lang.String> strItor46 = strList27.iterator();
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "#4#a4#" + "'", str18, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(strItor21);
        org.junit.Assert.assertNotNull(strItor22);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "#4#a4#" + "'", str41, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(strItor44);
        org.junit.Assert.assertNotNull(strStream45);
        org.junit.Assert.assertNotNull(strItor46);
    }

    @Test
    public void test01654() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01654");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = strTokenizer1.setQuoteChar('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.String str5 = strBuilder4.getNullText();
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder7.deleteFirst("hi!");
        java.lang.String str10 = strBuilder9.getNullText();
        char[] charArray12 = new char[] { 'a' };
        char[] charArray13 = strBuilder9.getChars(charArray12);
        int int17 = strMatcher6.isMatch(charArray13, 0, 0, (int) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder4.replaceAll(strMatcher6, "java.io.IOException: ");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = strTokenizer3.setTrimmerMatcher(strMatcher6);
        char[] charArray27 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = new org.apache.commons.lang3.text.StrTokenizer(charArray27, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = new org.apache.commons.lang3.text.StrTokenizer(charArray27);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray27);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder32.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder34.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder34.appendln(10L);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder37.deleteFirst("");
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = org.apache.commons.lang3.text.StrMatcher.spaceMatcher();
        int int42 = strBuilder37.indexOf(strMatcher40, 1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = new org.apache.commons.lang3.text.StrTokenizer(charArray27, strMatcher40);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = strTokenizer3.setTrimmerMatcher(strMatcher40);
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer44.set("35.0");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: set() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strTokenizer1);
        org.junit.Assert.assertNotNull(strTokenizer3);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[a]");
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[a]");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strTokenizer20);
        org.junit.Assert.assertNotNull(charArray27);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray27), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray27), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray27), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer31);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strMatcher40);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer44);
    }

    @Test
    public void test01655() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01655");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder18.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder24.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder26.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.appendln(10L);
        int int32 = strBuilder26.indexOf("#4#a4#", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder26.insert(1, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder23.appendln(strBuilder35);
        java.io.Writer writer37 = strBuilder36.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder38.deleteFirst("hi!");
        java.lang.String str41 = strBuilder40.getNullText();
        char[] charArray43 = new char[] { 'a' };
        char[] charArray44 = strBuilder40.getChars(charArray43);
        char[] charArray49 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray50 = strBuilder40.getChars(charArray49);
        writer37.write(charArray49);
        writer37.write("10\n\n");
        writer37.close();
        writer37.write("0java.io.IOExceptionfalse100", 0, 0);
        writer37.flush();
        writer37.write(15);
        // The following exception was thrown during execution in test generation
        try {
            writer37.write("ptionfalse1001.0\n35.0\naaaajava.io.IOException: StrTokenizer[not tokenized yet]", 72, (int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: length must be valid");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(writer37);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNotNull(charArray43);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray43), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray43), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray43), "[a]");
        org.junit.Assert.assertNotNull(charArray44);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray44), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray44), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray44), "[a]");
        org.junit.Assert.assertNotNull(charArray49);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray49), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray49), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray49), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray50);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray50), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray50), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray50), "[a, 4,  , 4]");
    }

    @Test
    public void test01656() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01656");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder5.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder7.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder9.clear();
        int int11 = strBuilder9.capacity();
        boolean boolean12 = strBuilder6.equals(strBuilder9);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder13.deleteFirst("hi!");
        java.lang.String str16 = strBuilder15.getNullText();
        char[] charArray18 = new char[] { 'a' };
        char[] charArray19 = strBuilder15.getChars(charArray18);
        char[] charArray24 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray25 = strBuilder15.getChars(charArray24);
        java.io.Reader reader26 = strBuilder15.asReader();
        long long28 = reader26.skip((long) 59);
        char[] charArray35 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = new org.apache.commons.lang3.text.StrTokenizer(charArray35, ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = new org.apache.commons.lang3.text.StrTokenizer(charArray35, strMatcher39);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int44 = strBuilder41.indexOf(strMatcher43);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder41.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher49 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int50 = strBuilder47.indexOf(strMatcher49);
        int int51 = strBuilder41.indexOf(strMatcher49);
        char[] charArray58 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer60 = new org.apache.commons.lang3.text.StrTokenizer(charArray58, ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher62 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer63 = new org.apache.commons.lang3.text.StrTokenizer(charArray58, strMatcher62);
        org.apache.commons.lang3.text.StrMatcher strMatcher64 = strTokenizer63.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer65 = new org.apache.commons.lang3.text.StrTokenizer(charArray35, strMatcher49, strMatcher64);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer66 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray35);
        int int67 = reader26.read(charArray35);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer69 = new org.apache.commons.lang3.text.StrTokenizer(charArray35, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer70 = new org.apache.commons.lang3.text.StrTokenizer(charArray35);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder6.append(charArray35, 0, (int) '0');
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: Invalid length: 48");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 32 + "'", int11 == 32);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(charArray18);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray18), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray18), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray18), "[a]");
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[a]");
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray25);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray25), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray25), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray25), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(reader26);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 0L + "'", long28 == 0L);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher39);
        org.junit.Assert.assertNotNull(strMatcher43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strMatcher49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1));
        org.junit.Assert.assertNotNull(charArray58);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray58), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray58), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray58), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher62);
        org.junit.Assert.assertNotNull(strMatcher64);
        org.junit.Assert.assertNotNull(strTokenizer66);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + (-1) + "'", int67 == (-1));
    }

    @Test
    public void test01657() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01657");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder18.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder18.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder18.replaceFirst('#', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder27.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder27.deleteFirst("10\n\n");
        int int32 = strBuilder30.indexOf('4');
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
    }

    @Test
    public void test01658() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01658");
        char[] charArray6 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer8.setDelimiterString("hi!");
        boolean boolean11 = strTokenizer8.hasPrevious();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int15 = strBuilder12.indexOf(strMatcher14);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder12.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder17.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder17.appendln((int) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder17.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder24.deleteFirst("hi!");
        java.lang.String str27 = strBuilder26.getNullText();
        char[] charArray29 = new char[] { 'a' };
        char[] charArray30 = strBuilder26.getChars(charArray29);
        char[] charArray35 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray36 = strBuilder26.getChars(charArray35);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = new org.apache.commons.lang3.text.StrTokenizer(charArray35, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder17.appendln(charArray35, 0, 0);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = strTokenizer8.reset(charArray35);
        boolean boolean43 = strTokenizer8.hasPrevious();
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(charArray29);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray29), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray29), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray29), "[a]");
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray30), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray30), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray30), "[a]");
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray36);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray36), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray36), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray36), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strTokenizer42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
    }

    @Test
    public void test01659() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01659");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder7.deleteFirst('#');
        java.lang.String str10 = strBuilder9.toString();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int14 = strBuilder11.indexOf(strMatcher13);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder11.append("#4#a4#");
        java.lang.String str18 = strBuilder11.leftString((int) (short) 100);
        int int20 = strBuilder11.lastIndexOf("StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder11.insert(0, (-1.0f));
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder11.appendSeparator(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder11.appendln((int) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder11.insert(0, 1.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int34 = strBuilder31.indexOf(strMatcher33);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder31.append("#4#a4#");
        java.lang.String str38 = strBuilder31.leftString((int) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher41 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int42 = strBuilder39.indexOf(strMatcher41);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder39.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder44.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder44.append(false);
        char[] charArray55 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = new org.apache.commons.lang3.text.StrTokenizer(charArray55, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer59 = strTokenizer57.setDelimiterString("hi!");
        boolean boolean60 = strTokenizer57.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder44.appendFixedWidthPadRight((java.lang.Object) strTokenizer57, 10, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher66 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int67 = strBuilder64.indexOf(strMatcher66);
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder64.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder69.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder69.appendln((int) (short) 10);
        boolean boolean74 = strBuilder44.equalsIgnoreCase(strBuilder69);
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder44.reverse();
        java.lang.StringBuffer stringBuffer76 = strBuilder75.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder31.append(stringBuffer76, (int) (byte) 0, 2);
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder30.appendln(stringBuffer76);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder83 = strBuilder9.appendln(strBuilder80, 70, 22);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: startIndex must be valid");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + " " + "'", str10, " ");
        org.junit.Assert.assertNotNull(strMatcher13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "#4#a4#" + "'", str18, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "#4#a4#" + "'", str38, "#4#a4#");
        org.junit.Assert.assertNotNull(strMatcher41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(charArray55);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray55), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray55), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray55), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strMatcher66);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + (-1) + "'", int67 == (-1));
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNotNull(stringBuffer76);
        org.junit.Assert.assertEquals(stringBuffer76.toString(), "zinekoTrtSeslaf ");
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertNotNull(strBuilder80);
    }

    @Test
    public void test01660() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01660");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        boolean boolean4 = strBuilder3.isEmpty();
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder7.deleteFirst("hi!");
        java.lang.String str10 = strBuilder9.getNullText();
        char[] charArray12 = new char[] { 'a' };
        char[] charArray13 = strBuilder9.getChars(charArray12);
        int int15 = strMatcher6.isMatch(charArray13, 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.append(charArray13);
        java.io.Writer writer17 = strBuilder3.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder3.appendln((int) '1');
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder19.append("001eslafnoitpecxEOI.oi.avaj0.11111111111111111111111");
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder19.appendln("aa4#4");
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("");
        int int26 = strBuilder19.indexOf(strMatcher25);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[a]");
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[a]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(writer17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strMatcher25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
    }

    @Test
    public void test01661() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01661");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder5.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder5.appendln(true);
        int int11 = strBuilder5.lastIndexOf("", 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder5.appendln((long) 18);
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(strBuilder13);
    }

    @Test
    public void test01662() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01662");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder18.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder18.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder18.replaceFirst('#', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder27.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder28.appendPadding(52, '1');
        char[] charArray38 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = new org.apache.commons.lang3.text.StrTokenizer(charArray38, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = new org.apache.commons.lang3.text.StrTokenizer(charArray38);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder31.appendln(charArray38, (int) (byte) 1, 16);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: Invalid length: 16");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[#, 4, #, a, 4, #]");
    }

    @Test
    public void test01663() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01663");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder3.append(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder3.deleteFirst('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder7.append((long) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder9.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder10.trim();
        int int13 = strBuilder11.lastIndexOf("aaaaaaaaaaaaaaaaaaaaaaaa100");
        int int15 = strBuilder11.indexOf("1.0java.io.IOEx");
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
    }

    @Test
    public void test01664() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01664");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("");
        java.lang.String str2 = strTokenizer1.getContent();
        char[] charArray8 = new char[] { 'a', 'a', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = new org.apache.commons.lang3.text.StrTokenizer(charArray8);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer1.reset(charArray8);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = new org.apache.commons.lang3.text.StrTokenizer(charArray8, "a");
        java.lang.String[] strArray13 = strTokenizer12.getTokenArray();
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer12.set("100.0false");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: set() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strTokenizer1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "" + "'", str2, "");
        org.junit.Assert.assertNotNull(charArray8);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray8), "aa4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray8), "aa4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray8), "[a, a, 4, #, 4]");
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertNotNull(strArray13);
    }

    @Test
    public void test01665() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01665");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.append(false);
        boolean boolean11 = strBuilder9.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder12.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder14.clear();
        java.lang.Throwable throwable19 = null;
        java.io.IOException iOException20 = new java.io.IOException("", throwable19);
        java.io.IOException iOException21 = new java.io.IOException("#4#a4#", throwable19);
        java.io.IOException iOException22 = new java.io.IOException(throwable19);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray26 = new java.lang.Object[] { 1.0f, iOException22, false, 100, strBuilder25 };
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder15.appendWithSeparators(objArray26, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder28.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder30.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder30.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder36.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder38.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder38.appendln(10L);
        int int44 = strBuilder38.indexOf("#4#a4#", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder38.insert(1, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder35.appendln(strBuilder47);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder48.appendln("java.io.IOException: ", (int) (short) 1, (int) (byte) 10);
        boolean boolean54 = strBuilder48.startsWith("java.io.IOException: ");
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher57 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int58 = strBuilder55.indexOf(strMatcher57);
        char[] charArray65 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer67 = new org.apache.commons.lang3.text.StrTokenizer(charArray65, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder55.appendAll((java.util.Iterator<java.lang.String>) strTokenizer67);
        org.apache.commons.lang3.text.StrMatcher strMatcher70 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("#4#a4#");
        int int71 = strBuilder68.indexOf(strMatcher70);
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder48.deleteFirst(strMatcher70);
        int int73 = strBuilder9.indexOf(strMatcher70);
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder9.appendPadding((int) (byte) -1, '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder77.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher82 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int83 = strBuilder80.indexOf(strMatcher82);
        char[] charArray90 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer92 = new org.apache.commons.lang3.text.StrTokenizer(charArray90, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder93 = strBuilder80.appendAll((java.util.Iterator<java.lang.String>) strTokenizer92);
        org.apache.commons.lang3.text.StrBuilder strBuilder95 = strBuilder77.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer92, "");
        boolean boolean96 = strBuilder9.equalsIgnoreCase(strBuilder95);
        org.apache.commons.lang3.text.StrBuilder strBuilder98 = strBuilder95.append((int) (byte) 1);
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(objArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray26), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray26), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(strMatcher57);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + (-1) + "'", int58 == (-1));
        org.junit.Assert.assertNotNull(charArray65);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray65), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray65), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray65), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strMatcher70);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 0 + "'", int71 == 0);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + (-1) + "'", int73 == (-1));
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertNotNull(strMatcher82);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + (-1) + "'", int83 == (-1));
        org.junit.Assert.assertNotNull(charArray90);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray90), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray90), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray90), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strBuilder93);
        org.junit.Assert.assertNotNull(strBuilder95);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
        org.junit.Assert.assertNotNull(strBuilder98);
    }

    @Test
    public void test01666() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01666");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(" 10\n");
        org.junit.Assert.assertNotNull(strMatcher1);
    }

    @Test
    public void test01667() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01667");
        java.lang.String[] strArray3 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList4 = new java.util.ArrayList<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        char[] charArray12 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strTokenizer14.setDelimiterString("hi!");
        boolean boolean17 = strTokenizer14.isIgnoreEmptyTokens();
        java.lang.String str18 = strTokenizer14.next();
        int int19 = strList4.indexOf((java.lang.Object) strTokenizer14);
        java.util.ListIterator<java.lang.String> strItor21 = strList4.listIterator((int) (byte) 0);
        java.util.Iterator<java.lang.String> strItor22 = strList4.iterator();
        java.lang.String[] strArray26 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList27 = new java.util.ArrayList<java.lang.String>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList27, strArray26);
        char[] charArray35 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = new org.apache.commons.lang3.text.StrTokenizer(charArray35, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = strTokenizer37.setDelimiterString("hi!");
        boolean boolean40 = strTokenizer37.isIgnoreEmptyTokens();
        java.lang.String str41 = strTokenizer37.next();
        int int42 = strList27.indexOf((java.lang.Object) strTokenizer37);
        boolean boolean43 = strList4.addAll((java.util.Collection<java.lang.String>) strList27);
        java.lang.String[] strArray47 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList48 = new java.util.ArrayList<java.lang.String>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList48, strArray47);
        char[] charArray56 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = new org.apache.commons.lang3.text.StrTokenizer(charArray56, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer60 = strTokenizer58.setDelimiterString("hi!");
        boolean boolean61 = strTokenizer58.isIgnoreEmptyTokens();
        java.lang.String str62 = strTokenizer58.next();
        int int63 = strList48.indexOf((java.lang.Object) strTokenizer58);
        java.util.ListIterator<java.lang.String> strItor65 = strList48.listIterator((int) (byte) 0);
        java.util.Iterator<java.lang.String> strItor66 = strList48.iterator();
        java.lang.String[] strArray70 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList71 = new java.util.ArrayList<java.lang.String>();
        boolean boolean72 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList71, strArray70);
        char[] charArray79 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer81 = new org.apache.commons.lang3.text.StrTokenizer(charArray79, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer83 = strTokenizer81.setDelimiterString("hi!");
        boolean boolean84 = strTokenizer81.isIgnoreEmptyTokens();
        java.lang.String str85 = strTokenizer81.next();
        int int86 = strList71.indexOf((java.lang.Object) strTokenizer81);
        java.util.ListIterator<java.lang.String> strItor88 = strList71.listIterator((int) (byte) 0);
        java.util.Iterator<java.lang.String> strItor89 = strList71.iterator();
        boolean boolean90 = strList48.remove((java.lang.Object) strItor89);
        boolean boolean91 = strList4.removeAll((java.util.Collection<java.lang.String>) strList48);
        boolean boolean93 = strList4.add("StrTokenizer[not tokenized yet]");
        boolean boolean95 = strList4.add("#4#");
        java.util.stream.Stream<java.lang.String> strStream96 = strList4.stream();
        // The following exception was thrown during execution in test generation
        try {
            strList4.add(65, "java.io.IOException: java.io.IOException: hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 65, Size: 2");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "#4#a4#" + "'", str18, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(strItor21);
        org.junit.Assert.assertNotNull(strItor22);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "#4#a4#" + "'", str41, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(charArray56);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray56), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray56), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray56), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "#4#a4#" + "'", str62, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + (-1) + "'", int63 == (-1));
        org.junit.Assert.assertNotNull(strItor65);
        org.junit.Assert.assertNotNull(strItor66);
        org.junit.Assert.assertNotNull(strArray70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(charArray79);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray79), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray79), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray79), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "#4#a4#" + "'", str85, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + (-1) + "'", int86 == (-1));
        org.junit.Assert.assertNotNull(strItor88);
        org.junit.Assert.assertNotNull(strItor89);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + true + "'", boolean93 == true);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + true + "'", boolean95 == true);
        org.junit.Assert.assertNotNull(strStream96);
    }

    @Test
    public void test01668() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01668");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder1.deleteFirst("hi!");
        java.lang.String str4 = strBuilder3.getNullText();
        char[] charArray6 = new char[] { 'a' };
        char[] charArray7 = strBuilder3.getChars(charArray6);
        java.lang.StringBuffer stringBuffer8 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder3.append(stringBuffer8);
        java.io.Writer writer10 = strBuilder9.asWriter();
        writer10.write((int) (short) 1);
        writer10.write((int) (short) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder15.deleteFirst("hi!");
        java.lang.String str19 = strBuilder17.leftString(32);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder20.deleteFirst("hi!");
        java.lang.String str23 = strBuilder22.getNullText();
        char[] charArray25 = new char[] { 'a' };
        char[] charArray26 = strBuilder22.getChars(charArray25);
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder17.append((java.lang.Object) strBuilder22);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder17.append(100L);
        int int32 = strBuilder29.lastIndexOf('a', (int) (short) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder33.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder35.clear();
        java.lang.Throwable throwable40 = null;
        java.io.IOException iOException41 = new java.io.IOException("", throwable40);
        java.io.IOException iOException42 = new java.io.IOException("#4#a4#", throwable40);
        java.io.IOException iOException43 = new java.io.IOException(throwable40);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray47 = new java.lang.Object[] { 1.0f, iOException43, false, 100, strBuilder46 };
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder36.appendWithSeparators(objArray47, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder49.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder51.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder51.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder56.append("java.io.IOException: ");
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder56.deleteAll('a');
        boolean boolean61 = strBuilder60.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher64 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int65 = strBuilder62.indexOf(strMatcher64);
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder62.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder67.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder67.appendln((int) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder67.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder74.deleteFirst("hi!");
        java.lang.String str77 = strBuilder76.getNullText();
        char[] charArray79 = new char[] { 'a' };
        char[] charArray80 = strBuilder76.getChars(charArray79);
        char[] charArray85 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray86 = strBuilder76.getChars(charArray85);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer88 = new org.apache.commons.lang3.text.StrTokenizer(charArray85, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder91 = strBuilder67.appendln(charArray85, 0, 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder92 = strBuilder60.appendln(charArray85);
        org.apache.commons.lang3.text.StrBuilder strBuilder93 = strBuilder29.appendln(charArray85);
        char[] charArray94 = strBuilder29.toCharArray();
        writer10.write(charArray94);
        org.apache.commons.lang3.text.StrMatcher strMatcher96 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray94);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer97 = new org.apache.commons.lang3.text.StrTokenizer("100.01210", strMatcher96);
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer97.set("0\n1false0\n\n#");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: set() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[a]");
        org.junit.Assert.assertNotNull(charArray7);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray7), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray7), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray7), "[a]");
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(writer10);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNotNull(charArray25);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray25), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray25), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray25), "[a]");
        org.junit.Assert.assertNotNull(charArray26);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray26), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray26), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray26), "[a]");
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(objArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray47), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray47), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(strMatcher64);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + (-1) + "'", int65 == (-1));
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNull(str77);
        org.junit.Assert.assertNotNull(charArray79);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray79), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray79), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray79), "[a]");
        org.junit.Assert.assertNotNull(charArray80);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray80), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray80), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray80), "[a]");
        org.junit.Assert.assertNotNull(charArray85);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray85), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray85), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray85), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray86);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray86), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray86), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray86), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(strBuilder91);
        org.junit.Assert.assertNotNull(strBuilder92);
        org.junit.Assert.assertNotNull(strBuilder93);
        org.junit.Assert.assertNotNull(charArray94);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray94), "100a4 4\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray94), "100a4 4\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray94), "[1, 0, 0, a, 4,  , 4, \n]");
        org.junit.Assert.assertNotNull(strMatcher96);
    }

    @Test
    public void test01669() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01669");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("1.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int5 = strBuilder2.indexOf(strMatcher4);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder2.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder7.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder7.append(false);
        char[] charArray18 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = new org.apache.commons.lang3.text.StrTokenizer(charArray18, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = strTokenizer20.setDelimiterString("hi!");
        boolean boolean23 = strTokenizer20.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder7.appendFixedWidthPadRight((java.lang.Object) strTokenizer20, 10, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int30 = strBuilder27.indexOf(strMatcher29);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder27.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder32.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder32.appendln((int) (short) 10);
        boolean boolean37 = strBuilder7.equalsIgnoreCase(strBuilder32);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder32.insert((int) (byte) 1, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder40.appendln(false);
        char[] charArray49 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = new org.apache.commons.lang3.text.StrTokenizer(charArray49, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = strTokenizer51.setDelimiterString("hi!");
        java.lang.String str54 = strTokenizer53.nextToken();
        java.util.List<java.lang.String> strList55 = strTokenizer53.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder56.deleteFirst("hi!");
        java.lang.String str59 = strBuilder58.getNullText();
        char[] charArray61 = new char[] { 'a' };
        char[] charArray62 = strBuilder58.getChars(charArray61);
        char[] charArray67 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray68 = strBuilder58.getChars(charArray67);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer69 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray68);
        int int70 = strList55.indexOf((java.lang.Object) charArray68);
        char[] charArray71 = strBuilder42.getChars(charArray68);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer73 = new org.apache.commons.lang3.text.StrTokenizer(charArray71, "java.io.IOException: ");
        org.apache.commons.lang3.text.StrMatcher strMatcher74 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray71);
        int int78 = strMatcher1.isMatch(charArray71, 32, 6, 19);
        org.junit.Assert.assertNotNull(strMatcher1);
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(charArray18);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray18), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray18), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray18), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strMatcher29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(charArray49);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray49), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray49), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray49), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer53);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "#4#a4#" + "'", str54, "#4#a4#");
        org.junit.Assert.assertNotNull(strList55);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNull(str59);
        org.junit.Assert.assertNotNull(charArray61);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray61), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray61), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray61), "[a]");
        org.junit.Assert.assertNotNull(charArray62);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray62), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray62), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray62), "[a]");
        org.junit.Assert.assertNotNull(charArray67);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray67), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray67), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray67), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray68);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray68), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray68), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray68), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(strTokenizer69);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + (-1) + "'", int70 == (-1));
        org.junit.Assert.assertNotNull(charArray71);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray71), " a10\nfalse\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray71), " a10\nfalse\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray71), "[ , a, 1, 0, \n, f, a, l, s, e, \n]");
        org.junit.Assert.assertNotNull(strMatcher74);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 0 + "'", int78 == 0);
    }

    @Test
    public void test01670() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01670");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder18.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder24.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder26.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.appendln(10L);
        int int32 = strBuilder26.indexOf("#4#a4#", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder26.insert(1, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder23.appendln(strBuilder35);
        java.io.Writer writer37 = strBuilder36.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder38.deleteFirst("hi!");
        java.lang.String str41 = strBuilder40.getNullText();
        char[] charArray43 = new char[] { 'a' };
        char[] charArray44 = strBuilder40.getChars(charArray43);
        char[] charArray49 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray50 = strBuilder40.getChars(charArray49);
        writer37.write(charArray49);
        writer37.close();
        java.io.Writer writer54 = writer37.append('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher57 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int58 = strBuilder55.indexOf(strMatcher57);
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder55.append(' ');
        java.util.stream.IntStream intStream61 = strBuilder60.codePoints();
        org.apache.commons.lang3.text.StrMatcher strMatcher63 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("");
        int int64 = strBuilder60.lastIndexOf(strMatcher63);
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher67 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int68 = strBuilder65.indexOf(strMatcher67);
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder65.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder70.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder72.deleteFirst('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder72.append('4');
        org.apache.commons.lang3.text.StrMatcher strMatcher77 = org.apache.commons.lang3.text.StrMatcher.quoteMatcher();
        int int79 = strBuilder76.lastIndexOf(strMatcher77, (int) (short) -1);
        boolean boolean80 = strBuilder60.contains(strMatcher77);
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder60.deleteAll('#');
        java.io.Writer writer83 = writer54.append((java.lang.CharSequence) strBuilder60);
        writer54.close();
        char[] charArray85 = null;
        writer54.write(charArray85, 8, 31);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(writer37);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNotNull(charArray43);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray43), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray43), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray43), "[a]");
        org.junit.Assert.assertNotNull(charArray44);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray44), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray44), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray44), "[a]");
        org.junit.Assert.assertNotNull(charArray49);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray49), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray49), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray49), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray50);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray50), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray50), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray50), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(writer54);
        org.junit.Assert.assertNotNull(strMatcher57);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + (-1) + "'", int58 == (-1));
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(intStream61);
        org.junit.Assert.assertNotNull(strMatcher63);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + (-1) + "'", int64 == (-1));
        org.junit.Assert.assertNotNull(strMatcher67);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + (-1) + "'", int68 == (-1));
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNotNull(strMatcher77);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + (-1) + "'", int79 == (-1));
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(strBuilder82);
        org.junit.Assert.assertNotNull(writer83);
    }

    @Test
    public void test01671() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01671");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.String str1 = strBuilder0.getNullText();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder3.deleteAll('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder6.insert(1, (float) 4);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder9.insert(30, (long) 21);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 30");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder9);
    }

    @Test
    public void test01672() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01672");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        java.lang.String str3 = strBuilder2.getNullText();
        char[] charArray5 = new char[] { 'a' };
        char[] charArray6 = strBuilder2.getChars(charArray5);
        char[] charArray11 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray12 = strBuilder2.getChars(charArray11);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray12);
        char[] charArray20 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = new org.apache.commons.lang3.text.StrTokenizer(charArray20, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer(charArray20);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = strTokenizer13.reset(charArray20);
        char[] charArray32 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = new org.apache.commons.lang3.text.StrTokenizer(charArray32, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = new org.apache.commons.lang3.text.StrTokenizer(charArray32);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = strTokenizer35.setDelimiterChar('a');
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = strTokenizer37.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = new org.apache.commons.lang3.text.StrTokenizer("", "#4#a4#");
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = strTokenizer41.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = new org.apache.commons.lang3.text.StrTokenizer("0java.io.IOExceptionfalse100", strMatcher38, strMatcher42);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = strTokenizer13.setIgnoredMatcher(strMatcher38);
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer44.add("java.io.IOException:");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: add() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[a]");
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(strTokenizer13);
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray20), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray20), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray20), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer24);
        org.junit.Assert.assertNotNull(charArray32);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray32), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray32), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray32), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer37);
        org.junit.Assert.assertNotNull(strMatcher38);
        org.junit.Assert.assertNotNull(strMatcher42);
        org.junit.Assert.assertNotNull(strTokenizer44);
    }

    @Test
    public void test01673() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01673");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        char[] charArray10 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = new org.apache.commons.lang3.text.StrTokenizer(charArray10, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder0.appendAll((java.util.Iterator<java.lang.String>) strTokenizer12);
        int int14 = strBuilder0.length();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder0.appendln("1false0\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int20 = strBuilder17.indexOf(strMatcher19);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder17.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder22.appendln((int) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder22.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder29.deleteFirst("hi!");
        java.lang.String str32 = strBuilder31.getNullText();
        char[] charArray34 = new char[] { 'a' };
        char[] charArray35 = strBuilder31.getChars(charArray34);
        char[] charArray40 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray41 = strBuilder31.getChars(charArray40);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = new org.apache.commons.lang3.text.StrTokenizer(charArray40, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder22.appendln(charArray40, 0, 0);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = new org.apache.commons.lang3.text.StrTokenizer(charArray40, "0\nzinekoTrtSeslaf ");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray40);
        org.apache.commons.lang3.text.StrMatcher strMatcher50 = org.apache.commons.lang3.text.StrMatcher.singleQuoteMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int54 = strBuilder51.indexOf(strMatcher53);
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder51.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder56.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder56.appendln((int) (short) 10);
        char[] charArray67 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer69 = new org.apache.commons.lang3.text.StrTokenizer(charArray67, ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher71 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer72 = new org.apache.commons.lang3.text.StrTokenizer(charArray67, strMatcher71);
        org.apache.commons.lang3.text.StrMatcher strMatcher73 = strTokenizer72.getIgnoredMatcher();
        int int75 = strBuilder56.indexOf(strMatcher73, (int) (byte) 1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer76 = new org.apache.commons.lang3.text.StrTokenizer(charArray40, strMatcher50, strMatcher73);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer77 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray40);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer78 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray40);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder16.appendln(charArray40, 24, (int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: Invalid startIndex: 100");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 6 + "'", int14 == 6);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNotNull(charArray34);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray34), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray34), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray34), "[a]");
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[a]");
        org.junit.Assert.assertNotNull(charArray40);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray40), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray40), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray40), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray41);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray41), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray41), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray41), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strTokenizer49);
        org.junit.Assert.assertNotNull(strMatcher50);
        org.junit.Assert.assertNotNull(strMatcher53);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(charArray67);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray67), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray67), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray67), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher71);
        org.junit.Assert.assertNotNull(strMatcher73);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + (-1) + "'", int75 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer77);
        org.junit.Assert.assertNotNull(strTokenizer78);
    }

    @Test
    public void test01674() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01674");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        java.lang.String str3 = strBuilder2.getNullText();
        char[] charArray5 = new char[] { 'a' };
        char[] charArray6 = strBuilder2.getChars(charArray5);
        char[] charArray11 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray12 = strBuilder2.getChars(charArray11);
        java.io.Reader reader13 = strBuilder2.asReader();
        reader13.reset();
        long long16 = reader13.skip((long) (byte) -1);
        boolean boolean17 = reader13.ready();
        java.nio.CharBuffer charBuffer18 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int19 = reader13.read(charBuffer18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[a]");
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(reader13);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 0L + "'", long16 == 0L);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    }

    @Test
    public void test01675() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01675");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("100.01210", ' ');
    }

    @Test
    public void test01676() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01676");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder18.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder18.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder18.append(true);
        int int29 = strBuilder26.indexOf('a', 4);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder26.appendPadding((int) (byte) 10, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder32.appendSeparator(' ', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder35.append("a4 4");
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 4 + "'", int29 == 4);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder37);
    }

    @Test
    public void test01677() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01677");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        java.lang.String str4 = strBuilder2.leftString(32);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteFirst("hi!");
        java.lang.String str8 = strBuilder7.getNullText();
        char[] charArray10 = new char[] { 'a' };
        char[] charArray11 = strBuilder7.getChars(charArray10);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder2.append((java.lang.Object) strBuilder7);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder2.replaceAll('#', ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = org.apache.commons.lang3.text.StrMatcher.splitMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder16.deleteAll(strMatcher19);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder16.append((double) 59);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder25.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder25.insert(0, (double) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder29.appendFixedWidthPadRight((java.lang.Object) 100.0d, 1, '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder33.trim();
        java.lang.Object[] objArray35 = new java.lang.Object[] {};
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder33.appendAll(objArray35);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder22.appendAll(objArray35);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder2.appendWithSeparators(objArray35, "1.0java.io.IOExceptionfalse1001.0\nfalse\nfalse");
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder2.appendSeparator('0', (int) (byte) 10);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[a]");
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(objArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray35), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray35), "[]");
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder42);
    }

    @Test
    public void test01678() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01678");
        char[] charArray6 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer8.setDelimiterString("hi!");
        java.lang.String str11 = strTokenizer10.nextToken();
        java.util.List<java.lang.String> strList12 = strTokenizer10.getTokenList();
        boolean boolean14 = strList12.add("hi!");
        java.util.function.UnaryOperator<java.lang.String> strUnaryOperator15 = null;
        // The following exception was thrown during execution in test generation
        try {
            strList12.replaceAll(strUnaryOperator15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "#4#a4#" + "'", str11, "#4#a4#");
        org.junit.Assert.assertNotNull(strList12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
    }

    @Test
    public void test01679() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01679");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        boolean boolean4 = strBuilder3.isEmpty();
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder7.deleteFirst("hi!");
        java.lang.String str10 = strBuilder9.getNullText();
        char[] charArray12 = new char[] { 'a' };
        char[] charArray13 = strBuilder9.getChars(charArray12);
        int int15 = strMatcher6.isMatch(charArray13, 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.append(charArray13);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer(charArray13, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = new org.apache.commons.lang3.text.StrTokenizer(charArray13);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = strTokenizer19.setIgnoreEmptyTokens(true);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str22 = strTokenizer19.previous();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[a]");
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[a]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strTokenizer21);
    }

    @Test
    public void test01680() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01680");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder18.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.append((double) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder25.append((long) 2);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder25.clear();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder28.appendln("eptionfalse1001.0\n35.0\n1false0\n\n", (int) ' ', (int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: length must be valid");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder28);
    }

    @Test
    public void test01681() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01681");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.appendln(10L);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteFirst("");
        char[] charArray8 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder7.appendln(charArray8);
        boolean boolean10 = strBuilder7.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder12.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder14.clear();
        boolean boolean16 = strBuilder15.isEmpty();
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder19.deleteFirst("hi!");
        java.lang.String str22 = strBuilder21.getNullText();
        char[] charArray24 = new char[] { 'a' };
        char[] charArray25 = strBuilder21.getChars(charArray24);
        int int27 = strMatcher18.isMatch(charArray25, 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder15.append(charArray25);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder7.insert((int) (byte) 1, charArray25);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer(charArray25, "StrTokenizer[#4#a4#]");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray25);
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer32.set("a4aa# ");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: set() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[a]");
        org.junit.Assert.assertNotNull(charArray25);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray25), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray25), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray25), "[a]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strTokenizer32);
    }

    @Test
    public void test01682() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01682");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("1false0\n");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = strTokenizer1.setDelimiterString("java.io.IOException: StrTokenizer[");
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer1.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: remove() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strTokenizer1);
        org.junit.Assert.assertNotNull(strTokenizer3);
    }

    @Test
    public void test01683() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01683");
        char[] charArray6 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer8.setDelimiterString("hi!");
        java.lang.String str11 = strTokenizer10.nextToken();
        java.util.List<java.lang.String> strList12 = strTokenizer10.getTokenList();
        boolean boolean14 = strList12.add("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("");
        java.lang.String str17 = strTokenizer16.getContent();
        boolean boolean18 = strList12.equals((java.lang.Object) strTokenizer16);
        java.lang.String str20 = strList12.remove((int) (byte) 0);
        java.util.stream.Stream<java.lang.String> strStream21 = strList12.parallelStream();
        // The following exception was thrown during execution in test generation
        try {
            strList12.add(80, "0java.io.IOExceptionfalse100");
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 80, Size: 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "#4#a4#" + "'", str11, "#4#a4#");
        org.junit.Assert.assertNotNull(strList12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "#4#a4#" + "'", str20, "#4#a4#");
        org.junit.Assert.assertNotNull(strStream21);
    }

    @Test
    public void test01684() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01684");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.append(false);
        boolean boolean11 = strBuilder9.contains("hi!");
        java.io.Writer writer12 = strBuilder9.asWriter();
        java.io.Writer writer14 = writer12.append('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int18 = strBuilder15.indexOf(strMatcher17);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder15.append("#4#a4#");
        java.lang.String str22 = strBuilder15.leftString((int) (short) 100);
        int int24 = strBuilder15.lastIndexOf("StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder15.insert(0, (-1.0f));
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder15.appendSeparator(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder15.appendln((int) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder15.insert(0, 1.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher37 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int38 = strBuilder35.indexOf(strMatcher37);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder35.append("#4#a4#");
        java.lang.String str42 = strBuilder35.leftString((int) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher45 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int46 = strBuilder43.indexOf(strMatcher45);
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder43.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder48.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder48.append(false);
        char[] charArray59 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer61 = new org.apache.commons.lang3.text.StrTokenizer(charArray59, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer63 = strTokenizer61.setDelimiterString("hi!");
        boolean boolean64 = strTokenizer61.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder48.appendFixedWidthPadRight((java.lang.Object) strTokenizer61, 10, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher70 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int71 = strBuilder68.indexOf(strMatcher70);
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder68.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder73.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder73.appendln((int) (short) 10);
        boolean boolean78 = strBuilder48.equalsIgnoreCase(strBuilder73);
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder48.reverse();
        java.lang.StringBuffer stringBuffer80 = strBuilder79.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder83 = strBuilder35.append(stringBuffer80, (int) (byte) 0, 2);
        org.apache.commons.lang3.text.StrBuilder strBuilder84 = strBuilder34.appendln(stringBuffer80);
        java.io.Writer writer85 = writer14.append((java.lang.CharSequence) stringBuffer80);
        writer85.write(70);
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(writer12);
        org.junit.Assert.assertNotNull(writer14);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "#4#a4#" + "'", str22, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strMatcher37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "#4#a4#" + "'", str42, "#4#a4#");
        org.junit.Assert.assertNotNull(strMatcher45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(charArray59);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray59), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray59), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray59), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strMatcher70);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + (-1) + "'", int71 == (-1));
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertNotNull(stringBuffer80);
        org.junit.Assert.assertEquals(stringBuffer80.toString(), "zinekoTrtSeslaf ");
        org.junit.Assert.assertNotNull(strBuilder83);
        org.junit.Assert.assertNotNull(strBuilder84);
        org.junit.Assert.assertNotNull(writer85);
    }

    @Test
    public void test01685() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01685");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder18.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder24.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder26.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.appendln(10L);
        int int32 = strBuilder26.indexOf("#4#a4#", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder26.insert(1, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder23.appendln(strBuilder35);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder35.trim();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder38.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder40.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder40.appendln(10L);
        int int46 = strBuilder40.indexOf("#4#a4#", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder40.insert(1, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder40.setLength(1);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder35.appendln((java.lang.Object) strBuilder51);
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder52.appendln((int) (short) 0);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder54);
    }

    @Test
    public void test01686() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01686");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder16.appendln(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder20.append(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder22.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int27 = strBuilder24.indexOf(strMatcher26);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder24.append(' ');
        java.util.stream.IntStream intStream30 = strBuilder29.codePoints();
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("");
        int int33 = strBuilder29.lastIndexOf(strMatcher32);
        java.lang.StringBuffer stringBuffer34 = strBuilder29.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder22.append(stringBuffer34);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder35.appendln("59.0", 53, 6);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: startIndex must be valid");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(intStream30);
        org.junit.Assert.assertNotNull(strMatcher32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertNotNull(stringBuffer34);
        org.junit.Assert.assertEquals(stringBuffer34.toString(), " ");
        org.junit.Assert.assertNotNull(strBuilder35);
    }

    @Test
    public void test01687() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01687");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder7.deleteFirst('#');
        java.lang.String str10 = strBuilder9.toString();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder9.appendln((long) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder9.deleteAll("a");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder9.deleteCharAt((int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder17.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder19.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.appendln(10L);
        int int25 = strBuilder19.indexOf("#4#a4#", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder19.appendSeparator("", 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder28.append(false);
        boolean boolean31 = strBuilder28.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder9.appendln((java.lang.Object) boolean31);
        // The following exception was thrown during execution in test generation
        try {
            char char34 = strBuilder9.charAt(39);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 39");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + " " + "'", str10, " ");
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(strBuilder32);
    }

    @Test
    public void test01688() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01688");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("");
        java.lang.String str2 = strTokenizer1.getContent();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher5 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int6 = strBuilder3.indexOf(strMatcher5);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder3.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder8.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder8.appendln((int) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder8.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int18 = strBuilder15.indexOf(strMatcher17);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder14.deleteFirst(strMatcher17);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int23 = strBuilder20.indexOf(strMatcher22);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder20.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder25.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder27.deleteFirst('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder27.append('4');
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = org.apache.commons.lang3.text.StrMatcher.quoteMatcher();
        int int34 = strBuilder31.lastIndexOf(strMatcher32, (int) (short) -1);
        int int35 = strBuilder19.indexOf(strMatcher32);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = strTokenizer1.setIgnoredMatcher(strMatcher32);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder37.deleteFirst("hi!");
        java.lang.String str40 = strBuilder39.getNullText();
        char[] charArray42 = new char[] { 'a' };
        char[] charArray43 = strBuilder39.getChars(charArray42);
        // The following exception was thrown during execution in test generation
        try {
            int int45 = strMatcher32.isMatch(charArray43, (int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: -1");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strTokenizer1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "" + "'", str2, "");
        org.junit.Assert.assertNotNull(strMatcher5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strMatcher22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strMatcher32);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer36);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNotNull(charArray42);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray42), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray42), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray42), "[a]");
        org.junit.Assert.assertNotNull(charArray43);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray43), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray43), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray43), "[a]");
    }

    @Test
    public void test01689() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01689");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher8 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int9 = strBuilder6.indexOf(strMatcher8);
        int int10 = strBuilder0.indexOf(strMatcher8);
        int int13 = strBuilder0.indexOf("java.io.IOException: StrTokenizer[not tokenized yet]", (int) (byte) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder16.clear();
        java.lang.Throwable throwable21 = null;
        java.io.IOException iOException22 = new java.io.IOException("", throwable21);
        java.io.IOException iOException23 = new java.io.IOException("#4#a4#", throwable21);
        java.io.IOException iOException24 = new java.io.IOException(throwable21);
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray28 = new java.lang.Object[] { 1.0f, iOException24, false, 100, strBuilder27 };
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder17.appendWithSeparators(objArray28, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder30.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder32.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder32.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder38.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder40.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder40.appendln(10L);
        int int46 = strBuilder40.indexOf("#4#a4#", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder40.insert(1, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder37.appendln(strBuilder49);
        boolean boolean52 = strBuilder37.endsWith("StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = new org.apache.commons.lang3.text.StrTokenizer("", "#4#a4#");
        org.apache.commons.lang3.text.StrMatcher strMatcher56 = strTokenizer55.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder37.replaceAll(strMatcher56, "StrTokenizer[#4#a4#]");
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder0.replaceFirst(strMatcher56, "1false0\nfalse");
        boolean boolean62 = strBuilder60.contains('.');
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strMatcher8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray28), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray28), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(strMatcher56);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
    }

    @Test
    public void test01690() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01690");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = new org.apache.commons.lang3.text.StrTokenizer("hi!");
        java.lang.String str2 = strTokenizer1.previousToken();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = strTokenizer1.setQuoteChar(' ');
        java.lang.Object obj5 = strTokenizer4.clone();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = strTokenizer4.setIgnoredChar('4');
        boolean boolean8 = strTokenizer4.hasNext();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str9 = strTokenizer4.previous();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNotNull(strTokenizer4);
        org.junit.Assert.assertNotNull(obj5);
        org.junit.Assert.assertEquals(obj5.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj5), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj5), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
    }

    @Test
    public void test01691() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01691");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        java.lang.String str3 = strBuilder2.getNullText();
        char[] charArray5 = new char[] { 'a' };
        char[] charArray6 = strBuilder2.getChars(charArray5);
        char[] charArray11 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray12 = strBuilder2.getChars(charArray11);
        java.io.Reader reader13 = strBuilder2.asReader();
        reader13.mark((int) (byte) 0);
        char[] charArray22 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = new org.apache.commons.lang3.text.StrTokenizer(charArray22, ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer(charArray22, strMatcher26);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int31 = strBuilder28.indexOf(strMatcher30);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder28.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int37 = strBuilder34.indexOf(strMatcher36);
        int int38 = strBuilder28.indexOf(strMatcher36);
        char[] charArray45 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = new org.apache.commons.lang3.text.StrTokenizer(charArray45, ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher49 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = new org.apache.commons.lang3.text.StrTokenizer(charArray45, strMatcher49);
        org.apache.commons.lang3.text.StrMatcher strMatcher51 = strTokenizer50.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = new org.apache.commons.lang3.text.StrTokenizer(charArray22, strMatcher36, strMatcher51);
        int int53 = reader13.read(charArray22);
        long long55 = reader13.skip(0L);
        char[] charArray62 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = new org.apache.commons.lang3.text.StrTokenizer(charArray62, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer65 = new org.apache.commons.lang3.text.StrTokenizer(charArray62);
        int int66 = reader13.read(charArray62);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer69 = new org.apache.commons.lang3.text.StrTokenizer(charArray62, '4', ' ');
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer69.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: remove() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[a]");
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(reader13);
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray22), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray22), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray22), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strMatcher36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNotNull(charArray45);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray45), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray45), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray45), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher49);
        org.junit.Assert.assertNotNull(strMatcher51);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
        org.junit.Assert.assertTrue("'" + long55 + "' != '" + 0L + "'", long55 == 0L);
        org.junit.Assert.assertNotNull(charArray62);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray62), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray62), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray62), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + (-1) + "'", int66 == (-1));
    }

    @Test
    public void test01692() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01692");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.append(false);
        char[] charArray16 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer(charArray16, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = strTokenizer18.setDelimiterString("hi!");
        boolean boolean21 = strTokenizer18.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder5.appendFixedWidthPadRight((java.lang.Object) strTokenizer18, 10, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int28 = strBuilder25.indexOf(strMatcher27);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder25.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder30.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder30.appendln((int) (short) 10);
        boolean boolean35 = strBuilder5.equalsIgnoreCase(strBuilder30);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder30.insert((int) (byte) 1, 'a');
        java.lang.String str40 = strBuilder30.rightString((int) (byte) 0);
        java.lang.String str41 = strBuilder30.getNewLineText();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str43 = strBuilder30.substring(31);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: end < start");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "" + "'", str40, "");
        org.junit.Assert.assertNull(str41);
    }

    @Test
    public void test01693() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01693");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.append(false);
        char[] charArray16 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer(charArray16, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = strTokenizer18.setDelimiterString("hi!");
        boolean boolean21 = strTokenizer18.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder5.appendFixedWidthPadRight((java.lang.Object) strTokenizer18, 10, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int28 = strBuilder25.indexOf(strMatcher27);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder25.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder30.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder30.appendln((int) (short) 10);
        boolean boolean35 = strBuilder5.equalsIgnoreCase(strBuilder30);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder30.insert((int) (byte) 1, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder38.appendln(false);
        char[] charArray47 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = new org.apache.commons.lang3.text.StrTokenizer(charArray47, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = strTokenizer49.setDelimiterString("hi!");
        java.lang.String str52 = strTokenizer51.nextToken();
        java.util.List<java.lang.String> strList53 = strTokenizer51.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder54.deleteFirst("hi!");
        java.lang.String str57 = strBuilder56.getNullText();
        char[] charArray59 = new char[] { 'a' };
        char[] charArray60 = strBuilder56.getChars(charArray59);
        char[] charArray65 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray66 = strBuilder56.getChars(charArray65);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer67 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray66);
        int int68 = strList53.indexOf((java.lang.Object) charArray66);
        char[] charArray69 = strBuilder40.getChars(charArray66);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer71 = new org.apache.commons.lang3.text.StrTokenizer(charArray66, "1false0\nfalse");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer72 = new org.apache.commons.lang3.text.StrTokenizer(charArray66);
        org.apache.commons.lang3.text.StrMatcher strMatcher73 = strTokenizer72.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer75 = strTokenizer72.setIgnoreEmptyTokens(false);
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(charArray47);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray47), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray47), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray47), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer51);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "#4#a4#" + "'", str52, "#4#a4#");
        org.junit.Assert.assertNotNull(strList53);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNull(str57);
        org.junit.Assert.assertNotNull(charArray59);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray59), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray59), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray59), "[a]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[a]");
        org.junit.Assert.assertNotNull(charArray65);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray65), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray65), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray65), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray66);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray66), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray66), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray66), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(strTokenizer67);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + (-1) + "'", int68 == (-1));
        org.junit.Assert.assertNotNull(charArray69);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray69), " a10\nfalse\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray69), " a10\nfalse\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray69), "[ , a, 1, 0, \n, f, a, l, s, e, \n]");
        org.junit.Assert.assertNotNull(strMatcher73);
        org.junit.Assert.assertNotNull(strTokenizer75);
    }

    @Test
    public void test01694() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01694");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder16.appendln(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder20.append(false);
        java.io.Writer writer23 = strBuilder22.asWriter();
        writer23.write("0\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder26.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder28.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder28.appendln(10L);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder28.setNewLineText("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder28.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder34.appendln(strBuilder35, (int) (short) 1, (int) ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder34.appendln("1.0java.io.IOExceptionfalse1001.0\n35.0\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder40.deleteAll("java.io.IOException: StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = new org.apache.commons.lang3.text.StrBuilder("");
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder40.insert(2, (java.lang.Object) strBuilder45);
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder40.appendln((int) (short) 100);
        java.lang.String str49 = strBuilder40.getNullText();
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder40.replaceFirst('1', 'a');
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder54.deleteFirst("hi!");
        java.lang.String str57 = strBuilder56.getNullText();
        char[] charArray59 = new char[] { 'a' };
        char[] charArray60 = strBuilder56.getChars(charArray59);
        int int64 = strMatcher53.isMatch(charArray60, 0, 0, (int) (byte) 10);
        org.apache.commons.lang3.text.StrMatcher strMatcher65 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray60);
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder40.appendln(charArray60);
        // The following exception was thrown during execution in test generation
        try {
            writer23.write(charArray60, 34, 38);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: Invalid startIndex: 38");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(writer23);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strMatcher53);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNull(str57);
        org.junit.Assert.assertNotNull(charArray59);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray59), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray59), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray59), "[a]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[a]");
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 0 + "'", int64 == 0);
        org.junit.Assert.assertNotNull(strMatcher65);
        org.junit.Assert.assertNotNull(strBuilder66);
    }

    @Test
    public void test01695() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01695");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder3.append(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder3.replaceFirst(' ', ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder8.deleteAll('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder8.appendln(".IOExceptionfalse1001.0\n35.0\n1false0\n\naa4#4\n###############################1", 3, (int) '\000');
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int18 = strBuilder15.indexOf(strMatcher17);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder15.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder20.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder20.append(false);
        char[] charArray31 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray31, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = strTokenizer33.setDelimiterString("hi!");
        boolean boolean36 = strTokenizer33.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder20.appendFixedWidthPadRight((java.lang.Object) strTokenizer33, 10, ' ');
        int int40 = strTokenizer33.previousIndex();
        boolean boolean41 = strTokenizer33.hasNext();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = strTokenizer33.reset("#4#a4#");
        java.util.List<java.lang.String> strList44 = strTokenizer43.getTokenList();
        boolean boolean45 = strList44.isEmpty();
        boolean boolean46 = strList44.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder8.appendAll((java.lang.Iterable<java.lang.String>) strList44);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str50 = strList44.set(39, "ptionfalse100");
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 39, Size: 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray31), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray31), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray31), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(strTokenizer43);
        org.junit.Assert.assertNotNull(strList44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(strBuilder47);
    }

    @Test
    public void test01696() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01696");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        boolean boolean4 = strBuilder3.isEmpty();
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder7.deleteFirst("hi!");
        java.lang.String str10 = strBuilder9.getNullText();
        char[] charArray12 = new char[] { 'a' };
        char[] charArray13 = strBuilder9.getChars(charArray12);
        int int15 = strMatcher6.isMatch(charArray13, 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.append(charArray13);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder3.append((long) 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int22 = strBuilder19.indexOf(strMatcher21);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder19.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder24.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder24.append(false);
        char[] charArray35 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = new org.apache.commons.lang3.text.StrTokenizer(charArray35, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = strTokenizer37.setDelimiterString("hi!");
        boolean boolean40 = strTokenizer37.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder24.appendFixedWidthPadRight((java.lang.Object) strTokenizer37, 10, ' ');
        int int44 = strTokenizer37.previousIndex();
        boolean boolean45 = strTokenizer37.hasNext();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = strTokenizer37.reset("#4#a4#");
        java.util.List<java.lang.String> strList48 = strTokenizer37.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder3.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer37, "StrTokenizer[not tokenized yet]");
        boolean boolean51 = strBuilder50.isEmpty();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[a]");
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[a]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(strTokenizer47);
        org.junit.Assert.assertNotNull(strList48);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
    }

    @Test
    public void test01697() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01697");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.appendln((int) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder5.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int15 = strBuilder12.indexOf(strMatcher14);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder11.deleteFirst(strMatcher14);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder16.minimizeCapacity();
        char[] charArray24 = new char[] { 'a', '4', 'a', 'a', '#', ' ' };
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int28 = strBuilder25.indexOf(strMatcher27);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder25.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int34 = strBuilder31.indexOf(strMatcher33);
        int int35 = strBuilder25.indexOf(strMatcher33);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = new org.apache.commons.lang3.text.StrTokenizer(charArray24, strMatcher33);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder16.replace(strMatcher33, "", 2, (int) (short) 100, 10);
        char[] charArray44 = strBuilder16.toCharArray((int) (byte) 0, (int) (byte) 0);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = strBuilder16.asTokenizer();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = strTokenizer45.setDelimiterChar('0');
        java.util.List<java.lang.String> strList48 = strTokenizer47.getTokenList();
        java.lang.String[] strArray52 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList53 = new java.util.ArrayList<java.lang.String>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList53, strArray52);
        char[] charArray61 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer63 = new org.apache.commons.lang3.text.StrTokenizer(charArray61, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer65 = strTokenizer63.setDelimiterString("hi!");
        boolean boolean66 = strTokenizer63.isIgnoreEmptyTokens();
        java.lang.String str67 = strTokenizer63.next();
        int int68 = strList53.indexOf((java.lang.Object) strTokenizer63);
        java.util.ListIterator<java.lang.String> strItor70 = strList53.listIterator((int) (byte) 0);
        java.lang.String[] strArray74 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList75 = new java.util.ArrayList<java.lang.String>();
        boolean boolean76 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList75, strArray74);
        char[] charArray83 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer85 = new org.apache.commons.lang3.text.StrTokenizer(charArray83, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer87 = strTokenizer85.setDelimiterString("hi!");
        boolean boolean88 = strTokenizer85.isIgnoreEmptyTokens();
        java.lang.String str89 = strTokenizer85.next();
        int int90 = strList75.indexOf((java.lang.Object) strTokenizer85);
        java.util.ListIterator<java.lang.String> strItor92 = strList75.listIterator((int) (byte) 0);
        java.util.Iterator<java.lang.String> strItor93 = strList75.iterator();
        boolean boolean94 = strList53.removeAll((java.util.Collection<java.lang.String>) strList75);
        java.lang.String str96 = strList75.get(1);
        boolean boolean97 = strList48.addAll((java.util.Collection<java.lang.String>) strList75);
        java.lang.reflect.GenericDeclaration[] genericDeclarationArray98 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.reflect.GenericDeclaration[] genericDeclarationArray99 = strList48.toArray(genericDeclarationArray98);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "a4aa# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "a4aa# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[a, 4, a, a, #,  ]");
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(charArray44);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray44), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray44), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray44), "[]");
        org.junit.Assert.assertNotNull(strTokenizer45);
        org.junit.Assert.assertNotNull(strTokenizer47);
        org.junit.Assert.assertNotNull(strList48);
        org.junit.Assert.assertNotNull(strArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(charArray61);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray61), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray61), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray61), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "#4#a4#" + "'", str67, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + (-1) + "'", int68 == (-1));
        org.junit.Assert.assertNotNull(strItor70);
        org.junit.Assert.assertNotNull(strArray74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNotNull(charArray83);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray83), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray83), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray83), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer87);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "#4#a4#" + "'", str89, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + (-1) + "'", int90 == (-1));
        org.junit.Assert.assertNotNull(strItor92);
        org.junit.Assert.assertNotNull(strItor93);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + true + "'", boolean94 == true);
        org.junit.Assert.assertEquals("'" + str96 + "' != '" + "" + "'", str96, "");
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + true + "'", boolean97 == true);
    }

    @Test
    public void test01698() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01698");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        java.lang.String str3 = strBuilder2.getNullText();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.append(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder7.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder9.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder9.appendln(10L);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder9.setNewLineText("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder9.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder15.appendln(strBuilder16, (int) (short) 1, (int) ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder15.appendln("1.0java.io.IOExceptionfalse1001.0\n35.0\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder21.deleteAll("java.io.IOException: StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder("");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder21.insert(2, (java.lang.Object) strBuilder26);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder21.appendln((int) (short) 100);
        java.lang.String str30 = strBuilder21.getNullText();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder21.replaceFirst('1', 'a');
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder35.deleteFirst("hi!");
        java.lang.String str38 = strBuilder37.getNullText();
        char[] charArray40 = new char[] { 'a' };
        char[] charArray41 = strBuilder37.getChars(charArray40);
        int int45 = strMatcher34.isMatch(charArray41, 0, 0, (int) (byte) 10);
        org.apache.commons.lang3.text.StrMatcher strMatcher46 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray41);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder21.appendln(charArray41);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder5.insert(19, charArray41);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 19");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strMatcher34);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNotNull(charArray40);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray40), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray40), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray40), "[a]");
        org.junit.Assert.assertNotNull(charArray41);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray41), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray41), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray41), "[a]");
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertNotNull(strMatcher46);
        org.junit.Assert.assertNotNull(strBuilder47);
    }

    @Test
    public void test01699() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01699");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.append(false);
        char[] charArray16 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer(charArray16, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = strTokenizer18.setDelimiterString("hi!");
        boolean boolean21 = strTokenizer18.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder5.appendFixedWidthPadRight((java.lang.Object) strTokenizer18, 10, ' ');
        int int25 = strTokenizer18.previousIndex();
        boolean boolean26 = strTokenizer18.hasNext();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = strTokenizer18.reset("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher31 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int32 = strBuilder29.indexOf(strMatcher31);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder29.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder34.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder34.appendln((int) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder34.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int44 = strBuilder41.indexOf(strMatcher43);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder40.deleteFirst(strMatcher43);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder45.minimizeCapacity();
        char[] charArray53 = new char[] { 'a', '4', 'a', 'a', '#', ' ' };
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher56 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int57 = strBuilder54.indexOf(strMatcher56);
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder54.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher62 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int63 = strBuilder60.indexOf(strMatcher62);
        int int64 = strBuilder54.indexOf(strMatcher62);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer65 = new org.apache.commons.lang3.text.StrTokenizer(charArray53, strMatcher62);
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder45.replace(strMatcher62, "", 2, (int) (short) 100, 10);
        char[] charArray73 = strBuilder45.toCharArray((int) (byte) 0, (int) (byte) 0);
        org.apache.commons.lang3.text.StrMatcher strMatcher74 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder75.deleteFirst("hi!");
        java.lang.String str78 = strBuilder77.getNullText();
        char[] charArray80 = new char[] { 'a' };
        char[] charArray81 = strBuilder77.getChars(charArray80);
        int int85 = strMatcher74.isMatch(charArray81, 0, 0, (int) (byte) 10);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer86 = new org.apache.commons.lang3.text.StrTokenizer(charArray73, strMatcher74);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer87 = strTokenizer28.setDelimiterMatcher(strMatcher74);
        boolean boolean88 = strTokenizer28.hasPrevious();
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer28.add("java.io.IOException: hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: add() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(strTokenizer28);
        org.junit.Assert.assertNotNull(strMatcher31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strMatcher43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(charArray53);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray53), "a4aa# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray53), "a4aa# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray53), "[a, 4, a, a, #,  ]");
        org.junit.Assert.assertNotNull(strMatcher56);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strMatcher62);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + (-1) + "'", int63 == (-1));
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + (-1) + "'", int64 == (-1));
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(charArray73);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray73), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray73), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray73), "[]");
        org.junit.Assert.assertNotNull(strMatcher74);
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNull(str78);
        org.junit.Assert.assertNotNull(charArray80);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray80), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray80), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray80), "[a]");
        org.junit.Assert.assertNotNull(charArray81);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray81), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray81), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray81), "[a]");
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 0 + "'", int85 == 0);
        org.junit.Assert.assertNotNull(strTokenizer87);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
    }

    @Test
    public void test01700() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01700");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        java.lang.String str4 = strBuilder2.leftString(32);
        java.util.stream.IntStream intStream5 = strBuilder2.chars();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence8 = strBuilder2.subSequence(1, 66);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 66");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(intStream5);
    }

    @Test
    public void test01701() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01701");
        char[] charArray0 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer(charArray0, "StrTokenizer[1.0java.io.IOExceptionfalse1001.0]");
    }

    @Test
    public void test01702() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01702");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder18.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder24.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder26.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.appendln(10L);
        int int32 = strBuilder26.indexOf("#4#a4#", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder26.insert(1, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder23.appendln(strBuilder35);
        java.io.Writer writer37 = strBuilder36.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder38.deleteFirst("hi!");
        java.lang.String str41 = strBuilder40.getNullText();
        char[] charArray43 = new char[] { 'a' };
        char[] charArray44 = strBuilder40.getChars(charArray43);
        char[] charArray49 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray50 = strBuilder40.getChars(charArray49);
        writer37.write(charArray49);
        writer37.close();
        // The following exception was thrown during execution in test generation
        try {
            writer37.write("#a4#-1", (int) 'a', (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: startIndex must be valid");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(writer37);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNotNull(charArray43);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray43), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray43), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray43), "[a]");
        org.junit.Assert.assertNotNull(charArray44);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray44), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray44), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray44), "[a]");
        org.junit.Assert.assertNotNull(charArray49);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray49), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray49), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray49), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray50);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray50), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray50), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray50), "[a, 4,  , 4]");
    }

    @Test
    public void test01703() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01703");
        java.lang.String[] strArray3 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList4 = new java.util.ArrayList<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        char[] charArray12 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strTokenizer14.setDelimiterString("hi!");
        boolean boolean17 = strTokenizer14.isIgnoreEmptyTokens();
        java.lang.String str18 = strTokenizer14.next();
        int int19 = strList4.indexOf((java.lang.Object) strTokenizer14);
        java.util.ListIterator<java.lang.String> strItor21 = strList4.listIterator((int) (byte) 0);
        java.util.Iterator<java.lang.String> strItor22 = strList4.iterator();
        java.lang.String[] strArray26 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList27 = new java.util.ArrayList<java.lang.String>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList27, strArray26);
        char[] charArray35 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = new org.apache.commons.lang3.text.StrTokenizer(charArray35, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = strTokenizer37.setDelimiterString("hi!");
        boolean boolean40 = strTokenizer37.isIgnoreEmptyTokens();
        java.lang.String str41 = strTokenizer37.next();
        int int42 = strList27.indexOf((java.lang.Object) strTokenizer37);
        boolean boolean43 = strList4.addAll((java.util.Collection<java.lang.String>) strList27);
        java.util.ListIterator<java.lang.String> strItor44 = strList27.listIterator();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher47 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int48 = strBuilder45.indexOf(strMatcher47);
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder45.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int54 = strBuilder51.indexOf(strMatcher53);
        int int55 = strBuilder45.indexOf(strMatcher53);
        int int56 = strList27.indexOf((java.lang.Object) strBuilder45);
        int int57 = strList27.size();
        java.lang.Object[] objArray58 = strList27.toArray();
        java.util.ListIterator<java.lang.String> strItor59 = strList27.listIterator();
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "#4#a4#" + "'", str18, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(strItor21);
        org.junit.Assert.assertNotNull(strItor22);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "#4#a4#" + "'", str41, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(strItor44);
        org.junit.Assert.assertNotNull(strMatcher47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strMatcher53);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1));
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1));
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 3 + "'", int57 == 3);
        org.junit.Assert.assertNotNull(objArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray58), "[, , ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray58), "[, , ]");
        org.junit.Assert.assertNotNull(strItor59);
    }

    @Test
    public void test01704() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01704");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.appendNull();
        java.lang.String str6 = strBuilder3.substring((int) (short) 0, (int) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int10 = strBuilder7.indexOf(strMatcher9);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder7.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder12.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder12.appendln((int) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln((double) 32);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendSeparator('a');
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder3.append(strBuilder20, 11, 100);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: startIndex must be valid");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertNotNull(strMatcher9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
    }

    @Test
    public void test01705() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01705");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.append(false);
        char[] charArray16 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer(charArray16, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = strTokenizer18.setDelimiterString("hi!");
        boolean boolean21 = strTokenizer18.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder5.appendFixedWidthPadRight((java.lang.Object) strTokenizer18, 10, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int28 = strBuilder25.indexOf(strMatcher27);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder25.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder30.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder30.appendln((int) (short) 10);
        boolean boolean35 = strBuilder5.equalsIgnoreCase(strBuilder30);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder30.insert((int) (byte) 1, 'a');
        char char40 = strBuilder30.charAt(0);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = strBuilder30.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder30.appendPadding((int) '#', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder30.ensureCapacity(33);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder46.delete((int) 'I', 22);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: end < start");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertTrue("'" + char40 + "' != '" + ' ' + "'", char40 == ' ');
        org.junit.Assert.assertNotNull(strTokenizer41);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder46);
    }

    @Test
    public void test01706() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01706");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        char[] charArray9 = new char[] { 'a', 'a', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = new org.apache.commons.lang3.text.StrTokenizer(charArray9);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder2.appendln(charArray9);
        int int14 = strBuilder11.indexOf('4', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder11.appendFixedWidthPadLeft((int) (byte) 1, 32, '#');
        java.lang.String str19 = strBuilder18.getNullText();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder18.setNullText("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder21.replaceFirst("10\n\n", "0\nzinekoTrtSeslaf ");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder25.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder27.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder27.appendln(10L);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder30.appendln(strBuilder31, 1, (int) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder35.deleteFirst("hi!");
        java.lang.String str38 = strBuilder37.getNullText();
        char[] charArray40 = new char[] { 'a' };
        char[] charArray41 = strBuilder37.getChars(charArray40);
        char[] charArray46 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray47 = strBuilder37.getChars(charArray46);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder37.appendln("java.io.IOException: ");
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder34.append(strBuilder49, 5, (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder24.appendFixedWidthPadRight((java.lang.Object) strBuilder34, (int) (short) 100, '#');
        java.lang.String str57 = strBuilder55.substring(11);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(charArray9);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray9), "aa4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray9), "aa4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray9), "[a, a, 4, #, 4]");
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2 + "'", int14 == 2);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNotNull(charArray40);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray40), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray40), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray40), "[a]");
        org.junit.Assert.assertNotNull(charArray41);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray41), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray41), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray41), "[a]");
        org.junit.Assert.assertNotNull(charArray46);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray46), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray46), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray46), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray47);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray47), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray47), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray47), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "##########################110\n\ni###############################################################################################" + "'", str57, "##########################110\n\ni###############################################################################################");
    }

    @Test
    public void test01707() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01707");
        java.io.IOException iOException1 = new java.io.IOException(" falseStrTokeniz");
    }

    @Test
    public void test01708() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01708");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder3.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder4.appendln((long) '#');
        java.util.stream.IntStream intStream7 = strBuilder4.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder4.appendSeparator("10\n\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder10.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder12.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder12.insert(0, (double) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder16.appendFixedWidthPadRight((java.lang.Object) 100.0d, 1, '4');
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        int int23 = strBuilder20.lastIndexOf(strMatcher21, (int) (short) 10);
        int int25 = strBuilder4.indexOf(strMatcher21, 4);
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder27.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder29.clear();
        java.lang.Throwable throwable34 = null;
        java.io.IOException iOException35 = new java.io.IOException("", throwable34);
        java.io.IOException iOException36 = new java.io.IOException("#4#a4#", throwable34);
        java.io.IOException iOException37 = new java.io.IOException(throwable34);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray41 = new java.lang.Object[] { 1.0f, iOException37, false, 100, strBuilder40 };
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder30.appendWithSeparators(objArray41, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder43.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder45.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder45.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder51.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder53.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder53.appendln(10L);
        int int59 = strBuilder53.indexOf("#4#a4#", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder53.insert(1, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder50.appendln(strBuilder62);
        java.io.Writer writer64 = strBuilder63.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder65.deleteFirst("hi!");
        java.lang.String str68 = strBuilder67.getNullText();
        char[] charArray70 = new char[] { 'a' };
        char[] charArray71 = strBuilder67.getChars(charArray70);
        char[] charArray76 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray77 = strBuilder67.getChars(charArray76);
        writer64.write(charArray76);
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder4.insert(0, charArray76);
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder79.appendSeparator(' ', '\000');
        int int84 = strBuilder82.indexOf('.');
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(intStream7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 5 + "'", int25 == 5);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(objArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray41), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray41), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-1) + "'", int59 == (-1));
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(writer64);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNull(str68);
        org.junit.Assert.assertNotNull(charArray70);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray70), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray70), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray70), "[a]");
        org.junit.Assert.assertNotNull(charArray71);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray71), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray71), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray71), "[a]");
        org.junit.Assert.assertNotNull(charArray76);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray76), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray76), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray76), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray77);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray77), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray77), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray77), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertNotNull(strBuilder82);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + (-1) + "'", int84 == (-1));
    }

    @Test
    public void test01709() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01709");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        java.lang.String str3 = strBuilder2.getNullText();
        char[] charArray5 = new char[] { 'a' };
        char[] charArray6 = strBuilder2.getChars(charArray5);
        char[] charArray11 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray12 = strBuilder2.getChars(charArray11);
        java.io.Reader reader13 = strBuilder2.asReader();
        reader13.mark((int) (byte) 0);
        boolean boolean16 = reader13.markSupported();
        boolean boolean17 = reader13.markSupported();
        boolean boolean18 = reader13.ready();
        int int19 = reader13.read();
        reader13.close();
        java.nio.CharBuffer charBuffer21 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int22 = reader13.read(charBuffer21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[a]");
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(reader13);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
    }

    @Test
    public void test01710() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01710");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder2.insert(0, (double) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder6.appendFixedWidthPadRight((java.lang.Object) 100.0d, 1, '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder10.trim();
        java.lang.Object[] objArray12 = new java.lang.Object[] {};
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.appendAll(objArray12);
        char[] charArray14 = strBuilder10.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray14);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer(charArray14, '#', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray14);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer(charArray14, "StrTokenizer[100.0\n]");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str22 = strTokenizer21.previous();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(objArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray12), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray12), "[]");
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(charArray14);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray14), "100.01");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray14), "100.01");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray14), "[1, 0, 0, ., 0, 1]");
        org.junit.Assert.assertNotNull(strTokenizer15);
        org.junit.Assert.assertNotNull(strTokenizer19);
    }

    @Test
    public void test01711() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01711");
        char[] charArray6 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer8.setDelimiterString("hi!");
        java.lang.String str11 = strTokenizer10.nextToken();
        java.util.List<java.lang.String> strList12 = strTokenizer10.getTokenList();
        java.util.ListIterator<java.lang.String> strItor13 = strList12.listIterator();
        // The following exception was thrown during execution in test generation
        try {
            strItor13.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: null");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "#4#a4#" + "'", str11, "#4#a4#");
        org.junit.Assert.assertNotNull(strList12);
        org.junit.Assert.assertNotNull(strItor13);
    }

    @Test
    public void test01712() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01712");
        java.lang.String[] strArray3 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList4 = new java.util.ArrayList<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        char[] charArray12 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strTokenizer14.setDelimiterString("hi!");
        boolean boolean17 = strTokenizer14.isIgnoreEmptyTokens();
        java.lang.String str18 = strTokenizer14.next();
        int int19 = strList4.indexOf((java.lang.Object) strTokenizer14);
        java.util.ListIterator<java.lang.String> strItor21 = strList4.listIterator((int) (byte) 0);
        java.util.Iterator<java.lang.String> strItor22 = strList4.iterator();
        java.lang.String[] strArray26 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList27 = new java.util.ArrayList<java.lang.String>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList27, strArray26);
        char[] charArray35 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = new org.apache.commons.lang3.text.StrTokenizer(charArray35, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = strTokenizer37.setDelimiterString("hi!");
        boolean boolean40 = strTokenizer37.isIgnoreEmptyTokens();
        java.lang.String str41 = strTokenizer37.next();
        int int42 = strList27.indexOf((java.lang.Object) strTokenizer37);
        boolean boolean43 = strList4.addAll((java.util.Collection<java.lang.String>) strList27);
        java.util.ListIterator<java.lang.String> strItor44 = strList27.listIterator();
        boolean boolean46 = strList27.add("");
        int int47 = strList27.size();
        char[] charArray54 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = new org.apache.commons.lang3.text.StrTokenizer(charArray54, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = strTokenizer56.setDelimiterString("hi!");
        boolean boolean59 = strTokenizer56.hasNext();
        java.util.List<java.lang.String> strList60 = strTokenizer56.getTokenList();
        boolean boolean61 = strList27.removeAll((java.util.Collection<java.lang.String>) strList60);
        char[] charArray68 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer70 = new org.apache.commons.lang3.text.StrTokenizer(charArray68, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer72 = strTokenizer70.setDelimiterString("hi!");
        java.lang.String str73 = strTokenizer72.nextToken();
        java.util.List<java.lang.String> strList74 = strTokenizer72.getTokenList();
        boolean boolean75 = strList60.removeAll((java.util.Collection<java.lang.String>) strList74);
        boolean boolean76 = strList74.isEmpty();
        boolean boolean78 = strList74.add("100.0false\n");
        boolean boolean80 = strList74.add("1.0java.io.IOExceptionfalse1001.0\nfalse\nfalse");
        java.util.ListIterator<java.lang.String> strItor81 = strList74.listIterator();
        int int82 = strList74.size();
        java.lang.Object[] objArray83 = strList74.toArray();
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "#4#a4#" + "'", str18, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(strItor21);
        org.junit.Assert.assertNotNull(strItor22);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "#4#a4#" + "'", str41, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(strItor44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 4 + "'", int47 == 4);
        org.junit.Assert.assertNotNull(charArray54);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray54), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray54), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray54), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(strList60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(charArray68);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray68), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray68), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray68), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer72);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "#4#a4#" + "'", str73, "#4#a4#");
        org.junit.Assert.assertNotNull(strList74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(strItor81);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 3 + "'", int82 == 3);
        org.junit.Assert.assertNotNull(objArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray83), "[#4#a4#, 100.0false\n, 1.0java.io.IOExceptionfalse1001.0\nfalse\nfalse]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray83), "[#4#a4#, 100.0false\n, 1.0java.io.IOExceptionfalse1001.0\nfalse\nfalse]");
    }

    @Test
    public void test01713() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01713");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.appendln(10L);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteFirst("");
        char[] charArray8 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder7.appendln(charArray8);
        boolean boolean10 = strBuilder7.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder12.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder14.clear();
        boolean boolean16 = strBuilder15.isEmpty();
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder19.deleteFirst("hi!");
        java.lang.String str22 = strBuilder21.getNullText();
        char[] charArray24 = new char[] { 'a' };
        char[] charArray25 = strBuilder21.getChars(charArray24);
        int int27 = strMatcher18.isMatch(charArray25, 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder15.append(charArray25);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder7.insert((int) (byte) 1, charArray25);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer(charArray25, "StrTokenizer[#4#a4#]");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = strTokenizer31.setDelimiterChar('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = new org.apache.commons.lang3.text.StrBuilder(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int39 = strBuilder36.indexOf(strMatcher38);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder36.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder41.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder41.appendln((int) (short) 10);
        org.apache.commons.lang3.text.StrMatcher strMatcher46 = org.apache.commons.lang3.text.StrMatcher.spaceMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder41.replace(strMatcher46, "StrTokenizer[#4#a4#]", (int) (short) 1, 1, (int) (byte) 10);
        int int53 = strBuilder35.lastIndexOf(strMatcher46, (int) (short) 100);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = strTokenizer31.setDelimiterMatcher(strMatcher46);
        int int55 = strTokenizer54.size();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[a]");
        org.junit.Assert.assertNotNull(charArray25);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray25), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray25), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray25), "[a]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strTokenizer33);
        org.junit.Assert.assertNotNull(strMatcher38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strMatcher46);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer54);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 1 + "'", int55 == 1);
    }

    @Test
    public void test01714() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01714");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        java.lang.String str4 = strBuilder2.leftString(32);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteFirst("hi!");
        java.lang.String str8 = strBuilder7.getNullText();
        char[] charArray10 = new char[] { 'a' };
        char[] charArray11 = strBuilder7.getChars(charArray10);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder2.append((java.lang.Object) strBuilder7);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder2.replaceAll('#', ' ');
        java.util.stream.IntStream intStream16 = strBuilder2.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder2.appendSeparator('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder19.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder21.clear();
        java.lang.Throwable throwable26 = null;
        java.io.IOException iOException27 = new java.io.IOException("", throwable26);
        java.io.IOException iOException28 = new java.io.IOException("#4#a4#", throwable26);
        java.io.IOException iOException29 = new java.io.IOException(throwable26);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray33 = new java.lang.Object[] { 1.0f, iOException29, false, 100, strBuilder32 };
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder22.appendWithSeparators(objArray33, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder35.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder37.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder37.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder43.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder45.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder45.appendln(10L);
        int int51 = strBuilder45.indexOf("#4#a4#", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder45.insert(1, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder42.appendln(strBuilder54);
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder54.trim();
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder57.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder59.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder59.appendln(10L);
        int int65 = strBuilder59.indexOf("#4#a4#", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder59.insert(1, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder59.setLength(1);
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder54.appendln((java.lang.Object) strBuilder70);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder2.append(strBuilder54, 72, 34);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: startIndex must be valid");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[a]");
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(intStream16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray33), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1));
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + (-1) + "'", int65 == (-1));
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(strBuilder71);
    }

    @Test
    public void test01715() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01715");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder((int) ' ');
        java.lang.String[] strArray5 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList6 = new java.util.ArrayList<java.lang.String>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList6, strArray5);
        char[] charArray14 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = new org.apache.commons.lang3.text.StrTokenizer(charArray14, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = strTokenizer16.setDelimiterString("hi!");
        boolean boolean19 = strTokenizer16.isIgnoreEmptyTokens();
        java.lang.String str20 = strTokenizer16.next();
        int int21 = strList6.indexOf((java.lang.Object) strTokenizer16);
        java.util.ListIterator<java.lang.String> strItor23 = strList6.listIterator((int) (byte) 0);
        java.util.Iterator<java.lang.String> strItor24 = strList6.iterator();
        char[] charArray31 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray31, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = strTokenizer33.setDelimiterString("hi!");
        boolean boolean36 = strTokenizer33.isIgnoreEmptyTokens();
        java.lang.String str37 = strTokenizer33.next();
        boolean boolean38 = strList6.equals((java.lang.Object) strTokenizer33);
        java.lang.Object[] objArray39 = strList6.toArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder1.appendWithSeparators((java.lang.Iterable<java.lang.String>) strList6, "1false0\nfalse");
        char[] charArray48 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = new org.apache.commons.lang3.text.StrTokenizer(charArray48, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = strTokenizer50.setDelimiterString("hi!");
        java.lang.String str53 = strTokenizer52.nextToken();
        java.util.List<java.lang.String> strList54 = strTokenizer52.getTokenList();
        boolean boolean56 = strList54.add("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("");
        java.lang.String str59 = strTokenizer58.getContent();
        boolean boolean60 = strList54.equals((java.lang.Object) strTokenizer58);
        org.apache.commons.lang3.text.StrMatcher strMatcher61 = org.apache.commons.lang3.text.StrMatcher.singleQuoteMatcher();
        boolean boolean62 = strList54.equals((java.lang.Object) strMatcher61);
        boolean boolean63 = strList6.retainAll((java.util.Collection<java.lang.String>) strList54);
        boolean boolean65 = strList6.add("0\n1false0\n\n#");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str68 = strList6.set(53, "1.0jv.io.IOExceptionflse1001.0\n35.0\njv.io.IOExce");
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 53, Size: 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(charArray14);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray14), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray14), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray14), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "#4#a4#" + "'", str20, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertNotNull(strItor23);
        org.junit.Assert.assertNotNull(strItor24);
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray31), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray31), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray31), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "#4#a4#" + "'", str37, "#4#a4#");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(objArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray39), "[, , ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray39), "[, , ]");
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(charArray48);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray48), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray48), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray48), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer52);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "#4#a4#" + "'", str53, "#4#a4#");
        org.junit.Assert.assertNotNull(strList54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(strTokenizer58);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "" + "'", str59, "");
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(strMatcher61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
    }

    @Test
    public void test01716() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01716");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.appendln(10L);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder2.setNewLineText("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder8.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder10.clear();
        java.lang.Throwable throwable15 = null;
        java.io.IOException iOException16 = new java.io.IOException("", throwable15);
        java.io.IOException iOException17 = new java.io.IOException("#4#a4#", throwable15);
        java.io.IOException iOException18 = new java.io.IOException(throwable15);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray22 = new java.lang.Object[] { 1.0f, iOException18, false, 100, strBuilder21 };
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder11.appendWithSeparators(objArray22, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder25.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder27.clear();
        java.lang.String str30 = strBuilder28.rightString((int) (short) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder11.append((java.lang.CharSequence) str30);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder31.deleteFirst("");
        java.lang.StringBuffer stringBuffer34 = strBuilder33.toStringBuffer();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder2.appendln(stringBuffer34, 22, 17);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: length must be valid");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(objArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray22), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray22), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(stringBuffer34);
        org.junit.Assert.assertEquals(stringBuffer34.toString(), "1.0java.io.IOExceptionfalse100");
    }

    @Test
    public void test01717() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01717");
        char[] charArray6 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer8.setDelimiterString("hi!");
        boolean boolean11 = strTokenizer8.isIgnoreEmptyTokens();
        boolean boolean12 = strTokenizer8.isIgnoreEmptyTokens();
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer8.set("java.io.IOException");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: set() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
    }

    @Test
    public void test01718() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01718");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder18.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder24.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder26.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.appendln(10L);
        int int32 = strBuilder26.indexOf("#4#a4#", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder26.insert(1, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder23.appendln(strBuilder35);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder36.ensureCapacity(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher41 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int42 = strBuilder39.indexOf(strMatcher41);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder39.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder44.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder44.appendln((int) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder44.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int54 = strBuilder51.indexOf(strMatcher53);
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder50.deleteFirst(strMatcher53);
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder36.appendln(strBuilder55);
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder55.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder55.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder59.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder61.clear();
        java.lang.Throwable throwable66 = null;
        java.io.IOException iOException67 = new java.io.IOException("", throwable66);
        java.io.IOException iOException68 = new java.io.IOException("#4#a4#", throwable66);
        java.io.IOException iOException69 = new java.io.IOException(throwable66);
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray73 = new java.lang.Object[] { 1.0f, iOException69, false, 100, strBuilder72 };
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder62.appendWithSeparators(objArray73, "");
        java.lang.String str77 = strBuilder62.substring(2);
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder62.deleteFirst("a");
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder62.append('#');
        java.lang.StringBuffer stringBuffer82 = strBuilder62.toStringBuffer();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder85 = strBuilder55.appendln(stringBuffer82, 55, 8);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: startIndex must be valid");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strMatcher41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strMatcher53);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(objArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray73), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray73), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "0java.io.IOExceptionfalse100" + "'", str77, "0java.io.IOExceptionfalse100");
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertNotNull(strBuilder81);
        org.junit.Assert.assertNotNull(stringBuffer82);
        org.junit.Assert.assertEquals(stringBuffer82.toString(), "1.0jva.io.IOExceptionfalse100#");
    }

    @Test
    public void test01719() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01719");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append("#4#a4#");
        java.lang.String str7 = strBuilder0.leftString((int) (short) 100);
        int int9 = strBuilder0.lastIndexOf("StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder0.insert(0, (-1.0f));
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder0.appendln('.');
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder0.minimizeCapacity();
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("aa4#4\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder15.appendFixedWidthPadRight((java.lang.Object) "aa4#4\n", 22, 'a');
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "#4#a4#" + "'", str7, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertNotNull(strBuilder20);
    }

    @Test
    public void test01720() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01720");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.append(false);
        char[] charArray16 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer(charArray16, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = strTokenizer18.setDelimiterString("hi!");
        boolean boolean21 = strTokenizer18.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder5.appendFixedWidthPadRight((java.lang.Object) strTokenizer18, 10, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int28 = strBuilder25.indexOf(strMatcher27);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder25.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder30.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder30.appendln((int) (short) 10);
        boolean boolean35 = strBuilder5.equalsIgnoreCase(strBuilder30);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder30.insert((int) (byte) 1, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder38.appendln(false);
        char[] charArray47 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = new org.apache.commons.lang3.text.StrTokenizer(charArray47, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = strTokenizer49.setDelimiterString("hi!");
        java.lang.String str52 = strTokenizer51.nextToken();
        java.util.List<java.lang.String> strList53 = strTokenizer51.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder54.deleteFirst("hi!");
        java.lang.String str57 = strBuilder56.getNullText();
        char[] charArray59 = new char[] { 'a' };
        char[] charArray60 = strBuilder56.getChars(charArray59);
        char[] charArray65 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray66 = strBuilder56.getChars(charArray65);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer67 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray66);
        int int68 = strList53.indexOf((java.lang.Object) charArray66);
        char[] charArray69 = strBuilder40.getChars(charArray66);
        org.apache.commons.lang3.text.StrMatcher strMatcher71 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("#4#a4#");
        org.apache.commons.lang3.text.StrMatcher strMatcher72 = org.apache.commons.lang3.text.StrMatcher.commaMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer73 = new org.apache.commons.lang3.text.StrTokenizer(charArray69, strMatcher71, strMatcher72);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer75 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer77 = strTokenizer75.setIgnoreEmptyTokens(false);
        java.lang.String str78 = strTokenizer75.nextToken();
        boolean boolean79 = strTokenizer75.hasPrevious();
        org.apache.commons.lang3.text.StrMatcher strMatcher80 = strTokenizer75.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer81 = new org.apache.commons.lang3.text.StrTokenizer(charArray69, strMatcher80);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer82 = new org.apache.commons.lang3.text.StrTokenizer(charArray69);
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(charArray47);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray47), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray47), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray47), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer51);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "#4#a4#" + "'", str52, "#4#a4#");
        org.junit.Assert.assertNotNull(strList53);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNull(str57);
        org.junit.Assert.assertNotNull(charArray59);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray59), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray59), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray59), "[a]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[a]");
        org.junit.Assert.assertNotNull(charArray65);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray65), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray65), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray65), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray66);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray66), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray66), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray66), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(strTokenizer67);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + (-1) + "'", int68 == (-1));
        org.junit.Assert.assertNotNull(charArray69);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray69), " a10\nfalse\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray69), " a10\nfalse\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray69), "[ , a, 1, 0, \n, f, a, l, s, e, \n]");
        org.junit.Assert.assertNotNull(strMatcher71);
        org.junit.Assert.assertNotNull(strMatcher72);
        org.junit.Assert.assertNotNull(strTokenizer75);
        org.junit.Assert.assertNotNull(strTokenizer77);
        org.junit.Assert.assertNull(str78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(strMatcher80);
    }

    @Test
    public void test01721() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01721");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        java.lang.String str3 = strBuilder2.getNullText();
        char[] charArray5 = new char[] { 'a' };
        char[] charArray6 = strBuilder2.getChars(charArray5);
        char[] charArray11 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray12 = strBuilder2.getChars(charArray11);
        java.io.Reader reader13 = strBuilder2.asReader();
        reader13.mark((int) (byte) 0);
        boolean boolean16 = reader13.markSupported();
        reader13.mark(52);
        reader13.mark(32);
        reader13.mark(5);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[a]");
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(reader13);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
    }

    @Test
    public void test01722() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01722");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        java.lang.String str4 = strBuilder2.leftString(32);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteFirst("hi!");
        java.lang.String str8 = strBuilder7.getNullText();
        char[] charArray10 = new char[] { 'a' };
        char[] charArray11 = strBuilder7.getChars(charArray10);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder2.append((java.lang.Object) strBuilder7);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder2.replaceAll('#', ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = org.apache.commons.lang3.text.StrMatcher.splitMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder16.deleteAll(strMatcher19);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder16.append((double) 59);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder25.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder25.insert(0, (double) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder29.appendFixedWidthPadRight((java.lang.Object) 100.0d, 1, '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder33.trim();
        java.lang.Object[] objArray35 = new java.lang.Object[] {};
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder33.appendAll(objArray35);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder22.appendAll(objArray35);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder2.appendWithSeparators(objArray35, "1.0java.io.IOExceptionfalse1001.0\nfalse\nfalse");
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder39.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder41.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = org.apache.commons.lang3.text.StrMatcher.splitMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder41.deleteAll(strMatcher44);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder41.append((double) 59);
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder48.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder50.clear();
        java.lang.Throwable throwable55 = null;
        java.io.IOException iOException56 = new java.io.IOException("", throwable55);
        java.io.IOException iOException57 = new java.io.IOException("#4#a4#", throwable55);
        java.io.IOException iOException58 = new java.io.IOException(throwable55);
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray62 = new java.lang.Object[] { 1.0f, iOException58, false, 100, strBuilder61 };
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder51.appendWithSeparators(objArray62, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder64.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder47.appendln(strBuilder66, 4, (int) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder39.append((java.lang.CharSequence) strBuilder66);
        java.io.Writer writer71 = strBuilder70.asWriter();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[a]");
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(objArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray35), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray35), "[]");
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strMatcher44);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(objArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray62), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray62), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(writer71);
    }

    @Test
    public void test01723() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01723");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder18.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder24.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder26.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.appendln(10L);
        int int32 = strBuilder26.indexOf("#4#a4#", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder26.insert(1, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder23.appendln(strBuilder35);
        java.io.Writer writer37 = strBuilder36.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder38.deleteFirst("hi!");
        java.lang.String str41 = strBuilder40.getNullText();
        char[] charArray43 = new char[] { 'a' };
        char[] charArray44 = strBuilder40.getChars(charArray43);
        char[] charArray49 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray50 = strBuilder40.getChars(charArray49);
        writer37.write(charArray49);
        // The following exception was thrown during execution in test generation
        try {
            writer37.write(" ###################################", 0, (int) '.');
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: length must be valid");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(writer37);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNotNull(charArray43);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray43), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray43), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray43), "[a]");
        org.junit.Assert.assertNotNull(charArray44);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray44), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray44), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray44), "[a]");
        org.junit.Assert.assertNotNull(charArray49);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray49), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray49), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray49), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray50);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray50), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray50), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray50), "[a, 4,  , 4]");
    }

    @Test
    public void test01724() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01724");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder1.deleteFirst("hi!");
        java.lang.String str4 = strBuilder3.getNullText();
        char[] charArray6 = new char[] { 'a' };
        char[] charArray7 = strBuilder3.getChars(charArray6);
        char[] charArray12 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray13 = strBuilder3.getChars(charArray12);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder16.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder16.insert(0, (double) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder20.appendFixedWidthPadRight((java.lang.Object) 100.0d, 1, '4');
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        int int27 = strBuilder24.lastIndexOf(strMatcher25, (int) (short) 10);
        boolean boolean28 = strBuilder3.contains(strMatcher25);
        char[] charArray35 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = new org.apache.commons.lang3.text.StrTokenizer(charArray35, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = strTokenizer37.setDelimiterString("hi!");
        java.lang.String str40 = strTokenizer39.nextToken();
        java.util.List<java.lang.String> strList41 = strTokenizer39.getTokenList();
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = strTokenizer39.setTrimmerMatcher(strMatcher42);
        char[] charArray50 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = new org.apache.commons.lang3.text.StrTokenizer(charArray50, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = new org.apache.commons.lang3.text.StrTokenizer(charArray50);
        int int55 = strMatcher42.isMatch(charArray50, 0);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher25, strMatcher42);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = strTokenizer56.setIgnoredChar('a');
        int int59 = strTokenizer56.previousIndex();
        boolean boolean60 = strTokenizer56.isEmptyTokenAsNull();
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[a]");
        org.junit.Assert.assertNotNull(charArray7);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray7), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray7), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray7), "[a]");
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strMatcher25);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "#4#a4#" + "'", str40, "#4#a4#");
        org.junit.Assert.assertNotNull(strList41);
        org.junit.Assert.assertNotNull(strMatcher42);
        org.junit.Assert.assertNotNull(strTokenizer43);
        org.junit.Assert.assertNotNull(charArray50);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray50), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray50), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray50), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertNotNull(strTokenizer58);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-1) + "'", int59 == (-1));
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
    }

    @Test
    public void test01725() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01725");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder3.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder4.appendln((long) '#');
        java.util.stream.IntStream intStream7 = strBuilder4.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder4.appendSeparator("10\n\n");
        java.lang.String[] strArray13 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList14 = new java.util.ArrayList<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList14, strArray13);
        char[] charArray22 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = new org.apache.commons.lang3.text.StrTokenizer(charArray22, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = strTokenizer24.setDelimiterString("hi!");
        boolean boolean27 = strTokenizer24.isIgnoreEmptyTokens();
        java.lang.String str28 = strTokenizer24.next();
        int int29 = strList14.indexOf((java.lang.Object) strTokenizer24);
        java.util.ListIterator<java.lang.String> strItor31 = strList14.listIterator((int) (byte) 0);
        java.lang.String[] strArray35 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList36 = new java.util.ArrayList<java.lang.String>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList36, strArray35);
        char[] charArray44 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = new org.apache.commons.lang3.text.StrTokenizer(charArray44, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = strTokenizer46.setDelimiterString("hi!");
        boolean boolean49 = strTokenizer46.isIgnoreEmptyTokens();
        java.lang.String str50 = strTokenizer46.next();
        int int51 = strList36.indexOf((java.lang.Object) strTokenizer46);
        java.util.ListIterator<java.lang.String> strItor53 = strList36.listIterator((int) (byte) 0);
        java.util.Iterator<java.lang.String> strItor54 = strList36.iterator();
        boolean boolean55 = strList14.removeAll((java.util.Collection<java.lang.String>) strList36);
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder9.appendWithSeparators((java.lang.Iterable<java.lang.String>) strList14, "10\n\n");
        org.apache.commons.lang3.text.StrMatcher strMatcher59 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("aa");
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder57.deleteFirst(strMatcher59);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder57.insert(59, 49);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 59");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(intStream7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray22), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray22), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray22), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "#4#a4#" + "'", str28, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertNotNull(strItor31);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(charArray44);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray44), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray44), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray44), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "#4#a4#" + "'", str50, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1));
        org.junit.Assert.assertNotNull(strItor53);
        org.junit.Assert.assertNotNull(strItor54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strMatcher59);
        org.junit.Assert.assertNotNull(strBuilder60);
    }

    @Test
    public void test01726() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01726");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder18.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder24.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder26.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.appendln(10L);
        int int32 = strBuilder26.indexOf("#4#a4#", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder26.insert(1, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder23.appendln(strBuilder35);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder36.appendSeparator('#', ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder39.setCharAt(0, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder42.deleteFirst('1');
        boolean boolean46 = strBuilder42.contains("1.0jv.io.IOExceptionflse1001.0\n35.0\njv.io.IOExce");
        int int49 = strBuilder42.lastIndexOf('\000', (int) '\000');
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
    }

    @Test
    public void test01727() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01727");
        java.lang.String[] strArray3 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList4 = new java.util.ArrayList<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        char[] charArray12 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strTokenizer14.setDelimiterString("hi!");
        boolean boolean17 = strTokenizer14.isIgnoreEmptyTokens();
        java.lang.String str18 = strTokenizer14.next();
        int int19 = strList4.indexOf((java.lang.Object) strTokenizer14);
        java.util.ListIterator<java.lang.String> strItor21 = strList4.listIterator((int) (byte) 0);
        java.lang.String[] strArray25 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList26 = new java.util.ArrayList<java.lang.String>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList26, strArray25);
        char[] charArray34 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = new org.apache.commons.lang3.text.StrTokenizer(charArray34, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = strTokenizer36.setDelimiterString("hi!");
        boolean boolean39 = strTokenizer36.isIgnoreEmptyTokens();
        java.lang.String str40 = strTokenizer36.next();
        int int41 = strList26.indexOf((java.lang.Object) strTokenizer36);
        java.util.ListIterator<java.lang.String> strItor43 = strList26.listIterator((int) (byte) 0);
        java.util.Iterator<java.lang.String> strItor44 = strList26.iterator();
        boolean boolean45 = strList4.removeAll((java.util.Collection<java.lang.String>) strList26);
        java.util.ListIterator<java.lang.String> strItor46 = strList26.listIterator();
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher49 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int50 = strBuilder47.indexOf(strMatcher49);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder47.append("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder52.deleteAll(' ');
        int int55 = strList26.indexOf((java.lang.Object) strBuilder54);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str57 = strList26.get(6);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 6, Size: 3");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "#4#a4#" + "'", str18, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(strItor21);
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(charArray34);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray34), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray34), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray34), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "#4#a4#" + "'", str40, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertNotNull(strItor43);
        org.junit.Assert.assertNotNull(strItor44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(strItor46);
        org.junit.Assert.assertNotNull(strMatcher49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1));
    }

    @Test
    public void test01728() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01728");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = strTokenizer1.setEmptyTokenAsNull(true);
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = strTokenizer3.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer3.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer3.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer3.setQuoteChar('3');
        org.junit.Assert.assertNotNull(strTokenizer1);
        org.junit.Assert.assertNotNull(strTokenizer3);
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strTokenizer8);
    }

    @Test
    public void test01729() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01729");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder18.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder18.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder18.replaceFirst('#', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder18.setLength((int) ' ');
        char[] charArray32 = strBuilder29.toCharArray((int) ' ', (int) 'a');
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray32);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray32);
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder35.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder37.clear();
        java.lang.String str40 = strBuilder38.rightString((int) (short) -1);
        java.lang.String str42 = strBuilder38.rightString((int) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder38.append((double) (byte) 100);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = strTokenizer46.setIgnoreEmptyTokens(false);
        int int49 = strTokenizer46.previousIndex();
        java.lang.Object obj50 = strTokenizer46.clone();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder38.append((java.lang.Object) strTokenizer46);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder51.reverse();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = strTokenizer54.setQuoteChar('a');
        org.apache.commons.lang3.text.StrMatcher strMatcher58 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer59 = strTokenizer56.setTrimmerMatcher(strMatcher58);
        int int61 = strBuilder52.lastIndexOf(strMatcher58, 48);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer62 = new org.apache.commons.lang3.text.StrTokenizer(charArray32, strMatcher58);
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer62.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: remove() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(charArray32);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray32), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray32), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray32), "[]");
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertNotNull(strTokenizer34);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "" + "'", str40, "");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "" + "'", str42, "");
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strTokenizer46);
        org.junit.Assert.assertNotNull(strTokenizer48);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertEquals(obj50.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj50), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj50), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strTokenizer54);
        org.junit.Assert.assertNotNull(strTokenizer56);
        org.junit.Assert.assertNotNull(strMatcher58);
        org.junit.Assert.assertNotNull(strTokenizer59);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 22 + "'", int61 == 22);
    }

    @Test
    public void test01730() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01730");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.appendln((int) (short) 10);
        char[] charArray16 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer(charArray16, ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer(charArray16, strMatcher20);
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = strTokenizer21.getIgnoredMatcher();
        int int24 = strBuilder5.indexOf(strMatcher22, (int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder5.appendSeparator('4', '#');
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder27.insert((int) 'a', (float) (short) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 97");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher20);
        org.junit.Assert.assertNotNull(strMatcher22);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertNotNull(strBuilder27);
    }

    @Test
    public void test01731() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01731");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append("#4#a4#");
        java.lang.String str7 = strBuilder0.leftString((int) (short) 100);
        int int9 = strBuilder0.lastIndexOf("StrTokenizer[not tokenized yet]");
        java.lang.String str10 = strBuilder0.toString();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int14 = strBuilder11.indexOf(strMatcher13);
        char[] charArray21 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer(charArray21, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder11.appendAll((java.util.Iterator<java.lang.String>) strTokenizer23);
        java.lang.String str27 = strBuilder11.midString((int) (byte) 1, (-1));
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder28.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder30.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder30.appendln(10L);
        int int36 = strBuilder30.indexOf("#4#a4#", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder30.appendSeparator("", 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder30.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder30.append("java.io.IOException: ");
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder11.append((java.lang.Object) strBuilder42);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher46 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int47 = strBuilder44.indexOf(strMatcher46);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder44.append("#4#a4#");
        java.lang.String str51 = strBuilder44.leftString((int) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher54 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int55 = strBuilder52.indexOf(strMatcher54);
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder52.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder57.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder57.append(false);
        char[] charArray68 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer70 = new org.apache.commons.lang3.text.StrTokenizer(charArray68, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer72 = strTokenizer70.setDelimiterString("hi!");
        boolean boolean73 = strTokenizer70.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder57.appendFixedWidthPadRight((java.lang.Object) strTokenizer70, 10, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher79 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int80 = strBuilder77.indexOf(strMatcher79);
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder77.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder84 = strBuilder82.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder86 = strBuilder82.appendln((int) (short) 10);
        boolean boolean87 = strBuilder57.equalsIgnoreCase(strBuilder82);
        org.apache.commons.lang3.text.StrBuilder strBuilder88 = strBuilder57.reverse();
        java.lang.StringBuffer stringBuffer89 = strBuilder88.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder92 = strBuilder44.append(stringBuffer89, (int) (byte) 0, 2);
        org.apache.commons.lang3.text.StrBuilder strBuilder93 = strBuilder43.appendln(stringBuffer89);
        org.apache.commons.lang3.text.StrBuilder strBuilder94 = strBuilder0.append(stringBuffer89);
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "#4#a4#" + "'", str7, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "#4#a4#" + "'", str10, "#4#a4#");
        org.junit.Assert.assertNotNull(strMatcher13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray21), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray21), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray21), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strMatcher46);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "#4#a4#" + "'", str51, "#4#a4#");
        org.junit.Assert.assertNotNull(strMatcher54);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1));
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(charArray68);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray68), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray68), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray68), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNotNull(strMatcher79);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + (-1) + "'", int80 == (-1));
        org.junit.Assert.assertNotNull(strBuilder82);
        org.junit.Assert.assertNotNull(strBuilder84);
        org.junit.Assert.assertNotNull(strBuilder86);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNotNull(strBuilder88);
        org.junit.Assert.assertNotNull(stringBuffer89);
        org.junit.Assert.assertEquals(stringBuffer89.toString(), "zinekoTrtSeslaf ");
        org.junit.Assert.assertNotNull(strBuilder92);
        org.junit.Assert.assertNotNull(strBuilder93);
        org.junit.Assert.assertNotNull(strBuilder94);
    }

    @Test
    public void test01732() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01732");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.append(false);
        char[] charArray16 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer(charArray16, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = strTokenizer18.setDelimiterString("hi!");
        boolean boolean21 = strTokenizer18.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder5.appendFixedWidthPadRight((java.lang.Object) strTokenizer18, 10, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int28 = strBuilder25.indexOf(strMatcher27);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder25.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder30.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder30.appendln((int) (short) 10);
        boolean boolean35 = strBuilder5.equalsIgnoreCase(strBuilder30);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder30.insert((int) (byte) 1, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder38.appendln(false);
        char[] charArray47 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = new org.apache.commons.lang3.text.StrTokenizer(charArray47, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = strTokenizer49.setDelimiterString("hi!");
        java.lang.String str52 = strTokenizer51.nextToken();
        java.util.List<java.lang.String> strList53 = strTokenizer51.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder54.deleteFirst("hi!");
        java.lang.String str57 = strBuilder56.getNullText();
        char[] charArray59 = new char[] { 'a' };
        char[] charArray60 = strBuilder56.getChars(charArray59);
        char[] charArray65 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray66 = strBuilder56.getChars(charArray65);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer67 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray66);
        int int68 = strList53.indexOf((java.lang.Object) charArray66);
        char[] charArray69 = strBuilder40.getChars(charArray66);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer71 = new org.apache.commons.lang3.text.StrTokenizer(charArray66, "1false0\nfalse");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer72 = new org.apache.commons.lang3.text.StrTokenizer(charArray66);
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer72.set("aaaaaaaaaaaaaaaaaaaaaaaa100");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: set() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(charArray47);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray47), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray47), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray47), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer51);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "#4#a4#" + "'", str52, "#4#a4#");
        org.junit.Assert.assertNotNull(strList53);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNull(str57);
        org.junit.Assert.assertNotNull(charArray59);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray59), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray59), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray59), "[a]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[a]");
        org.junit.Assert.assertNotNull(charArray65);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray65), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray65), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray65), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray66);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray66), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray66), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray66), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(strTokenizer67);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + (-1) + "'", int68 == (-1));
        org.junit.Assert.assertNotNull(charArray69);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray69), " a10\nfalse\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray69), " a10\nfalse\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray69), "[ , a, 1, 0, \n, f, a, l, s, e, \n]");
    }

    @Test
    public void test01733() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01733");
        char[] charArray7 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = new org.apache.commons.lang3.text.StrTokenizer(charArray7, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = strTokenizer9.setDelimiterString("hi!");
        java.lang.String str12 = strTokenizer11.nextToken();
        java.util.List<java.lang.String> strList13 = strTokenizer11.getTokenList();
        boolean boolean15 = strList13.add("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("");
        java.lang.String str18 = strTokenizer17.getContent();
        boolean boolean19 = strList13.equals((java.lang.Object) strTokenizer17);
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = org.apache.commons.lang3.text.StrMatcher.singleQuoteMatcher();
        boolean boolean21 = strList13.equals((java.lang.Object) strMatcher20);
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer("0\nzinekoTrtSeslaf ", strMatcher20, strMatcher22);
        char[] charArray30 = new char[] { 'a', '4', 'a', 'a', '#', ' ' };
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int34 = strBuilder31.indexOf(strMatcher33);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder31.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int40 = strBuilder37.indexOf(strMatcher39);
        int int41 = strBuilder31.indexOf(strMatcher39);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = new org.apache.commons.lang3.text.StrTokenizer(charArray30, strMatcher39);
        char[] charArray49 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = new org.apache.commons.lang3.text.StrTokenizer(charArray49, ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = new org.apache.commons.lang3.text.StrTokenizer(charArray49, strMatcher53);
        org.apache.commons.lang3.text.StrMatcher strMatcher55 = strTokenizer54.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher56 = strTokenizer54.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = strTokenizer42.setIgnoredMatcher(strMatcher56);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = strTokenizer23.setIgnoredMatcher(strMatcher56);
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer23.set(".0jav");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: set() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray7);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray7), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray7), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray7), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "#4#a4#" + "'", str12, "#4#a4#");
        org.junit.Assert.assertNotNull(strList13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(strTokenizer17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(strMatcher20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray30), "a4aa# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray30), "a4aa# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray30), "[a, 4, a, a, #,  ]");
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strMatcher39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertNotNull(charArray49);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray49), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray49), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray49), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher53);
        org.junit.Assert.assertNotNull(strMatcher55);
        org.junit.Assert.assertNotNull(strMatcher56);
        org.junit.Assert.assertNotNull(strTokenizer57);
        org.junit.Assert.assertNotNull(strTokenizer58);
    }

    @Test
    public void test01734() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01734");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        java.lang.String str18 = strBuilder3.substring(2);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder3.deleteFirst("a");
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder20.deleteAll(strMatcher21);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder22.delete(37, 39);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: end < start");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "0java.io.IOExceptionfalse100" + "'", str18, "0java.io.IOExceptionfalse100");
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertNotNull(strBuilder22);
    }

    @Test
    public void test01735() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01735");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        java.lang.String str3 = strBuilder2.getNullText();
        char[] charArray5 = new char[] { 'a' };
        char[] charArray6 = strBuilder2.getChars(charArray5);
        char[] charArray11 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray12 = strBuilder2.getChars(charArray11);
        java.io.Reader reader13 = strBuilder2.asReader();
        long long15 = reader13.skip((long) 59);
        reader13.reset();
        reader13.mark(48);
        reader13.reset();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[a]");
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(reader13);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 0L + "'", long15 == 0L);
    }

    @Test
    public void test01736() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01736");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        char[] charArray10 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = new org.apache.commons.lang3.text.StrTokenizer(charArray10, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder0.appendAll((java.util.Iterator<java.lang.String>) strTokenizer12);
        java.lang.String str16 = strBuilder0.midString((int) (byte) 1, (-1));
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder17.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder19.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.appendln(10L);
        int int25 = strBuilder19.indexOf("#4#a4#", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder19.appendSeparator("", 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder19.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder19.append("java.io.IOException: ");
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder0.append((java.lang.Object) strBuilder31);
        int int35 = strBuilder31.lastIndexOf('#', (int) (byte) -1);
        boolean boolean37 = strBuilder31.contains('4');
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
    }

    @Test
    public void test01737() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01737");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.append(false);
        char[] charArray16 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer(charArray16, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = strTokenizer18.setDelimiterString("hi!");
        boolean boolean21 = strTokenizer18.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder5.appendFixedWidthPadRight((java.lang.Object) strTokenizer18, 10, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int28 = strBuilder25.indexOf(strMatcher27);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder25.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder30.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder30.appendln((int) (short) 10);
        boolean boolean35 = strBuilder5.equalsIgnoreCase(strBuilder30);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder30.insert((int) (byte) 1, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder38.appendln(false);
        char[] charArray47 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = new org.apache.commons.lang3.text.StrTokenizer(charArray47, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = strTokenizer49.setDelimiterString("hi!");
        java.lang.String str52 = strTokenizer51.nextToken();
        java.util.List<java.lang.String> strList53 = strTokenizer51.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder54.deleteFirst("hi!");
        java.lang.String str57 = strBuilder56.getNullText();
        char[] charArray59 = new char[] { 'a' };
        char[] charArray60 = strBuilder56.getChars(charArray59);
        char[] charArray65 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray66 = strBuilder56.getChars(charArray65);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer67 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray66);
        int int68 = strList53.indexOf((java.lang.Object) charArray66);
        char[] charArray69 = strBuilder40.getChars(charArray66);
        java.io.Reader reader70 = strBuilder40.asReader();
        boolean boolean71 = reader70.markSupported();
        reader70.reset();
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(charArray47);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray47), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray47), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray47), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer51);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "#4#a4#" + "'", str52, "#4#a4#");
        org.junit.Assert.assertNotNull(strList53);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNull(str57);
        org.junit.Assert.assertNotNull(charArray59);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray59), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray59), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray59), "[a]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[a]");
        org.junit.Assert.assertNotNull(charArray65);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray65), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray65), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray65), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray66);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray66), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray66), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray66), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(strTokenizer67);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + (-1) + "'", int68 == (-1));
        org.junit.Assert.assertNotNull(charArray69);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray69), " a10\nfalse\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray69), " a10\nfalse\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray69), "[ , a, 1, 0, \n, f, a, l, s, e, \n]");
        org.junit.Assert.assertNotNull(reader70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
    }

    @Test
    public void test01738() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01738");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        java.lang.String str3 = strBuilder2.getNullText();
        char[] charArray5 = new char[] { 'a' };
        char[] charArray6 = strBuilder2.getChars(charArray5);
        char[] charArray11 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray12 = strBuilder2.getChars(charArray11);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray12);
        char[] charArray20 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = new org.apache.commons.lang3.text.StrTokenizer(charArray20, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer(charArray20);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = strTokenizer13.reset(charArray20);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = new org.apache.commons.lang3.text.StrTokenizer(charArray20);
        int int26 = strTokenizer25.size();
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = strTokenizer25.getQuoteMatcher();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[a]");
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(strTokenizer13);
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray20), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray20), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray20), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer24);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 1 + "'", int26 == 1);
        org.junit.Assert.assertNotNull(strMatcher27);
    }

    @Test
    public void test01739() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01739");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.appendln((int) (short) 10);
        int int12 = strBuilder9.indexOf("java.io.IOException: ", (int) (short) 10);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence15 = strBuilder9.subSequence((int) ' ', 0);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -32");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
    }

    @Test
    public void test01740() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01740");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder18.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder24.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder26.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.appendln(10L);
        int int32 = strBuilder26.indexOf("#4#a4#", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder26.insert(1, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder23.appendln(strBuilder35);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder36.appendln("java.io.IOException: ", (int) (short) 1, (int) (byte) 10);
        boolean boolean42 = strBuilder36.startsWith("java.io.IOException: ");
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher45 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int46 = strBuilder43.indexOf(strMatcher45);
        char[] charArray53 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = new org.apache.commons.lang3.text.StrTokenizer(charArray53, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder43.appendAll((java.util.Iterator<java.lang.String>) strTokenizer55);
        org.apache.commons.lang3.text.StrMatcher strMatcher58 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("#4#a4#");
        int int59 = strBuilder56.indexOf(strMatcher58);
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder36.deleteFirst(strMatcher58);
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher63 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int64 = strBuilder61.indexOf(strMatcher63);
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder61.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder66.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder66.appendln((int) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder66.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder73.deleteFirst("hi!");
        java.lang.String str76 = strBuilder75.getNullText();
        char[] charArray78 = new char[] { 'a' };
        char[] charArray79 = strBuilder75.getChars(charArray78);
        char[] charArray84 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray85 = strBuilder75.getChars(charArray84);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer87 = new org.apache.commons.lang3.text.StrTokenizer(charArray84, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder90 = strBuilder66.appendln(charArray84, 0, 0);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer92 = new org.apache.commons.lang3.text.StrTokenizer(charArray84, "0\nzinekoTrtSeslaf ");
        char[] charArray93 = strBuilder60.getChars(charArray84);
        java.lang.String str94 = strBuilder60.toString();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(strMatcher45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertNotNull(charArray53);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray53), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray53), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray53), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strMatcher58);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strMatcher63);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + (-1) + "'", int64 == (-1));
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNull(str76);
        org.junit.Assert.assertNotNull(charArray78);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray78), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray78), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray78), "[a]");
        org.junit.Assert.assertNotNull(charArray79);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray79), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray79), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray79), "[a]");
        org.junit.Assert.assertNotNull(charArray84);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray84), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray84), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray84), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray85);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray85), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray85), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray85), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(strBuilder90);
        org.junit.Assert.assertNotNull(charArray93);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray93), "1.0java.io.IOExceptionfalse1001.0\n35.0\n1false0\n\nava.io.IOE\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray93), "1.0java.io.IOExceptionfalse1001.0\n35.0\n1false0\n\nava.io.IOE\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray93), "[1, ., 0, j, a, v, a, ., i, o, ., I, O, E, x, c, e, p, t, i, o, n, f, a, l, s, e, 1, 0, 0, 1, ., 0, \n, 3, 5, ., 0, \n, 1, f, a, l, s, e, 0, \n, \n, a, v, a, ., i, o, ., I, O, E, \n]");
        org.junit.Assert.assertEquals("'" + str94 + "' != '" + "1.0java.io.IOExceptionfalse1001.0\n35.0\n1false0\n\nava.io.IOE\n" + "'", str94, "1.0java.io.IOExceptionfalse1001.0\n35.0\n1false0\n\nava.io.IOE\n");
    }

    @Test
    public void test01741() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01741");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        java.lang.String str3 = strBuilder2.getNullText();
        char[] charArray5 = new char[] { 'a' };
        char[] charArray6 = strBuilder2.getChars(charArray5);
        char[] charArray11 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray12 = strBuilder2.getChars(charArray11);
        java.io.Reader reader13 = strBuilder2.asReader();
        reader13.mark(10);
        reader13.close();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder17.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder19.clear();
        char[] charArray26 = new char[] { 'a', 'a', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer(charArray26);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder19.appendln(charArray26);
        int int29 = reader13.read(charArray26);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder30.deleteFirst("hi!");
        java.lang.String str33 = strBuilder32.getNullText();
        char[] charArray35 = new char[] { 'a' };
        char[] charArray36 = strBuilder32.getChars(charArray35);
        char[] charArray41 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray42 = strBuilder32.getChars(charArray41);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = new org.apache.commons.lang3.text.StrTokenizer(charArray41);
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray41);
        int int45 = reader13.read(charArray41);
        reader13.reset();
        boolean boolean47 = reader13.ready();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[a]");
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(reader13);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(charArray26);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray26), "aa4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray26), "aa4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray26), "[a, a, 4, #, 4]");
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[a]");
        org.junit.Assert.assertNotNull(charArray36);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray36), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray36), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray36), "[a]");
        org.junit.Assert.assertNotNull(charArray41);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray41), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray41), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray41), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray42);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray42), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray42), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray42), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(strMatcher44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
    }

    @Test
    public void test01742() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01742");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("0.012true104444444444444444444444444444444444444444444444  \n");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = strTokenizer1.setIgnoredChar('a');
        java.lang.String str4 = strTokenizer1.getContent();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteFirst("hi!");
        java.lang.String str8 = strBuilder7.getNullText();
        char[] charArray10 = new char[] { 'a' };
        char[] charArray11 = strBuilder7.getChars(charArray10);
        char[] charArray16 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray17 = strBuilder7.getChars(charArray16);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int21 = strBuilder18.indexOf(strMatcher20);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder18.append(' ');
        java.util.stream.IntStream intStream24 = strBuilder23.codePoints();
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("");
        int int27 = strBuilder23.lastIndexOf(strMatcher26);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int31 = strBuilder28.indexOf(strMatcher30);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder28.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder33.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder35.deleteFirst('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder35.append('4');
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = org.apache.commons.lang3.text.StrMatcher.quoteMatcher();
        int int42 = strBuilder39.lastIndexOf(strMatcher40, (int) (short) -1);
        boolean boolean43 = strBuilder23.contains(strMatcher40);
        char[] charArray51 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = new org.apache.commons.lang3.text.StrTokenizer(charArray51, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = new org.apache.commons.lang3.text.StrTokenizer(charArray51);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = strTokenizer54.setDelimiterChar('a');
        org.apache.commons.lang3.text.StrMatcher strMatcher57 = strTokenizer56.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer60 = new org.apache.commons.lang3.text.StrTokenizer("", "#4#a4#");
        org.apache.commons.lang3.text.StrMatcher strMatcher61 = strTokenizer60.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer62 = new org.apache.commons.lang3.text.StrTokenizer("0java.io.IOExceptionfalse100", strMatcher57, strMatcher61);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer63 = new org.apache.commons.lang3.text.StrTokenizer(charArray16, strMatcher40, strMatcher57);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance();
        int int65 = strTokenizer64.nextIndex();
        org.apache.commons.lang3.text.StrMatcher strMatcher67 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("java.io.IOException: ");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer68 = strTokenizer64.setTrimmerMatcher(strMatcher67);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer69 = new org.apache.commons.lang3.text.StrTokenizer(charArray16, strMatcher67);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer70 = strTokenizer1.setIgnoredMatcher(strMatcher67);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer72 = strTokenizer1.setDelimiterString("#a4#-1");
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer72.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: remove() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strTokenizer1);
        org.junit.Assert.assertNotNull(strTokenizer3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "0.012true104444444444444444444444444444444444444444444444  \n" + "'", str4, "0.012true104444444444444444444444444444444444444444444444  \n");
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[a]");
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray17), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray17), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray17), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(strMatcher20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(intStream24);
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strMatcher40);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(charArray51);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray51), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray51), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray51), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer56);
        org.junit.Assert.assertNotNull(strMatcher57);
        org.junit.Assert.assertNotNull(strMatcher61);
        org.junit.Assert.assertNotNull(strTokenizer64);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 0 + "'", int65 == 0);
        org.junit.Assert.assertNotNull(strMatcher67);
        org.junit.Assert.assertNotNull(strTokenizer68);
        org.junit.Assert.assertNotNull(strTokenizer70);
        org.junit.Assert.assertNotNull(strTokenizer72);
    }

    @Test
    public void test01743() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01743");
        char[] charArray6 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer8.setDelimiterString("hi!");
        java.lang.String str11 = strTokenizer10.nextToken();
        java.util.List<java.lang.String> strList12 = strTokenizer10.getTokenList();
        boolean boolean14 = strList12.add("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("");
        java.lang.String str17 = strTokenizer16.getContent();
        boolean boolean18 = strList12.equals((java.lang.Object) strTokenizer16);
        int int19 = strTokenizer16.previousIndex();
        java.lang.String str20 = strTokenizer16.toString();
        java.lang.String str21 = strTokenizer16.toString();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str22 = strTokenizer16.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "#4#a4#" + "'", str11, "#4#a4#");
        org.junit.Assert.assertNotNull(strList12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str20, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str21, "StrTokenizer[not tokenized yet]");
    }

    @Test
    public void test01744() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01744");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder18.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder24.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder26.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.appendln(10L);
        int int32 = strBuilder26.indexOf("#4#a4#", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder26.insert(1, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder23.appendln(strBuilder35);
        java.io.Writer writer37 = strBuilder36.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder38.deleteFirst("hi!");
        java.lang.String str41 = strBuilder40.getNullText();
        char[] charArray43 = new char[] { 'a' };
        char[] charArray44 = strBuilder40.getChars(charArray43);
        char[] charArray49 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray50 = strBuilder40.getChars(charArray49);
        writer37.write(charArray49);
        writer37.write("10\n\n");
        writer37.write(10);
        writer37.flush();
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder57.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder59.clear();
        java.lang.Throwable throwable64 = null;
        java.io.IOException iOException65 = new java.io.IOException("", throwable64);
        java.io.IOException iOException66 = new java.io.IOException("#4#a4#", throwable64);
        java.io.IOException iOException67 = new java.io.IOException(throwable64);
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray71 = new java.lang.Object[] { 1.0f, iOException67, false, 100, strBuilder70 };
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder60.appendWithSeparators(objArray71, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder73.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder75.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder75.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder75.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder84 = strBuilder75.replaceFirst('#', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder86 = strBuilder75.setLength((int) ' ');
        char[] charArray89 = strBuilder86.toCharArray((int) ' ', (int) 'a');
        writer37.write(charArray89);
        java.io.Writer writer92 = writer37.append(' ');
        java.io.Writer writer94 = writer92.append('.');
        java.io.Writer writer96 = writer94.append('3');
        writer96.write("1a10\n104aa");
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(writer37);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNotNull(charArray43);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray43), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray43), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray43), "[a]");
        org.junit.Assert.assertNotNull(charArray44);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray44), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray44), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray44), "[a]");
        org.junit.Assert.assertNotNull(charArray49);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray49), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray49), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray49), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray50);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray50), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray50), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray50), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(objArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray71), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray71), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertNotNull(strBuilder81);
        org.junit.Assert.assertNotNull(strBuilder84);
        org.junit.Assert.assertNotNull(strBuilder86);
        org.junit.Assert.assertNotNull(charArray89);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray89), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray89), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray89), "[]");
        org.junit.Assert.assertNotNull(writer92);
        org.junit.Assert.assertNotNull(writer94);
        org.junit.Assert.assertNotNull(writer96);
    }

    @Test
    public void test01745() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01745");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.appendln(10L);
        int int8 = strBuilder2.indexOf("#4#a4#", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder2.appendSeparator("", 1);
        char[] charArray18 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = new org.apache.commons.lang3.text.StrTokenizer(charArray18, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer(charArray18);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder11.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer21, "StrTokenizer[#4#a4#]");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = strTokenizer21.setDelimiterChar(' ');
        int int26 = strTokenizer25.nextIndex();
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer25.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: remove() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(charArray18);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray18), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray18), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray18), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strTokenizer25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 1 + "'", int26 == 1);
    }

    @Test
    public void test01746() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01746");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        java.lang.String str3 = strBuilder2.getNullText();
        char[] charArray5 = new char[] { 'a' };
        char[] charArray6 = strBuilder2.getChars(charArray5);
        char[] charArray11 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray12 = strBuilder2.getChars(charArray11);
        java.io.Reader reader13 = strBuilder2.asReader();
        reader13.mark(10);
        reader13.close();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder17.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder19.clear();
        char[] charArray26 = new char[] { 'a', 'a', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer(charArray26);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder19.appendln(charArray26);
        int int29 = reader13.read(charArray26);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder30.deleteFirst("hi!");
        java.lang.String str33 = strBuilder32.getNullText();
        char[] charArray35 = new char[] { 'a' };
        char[] charArray36 = strBuilder32.getChars(charArray35);
        char[] charArray41 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray42 = strBuilder32.getChars(charArray41);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = new org.apache.commons.lang3.text.StrTokenizer(charArray41);
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray41);
        int int45 = reader13.read(charArray41);
        boolean boolean46 = reader13.markSupported();
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder47.deleteFirst("hi!");
        java.lang.String str50 = strBuilder49.getNullText();
        char[] charArray52 = new char[] { 'a' };
        char[] charArray53 = strBuilder49.getChars(charArray52);
        char[] charArray58 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray59 = strBuilder49.getChars(charArray58);
        java.io.Reader reader60 = strBuilder49.asReader();
        reader60.mark(10);
        reader60.close();
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder64.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder66.clear();
        char[] charArray73 = new char[] { 'a', 'a', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer74 = new org.apache.commons.lang3.text.StrTokenizer(charArray73);
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder66.appendln(charArray73);
        int int76 = reader60.read(charArray73);
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder77.deleteFirst("hi!");
        java.lang.String str80 = strBuilder79.getNullText();
        char[] charArray82 = new char[] { 'a' };
        char[] charArray83 = strBuilder79.getChars(charArray82);
        char[] charArray88 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray89 = strBuilder79.getChars(charArray88);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer90 = new org.apache.commons.lang3.text.StrTokenizer(charArray88);
        org.apache.commons.lang3.text.StrMatcher strMatcher91 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray88);
        int int92 = reader60.read(charArray88);
        int int93 = reader13.read(charArray88);
        boolean boolean94 = reader13.ready();
        reader13.mark(0);
        boolean boolean97 = reader13.ready();
        long long99 = reader13.skip(10L);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[a]");
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(reader13);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(charArray26);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray26), "aa4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray26), "aa4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray26), "[a, a, 4, #, 4]");
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[a]");
        org.junit.Assert.assertNotNull(charArray36);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray36), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray36), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray36), "[a]");
        org.junit.Assert.assertNotNull(charArray41);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray41), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray41), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray41), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray42);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray42), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray42), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray42), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(strMatcher44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertNotNull(charArray52);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray52), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray52), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray52), "[a]");
        org.junit.Assert.assertNotNull(charArray53);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray53), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray53), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray53), "[a]");
        org.junit.Assert.assertNotNull(charArray58);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray58), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray58), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray58), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray59);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray59), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray59), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray59), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(reader60);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(charArray73);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray73), "aa4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray73), "aa4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray73), "[a, a, 4, #, 4]");
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + (-1) + "'", int76 == (-1));
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertNull(str80);
        org.junit.Assert.assertNotNull(charArray82);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray82), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray82), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray82), "[a]");
        org.junit.Assert.assertNotNull(charArray83);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray83), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray83), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray83), "[a]");
        org.junit.Assert.assertNotNull(charArray88);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray88), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray88), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray88), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray89);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray89), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray89), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray89), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(strMatcher91);
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + (-1) + "'", int92 == (-1));
        org.junit.Assert.assertTrue("'" + int93 + "' != '" + (-1) + "'", int93 == (-1));
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + false + "'", boolean97 == false);
        org.junit.Assert.assertTrue("'" + long99 + "' != '" + 0L + "'", long99 == 0L);
    }

    @Test
    public void test01747() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01747");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[1.0java.io.IOExceptionfalse1001.0, 35.0]", '1');
    }

    @Test
    public void test01748() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01748");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder17.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder19.clear();
        java.lang.String str22 = strBuilder20.rightString((int) (short) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder3.append((java.lang.CharSequence) str22);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder25.append((float) 100L);
        char[] charArray34 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = new org.apache.commons.lang3.text.StrTokenizer(charArray34, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = new org.apache.commons.lang3.text.StrTokenizer(charArray34);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray34);
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = strTokenizer38.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder25.replaceAll(strMatcher39, "\n");
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder41.insert(48, "#a4#-1");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 48");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(charArray34);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray34), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray34), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray34), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer38);
        org.junit.Assert.assertNotNull(strMatcher39);
        org.junit.Assert.assertNotNull(strBuilder41);
    }

    @Test
    public void test01749() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01749");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.appendln((int) (short) 10);
        int int11 = strBuilder5.lastIndexOf('a');
        java.lang.String str13 = strBuilder5.leftString(16);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder5.setNewLineText("java.io.IOException: StrTokenizer[not tokenized yet]");
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder5.appendln("1false0\n", 66, (int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: startIndex must be valid");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + " 10\n" + "'", str13, " 10\n");
        org.junit.Assert.assertNotNull(strBuilder15);
    }

    @Test
    public void test01750() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01750");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.appendln(10L);
        int int8 = strBuilder2.indexOf("#4#a4#", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder2.appendSeparator("", 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.append(false);
        boolean boolean14 = strBuilder11.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder11.deleteAll("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.append((double) 32);
        java.lang.String str21 = strBuilder16.substring((int) (short) 1, 32);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder24.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder24.appendln(10L);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder24.appendFixedWidthPadLeft(0, 0, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder24.trim();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder16.append((java.lang.CharSequence) strBuilder32);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder16.insert(13, "01StrTokenizer[not tokenized yet]\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder16.append((long) 10);
        char[] charArray47 = new char[] { 'a', '4', 'a', 'a', '#', ' ' };
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher50 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int51 = strBuilder48.indexOf(strMatcher50);
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder48.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher56 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int57 = strBuilder54.indexOf(strMatcher56);
        int int58 = strBuilder48.indexOf(strMatcher56);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer59 = new org.apache.commons.lang3.text.StrTokenizer(charArray47, strMatcher56);
        // The following exception was thrown during execution in test generation
        try {
            strBuilder38.getChars(51, 52, charArray47, 1);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 52");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "0\nfalse32.0" + "'", str21, "0\nfalse32.0");
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(charArray47);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray47), "a4aa# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray47), "a4aa# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray47), "[a, 4, a, a, #,  ]");
        org.junit.Assert.assertNotNull(strMatcher50);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1));
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strMatcher56);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + (-1) + "'", int58 == (-1));
    }

    @Test
    public void test01751() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01751");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.append(false);
        char[] charArray16 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer(charArray16, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = strTokenizer18.setDelimiterString("hi!");
        boolean boolean21 = strTokenizer18.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder5.appendFixedWidthPadRight((java.lang.Object) strTokenizer18, 10, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int28 = strBuilder25.indexOf(strMatcher27);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder25.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder30.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder30.appendln((int) (short) 10);
        boolean boolean35 = strBuilder5.equalsIgnoreCase(strBuilder30);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance();
        int int37 = strTokenizer36.nextIndex();
        boolean boolean38 = strTokenizer36.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = strTokenizer36.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder30.deleteAll(strMatcher39);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder30.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder30.trim();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder42.appendln("35.0", 18, (int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: startIndex must be valid");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(strTokenizer36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(strMatcher39);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder42);
    }

    @Test
    public void test01752() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01752");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = strTokenizer1.setDelimiterChar(' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = strTokenizer1.reset();
        java.util.List<java.lang.String> strList5 = strTokenizer4.getTokenList();
        // The following exception was thrown during execution in test generation
        try {
            java.util.ListIterator<java.lang.String> strItor7 = strList5.listIterator(3);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 3");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strTokenizer1);
        org.junit.Assert.assertNotNull(strTokenizer3);
        org.junit.Assert.assertNotNull(strTokenizer4);
        org.junit.Assert.assertNotNull(strList5);
    }

    @Test
    public void test01753() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01753");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder7.deleteFirst('#');
        java.lang.String str10 = strBuilder9.toString();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder9.appendln((long) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder9.deleteAll("a");
        java.lang.String[] strArray18 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList19 = new java.util.ArrayList<java.lang.String>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList19, strArray18);
        char[] charArray27 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = new org.apache.commons.lang3.text.StrTokenizer(charArray27, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = strTokenizer29.setDelimiterString("hi!");
        boolean boolean32 = strTokenizer29.isIgnoreEmptyTokens();
        java.lang.String str33 = strTokenizer29.next();
        int int34 = strList19.indexOf((java.lang.Object) strTokenizer29);
        java.util.ListIterator<java.lang.String> strItor36 = strList19.listIterator((int) (byte) 0);
        java.util.Iterator<java.lang.String> strItor37 = strList19.iterator();
        java.lang.String[] strArray41 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList42 = new java.util.ArrayList<java.lang.String>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList42, strArray41);
        char[] charArray50 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = new org.apache.commons.lang3.text.StrTokenizer(charArray50, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = strTokenizer52.setDelimiterString("hi!");
        boolean boolean55 = strTokenizer52.isIgnoreEmptyTokens();
        java.lang.String str56 = strTokenizer52.next();
        int int57 = strList42.indexOf((java.lang.Object) strTokenizer52);
        boolean boolean58 = strList19.addAll((java.util.Collection<java.lang.String>) strList42);
        java.util.ListIterator<java.lang.String> strItor59 = strList42.listIterator();
        boolean boolean61 = strList42.add("");
        int int62 = strList42.size();
        char[] charArray69 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer71 = new org.apache.commons.lang3.text.StrTokenizer(charArray69, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer73 = strTokenizer71.setDelimiterString("hi!");
        boolean boolean74 = strTokenizer71.hasNext();
        java.util.List<java.lang.String> strList75 = strTokenizer71.getTokenList();
        boolean boolean76 = strList42.removeAll((java.util.Collection<java.lang.String>) strList75);
        char[] charArray83 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer85 = new org.apache.commons.lang3.text.StrTokenizer(charArray83, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer87 = strTokenizer85.setDelimiterString("hi!");
        java.lang.String str88 = strTokenizer87.nextToken();
        java.util.List<java.lang.String> strList89 = strTokenizer87.getTokenList();
        boolean boolean90 = strList75.removeAll((java.util.Collection<java.lang.String>) strList89);
        boolean boolean91 = strList89.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder93 = strBuilder9.appendWithSeparators((java.lang.Iterable<java.lang.String>) strList89, "a");
        org.apache.commons.lang3.text.StrBuilder strBuilder95 = strBuilder9.ensureCapacity((int) (short) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder97 = strBuilder9.appendln((long) 15);
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + " " + "'", str10, " ");
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(charArray27);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray27), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray27), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray27), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "#4#a4#" + "'", str33, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertNotNull(strItor36);
        org.junit.Assert.assertNotNull(strItor37);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(charArray50);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray50), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray50), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray50), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "#4#a4#" + "'", str56, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(strItor59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 4 + "'", int62 == 4);
        org.junit.Assert.assertNotNull(charArray69);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray69), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray69), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray69), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(strList75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(charArray83);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray83), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray83), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray83), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer87);
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "#4#a4#" + "'", str88, "#4#a4#");
        org.junit.Assert.assertNotNull(strList89);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertNotNull(strBuilder93);
        org.junit.Assert.assertNotNull(strBuilder95);
        org.junit.Assert.assertNotNull(strBuilder97);
    }

    @Test
    public void test01754() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01754");
        java.lang.String[] strArray3 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList4 = new java.util.ArrayList<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        char[] charArray12 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strTokenizer14.setDelimiterString("hi!");
        boolean boolean17 = strTokenizer14.isIgnoreEmptyTokens();
        java.lang.String str18 = strTokenizer14.next();
        int int19 = strList4.indexOf((java.lang.Object) strTokenizer14);
        java.util.ListIterator<java.lang.String> strItor21 = strList4.listIterator((int) (byte) 0);
        java.lang.String[] strArray25 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList26 = new java.util.ArrayList<java.lang.String>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList26, strArray25);
        char[] charArray34 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = new org.apache.commons.lang3.text.StrTokenizer(charArray34, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = strTokenizer36.setDelimiterString("hi!");
        boolean boolean39 = strTokenizer36.isIgnoreEmptyTokens();
        java.lang.String str40 = strTokenizer36.next();
        int int41 = strList26.indexOf((java.lang.Object) strTokenizer36);
        java.util.ListIterator<java.lang.String> strItor43 = strList26.listIterator((int) (byte) 0);
        java.util.Iterator<java.lang.String> strItor44 = strList26.iterator();
        boolean boolean45 = strList4.removeAll((java.util.Collection<java.lang.String>) strList26);
        java.util.ListIterator<java.lang.String> strItor46 = strList26.listIterator();
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher49 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int50 = strBuilder47.indexOf(strMatcher49);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder47.append("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder52.deleteAll(' ');
        int int55 = strList26.indexOf((java.lang.Object) strBuilder54);
        java.util.function.UnaryOperator<java.lang.String> strUnaryOperator56 = null;
        // The following exception was thrown during execution in test generation
        try {
            strList26.replaceAll(strUnaryOperator56);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "#4#a4#" + "'", str18, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(strItor21);
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(charArray34);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray34), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray34), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray34), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "#4#a4#" + "'", str40, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertNotNull(strItor43);
        org.junit.Assert.assertNotNull(strItor44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(strItor46);
        org.junit.Assert.assertNotNull(strMatcher49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1));
    }

    @Test
    public void test01755() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01755");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.append(false);
        char[] charArray16 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer(charArray16, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = strTokenizer18.setDelimiterString("hi!");
        boolean boolean21 = strTokenizer18.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder5.appendFixedWidthPadRight((java.lang.Object) strTokenizer18, 10, ' ');
        java.io.Reader reader25 = strBuilder5.asReader();
        reader25.reset();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder27.deleteFirst("hi!");
        java.lang.String str30 = strBuilder29.getNullText();
        char[] charArray32 = new char[] { 'a' };
        char[] charArray33 = strBuilder29.getChars(charArray32);
        char[] charArray38 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray39 = strBuilder29.getChars(charArray38);
        java.io.Reader reader40 = strBuilder29.asReader();
        reader40.mark(10);
        reader40.close();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder44.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder46.clear();
        char[] charArray53 = new char[] { 'a', 'a', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = new org.apache.commons.lang3.text.StrTokenizer(charArray53);
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder46.appendln(charArray53);
        int int56 = reader40.read(charArray53);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer59 = new org.apache.commons.lang3.text.StrTokenizer(charArray53, ' ', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer60 = new org.apache.commons.lang3.text.StrTokenizer(charArray53);
        // The following exception was thrown during execution in test generation
        try {
            int int63 = reader25.read(charArray53, 12, 15);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: null");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(reader25);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNotNull(charArray32);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray32), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray32), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray32), "[a]");
        org.junit.Assert.assertNotNull(charArray33);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray33), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray33), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray33), "[a]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray39);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray39), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray39), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray39), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(reader40);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(charArray53);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray53), "aa4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray53), "aa4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray53), "[a, a, 4, #, 4]");
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1));
    }

    @Test
    public void test01756() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01756");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder2.insert(0, (double) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder6.appendFixedWidthPadRight((java.lang.Object) 100.0d, 1, '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder10.append(2);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder12.append(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder12.appendFixedWidthPadRight(10, 48, '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder12.appendNewLine();
        java.lang.String str20 = strBuilder19.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder21.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder23.clear();
        java.lang.Throwable throwable28 = null;
        java.io.IOException iOException29 = new java.io.IOException("", throwable28);
        java.io.IOException iOException30 = new java.io.IOException("#4#a4#", throwable28);
        java.io.IOException iOException31 = new java.io.IOException(throwable28);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray35 = new java.lang.Object[] { 1.0f, iOException31, false, 100, strBuilder34 };
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder24.appendWithSeparators(objArray35, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder37.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder39.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder39.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder44.append("java.io.IOException: ");
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder44.deleteAll('a');
        boolean boolean50 = strBuilder48.endsWith("0java.io.IOExceptionfalse100");
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder48.appendln((long) 100);
        boolean boolean54 = strBuilder52.startsWith("zinekoTrtSeslaf ");
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder19.appendFixedWidthPadLeft((java.lang.Object) "zinekoTrtSeslaf ", (int) 'e', '#');
        java.lang.String str59 = strBuilder57.substring(31);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(objArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray35), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray35), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "4444444444444444444444444444\n#####################################################################################zinekoTrtSeslaf " + "'", str59, "4444444444444444444444444444\n#####################################################################################zinekoTrtSeslaf ");
    }

    @Test
    public void test01757() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01757");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.append(false);
        boolean boolean11 = strBuilder9.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder12.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder14.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.appendln(10L);
        int int20 = strBuilder14.indexOf("#4#a4#", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder14.insert(1, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int27 = strBuilder24.indexOf(strMatcher26);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder24.append("#4#a4#");
        java.lang.String str31 = strBuilder24.leftString((int) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int35 = strBuilder32.indexOf(strMatcher34);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder32.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder37.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder37.append(false);
        char[] charArray48 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = new org.apache.commons.lang3.text.StrTokenizer(charArray48, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = strTokenizer50.setDelimiterString("hi!");
        boolean boolean53 = strTokenizer50.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder37.appendFixedWidthPadRight((java.lang.Object) strTokenizer50, 10, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher59 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int60 = strBuilder57.indexOf(strMatcher59);
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder57.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder62.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder62.appendln((int) (short) 10);
        boolean boolean67 = strBuilder37.equalsIgnoreCase(strBuilder62);
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder37.reverse();
        java.lang.StringBuffer stringBuffer69 = strBuilder68.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder24.append(stringBuffer69, (int) (byte) 0, 2);
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder23.append(stringBuffer69);
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder9.appendln(stringBuffer69);
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder74.append((float) 10L);
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder76.appendln(true);
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "#4#a4#" + "'", str31, "#4#a4#");
        org.junit.Assert.assertNotNull(strMatcher34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(charArray48);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray48), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray48), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray48), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strMatcher59);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-1) + "'", int60 == (-1));
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(stringBuffer69);
        org.junit.Assert.assertEquals(stringBuffer69.toString(), "zinekoTrtSeslaf ");
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNotNull(strBuilder78);
    }

    @Test
    public void test01758() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01758");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        boolean boolean4 = strBuilder3.isEmpty();
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder7.deleteFirst("hi!");
        java.lang.String str10 = strBuilder9.getNullText();
        char[] charArray12 = new char[] { 'a' };
        char[] charArray13 = strBuilder9.getChars(charArray12);
        int int15 = strMatcher6.isMatch(charArray13, 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.append(charArray13);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder3.append((long) 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int22 = strBuilder19.indexOf(strMatcher21);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder19.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder24.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder24.append(false);
        char[] charArray35 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = new org.apache.commons.lang3.text.StrTokenizer(charArray35, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = strTokenizer37.setDelimiterString("hi!");
        boolean boolean40 = strTokenizer37.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder24.appendFixedWidthPadRight((java.lang.Object) strTokenizer37, 10, ' ');
        int int44 = strTokenizer37.previousIndex();
        boolean boolean45 = strTokenizer37.hasNext();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = strTokenizer37.reset("#4#a4#");
        java.util.List<java.lang.String> strList48 = strTokenizer37.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder3.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer37, "StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder51.deleteFirst("hi!");
        java.lang.String str54 = strBuilder53.getNullText();
        char[] charArray56 = new char[] { 'a' };
        char[] charArray57 = strBuilder53.getChars(charArray56);
        char[] charArray62 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray63 = strBuilder53.getChars(charArray62);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray62);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer65 = strTokenizer37.reset(charArray62);
        int int66 = strTokenizer65.size();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[a]");
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[a]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(strTokenizer47);
        org.junit.Assert.assertNotNull(strList48);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertNotNull(charArray56);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray56), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray56), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray56), "[a]");
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[a]");
        org.junit.Assert.assertNotNull(charArray62);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray62), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray62), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray62), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray63);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray63), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray63), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray63), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(strTokenizer64);
        org.junit.Assert.assertNotNull(strTokenizer65);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 1 + "'", int66 == 1);
    }

    @Test
    public void test01759() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01759");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder18.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder18.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder18.replaceFirst('#', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder27.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder28.appendPadding(52, '1');
        java.lang.String str32 = strBuilder28.getNewLineText();
        java.lang.StringBuffer stringBuffer33 = strBuilder28.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder28.appendln('\000');
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNotNull(stringBuffer33);
        org.junit.Assert.assertEquals(stringBuffer33.toString(), "1.0java.io.IOExceptionfalse1001.0\n35.0\n1111111111111111111111111111111111111111111111111111");
        org.junit.Assert.assertNotNull(strBuilder35);
    }

    @Test
    public void test01760() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01760");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.appendln(10L);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteFirst("");
        int int9 = strBuilder5.indexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder5.appendSeparator("java.io.IOException: ", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder12.append((float) 4);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder12.insert(0, (float) (short) 1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("");
        java.lang.String str22 = strTokenizer21.getContent();
        char[] charArray28 = new char[] { 'a', 'a', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = new org.apache.commons.lang3.text.StrTokenizer(charArray28);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = strTokenizer21.reset(charArray28);
        // The following exception was thrown during execution in test generation
        try {
            strBuilder17.getChars(27, 36, charArray28, 30);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 36");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strTokenizer21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertNotNull(charArray28);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray28), "aa4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray28), "aa4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray28), "[a, a, 4, #, 4]");
        org.junit.Assert.assertNotNull(strTokenizer30);
    }

    @Test
    public void test01761() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01761");
        char[] charArray6 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer8.setDelimiterString("hi!");
        java.lang.String str11 = strTokenizer10.nextToken();
        java.util.List<java.lang.String> strList12 = strTokenizer10.getTokenList();
        boolean boolean14 = strList12.add("hi!");
        java.util.Spliterator<java.lang.String> strSpliterator15 = strList12.spliterator();
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.lang.String> strList18 = strList12.subList((int) (short) 10, (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: fromIndex(10) > toIndex(-1)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "#4#a4#" + "'", str11, "#4#a4#");
        org.junit.Assert.assertNotNull(strList12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(strSpliterator15);
    }

    @Test
    public void test01762() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01762");
        char[] charArray6 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer8.setDelimiterString("hi!");
        boolean boolean11 = strTokenizer8.isIgnoreEmptyTokens();
        int int12 = strTokenizer8.nextIndex();
        int int13 = strTokenizer8.nextIndex();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = strTokenizer8.setIgnoreEmptyTokens(false);
        boolean boolean16 = strTokenizer15.hasPrevious();
        java.lang.String str17 = strTokenizer15.getContent();
        java.util.List<java.lang.String> strList18 = strTokenizer15.getTokenList();
        boolean boolean19 = strTokenizer15.hasPrevious();
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(strTokenizer15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "#4#a4#" + "'", str17, "#4#a4#");
        org.junit.Assert.assertNotNull(strList18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    }

    @Test
    public void test01763() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01763");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder18.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder24.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder26.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.appendln(10L);
        int int32 = strBuilder26.indexOf("#4#a4#", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder26.insert(1, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder23.appendln(strBuilder35);
        java.io.Writer writer37 = strBuilder36.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder38.deleteFirst("hi!");
        java.lang.String str41 = strBuilder40.getNullText();
        char[] charArray43 = new char[] { 'a' };
        char[] charArray44 = strBuilder40.getChars(charArray43);
        char[] charArray49 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray50 = strBuilder40.getChars(charArray49);
        writer37.write(charArray49);
        writer37.write("10\n\n");
        writer37.write(10);
        writer37.flush();
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder57.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder59.clear();
        java.lang.Throwable throwable64 = null;
        java.io.IOException iOException65 = new java.io.IOException("", throwable64);
        java.io.IOException iOException66 = new java.io.IOException("#4#a4#", throwable64);
        java.io.IOException iOException67 = new java.io.IOException(throwable64);
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray71 = new java.lang.Object[] { 1.0f, iOException67, false, 100, strBuilder70 };
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder60.appendWithSeparators(objArray71, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder73.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder75.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder75.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder75.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder84 = strBuilder75.replaceFirst('#', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder86 = strBuilder75.setLength((int) ' ');
        char[] charArray89 = strBuilder86.toCharArray((int) ' ', (int) 'a');
        writer37.write(charArray89);
        java.io.Writer writer92 = writer37.append(' ');
        writer92.flush();
        writer92.write("java.io.IOException: StrTokenizer[");
        // The following exception was thrown during execution in test generation
        try {
            writer92.write("1false0\n", (int) (short) 0, 31);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: length must be valid");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(writer37);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNotNull(charArray43);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray43), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray43), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray43), "[a]");
        org.junit.Assert.assertNotNull(charArray44);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray44), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray44), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray44), "[a]");
        org.junit.Assert.assertNotNull(charArray49);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray49), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray49), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray49), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray50);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray50), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray50), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray50), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(objArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray71), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray71), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertNotNull(strBuilder81);
        org.junit.Assert.assertNotNull(strBuilder84);
        org.junit.Assert.assertNotNull(strBuilder86);
        org.junit.Assert.assertNotNull(charArray89);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray89), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray89), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray89), "[]");
        org.junit.Assert.assertNotNull(writer92);
    }

    @Test
    public void test01764() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01764");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", 'a', '3');
    }

    @Test
    public void test01765() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01765");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("100.01210\n");
        char[] charArray3 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int7 = strBuilder4.indexOf(strMatcher6);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder4.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder9.appendln((int) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder9.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int19 = strBuilder16.indexOf(strMatcher18);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder15.deleteFirst(strMatcher18);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder20.minimizeCapacity();
        char[] charArray28 = new char[] { 'a', '4', 'a', 'a', '#', ' ' };
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher31 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int32 = strBuilder29.indexOf(strMatcher31);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder29.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher37 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int38 = strBuilder35.indexOf(strMatcher37);
        int int39 = strBuilder29.indexOf(strMatcher37);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = new org.apache.commons.lang3.text.StrTokenizer(charArray28, strMatcher37);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder20.replace(strMatcher37, "", 2, (int) (short) 100, 10);
        char[] charArray48 = strBuilder20.toCharArray((int) (byte) 0, (int) (byte) 0);
        org.apache.commons.lang3.text.StrMatcher strMatcher49 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder50.deleteFirst("hi!");
        java.lang.String str53 = strBuilder52.getNullText();
        char[] charArray55 = new char[] { 'a' };
        char[] charArray56 = strBuilder52.getChars(charArray55);
        int int60 = strMatcher49.isMatch(charArray56, 0, 0, (int) (byte) 10);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer61 = new org.apache.commons.lang3.text.StrTokenizer(charArray48, strMatcher49);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer62 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray48);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = strTokenizer62.reset("StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrMatcher strMatcher65 = strTokenizer62.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer66 = new org.apache.commons.lang3.text.StrTokenizer(charArray3, strMatcher65);
        org.apache.commons.lang3.text.StrMatcher strMatcher67 = strTokenizer66.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer68 = new org.apache.commons.lang3.text.StrTokenizer("#4#a4#java.io.IOException: zinekoTrtSeslaf \n", strMatcher2, strMatcher67);
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(charArray28);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray28), "a4aa# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray28), "a4aa# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray28), "[a, 4, a, a, #,  ]");
        org.junit.Assert.assertNotNull(strMatcher31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strMatcher37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(charArray48);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray48), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray48), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray48), "[]");
        org.junit.Assert.assertNotNull(strMatcher49);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertNotNull(charArray55);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray55), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray55), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray55), "[a]");
        org.junit.Assert.assertNotNull(charArray56);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray56), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray56), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray56), "[a]");
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 0 + "'", int60 == 0);
        org.junit.Assert.assertNotNull(strTokenizer62);
        org.junit.Assert.assertNotNull(strTokenizer64);
        org.junit.Assert.assertNotNull(strMatcher65);
        org.junit.Assert.assertNotNull(strMatcher67);
    }

    @Test
    public void test01766() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01766");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder18.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = strBuilder23.asTokenizer();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = strTokenizer24.setIgnoreEmptyTokens(false);
        boolean boolean27 = strTokenizer26.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = strTokenizer26.setIgnoreEmptyTokens(false);
        boolean boolean30 = strTokenizer26.hasNext();
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer26.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: remove() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strTokenizer24);
        org.junit.Assert.assertNotNull(strTokenizer26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(strTokenizer29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
    }

    @Test
    public void test01767() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01767");
        char[] charArray6 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer8.setDelimiterString("hi!");
        java.lang.String str11 = strTokenizer10.nextToken();
        java.util.List<java.lang.String> strList12 = strTokenizer10.getTokenList();
        boolean boolean14 = strList12.add("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("");
        java.lang.String str17 = strTokenizer16.getContent();
        boolean boolean18 = strList12.equals((java.lang.Object) strTokenizer16);
        int int19 = strTokenizer16.previousIndex();
        boolean boolean20 = strTokenizer16.hasPrevious();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder21.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder23.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.appendln(10L);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder26.deleteFirst("");
        char[] charArray29 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder28.appendln(charArray29);
        boolean boolean31 = strBuilder28.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder33.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder35.clear();
        boolean boolean37 = strBuilder36.isEmpty();
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder40.deleteFirst("hi!");
        java.lang.String str43 = strBuilder42.getNullText();
        char[] charArray45 = new char[] { 'a' };
        char[] charArray46 = strBuilder42.getChars(charArray45);
        int int48 = strMatcher39.isMatch(charArray46, 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder36.append(charArray46);
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder28.insert((int) (byte) 1, charArray46);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = new org.apache.commons.lang3.text.StrTokenizer(charArray46, "StrTokenizer[#4#a4#]");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = strTokenizer16.reset(charArray46);
        java.lang.Class<?> wildcardClass54 = strTokenizer16.getClass();
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "#4#a4#" + "'", str11, "#4#a4#");
        org.junit.Assert.assertNotNull(strList12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(strMatcher39);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertNotNull(charArray45);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray45), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray45), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray45), "[a]");
        org.junit.Assert.assertNotNull(charArray46);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray46), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray46), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray46), "[a]");
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strTokenizer53);
        org.junit.Assert.assertNotNull(wildcardClass54);
    }

    @Test
    public void test01768() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01768");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int4 = strBuilder1.indexOf(strMatcher3);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer("#4#a4#", strMatcher3);
        int int6 = strTokenizer5.size();
        int int7 = strTokenizer5.size();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = strTokenizer5.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = strTokenizer5.getDelimiterMatcher();
        boolean boolean11 = strTokenizer5.hasPrevious();
        org.junit.Assert.assertNotNull(strMatcher3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertNotNull(strTokenizer9);
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test01769() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01769");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.appendln(10L);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteFirst("");
        int int9 = strBuilder5.indexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder5.appendSeparator("java.io.IOException: ", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder5.appendln("");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder15.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder17.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder17.appendln(10L);
        int int23 = strBuilder17.indexOf("#4#a4#", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder17.insert(1, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder17.setLength(1);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder17.replaceAll("1false0\n", " ");
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder17.deleteFirst('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder33.appendSeparator(".0jav");
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder35.deleteAll(' ');
        boolean boolean38 = strBuilder14.equalsIgnoreCase(strBuilder35);
        boolean boolean40 = strBuilder14.contains(" 10\n");
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
    }

    @Test
    public void test01770() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01770");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        java.lang.String str3 = strBuilder2.getNullText();
        char[] charArray5 = new char[] { 'a' };
        char[] charArray6 = strBuilder2.getChars(charArray5);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder2.appendln((float) '#');
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder2.insert(27, false);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 27");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[a]");
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[a]");
        org.junit.Assert.assertNotNull(strBuilder8);
    }

    @Test
    public void test01771() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01771");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder18.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.append("java.io.IOException: ");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder25.append((int) (short) 10);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder27);
    }

    @Test
    public void test01772() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01772");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.append(false);
        char[] charArray16 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer(charArray16, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = strTokenizer18.setDelimiterString("hi!");
        boolean boolean21 = strTokenizer18.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder5.appendFixedWidthPadRight((java.lang.Object) strTokenizer18, 10, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int28 = strBuilder25.indexOf(strMatcher27);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder25.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder30.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder30.appendln((int) (short) 10);
        boolean boolean35 = strBuilder5.equalsIgnoreCase(strBuilder30);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder30.insert((int) (byte) 1, 'a');
        char char40 = strBuilder30.charAt(0);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = strBuilder30.asTokenizer();
        int int42 = strTokenizer41.nextIndex();
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer41.set("va.io.IOExceptionfalse1001.");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: set() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertTrue("'" + char40 + "' != '" + ' ' + "'", char40 == ' ');
        org.junit.Assert.assertNotNull(strTokenizer41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
    }

    @Test
    public void test01773() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01773");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[#4#a4#]", "StrTokenizer[not tokenized yet]");
        boolean boolean3 = strTokenizer2.isEmptyTokenAsNull();
        java.util.List<java.lang.String> strList4 = strTokenizer2.getTokenList();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str6 = strList4.remove(22);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 22, Size: 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(strList4);
    }

    @Test
    public void test01774() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01774");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.appendln(10L);
        int int8 = strBuilder2.indexOf("#4#a4#", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder2.appendSeparator("", 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.append(false);
        boolean boolean14 = strBuilder11.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder11.deleteAll("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.append((double) 32);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder19.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder21.clear();
        int int23 = strBuilder21.capacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder21.deleteAll(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder25.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int30 = strBuilder27.indexOf(strMatcher29);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder27.append("#4#a4#");
        java.lang.String str34 = strBuilder27.leftString((int) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher37 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int38 = strBuilder35.indexOf(strMatcher37);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder35.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder40.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder40.append(false);
        char[] charArray51 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = new org.apache.commons.lang3.text.StrTokenizer(charArray51, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = strTokenizer53.setDelimiterString("hi!");
        boolean boolean56 = strTokenizer53.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder40.appendFixedWidthPadRight((java.lang.Object) strTokenizer53, 10, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher62 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int63 = strBuilder60.indexOf(strMatcher62);
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder60.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder65.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder65.appendln((int) (short) 10);
        boolean boolean70 = strBuilder40.equalsIgnoreCase(strBuilder65);
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder40.reverse();
        java.lang.StringBuffer stringBuffer72 = strBuilder71.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder27.append(stringBuffer72, (int) (byte) 0, 2);
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder25.append(stringBuffer72);
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder16.appendln(stringBuffer72);
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder16.insert((int) (short) 10, (float) 52);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 32 + "'", int23 == 32);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strMatcher29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "#4#a4#" + "'", str34, "#4#a4#");
        org.junit.Assert.assertNotNull(strMatcher37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(charArray51);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray51), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray51), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray51), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strMatcher62);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + (-1) + "'", int63 == (-1));
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(stringBuffer72);
        org.junit.Assert.assertEquals(stringBuffer72.toString(), "zinekoTrtSeslaf ");
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(strBuilder80);
    }

    @Test
    public void test01775() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01775");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        java.lang.String str3 = strBuilder2.getNullText();
        char[] charArray5 = new char[] { 'a' };
        char[] charArray6 = strBuilder2.getChars(charArray5);
        java.lang.StringBuffer stringBuffer7 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder2.append(stringBuffer7);
        java.io.Writer writer9 = strBuilder8.asWriter();
        writer9.write((int) (short) 1);
        writer9.write((int) (short) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.deleteFirst("hi!");
        java.lang.String str18 = strBuilder16.leftString(32);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder19.deleteFirst("hi!");
        java.lang.String str22 = strBuilder21.getNullText();
        char[] charArray24 = new char[] { 'a' };
        char[] charArray25 = strBuilder21.getChars(charArray24);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder16.append((java.lang.Object) strBuilder21);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder16.append(100L);
        int int31 = strBuilder28.lastIndexOf('a', (int) (short) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder32.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder34.clear();
        java.lang.Throwable throwable39 = null;
        java.io.IOException iOException40 = new java.io.IOException("", throwable39);
        java.io.IOException iOException41 = new java.io.IOException("#4#a4#", throwable39);
        java.io.IOException iOException42 = new java.io.IOException(throwable39);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray46 = new java.lang.Object[] { 1.0f, iOException42, false, 100, strBuilder45 };
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder35.appendWithSeparators(objArray46, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder48.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder50.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder50.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder55.append("java.io.IOException: ");
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder55.deleteAll('a');
        boolean boolean60 = strBuilder59.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher63 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int64 = strBuilder61.indexOf(strMatcher63);
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder61.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder66.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder66.appendln((int) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder66.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder73.deleteFirst("hi!");
        java.lang.String str76 = strBuilder75.getNullText();
        char[] charArray78 = new char[] { 'a' };
        char[] charArray79 = strBuilder75.getChars(charArray78);
        char[] charArray84 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray85 = strBuilder75.getChars(charArray84);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer87 = new org.apache.commons.lang3.text.StrTokenizer(charArray84, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder90 = strBuilder66.appendln(charArray84, 0, 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder91 = strBuilder59.appendln(charArray84);
        org.apache.commons.lang3.text.StrBuilder strBuilder92 = strBuilder28.appendln(charArray84);
        char[] charArray93 = strBuilder28.toCharArray();
        writer9.write(charArray93);
        java.io.Writer writer96 = writer9.append(' ');
        writer9.close();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[a]");
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[a]");
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(writer9);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[a]");
        org.junit.Assert.assertNotNull(charArray25);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray25), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray25), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray25), "[a]");
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(objArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray46), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray46), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(strMatcher63);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + (-1) + "'", int64 == (-1));
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNull(str76);
        org.junit.Assert.assertNotNull(charArray78);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray78), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray78), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray78), "[a]");
        org.junit.Assert.assertNotNull(charArray79);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray79), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray79), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray79), "[a]");
        org.junit.Assert.assertNotNull(charArray84);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray84), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray84), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray84), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray85);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray85), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray85), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray85), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(strBuilder90);
        org.junit.Assert.assertNotNull(strBuilder91);
        org.junit.Assert.assertNotNull(strBuilder92);
        org.junit.Assert.assertNotNull(charArray93);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray93), "100a4 4\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray93), "100a4 4\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray93), "[1, 0, 0, a, 4,  , 4, \n]");
        org.junit.Assert.assertNotNull(writer96);
    }

    @Test
    public void test01776() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01776");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.appendln(10L);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteFirst("");
        char[] charArray8 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder7.appendln(charArray8);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder7.appendln('a');
        java.lang.String str12 = strBuilder11.getNullText();
        // The following exception was thrown during execution in test generation
        try {
            char[] charArray15 = strBuilder11.toCharArray(51, 27);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: end < start");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNull(str12);
    }

    @Test
    public void test01777() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01777");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("\n", '.', 'a');
        java.lang.String str4 = strTokenizer3.nextToken();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "\n" + "'", str4, "\n");
    }

    @Test
    public void test01778() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01778");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        java.lang.String str3 = strBuilder2.getNullText();
        char[] charArray5 = new char[] { 'a' };
        char[] charArray6 = strBuilder2.getChars(charArray5);
        char[] charArray11 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray12 = strBuilder2.getChars(charArray11);
        java.io.Reader reader13 = strBuilder2.asReader();
        reader13.mark((int) (byte) 0);
        boolean boolean16 = reader13.markSupported();
        reader13.close();
        int int18 = reader13.read();
        reader13.mark(49);
        long long22 = reader13.skip((long) 61);
        boolean boolean23 = reader13.ready();
        reader13.reset();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[a]");
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(reader13);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + 0L + "'", long22 == 0L);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
    }

    @Test
    public void test01779() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01779");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder18.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.append("java.io.IOException: ");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder23.deleteAll('a');
        boolean boolean28 = strBuilder27.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher31 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int32 = strBuilder29.indexOf(strMatcher31);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder29.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder34.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder34.appendln((int) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder34.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder41.deleteFirst("hi!");
        java.lang.String str44 = strBuilder43.getNullText();
        char[] charArray46 = new char[] { 'a' };
        char[] charArray47 = strBuilder43.getChars(charArray46);
        char[] charArray52 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray53 = strBuilder43.getChars(charArray52);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = new org.apache.commons.lang3.text.StrTokenizer(charArray52, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder34.appendln(charArray52, 0, 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder27.appendln(charArray52);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer60 = new org.apache.commons.lang3.text.StrTokenizer(charArray52);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer62 = strTokenizer60.setEmptyTokenAsNull(true);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(strMatcher31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertNotNull(charArray46);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray46), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray46), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray46), "[a]");
        org.junit.Assert.assertNotNull(charArray47);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray47), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray47), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray47), "[a]");
        org.junit.Assert.assertNotNull(charArray52);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray52), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray52), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray52), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray53);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray53), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray53), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray53), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strTokenizer62);
    }

    @Test
    public void test01780() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01780");
        char[] charArray6 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = new org.apache.commons.lang3.text.StrTokenizer(charArray6);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray6);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder13.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder13.appendln(10L);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.deleteFirst("");
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = org.apache.commons.lang3.text.StrMatcher.spaceMatcher();
        int int21 = strBuilder16.indexOf(strMatcher19, 1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, strMatcher19);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray6);
        boolean boolean24 = strTokenizer23.hasNext();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = strTokenizer23.setDelimiterString("StrTokenizer[#4#a4#]");
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer26.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: remove() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(strTokenizer26);
    }

    @Test
    public void test01781() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01781");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder5.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder6.replaceAll("a", " 10\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder10.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder12.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder12.insert(0, (double) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder16.appendFixedWidthPadRight((java.lang.Object) 100.0d, 1, '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder20.trim();
        java.lang.Object[] objArray22 = new java.lang.Object[] {};
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder20.appendAll(objArray22);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder9.appendWithSeparators(objArray22, "java.io.IOException: StrTokenizer[#4#a4#]");
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int29 = strBuilder26.indexOf(strMatcher28);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder26.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder31.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder31.append(false);
        char[] charArray42 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = new org.apache.commons.lang3.text.StrTokenizer(charArray42, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = strTokenizer44.setDelimiterString("hi!");
        boolean boolean47 = strTokenizer44.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder31.appendFixedWidthPadRight((java.lang.Object) strTokenizer44, 10, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int54 = strBuilder51.indexOf(strMatcher53);
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder51.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder56.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder56.appendln((int) (short) 10);
        boolean boolean61 = strBuilder31.equalsIgnoreCase(strBuilder56);
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder56.insert((int) (byte) 1, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder64.appendln(false);
        char[] charArray73 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer75 = new org.apache.commons.lang3.text.StrTokenizer(charArray73, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer77 = strTokenizer75.setDelimiterString("hi!");
        java.lang.String str78 = strTokenizer77.nextToken();
        java.util.List<java.lang.String> strList79 = strTokenizer77.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder80.deleteFirst("hi!");
        java.lang.String str83 = strBuilder82.getNullText();
        char[] charArray85 = new char[] { 'a' };
        char[] charArray86 = strBuilder82.getChars(charArray85);
        char[] charArray91 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray92 = strBuilder82.getChars(charArray91);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer93 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray92);
        int int94 = strList79.indexOf((java.lang.Object) charArray92);
        char[] charArray95 = strBuilder66.getChars(charArray92);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder98 = strBuilder9.append(charArray95, 59, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: Invalid startIndex: 0");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(objArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray22), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray22), "[]");
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strMatcher28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(charArray42);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray42), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray42), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray42), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strMatcher53);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(charArray73);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray73), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray73), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray73), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer77);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "#4#a4#" + "'", str78, "#4#a4#");
        org.junit.Assert.assertNotNull(strList79);
        org.junit.Assert.assertNotNull(strBuilder82);
        org.junit.Assert.assertNull(str83);
        org.junit.Assert.assertNotNull(charArray85);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray85), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray85), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray85), "[a]");
        org.junit.Assert.assertNotNull(charArray86);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray86), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray86), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray86), "[a]");
        org.junit.Assert.assertNotNull(charArray91);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray91), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray91), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray91), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray92);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray92), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray92), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray92), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(strTokenizer93);
        org.junit.Assert.assertTrue("'" + int94 + "' != '" + (-1) + "'", int94 == (-1));
        org.junit.Assert.assertNotNull(charArray95);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray95), " a10\nfalse\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray95), " a10\nfalse\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray95), "[ , a, 1, 0, \n, f, a, l, s, e, \n]");
    }

    @Test
    public void test01782() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01782");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.String str1 = strBuilder0.getNullText();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder2.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher5 = org.apache.commons.lang3.text.StrMatcher.splitMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder2.deleteAll(strMatcher5);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder0.appendln((java.lang.Object) strBuilder2);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.deleteFirst("hi!");
        java.lang.String str13 = strBuilder11.leftString(32);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.deleteFirst("hi!");
        java.lang.String str17 = strBuilder16.getNullText();
        char[] charArray19 = new char[] { 'a' };
        char[] charArray20 = strBuilder16.getChars(charArray19);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder11.append((java.lang.Object) strBuilder16);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder11.append(100L);
        int int26 = strBuilder23.lastIndexOf('a', (int) (short) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder27.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder29.clear();
        java.lang.Throwable throwable34 = null;
        java.io.IOException iOException35 = new java.io.IOException("", throwable34);
        java.io.IOException iOException36 = new java.io.IOException("#4#a4#", throwable34);
        java.io.IOException iOException37 = new java.io.IOException(throwable34);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray41 = new java.lang.Object[] { 1.0f, iOException37, false, 100, strBuilder40 };
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder30.appendWithSeparators(objArray41, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder43.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder45.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder45.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder50.append("java.io.IOException: ");
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder50.deleteAll('a');
        boolean boolean55 = strBuilder54.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher58 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int59 = strBuilder56.indexOf(strMatcher58);
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder56.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder61.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder61.appendln((int) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder61.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder68.deleteFirst("hi!");
        java.lang.String str71 = strBuilder70.getNullText();
        char[] charArray73 = new char[] { 'a' };
        char[] charArray74 = strBuilder70.getChars(charArray73);
        char[] charArray79 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray80 = strBuilder70.getChars(charArray79);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer82 = new org.apache.commons.lang3.text.StrTokenizer(charArray79, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder85 = strBuilder61.appendln(charArray79, 0, 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder86 = strBuilder54.appendln(charArray79);
        org.apache.commons.lang3.text.StrBuilder strBuilder87 = strBuilder23.appendln(charArray79);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer90 = new org.apache.commons.lang3.text.StrTokenizer(charArray79, 'a', 'a');
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder91 = strBuilder2.insert(46, charArray79);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 46");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strMatcher5);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[a]");
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray20), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray20), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray20), "[a]");
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(objArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray41), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray41), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(strMatcher58);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-1) + "'", int59 == (-1));
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNull(str71);
        org.junit.Assert.assertNotNull(charArray73);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray73), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray73), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray73), "[a]");
        org.junit.Assert.assertNotNull(charArray74);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray74), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray74), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray74), "[a]");
        org.junit.Assert.assertNotNull(charArray79);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray79), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray79), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray79), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray80);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray80), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray80), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray80), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(strBuilder85);
        org.junit.Assert.assertNotNull(strBuilder86);
        org.junit.Assert.assertNotNull(strBuilder87);
    }

    @Test
    public void test01783() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01783");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        java.lang.String str3 = strBuilder2.getNullText();
        char[] charArray5 = new char[] { 'a' };
        char[] charArray6 = strBuilder2.getChars(charArray5);
        char[] charArray11 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray12 = strBuilder2.getChars(charArray11);
        java.io.Reader reader13 = strBuilder2.asReader();
        char[] charArray14 = strBuilder2.toCharArray();
        java.lang.String[] strArray18 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList19 = new java.util.ArrayList<java.lang.String>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList19, strArray18);
        char[] charArray27 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = new org.apache.commons.lang3.text.StrTokenizer(charArray27, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = strTokenizer29.setDelimiterString("hi!");
        boolean boolean32 = strTokenizer29.isIgnoreEmptyTokens();
        java.lang.String str33 = strTokenizer29.next();
        int int34 = strList19.indexOf((java.lang.Object) strTokenizer29);
        java.util.ListIterator<java.lang.String> strItor36 = strList19.listIterator((int) (byte) 0);
        java.util.Iterator<java.lang.String> strItor37 = strList19.iterator();
        java.lang.String[] strArray41 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList42 = new java.util.ArrayList<java.lang.String>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList42, strArray41);
        char[] charArray50 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = new org.apache.commons.lang3.text.StrTokenizer(charArray50, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = strTokenizer52.setDelimiterString("hi!");
        boolean boolean55 = strTokenizer52.isIgnoreEmptyTokens();
        java.lang.String str56 = strTokenizer52.next();
        int int57 = strList42.indexOf((java.lang.Object) strTokenizer52);
        boolean boolean58 = strList19.addAll((java.util.Collection<java.lang.String>) strList42);
        java.util.ListIterator<java.lang.String> strItor59 = strList42.listIterator();
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher62 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int63 = strBuilder60.indexOf(strMatcher62);
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder60.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher68 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int69 = strBuilder66.indexOf(strMatcher68);
        int int70 = strBuilder60.indexOf(strMatcher68);
        int int71 = strList42.indexOf((java.lang.Object) strBuilder60);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder2.append(strBuilder60, 74, 52);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: startIndex must be valid");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[a]");
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(reader13);
        org.junit.Assert.assertNotNull(charArray14);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray14), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray14), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray14), "[]");
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(charArray27);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray27), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray27), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray27), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "#4#a4#" + "'", str33, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertNotNull(strItor36);
        org.junit.Assert.assertNotNull(strItor37);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(charArray50);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray50), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray50), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray50), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "#4#a4#" + "'", str56, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(strItor59);
        org.junit.Assert.assertNotNull(strMatcher62);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + (-1) + "'", int63 == (-1));
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strMatcher68);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + (-1) + "'", int69 == (-1));
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + (-1) + "'", int70 == (-1));
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + (-1) + "'", int71 == (-1));
    }

    @Test
    public void test01784() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01784");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.appendln(10L);
        int int8 = strBuilder2.indexOf("#4#a4#", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder2.appendSeparator("", 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.append(false);
        boolean boolean14 = strBuilder11.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder11.deleteAll("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.append((double) 32);
        java.lang.String str21 = strBuilder16.substring((int) (short) 1, 32);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder24.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder24.appendln(10L);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder24.appendFixedWidthPadLeft(0, 0, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder24.trim();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder16.append((java.lang.CharSequence) strBuilder32);
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder33.appendln('\000');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[not tokenized yet]", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = strTokenizer38.setIgnoreEmptyTokens(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder35.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer40, "aa4#4");
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder35.setCharAt(38, '#');
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "0\nfalse32.0" + "'", str21, "0\nfalse32.0");
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strTokenizer40);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder45);
    }

    @Test
    public void test01785() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01785");
        java.lang.String[] strArray3 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList4 = new java.util.ArrayList<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        char[] charArray12 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strTokenizer14.setDelimiterString("hi!");
        boolean boolean17 = strTokenizer14.isIgnoreEmptyTokens();
        java.lang.String str18 = strTokenizer14.next();
        int int19 = strList4.indexOf((java.lang.Object) strTokenizer14);
        java.util.ListIterator<java.lang.String> strItor21 = strList4.listIterator((int) (byte) 0);
        java.util.Iterator<java.lang.String> strItor22 = strList4.iterator();
        java.lang.String[] strArray26 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList27 = new java.util.ArrayList<java.lang.String>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList27, strArray26);
        char[] charArray35 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = new org.apache.commons.lang3.text.StrTokenizer(charArray35, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = strTokenizer37.setDelimiterString("hi!");
        boolean boolean40 = strTokenizer37.isIgnoreEmptyTokens();
        java.lang.String str41 = strTokenizer37.next();
        int int42 = strList27.indexOf((java.lang.Object) strTokenizer37);
        boolean boolean43 = strList4.addAll((java.util.Collection<java.lang.String>) strList27);
        java.util.ListIterator<java.lang.String> strItor44 = strList27.listIterator();
        boolean boolean46 = strList27.add("");
        int int47 = strList27.size();
        boolean boolean48 = strList27.isEmpty();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str51 = strList27.set((int) (byte) 100, "ptionfalse1001.0\n35.0\naaaajava.io.IOException: StrTokenizer[not tokenized yet]");
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 100, Size: 4");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "#4#a4#" + "'", str18, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(strItor21);
        org.junit.Assert.assertNotNull(strItor22);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "#4#a4#" + "'", str41, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(strItor44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 4 + "'", int47 == 4);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
    }

    @Test
    public void test01786() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01786");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.appendln(10L);
        int int8 = strBuilder2.indexOf("#4#a4#", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder2.insert(1, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder2.setLength(1);
        boolean boolean15 = strBuilder2.endsWith("java.io.IOException: java.io.IOException: StrTokenizer[#4#a4#]");
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test01787() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01787");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        java.lang.String str3 = strBuilder2.getNullText();
        char[] charArray5 = new char[] { 'a' };
        char[] charArray6 = strBuilder2.getChars(charArray5);
        char[] charArray11 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray12 = strBuilder2.getChars(charArray11);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray11, " ");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray11);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray11);
        java.lang.String str17 = strTokenizer16.getContent();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[a]");
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(strTokenizer15);
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "a4 4" + "'", str17, "a4 4");
    }

    @Test
    public void test01788() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01788");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder7.deleteFirst('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int13 = strBuilder10.indexOf(strMatcher12);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder10.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder15.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder17.deleteFirst('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder9.appendln(strBuilder17);
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder20.deleteAll(strMatcher21);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder20.appendSeparator(" a10\n", (int) ' ');
        java.lang.String str26 = strBuilder25.getNewLineText();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder25.setLength((int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -1");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNull(str26);
    }

    @Test
    public void test01789() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01789");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.appendln((int) (short) 10);
        char[] charArray16 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer(charArray16, ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer(charArray16, strMatcher20);
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = strTokenizer21.getIgnoredMatcher();
        int int24 = strBuilder5.indexOf(strMatcher22, (int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder5.append(100.0d);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.insert(49, (long) 66);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 49");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher20);
        org.junit.Assert.assertNotNull(strMatcher22);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertNotNull(strBuilder26);
    }

    @Test
    public void test01790() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01790");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        char[] charArray9 = new char[] { 'a', 'a', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = new org.apache.commons.lang3.text.StrTokenizer(charArray9);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder2.appendln(charArray9);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("hi!", "StrTokenizer[#4#a4#]");
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.spaceMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer("true\n", strMatcher16);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder14.replace(strMatcher16, "java.io.IOException: StrTokenizer[not tokenized yet]", 0, 27, (int) '#');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = new org.apache.commons.lang3.text.StrTokenizer("", "#4#a4#");
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = strTokenizer25.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = strTokenizer25.setDelimiterString("#4#a4#");
        java.lang.String str29 = strTokenizer25.nextToken();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int33 = strBuilder30.indexOf(strMatcher32);
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder30.append("#4#a4#");
        java.lang.String str37 = strBuilder30.leftString((int) (short) 100);
        int int39 = strBuilder30.lastIndexOf("StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder30.insert(0, (-1.0f));
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder30.appendSeparator(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder45.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder47.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder47.insert(0, (double) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder51.appendFixedWidthPadRight((java.lang.Object) 100.0d, 1, '4');
        org.apache.commons.lang3.text.StrMatcher strMatcher56 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        int int58 = strBuilder55.lastIndexOf(strMatcher56, (int) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder30.replaceFirst(strMatcher56, "#4#a4#");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer61 = strTokenizer25.setIgnoredMatcher(strMatcher56);
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder22.replaceAll(strMatcher56, "1false0");
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder22.clear();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(charArray9);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray9), "aa4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray9), "aa4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray9), "[a, a, 4, #, 4]");
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertNotNull(strTokenizer28);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNotNull(strMatcher32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "#4#a4#" + "'", str37, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strMatcher56);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + (-1) + "'", int58 == (-1));
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strTokenizer61);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strBuilder64);
    }

    @Test
    public void test01791() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01791");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.append(false);
        char[] charArray16 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer(charArray16, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = strTokenizer18.setDelimiterString("hi!");
        boolean boolean21 = strTokenizer18.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder5.appendFixedWidthPadRight((java.lang.Object) strTokenizer18, 10, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int28 = strBuilder25.indexOf(strMatcher27);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder25.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder30.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder30.appendln((int) (short) 10);
        boolean boolean35 = strBuilder5.equalsIgnoreCase(strBuilder30);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder36.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder38.clear();
        java.lang.Throwable throwable43 = null;
        java.io.IOException iOException44 = new java.io.IOException("", throwable43);
        java.io.IOException iOException45 = new java.io.IOException("#4#a4#", throwable43);
        java.io.IOException iOException46 = new java.io.IOException(throwable43);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray50 = new java.lang.Object[] { 1.0f, iOException46, false, 100, strBuilder49 };
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder39.appendWithSeparators(objArray50, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder52.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder54.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder54.replaceAll('#', 'a');
        java.lang.StringBuffer stringBuffer60 = strBuilder54.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder30.appendln(stringBuffer60, 13, (int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder63.appendSeparator(".IOExceptionfalse1001.0\n35.0\n1false0\n\n32", "eptionfalse1001.0\n35.0\n1false0\n\n");
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder66.insert(72, (double) 4);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 72");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(objArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray50), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray50), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(stringBuffer60);
        org.junit.Assert.assertEquals(stringBuffer60.toString(), "1.0java.io.IOExceptionfalse1001.0\n35.0\n");
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strBuilder66);
    }

    @Test
    public void test01792() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01792");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder18.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder24.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder26.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.appendln(10L);
        int int32 = strBuilder26.indexOf("#4#a4#", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder26.insert(1, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder23.appendln(strBuilder35);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder36.appendln("java.io.IOException: ", (int) (short) 1, (int) (byte) 10);
        boolean boolean42 = strBuilder36.startsWith("java.io.IOException: ");
        int int45 = strBuilder36.lastIndexOf("10\n\n", 5);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher48 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int49 = strBuilder46.indexOf(strMatcher48);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder46.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder51.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder51.append(false);
        char[] charArray62 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = new org.apache.commons.lang3.text.StrTokenizer(charArray62, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer66 = strTokenizer64.setDelimiterString("hi!");
        boolean boolean67 = strTokenizer64.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder51.appendFixedWidthPadRight((java.lang.Object) strTokenizer64, 10, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher73 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int74 = strBuilder71.indexOf(strMatcher73);
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder71.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder76.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder76.appendln((int) (short) 10);
        boolean boolean81 = strBuilder51.equalsIgnoreCase(strBuilder76);
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder51.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder83 = strBuilder51.reverse();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer86 = new org.apache.commons.lang3.text.StrTokenizer("", "#4#a4#");
        org.apache.commons.lang3.text.StrMatcher strMatcher87 = strTokenizer86.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder89 = strBuilder51.replaceFirst(strMatcher87, "100.01210\n");
        boolean boolean90 = strBuilder36.equals(strBuilder51);
        org.apache.commons.lang3.text.StrBuilder strBuilder91 = strBuilder51.clear();
        java.lang.String str92 = strBuilder51.getNewLineText();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
        org.junit.Assert.assertNotNull(strMatcher48);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(charArray62);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray62), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray62), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray62), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(strMatcher73);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + (-1) + "'", int74 == (-1));
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNotNull(strBuilder82);
        org.junit.Assert.assertNotNull(strBuilder83);
        org.junit.Assert.assertNotNull(strMatcher87);
        org.junit.Assert.assertNotNull(strBuilder89);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertNotNull(strBuilder91);
        org.junit.Assert.assertNull(str92);
    }

    @Test
    public void test01793() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01793");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        java.lang.String str4 = strBuilder2.leftString(32);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteFirst("hi!");
        java.lang.String str8 = strBuilder7.getNullText();
        char[] charArray10 = new char[] { 'a' };
        char[] charArray11 = strBuilder7.getChars(charArray10);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder2.append((java.lang.Object) strBuilder7);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder2.append(100L);
        int int17 = strBuilder14.lastIndexOf('a', (int) (short) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder20.clear();
        java.lang.Throwable throwable25 = null;
        java.io.IOException iOException26 = new java.io.IOException("", throwable25);
        java.io.IOException iOException27 = new java.io.IOException("#4#a4#", throwable25);
        java.io.IOException iOException28 = new java.io.IOException(throwable25);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray32 = new java.lang.Object[] { 1.0f, iOException28, false, 100, strBuilder31 };
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder21.appendWithSeparators(objArray32, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder34.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder36.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder36.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder41.append("java.io.IOException: ");
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder41.deleteAll('a');
        boolean boolean46 = strBuilder45.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher49 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int50 = strBuilder47.indexOf(strMatcher49);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder47.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder52.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder52.appendln((int) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder52.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder59.deleteFirst("hi!");
        java.lang.String str62 = strBuilder61.getNullText();
        char[] charArray64 = new char[] { 'a' };
        char[] charArray65 = strBuilder61.getChars(charArray64);
        char[] charArray70 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray71 = strBuilder61.getChars(charArray70);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer73 = new org.apache.commons.lang3.text.StrTokenizer(charArray70, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder52.appendln(charArray70, 0, 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder45.appendln(charArray70);
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder14.appendln(charArray70);
        char[] charArray79 = strBuilder14.toCharArray();
        char[] charArray86 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer88 = new org.apache.commons.lang3.text.StrTokenizer(charArray86, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer90 = strTokenizer88.setDelimiterString("hi!");
        java.lang.String str91 = strTokenizer90.nextToken();
        java.util.List<java.lang.String> strList92 = strTokenizer90.getTokenList();
        org.apache.commons.lang3.text.StrMatcher strMatcher93 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer94 = strTokenizer90.setTrimmerMatcher(strMatcher93);
        org.apache.commons.lang3.text.StrMatcher strMatcher95 = strTokenizer90.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer96 = new org.apache.commons.lang3.text.StrTokenizer(charArray79, strMatcher95);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer98 = strTokenizer96.setQuoteChar('.');
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str99 = strTokenizer98.previous();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[a]");
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(objArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray32), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray32), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(strMatcher49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNull(str62);
        org.junit.Assert.assertNotNull(charArray64);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray64), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray64), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray64), "[a]");
        org.junit.Assert.assertNotNull(charArray65);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray65), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray65), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray65), "[a]");
        org.junit.Assert.assertNotNull(charArray70);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray70), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray70), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray70), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray71);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray71), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray71), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray71), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(charArray79);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray79), "100a4 4\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray79), "100a4 4\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray79), "[1, 0, 0, a, 4,  , 4, \n]");
        org.junit.Assert.assertNotNull(charArray86);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray86), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray86), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray86), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer90);
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + "#4#a4#" + "'", str91, "#4#a4#");
        org.junit.Assert.assertNotNull(strList92);
        org.junit.Assert.assertNotNull(strMatcher93);
        org.junit.Assert.assertNotNull(strTokenizer94);
        org.junit.Assert.assertNotNull(strMatcher95);
        org.junit.Assert.assertNotNull(strTokenizer98);
    }

    @Test
    public void test01794() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01794");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("");
        java.lang.String str2 = strTokenizer1.getContent();
        char[] charArray8 = new char[] { 'a', 'a', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = new org.apache.commons.lang3.text.StrTokenizer(charArray8);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer1.reset(charArray8);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = new org.apache.commons.lang3.text.StrTokenizer(charArray8, '4');
        java.lang.String str13 = strTokenizer12.next();
        boolean boolean14 = strTokenizer12.hasNext();
        boolean boolean15 = strTokenizer12.hasNext();
        org.junit.Assert.assertNotNull(strTokenizer1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "" + "'", str2, "");
        org.junit.Assert.assertNotNull(charArray8);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray8), "aa4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray8), "aa4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray8), "[a, a, 4, #, 4]");
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "aa" + "'", str13, "aa");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
    }

    @Test
    public void test01795() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01795");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder18.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.deleteAll('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder23.append(strBuilder26, (int) 'a', 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder23.appendln((double) (short) 10);
        java.lang.String str33 = strBuilder31.substring(0);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "1.0java.io.IOExceptionfalse1001.0\n35.0\n10.0\n" + "'", str33, "1.0java.io.IOExceptionfalse1001.0\n35.0\n10.0\n");
    }

    @Test
    public void test01796() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01796");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder3.append(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder3.deleteFirst('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder7.append((long) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder9.replaceFirst("35\n", "java.io.IOException: StrTokenizer[");
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder12);
    }

    @Test
    public void test01797() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01797");
        char[] charArray6 = new char[] { 'a', '4', 'a', 'a', '#', ' ' };
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int10 = strBuilder7.indexOf(strMatcher9);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder7.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int16 = strBuilder13.indexOf(strMatcher15);
        int int17 = strBuilder7.indexOf(strMatcher15);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, strMatcher15);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int23 = strBuilder20.indexOf(strMatcher22);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = new org.apache.commons.lang3.text.StrTokenizer("#4#a4#", strMatcher22);
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("#4#a4#");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, strMatcher22, strMatcher26);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, '3');
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "a4aa# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "a4aa# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[a, 4, a, a, #,  ]");
        org.junit.Assert.assertNotNull(strMatcher9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strMatcher15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNotNull(strMatcher22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNotNull(strMatcher26);
    }

    @Test
    public void test01798() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01798");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder5.appendPadding((int) (byte) 1, 'a');
        int int12 = strBuilder10.indexOf("java.io.IOException: StrTokenizer[#4#a4#]");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = new org.apache.commons.lang3.text.StrTokenizer("", "#4#a4#");
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = strTokenizer16.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder20.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder20.appendln(10L);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.deleteFirst("");
        char[] charArray26 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder25.appendln(charArray26);
        boolean boolean28 = strBuilder25.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder30.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder32.clear();
        boolean boolean34 = strBuilder33.isEmpty();
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder37.deleteFirst("hi!");
        java.lang.String str40 = strBuilder39.getNullText();
        char[] charArray42 = new char[] { 'a' };
        char[] charArray43 = strBuilder39.getChars(charArray42);
        int int45 = strMatcher36.isMatch(charArray43, 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder33.append(charArray43);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder25.insert((int) (byte) 1, charArray43);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = new org.apache.commons.lang3.text.StrTokenizer(charArray43, "StrTokenizer[#4#a4#]");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray43);
        int int54 = strMatcher17.isMatch(charArray43, 39, 48, (int) (short) 0);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder10.insert((int) 'a', charArray43, (int) '1', (int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 97");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(strMatcher36);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNotNull(charArray42);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray42), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray42), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray42), "[a]");
        org.junit.Assert.assertNotNull(charArray43);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray43), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray43), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray43), "[a]");
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strTokenizer50);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
    }

    @Test
    public void test01799() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01799");
        java.lang.String[] strArray3 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList4 = new java.util.ArrayList<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        char[] charArray12 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strTokenizer14.setDelimiterString("hi!");
        boolean boolean17 = strTokenizer14.isIgnoreEmptyTokens();
        java.lang.String str18 = strTokenizer14.next();
        int int19 = strList4.indexOf((java.lang.Object) strTokenizer14);
        java.util.ListIterator<java.lang.String> strItor21 = strList4.listIterator((int) (byte) 0);
        java.lang.String[] strArray25 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList26 = new java.util.ArrayList<java.lang.String>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList26, strArray25);
        char[] charArray34 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = new org.apache.commons.lang3.text.StrTokenizer(charArray34, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = strTokenizer36.setDelimiterString("hi!");
        boolean boolean39 = strTokenizer36.isIgnoreEmptyTokens();
        java.lang.String str40 = strTokenizer36.next();
        int int41 = strList26.indexOf((java.lang.Object) strTokenizer36);
        java.util.ListIterator<java.lang.String> strItor43 = strList26.listIterator((int) (byte) 0);
        java.util.Iterator<java.lang.String> strItor44 = strList26.iterator();
        boolean boolean45 = strList4.removeAll((java.util.Collection<java.lang.String>) strList26);
        java.util.ListIterator<java.lang.String> strItor46 = strList26.listIterator();
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher49 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int50 = strBuilder47.indexOf(strMatcher49);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder47.append("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder52.deleteAll(' ');
        int int55 = strList26.indexOf((java.lang.Object) strBuilder54);
        java.util.stream.IntStream intStream56 = strBuilder54.codePoints();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str59 = strBuilder54.substring(36, 66);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: end < start");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "#4#a4#" + "'", str18, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(strItor21);
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(charArray34);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray34), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray34), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray34), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "#4#a4#" + "'", str40, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertNotNull(strItor43);
        org.junit.Assert.assertNotNull(strItor44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(strItor46);
        org.junit.Assert.assertNotNull(strMatcher49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1));
        org.junit.Assert.assertNotNull(intStream56);
    }

    @Test
    public void test01800() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01800");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.setNewLineText("10\n\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder2.deleteFirst('#');
        java.lang.String str8 = strBuilder2.getNullText();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNull(str8);
    }

    @Test
    public void test01801() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01801");
        char[] charArray6 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = new org.apache.commons.lang3.text.StrTokenizer(charArray6);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray6);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray6);
        java.util.List<java.lang.String> strList12 = strTokenizer11.getTokenList();
        // The following exception was thrown during execution in test generation
        try {
            java.util.ListIterator<java.lang.String> strItor14 = strList12.listIterator((int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 32");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertNotNull(strTokenizer11);
        org.junit.Assert.assertNotNull(strList12);
    }

    @Test
    public void test01802() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01802");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder18.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder24.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder26.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.appendln(10L);
        int int32 = strBuilder26.indexOf("#4#a4#", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder26.insert(1, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder23.appendln(strBuilder35);
        java.io.Writer writer37 = strBuilder36.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder38.deleteFirst("hi!");
        java.lang.String str41 = strBuilder40.getNullText();
        char[] charArray43 = new char[] { 'a' };
        char[] charArray44 = strBuilder40.getChars(charArray43);
        char[] charArray49 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray50 = strBuilder40.getChars(charArray49);
        writer37.write(charArray49);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = new org.apache.commons.lang3.text.StrTokenizer(charArray49, "#4#a4#");
        int int54 = strTokenizer53.previousIndex();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(writer37);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNotNull(charArray43);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray43), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray43), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray43), "[a]");
        org.junit.Assert.assertNotNull(charArray44);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray44), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray44), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray44), "[a]");
        org.junit.Assert.assertNotNull(charArray49);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray49), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray49), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray49), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray50);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray50), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray50), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray50), "[a, 4,  , 4]");
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
    }

    @Test
    public void test01803() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01803");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder5.appendPadding((int) (byte) 1, 'a');
        java.util.stream.IntStream intStream11 = strBuilder5.codePoints();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder5.append("1false0\n\n#", 2, 27);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: length must be valid");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(intStream11);
    }

    @Test
    public void test01804() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01804");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.append(false);
        char[] charArray16 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer(charArray16, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = strTokenizer18.setDelimiterString("hi!");
        boolean boolean21 = strTokenizer18.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder5.appendFixedWidthPadRight((java.lang.Object) strTokenizer18, 10, ' ');
        int int25 = strTokenizer18.previousIndex();
        boolean boolean26 = strTokenizer18.hasNext();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = strTokenizer18.reset("#4#a4#");
        java.util.List<java.lang.String> strList29 = strTokenizer28.getTokenList();
        boolean boolean30 = strList29.isEmpty();
        boolean boolean31 = strList29.isEmpty();
        java.util.function.UnaryOperator<java.lang.String> strUnaryOperator32 = null;
        // The following exception was thrown during execution in test generation
        try {
            strList29.replaceAll(strUnaryOperator32);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(strTokenizer28);
        org.junit.Assert.assertNotNull(strList29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
    }

    @Test
    public void test01805() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01805");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder18.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder24.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder26.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.appendln(10L);
        int int32 = strBuilder26.indexOf("#4#a4#", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder26.insert(1, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder23.appendln(strBuilder35);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder23.deleteAll("java.io.IOException: ");
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder23.insert(0, ' ');
        char[] charArray49 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = new org.apache.commons.lang3.text.StrTokenizer(charArray49, ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = new org.apache.commons.lang3.text.StrTokenizer(charArray49, strMatcher53);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder41.insert((int) '1', charArray49, 0, 15);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: Invalid length: 15");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(charArray49);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray49), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray49), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray49), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher53);
    }

    @Test
    public void test01806() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01806");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder3.append(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder3.deleteFirst('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder7.append((long) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int13 = strBuilder10.indexOf(strMatcher12);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder10.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder15.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder15.appendln((int) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder15.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int25 = strBuilder22.indexOf(strMatcher24);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder21.deleteFirst(strMatcher24);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder7.replaceAll(strMatcher24, "1false0\nfalse");
        int int30 = strBuilder7.indexOf("ptionfalse1001.0\n35.0\naaaajava.io.IOException: StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
    }

    @Test
    public void test01807() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01807");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        char[] charArray10 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = new org.apache.commons.lang3.text.StrTokenizer(charArray10, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = strTokenizer12.setDelimiterString("hi!");
        java.lang.String[] strArray15 = strTokenizer12.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder2.appendAll((java.lang.Object[]) strArray15);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder16.append("01StrTokenizer[not tokenized yet]\n", (int) (byte) 0, 0);
        org.apache.commons.lang3.text.StrMatcher strMatcher23 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder24.deleteFirst("hi!");
        java.lang.String str27 = strBuilder26.getNullText();
        char[] charArray29 = new char[] { 'a' };
        char[] charArray30 = strBuilder26.getChars(charArray29);
        int int32 = strMatcher23.isMatch(charArray30, 100);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder16.insert(0, charArray30, (int) '3', (int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: Invalid offset: 51");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer14);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strMatcher23);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(charArray29);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray29), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray29), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray29), "[a]");
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray30), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray30), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray30), "[a]");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
    }

    @Test
    public void test01808() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01808");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        boolean boolean4 = strBuilder3.isEmpty();
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder7.deleteFirst("hi!");
        java.lang.String str10 = strBuilder9.getNullText();
        char[] charArray12 = new char[] { 'a' };
        char[] charArray13 = strBuilder9.getChars(charArray12);
        int int15 = strMatcher6.isMatch(charArray13, 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.append(charArray13);
        char[] charArray23 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = new org.apache.commons.lang3.text.StrTokenizer(charArray23, ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = new org.apache.commons.lang3.text.StrTokenizer(charArray23, strMatcher27);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher31 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int32 = strBuilder29.indexOf(strMatcher31);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder29.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher37 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int38 = strBuilder35.indexOf(strMatcher37);
        int int39 = strBuilder29.indexOf(strMatcher37);
        char[] charArray46 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = new org.apache.commons.lang3.text.StrTokenizer(charArray46, ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher50 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = new org.apache.commons.lang3.text.StrTokenizer(charArray46, strMatcher50);
        org.apache.commons.lang3.text.StrMatcher strMatcher52 = strTokenizer51.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = new org.apache.commons.lang3.text.StrTokenizer(charArray23, strMatcher37, strMatcher52);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = new org.apache.commons.lang3.text.StrTokenizer(charArray13, strMatcher52);
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = new org.apache.commons.lang3.text.StrBuilder(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher59 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int60 = strBuilder57.indexOf(strMatcher59);
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder57.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder62.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder62.appendln((int) (short) 10);
        org.apache.commons.lang3.text.StrMatcher strMatcher67 = org.apache.commons.lang3.text.StrMatcher.spaceMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder62.replace(strMatcher67, "StrTokenizer[#4#a4#]", (int) (short) 1, 1, (int) (byte) 10);
        int int74 = strBuilder56.lastIndexOf(strMatcher67, (int) (short) 100);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer75 = strTokenizer54.setTrimmerMatcher(strMatcher67);
        int int76 = strTokenizer54.size();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[a]");
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[a]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertNotNull(strMatcher31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strMatcher37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertNotNull(charArray46);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray46), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray46), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray46), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher50);
        org.junit.Assert.assertNotNull(strMatcher52);
        org.junit.Assert.assertNotNull(strMatcher59);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-1) + "'", int60 == (-1));
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strMatcher67);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + (-1) + "'", int74 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer75);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 1 + "'", int76 == 1);
    }

    @Test
    public void test01809() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01809");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder1.deleteFirst('1');
        boolean boolean5 = strBuilder1.contains('4');
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
    }

    @Test
    public void test01810() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01810");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.append(false);
        char[] charArray16 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer(charArray16, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = strTokenizer18.setDelimiterString("hi!");
        boolean boolean21 = strTokenizer18.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder5.appendFixedWidthPadRight((java.lang.Object) strTokenizer18, 10, ' ');
        int int25 = strTokenizer18.previousIndex();
        boolean boolean26 = strTokenizer18.hasNext();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = strTokenizer18.reset("#4#a4#");
        java.util.List<java.lang.String> strList29 = strTokenizer18.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder31.deleteFirst("hi!");
        java.lang.String str34 = strBuilder33.getNullText();
        char[] charArray36 = new char[] { 'a' };
        char[] charArray37 = strBuilder33.getChars(charArray36);
        char[] charArray42 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray43 = strBuilder33.getChars(charArray42);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder44.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder46.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder46.insert(0, (double) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder50.appendFixedWidthPadRight((java.lang.Object) 100.0d, 1, '4');
        org.apache.commons.lang3.text.StrMatcher strMatcher55 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        int int57 = strBuilder54.lastIndexOf(strMatcher55, (int) (short) 10);
        boolean boolean58 = strBuilder33.contains(strMatcher55);
        char[] charArray65 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer67 = new org.apache.commons.lang3.text.StrTokenizer(charArray65, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer69 = strTokenizer67.setDelimiterString("hi!");
        java.lang.String str70 = strTokenizer69.nextToken();
        java.util.List<java.lang.String> strList71 = strTokenizer69.getTokenList();
        org.apache.commons.lang3.text.StrMatcher strMatcher72 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer73 = strTokenizer69.setTrimmerMatcher(strMatcher72);
        char[] charArray80 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer82 = new org.apache.commons.lang3.text.StrTokenizer(charArray80, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer83 = new org.apache.commons.lang3.text.StrTokenizer(charArray80);
        int int85 = strMatcher72.isMatch(charArray80, 0);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer86 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher55, strMatcher72);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer87 = strTokenizer18.setQuoteMatcher(strMatcher55);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer89 = strTokenizer18.setQuoteChar('a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer91 = strTokenizer89.reset("#4#a4#java.io.IOException: zinekoTrtSeslaf \n");
        boolean boolean92 = strTokenizer91.hasNext();
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(strTokenizer28);
        org.junit.Assert.assertNotNull(strList29);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNotNull(charArray36);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray36), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray36), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray36), "[a]");
        org.junit.Assert.assertNotNull(charArray37);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray37), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray37), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray37), "[a]");
        org.junit.Assert.assertNotNull(charArray42);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray42), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray42), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray42), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray43);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray43), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray43), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray43), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strMatcher55);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(charArray65);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray65), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray65), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray65), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer69);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "#4#a4#" + "'", str70, "#4#a4#");
        org.junit.Assert.assertNotNull(strList71);
        org.junit.Assert.assertNotNull(strMatcher72);
        org.junit.Assert.assertNotNull(strTokenizer73);
        org.junit.Assert.assertNotNull(charArray80);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray80), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray80), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray80), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 0 + "'", int85 == 0);
        org.junit.Assert.assertNotNull(strTokenizer87);
        org.junit.Assert.assertNotNull(strTokenizer89);
        org.junit.Assert.assertNotNull(strTokenizer91);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
    }

    @Test
    public void test01811() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01811");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer(" \n", 'I', '4');
        java.lang.String str4 = strTokenizer3.toString();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str4, "StrTokenizer[not tokenized yet]");
    }

    @Test
    public void test01812() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01812");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.appendln(10L);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteFirst("");
        char[] charArray8 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder7.appendln(charArray8);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int13 = strBuilder10.indexOf(strMatcher12);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder10.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder15.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder15.appendln((int) (short) 10);
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = org.apache.commons.lang3.text.StrMatcher.spaceMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder15.replace(strMatcher20, "StrTokenizer[#4#a4#]", (int) (short) 1, 1, (int) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder7.replaceFirst(strMatcher20, "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int31 = strBuilder28.indexOf(strMatcher30);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder28.append("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder33.deleteAll(' ');
        boolean boolean36 = strBuilder27.equals((java.lang.Object) strBuilder35);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder27.deleteAll("100.0false\n");
        java.lang.String str41 = strBuilder27.midString(39, 18);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strMatcher20);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "" + "'", str41, "");
    }

    @Test
    public void test01813() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01813");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.appendln(10L);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder2.appendFixedWidthPadLeft(0, 0, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder2.appendln('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.appendSeparator('\000', 24);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder17.deleteFirst("hi!");
        java.lang.String str20 = strBuilder19.getNullText();
        char[] charArray22 = new char[] { 'a' };
        char[] charArray23 = strBuilder19.getChars(charArray22);
        char[] charArray28 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray29 = strBuilder19.getChars(charArray28);
        java.io.Reader reader30 = strBuilder19.asReader();
        reader30.mark((int) (byte) 0);
        char[] charArray39 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = new org.apache.commons.lang3.text.StrTokenizer(charArray39, ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = new org.apache.commons.lang3.text.StrTokenizer(charArray39, strMatcher43);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher47 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int48 = strBuilder45.indexOf(strMatcher47);
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder45.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int54 = strBuilder51.indexOf(strMatcher53);
        int int55 = strBuilder45.indexOf(strMatcher53);
        char[] charArray62 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = new org.apache.commons.lang3.text.StrTokenizer(charArray62, ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher66 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer67 = new org.apache.commons.lang3.text.StrTokenizer(charArray62, strMatcher66);
        org.apache.commons.lang3.text.StrMatcher strMatcher68 = strTokenizer67.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer69 = new org.apache.commons.lang3.text.StrTokenizer(charArray39, strMatcher53, strMatcher68);
        int int70 = reader30.read(charArray39);
        long long72 = reader30.skip(0L);
        char[] charArray79 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer81 = new org.apache.commons.lang3.text.StrTokenizer(charArray79, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer82 = new org.apache.commons.lang3.text.StrTokenizer(charArray79);
        int int83 = reader30.read(charArray79);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer86 = new org.apache.commons.lang3.text.StrTokenizer(charArray79, '4', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer87 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray79);
        // The following exception was thrown during execution in test generation
        try {
            strBuilder11.getChars((int) (short) 100, 70, charArray79, (int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 70");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray22), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray22), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray22), "[a]");
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[a]");
        org.junit.Assert.assertNotNull(charArray28);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray28), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray28), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray28), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray29);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray29), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray29), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray29), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(reader30);
        org.junit.Assert.assertNotNull(charArray39);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray39), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray39), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray39), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher43);
        org.junit.Assert.assertNotNull(strMatcher47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strMatcher53);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1));
        org.junit.Assert.assertNotNull(charArray62);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray62), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray62), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray62), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher66);
        org.junit.Assert.assertNotNull(strMatcher68);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + (-1) + "'", int70 == (-1));
        org.junit.Assert.assertTrue("'" + long72 + "' != '" + 0L + "'", long72 == 0L);
        org.junit.Assert.assertNotNull(charArray79);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray79), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray79), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray79), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + (-1) + "'", int83 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer87);
    }

    @Test
    public void test01814() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01814");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.String str1 = strBuilder0.getNullText();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder2.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher5 = org.apache.commons.lang3.text.StrMatcher.splitMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder2.deleteAll(strMatcher5);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder0.appendln((java.lang.Object) strBuilder2);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int11 = strBuilder8.indexOf(strMatcher10);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder8.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder13.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder15.deleteFirst('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder15.append('4');
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = org.apache.commons.lang3.text.StrMatcher.quoteMatcher();
        int int22 = strBuilder19.lastIndexOf(strMatcher20, (int) (short) -1);
        int int23 = strBuilder2.lastIndexOf(strMatcher20);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder2.appendSeparator('I', 'a');
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.insert(6, '.');
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 6");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strMatcher5);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strMatcher20);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNotNull(strBuilder26);
    }

    @Test
    public void test01815() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01815");
        char[] charArray0 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer(charArray0, '4', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer3.setIgnoreEmptyTokens(true);
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer3.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: remove() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strTokenizer5);
    }

    @Test
    public void test01816() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01816");
        java.lang.String[] strArray3 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList4 = new java.util.ArrayList<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        char[] charArray12 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strTokenizer14.setDelimiterString("hi!");
        boolean boolean17 = strTokenizer14.isIgnoreEmptyTokens();
        java.lang.String str18 = strTokenizer14.next();
        int int19 = strList4.indexOf((java.lang.Object) strTokenizer14);
        char[] charArray26 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = new org.apache.commons.lang3.text.StrTokenizer(charArray26, ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer(charArray26, strMatcher30);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int35 = strBuilder32.indexOf(strMatcher34);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder32.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int41 = strBuilder38.indexOf(strMatcher40);
        int int42 = strBuilder32.indexOf(strMatcher40);
        char[] charArray49 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = new org.apache.commons.lang3.text.StrTokenizer(charArray49, ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = new org.apache.commons.lang3.text.StrTokenizer(charArray49, strMatcher53);
        org.apache.commons.lang3.text.StrMatcher strMatcher55 = strTokenizer54.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = new org.apache.commons.lang3.text.StrTokenizer(charArray26, strMatcher40, strMatcher55);
        boolean boolean57 = strList4.equals((java.lang.Object) strMatcher55);
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher60 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int61 = strBuilder58.indexOf(strMatcher60);
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder58.append(' ');
        java.util.stream.IntStream intStream64 = strBuilder63.codePoints();
        org.apache.commons.lang3.text.StrMatcher strMatcher66 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("");
        int int67 = strBuilder63.lastIndexOf(strMatcher66);
        boolean boolean68 = strList4.remove((java.lang.Object) strMatcher66);
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder69.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder71.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder71.appendln(10L);
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder71.setNewLineText("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder71.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder78.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder71.appendln(strBuilder78);
        boolean boolean82 = strList4.remove((java.lang.Object) strBuilder78);
        java.util.function.UnaryOperator<java.lang.String> strUnaryOperator83 = null;
        // The following exception was thrown during execution in test generation
        try {
            strList4.replaceAll(strUnaryOperator83);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "#4#a4#" + "'", str18, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(charArray26);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray26), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray26), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray26), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertNotNull(strMatcher34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strMatcher40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertNotNull(charArray49);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray49), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray49), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray49), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher53);
        org.junit.Assert.assertNotNull(strMatcher55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(strMatcher60);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + (-1) + "'", int61 == (-1));
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(intStream64);
        org.junit.Assert.assertNotNull(strMatcher66);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + (-1) + "'", int67 == (-1));
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertNotNull(strBuilder81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
    }

    @Test
    public void test01817() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01817");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        java.lang.String str3 = strBuilder2.getNullText();
        char[] charArray5 = new char[] { 'a' };
        char[] charArray6 = strBuilder2.getChars(charArray5);
        char[] charArray11 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray12 = strBuilder2.getChars(charArray11);
        java.io.Reader reader13 = strBuilder2.asReader();
        reader13.mark(10);
        reader13.close();
        boolean boolean17 = reader13.markSupported();
        int int18 = reader13.read();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder19.deleteFirst("hi!");
        java.lang.String str22 = strBuilder21.getNullText();
        char[] charArray24 = new char[] { 'a' };
        char[] charArray25 = strBuilder21.getChars(charArray24);
        char[] charArray30 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray31 = strBuilder21.getChars(charArray30);
        java.io.Reader reader32 = strBuilder21.asReader();
        long long34 = reader32.skip((long) 59);
        char[] charArray41 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = new org.apache.commons.lang3.text.StrTokenizer(charArray41, ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher45 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = new org.apache.commons.lang3.text.StrTokenizer(charArray41, strMatcher45);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher49 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int50 = strBuilder47.indexOf(strMatcher49);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder47.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher55 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int56 = strBuilder53.indexOf(strMatcher55);
        int int57 = strBuilder47.indexOf(strMatcher55);
        char[] charArray64 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer66 = new org.apache.commons.lang3.text.StrTokenizer(charArray64, ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher68 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer69 = new org.apache.commons.lang3.text.StrTokenizer(charArray64, strMatcher68);
        org.apache.commons.lang3.text.StrMatcher strMatcher70 = strTokenizer69.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer71 = new org.apache.commons.lang3.text.StrTokenizer(charArray41, strMatcher55, strMatcher70);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer72 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray41);
        int int73 = reader32.read(charArray41);
        int int74 = reader13.read(charArray41);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer75 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray41);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer78 = new org.apache.commons.lang3.text.StrTokenizer(charArray41, '#', '0');
        org.apache.commons.lang3.text.StrMatcher strMatcher79 = strTokenizer78.getTrimmerMatcher();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[a]");
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(reader13);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[a]");
        org.junit.Assert.assertNotNull(charArray25);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray25), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray25), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray25), "[a]");
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray30), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray30), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray30), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray31), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray31), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray31), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(reader32);
        org.junit.Assert.assertTrue("'" + long34 + "' != '" + 0L + "'", long34 == 0L);
        org.junit.Assert.assertNotNull(charArray41);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray41), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray41), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray41), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher45);
        org.junit.Assert.assertNotNull(strMatcher49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strMatcher55);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1));
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
        org.junit.Assert.assertNotNull(charArray64);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray64), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray64), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray64), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher68);
        org.junit.Assert.assertNotNull(strMatcher70);
        org.junit.Assert.assertNotNull(strTokenizer72);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + (-1) + "'", int73 == (-1));
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + (-1) + "'", int74 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer75);
        org.junit.Assert.assertNotNull(strMatcher79);
    }

    @Test
    public void test01818() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01818");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder5.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder7.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder9.appendNull();
        java.lang.String str13 = strBuilder10.substring((int) (short) 0, (int) (short) 100);
        int int16 = strBuilder10.lastIndexOf("1false0\n", 59);
        char[] charArray23 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = new org.apache.commons.lang3.text.StrTokenizer(charArray23, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = strTokenizer25.setDelimiterString("hi!");
        boolean boolean28 = strTokenizer25.isIgnoreEmptyTokens();
        int int29 = strTokenizer25.nextIndex();
        int int30 = strTokenizer25.nextIndex();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = strTokenizer25.setIgnoreEmptyTokens(false);
        int int33 = strTokenizer25.previousIndex();
        java.lang.String str34 = strTokenizer25.getContent();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = strTokenizer25.reset();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder36.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder38.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder38.insert(0, (double) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder42.replaceAll("StrTokenizer[not tokenized yet]", "StrTokenizer[#4#a4#]");
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = new org.apache.commons.lang3.text.StrBuilder(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher50 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int51 = strBuilder48.indexOf(strMatcher50);
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder48.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder53.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder53.appendln((int) (short) 10);
        org.apache.commons.lang3.text.StrMatcher strMatcher58 = org.apache.commons.lang3.text.StrMatcher.spaceMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder53.replace(strMatcher58, "StrTokenizer[#4#a4#]", (int) (short) 1, 1, (int) (byte) 10);
        int int65 = strBuilder47.lastIndexOf(strMatcher58, (int) (short) 100);
        int int67 = strBuilder42.lastIndexOf(strMatcher58, 6);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer68 = strTokenizer35.setDelimiterMatcher(strMatcher58);
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder10.deleteFirst(strMatcher58);
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder10.append((int) (short) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder6.appendln(strBuilder10);
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder72.appendln((long) (short) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder72.deleteFirst('a');
        // The following exception was thrown during execution in test generation
        try {
            char[] charArray79 = strBuilder76.toCharArray(55, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: end < start");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(strTokenizer32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "#4#a4#" + "'", str34, "#4#a4#");
        org.junit.Assert.assertNotNull(strTokenizer35);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strMatcher50);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1));
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strMatcher58);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + (-1) + "'", int65 == (-1));
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + (-1) + "'", int67 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer68);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(strBuilder76);
    }

    @Test
    public void test01819() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01819");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder3.append(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder3.replaceFirst(' ', ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder8.deleteAll('4');
        int int12 = strBuilder10.indexOf('\000');
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence15 = strBuilder10.subSequence(6, (int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 10");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
    }

    @Test
    public void test01820() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01820");
        java.lang.String[] strArray3 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList4 = new java.util.ArrayList<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        char[] charArray12 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strTokenizer14.setDelimiterString("hi!");
        boolean boolean17 = strTokenizer14.isIgnoreEmptyTokens();
        java.lang.String str18 = strTokenizer14.next();
        int int19 = strList4.indexOf((java.lang.Object) strTokenizer14);
        java.util.ListIterator<java.lang.String> strItor21 = strList4.listIterator((int) (byte) 0);
        java.util.Iterator<java.lang.String> strItor22 = strList4.iterator();
        char[] charArray29 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer(charArray29, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = strTokenizer31.setDelimiterString("hi!");
        boolean boolean34 = strTokenizer31.isIgnoreEmptyTokens();
        java.lang.String str35 = strTokenizer31.next();
        boolean boolean36 = strList4.equals((java.lang.Object) strTokenizer31);
        boolean boolean37 = strList4.isEmpty();
        java.util.function.UnaryOperator<java.lang.String> strUnaryOperator38 = null;
        // The following exception was thrown during execution in test generation
        try {
            strList4.replaceAll(strUnaryOperator38);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "#4#a4#" + "'", str18, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(strItor21);
        org.junit.Assert.assertNotNull(strItor22);
        org.junit.Assert.assertNotNull(charArray29);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray29), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray29), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray29), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "#4#a4#" + "'", str35, "#4#a4#");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
    }

    @Test
    public void test01821() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01821");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder18.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder18.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder18.replaceFirst('#', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder27.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder27.appendSeparator('4', '0');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = new org.apache.commons.lang3.text.StrTokenizer("0\nfalse32.0");
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder27.insert(59, (java.lang.Object) "0\nfalse32.0");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 59");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder31);
    }

    @Test
    public void test01822() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01822");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder18.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder24.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder26.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.appendln(10L);
        int int32 = strBuilder26.indexOf("#4#a4#", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder26.insert(1, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder23.appendln(strBuilder35);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder36.appendSeparator('#', ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int43 = strBuilder40.indexOf(strMatcher42);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder40.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder45.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder45.appendln((int) (short) 10);
        char[] charArray56 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = new org.apache.commons.lang3.text.StrTokenizer(charArray56, ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher60 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer61 = new org.apache.commons.lang3.text.StrTokenizer(charArray56, strMatcher60);
        org.apache.commons.lang3.text.StrMatcher strMatcher62 = strTokenizer61.getIgnoredMatcher();
        int int64 = strBuilder45.indexOf(strMatcher62, (int) (byte) 1);
        boolean boolean65 = strBuilder39.contains(strMatcher62);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder39.insert(66, 34);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 66");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strMatcher42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(charArray56);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray56), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray56), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray56), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher60);
        org.junit.Assert.assertNotNull(strMatcher62);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + (-1) + "'", int64 == (-1));
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
    }

    @Test
    public void test01823() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01823");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        char[] charArray10 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = new org.apache.commons.lang3.text.StrTokenizer(charArray10, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder0.appendAll((java.util.Iterator<java.lang.String>) strTokenizer12);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.deleteFirst("hi!");
        java.lang.String str17 = strBuilder16.getNullText();
        char[] charArray19 = new char[] { 'a' };
        char[] charArray20 = strBuilder16.getChars(charArray19);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher23 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int24 = strBuilder21.indexOf(strMatcher23);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder21.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder26.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder26.appendln((int) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder26.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int36 = strBuilder33.indexOf(strMatcher35);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder32.deleteFirst(strMatcher35);
        int int38 = strBuilder16.indexOf(strMatcher35);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder0.deleteFirst(strMatcher35);
        boolean boolean41 = strBuilder0.contains("true\n");
        java.lang.String str44 = strBuilder0.substring(0, (int) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder45.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder47.clear();
        int int49 = strBuilder47.capacity();
        java.lang.StringBuffer stringBuffer50 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder47.appendln(stringBuffer50, (int) (byte) 1, (int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder47.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder47.appendSeparator('a', ' ');
        java.lang.StringBuffer stringBuffer59 = strBuilder47.toStringBuffer();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder0.append(strBuilder47, 46, (int) 'e');
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: startIndex must be valid");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[a]");
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray20), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray20), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray20), "[a]");
        org.junit.Assert.assertNotNull(strMatcher23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "#4#a4#" + "'", str44, "#4#a4#");
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 32 + "'", int49 == 32);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(stringBuffer59);
        org.junit.Assert.assertEquals(stringBuffer59.toString(), "\na");
    }

    @Test
    public void test01824() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01824");
        char[] charArray6 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer8.setDelimiterString("hi!");
        java.lang.String str11 = strTokenizer10.nextToken();
        java.util.List<java.lang.String> strList12 = strTokenizer10.getTokenList();
        boolean boolean14 = strList12.add("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("");
        java.lang.String str17 = strTokenizer16.getContent();
        boolean boolean18 = strList12.equals((java.lang.Object) strTokenizer16);
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = org.apache.commons.lang3.text.StrMatcher.singleQuoteMatcher();
        boolean boolean20 = strList12.equals((java.lang.Object) strMatcher19);
        java.util.stream.Stream<java.lang.String> strStream21 = strList12.parallelStream();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder24.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder24.insert(0, (double) (byte) 100);
        java.io.Reader reader29 = strBuilder28.asReader();
        boolean boolean30 = strList12.remove((java.lang.Object) reader29);
        char[] charArray37 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = new org.apache.commons.lang3.text.StrTokenizer(charArray37, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = strTokenizer39.setDelimiterString("hi!");
        int int42 = strTokenizer39.previousIndex();
        boolean boolean43 = strList12.contains((java.lang.Object) int42);
        int int44 = strList12.size();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str46 = strList12.get((int) '0');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 48, Size: 2");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "#4#a4#" + "'", str11, "#4#a4#");
        org.junit.Assert.assertNotNull(strList12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(strStream21);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(reader29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(charArray37);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray37), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray37), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray37), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 2 + "'", int44 == 2);
    }

    @Test
    public void test01825() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01825");
        char[] charArray6 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = new org.apache.commons.lang3.text.StrTokenizer(charArray6);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = strTokenizer9.setDelimiterChar('a');
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = strTokenizer11.getTrimmerMatcher();
        int int13 = strTokenizer11.size();
        java.lang.String str14 = strTokenizer11.next();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strTokenizer11.setIgnoreEmptyTokens(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder17.deleteFirst("hi!");
        java.lang.String str20 = strBuilder19.getNullText();
        char[] charArray22 = new char[] { 'a' };
        char[] charArray23 = strBuilder19.getChars(charArray22);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder19.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder25.deleteFirst(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder25.appendln(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder25.setNewLineText("0\nfalse32.0");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder33.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder35.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder36.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder37.appendln((long) '#');
        java.util.stream.IntStream intStream40 = strBuilder37.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder37.appendSeparator("10\n\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder43.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder45.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder45.insert(0, (double) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder49.appendFixedWidthPadRight((java.lang.Object) 100.0d, 1, '4');
        org.apache.commons.lang3.text.StrMatcher strMatcher54 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        int int56 = strBuilder53.lastIndexOf(strMatcher54, (int) (short) 10);
        int int58 = strBuilder37.indexOf(strMatcher54, 4);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer59 = strTokenizer32.setTrimmerMatcher(strMatcher54);
        boolean boolean60 = strBuilder25.equals((java.lang.Object) strMatcher54);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer61 = strTokenizer16.setIgnoredMatcher(strMatcher54);
        org.apache.commons.lang3.text.StrMatcher strMatcher62 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer63 = strTokenizer61.setQuoteMatcher(strMatcher62);
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer63.add("##########################110\n\ni###############################################################################################");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: add() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer11);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2 + "'", int13 == 2);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "#4#" + "'", str14, "#4#");
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray22), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray22), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray22), "[a]");
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[a]");
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strTokenizer32);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(intStream40);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strMatcher54);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1));
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 5 + "'", int58 == 5);
        org.junit.Assert.assertNotNull(strTokenizer59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(strTokenizer61);
        org.junit.Assert.assertNotNull(strTokenizer63);
    }

    @Test
    public void test01826() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01826");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder3.append(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder3.deleteFirst('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder7.append((long) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder7.appendSeparator("1.0java.", "eslaf");
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder12);
    }

    @Test
    public void test01827() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01827");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("4444444444444444444444444444\n#####################################################################################zinekoTrtSeslaf ");
    }

    @Test
    public void test01828() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01828");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder3.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder4.appendln((long) '#');
        java.util.stream.IntStream intStream7 = strBuilder4.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder4.appendSeparator("10\n\n");
        java.lang.String[] strArray13 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList14 = new java.util.ArrayList<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList14, strArray13);
        char[] charArray22 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = new org.apache.commons.lang3.text.StrTokenizer(charArray22, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = strTokenizer24.setDelimiterString("hi!");
        boolean boolean27 = strTokenizer24.isIgnoreEmptyTokens();
        java.lang.String str28 = strTokenizer24.next();
        int int29 = strList14.indexOf((java.lang.Object) strTokenizer24);
        java.util.ListIterator<java.lang.String> strItor31 = strList14.listIterator((int) (byte) 0);
        java.lang.String[] strArray35 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList36 = new java.util.ArrayList<java.lang.String>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList36, strArray35);
        char[] charArray44 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = new org.apache.commons.lang3.text.StrTokenizer(charArray44, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = strTokenizer46.setDelimiterString("hi!");
        boolean boolean49 = strTokenizer46.isIgnoreEmptyTokens();
        java.lang.String str50 = strTokenizer46.next();
        int int51 = strList36.indexOf((java.lang.Object) strTokenizer46);
        java.util.ListIterator<java.lang.String> strItor53 = strList36.listIterator((int) (byte) 0);
        java.util.Iterator<java.lang.String> strItor54 = strList36.iterator();
        boolean boolean55 = strList14.removeAll((java.util.Collection<java.lang.String>) strList36);
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder9.appendWithSeparators((java.lang.Iterable<java.lang.String>) strList14, "10\n\n");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str59 = strBuilder9.substring((int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: end < start");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(intStream7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray22), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray22), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray22), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "#4#a4#" + "'", str28, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertNotNull(strItor31);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(charArray44);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray44), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray44), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray44), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "#4#a4#" + "'", str50, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1));
        org.junit.Assert.assertNotNull(strItor53);
        org.junit.Assert.assertNotNull(strItor54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(strBuilder57);
    }

    @Test
    public void test01829() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01829");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("#4#a4#", '1');
        int int3 = strTokenizer2.previousIndex();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
    }

    @Test
    public void test01830() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01830");
        char[] charArray6 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer8.setDelimiterString("hi!");
        java.lang.String str11 = strTokenizer10.nextToken();
        java.util.List<java.lang.String> strList12 = strTokenizer10.getTokenList();
        boolean boolean14 = strList12.add("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder15.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder17.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder18.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder19.appendln((long) '#');
        java.util.stream.IntStream intStream22 = strBuilder19.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder19.appendSeparator("10\n\n");
        java.lang.String[] strArray28 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList29 = new java.util.ArrayList<java.lang.String>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList29, strArray28);
        char[] charArray37 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = new org.apache.commons.lang3.text.StrTokenizer(charArray37, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = strTokenizer39.setDelimiterString("hi!");
        boolean boolean42 = strTokenizer39.isIgnoreEmptyTokens();
        java.lang.String str43 = strTokenizer39.next();
        int int44 = strList29.indexOf((java.lang.Object) strTokenizer39);
        java.util.ListIterator<java.lang.String> strItor46 = strList29.listIterator((int) (byte) 0);
        java.lang.String[] strArray50 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList51 = new java.util.ArrayList<java.lang.String>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList51, strArray50);
        char[] charArray59 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer61 = new org.apache.commons.lang3.text.StrTokenizer(charArray59, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer63 = strTokenizer61.setDelimiterString("hi!");
        boolean boolean64 = strTokenizer61.isIgnoreEmptyTokens();
        java.lang.String str65 = strTokenizer61.next();
        int int66 = strList51.indexOf((java.lang.Object) strTokenizer61);
        java.util.ListIterator<java.lang.String> strItor68 = strList51.listIterator((int) (byte) 0);
        java.util.Iterator<java.lang.String> strItor69 = strList51.iterator();
        boolean boolean70 = strList29.removeAll((java.util.Collection<java.lang.String>) strList51);
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder24.appendWithSeparators((java.lang.Iterable<java.lang.String>) strList29, "10\n\n");
        boolean boolean73 = strList12.retainAll((java.util.Collection<java.lang.String>) strList29);
        java.util.Iterator<java.lang.String> strItor74 = strList29.iterator();
        java.lang.Object[] objArray75 = strList29.toArray();
        boolean boolean76 = strList29.isEmpty();
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.lang.String> strList79 = strList29.subList((int) 'I', (int) '3');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: toIndex = 51");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "#4#a4#" + "'", str11, "#4#a4#");
        org.junit.Assert.assertNotNull(strList12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(intStream22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(charArray37);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray37), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray37), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray37), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "#4#a4#" + "'", str43, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertNotNull(strItor46);
        org.junit.Assert.assertNotNull(strArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(charArray59);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray59), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray59), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray59), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "#4#a4#" + "'", str65, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + (-1) + "'", int66 == (-1));
        org.junit.Assert.assertNotNull(strItor68);
        org.junit.Assert.assertNotNull(strItor69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(strItor74);
        org.junit.Assert.assertNotNull(objArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray75), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray75), "[]");
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
    }

    @Test
    public void test01831() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01831");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        java.lang.String str4 = strBuilder2.leftString(32);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteFirst("hi!");
        java.lang.String str8 = strBuilder7.getNullText();
        char[] charArray10 = new char[] { 'a' };
        char[] charArray11 = strBuilder7.getChars(charArray10);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder2.append((java.lang.Object) strBuilder7);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder2.append(100L);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder2.insert(1, "#4#a4#");
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder17.insert(12, (double) (-1.0f));
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 12");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[a]");
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder17);
    }

    @Test
    public void test01832() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01832");
        java.lang.String[] strArray3 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList4 = new java.util.ArrayList<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        char[] charArray12 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strTokenizer14.setDelimiterString("hi!");
        boolean boolean17 = strTokenizer14.isIgnoreEmptyTokens();
        java.lang.String str18 = strTokenizer14.next();
        int int19 = strList4.indexOf((java.lang.Object) strTokenizer14);
        java.util.ListIterator<java.lang.String> strItor21 = strList4.listIterator((int) (byte) 0);
        java.util.Iterator<java.lang.String> strItor22 = strList4.iterator();
        java.lang.String[] strArray26 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList27 = new java.util.ArrayList<java.lang.String>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList27, strArray26);
        char[] charArray35 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = new org.apache.commons.lang3.text.StrTokenizer(charArray35, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = strTokenizer37.setDelimiterString("hi!");
        boolean boolean40 = strTokenizer37.isIgnoreEmptyTokens();
        java.lang.String str41 = strTokenizer37.next();
        int int42 = strList27.indexOf((java.lang.Object) strTokenizer37);
        boolean boolean43 = strList4.addAll((java.util.Collection<java.lang.String>) strList27);
        java.util.ListIterator<java.lang.String> strItor44 = strList27.listIterator();
        char[] charArray51 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = new org.apache.commons.lang3.text.StrTokenizer(charArray51, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = strTokenizer53.setDelimiterString("hi!");
        java.lang.String str56 = strTokenizer55.nextToken();
        java.util.List<java.lang.String> strList57 = strTokenizer55.getTokenList();
        boolean boolean59 = strList57.add("hi!");
        boolean boolean60 = strList27.retainAll((java.util.Collection<java.lang.String>) strList57);
        char[] charArray67 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer69 = new org.apache.commons.lang3.text.StrTokenizer(charArray67, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer71 = strTokenizer69.setDelimiterString("hi!");
        java.lang.String str72 = strTokenizer71.nextToken();
        java.util.List<java.lang.String> strList73 = strTokenizer71.getTokenList();
        boolean boolean75 = strList73.add("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer77 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("");
        java.lang.String str78 = strTokenizer77.getContent();
        boolean boolean79 = strList73.equals((java.lang.Object) strTokenizer77);
        java.lang.String str81 = strList73.remove((int) (byte) 0);
        boolean boolean82 = strList57.addAll((java.util.Collection<java.lang.String>) strList73);
        boolean boolean83 = strList73.isEmpty();
        strList73.add(0, "StrTokenizer[#4#a4#]");
        // The following exception was thrown during execution in test generation
        try {
            strList73.add(66, "#4#a4#");
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 66, Size: 2");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "#4#a4#" + "'", str18, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(strItor21);
        org.junit.Assert.assertNotNull(strItor22);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "#4#a4#" + "'", str41, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(strItor44);
        org.junit.Assert.assertNotNull(charArray51);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray51), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray51), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray51), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer55);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "#4#a4#" + "'", str56, "#4#a4#");
        org.junit.Assert.assertNotNull(strList57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(charArray67);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray67), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray67), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray67), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer71);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "#4#a4#" + "'", str72, "#4#a4#");
        org.junit.Assert.assertNotNull(strList73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(strTokenizer77);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "" + "'", str78, "");
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "#4#a4#" + "'", str81, "#4#a4#");
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
    }

    @Test
    public void test01833() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01833");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder17.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder19.clear();
        java.lang.String str22 = strBuilder20.rightString((int) (short) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder3.append((java.lang.CharSequence) str22);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.append((long) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder25.ensureCapacity((int) (short) -1);
        java.lang.String str29 = strBuilder25.rightString((-1));
        int int30 = strBuilder25.size();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, "");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 31 + "'", int30 == 31);
    }

    @Test
    public void test01834() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01834");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.appendln((int) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder5.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder12.deleteFirst("hi!");
        java.lang.String str15 = strBuilder14.getNullText();
        char[] charArray17 = new char[] { 'a' };
        char[] charArray18 = strBuilder14.getChars(charArray17);
        char[] charArray23 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray24 = strBuilder14.getChars(charArray23);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = new org.apache.commons.lang3.text.StrTokenizer(charArray23, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder5.appendln(charArray23, 0, 0);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer(charArray23, "0\nzinekoTrtSeslaf ");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray23);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int36 = strBuilder33.indexOf(strMatcher35);
        char[] charArray43 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = new org.apache.commons.lang3.text.StrTokenizer(charArray43, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder33.appendAll((java.util.Iterator<java.lang.String>) strTokenizer45);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder47.deleteFirst("hi!");
        java.lang.String str50 = strBuilder49.getNullText();
        char[] charArray52 = new char[] { 'a' };
        char[] charArray53 = strBuilder49.getChars(charArray52);
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher56 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int57 = strBuilder54.indexOf(strMatcher56);
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder54.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder59.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder59.appendln((int) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder59.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher68 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int69 = strBuilder66.indexOf(strMatcher68);
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder65.deleteFirst(strMatcher68);
        int int71 = strBuilder49.indexOf(strMatcher68);
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder33.deleteFirst(strMatcher68);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer73 = strTokenizer32.setDelimiterMatcher(strMatcher68);
        org.apache.commons.lang3.text.StrMatcher strMatcher74 = strTokenizer32.getDelimiterMatcher();
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray17), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray17), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray17), "[a]");
        org.junit.Assert.assertNotNull(charArray18);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray18), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray18), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray18), "[a]");
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strTokenizer32);
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNotNull(charArray43);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray43), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray43), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray43), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertNotNull(charArray52);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray52), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray52), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray52), "[a]");
        org.junit.Assert.assertNotNull(charArray53);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray53), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray53), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray53), "[a]");
        org.junit.Assert.assertNotNull(strMatcher56);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strMatcher68);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + (-1) + "'", int69 == (-1));
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + (-1) + "'", int71 == (-1));
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strTokenizer73);
        org.junit.Assert.assertNotNull(strMatcher74);
    }

    @Test
    public void test01835() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01835");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder7.deleteFirst('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int13 = strBuilder10.indexOf(strMatcher12);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder10.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder15.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder17.deleteFirst('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder9.appendln(strBuilder17);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder17.deleteFirst("a");
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.append((float) 21);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder24.append("001eslafnoitpecxEOI.oi.avaj0.11111111111111111111111", (int) (short) 100, 39);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: startIndex must be valid");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder24);
    }

    @Test
    public void test01836() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01836");
        java.lang.String[] strArray3 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList4 = new java.util.ArrayList<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        char[] charArray12 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strTokenizer14.setDelimiterString("hi!");
        boolean boolean17 = strTokenizer14.isIgnoreEmptyTokens();
        java.lang.String str18 = strTokenizer14.next();
        int int19 = strList4.indexOf((java.lang.Object) strTokenizer14);
        java.util.ListIterator<java.lang.String> strItor21 = strList4.listIterator((int) (byte) 0);
        java.lang.String[] strArray25 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList26 = new java.util.ArrayList<java.lang.String>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList26, strArray25);
        char[] charArray34 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = new org.apache.commons.lang3.text.StrTokenizer(charArray34, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = strTokenizer36.setDelimiterString("hi!");
        boolean boolean39 = strTokenizer36.isIgnoreEmptyTokens();
        java.lang.String str40 = strTokenizer36.next();
        int int41 = strList26.indexOf((java.lang.Object) strTokenizer36);
        java.util.ListIterator<java.lang.String> strItor43 = strList26.listIterator((int) (byte) 0);
        java.util.Iterator<java.lang.String> strItor44 = strList26.iterator();
        boolean boolean45 = strList4.removeAll((java.util.Collection<java.lang.String>) strList26);
        boolean boolean47 = strList26.add("java.io.IOException: StrTokenizer[#4#a4#]");
        java.lang.Object[] objArray48 = strList26.toArray();
        java.util.ListIterator<java.lang.String> strItor49 = strList26.listIterator();
        java.util.Collection<java.lang.String> strCollection50 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean51 = strList26.addAll(strCollection50);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "#4#a4#" + "'", str18, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(strItor21);
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(charArray34);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray34), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray34), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray34), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "#4#a4#" + "'", str40, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertNotNull(strItor43);
        org.junit.Assert.assertNotNull(strItor44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(objArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray48), "[, , , java.io.IOException: StrTokenizer[#4#a4#]]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray48), "[, , , java.io.IOException: StrTokenizer[#4#a4#]]");
        org.junit.Assert.assertNotNull(strItor49);
    }

    @Test
    public void test01837() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01837");
        char[] charArray6 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, strMatcher10);
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = strTokenizer11.getIgnoredMatcher();
        int int13 = strTokenizer11.nextIndex();
        boolean boolean14 = strTokenizer11.hasNext();
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
    }

    @Test
    public void test01838() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01838");
        java.lang.String[] strArray3 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList4 = new java.util.ArrayList<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        char[] charArray12 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strTokenizer14.setDelimiterString("hi!");
        boolean boolean17 = strTokenizer14.isIgnoreEmptyTokens();
        java.lang.String str18 = strTokenizer14.next();
        int int19 = strList4.indexOf((java.lang.Object) strTokenizer14);
        java.util.stream.Stream<java.lang.String> strStream20 = strList4.stream();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[#4#a4#]", "StrTokenizer[not tokenized yet]");
        boolean boolean24 = strTokenizer23.isEmptyTokenAsNull();
        java.util.List<java.lang.String> strList25 = strTokenizer23.getTokenList();
        int int26 = strList25.size();
        char[] charArray33 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = new org.apache.commons.lang3.text.StrTokenizer(charArray33, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = strTokenizer35.setDelimiterString("hi!");
        java.lang.String str38 = strTokenizer37.nextToken();
        java.util.List<java.lang.String> strList39 = strTokenizer37.getTokenList();
        boolean boolean41 = strList39.add("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("");
        java.lang.String str44 = strTokenizer43.getContent();
        boolean boolean45 = strList39.equals((java.lang.Object) strTokenizer43);
        org.apache.commons.lang3.text.StrMatcher strMatcher46 = org.apache.commons.lang3.text.StrMatcher.singleQuoteMatcher();
        boolean boolean47 = strList39.equals((java.lang.Object) strMatcher46);
        boolean boolean48 = strList25.addAll((java.util.Collection<java.lang.String>) strList39);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder49.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher54 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int55 = strBuilder52.indexOf(strMatcher54);
        char[] charArray62 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = new org.apache.commons.lang3.text.StrTokenizer(charArray62, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder52.appendAll((java.util.Iterator<java.lang.String>) strTokenizer64);
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder49.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer64, "");
        int int68 = strBuilder49.size();
        boolean boolean69 = strList39.remove((java.lang.Object) strBuilder49);
        java.util.stream.Stream<java.lang.String> strStream70 = strList39.parallelStream();
        boolean boolean71 = strList4.containsAll((java.util.Collection<java.lang.String>) strList39);
        char[] charArray78 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer80 = new org.apache.commons.lang3.text.StrTokenizer(charArray78, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer82 = strTokenizer80.setDelimiterString("hi!");
        boolean boolean83 = strTokenizer80.isIgnoreEmptyTokens();
        int int84 = strTokenizer80.nextIndex();
        int int85 = strTokenizer80.nextIndex();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer87 = strTokenizer80.setIgnoreEmptyTokens(false);
        int int88 = strTokenizer80.previousIndex();
        java.lang.String str89 = strTokenizer80.getContent();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer91 = strTokenizer80.setIgnoredChar('a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer93 = strTokenizer80.setEmptyTokenAsNull(false);
        int int94 = strList39.lastIndexOf((java.lang.Object) strTokenizer80);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "#4#a4#" + "'", str18, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(strStream20);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(strList25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 1 + "'", int26 == 1);
        org.junit.Assert.assertNotNull(charArray33);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray33), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray33), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray33), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "#4#a4#" + "'", str38, "#4#a4#");
        org.junit.Assert.assertNotNull(strList39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(strTokenizer43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "" + "'", str44, "");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(strMatcher46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strMatcher54);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1));
        org.junit.Assert.assertNotNull(charArray62);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray62), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray62), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray62), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 0 + "'", int68 == 0);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(strStream70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(charArray78);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray78), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray78), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray78), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer82);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 0 + "'", int84 == 0);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 0 + "'", int85 == 0);
        org.junit.Assert.assertNotNull(strTokenizer87);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + (-1) + "'", int88 == (-1));
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "#4#a4#" + "'", str89, "#4#a4#");
        org.junit.Assert.assertNotNull(strTokenizer91);
        org.junit.Assert.assertNotNull(strTokenizer93);
        org.junit.Assert.assertTrue("'" + int94 + "' != '" + (-1) + "'", int94 == (-1));
    }

    @Test
    public void test01839() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01839");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        char[] charArray10 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = new org.apache.commons.lang3.text.StrTokenizer(charArray10, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = strTokenizer12.setDelimiterString("hi!");
        java.lang.String[] strArray15 = strTokenizer12.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder2.appendAll((java.lang.Object[]) strArray15);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder2.appendln(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder18.clear();
        java.lang.Class<?> wildcardClass20 = strBuilder18.getClass();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer14);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(wildcardClass20);
    }

    @Test
    public void test01840() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01840");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder18.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.append("java.io.IOException: ");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder23.deleteAll('a');
        boolean boolean28 = strBuilder27.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher31 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int32 = strBuilder29.indexOf(strMatcher31);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder29.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder34.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder34.appendln((int) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder34.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder41.deleteFirst("hi!");
        java.lang.String str44 = strBuilder43.getNullText();
        char[] charArray46 = new char[] { 'a' };
        char[] charArray47 = strBuilder43.getChars(charArray46);
        char[] charArray52 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray53 = strBuilder43.getChars(charArray52);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = new org.apache.commons.lang3.text.StrTokenizer(charArray52, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder34.appendln(charArray52, 0, 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder27.appendln(charArray52);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer62 = new org.apache.commons.lang3.text.StrTokenizer("", "#4#a4#");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = strTokenizer62.setQuoteChar('4');
        java.util.List<java.lang.String> strList65 = strTokenizer64.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder59.appendAll((java.lang.Iterable<java.lang.String>) strList65);
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder66.appendln("java.io.IOException: StrTokenizer[#4#a4#]");
        java.lang.String str70 = strBuilder68.leftString(48);
        boolean boolean72 = strBuilder68.contains(" ");
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(strMatcher31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertNotNull(charArray46);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray46), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray46), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray46), "[a]");
        org.junit.Assert.assertNotNull(charArray47);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray47), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray47), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray47), "[a]");
        org.junit.Assert.assertNotNull(charArray52);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray52), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray52), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray52), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray53);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray53), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray53), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray53), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strTokenizer64);
        org.junit.Assert.assertNotNull(strList65);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "1.0jv.io.IOExceptionflse1001.0\n35.0\njv.io.IOExce" + "'", str70, "1.0jv.io.IOExceptionflse1001.0\n35.0\njv.io.IOExce");
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
    }

    @Test
    public void test01841() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01841");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        java.lang.String str18 = strBuilder3.substring(2);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder3.deleteFirst("a");
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder20.deleteAll(strMatcher21);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder20.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder26.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder28.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder28.appendln(10L);
        int int34 = strBuilder28.indexOf("#4#a4#", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder28.insert(1, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder28.setLength(1);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder28.replaceAll("1false0\n", " ");
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder28.deleteFirst('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder44.appendSeparator(".0jav");
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder46.deleteAll(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder23.appendln((java.lang.Object) strBuilder46);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder23.delete((int) 'e', 6);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: end < start");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "0java.io.IOExceptionfalse100" + "'", str18, "0java.io.IOExceptionfalse100");
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder49);
    }

    @Test
    public void test01842() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01842");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder18.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder18.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder24.insert((int) (byte) 0, (int) (short) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder27.replaceFirst("1", "java.io.IOException: StrTokenizer[#4#a4#]");
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder27.append("59.0", 32, 61);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: startIndex must be valid");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder30);
    }

    @Test
    public void test01843() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01843");
        char[] charArray6 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = new org.apache.commons.lang3.text.StrTokenizer(charArray6);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray6);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder13.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder13.appendln(10L);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.deleteFirst("");
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = org.apache.commons.lang3.text.StrMatcher.spaceMatcher();
        int int21 = strBuilder16.indexOf(strMatcher19, 1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, strMatcher19);
        boolean boolean23 = strTokenizer22.hasNext();
        java.util.List<java.lang.String> strList24 = strTokenizer22.getTokenList();
        boolean boolean25 = strTokenizer22.hasNext();
        boolean boolean26 = strTokenizer22.hasNext();
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer22.add("StrTokenizer[not tokenized yet]");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: add() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(strList24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
    }

    @Test
    public void test01844() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01844");
        char[] charArray6 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer8.setDelimiterString("hi!");
        java.lang.String str11 = strTokenizer10.nextToken();
        java.util.List<java.lang.String> strList12 = strTokenizer10.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder13.deleteFirst("hi!");
        java.lang.String str16 = strBuilder15.getNullText();
        char[] charArray18 = new char[] { 'a' };
        char[] charArray19 = strBuilder15.getChars(charArray18);
        char[] charArray24 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray25 = strBuilder15.getChars(charArray24);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray25);
        int int27 = strList12.indexOf((java.lang.Object) charArray25);
        strList12.clear();
        java.util.ListIterator<java.lang.String> strItor29 = strList12.listIterator();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = new org.apache.commons.lang3.text.StrTokenizer("", "#4#a4#");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = strTokenizer32.setQuoteChar('4');
        java.util.List<java.lang.String> strList35 = strTokenizer34.getTokenList();
        boolean boolean36 = strList12.containsAll((java.util.Collection<java.lang.String>) strList35);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str39 = strList35.set((int) 'I', "#4");
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 73, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "#4#a4#" + "'", str11, "#4#a4#");
        org.junit.Assert.assertNotNull(strList12);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(charArray18);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray18), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray18), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray18), "[a]");
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[a]");
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray25);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray25), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray25), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray25), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(strTokenizer26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(strItor29);
        org.junit.Assert.assertNotNull(strTokenizer34);
        org.junit.Assert.assertNotNull(strList35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
    }

    @Test
    public void test01845() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01845");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder18.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.append((double) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder25.append((long) 2);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder25.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder28.appendln(true);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder30.insert(70, 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 70");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
    }

    @Test
    public void test01846() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01846");
        char[] charArray6 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = new org.apache.commons.lang3.text.StrTokenizer(charArray6);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray6);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder13.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder13.appendln(10L);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.deleteFirst("");
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = org.apache.commons.lang3.text.StrMatcher.spaceMatcher();
        int int21 = strBuilder16.indexOf(strMatcher19, 1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, strMatcher19);
        boolean boolean23 = strTokenizer22.hasNext();
        java.util.List<java.lang.String> strList24 = strTokenizer22.getTokenList();
        char[] charArray31 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray31, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = strTokenizer33.setDelimiterString("hi!");
        java.lang.String str36 = strTokenizer35.nextToken();
        java.util.List<java.lang.String> strList37 = strTokenizer35.getTokenList();
        boolean boolean39 = strList37.add("hi!");
        java.util.Iterator<java.lang.String> strItor40 = strList37.iterator();
        boolean boolean41 = strList37.isEmpty();
        boolean boolean42 = strList24.removeAll((java.util.Collection<java.lang.String>) strList37);
        char[] charArray49 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = new org.apache.commons.lang3.text.StrTokenizer(charArray49, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = new org.apache.commons.lang3.text.StrTokenizer(charArray49);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = strTokenizer52.setDelimiterChar('a');
        org.apache.commons.lang3.text.StrMatcher strMatcher55 = strTokenizer54.getTrimmerMatcher();
        int int56 = strTokenizer54.size();
        java.lang.String str57 = strTokenizer54.next();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer59 = strTokenizer54.setIgnoreEmptyTokens(true);
        java.util.List<java.lang.String> strList60 = strTokenizer54.getTokenList();
        boolean boolean62 = strList60.add("0\n 10\n");
        boolean boolean63 = strList37.containsAll((java.util.Collection<java.lang.String>) strList60);
        java.util.function.UnaryOperator<java.lang.String> strUnaryOperator64 = null;
        // The following exception was thrown during execution in test generation
        try {
            strList60.replaceAll(strUnaryOperator64);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(strList24);
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray31), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray31), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray31), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "#4#a4#" + "'", str36, "#4#a4#");
        org.junit.Assert.assertNotNull(strList37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(strItor40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(charArray49);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray49), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray49), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray49), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer54);
        org.junit.Assert.assertNotNull(strMatcher55);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 2 + "'", int56 == 2);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "#4#" + "'", str57, "#4#");
        org.junit.Assert.assertNotNull(strTokenizer59);
        org.junit.Assert.assertNotNull(strList60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
    }

    @Test
    public void test01847() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01847");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append("#4#a4#");
        java.lang.String str7 = strBuilder0.leftString((int) (short) 100);
        int int9 = strBuilder0.lastIndexOf("StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder0.insert(0, (-1.0f));
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder0.appendSeparator(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder0.replaceAll("java.io.IOException: StrTokenizer[#4#a4#]", "#4#a4#");
        int int20 = strBuilder17.lastIndexOf(" ", 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder17.replaceAll(".IOExceptionfalse1001.0\n35.0\n1false0\n\naa4#4\n###############################1", "eptionfalse1001.0\n35.0\n1false0\n\n");
        int int25 = strBuilder23.lastIndexOf("0java.io.IOExceptionfalse100");
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "#4#a4#" + "'", str7, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
    }

    @Test
    public void test01848() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01848");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.appendln(10L);
        int int8 = strBuilder2.indexOf("#4#a4#", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder2.insert(1, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int15 = strBuilder12.indexOf(strMatcher14);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder12.append("#4#a4#");
        java.lang.String str19 = strBuilder12.leftString((int) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int23 = strBuilder20.indexOf(strMatcher22);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder20.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder25.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder25.append(false);
        char[] charArray36 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = new org.apache.commons.lang3.text.StrTokenizer(charArray36, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = strTokenizer38.setDelimiterString("hi!");
        boolean boolean41 = strTokenizer38.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder25.appendFixedWidthPadRight((java.lang.Object) strTokenizer38, 10, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher47 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int48 = strBuilder45.indexOf(strMatcher47);
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder45.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder50.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder50.appendln((int) (short) 10);
        boolean boolean55 = strBuilder25.equalsIgnoreCase(strBuilder50);
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder25.reverse();
        java.lang.StringBuffer stringBuffer57 = strBuilder56.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder12.append(stringBuffer57, (int) (byte) 0, 2);
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder11.append(stringBuffer57);
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher64 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int65 = strBuilder62.indexOf(strMatcher64);
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder62.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder67.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder67.append((int) (short) -1);
        boolean boolean72 = strBuilder11.equalsIgnoreCase(strBuilder71);
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder11.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder74.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher79 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int80 = strBuilder77.indexOf(strMatcher79);
        char[] charArray87 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer89 = new org.apache.commons.lang3.text.StrTokenizer(charArray87, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder90 = strBuilder77.appendAll((java.util.Iterator<java.lang.String>) strTokenizer89);
        org.apache.commons.lang3.text.StrBuilder strBuilder92 = strBuilder74.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer89, "");
        int int93 = strBuilder74.length();
        org.apache.commons.lang3.text.StrBuilder strBuilder94 = strBuilder73.appendln((java.lang.Object) strBuilder74);
        boolean boolean96 = strBuilder73.startsWith(" \n");
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "#4#a4#" + "'", str19, "#4#a4#");
        org.junit.Assert.assertNotNull(strMatcher22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(charArray36);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray36), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray36), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray36), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strMatcher47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(stringBuffer57);
        org.junit.Assert.assertEquals(stringBuffer57.toString(), "zinekoTrtSeslaf ");
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strMatcher64);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + (-1) + "'", int65 == (-1));
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNotNull(strMatcher79);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + (-1) + "'", int80 == (-1));
        org.junit.Assert.assertNotNull(charArray87);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray87), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray87), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray87), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strBuilder90);
        org.junit.Assert.assertNotNull(strBuilder92);
        org.junit.Assert.assertTrue("'" + int93 + "' != '" + 0 + "'", int93 == 0);
        org.junit.Assert.assertNotNull(strBuilder94);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
    }

    @Test
    public void test01849() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01849");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.append(false);
        char[] charArray16 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer(charArray16, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = strTokenizer18.setDelimiterString("hi!");
        boolean boolean21 = strTokenizer18.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder5.appendFixedWidthPadRight((java.lang.Object) strTokenizer18, 10, ' ');
        java.io.Reader reader25 = strBuilder5.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder26.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder28.clear();
        java.lang.Throwable throwable33 = null;
        java.io.IOException iOException34 = new java.io.IOException("", throwable33);
        java.io.IOException iOException35 = new java.io.IOException("#4#a4#", throwable33);
        java.io.IOException iOException36 = new java.io.IOException(throwable33);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray40 = new java.lang.Object[] { 1.0f, iOException36, false, 100, strBuilder39 };
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder29.appendWithSeparators(objArray40, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder42.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder44.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder44.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder44.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder44.replaceFirst('#', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder53.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder54.setNewLineText("#4#a4#");
        org.apache.commons.lang3.text.StrMatcher strMatcher57 = org.apache.commons.lang3.text.StrMatcher.commaMatcher();
        int int58 = strBuilder56.indexOf(strMatcher57);
        int int61 = strBuilder56.indexOf("0\nzinekoTrtSeslaf ", 66);
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder5.append((java.lang.Object) "0\nzinekoTrtSeslaf ");
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(reader25);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(objArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray40), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray40), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strMatcher57);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + (-1) + "'", int58 == (-1));
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + (-1) + "'", int61 == (-1));
        org.junit.Assert.assertNotNull(strBuilder62);
    }

    @Test
    public void test01850() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01850");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.appendln(10L);
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.appendln(strBuilder6, 1, (int) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder9.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder10.append(65);
        java.lang.String[] strArray17 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList18 = new java.util.ArrayList<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        char[] charArray26 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = new org.apache.commons.lang3.text.StrTokenizer(charArray26, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = strTokenizer28.setDelimiterString("hi!");
        boolean boolean31 = strTokenizer28.isIgnoreEmptyTokens();
        java.lang.String str32 = strTokenizer28.next();
        int int33 = strList18.indexOf((java.lang.Object) strTokenizer28);
        char[] charArray40 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = new org.apache.commons.lang3.text.StrTokenizer(charArray40, ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = new org.apache.commons.lang3.text.StrTokenizer(charArray40, strMatcher44);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher48 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int49 = strBuilder46.indexOf(strMatcher48);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder46.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher54 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int55 = strBuilder52.indexOf(strMatcher54);
        int int56 = strBuilder46.indexOf(strMatcher54);
        char[] charArray63 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer65 = new org.apache.commons.lang3.text.StrTokenizer(charArray63, ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher67 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer68 = new org.apache.commons.lang3.text.StrTokenizer(charArray63, strMatcher67);
        org.apache.commons.lang3.text.StrMatcher strMatcher69 = strTokenizer68.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer70 = new org.apache.commons.lang3.text.StrTokenizer(charArray40, strMatcher54, strMatcher69);
        boolean boolean71 = strList18.equals((java.lang.Object) strMatcher69);
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder72.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder74.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder74.insert(0, (double) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder78.appendFixedWidthPadRight((java.lang.Object) 100.0d, 1, '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder83 = strBuilder82.trim();
        java.lang.Object[] objArray84 = new java.lang.Object[] {};
        org.apache.commons.lang3.text.StrBuilder strBuilder85 = strBuilder82.appendAll(objArray84);
        char[] charArray86 = strBuilder82.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer87 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray86);
        boolean boolean88 = strList18.equals((java.lang.Object) charArray86);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder89 = strBuilder10.insert((int) 'e', charArray86);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 101");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(charArray26);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray26), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray26), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray26), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "#4#a4#" + "'", str32, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertNotNull(charArray40);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray40), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray40), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray40), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher44);
        org.junit.Assert.assertNotNull(strMatcher48);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strMatcher54);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1));
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1));
        org.junit.Assert.assertNotNull(charArray63);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray63), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray63), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray63), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher67);
        org.junit.Assert.assertNotNull(strMatcher69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(strBuilder82);
        org.junit.Assert.assertNotNull(strBuilder83);
        org.junit.Assert.assertNotNull(objArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray84), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray84), "[]");
        org.junit.Assert.assertNotNull(strBuilder85);
        org.junit.Assert.assertNotNull(charArray86);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray86), "100.01");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray86), "100.01");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray86), "[1, 0, 0, ., 0, 1]");
        org.junit.Assert.assertNotNull(strTokenizer87);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
    }

    @Test
    public void test01851() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01851");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("1false0\n");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = strTokenizer1.setDelimiterString("java.io.IOException: StrTokenizer[");
        boolean boolean4 = strTokenizer1.hasNext();
        org.junit.Assert.assertNotNull(strTokenizer1);
        org.junit.Assert.assertNotNull(strTokenizer3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
    }

    @Test
    public void test01852() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01852");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder18.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder24.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder26.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.appendln(10L);
        int int32 = strBuilder26.indexOf("#4#a4#", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder26.insert(1, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder23.appendln(strBuilder35);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder36.appendln("java.io.IOException: ", (int) (short) 1, (int) (byte) 10);
        boolean boolean42 = strBuilder36.startsWith("java.io.IOException: ");
        int int45 = strBuilder36.indexOf('4', (int) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder36.insert(5, (float) ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder36.insert(1, (int) (short) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder36.replace(0, 10, "false");
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder55.insert(66, '0');
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 66");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder55);
    }

    @Test
    public void test01853() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01853");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.append(false);
        char[] charArray16 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer(charArray16, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = strTokenizer18.setDelimiterString("hi!");
        boolean boolean21 = strTokenizer18.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder5.appendFixedWidthPadRight((java.lang.Object) strTokenizer18, 10, ' ');
        int int25 = strTokenizer18.previousIndex();
        boolean boolean26 = strTokenizer18.hasNext();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = strTokenizer18.reset("#4#a4#");
        java.util.List<java.lang.String> strList29 = strTokenizer28.getTokenList();
        char[] charArray36 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = new org.apache.commons.lang3.text.StrTokenizer(charArray36, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = new org.apache.commons.lang3.text.StrTokenizer(charArray36);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = strTokenizer39.setDelimiterChar('a');
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = strTokenizer41.getTrimmerMatcher();
        int int43 = strTokenizer41.size();
        java.lang.String str44 = strTokenizer41.next();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = strTokenizer41.setIgnoreEmptyTokens(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder47.deleteFirst("hi!");
        java.lang.String str50 = strBuilder49.getNullText();
        char[] charArray52 = new char[] { 'a' };
        char[] charArray53 = strBuilder49.getChars(charArray52);
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder49.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder55.deleteFirst(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder55.appendln(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder55.setNewLineText("0\nfalse32.0");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer62 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance();
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder63.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder65.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder66.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder67.appendln((long) '#');
        java.util.stream.IntStream intStream70 = strBuilder67.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder67.appendSeparator("10\n\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder73.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder75.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder75.insert(0, (double) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder83 = strBuilder79.appendFixedWidthPadRight((java.lang.Object) 100.0d, 1, '4');
        org.apache.commons.lang3.text.StrMatcher strMatcher84 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        int int86 = strBuilder83.lastIndexOf(strMatcher84, (int) (short) 10);
        int int88 = strBuilder67.indexOf(strMatcher84, 4);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer89 = strTokenizer62.setTrimmerMatcher(strMatcher84);
        boolean boolean90 = strBuilder55.equals((java.lang.Object) strMatcher84);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer91 = strTokenizer46.setIgnoredMatcher(strMatcher84);
        org.apache.commons.lang3.text.StrMatcher strMatcher92 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer93 = strTokenizer91.setQuoteMatcher(strMatcher92);
        int int94 = strList29.lastIndexOf((java.lang.Object) strTokenizer93);
        java.lang.Object obj95 = strTokenizer93.clone();
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(strTokenizer28);
        org.junit.Assert.assertNotNull(strList29);
        org.junit.Assert.assertNotNull(charArray36);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray36), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray36), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray36), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer41);
        org.junit.Assert.assertNotNull(strMatcher42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 2 + "'", int43 == 2);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "#4#" + "'", str44, "#4#");
        org.junit.Assert.assertNotNull(strTokenizer46);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertNotNull(charArray52);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray52), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray52), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray52), "[a]");
        org.junit.Assert.assertNotNull(charArray53);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray53), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray53), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray53), "[a]");
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strTokenizer62);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(intStream70);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertNotNull(strBuilder83);
        org.junit.Assert.assertNotNull(strMatcher84);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + (-1) + "'", int86 == (-1));
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + 5 + "'", int88 == 5);
        org.junit.Assert.assertNotNull(strTokenizer89);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertNotNull(strTokenizer91);
        org.junit.Assert.assertNotNull(strTokenizer93);
        org.junit.Assert.assertTrue("'" + int94 + "' != '" + (-1) + "'", int94 == (-1));
        org.junit.Assert.assertNotNull(obj95);
        org.junit.Assert.assertEquals(obj95.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj95), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj95), "StrTokenizer[not tokenized yet]");
    }

    @Test
    public void test01854() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01854");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = org.apache.commons.lang3.text.StrMatcher.splitMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder0.deleteAll(strMatcher3);
        java.lang.String[] strArray8 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList9 = new java.util.ArrayList<java.lang.String>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList9, strArray8);
        char[] charArray17 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = new org.apache.commons.lang3.text.StrTokenizer(charArray17, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = strTokenizer19.setDelimiterString("hi!");
        boolean boolean22 = strTokenizer19.isIgnoreEmptyTokens();
        java.lang.String str23 = strTokenizer19.next();
        int int24 = strList9.indexOf((java.lang.Object) strTokenizer19);
        java.util.ListIterator<java.lang.String> strItor26 = strList9.listIterator((int) (byte) 0);
        java.lang.String[] strArray30 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList31 = new java.util.ArrayList<java.lang.String>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList31, strArray30);
        char[] charArray39 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = new org.apache.commons.lang3.text.StrTokenizer(charArray39, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = strTokenizer41.setDelimiterString("hi!");
        boolean boolean44 = strTokenizer41.isIgnoreEmptyTokens();
        java.lang.String str45 = strTokenizer41.next();
        int int46 = strList31.indexOf((java.lang.Object) strTokenizer41);
        java.util.ListIterator<java.lang.String> strItor48 = strList31.listIterator((int) (byte) 0);
        java.util.Iterator<java.lang.String> strItor49 = strList31.iterator();
        boolean boolean50 = strList9.removeAll((java.util.Collection<java.lang.String>) strList31);
        java.util.Iterator<java.lang.String> strItor51 = strList9.iterator();
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder0.appendFixedWidthPadRight((java.lang.Object) strItor51, (int) (short) 0, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder0.append((long) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder56.append('#');
        char[] charArray65 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer67 = new org.apache.commons.lang3.text.StrTokenizer(charArray65, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer69 = strTokenizer67.setDelimiterString("hi!");
        boolean boolean70 = strTokenizer67.hasPrevious();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer71 = strTokenizer67.reset();
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder58.appendln((java.lang.Object) strTokenizer71);
        java.lang.StringBuffer stringBuffer73 = strBuilder58.toStringBuffer();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strMatcher3);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray17), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray17), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray17), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "#4#a4#" + "'", str23, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertNotNull(strItor26);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(charArray39);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray39), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray39), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray39), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "#4#a4#" + "'", str45, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertNotNull(strItor48);
        org.junit.Assert.assertNotNull(strItor49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(strItor51);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(charArray65);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray65), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray65), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray65), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(strTokenizer71);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(stringBuffer73);
        org.junit.Assert.assertEquals(stringBuffer73.toString(), "0#StrTokenizer[not tokenized yet]\n");
    }

    @Test
    public void test01855() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01855");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.appendln((int) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder5.setNullText("");
        java.util.stream.IntStream intStream12 = strBuilder5.codePoints();
        java.lang.StringBuffer stringBuffer13 = strBuilder5.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder5.deleteFirst('#');
        int int18 = strBuilder15.lastIndexOf('a', 36);
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(intStream12);
        org.junit.Assert.assertNotNull(stringBuffer13);
        org.junit.Assert.assertEquals(stringBuffer13.toString(), " 10\n");
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
    }

    @Test
    public void test01856() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01856");
        char[] charArray6 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer8.setDelimiterString("hi!");
        java.lang.String str11 = strTokenizer10.nextToken();
        java.util.List<java.lang.String> strList12 = strTokenizer10.getTokenList();
        boolean boolean14 = strList12.add("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("");
        java.lang.String str17 = strTokenizer16.getContent();
        boolean boolean18 = strList12.equals((java.lang.Object) strTokenizer16);
        java.lang.String str20 = strList12.remove((int) (byte) 0);
        java.util.stream.Stream<java.lang.String> strStream21 = strList12.parallelStream();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder24.clear();
        boolean boolean26 = strBuilder25.isEmpty();
        java.util.stream.IntStream intStream27 = strBuilder25.codePoints();
        int int30 = strBuilder25.lastIndexOf(".0jav", 52);
        java.util.stream.IntStream intStream31 = strBuilder25.codePoints();
        int int32 = strList12.indexOf((java.lang.Object) strBuilder25);
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "#4#a4#" + "'", str11, "#4#a4#");
        org.junit.Assert.assertNotNull(strList12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "#4#a4#" + "'", str20, "#4#a4#");
        org.junit.Assert.assertNotNull(strStream21);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(intStream27);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertNotNull(intStream31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
    }

    @Test
    public void test01857() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01857");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("");
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer1.set("java.io.IOException:");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: set() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strTokenizer1);
    }

    @Test
    public void test01858() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01858");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("", '3', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer3.setEmptyTokenAsNull(true);
        int int6 = strTokenizer3.nextIndex();
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
    }

    @Test
    public void test01859() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01859");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        char[] charArray10 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = new org.apache.commons.lang3.text.StrTokenizer(charArray10, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder0.appendAll((java.util.Iterator<java.lang.String>) strTokenizer12);
        int int14 = strBuilder0.length();
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(" a10\n");
        int int17 = strBuilder0.indexOf(strMatcher16);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder0.appendPadding(100, '1');
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 6 + "'", int14 == 6);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 3 + "'", int17 == 3);
        org.junit.Assert.assertNotNull(strBuilder20);
    }

    @Test
    public void test01860() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01860");
        char[] charArray6 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer8.setDelimiterString("hi!");
        boolean boolean11 = strTokenizer8.isIgnoreEmptyTokens();
        int int12 = strTokenizer8.nextIndex();
        int int13 = strTokenizer8.nextIndex();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = strTokenizer8.setIgnoreEmptyTokens(false);
        int int16 = strTokenizer8.previousIndex();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = strTokenizer8.reset("a");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int22 = strBuilder19.indexOf(strMatcher21);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder19.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder24.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder24.appendln((int) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder24.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int34 = strBuilder31.indexOf(strMatcher33);
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder30.deleteFirst(strMatcher33);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int39 = strBuilder36.indexOf(strMatcher38);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder36.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder41.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder43.deleteFirst('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder43.append('4');
        org.apache.commons.lang3.text.StrMatcher strMatcher48 = org.apache.commons.lang3.text.StrMatcher.quoteMatcher();
        int int50 = strBuilder47.lastIndexOf(strMatcher48, (int) (short) -1);
        int int51 = strBuilder35.indexOf(strMatcher48);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = strTokenizer18.setTrimmerMatcher(strMatcher48);
        java.lang.String[] strArray53 = strTokenizer18.getTokenArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = new org.apache.commons.lang3.text.StrTokenizer("hi!");
        java.lang.String str56 = strTokenizer55.previousToken();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = strTokenizer55.setQuoteChar(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder59.deleteFirst("hi!");
        java.lang.String str62 = strBuilder61.getNullText();
        char[] charArray64 = new char[] { 'a' };
        char[] charArray65 = strBuilder61.getChars(charArray64);
        char[] charArray70 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray71 = strBuilder61.getChars(charArray70);
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder61.appendln("java.io.IOException: ");
        char[] charArray80 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer82 = new org.apache.commons.lang3.text.StrTokenizer(charArray80, ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher84 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer85 = new org.apache.commons.lang3.text.StrTokenizer(charArray80, strMatcher84);
        org.apache.commons.lang3.text.StrBuilder strBuilder87 = strBuilder73.replaceFirst(strMatcher84, "#4#");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer88 = strTokenizer58.setTrimmerMatcher(strMatcher84);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer89 = strTokenizer18.setIgnoredMatcher(strMatcher84);
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer18.set("#");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: set() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(strTokenizer15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer18);
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strMatcher38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strMatcher48);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer52);
        org.junit.Assert.assertNotNull(strArray53);
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertNotNull(strTokenizer58);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNull(str62);
        org.junit.Assert.assertNotNull(charArray64);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray64), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray64), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray64), "[a]");
        org.junit.Assert.assertNotNull(charArray65);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray65), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray65), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray65), "[a]");
        org.junit.Assert.assertNotNull(charArray70);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray70), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray70), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray70), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray71);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray71), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray71), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray71), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(charArray80);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray80), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray80), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray80), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher84);
        org.junit.Assert.assertNotNull(strBuilder87);
        org.junit.Assert.assertNotNull(strTokenizer88);
        org.junit.Assert.assertNotNull(strTokenizer89);
    }

    @Test
    public void test01861() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01861");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder18.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder18.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder18.replaceFirst('#', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder27.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder28.setNewLineText("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder30.clear();
        java.lang.String[] strArray35 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList36 = new java.util.ArrayList<java.lang.String>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList36, strArray35);
        char[] charArray44 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = new org.apache.commons.lang3.text.StrTokenizer(charArray44, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = strTokenizer46.setDelimiterString("hi!");
        boolean boolean49 = strTokenizer46.isIgnoreEmptyTokens();
        java.lang.String str50 = strTokenizer46.next();
        int int51 = strList36.indexOf((java.lang.Object) strTokenizer46);
        java.util.ListIterator<java.lang.String> strItor53 = strList36.listIterator((int) (byte) 0);
        java.util.Iterator<java.lang.String> strItor54 = strList36.iterator();
        java.lang.String[] strArray58 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList59 = new java.util.ArrayList<java.lang.String>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList59, strArray58);
        char[] charArray67 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer69 = new org.apache.commons.lang3.text.StrTokenizer(charArray67, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer71 = strTokenizer69.setDelimiterString("hi!");
        boolean boolean72 = strTokenizer69.isIgnoreEmptyTokens();
        java.lang.String str73 = strTokenizer69.next();
        int int74 = strList59.indexOf((java.lang.Object) strTokenizer69);
        boolean boolean75 = strList36.addAll((java.util.Collection<java.lang.String>) strList59);
        strList59.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder31.appendWithSeparators((java.lang.Iterable<java.lang.String>) strList59, "");
        int int81 = strBuilder31.lastIndexOf("0java.io.IOExceptionfalse100", (int) 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder84 = strBuilder82.deleteFirst("hi!");
        java.lang.String str85 = strBuilder84.getNullText();
        char[] charArray87 = new char[] { 'a' };
        char[] charArray88 = strBuilder84.getChars(charArray87);
        char[] charArray93 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray94 = strBuilder84.getChars(charArray93);
        boolean boolean95 = strBuilder31.equals(strBuilder84);
        org.apache.commons.lang3.text.StrBuilder strBuilder97 = strBuilder31.append(6);
        org.apache.commons.lang3.text.StrBuilder strBuilder98 = strBuilder31.trim();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(charArray44);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray44), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray44), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray44), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "#4#a4#" + "'", str50, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1));
        org.junit.Assert.assertNotNull(strItor53);
        org.junit.Assert.assertNotNull(strItor54);
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(charArray67);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray67), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray67), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray67), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "#4#a4#" + "'", str73, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + (-1) + "'", int74 == (-1));
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + (-1) + "'", int81 == (-1));
        org.junit.Assert.assertNotNull(strBuilder84);
        org.junit.Assert.assertNull(str85);
        org.junit.Assert.assertNotNull(charArray87);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray87), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray87), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray87), "[a]");
        org.junit.Assert.assertNotNull(charArray88);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray88), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray88), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray88), "[a]");
        org.junit.Assert.assertNotNull(charArray93);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray93), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray93), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray93), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray94);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray94), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray94), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray94), "[a, 4,  , 4]");
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + true + "'", boolean95 == true);
        org.junit.Assert.assertNotNull(strBuilder97);
        org.junit.Assert.assertNotNull(strBuilder98);
    }

    @Test
    public void test01862() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01862");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.append(false);
        boolean boolean11 = strBuilder9.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder9.replaceAll("10\n\n", "#4#a4#java.io.IOException: zinekoTrtSeslaf \n");
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.appendSeparator(' ', (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder14.replaceAll('a', 'a');
        java.lang.String str23 = strBuilder14.midString(49, 33);
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
    }

    @Test
    public void test01863() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01863");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder2.insert(0, (double) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder6.appendFixedWidthPadRight((java.lang.Object) 100.0d, 1, '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder10.append(2);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder12.append(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder12.appendFixedWidthPadRight(10, 48, '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int22 = strBuilder19.indexOf(strMatcher21);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder19.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder24.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder26.deleteFirst('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher31 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int32 = strBuilder29.indexOf(strMatcher31);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder29.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder34.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder36.deleteFirst('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder28.appendln(strBuilder36);
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = org.apache.commons.lang3.text.StrMatcher.doubleQuoteMatcher();
        int int42 = strBuilder28.lastIndexOf(strMatcher40, (int) 'a');
        char[] charArray50 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = new org.apache.commons.lang3.text.StrTokenizer(charArray50, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = new org.apache.commons.lang3.text.StrTokenizer(charArray50);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = strTokenizer53.setDelimiterChar('a');
        org.apache.commons.lang3.text.StrMatcher strMatcher56 = strTokenizer55.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer59 = new org.apache.commons.lang3.text.StrTokenizer("", "#4#a4#");
        org.apache.commons.lang3.text.StrMatcher strMatcher60 = strTokenizer59.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer61 = new org.apache.commons.lang3.text.StrTokenizer("0java.io.IOExceptionfalse100", strMatcher56, strMatcher60);
        int int62 = strBuilder28.indexOf(strMatcher60);
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder12.append((java.lang.CharSequence) strBuilder28);
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder28.deleteAll("java.io.IOException: StrTokenizer[not tokenized yet]");
        int int67 = strBuilder28.lastIndexOf(".0j");
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder28.appendSeparator(" ###################################", (int) (short) 0);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strMatcher31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strMatcher40);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertNotNull(charArray50);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray50), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray50), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray50), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer55);
        org.junit.Assert.assertNotNull(strMatcher56);
        org.junit.Assert.assertNotNull(strMatcher60);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + (-1) + "'", int62 == (-1));
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + (-1) + "'", int67 == (-1));
        org.junit.Assert.assertNotNull(strBuilder70);
    }

    @Test
    public void test01864() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01864");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        boolean boolean4 = strBuilder3.isEmpty();
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder7.deleteFirst("hi!");
        java.lang.String str10 = strBuilder9.getNullText();
        char[] charArray12 = new char[] { 'a' };
        char[] charArray13 = strBuilder9.getChars(charArray12);
        int int15 = strMatcher6.isMatch(charArray13, 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.append(charArray13);
        java.io.Writer writer17 = strBuilder3.asWriter();
        writer17.write((int) (short) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int23 = strBuilder20.indexOf(strMatcher22);
        char[] charArray30 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = new org.apache.commons.lang3.text.StrTokenizer(charArray30, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder20.appendAll((java.util.Iterator<java.lang.String>) strTokenizer32);
        java.lang.String str36 = strBuilder20.midString((int) (byte) 1, (-1));
        char[] charArray43 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = new org.apache.commons.lang3.text.StrTokenizer(charArray43, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = new org.apache.commons.lang3.text.StrTokenizer(charArray43);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = strTokenizer46.setDelimiterChar('a');
        org.apache.commons.lang3.text.StrMatcher strMatcher49 = strTokenizer48.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder20.replaceFirst(strMatcher49, "java.io.IOException: ");
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder20.deleteAll('#');
        char[] charArray60 = new char[] { 'a', '4', 'a', 'a', '#', ' ' };
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher63 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int64 = strBuilder61.indexOf(strMatcher63);
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder61.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher69 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int70 = strBuilder67.indexOf(strMatcher69);
        int int71 = strBuilder61.indexOf(strMatcher69);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer72 = new org.apache.commons.lang3.text.StrTokenizer(charArray60, strMatcher69);
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher76 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int77 = strBuilder74.indexOf(strMatcher76);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer78 = new org.apache.commons.lang3.text.StrTokenizer("#4#a4#", strMatcher76);
        org.apache.commons.lang3.text.StrMatcher strMatcher80 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("#4#a4#");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer81 = new org.apache.commons.lang3.text.StrTokenizer(charArray60, strMatcher76, strMatcher80);
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder20.deleteFirst(strMatcher80);
        // The following exception was thrown during execution in test generation
        try {
            java.io.Writer writer85 = writer17.append((java.lang.CharSequence) strBuilder20, (int) '.', 4);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 4");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[a]");
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[a]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(writer17);
        org.junit.Assert.assertNotNull(strMatcher22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray30), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray30), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray30), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
        org.junit.Assert.assertNotNull(charArray43);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray43), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray43), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray43), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer48);
        org.junit.Assert.assertNotNull(strMatcher49);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "a4aa# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "a4aa# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[a, 4, a, a, #,  ]");
        org.junit.Assert.assertNotNull(strMatcher63);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + (-1) + "'", int64 == (-1));
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strMatcher69);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + (-1) + "'", int70 == (-1));
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + (-1) + "'", int71 == (-1));
        org.junit.Assert.assertNotNull(strMatcher76);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + (-1) + "'", int77 == (-1));
        org.junit.Assert.assertNotNull(strMatcher80);
        org.junit.Assert.assertNotNull(strBuilder82);
    }

    @Test
    public void test01865() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01865");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = new org.apache.commons.lang3.text.StrTokenizer("1a10\n104aa");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = strTokenizer1.setIgnoredChar('e');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer3.setIgnoreEmptyTokens(false);
        org.junit.Assert.assertNotNull(strTokenizer3);
        org.junit.Assert.assertNotNull(strTokenizer5);
    }

    @Test
    public void test01866() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01866");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        char[] charArray10 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = new org.apache.commons.lang3.text.StrTokenizer(charArray10, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder0.appendAll((java.util.Iterator<java.lang.String>) strTokenizer12);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder15.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder17.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder17.appendln(10L);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder20.deleteFirst("");
        char[] charArray23 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.appendln(charArray23);
        boolean boolean25 = strBuilder22.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder27.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder29.clear();
        boolean boolean31 = strBuilder30.isEmpty();
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder34.deleteFirst("hi!");
        java.lang.String str37 = strBuilder36.getNullText();
        char[] charArray39 = new char[] { 'a' };
        char[] charArray40 = strBuilder36.getChars(charArray39);
        int int42 = strMatcher33.isMatch(charArray40, 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder30.append(charArray40);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder22.insert((int) (byte) 1, charArray40);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = new org.apache.commons.lang3.text.StrTokenizer(charArray40, "StrTokenizer[#4#a4#]");
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher49 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int50 = strBuilder47.indexOf(strMatcher49);
        char[] charArray57 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer59 = new org.apache.commons.lang3.text.StrTokenizer(charArray57, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder47.appendAll((java.util.Iterator<java.lang.String>) strTokenizer59);
        java.lang.String str63 = strBuilder47.midString((int) (byte) 1, (-1));
        char[] charArray70 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer72 = new org.apache.commons.lang3.text.StrTokenizer(charArray70, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer73 = new org.apache.commons.lang3.text.StrTokenizer(charArray70);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer75 = strTokenizer73.setDelimiterChar('a');
        org.apache.commons.lang3.text.StrMatcher strMatcher76 = strTokenizer75.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder47.replaceFirst(strMatcher76, "java.io.IOException: ");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer79 = strTokenizer46.setQuoteMatcher(strMatcher76);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer80 = new org.apache.commons.lang3.text.StrTokenizer("1.0java.io.IOExceptionfalse1001.0\n35.0\n", strMatcher76);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer81 = strTokenizer12.setTrimmerMatcher(strMatcher76);
        java.lang.String str82 = strTokenizer81.nextToken();
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNotNull(charArray39);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray39), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray39), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray39), "[a]");
        org.junit.Assert.assertNotNull(charArray40);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray40), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray40), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray40), "[a]");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strMatcher49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "" + "'", str63, "");
        org.junit.Assert.assertNotNull(charArray70);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray70), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray70), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray70), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer75);
        org.junit.Assert.assertNotNull(strMatcher76);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(strTokenizer79);
        org.junit.Assert.assertNotNull(strTokenizer81);
        org.junit.Assert.assertNull(str82);
    }

    @Test
    public void test01867() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01867");
        java.lang.String[] strArray3 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList4 = new java.util.ArrayList<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        char[] charArray12 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strTokenizer14.setDelimiterString("hi!");
        boolean boolean17 = strTokenizer14.isIgnoreEmptyTokens();
        java.lang.String str18 = strTokenizer14.next();
        int int19 = strList4.indexOf((java.lang.Object) strTokenizer14);
        java.util.ListIterator<java.lang.String> strItor21 = strList4.listIterator((int) (byte) 0);
        char[] charArray28 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = new org.apache.commons.lang3.text.StrTokenizer(charArray28, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = strTokenizer30.setDelimiterString("hi!");
        java.lang.String str33 = strTokenizer32.nextToken();
        java.util.List<java.lang.String> strList34 = strTokenizer32.getTokenList();
        boolean boolean36 = strList34.add("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("");
        java.lang.String str39 = strTokenizer38.getContent();
        boolean boolean40 = strList34.equals((java.lang.Object) strTokenizer38);
        org.apache.commons.lang3.text.StrMatcher strMatcher41 = org.apache.commons.lang3.text.StrMatcher.singleQuoteMatcher();
        boolean boolean42 = strList34.equals((java.lang.Object) strMatcher41);
        java.util.stream.Stream<java.lang.String> strStream43 = strList34.parallelStream();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder44.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder46.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder46.insert(0, (double) (byte) 100);
        java.io.Reader reader51 = strBuilder50.asReader();
        boolean boolean52 = strList34.remove((java.lang.Object) reader51);
        strList34.clear();
        boolean boolean54 = strList4.addAll((java.util.Collection<java.lang.String>) strList34);
        java.lang.Object[] objArray55 = strList4.toArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder56.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder58.clear();
        java.lang.Throwable throwable63 = null;
        java.io.IOException iOException64 = new java.io.IOException("", throwable63);
        java.io.IOException iOException65 = new java.io.IOException("#4#a4#", throwable63);
        java.io.IOException iOException66 = new java.io.IOException(throwable63);
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray70 = new java.lang.Object[] { 1.0f, iOException66, false, 100, strBuilder69 };
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder59.appendWithSeparators(objArray70, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder72.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder74.appendln((float) '#');
        boolean boolean78 = strBuilder74.contains("StrTokenizer[#4#a4#]");
        int int80 = strBuilder74.lastIndexOf('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder83 = strBuilder81.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder84 = strBuilder83.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder87 = strBuilder83.insert(0, (double) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder91 = strBuilder87.appendFixedWidthPadRight((java.lang.Object) 100.0d, 1, '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder93 = strBuilder91.append(2);
        org.apache.commons.lang3.text.StrBuilder strBuilder95 = strBuilder93.append(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder96 = strBuilder74.append((java.lang.CharSequence) strBuilder95);
        int int97 = strList4.lastIndexOf((java.lang.Object) strBuilder95);
        int int99 = strBuilder95.indexOf("35.0");
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "#4#a4#" + "'", str18, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(strItor21);
        org.junit.Assert.assertNotNull(charArray28);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray28), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray28), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray28), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "#4#a4#" + "'", str33, "#4#a4#");
        org.junit.Assert.assertNotNull(strList34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(strTokenizer38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "" + "'", str39, "");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(strMatcher41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(strStream43);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(reader51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(objArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray55), "[, , ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray55), "[, , ]");
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(objArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray70), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray70), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + (-1) + "'", int80 == (-1));
        org.junit.Assert.assertNotNull(strBuilder83);
        org.junit.Assert.assertNotNull(strBuilder84);
        org.junit.Assert.assertNotNull(strBuilder87);
        org.junit.Assert.assertNotNull(strBuilder91);
        org.junit.Assert.assertNotNull(strBuilder93);
        org.junit.Assert.assertNotNull(strBuilder95);
        org.junit.Assert.assertNotNull(strBuilder96);
        org.junit.Assert.assertTrue("'" + int97 + "' != '" + (-1) + "'", int97 == (-1));
        org.junit.Assert.assertTrue("'" + int99 + "' != '" + (-1) + "'", int99 == (-1));
    }

    @Test
    public void test01868() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01868");
        java.lang.String[] strArray3 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList4 = new java.util.ArrayList<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        char[] charArray12 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strTokenizer14.setDelimiterString("hi!");
        boolean boolean17 = strTokenizer14.isIgnoreEmptyTokens();
        java.lang.String str18 = strTokenizer14.next();
        int int19 = strList4.indexOf((java.lang.Object) strTokenizer14);
        java.lang.String str20 = strTokenizer14.toString();
        java.lang.String str21 = strTokenizer14.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = strTokenizer14.setIgnoreEmptyTokens(true);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = strTokenizer23.reset("eptionfalse1001.0\n35.0\n1false0\n\n");
        boolean boolean26 = strTokenizer23.isIgnoreEmptyTokens();
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "#4#a4#" + "'", str18, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "StrTokenizer[#4#a4#]" + "'", str20, "StrTokenizer[#4#a4#]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "StrTokenizer[#4#a4#]" + "'", str21, "StrTokenizer[#4#a4#]");
        org.junit.Assert.assertNotNull(strTokenizer23);
        org.junit.Assert.assertNotNull(strTokenizer25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
    }

    @Test
    public void test01869() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01869");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder18.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder18.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder18.replaceFirst('#', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder27.appendNull();
        java.io.Reader reader29 = strBuilder28.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder28.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder31.deleteAll('3');
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder33.append((double) 16);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder33.append("1false0\nfalse", 65, 66);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: startIndex must be valid");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(reader29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder35);
    }

    @Test
    public void test01870() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01870");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        char[] charArray10 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = new org.apache.commons.lang3.text.StrTokenizer(charArray10, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = strTokenizer12.setDelimiterString("hi!");
        java.lang.String[] strArray15 = strTokenizer12.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder2.appendAll((java.lang.Object[]) strArray15);
        boolean boolean18 = strBuilder2.endsWith("#4#");
        int int19 = strBuilder2.capacity();
        int int20 = strBuilder2.length();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer14);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 32 + "'", int19 == 32);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 6 + "'", int20 == 6);
    }

    @Test
    public void test01871() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01871");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer(".0j", ' ', '0');
        boolean boolean4 = strTokenizer3.hasNext();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
    }

    @Test
    public void test01872() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01872");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        java.lang.String str4 = strBuilder2.leftString(32);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteFirst("hi!");
        java.lang.String str8 = strBuilder7.getNullText();
        char[] charArray10 = new char[] { 'a' };
        char[] charArray11 = strBuilder7.getChars(charArray10);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder2.append((java.lang.Object) strBuilder7);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder2.replaceAll('#', ' ');
        char[] charArray22 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = new org.apache.commons.lang3.text.StrTokenizer(charArray22, ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer(charArray22, strMatcher26);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder2.deleteAll(strMatcher26);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder2.append(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder2.append((float) 19);
        boolean boolean34 = strBuilder32.contains('0');
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[a]");
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray22), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray22), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray22), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
    }

    @Test
    public void test01873() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01873");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        java.util.stream.IntStream intStream1 = strBuilder0.codePoints();
        java.lang.String[] strArray5 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList6 = new java.util.ArrayList<java.lang.String>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList6, strArray5);
        char[] charArray14 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = new org.apache.commons.lang3.text.StrTokenizer(charArray14, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = strTokenizer16.setDelimiterString("hi!");
        boolean boolean19 = strTokenizer16.isIgnoreEmptyTokens();
        java.lang.String str20 = strTokenizer16.next();
        int int21 = strList6.indexOf((java.lang.Object) strTokenizer16);
        java.util.ListIterator<java.lang.String> strItor23 = strList6.listIterator((int) (byte) 0);
        java.util.Iterator<java.lang.String> strItor24 = strList6.iterator();
        java.lang.String[] strArray28 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList29 = new java.util.ArrayList<java.lang.String>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList29, strArray28);
        char[] charArray37 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = new org.apache.commons.lang3.text.StrTokenizer(charArray37, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = strTokenizer39.setDelimiterString("hi!");
        boolean boolean42 = strTokenizer39.isIgnoreEmptyTokens();
        java.lang.String str43 = strTokenizer39.next();
        int int44 = strList29.indexOf((java.lang.Object) strTokenizer39);
        boolean boolean45 = strList6.addAll((java.util.Collection<java.lang.String>) strList29);
        java.lang.String[] strArray49 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList50 = new java.util.ArrayList<java.lang.String>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList50, strArray49);
        char[] charArray58 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer60 = new org.apache.commons.lang3.text.StrTokenizer(charArray58, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer62 = strTokenizer60.setDelimiterString("hi!");
        boolean boolean63 = strTokenizer60.isIgnoreEmptyTokens();
        java.lang.String str64 = strTokenizer60.next();
        int int65 = strList50.indexOf((java.lang.Object) strTokenizer60);
        java.util.ListIterator<java.lang.String> strItor67 = strList50.listIterator((int) (byte) 0);
        java.util.Iterator<java.lang.String> strItor68 = strList50.iterator();
        java.lang.String[] strArray72 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList73 = new java.util.ArrayList<java.lang.String>();
        boolean boolean74 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList73, strArray72);
        char[] charArray81 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer83 = new org.apache.commons.lang3.text.StrTokenizer(charArray81, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer85 = strTokenizer83.setDelimiterString("hi!");
        boolean boolean86 = strTokenizer83.isIgnoreEmptyTokens();
        java.lang.String str87 = strTokenizer83.next();
        int int88 = strList73.indexOf((java.lang.Object) strTokenizer83);
        java.util.ListIterator<java.lang.String> strItor90 = strList73.listIterator((int) (byte) 0);
        java.util.Iterator<java.lang.String> strItor91 = strList73.iterator();
        boolean boolean92 = strList50.remove((java.lang.Object) strItor91);
        boolean boolean93 = strList6.removeAll((java.util.Collection<java.lang.String>) strList50);
        java.lang.String str96 = strList50.set(2, "java.io.IOException: ");
        java.util.ListIterator<java.lang.String> strItor97 = strList50.listIterator();
        org.apache.commons.lang3.text.StrBuilder strBuilder98 = strBuilder0.appendln((java.lang.Object) strItor97);
        java.util.stream.IntStream intStream99 = strBuilder0.codePoints();
        org.junit.Assert.assertNotNull(intStream1);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(charArray14);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray14), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray14), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray14), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "#4#a4#" + "'", str20, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertNotNull(strItor23);
        org.junit.Assert.assertNotNull(strItor24);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(charArray37);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray37), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray37), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray37), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "#4#a4#" + "'", str43, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(strArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(charArray58);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray58), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray58), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray58), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "#4#a4#" + "'", str64, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + (-1) + "'", int65 == (-1));
        org.junit.Assert.assertNotNull(strItor67);
        org.junit.Assert.assertNotNull(strItor68);
        org.junit.Assert.assertNotNull(strArray72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(charArray81);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray81), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray81), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray81), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "#4#a4#" + "'", str87, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + (-1) + "'", int88 == (-1));
        org.junit.Assert.assertNotNull(strItor90);
        org.junit.Assert.assertNotNull(strItor91);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + true + "'", boolean93 == true);
        org.junit.Assert.assertEquals("'" + str96 + "' != '" + "" + "'", str96, "");
        org.junit.Assert.assertNotNull(strItor97);
        org.junit.Assert.assertNotNull(strBuilder98);
        org.junit.Assert.assertNotNull(intStream99);
    }

    @Test
    public void test01874() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01874");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder18.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder18.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder18.replaceFirst('#', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder27.appendNull();
        java.io.Reader reader29 = strBuilder28.asReader();
        reader29.close();
        boolean boolean31 = reader29.markSupported();
        boolean boolean32 = reader29.markSupported();
        java.nio.CharBuffer charBuffer33 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int34 = reader29.read(charBuffer33);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(reader29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
    }

    @Test
    public void test01875() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01875");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("1");
        int int2 = strTokenizer1.previousIndex();
        org.junit.Assert.assertNotNull(strTokenizer1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
    }

    @Test
    public void test01876() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01876");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder18.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder24.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder26.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.appendln(10L);
        int int32 = strBuilder26.indexOf("#4#a4#", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder26.insert(1, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder23.appendln(strBuilder35);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder36.ensureCapacity(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder36.appendSeparator("001eslafnoitpecxEOI.oi.avaj0.11111111111111111111111", "4");
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder41);
    }

    @Test
    public void test01877() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01877");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.appendln(10L);
        int int8 = strBuilder2.indexOf("#4#a4#", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder2.appendSeparator("", 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder13.insert((int) '\000', 39);
        int int18 = strBuilder16.indexOf("va.io.IOExceptionfalse1001.");
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
    }

    @Test
    public void test01878() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01878");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.appendln(10L);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteFirst("");
        char[] charArray8 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder7.appendln(charArray8);
        boolean boolean10 = strBuilder7.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder12.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder14.clear();
        boolean boolean16 = strBuilder15.isEmpty();
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder19.deleteFirst("hi!");
        java.lang.String str22 = strBuilder21.getNullText();
        char[] charArray24 = new char[] { 'a' };
        char[] charArray25 = strBuilder21.getChars(charArray24);
        int int27 = strMatcher18.isMatch(charArray25, 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder15.append(charArray25);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder7.insert((int) (byte) 1, charArray25);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer(charArray25, "StrTokenizer[#4#a4#]");
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int35 = strBuilder32.indexOf(strMatcher34);
        char[] charArray42 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = new org.apache.commons.lang3.text.StrTokenizer(charArray42, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder32.appendAll((java.util.Iterator<java.lang.String>) strTokenizer44);
        java.lang.String str48 = strBuilder32.midString((int) (byte) 1, (-1));
        char[] charArray55 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = new org.apache.commons.lang3.text.StrTokenizer(charArray55, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = new org.apache.commons.lang3.text.StrTokenizer(charArray55);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer60 = strTokenizer58.setDelimiterChar('a');
        org.apache.commons.lang3.text.StrMatcher strMatcher61 = strTokenizer60.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder32.replaceFirst(strMatcher61, "java.io.IOException: ");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = strTokenizer31.setQuoteMatcher(strMatcher61);
        java.lang.String str65 = strTokenizer64.toString();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[a]");
        org.junit.Assert.assertNotNull(charArray25);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray25), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray25), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray25), "[a]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strMatcher34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertNotNull(charArray42);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray42), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray42), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray42), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "" + "'", str48, "");
        org.junit.Assert.assertNotNull(charArray55);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray55), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray55), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray55), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer60);
        org.junit.Assert.assertNotNull(strMatcher61);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strTokenizer64);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str65, "StrTokenizer[not tokenized yet]");
    }

    @Test
    public void test01879() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01879");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln((double) (short) 1);
        int int19 = strBuilder18.size();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.reverse();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 34 + "'", int19 == 34);
        org.junit.Assert.assertNotNull(strBuilder20);
    }

    @Test
    public void test01880() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01880");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("");
        int int2 = strBuilder1.length();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder3.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder5.clear();
        java.lang.Throwable throwable10 = null;
        java.io.IOException iOException11 = new java.io.IOException("", throwable10);
        java.io.IOException iOException12 = new java.io.IOException("#4#a4#", throwable10);
        java.io.IOException iOException13 = new java.io.IOException(throwable10);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray17 = new java.lang.Object[] { 1.0f, iOException13, false, 100, strBuilder16 };
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder6.appendWithSeparators(objArray17, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder19.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder21.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder21.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder21.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder21.replaceFirst('#', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder21.setLength((int) ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder21.ensureCapacity(15);
        java.util.stream.IntStream intStream35 = strBuilder21.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder1.appendln((java.lang.Object) strBuilder21);
        int int39 = strBuilder1.indexOf("StrTokenizer[1.0java.io.IOExceptionfalse1001.0, 35.0]", 3);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(objArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray17), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray17), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(intStream35);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
    }

    @Test
    public void test01881() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01881");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.String str5 = strBuilder3.rightString((int) (short) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder3.insert(0, "StrTokenizer[#4#a4#]");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher11 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int12 = strBuilder9.indexOf(strMatcher11);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder9.append("#4#a4#");
        java.lang.String str16 = strBuilder9.leftString((int) (short) 100);
        int int18 = strBuilder9.lastIndexOf("StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder9.insert(0, (-1.0f));
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder9.appendSeparator(' ');
        char[] charArray30 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = new org.apache.commons.lang3.text.StrTokenizer(charArray30, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = strTokenizer32.setDelimiterString("hi!");
        java.lang.String str35 = strTokenizer34.nextToken();
        java.util.List<java.lang.String> strList36 = strTokenizer34.getTokenList();
        org.apache.commons.lang3.text.StrMatcher strMatcher37 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = strTokenizer34.setTrimmerMatcher(strMatcher37);
        char[] charArray45 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = new org.apache.commons.lang3.text.StrTokenizer(charArray45, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = new org.apache.commons.lang3.text.StrTokenizer(charArray45);
        int int50 = strMatcher37.isMatch(charArray45, 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder23.append(charArray45);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder3.appendln((java.lang.Object) strBuilder23);
        int int53 = strBuilder52.size();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strMatcher11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "#4#a4#" + "'", str16, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray30), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray30), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray30), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "#4#a4#" + "'", str35, "#4#a4#");
        org.junit.Assert.assertNotNull(strList36);
        org.junit.Assert.assertNotNull(strMatcher37);
        org.junit.Assert.assertNotNull(strTokenizer38);
        org.junit.Assert.assertNotNull(charArray45);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray45), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray45), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray45), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 38 + "'", int53 == 38);
    }

    @Test
    public void test01882() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01882");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        char[] charArray10 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = new org.apache.commons.lang3.text.StrTokenizer(charArray10, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder0.appendAll((java.util.Iterator<java.lang.String>) strTokenizer12);
        java.lang.String str16 = strBuilder0.midString((int) (byte) 1, (-1));
        char[] charArray23 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = new org.apache.commons.lang3.text.StrTokenizer(charArray23, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = new org.apache.commons.lang3.text.StrTokenizer(charArray23);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = strTokenizer26.setDelimiterChar('a');
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = strTokenizer28.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder0.replaceFirst(strMatcher29, "java.io.IOException: ");
        int int32 = strBuilder31.length();
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer28);
        org.junit.Assert.assertNotNull(strMatcher29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 6 + "'", int32 == 6);
    }

    @Test
    public void test01883() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01883");
        char[] charArray6 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer8.setDelimiterString("hi!");
        boolean boolean11 = strTokenizer8.isIgnoreEmptyTokens();
        int int12 = strTokenizer8.nextIndex();
        int int13 = strTokenizer8.nextIndex();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = strTokenizer8.setIgnoreEmptyTokens(false);
        int int16 = strTokenizer8.previousIndex();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = strTokenizer8.reset("a");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int22 = strBuilder19.indexOf(strMatcher21);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder19.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder24.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder24.appendln((int) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder24.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int34 = strBuilder31.indexOf(strMatcher33);
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder30.deleteFirst(strMatcher33);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int39 = strBuilder36.indexOf(strMatcher38);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder36.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder41.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder43.deleteFirst('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder43.append('4');
        org.apache.commons.lang3.text.StrMatcher strMatcher48 = org.apache.commons.lang3.text.StrMatcher.quoteMatcher();
        int int50 = strBuilder47.lastIndexOf(strMatcher48, (int) (short) -1);
        int int51 = strBuilder35.indexOf(strMatcher48);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = strTokenizer18.setTrimmerMatcher(strMatcher48);
        java.lang.String[] strArray53 = strTokenizer18.getTokenArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = new org.apache.commons.lang3.text.StrTokenizer("hi!");
        java.lang.String str56 = strTokenizer55.previousToken();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = strTokenizer55.setQuoteChar(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder59.deleteFirst("hi!");
        java.lang.String str62 = strBuilder61.getNullText();
        char[] charArray64 = new char[] { 'a' };
        char[] charArray65 = strBuilder61.getChars(charArray64);
        char[] charArray70 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray71 = strBuilder61.getChars(charArray70);
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder61.appendln("java.io.IOException: ");
        char[] charArray80 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer82 = new org.apache.commons.lang3.text.StrTokenizer(charArray80, ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher84 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer85 = new org.apache.commons.lang3.text.StrTokenizer(charArray80, strMatcher84);
        org.apache.commons.lang3.text.StrBuilder strBuilder87 = strBuilder73.replaceFirst(strMatcher84, "#4#");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer88 = strTokenizer58.setTrimmerMatcher(strMatcher84);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer89 = strTokenizer18.setIgnoredMatcher(strMatcher84);
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer18.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: remove() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(strTokenizer15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer18);
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strMatcher38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strMatcher48);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer52);
        org.junit.Assert.assertNotNull(strArray53);
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertNotNull(strTokenizer58);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNull(str62);
        org.junit.Assert.assertNotNull(charArray64);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray64), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray64), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray64), "[a]");
        org.junit.Assert.assertNotNull(charArray65);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray65), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray65), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray65), "[a]");
        org.junit.Assert.assertNotNull(charArray70);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray70), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray70), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray70), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray71);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray71), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray71), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray71), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(charArray80);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray80), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray80), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray80), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher84);
        org.junit.Assert.assertNotNull(strBuilder87);
        org.junit.Assert.assertNotNull(strTokenizer88);
        org.junit.Assert.assertNotNull(strTokenizer89);
    }

    @Test
    public void test01884() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01884");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        java.lang.String str3 = strBuilder2.getNullText();
        char[] charArray5 = new char[] { 'a' };
        char[] charArray6 = strBuilder2.getChars(charArray5);
        char[] charArray11 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray12 = strBuilder2.getChars(charArray11);
        java.io.Reader reader13 = strBuilder2.asReader();
        reader13.mark(10);
        reader13.close();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder17.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder19.clear();
        char[] charArray26 = new char[] { 'a', 'a', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer(charArray26);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder19.appendln(charArray26);
        int int29 = reader13.read(charArray26);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder30.deleteFirst("hi!");
        java.lang.String str33 = strBuilder32.getNullText();
        char[] charArray35 = new char[] { 'a' };
        char[] charArray36 = strBuilder32.getChars(charArray35);
        char[] charArray41 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray42 = strBuilder32.getChars(charArray41);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = new org.apache.commons.lang3.text.StrTokenizer(charArray41);
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray41);
        int int45 = reader13.read(charArray41);
        reader13.close();
        boolean boolean47 = reader13.markSupported();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[a]");
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(reader13);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(charArray26);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray26), "aa4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray26), "aa4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray26), "[a, a, 4, #, 4]");
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[a]");
        org.junit.Assert.assertNotNull(charArray36);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray36), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray36), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray36), "[a]");
        org.junit.Assert.assertNotNull(charArray41);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray41), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray41), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray41), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray42);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray42), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray42), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray42), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(strMatcher44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
    }

    @Test
    public void test01885() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01885");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[#4#a4#]", "StrTokenizer[not tokenized yet]");
        boolean boolean3 = strTokenizer2.isEmptyTokenAsNull();
        java.util.List<java.lang.String> strList4 = strTokenizer2.getTokenList();
        int int5 = strList4.size();
        char[] charArray12 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strTokenizer14.setDelimiterString("hi!");
        java.lang.String str17 = strTokenizer16.nextToken();
        java.util.List<java.lang.String> strList18 = strTokenizer16.getTokenList();
        boolean boolean20 = strList18.add("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("");
        java.lang.String str23 = strTokenizer22.getContent();
        boolean boolean24 = strList18.equals((java.lang.Object) strTokenizer22);
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = org.apache.commons.lang3.text.StrMatcher.singleQuoteMatcher();
        boolean boolean26 = strList18.equals((java.lang.Object) strMatcher25);
        boolean boolean27 = strList4.addAll((java.util.Collection<java.lang.String>) strList18);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder((int) ' ');
        java.lang.String[] strArray33 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList34 = new java.util.ArrayList<java.lang.String>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList34, strArray33);
        char[] charArray42 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = new org.apache.commons.lang3.text.StrTokenizer(charArray42, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = strTokenizer44.setDelimiterString("hi!");
        boolean boolean47 = strTokenizer44.isIgnoreEmptyTokens();
        java.lang.String str48 = strTokenizer44.next();
        int int49 = strList34.indexOf((java.lang.Object) strTokenizer44);
        java.util.ListIterator<java.lang.String> strItor51 = strList34.listIterator((int) (byte) 0);
        java.util.Iterator<java.lang.String> strItor52 = strList34.iterator();
        char[] charArray59 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer61 = new org.apache.commons.lang3.text.StrTokenizer(charArray59, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer63 = strTokenizer61.setDelimiterString("hi!");
        boolean boolean64 = strTokenizer61.isIgnoreEmptyTokens();
        java.lang.String str65 = strTokenizer61.next();
        boolean boolean66 = strList34.equals((java.lang.Object) strTokenizer61);
        java.lang.Object[] objArray67 = strList34.toArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder29.appendWithSeparators((java.lang.Iterable<java.lang.String>) strList34, "1false0\nfalse");
        java.lang.Object[] objArray70 = strList34.toArray();
        boolean boolean71 = strList18.contains((java.lang.Object) strList34);
        boolean boolean73 = strList18.add("eptionfalse1001.0\n35.0\n1false0\n\n");
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.lang.String> strList76 = strList18.subList(24, (int) (short) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: fromIndex(24) > toIndex(1)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(strList4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "#4#a4#" + "'", str17, "#4#a4#");
        org.junit.Assert.assertNotNull(strList18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(strTokenizer22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(strMatcher25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(charArray42);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray42), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray42), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray42), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "#4#a4#" + "'", str48, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertNotNull(strItor51);
        org.junit.Assert.assertNotNull(strItor52);
        org.junit.Assert.assertNotNull(charArray59);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray59), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray59), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray59), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "#4#a4#" + "'", str65, "#4#a4#");
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(objArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray67), "[, , ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray67), "[, , ]");
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(objArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray70), "[, , ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray70), "[, , ]");
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
    }

    @Test
    public void test01886() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01886");
        char[] charArray6 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer8.setDelimiterString("hi!");
        java.lang.String str11 = strTokenizer10.nextToken();
        java.util.List<java.lang.String> strList12 = strTokenizer10.getTokenList();
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = strTokenizer10.setTrimmerMatcher(strMatcher13);
        java.lang.String str15 = strTokenizer14.getContent();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = strTokenizer14.setDelimiterChar('a');
        int int18 = strTokenizer17.size();
        boolean boolean19 = strTokenizer17.hasNext();
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "#4#a4#" + "'", str11, "#4#a4#");
        org.junit.Assert.assertNotNull(strList12);
        org.junit.Assert.assertNotNull(strMatcher13);
        org.junit.Assert.assertNotNull(strTokenizer14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "#4#a4#" + "'", str15, "#4#a4#");
        org.junit.Assert.assertNotNull(strTokenizer17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    }

    @Test
    public void test01887() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01887");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder18.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.append("java.io.IOException: ");
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.reverse();
        boolean boolean27 = strBuilder23.isEmpty();
        java.io.Reader reader28 = strBuilder23.asReader();
        char[] charArray35 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = new org.apache.commons.lang3.text.StrTokenizer(charArray35, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = strTokenizer37.setDelimiterString("hi!");
        java.lang.String str40 = strTokenizer39.nextToken();
        java.util.List<java.lang.String> strList41 = strTokenizer39.getTokenList();
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = strTokenizer39.setTrimmerMatcher(strMatcher42);
        char[] charArray50 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = new org.apache.commons.lang3.text.StrTokenizer(charArray50, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = new org.apache.commons.lang3.text.StrTokenizer(charArray50);
        int int55 = strMatcher42.isMatch(charArray50, 0);
        org.apache.commons.lang3.text.StrMatcher strMatcher56 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray50);
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher60 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int61 = strBuilder58.indexOf(strMatcher60);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer62 = new org.apache.commons.lang3.text.StrTokenizer("#4#a4#", strMatcher60);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer63 = new org.apache.commons.lang3.text.StrTokenizer(charArray50, strMatcher60);
        // The following exception was thrown during execution in test generation
        try {
            int int66 = reader28.read(charArray50, 6, (int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: null");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(reader28);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "#4#a4#" + "'", str40, "#4#a4#");
        org.junit.Assert.assertNotNull(strList41);
        org.junit.Assert.assertNotNull(strMatcher42);
        org.junit.Assert.assertNotNull(strTokenizer43);
        org.junit.Assert.assertNotNull(charArray50);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray50), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray50), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray50), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertNotNull(strMatcher56);
        org.junit.Assert.assertNotNull(strMatcher60);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + (-1) + "'", int61 == (-1));
    }

    @Test
    public void test01888() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01888");
        java.io.IOException iOException1 = new java.io.IOException("10\n\n");
        java.io.IOException iOException2 = new java.io.IOException((java.lang.Throwable) iOException1);
        java.lang.String str3 = iOException1.toString();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "java.io.IOException: 10\n\n" + "'", str3, "java.io.IOException: 10\n\n");
    }

    @Test
    public void test01889() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01889");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder5.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder6.replaceAll("a", " 10\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder10.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder12.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder12.insert(0, (double) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder16.appendFixedWidthPadRight((java.lang.Object) 100.0d, 1, '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder20.trim();
        java.lang.Object[] objArray22 = new java.lang.Object[] {};
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder20.appendAll(objArray22);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder9.appendWithSeparators(objArray22, "java.io.IOException: StrTokenizer[#4#a4#]");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("1");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder9.appendAll((java.util.Iterator<java.lang.String>) strTokenizer27);
        java.lang.Class<?> wildcardClass29 = strBuilder28.getClass();
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(objArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray22), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray22), "[]");
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strTokenizer27);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(wildcardClass29);
    }

    @Test
    public void test01890() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01890");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        char[] charArray10 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = new org.apache.commons.lang3.text.StrTokenizer(charArray10, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder0.appendAll((java.util.Iterator<java.lang.String>) strTokenizer12);
        java.lang.String str16 = strBuilder0.midString((int) (byte) 1, (-1));
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder17.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder19.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.appendln(10L);
        int int25 = strBuilder19.indexOf("#4#a4#", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder19.appendSeparator("", 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder19.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder19.append("java.io.IOException: ");
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder0.append((java.lang.Object) strBuilder31);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder33.deleteFirst("hi!");
        java.lang.String str36 = strBuilder35.getNullText();
        char[] charArray38 = new char[] { 'a' };
        char[] charArray39 = strBuilder35.getChars(charArray38);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = new org.apache.commons.lang3.text.StrTokenizer(charArray38, ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray38);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder0.appendln(charArray38);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder44.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder46.clear();
        java.lang.String str49 = strBuilder47.rightString((int) (short) -1);
        java.lang.String str51 = strBuilder47.rightString((int) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder47.append((double) (byte) 100);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = new org.apache.commons.lang3.text.StrTokenizer("4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder47.appendFixedWidthPadLeft((java.lang.Object) "4#", 51, '3');
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder43.appendln(strBuilder58, 24, 100);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: length must be valid");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[a]");
        org.junit.Assert.assertNotNull(charArray39);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray39), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray39), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray39), "[a]");
        org.junit.Assert.assertNotNull(strMatcher42);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "" + "'", str49, "");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "" + "'", str51, "");
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder58);
    }

    @Test
    public void test01891() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01891");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int5 = strBuilder2.indexOf(strMatcher4);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder2.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder7.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder7.appendln((int) (short) 10);
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.spaceMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder7.replace(strMatcher12, "StrTokenizer[#4#a4#]", (int) (short) 1, 1, (int) (byte) 10);
        int int19 = strBuilder1.lastIndexOf(strMatcher12, (int) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int23 = strBuilder20.indexOf(strMatcher22);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder20.append("#4#a4#");
        java.lang.String str27 = strBuilder20.leftString((int) (short) 100);
        int int29 = strBuilder20.lastIndexOf("StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder20.insert(0, (-1.0f));
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder20.appendSeparator(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder20.appendln((int) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder20.insert(0, 1.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder40.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder42.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder42.appendln(10L);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder45.deleteFirst("");
        char[] charArray48 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder47.appendln(charArray48);
        boolean boolean50 = strBuilder47.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder52.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder54.clear();
        boolean boolean56 = strBuilder55.isEmpty();
        org.apache.commons.lang3.text.StrMatcher strMatcher58 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder59.deleteFirst("hi!");
        java.lang.String str62 = strBuilder61.getNullText();
        char[] charArray64 = new char[] { 'a' };
        char[] charArray65 = strBuilder61.getChars(charArray64);
        int int67 = strMatcher58.isMatch(charArray65, 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder55.append(charArray65);
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder47.insert((int) (byte) 1, charArray65);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer71 = new org.apache.commons.lang3.text.StrTokenizer(charArray65, "StrTokenizer[#4#a4#]");
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder39.appendln(charArray65);
        // The following exception was thrown during execution in test generation
        try {
            int int76 = strMatcher12.isMatch(charArray65, (int) '0', 2, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(strMatcher22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "#4#a4#" + "'", str27, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(strMatcher58);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNull(str62);
        org.junit.Assert.assertNotNull(charArray64);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray64), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray64), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray64), "[a]");
        org.junit.Assert.assertNotNull(charArray65);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray65), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray65), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray65), "[a]");
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 0 + "'", int67 == 0);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strBuilder72);
    }

    @Test
    public void test01892() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01892");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("4");
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer1.add("aa4#4\n");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: add() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strTokenizer1);
    }

    @Test
    public void test01893() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01893");
        java.lang.String[] strArray3 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList4 = new java.util.ArrayList<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        char[] charArray12 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strTokenizer14.setDelimiterString("hi!");
        boolean boolean17 = strTokenizer14.isIgnoreEmptyTokens();
        java.lang.String str18 = strTokenizer14.next();
        int int19 = strList4.indexOf((java.lang.Object) strTokenizer14);
        java.util.ListIterator<java.lang.String> strItor21 = strList4.listIterator((int) (byte) 0);
        java.util.Iterator<java.lang.String> strItor22 = strList4.iterator();
        java.lang.String[] strArray26 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList27 = new java.util.ArrayList<java.lang.String>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList27, strArray26);
        char[] charArray35 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = new org.apache.commons.lang3.text.StrTokenizer(charArray35, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = strTokenizer37.setDelimiterString("hi!");
        boolean boolean40 = strTokenizer37.isIgnoreEmptyTokens();
        java.lang.String str41 = strTokenizer37.next();
        int int42 = strList27.indexOf((java.lang.Object) strTokenizer37);
        boolean boolean43 = strList4.addAll((java.util.Collection<java.lang.String>) strList27);
        java.lang.String[] strArray47 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList48 = new java.util.ArrayList<java.lang.String>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList48, strArray47);
        char[] charArray56 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = new org.apache.commons.lang3.text.StrTokenizer(charArray56, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer60 = strTokenizer58.setDelimiterString("hi!");
        boolean boolean61 = strTokenizer58.isIgnoreEmptyTokens();
        java.lang.String str62 = strTokenizer58.next();
        int int63 = strList48.indexOf((java.lang.Object) strTokenizer58);
        java.util.ListIterator<java.lang.String> strItor65 = strList48.listIterator((int) (byte) 0);
        java.util.Iterator<java.lang.String> strItor66 = strList48.iterator();
        java.lang.String[] strArray70 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList71 = new java.util.ArrayList<java.lang.String>();
        boolean boolean72 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList71, strArray70);
        char[] charArray79 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer81 = new org.apache.commons.lang3.text.StrTokenizer(charArray79, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer83 = strTokenizer81.setDelimiterString("hi!");
        boolean boolean84 = strTokenizer81.isIgnoreEmptyTokens();
        java.lang.String str85 = strTokenizer81.next();
        int int86 = strList71.indexOf((java.lang.Object) strTokenizer81);
        java.util.ListIterator<java.lang.String> strItor88 = strList71.listIterator((int) (byte) 0);
        java.util.Iterator<java.lang.String> strItor89 = strList71.iterator();
        boolean boolean90 = strList48.remove((java.lang.Object) strItor89);
        boolean boolean91 = strList4.removeAll((java.util.Collection<java.lang.String>) strList48);
        java.util.Spliterator<java.lang.String> strSpliterator92 = strList4.spliterator();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str94 = strList4.get(31);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 31, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "#4#a4#" + "'", str18, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(strItor21);
        org.junit.Assert.assertNotNull(strItor22);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "#4#a4#" + "'", str41, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(charArray56);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray56), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray56), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray56), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "#4#a4#" + "'", str62, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + (-1) + "'", int63 == (-1));
        org.junit.Assert.assertNotNull(strItor65);
        org.junit.Assert.assertNotNull(strItor66);
        org.junit.Assert.assertNotNull(strArray70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(charArray79);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray79), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray79), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray79), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "#4#a4#" + "'", str85, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + (-1) + "'", int86 == (-1));
        org.junit.Assert.assertNotNull(strItor88);
        org.junit.Assert.assertNotNull(strItor89);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
        org.junit.Assert.assertNotNull(strSpliterator92);
    }

    @Test
    public void test01894() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01894");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder18.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder24.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder26.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.appendln(10L);
        int int32 = strBuilder26.indexOf("#4#a4#", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder26.insert(1, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder23.appendln(strBuilder35);
        java.io.Writer writer37 = strBuilder36.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder38.deleteFirst("hi!");
        java.lang.String str41 = strBuilder40.getNullText();
        char[] charArray43 = new char[] { 'a' };
        char[] charArray44 = strBuilder40.getChars(charArray43);
        char[] charArray49 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray50 = strBuilder40.getChars(charArray49);
        writer37.write(charArray49);
        writer37.write("10\n\n");
        writer37.write(10);
        writer37.flush();
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder57.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder59.clear();
        java.lang.Throwable throwable64 = null;
        java.io.IOException iOException65 = new java.io.IOException("", throwable64);
        java.io.IOException iOException66 = new java.io.IOException("#4#a4#", throwable64);
        java.io.IOException iOException67 = new java.io.IOException(throwable64);
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray71 = new java.lang.Object[] { 1.0f, iOException67, false, 100, strBuilder70 };
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder60.appendWithSeparators(objArray71, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder73.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder75.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder75.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder75.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder84 = strBuilder75.replaceFirst('#', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder86 = strBuilder75.setLength((int) ' ');
        char[] charArray89 = strBuilder86.toCharArray((int) ' ', (int) 'a');
        writer37.write(charArray89);
        java.io.Writer writer92 = writer37.append(' ');
        writer92.flush();
        java.io.Writer writer95 = writer92.append('1');
        writer92.write((int) (byte) 0);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(writer37);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNotNull(charArray43);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray43), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray43), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray43), "[a]");
        org.junit.Assert.assertNotNull(charArray44);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray44), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray44), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray44), "[a]");
        org.junit.Assert.assertNotNull(charArray49);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray49), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray49), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray49), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray50);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray50), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray50), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray50), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(objArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray71), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray71), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertNotNull(strBuilder81);
        org.junit.Assert.assertNotNull(strBuilder84);
        org.junit.Assert.assertNotNull(strBuilder86);
        org.junit.Assert.assertNotNull(charArray89);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray89), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray89), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray89), "[]");
        org.junit.Assert.assertNotNull(writer92);
        org.junit.Assert.assertNotNull(writer95);
    }

    @Test
    public void test01895() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01895");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteAll(' ');
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder7.insert((int) '1', "false");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 49");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
    }

    @Test
    public void test01896() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01896");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder((int) (short) 0);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = new org.apache.commons.lang3.text.StrTokenizer("", "#4#a4#");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = strTokenizer4.setQuoteChar('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer6.setEmptyTokenAsNull(false);
        char[] charArray15 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray15, ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = new org.apache.commons.lang3.text.StrTokenizer(charArray15, strMatcher19);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher23 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int24 = strBuilder21.indexOf(strMatcher23);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder21.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int30 = strBuilder27.indexOf(strMatcher29);
        int int31 = strBuilder21.indexOf(strMatcher29);
        char[] charArray38 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = new org.apache.commons.lang3.text.StrTokenizer(charArray38, ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = new org.apache.commons.lang3.text.StrTokenizer(charArray38, strMatcher42);
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = strTokenizer43.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = new org.apache.commons.lang3.text.StrTokenizer(charArray15, strMatcher29, strMatcher44);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = strTokenizer6.setDelimiterMatcher(strMatcher44);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder47.deleteFirst("hi!");
        java.lang.String str50 = strBuilder49.getNullText();
        char[] charArray52 = new char[] { 'a' };
        char[] charArray53 = strBuilder49.getChars(charArray52);
        java.lang.StringBuffer stringBuffer54 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder49.append(stringBuffer54);
        java.io.Writer writer56 = strBuilder55.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder57.deleteFirst("hi!");
        java.lang.String str60 = strBuilder59.getNullText();
        char[] charArray62 = new char[] { 'a' };
        char[] charArray63 = strBuilder59.getChars(charArray62);
        char[] charArray68 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray69 = strBuilder59.getChars(charArray68);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer70 = new org.apache.commons.lang3.text.StrTokenizer(charArray68);
        writer56.write(charArray68);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer72 = strTokenizer46.reset(charArray68);
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder1.append(charArray68);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer75 = new org.apache.commons.lang3.text.StrTokenizer(charArray68, "StrTokenizer[#4#a4#]");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer76 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray68);
        java.util.List<java.lang.String> strList77 = strTokenizer76.getTokenList();
        java.lang.String str78 = strTokenizer76.next();
        org.junit.Assert.assertNotNull(strTokenizer6);
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertNotNull(charArray15);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray15), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray15), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray15), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertNotNull(strMatcher23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strMatcher29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher42);
        org.junit.Assert.assertNotNull(strMatcher44);
        org.junit.Assert.assertNotNull(strTokenizer46);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertNotNull(charArray52);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray52), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray52), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray52), "[a]");
        org.junit.Assert.assertNotNull(charArray53);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray53), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray53), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray53), "[a]");
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(writer56);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNull(str60);
        org.junit.Assert.assertNotNull(charArray62);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray62), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray62), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray62), "[a]");
        org.junit.Assert.assertNotNull(charArray63);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray63), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray63), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray63), "[a]");
        org.junit.Assert.assertNotNull(charArray68);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray68), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray68), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray68), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray69);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray69), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray69), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray69), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(strTokenizer72);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(strTokenizer76);
        org.junit.Assert.assertNotNull(strList77);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "a4 4" + "'", str78, "a4 4");
    }

    @Test
    public void test01897() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01897");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("1.0java.io.IOExceptionfalse1001.0\n35.0\n52.02");
        java.lang.String str2 = strTokenizer1.getContent();
        org.junit.Assert.assertNotNull(strTokenizer1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "1.0java.io.IOExceptionfalse1001.0\n35.0\n52.02" + "'", str2, "1.0java.io.IOExceptionfalse1001.0\n35.0\n52.02");
    }

    @Test
    public void test01898() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01898");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.appendln(10L);
        int int8 = strBuilder2.indexOf("#4#a4#", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder2.insert(1, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int15 = strBuilder12.indexOf(strMatcher14);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder12.append("#4#a4#");
        java.lang.String str19 = strBuilder12.leftString((int) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int23 = strBuilder20.indexOf(strMatcher22);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder20.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder25.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder25.append(false);
        char[] charArray36 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = new org.apache.commons.lang3.text.StrTokenizer(charArray36, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = strTokenizer38.setDelimiterString("hi!");
        boolean boolean41 = strTokenizer38.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder25.appendFixedWidthPadRight((java.lang.Object) strTokenizer38, 10, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher47 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int48 = strBuilder45.indexOf(strMatcher47);
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder45.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder50.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder50.appendln((int) (short) 10);
        boolean boolean55 = strBuilder25.equalsIgnoreCase(strBuilder50);
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder25.reverse();
        java.lang.StringBuffer stringBuffer57 = strBuilder56.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder12.append(stringBuffer57, (int) (byte) 0, 2);
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder11.append(stringBuffer57);
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher64 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int65 = strBuilder62.indexOf(strMatcher64);
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder62.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder67.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder67.append((int) (short) -1);
        boolean boolean72 = strBuilder11.equalsIgnoreCase(strBuilder71);
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder11.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder74.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher79 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int80 = strBuilder77.indexOf(strMatcher79);
        char[] charArray87 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer89 = new org.apache.commons.lang3.text.StrTokenizer(charArray87, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder90 = strBuilder77.appendAll((java.util.Iterator<java.lang.String>) strTokenizer89);
        org.apache.commons.lang3.text.StrBuilder strBuilder92 = strBuilder74.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer89, "");
        int int93 = strBuilder74.length();
        org.apache.commons.lang3.text.StrBuilder strBuilder94 = strBuilder73.appendln((java.lang.Object) strBuilder74);
        java.io.IOException iOException96 = new java.io.IOException("StrTokenizer[not tokenized yet]");
        java.io.IOException iOException97 = new java.io.IOException((java.lang.Throwable) iOException96);
        java.lang.Throwable[] throwableArray98 = iOException97.getSuppressed();
        org.apache.commons.lang3.text.StrBuilder strBuilder99 = strBuilder74.appendAll((java.lang.Object[]) throwableArray98);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "#4#a4#" + "'", str19, "#4#a4#");
        org.junit.Assert.assertNotNull(strMatcher22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(charArray36);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray36), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray36), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray36), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strMatcher47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(stringBuffer57);
        org.junit.Assert.assertEquals(stringBuffer57.toString(), "zinekoTrtSeslaf ");
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strMatcher64);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + (-1) + "'", int65 == (-1));
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNotNull(strMatcher79);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + (-1) + "'", int80 == (-1));
        org.junit.Assert.assertNotNull(charArray87);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray87), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray87), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray87), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strBuilder90);
        org.junit.Assert.assertNotNull(strBuilder92);
        org.junit.Assert.assertTrue("'" + int93 + "' != '" + 0 + "'", int93 == 0);
        org.junit.Assert.assertNotNull(strBuilder94);
        org.junit.Assert.assertNotNull(throwableArray98);
        org.junit.Assert.assertNotNull(strBuilder99);
    }

    @Test
    public void test01899() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01899");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = new org.apache.commons.lang3.text.StrTokenizer("hi!");
        java.lang.String str2 = strTokenizer1.previousToken();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = strTokenizer1.setQuoteChar(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteFirst("hi!");
        java.lang.String str8 = strBuilder7.getNullText();
        char[] charArray10 = new char[] { 'a' };
        char[] charArray11 = strBuilder7.getChars(charArray10);
        char[] charArray16 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray17 = strBuilder7.getChars(charArray16);
        java.io.Reader reader18 = strBuilder7.asReader();
        reader18.mark(10);
        reader18.close();
        boolean boolean22 = reader18.markSupported();
        int int23 = reader18.read();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder24.deleteFirst("hi!");
        java.lang.String str27 = strBuilder26.getNullText();
        char[] charArray29 = new char[] { 'a' };
        char[] charArray30 = strBuilder26.getChars(charArray29);
        char[] charArray35 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray36 = strBuilder26.getChars(charArray35);
        java.io.Reader reader37 = strBuilder26.asReader();
        long long39 = reader37.skip((long) 59);
        char[] charArray46 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = new org.apache.commons.lang3.text.StrTokenizer(charArray46, ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher50 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = new org.apache.commons.lang3.text.StrTokenizer(charArray46, strMatcher50);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher54 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int55 = strBuilder52.indexOf(strMatcher54);
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder52.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher60 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int61 = strBuilder58.indexOf(strMatcher60);
        int int62 = strBuilder52.indexOf(strMatcher60);
        char[] charArray69 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer71 = new org.apache.commons.lang3.text.StrTokenizer(charArray69, ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher73 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer74 = new org.apache.commons.lang3.text.StrTokenizer(charArray69, strMatcher73);
        org.apache.commons.lang3.text.StrMatcher strMatcher75 = strTokenizer74.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer76 = new org.apache.commons.lang3.text.StrTokenizer(charArray46, strMatcher60, strMatcher75);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer77 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray46);
        int int78 = reader37.read(charArray46);
        int int79 = reader18.read(charArray46);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer80 = strTokenizer4.reset(charArray46);
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer80.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: remove() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNotNull(strTokenizer4);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[a]");
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray17), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray17), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray17), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(reader18);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(charArray29);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray29), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray29), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray29), "[a]");
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray30), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray30), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray30), "[a]");
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray36);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray36), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray36), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray36), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(reader37);
        org.junit.Assert.assertTrue("'" + long39 + "' != '" + 0L + "'", long39 == 0L);
        org.junit.Assert.assertNotNull(charArray46);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray46), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray46), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray46), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher50);
        org.junit.Assert.assertNotNull(strMatcher54);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1));
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strMatcher60);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + (-1) + "'", int61 == (-1));
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + (-1) + "'", int62 == (-1));
        org.junit.Assert.assertNotNull(charArray69);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray69), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray69), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray69), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher73);
        org.junit.Assert.assertNotNull(strMatcher75);
        org.junit.Assert.assertNotNull(strTokenizer77);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + (-1) + "'", int78 == (-1));
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + (-1) + "'", int79 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer80);
    }

    @Test
    public void test01900() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01900");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = new org.apache.commons.lang3.text.StrTokenizer("4");
    }

    @Test
    public void test01901() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01901");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.appendln(10L);
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.appendln(strBuilder6, 1, (int) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder10.deleteFirst("hi!");
        java.lang.String str13 = strBuilder12.getNullText();
        char[] charArray15 = new char[] { 'a' };
        char[] charArray16 = strBuilder12.getChars(charArray15);
        char[] charArray21 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray22 = strBuilder12.getChars(charArray21);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder12.appendln("java.io.IOException: ");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder9.append(strBuilder24, 5, (int) (short) 1);
        int int29 = strBuilder27.indexOf("zinekoTrtSeslaf ");
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder27.insert((int) (short) 100, 0.0f);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 100");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(charArray15);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray15), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray15), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray15), "[a]");
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[a]");
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray21), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray21), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray21), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray22), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray22), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray22), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
    }

    @Test
    public void test01902() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01902");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder18.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.append("java.io.IOException: ");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder23.appendln((double) 10.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder28.deleteFirst("hi!");
        java.lang.String str31 = strBuilder30.getNullText();
        char[] charArray33 = new char[] { 'a' };
        char[] charArray34 = strBuilder30.getChars(charArray33);
        char[] charArray39 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray40 = strBuilder30.getChars(charArray39);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = new org.apache.commons.lang3.text.StrTokenizer(charArray39, 'a');
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder27.append(charArray39, 70, 4);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: Invalid startIndex: 4");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNotNull(charArray33);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray33), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray33), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray33), "[a]");
        org.junit.Assert.assertNotNull(charArray34);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray34), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray34), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray34), "[a]");
        org.junit.Assert.assertNotNull(charArray39);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray39), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray39), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray39), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray40);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray40), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray40), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray40), "[a, 4,  , 4]");
    }

    @Test
    public void test01903() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01903");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.appendln(10L);
        int int8 = strBuilder2.indexOf("#4#a4#", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder2.insert(1, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder2.setLength(1);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder2.replaceAll("1false0\n", " ");
        java.lang.String str17 = strBuilder16.toString();
        java.lang.StringBuffer stringBuffer18 = strBuilder16.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder19.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder21.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder21.appendln(10L);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder21.setNewLineText("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder21.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder28.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder21.appendln(strBuilder28);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder21.appendSeparator('4', 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder34.clear();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder16.appendln(strBuilder34, (int) ' ', 51);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: startIndex must be valid");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "1" + "'", str17, "1");
        org.junit.Assert.assertNotNull(stringBuffer18);
        org.junit.Assert.assertEquals(stringBuffer18.toString(), "1");
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder35);
    }

    @Test
    public void test01904() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01904");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        java.lang.String str18 = strBuilder3.substring(2);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder3.deleteFirst("a");
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder20.deleteAll(strMatcher21);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder20.appendNull();
        // The following exception was thrown during execution in test generation
        try {
            char[] charArray26 = strBuilder23.toCharArray(30, (int) 'e');
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: end < start");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "0java.io.IOExceptionfalse100" + "'", str18, "0java.io.IOExceptionfalse100");
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder23);
    }

    @Test
    public void test01905() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01905");
        char[] charArray6 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = new org.apache.commons.lang3.text.StrTokenizer(charArray6);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray6);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray6);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder12.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder14.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.appendln(10L);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder17.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.replaceFirst('a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("100.01210\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder19.replace(strMatcher24, "100.01210\n", 3, 52, 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder30.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder32.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder32.insert(0, (double) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder36.replaceAll("StrTokenizer[not tokenized yet]", "StrTokenizer[#4#a4#]");
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = new org.apache.commons.lang3.text.StrBuilder(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int45 = strBuilder42.indexOf(strMatcher44);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder42.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder47.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder47.appendln((int) (short) 10);
        org.apache.commons.lang3.text.StrMatcher strMatcher52 = org.apache.commons.lang3.text.StrMatcher.spaceMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder47.replace(strMatcher52, "StrTokenizer[#4#a4#]", (int) (short) 1, 1, (int) (byte) 10);
        int int59 = strBuilder41.lastIndexOf(strMatcher52, (int) (short) 100);
        int int61 = strBuilder36.lastIndexOf(strMatcher52, 6);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer62 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, strMatcher24, strMatcher52);
        boolean boolean63 = strTokenizer62.hasNext();
        java.lang.String str64 = strTokenizer62.toString();
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertNotNull(strTokenizer11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strMatcher44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strMatcher52);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-1) + "'", int59 == (-1));
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + (-1) + "'", int61 == (-1));
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "StrTokenizer[#4#a4#]" + "'", str64, "StrTokenizer[#4#a4#]");
    }

    @Test
    public void test01906() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01906");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.append(false);
        boolean boolean11 = strBuilder9.contains("hi!");
        int int13 = strBuilder9.lastIndexOf("1");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder16.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder16.appendln(10L);
        int int22 = strBuilder16.indexOf("#4#a4#", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder16.appendSeparator("", 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder25.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder9.appendln(strBuilder25, 3, 5);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder25.append(38L);
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder32);
    }

    @Test
    public void test01907() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01907");
        java.lang.String[] strArray3 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList4 = new java.util.ArrayList<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        char[] charArray12 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strTokenizer14.setDelimiterString("hi!");
        boolean boolean17 = strTokenizer14.isIgnoreEmptyTokens();
        java.lang.String str18 = strTokenizer14.next();
        int int19 = strList4.indexOf((java.lang.Object) strTokenizer14);
        java.util.ListIterator<java.lang.String> strItor21 = strList4.listIterator((int) (byte) 0);
        java.util.Iterator<java.lang.String> strItor22 = strList4.iterator();
        java.lang.String[] strArray26 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList27 = new java.util.ArrayList<java.lang.String>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList27, strArray26);
        char[] charArray35 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = new org.apache.commons.lang3.text.StrTokenizer(charArray35, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = strTokenizer37.setDelimiterString("hi!");
        boolean boolean40 = strTokenizer37.isIgnoreEmptyTokens();
        java.lang.String str41 = strTokenizer37.next();
        int int42 = strList27.indexOf((java.lang.Object) strTokenizer37);
        boolean boolean43 = strList4.addAll((java.util.Collection<java.lang.String>) strList27);
        java.util.ListIterator<java.lang.String> strItor44 = strList27.listIterator();
        char[] charArray51 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = new org.apache.commons.lang3.text.StrTokenizer(charArray51, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = strTokenizer53.setDelimiterString("hi!");
        java.lang.String str56 = strTokenizer55.nextToken();
        java.util.List<java.lang.String> strList57 = strTokenizer55.getTokenList();
        boolean boolean59 = strList57.add("hi!");
        boolean boolean60 = strList27.retainAll((java.util.Collection<java.lang.String>) strList57);
        java.util.Iterator<java.lang.String> strItor61 = strList57.iterator();
        int int62 = strList57.size();
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "#4#a4#" + "'", str18, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(strItor21);
        org.junit.Assert.assertNotNull(strItor22);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "#4#a4#" + "'", str41, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(strItor44);
        org.junit.Assert.assertNotNull(charArray51);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray51), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray51), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray51), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer55);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "#4#a4#" + "'", str56, "#4#a4#");
        org.junit.Assert.assertNotNull(strList57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(strItor61);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 2 + "'", int62 == 2);
    }

    @Test
    public void test01908() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01908");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        java.lang.String str3 = strBuilder2.getNullText();
        char[] charArray5 = new char[] { 'a' };
        char[] charArray6 = strBuilder2.getChars(charArray5);
        char[] charArray11 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray12 = strBuilder2.getChars(charArray11);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray12);
        char[] charArray20 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = new org.apache.commons.lang3.text.StrTokenizer(charArray20, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer(charArray20);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = strTokenizer13.reset(charArray20);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder25.deleteFirst("hi!");
        java.lang.String str28 = strBuilder27.getNullText();
        char[] charArray30 = new char[] { 'a' };
        char[] charArray31 = strBuilder27.getChars(charArray30);
        char[] charArray36 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray37 = strBuilder27.getChars(charArray36);
        java.io.Reader reader38 = strBuilder27.asReader();
        reader38.mark((int) (byte) 0);
        char[] charArray47 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = new org.apache.commons.lang3.text.StrTokenizer(charArray47, ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher51 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = new org.apache.commons.lang3.text.StrTokenizer(charArray47, strMatcher51);
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher55 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int56 = strBuilder53.indexOf(strMatcher55);
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder53.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher61 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int62 = strBuilder59.indexOf(strMatcher61);
        int int63 = strBuilder53.indexOf(strMatcher61);
        char[] charArray70 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer72 = new org.apache.commons.lang3.text.StrTokenizer(charArray70, ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher74 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer75 = new org.apache.commons.lang3.text.StrTokenizer(charArray70, strMatcher74);
        org.apache.commons.lang3.text.StrMatcher strMatcher76 = strTokenizer75.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer77 = new org.apache.commons.lang3.text.StrTokenizer(charArray47, strMatcher61, strMatcher76);
        int int78 = reader38.read(charArray47);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer79 = strTokenizer13.reset(charArray47);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer80 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray47);
        boolean boolean81 = strTokenizer80.hasNext();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str82 = strTokenizer80.previous();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[a]");
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(strTokenizer13);
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray20), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray20), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray20), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer24);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray30), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray30), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray30), "[a]");
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray31), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray31), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray31), "[a]");
        org.junit.Assert.assertNotNull(charArray36);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray36), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray36), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray36), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray37);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray37), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray37), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray37), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(reader38);
        org.junit.Assert.assertNotNull(charArray47);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray47), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray47), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray47), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher51);
        org.junit.Assert.assertNotNull(strMatcher55);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1));
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strMatcher61);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + (-1) + "'", int62 == (-1));
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + (-1) + "'", int63 == (-1));
        org.junit.Assert.assertNotNull(charArray70);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray70), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray70), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray70), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher74);
        org.junit.Assert.assertNotNull(strMatcher76);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + (-1) + "'", int78 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer79);
        org.junit.Assert.assertNotNull(strTokenizer80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
    }

    @Test
    public void test01909() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01909");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("", "#4#a4#");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = strTokenizer2.setQuoteChar('4');
        int int5 = strTokenizer4.size();
        java.lang.String str6 = strTokenizer4.getContent();
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer4.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: remove() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strTokenizer4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
    }

    @Test
    public void test01910() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01910");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.String str5 = strBuilder3.rightString((int) (short) -1);
        java.lang.String str7 = strBuilder3.rightString((int) (short) 100);
        int int9 = strBuilder3.indexOf('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder10.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder12.clear();
        int int14 = strBuilder12.capacity();
        java.lang.StringBuffer stringBuffer15 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder12.appendln(stringBuffer15, (int) (byte) 1, (int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder12.insert(0, false);
        char[] charArray28 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = new org.apache.commons.lang3.text.StrTokenizer(charArray28, ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray28, strMatcher32);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int37 = strBuilder34.indexOf(strMatcher36);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder34.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int43 = strBuilder40.indexOf(strMatcher42);
        int int44 = strBuilder34.indexOf(strMatcher42);
        char[] charArray51 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = new org.apache.commons.lang3.text.StrTokenizer(charArray51, ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher55 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = new org.apache.commons.lang3.text.StrTokenizer(charArray51, strMatcher55);
        org.apache.commons.lang3.text.StrMatcher strMatcher57 = strTokenizer56.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = new org.apache.commons.lang3.text.StrTokenizer(charArray28, strMatcher42, strMatcher57);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer59 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray28);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer60 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray28);
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder21.append(charArray28);
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder3.append(strBuilder61);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder61.delete((int) 'e', 19);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: end < start");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 32 + "'", int14 == 32);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(charArray28);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray28), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray28), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray28), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher32);
        org.junit.Assert.assertNotNull(strMatcher36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strMatcher42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertNotNull(charArray51);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray51), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray51), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray51), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher55);
        org.junit.Assert.assertNotNull(strMatcher57);
        org.junit.Assert.assertNotNull(strTokenizer59);
        org.junit.Assert.assertNotNull(strTokenizer60);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder62);
    }

    @Test
    public void test01911() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01911");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder18.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder18.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder18.replaceFirst('#', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder27.appendNull();
        java.io.Reader reader29 = strBuilder28.asReader();
        reader29.close();
        boolean boolean31 = reader29.markSupported();
        reader29.close();
        reader29.mark(33);
        boolean boolean35 = reader29.ready();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(reader29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
    }

    @Test
    public void test01912() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01912");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = strTokenizer1.setQuoteChar('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.String str5 = strBuilder4.getNullText();
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder7.deleteFirst("hi!");
        java.lang.String str10 = strBuilder9.getNullText();
        char[] charArray12 = new char[] { 'a' };
        char[] charArray13 = strBuilder9.getChars(charArray12);
        int int17 = strMatcher6.isMatch(charArray13, 0, 0, (int) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder4.replaceAll(strMatcher6, "java.io.IOException: ");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = strTokenizer3.setTrimmerMatcher(strMatcher6);
        java.lang.String str21 = strTokenizer3.next();
        boolean boolean22 = strTokenizer3.hasNext();
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer3.add("#4#a4#");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: add() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strTokenizer1);
        org.junit.Assert.assertNotNull(strTokenizer3);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[a]");
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[a]");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strTokenizer20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str21, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
    }

    @Test
    public void test01913() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01913");
        char[] charArray6 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer8.setDelimiterString("hi!");
        java.lang.String str11 = strTokenizer10.nextToken();
        java.util.List<java.lang.String> strList12 = strTokenizer10.getTokenList();
        java.lang.String str13 = strTokenizer10.previousToken();
        int int14 = strTokenizer10.size();
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "#4#a4#" + "'", str11, "#4#a4#");
        org.junit.Assert.assertNotNull(strList12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "#4#a4#" + "'", str13, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
    }

    @Test
    public void test01914() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01914");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.appendln(10L);
        int int8 = strBuilder2.indexOf("#4#a4#", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder2.insert(1, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int15 = strBuilder12.indexOf(strMatcher14);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder12.append("#4#a4#");
        java.lang.String str19 = strBuilder12.leftString((int) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int23 = strBuilder20.indexOf(strMatcher22);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder20.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder25.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder25.append(false);
        char[] charArray36 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = new org.apache.commons.lang3.text.StrTokenizer(charArray36, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = strTokenizer38.setDelimiterString("hi!");
        boolean boolean41 = strTokenizer38.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder25.appendFixedWidthPadRight((java.lang.Object) strTokenizer38, 10, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher47 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int48 = strBuilder45.indexOf(strMatcher47);
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder45.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder50.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder50.appendln((int) (short) 10);
        boolean boolean55 = strBuilder25.equalsIgnoreCase(strBuilder50);
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder25.reverse();
        java.lang.StringBuffer stringBuffer57 = strBuilder56.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder12.append(stringBuffer57, (int) (byte) 0, 2);
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder11.append(stringBuffer57);
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder61.insert((int) (byte) 10, "1.0java.io.IOExceptionfalse1001.0\n35.0\n1false0\n\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder61.append("1.0java.io.IOExceptionfalse1001.0\n35.0\njava.io.IOException: 10.0\nStrTokenizer[#4#a4#]\n", 39, (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder69.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder71.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder71.appendln(10L);
        int int77 = strBuilder71.indexOf("#4#a4#", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder71.appendSeparator("", 1);
        char[] charArray87 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer89 = new org.apache.commons.lang3.text.StrTokenizer(charArray87, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer90 = new org.apache.commons.lang3.text.StrTokenizer(charArray87);
        org.apache.commons.lang3.text.StrBuilder strBuilder92 = strBuilder80.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer90, "StrTokenizer[#4#a4#]");
        org.apache.commons.lang3.text.StrBuilder strBuilder94 = strBuilder92.deleteCharAt((int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder95 = strBuilder68.appendln(strBuilder94);
        org.apache.commons.lang3.text.StrBuilder strBuilder99 = strBuilder94.appendFixedWidthPadLeft((int) (byte) 100, 34, 'a');
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "#4#a4#" + "'", str19, "#4#a4#");
        org.junit.Assert.assertNotNull(strMatcher22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(charArray36);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray36), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray36), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray36), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strMatcher47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(stringBuffer57);
        org.junit.Assert.assertEquals(stringBuffer57.toString(), "zinekoTrtSeslaf ");
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + (-1) + "'", int77 == (-1));
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertNotNull(charArray87);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray87), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray87), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray87), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strBuilder92);
        org.junit.Assert.assertNotNull(strBuilder94);
        org.junit.Assert.assertNotNull(strBuilder95);
        org.junit.Assert.assertNotNull(strBuilder99);
    }

    @Test
    public void test01915() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01915");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("aa");
        java.lang.String str2 = strTokenizer1.toString();
        java.lang.String str3 = strTokenizer1.next();
        org.junit.Assert.assertNotNull(strTokenizer1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str2, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "aa" + "'", str3, "aa");
    }

    @Test
    public void test01916() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01916");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.String str5 = strBuilder3.rightString((int) (short) -1);
        java.lang.String str7 = strBuilder3.rightString((int) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder3.append((double) (byte) 100);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = strTokenizer11.setIgnoreEmptyTokens(false);
        int int14 = strTokenizer11.previousIndex();
        java.lang.Object obj15 = strTokenizer11.clone();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.append((java.lang.Object) strTokenizer11);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder16.reverse();
        java.io.Reader reader18 = strBuilder17.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder19.deleteFirst("hi!");
        java.lang.String str22 = strBuilder21.getNullText();
        char[] charArray24 = new char[] { 'a' };
        char[] charArray25 = strBuilder21.getChars(charArray24);
        // The following exception was thrown during execution in test generation
        try {
            int int28 = reader18.read(charArray24, (int) '0', 11);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: null");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strTokenizer11);
        org.junit.Assert.assertNotNull(strTokenizer13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals(obj15.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj15), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj15), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(reader18);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[a]");
        org.junit.Assert.assertNotNull(charArray25);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray25), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray25), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray25), "[a]");
    }

    @Test
    public void test01917() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01917");
        char[] charArray6 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, strMatcher10);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int15 = strBuilder12.indexOf(strMatcher14);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder12.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int21 = strBuilder18.indexOf(strMatcher20);
        int int22 = strBuilder12.indexOf(strMatcher20);
        char[] charArray29 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer(charArray29, ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = new org.apache.commons.lang3.text.StrTokenizer(charArray29, strMatcher33);
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = strTokenizer34.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, strMatcher20, strMatcher35);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray6);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray6);
        java.lang.Class<?> wildcardClass39 = charArray6.getClass();
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strMatcher20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNotNull(charArray29);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray29), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray29), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray29), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertNotNull(strTokenizer37);
        org.junit.Assert.assertNotNull(strTokenizer38);
        org.junit.Assert.assertNotNull(wildcardClass39);
    }

    @Test
    public void test01918() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01918");
        java.lang.String[] strArray3 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList4 = new java.util.ArrayList<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        char[] charArray12 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strTokenizer14.setDelimiterString("hi!");
        boolean boolean17 = strTokenizer14.isIgnoreEmptyTokens();
        java.lang.String str18 = strTokenizer14.next();
        int int19 = strList4.indexOf((java.lang.Object) strTokenizer14);
        java.util.ListIterator<java.lang.String> strItor21 = strList4.listIterator((int) (byte) 0);
        java.util.Iterator<java.lang.String> strItor22 = strList4.iterator();
        java.lang.String[] strArray26 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList27 = new java.util.ArrayList<java.lang.String>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList27, strArray26);
        char[] charArray35 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = new org.apache.commons.lang3.text.StrTokenizer(charArray35, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = strTokenizer37.setDelimiterString("hi!");
        boolean boolean40 = strTokenizer37.isIgnoreEmptyTokens();
        java.lang.String str41 = strTokenizer37.next();
        int int42 = strList27.indexOf((java.lang.Object) strTokenizer37);
        boolean boolean43 = strList4.addAll((java.util.Collection<java.lang.String>) strList27);
        strList27.clear();
        java.lang.String[] strArray48 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList49 = new java.util.ArrayList<java.lang.String>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList49, strArray48);
        char[] charArray57 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer59 = new org.apache.commons.lang3.text.StrTokenizer(charArray57, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer61 = strTokenizer59.setDelimiterString("hi!");
        boolean boolean62 = strTokenizer59.isIgnoreEmptyTokens();
        java.lang.String str63 = strTokenizer59.next();
        int int64 = strList49.indexOf((java.lang.Object) strTokenizer59);
        java.util.ListIterator<java.lang.String> strItor66 = strList49.listIterator((int) (byte) 0);
        java.util.Iterator<java.lang.String> strItor67 = strList49.iterator();
        char[] charArray74 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer76 = new org.apache.commons.lang3.text.StrTokenizer(charArray74, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer78 = strTokenizer76.setDelimiterString("hi!");
        boolean boolean79 = strTokenizer76.isIgnoreEmptyTokens();
        java.lang.String str80 = strTokenizer76.next();
        boolean boolean81 = strList49.equals((java.lang.Object) strTokenizer76);
        boolean boolean82 = strList27.removeAll((java.util.Collection<java.lang.String>) strList49);
        java.lang.CharSequence[] charSequenceArray83 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence[] charSequenceArray84 = strList27.toArray(charSequenceArray83);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "#4#a4#" + "'", str18, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(strItor21);
        org.junit.Assert.assertNotNull(strItor22);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "#4#a4#" + "'", str41, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "#4#a4#" + "'", str63, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + (-1) + "'", int64 == (-1));
        org.junit.Assert.assertNotNull(strItor66);
        org.junit.Assert.assertNotNull(strItor67);
        org.junit.Assert.assertNotNull(charArray74);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray74), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray74), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray74), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "#4#a4#" + "'", str80, "#4#a4#");
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
    }

    @Test
    public void test01919() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01919");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder17.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder19.clear();
        java.lang.String str22 = strBuilder20.rightString((int) (short) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder3.append((java.lang.CharSequence) str22);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.append((long) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder25.trim();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder25.deleteFirst('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder28.appendFixedWidthPadRight(6, 1, ' ');
        int int34 = strBuilder32.lastIndexOf("4");
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
    }

    @Test
    public void test01920() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01920");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        java.lang.String str3 = strBuilder2.getNullText();
        char[] charArray5 = new char[] { 'a' };
        char[] charArray6 = strBuilder2.getChars(charArray5);
        char[] charArray11 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray12 = strBuilder2.getChars(charArray11);
        java.io.Reader reader13 = strBuilder2.asReader();
        reader13.mark(10);
        reader13.close();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder17.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder19.clear();
        char[] charArray26 = new char[] { 'a', 'a', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer(charArray26);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder19.appendln(charArray26);
        int int29 = reader13.read(charArray26);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder30.deleteFirst("hi!");
        java.lang.String str33 = strBuilder32.getNullText();
        char[] charArray35 = new char[] { 'a' };
        char[] charArray36 = strBuilder32.getChars(charArray35);
        char[] charArray41 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray42 = strBuilder32.getChars(charArray41);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = new org.apache.commons.lang3.text.StrTokenizer(charArray41);
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray41);
        int int45 = reader13.read(charArray41);
        reader13.reset();
        reader13.reset();
        java.nio.CharBuffer charBuffer48 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int49 = reader13.read(charBuffer48);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[a]");
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(reader13);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(charArray26);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray26), "aa4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray26), "aa4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray26), "[a, a, 4, #, 4]");
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[a]");
        org.junit.Assert.assertNotNull(charArray36);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray36), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray36), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray36), "[a]");
        org.junit.Assert.assertNotNull(charArray41);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray41), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray41), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray41), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray42);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray42), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray42), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray42), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(strMatcher44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
    }

    @Test
    public void test01921() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01921");
        char[] charArray6 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer8.setDelimiterString("hi!");
        boolean boolean11 = strTokenizer8.hasNext();
        java.util.List<java.lang.String> strList12 = strTokenizer8.getTokenList();
        java.util.List<java.lang.String> strList13 = strTokenizer8.getTokenList();
        java.lang.Object[] objArray14 = strList13.toArray();
        java.lang.String[] strArray17 = new java.lang.String[] { "0\nzinekoTrtSeslaf ", "a" };
        java.util.ArrayList<java.lang.String> strList18 = new java.util.ArrayList<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        boolean boolean20 = strList18.isEmpty();
        java.util.Iterator<java.lang.String> strItor21 = strList18.iterator();
        boolean boolean22 = strList13.containsAll((java.util.Collection<java.lang.String>) strList18);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder25.clear();
        boolean boolean27 = strBuilder26.isEmpty();
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder30.deleteFirst("hi!");
        java.lang.String str33 = strBuilder32.getNullText();
        char[] charArray35 = new char[] { 'a' };
        char[] charArray36 = strBuilder32.getChars(charArray35);
        int int38 = strMatcher29.isMatch(charArray36, 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder26.append(charArray36);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = new org.apache.commons.lang3.text.StrTokenizer(charArray36, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = new org.apache.commons.lang3.text.StrTokenizer(charArray36);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = strTokenizer42.setIgnoreEmptyTokens(true);
        boolean boolean45 = strList13.contains((java.lang.Object) strTokenizer44);
        java.lang.String str46 = strTokenizer44.next();
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(strList12);
        org.junit.Assert.assertNotNull(strList13);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[#4#a4#]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[#4#a4#]");
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(strItor21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(strMatcher29);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[a]");
        org.junit.Assert.assertNotNull(charArray36);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray36), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray36), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray36), "[a]");
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strTokenizer44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "a" + "'", str46, "a");
    }

    @Test
    public void test01922() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01922");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.appendln(10L);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder7.replaceFirst('a', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = new org.apache.commons.lang3.text.StrTokenizer("hi!");
        java.lang.String str13 = strTokenizer12.previousToken();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = strTokenizer12.setQuoteChar(' ');
        java.lang.String[] strArray19 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList20 = new java.util.ArrayList<java.lang.String>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList20, strArray19);
        char[] charArray28 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = new org.apache.commons.lang3.text.StrTokenizer(charArray28, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = strTokenizer30.setDelimiterString("hi!");
        boolean boolean33 = strTokenizer30.isIgnoreEmptyTokens();
        java.lang.String str34 = strTokenizer30.next();
        int int35 = strList20.indexOf((java.lang.Object) strTokenizer30);
        char[] charArray42 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = new org.apache.commons.lang3.text.StrTokenizer(charArray42, ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher46 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = new org.apache.commons.lang3.text.StrTokenizer(charArray42, strMatcher46);
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher50 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int51 = strBuilder48.indexOf(strMatcher50);
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder48.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher56 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int57 = strBuilder54.indexOf(strMatcher56);
        int int58 = strBuilder48.indexOf(strMatcher56);
        char[] charArray65 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer67 = new org.apache.commons.lang3.text.StrTokenizer(charArray65, ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher69 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer70 = new org.apache.commons.lang3.text.StrTokenizer(charArray65, strMatcher69);
        org.apache.commons.lang3.text.StrMatcher strMatcher71 = strTokenizer70.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer72 = new org.apache.commons.lang3.text.StrTokenizer(charArray42, strMatcher56, strMatcher71);
        boolean boolean73 = strList20.equals((java.lang.Object) strMatcher71);
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher76 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int77 = strBuilder74.indexOf(strMatcher76);
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder74.append(' ');
        java.util.stream.IntStream intStream80 = strBuilder79.codePoints();
        org.apache.commons.lang3.text.StrMatcher strMatcher82 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("");
        int int83 = strBuilder79.lastIndexOf(strMatcher82);
        boolean boolean84 = strList20.remove((java.lang.Object) strMatcher82);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer85 = strTokenizer12.setTrimmerMatcher(strMatcher82);
        boolean boolean86 = strTokenizer85.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrMatcher strMatcher87 = strTokenizer85.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder90 = strBuilder7.appendFixedWidthPadRight((java.lang.Object) strMatcher87, 16, '#');
        java.io.Writer writer91 = strBuilder90.asWriter();
        writer91.flush();
        writer91.close();
        writer91.write("#4#");
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(strTokenizer15);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(charArray28);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray28), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray28), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray28), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "#4#a4#" + "'", str34, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertNotNull(charArray42);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray42), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray42), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray42), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher46);
        org.junit.Assert.assertNotNull(strMatcher50);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1));
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strMatcher56);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + (-1) + "'", int58 == (-1));
        org.junit.Assert.assertNotNull(charArray65);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray65), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray65), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray65), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher69);
        org.junit.Assert.assertNotNull(strMatcher71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(strMatcher76);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + (-1) + "'", int77 == (-1));
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertNotNull(intStream80);
        org.junit.Assert.assertNotNull(strMatcher82);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + (-1) + "'", int83 == (-1));
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNotNull(strTokenizer85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(strMatcher87);
        org.junit.Assert.assertNotNull(strBuilder90);
        org.junit.Assert.assertNotNull(writer91);
    }

    @Test
    public void test01923() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01923");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.appendln(10L);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteFirst("");
        char[] charArray8 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder7.appendln(charArray8);
        boolean boolean10 = strBuilder7.isEmpty();
        java.lang.String str12 = strBuilder7.rightString((int) 'a');
        char[] charArray19 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer(charArray19, ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher23 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = new org.apache.commons.lang3.text.StrTokenizer(charArray19, strMatcher23);
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = strTokenizer24.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder7.replaceAll(strMatcher25, "a");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder7.appendSeparator('#', (int) (short) 1);
        boolean boolean32 = strBuilder7.contains('a');
        int int34 = strBuilder7.indexOf("0\nzinekoTrtSeslaf ");
        boolean boolean36 = strBuilder7.endsWith(".0j");
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "10\n\n" + "'", str12, "10\n\n");
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher23);
        org.junit.Assert.assertNotNull(strMatcher25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
    }

    @Test
    public void test01924() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01924");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.appendNull();
        java.lang.StringBuffer stringBuffer4 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder3.append(stringBuffer4, (int) '4', 10);
        int int8 = strBuilder3.length();
        int int9 = strBuilder3.size();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
    }

    @Test
    public void test01925() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01925");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder17.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder19.clear();
        java.lang.String str22 = strBuilder20.rightString((int) (short) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder3.append((java.lang.CharSequence) str22);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder23.setNullText("");
        java.util.stream.IntStream intStream28 = strBuilder27.codePoints();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(intStream28);
    }

    @Test
    public void test01926() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01926");
        java.lang.String[] strArray3 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList4 = new java.util.ArrayList<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        char[] charArray12 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strTokenizer14.setDelimiterString("hi!");
        boolean boolean17 = strTokenizer14.isIgnoreEmptyTokens();
        java.lang.String str18 = strTokenizer14.next();
        int int19 = strList4.indexOf((java.lang.Object) strTokenizer14);
        java.util.ListIterator<java.lang.String> strItor21 = strList4.listIterator((int) (byte) 0);
        java.util.Iterator<java.lang.String> strItor22 = strList4.iterator();
        java.lang.String[] strArray26 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList27 = new java.util.ArrayList<java.lang.String>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList27, strArray26);
        char[] charArray35 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = new org.apache.commons.lang3.text.StrTokenizer(charArray35, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = strTokenizer37.setDelimiterString("hi!");
        boolean boolean40 = strTokenizer37.isIgnoreEmptyTokens();
        java.lang.String str41 = strTokenizer37.next();
        int int42 = strList27.indexOf((java.lang.Object) strTokenizer37);
        boolean boolean43 = strList4.addAll((java.util.Collection<java.lang.String>) strList27);
        java.lang.String[] strArray47 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList48 = new java.util.ArrayList<java.lang.String>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList48, strArray47);
        char[] charArray56 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = new org.apache.commons.lang3.text.StrTokenizer(charArray56, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer60 = strTokenizer58.setDelimiterString("hi!");
        boolean boolean61 = strTokenizer58.isIgnoreEmptyTokens();
        java.lang.String str62 = strTokenizer58.next();
        int int63 = strList48.indexOf((java.lang.Object) strTokenizer58);
        java.util.ListIterator<java.lang.String> strItor65 = strList48.listIterator((int) (byte) 0);
        java.util.Iterator<java.lang.String> strItor66 = strList48.iterator();
        java.lang.String[] strArray70 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList71 = new java.util.ArrayList<java.lang.String>();
        boolean boolean72 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList71, strArray70);
        char[] charArray79 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer81 = new org.apache.commons.lang3.text.StrTokenizer(charArray79, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer83 = strTokenizer81.setDelimiterString("hi!");
        boolean boolean84 = strTokenizer81.isIgnoreEmptyTokens();
        java.lang.String str85 = strTokenizer81.next();
        int int86 = strList71.indexOf((java.lang.Object) strTokenizer81);
        java.util.ListIterator<java.lang.String> strItor88 = strList71.listIterator((int) (byte) 0);
        java.util.Iterator<java.lang.String> strItor89 = strList71.iterator();
        boolean boolean90 = strList48.remove((java.lang.Object) strItor89);
        boolean boolean91 = strList4.removeAll((java.util.Collection<java.lang.String>) strList48);
        java.lang.String str94 = strList48.set(2, "java.io.IOException: ");
        java.lang.Object[] objArray95 = strList48.toArray();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str97 = strList48.get(17);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 17, Size: 3");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "#4#a4#" + "'", str18, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(strItor21);
        org.junit.Assert.assertNotNull(strItor22);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "#4#a4#" + "'", str41, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(charArray56);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray56), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray56), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray56), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "#4#a4#" + "'", str62, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + (-1) + "'", int63 == (-1));
        org.junit.Assert.assertNotNull(strItor65);
        org.junit.Assert.assertNotNull(strItor66);
        org.junit.Assert.assertNotNull(strArray70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(charArray79);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray79), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray79), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray79), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "#4#a4#" + "'", str85, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + (-1) + "'", int86 == (-1));
        org.junit.Assert.assertNotNull(strItor88);
        org.junit.Assert.assertNotNull(strItor89);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
        org.junit.Assert.assertEquals("'" + str94 + "' != '" + "" + "'", str94, "");
        org.junit.Assert.assertNotNull(objArray95);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray95), "[, , java.io.IOException: ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray95), "[, , java.io.IOException: ]");
    }

    @Test
    public void test01927() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01927");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        java.lang.String str3 = strBuilder2.getNullText();
        char[] charArray5 = new char[] { 'a' };
        char[] charArray6 = strBuilder2.getChars(charArray5);
        java.lang.StringBuffer stringBuffer7 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder2.append(stringBuffer7);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder2.deleteFirst('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder10.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.deleteFirst("java.io.IOException: StrTokenizer[");
        boolean boolean15 = strBuilder13.contains(' ');
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[a]");
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[a]");
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test01928() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01928");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int4 = strBuilder1.indexOf(strMatcher3);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer("#4#a4#", strMatcher3);
        int int6 = strTokenizer5.size();
        java.util.List<java.lang.String> strList7 = strTokenizer5.getTokenList();
        java.util.stream.Stream<java.lang.String> strStream8 = strList7.parallelStream();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str11 = strList7.set(48, ".0jav");
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 48, Size: 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertNotNull(strList7);
        org.junit.Assert.assertNotNull(strStream8);
    }

    @Test
    public void test01929() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01929");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteAll("java.io.IOException: StrTokenizer[#4#a4#]");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder7.append((long) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder10.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder12.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder12.insert(0, (double) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder16.replaceAll("StrTokenizer[not tokenized yet]", "StrTokenizer[#4#a4#]");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder20.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder22.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder22.appendln(10L);
        int int28 = strBuilder22.indexOf("#4#a4#", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder22.insert(1, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int35 = strBuilder32.indexOf(strMatcher34);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder32.append("#4#a4#");
        java.lang.String str39 = strBuilder32.leftString((int) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int43 = strBuilder40.indexOf(strMatcher42);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder40.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder45.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder45.append(false);
        char[] charArray56 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = new org.apache.commons.lang3.text.StrTokenizer(charArray56, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer60 = strTokenizer58.setDelimiterString("hi!");
        boolean boolean61 = strTokenizer58.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder45.appendFixedWidthPadRight((java.lang.Object) strTokenizer58, 10, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher67 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int68 = strBuilder65.indexOf(strMatcher67);
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder65.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder70.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder70.appendln((int) (short) 10);
        boolean boolean75 = strBuilder45.equalsIgnoreCase(strBuilder70);
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder45.reverse();
        java.lang.StringBuffer stringBuffer77 = strBuilder76.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder32.append(stringBuffer77, (int) (byte) 0, 2);
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder31.append(stringBuffer77);
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder16.append((java.lang.Object) stringBuffer77);
        org.apache.commons.lang3.text.StrBuilder strBuilder83 = strBuilder7.appendln(strBuilder16);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder86 = strBuilder83.insert(70, 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 70");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strMatcher34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "#4#a4#" + "'", str39, "#4#a4#");
        org.junit.Assert.assertNotNull(strMatcher42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(charArray56);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray56), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray56), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray56), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strMatcher67);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + (-1) + "'", int68 == (-1));
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNotNull(stringBuffer77);
        org.junit.Assert.assertEquals(stringBuffer77.toString(), "zinekoTrtSeslaf ");
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertNotNull(strBuilder81);
        org.junit.Assert.assertNotNull(strBuilder82);
        org.junit.Assert.assertNotNull(strBuilder83);
    }

    @Test
    public void test01930() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01930");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder3.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder4.appendln((long) '#');
        java.util.stream.IntStream intStream7 = strBuilder4.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder4.appendSeparator("10\n\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder4.replaceFirst('4', ' ');
        java.lang.String str13 = strBuilder4.getNullText();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = strBuilder4.asTokenizer();
        java.lang.String str15 = strBuilder4.toString();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(intStream7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(strTokenizer14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "35\n10\n\n" + "'", str15, "35\n10\n\n");
    }

    @Test
    public void test01931() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01931");
        char[] charArray6 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer8.setDelimiterString("hi!");
        java.lang.String str11 = strTokenizer10.nextToken();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = strTokenizer10.setIgnoredChar('4');
        java.lang.String str14 = strTokenizer13.toString();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder15.deleteFirst("hi!");
        java.lang.String str18 = strBuilder17.getNullText();
        char[] charArray20 = new char[] { 'a' };
        char[] charArray21 = strBuilder17.getChars(charArray20);
        java.lang.StringBuffer stringBuffer22 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder17.append(stringBuffer22);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder17.deleteFirst('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder26.deleteFirst("hi!");
        java.lang.String str29 = strBuilder28.getNullText();
        char[] charArray31 = new char[] { 'a' };
        char[] charArray32 = strBuilder28.getChars(charArray31);
        char[] charArray33 = strBuilder25.getChars(charArray31);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = strTokenizer13.reset(charArray31);
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer34.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: remove() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "#4#a4#" + "'", str11, "#4#a4#");
        org.junit.Assert.assertNotNull(strTokenizer13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "StrTokenizer[#4#a4#]" + "'", str14, "StrTokenizer[#4#a4#]");
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray20), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray20), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray20), "[a]");
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray21), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray21), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray21), "[a]");
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray31), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray31), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray31), "[a]");
        org.junit.Assert.assertNotNull(charArray32);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray32), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray32), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray32), "[a]");
        org.junit.Assert.assertNotNull(charArray33);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray33), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray33), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray33), "[a]");
        org.junit.Assert.assertNotNull(strTokenizer34);
    }

    @Test
    public void test01932() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01932");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = new org.apache.commons.lang3.text.StrTokenizer("hi!");
        java.lang.String str2 = strTokenizer1.previousToken();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = strTokenizer1.setQuoteChar(' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer4.reset();
        boolean boolean6 = strTokenizer5.hasNext();
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNotNull(strTokenizer4);
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
    }

    @Test
    public void test01933() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01933");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.appendln(10L);
        int int8 = strBuilder2.indexOf("#4#a4#", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder2.appendSeparator("", 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.appendln(true);
        char char15 = strBuilder13.charAt((int) (short) 1);
        char[] charArray22 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = new org.apache.commons.lang3.text.StrTokenizer(charArray22, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = new org.apache.commons.lang3.text.StrTokenizer(charArray22);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray22);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray22);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder28.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder30.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder30.appendln(10L);
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder33.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder35.replaceFirst('a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("100.01210\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder35.replace(strMatcher40, "100.01210\n", 3, 52, 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder46.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder48.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder48.insert(0, (double) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder52.replaceAll("StrTokenizer[not tokenized yet]", "StrTokenizer[#4#a4#]");
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = new org.apache.commons.lang3.text.StrBuilder(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher60 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int61 = strBuilder58.indexOf(strMatcher60);
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder58.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder63.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder63.appendln((int) (short) 10);
        org.apache.commons.lang3.text.StrMatcher strMatcher68 = org.apache.commons.lang3.text.StrMatcher.spaceMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder63.replace(strMatcher68, "StrTokenizer[#4#a4#]", (int) (short) 1, 1, (int) (byte) 10);
        int int75 = strBuilder57.lastIndexOf(strMatcher68, (int) (short) 100);
        int int77 = strBuilder52.lastIndexOf(strMatcher68, 6);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer78 = new org.apache.commons.lang3.text.StrTokenizer(charArray22, strMatcher40, strMatcher68);
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder13.deleteFirst(strMatcher40);
        java.lang.String str82 = strBuilder13.midString(24, 36);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertTrue("'" + char15 + "' != '" + '0' + "'", char15 == '0');
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray22), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray22), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray22), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer26);
        org.junit.Assert.assertNotNull(strTokenizer27);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strMatcher40);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strMatcher60);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + (-1) + "'", int61 == (-1));
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strMatcher68);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + (-1) + "'", int75 == (-1));
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + (-1) + "'", int77 == (-1));
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "" + "'", str82, "");
    }

    @Test
    public void test01934() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01934");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.appendNull();
        java.lang.String str6 = strBuilder3.substring((int) (short) 0, (int) (short) 100);
        int int9 = strBuilder3.lastIndexOf("1false0\n", 59);
        char[] charArray16 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer(charArray16, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = strTokenizer18.setDelimiterString("hi!");
        boolean boolean21 = strTokenizer18.isIgnoreEmptyTokens();
        int int22 = strTokenizer18.nextIndex();
        int int23 = strTokenizer18.nextIndex();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = strTokenizer18.setIgnoreEmptyTokens(false);
        int int26 = strTokenizer18.previousIndex();
        java.lang.String str27 = strTokenizer18.getContent();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = strTokenizer18.reset();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder29.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder31.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder31.insert(0, (double) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder35.replaceAll("StrTokenizer[not tokenized yet]", "StrTokenizer[#4#a4#]");
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = new org.apache.commons.lang3.text.StrBuilder(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int44 = strBuilder41.indexOf(strMatcher43);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder41.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder46.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder46.appendln((int) (short) 10);
        org.apache.commons.lang3.text.StrMatcher strMatcher51 = org.apache.commons.lang3.text.StrMatcher.spaceMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder46.replace(strMatcher51, "StrTokenizer[#4#a4#]", (int) (short) 1, 1, (int) (byte) 10);
        int int58 = strBuilder40.lastIndexOf(strMatcher51, (int) (short) 100);
        int int60 = strBuilder35.lastIndexOf(strMatcher51, 6);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer61 = strTokenizer28.setDelimiterMatcher(strMatcher51);
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder3.deleteFirst(strMatcher51);
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder63.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder65.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder65.appendln(10L);
        boolean boolean70 = strBuilder65.endsWith("trTokenizer[not tokenized yet]0\nzinekoTrtSeslaf \n");
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder62.append((java.lang.CharSequence) strBuilder65, 48, 30);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: startIndex must be valid");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(strTokenizer25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "#4#a4#" + "'", str27, "#4#a4#");
        org.junit.Assert.assertNotNull(strTokenizer28);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strMatcher43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strMatcher51);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + (-1) + "'", int58 == (-1));
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-1) + "'", int60 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer61);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
    }

    @Test
    public void test01935() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01935");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder18.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder24.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder26.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.appendln(10L);
        int int32 = strBuilder26.indexOf("#4#a4#", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder26.insert(1, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder23.appendln(strBuilder35);
        java.io.Writer writer37 = strBuilder36.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder38.deleteFirst("hi!");
        java.lang.String str41 = strBuilder40.getNullText();
        char[] charArray43 = new char[] { 'a' };
        char[] charArray44 = strBuilder40.getChars(charArray43);
        char[] charArray49 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray50 = strBuilder40.getChars(charArray49);
        writer37.write(charArray49);
        writer37.write("10\n\n");
        writer37.write(10);
        java.io.Writer writer57 = writer37.append('a');
        // The following exception was thrown during execution in test generation
        try {
            writer57.write("\naa", (int) 'e', 74);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: startIndex must be valid");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(writer37);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNotNull(charArray43);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray43), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray43), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray43), "[a]");
        org.junit.Assert.assertNotNull(charArray44);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray44), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray44), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray44), "[a]");
        org.junit.Assert.assertNotNull(charArray49);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray49), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray49), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray49), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray50);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray50), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray50), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray50), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(writer57);
    }

    @Test
    public void test01936() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01936");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        java.lang.String str3 = strBuilder2.getNullText();
        char[] charArray5 = new char[] { 'a' };
        char[] charArray6 = strBuilder2.getChars(charArray5);
        java.lang.StringBuffer stringBuffer7 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder2.append(stringBuffer7);
        java.io.Writer writer9 = strBuilder8.asWriter();
        writer9.write((int) (short) 1);
        java.io.Writer writer13 = writer9.append('I');
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[a]");
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[a]");
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(writer9);
        org.junit.Assert.assertNotNull(writer13);
    }

    @Test
    public void test01937() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01937");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        java.lang.String str3 = strBuilder2.getNullText();
        char[] charArray5 = new char[] { 'a' };
        char[] charArray6 = strBuilder2.getChars(charArray5);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder2.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder2.appendPadding((int) (byte) 1, '4');
        char[] charArray18 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = new org.apache.commons.lang3.text.StrTokenizer(charArray18, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = strTokenizer20.setDelimiterString("hi!");
        boolean boolean23 = strTokenizer20.isIgnoreEmptyTokens();
        int int24 = strTokenizer20.nextIndex();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder11.appendFixedWidthPadLeft((java.lang.Object) strTokenizer20, (int) '4', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder28.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder30.clear();
        java.lang.String str33 = strBuilder31.rightString((int) (short) -1);
        java.lang.String str35 = strBuilder31.rightString((int) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder31.append((double) (byte) 100);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = strTokenizer39.setIgnoreEmptyTokens(false);
        int int42 = strTokenizer39.previousIndex();
        java.lang.Object obj43 = strTokenizer39.clone();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder31.append((java.lang.Object) strTokenizer39);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder27.append((java.lang.CharSequence) strBuilder44);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder46.deleteFirst("hi!");
        java.lang.String str50 = strBuilder48.leftString(32);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder51.deleteFirst("hi!");
        java.lang.String str54 = strBuilder53.getNullText();
        char[] charArray56 = new char[] { 'a' };
        char[] charArray57 = strBuilder53.getChars(charArray56);
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder48.append((java.lang.Object) strBuilder53);
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder48.replaceAll('#', ' ');
        char[] charArray68 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer70 = new org.apache.commons.lang3.text.StrTokenizer(charArray68, ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher72 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer73 = new org.apache.commons.lang3.text.StrTokenizer(charArray68, strMatcher72);
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder48.deleteAll(strMatcher72);
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder48.append(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder48.append((float) 19);
        java.lang.StringBuffer stringBuffer79 = strBuilder48.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder27.append(stringBuffer79);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[a]");
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[a]");
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(charArray18);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray18), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray18), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray18), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "" + "'", str33, "");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "" + "'", str35, "");
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strTokenizer39);
        org.junit.Assert.assertNotNull(strTokenizer41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertEquals(obj43.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj43), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj43), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "" + "'", str50, "");
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertNotNull(charArray56);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray56), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray56), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray56), "[a]");
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[a]");
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(charArray68);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray68), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray68), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray68), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher72);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(stringBuffer79);
        org.junit.Assert.assertEquals(stringBuffer79.toString(), "false19.0");
        org.junit.Assert.assertNotNull(strBuilder80);
    }

    @Test
    public void test01938() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01938");
        char[] charArray6 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = new org.apache.commons.lang3.text.StrTokenizer(charArray6);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray6);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray6);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder12.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder14.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.appendln(10L);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder17.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.replaceFirst('a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("100.01210\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder19.replace(strMatcher24, "100.01210\n", 3, 52, 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder30.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder32.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder32.insert(0, (double) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder36.replaceAll("StrTokenizer[not tokenized yet]", "StrTokenizer[#4#a4#]");
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = new org.apache.commons.lang3.text.StrBuilder(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int45 = strBuilder42.indexOf(strMatcher44);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder42.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder47.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder47.appendln((int) (short) 10);
        org.apache.commons.lang3.text.StrMatcher strMatcher52 = org.apache.commons.lang3.text.StrMatcher.spaceMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder47.replace(strMatcher52, "StrTokenizer[#4#a4#]", (int) (short) 1, 1, (int) (byte) 10);
        int int59 = strBuilder41.lastIndexOf(strMatcher52, (int) (short) 100);
        int int61 = strBuilder36.lastIndexOf(strMatcher52, 6);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer62 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, strMatcher24, strMatcher52);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer65 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, 'a', '1');
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str66 = strTokenizer65.previous();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertNotNull(strTokenizer11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strMatcher44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strMatcher52);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-1) + "'", int59 == (-1));
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + (-1) + "'", int61 == (-1));
    }

    @Test
    public void test01939() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01939");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        java.lang.String str3 = strBuilder2.getNullText();
        char[] charArray5 = new char[] { 'a' };
        char[] charArray6 = strBuilder2.getChars(charArray5);
        char[] charArray11 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray12 = strBuilder2.getChars(charArray11);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray12);
        char[] charArray20 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = new org.apache.commons.lang3.text.StrTokenizer(charArray20, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer(charArray20);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = strTokenizer13.reset(charArray20);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = new org.apache.commons.lang3.text.StrTokenizer(charArray20);
        int int26 = strTokenizer25.size();
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = strTokenizer25.getIgnoredMatcher();
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer25.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: remove() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[a]");
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(strTokenizer13);
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray20), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray20), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray20), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer24);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 1 + "'", int26 == 1);
        org.junit.Assert.assertNotNull(strMatcher27);
    }

    @Test
    public void test01940() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01940");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        char[] charArray9 = new char[] { 'a', 'a', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = new org.apache.commons.lang3.text.StrTokenizer(charArray9);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder2.appendln(charArray9);
        int int14 = strBuilder11.indexOf('4', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder11.appendFixedWidthPadLeft((int) (byte) 1, 32, '#');
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = org.apache.commons.lang3.text.StrMatcher.spaceMatcher();
        int int21 = strBuilder18.indexOf(strMatcher19, (-1));
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder18.replaceFirst("#4#", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder18.appendSeparator('\000', (int) (byte) -1);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str29 = strBuilder18.substring((int) '3');
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: end < start");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(charArray9);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray9), "aa4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray9), "aa4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray9), "[a, a, 4, #, 4]");
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2 + "'", int14 == 2);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder27);
    }

    @Test
    public void test01941() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01941");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        java.lang.String str3 = strBuilder2.getNullText();
        char[] charArray5 = new char[] { 'a' };
        char[] charArray6 = strBuilder2.getChars(charArray5);
        char[] charArray11 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray12 = strBuilder2.getChars(charArray11);
        java.io.Reader reader13 = strBuilder2.asReader();
        reader13.mark(10);
        reader13.close();
        boolean boolean17 = reader13.markSupported();
        int int18 = reader13.read();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder19.deleteFirst("hi!");
        java.lang.String str22 = strBuilder21.getNullText();
        char[] charArray24 = new char[] { 'a' };
        char[] charArray25 = strBuilder21.getChars(charArray24);
        char[] charArray30 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray31 = strBuilder21.getChars(charArray30);
        java.io.Reader reader32 = strBuilder21.asReader();
        long long34 = reader32.skip((long) 59);
        char[] charArray41 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = new org.apache.commons.lang3.text.StrTokenizer(charArray41, ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher45 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = new org.apache.commons.lang3.text.StrTokenizer(charArray41, strMatcher45);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher49 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int50 = strBuilder47.indexOf(strMatcher49);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder47.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher55 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int56 = strBuilder53.indexOf(strMatcher55);
        int int57 = strBuilder47.indexOf(strMatcher55);
        char[] charArray64 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer66 = new org.apache.commons.lang3.text.StrTokenizer(charArray64, ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher68 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer69 = new org.apache.commons.lang3.text.StrTokenizer(charArray64, strMatcher68);
        org.apache.commons.lang3.text.StrMatcher strMatcher70 = strTokenizer69.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer71 = new org.apache.commons.lang3.text.StrTokenizer(charArray41, strMatcher55, strMatcher70);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer72 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray41);
        int int73 = reader32.read(charArray41);
        int int74 = reader13.read(charArray41);
        long long76 = reader13.skip((long) (short) 10);
        java.nio.CharBuffer charBuffer77 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int78 = reader13.read(charBuffer77);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[a]");
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(reader13);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[a]");
        org.junit.Assert.assertNotNull(charArray25);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray25), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray25), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray25), "[a]");
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray30), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray30), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray30), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray31), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray31), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray31), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(reader32);
        org.junit.Assert.assertTrue("'" + long34 + "' != '" + 0L + "'", long34 == 0L);
        org.junit.Assert.assertNotNull(charArray41);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray41), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray41), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray41), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher45);
        org.junit.Assert.assertNotNull(strMatcher49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strMatcher55);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1));
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
        org.junit.Assert.assertNotNull(charArray64);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray64), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray64), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray64), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher68);
        org.junit.Assert.assertNotNull(strMatcher70);
        org.junit.Assert.assertNotNull(strTokenizer72);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + (-1) + "'", int73 == (-1));
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + (-1) + "'", int74 == (-1));
        org.junit.Assert.assertTrue("'" + long76 + "' != '" + 0L + "'", long76 == 0L);
    }

    @Test
    public void test01942() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01942");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        java.lang.String str4 = strBuilder2.leftString(32);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteFirst("hi!");
        java.lang.String str8 = strBuilder7.getNullText();
        char[] charArray10 = new char[] { 'a' };
        char[] charArray11 = strBuilder7.getChars(charArray10);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder2.append((java.lang.Object) strBuilder7);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder2.replaceAll('#', ' ');
        java.util.stream.IntStream intStream16 = strBuilder2.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder2.appendSeparator('#');
        boolean boolean19 = strBuilder18.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder20.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder22.clear();
        java.lang.Throwable throwable27 = null;
        java.io.IOException iOException28 = new java.io.IOException("", throwable27);
        java.io.IOException iOException29 = new java.io.IOException("#4#a4#", throwable27);
        java.io.IOException iOException30 = new java.io.IOException(throwable27);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray34 = new java.lang.Object[] { 1.0f, iOException30, false, 100, strBuilder33 };
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder23.appendWithSeparators(objArray34, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder36.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder38.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder38.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder43.append("java.io.IOException: ");
        boolean boolean47 = strBuilder43.endsWith("0java.io.IOExceptionfalse100");
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder43.deleteAll('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder43.appendSeparator('4', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder52.appendSeparator('#');
        char[] charArray61 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer63 = new org.apache.commons.lang3.text.StrTokenizer(charArray61, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer65 = strTokenizer63.setDelimiterString("hi!");
        int int66 = strTokenizer63.previousIndex();
        char[] charArray73 = new char[] { 'a', '4', 'a', 'a', '#', ' ' };
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher76 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int77 = strBuilder74.indexOf(strMatcher76);
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder74.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher82 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int83 = strBuilder80.indexOf(strMatcher82);
        int int84 = strBuilder74.indexOf(strMatcher82);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer85 = new org.apache.commons.lang3.text.StrTokenizer(charArray73, strMatcher82);
        org.apache.commons.lang3.text.StrBuilder strBuilder87 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher89 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int90 = strBuilder87.indexOf(strMatcher89);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer91 = new org.apache.commons.lang3.text.StrTokenizer("#4#a4#", strMatcher89);
        org.apache.commons.lang3.text.StrMatcher strMatcher93 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("#4#a4#");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer94 = new org.apache.commons.lang3.text.StrTokenizer(charArray73, strMatcher89, strMatcher93);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer95 = strTokenizer63.setIgnoredMatcher(strMatcher93);
        int int96 = strBuilder52.indexOf(strMatcher93);
        boolean boolean97 = strBuilder18.contains(strMatcher93);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[a]");
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(intStream16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(objArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray34), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray34), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(charArray61);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray61), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray61), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray61), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer65);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + (-1) + "'", int66 == (-1));
        org.junit.Assert.assertNotNull(charArray73);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray73), "a4aa# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray73), "a4aa# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray73), "[a, 4, a, a, #,  ]");
        org.junit.Assert.assertNotNull(strMatcher76);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + (-1) + "'", int77 == (-1));
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertNotNull(strMatcher82);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + (-1) + "'", int83 == (-1));
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + (-1) + "'", int84 == (-1));
        org.junit.Assert.assertNotNull(strMatcher89);
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + (-1) + "'", int90 == (-1));
        org.junit.Assert.assertNotNull(strMatcher93);
        org.junit.Assert.assertNotNull(strTokenizer95);
        org.junit.Assert.assertTrue("'" + int96 + "' != '" + (-1) + "'", int96 == (-1));
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + false + "'", boolean97 == false);
    }

    @Test
    public void test01943() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01943");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.appendln((int) (short) 10);
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.spaceMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder5.replace(strMatcher10, "StrTokenizer[#4#a4#]", (int) (short) 1, 1, (int) (byte) 10);
        char char17 = strBuilder15.charAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.trim();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder19.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder21.clear();
        java.lang.Throwable throwable26 = null;
        java.io.IOException iOException27 = new java.io.IOException("", throwable26);
        java.io.IOException iOException28 = new java.io.IOException("#4#a4#", throwable26);
        java.io.IOException iOException29 = new java.io.IOException(throwable26);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray33 = new java.lang.Object[] { 1.0f, iOException29, false, 100, strBuilder32 };
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder22.appendWithSeparators(objArray33, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder35.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder37.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder37.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder42.append("java.io.IOException: ");
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder42.deleteAll('a');
        int int48 = strBuilder46.lastIndexOf('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder15.appendln(strBuilder46);
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder15.appendNull();
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertTrue("'" + char17 + "' != '" + ' ' + "'", char17 == ' ');
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray33), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder50);
    }

    @Test
    public void test01944() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01944");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder18.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder18.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder18.replaceFirst('#', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder27.appendNull();
        java.io.Reader reader29 = strBuilder28.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder28.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder28.trim();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder32.insert(61, (float) 80);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 61");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(reader29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder32);
    }

    @Test
    public void test01945() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01945");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder18.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder24.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder26.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.appendln(10L);
        int int32 = strBuilder26.indexOf("#4#a4#", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder26.insert(1, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder23.appendln(strBuilder35);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder36.appendln("java.io.IOException: ", (int) (short) 1, (int) (byte) 10);
        boolean boolean42 = strBuilder36.startsWith("java.io.IOException: ");
        int int45 = strBuilder36.lastIndexOf("10\n\n", 5);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher48 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int49 = strBuilder46.indexOf(strMatcher48);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder46.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder51.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder51.append(false);
        char[] charArray62 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = new org.apache.commons.lang3.text.StrTokenizer(charArray62, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer66 = strTokenizer64.setDelimiterString("hi!");
        boolean boolean67 = strTokenizer64.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder51.appendFixedWidthPadRight((java.lang.Object) strTokenizer64, 10, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher73 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int74 = strBuilder71.indexOf(strMatcher73);
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder71.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder76.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder76.appendln((int) (short) 10);
        boolean boolean81 = strBuilder51.equalsIgnoreCase(strBuilder76);
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder51.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder83 = strBuilder51.reverse();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer86 = new org.apache.commons.lang3.text.StrTokenizer("", "#4#a4#");
        org.apache.commons.lang3.text.StrMatcher strMatcher87 = strTokenizer86.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder89 = strBuilder51.replaceFirst(strMatcher87, "100.01210\n");
        boolean boolean90 = strBuilder36.equals(strBuilder51);
        org.apache.commons.lang3.text.StrBuilder strBuilder94 = strBuilder36.appendFixedWidthPadRight(18, 53, '0');
        // The following exception was thrown during execution in test generation
        try {
            char[] charArray97 = strBuilder36.toCharArray((int) '#', 18);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: end < start");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
        org.junit.Assert.assertNotNull(strMatcher48);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(charArray62);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray62), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray62), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray62), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(strMatcher73);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + (-1) + "'", int74 == (-1));
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNotNull(strBuilder82);
        org.junit.Assert.assertNotNull(strBuilder83);
        org.junit.Assert.assertNotNull(strMatcher87);
        org.junit.Assert.assertNotNull(strBuilder89);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertNotNull(strBuilder94);
    }

    @Test
    public void test01946() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01946");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        java.lang.String str3 = strBuilder2.getNullText();
        char[] charArray5 = new char[] { 'a' };
        char[] charArray6 = strBuilder2.getChars(charArray5);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder2.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder2.append(19);
        int int13 = strBuilder2.indexOf('#', 36);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[a]");
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[a]");
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
    }

    @Test
    public void test01947() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01947");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = org.apache.commons.lang3.text.StrMatcher.splitMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder0.deleteAll(strMatcher3);
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder0.append((float) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int10 = strBuilder7.indexOf(strMatcher9);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder7.append("#4#a4#");
        java.lang.String str14 = strBuilder7.leftString((int) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int18 = strBuilder15.indexOf(strMatcher17);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder15.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder20.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder20.append(false);
        char[] charArray31 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray31, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = strTokenizer33.setDelimiterString("hi!");
        boolean boolean36 = strTokenizer33.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder20.appendFixedWidthPadRight((java.lang.Object) strTokenizer33, 10, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int43 = strBuilder40.indexOf(strMatcher42);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder40.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder45.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder45.appendln((int) (short) 10);
        boolean boolean50 = strBuilder20.equalsIgnoreCase(strBuilder45);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder20.reverse();
        java.lang.StringBuffer stringBuffer52 = strBuilder51.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder7.append(stringBuffer52, (int) (byte) 0, 2);
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder0.append(stringBuffer52);
        int int59 = strBuilder0.indexOf("StrTokenizer[not tokenized yet]", (int) (short) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder0.insert((int) (byte) 10, (float) 100L);
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder0.appendSeparator('a', 39);
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder0.appendPadding((int) (byte) 10, '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder0.replaceAll('#', '4');
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder0.append("1false0\n1.0", 22, 66);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: startIndex must be valid");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strMatcher3);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strMatcher9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "#4#a4#" + "'", str14, "#4#a4#");
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray31), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray31), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray31), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strMatcher42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(stringBuffer52);
        org.junit.Assert.assertEquals(stringBuffer52.toString(), "zinekoTrtSeslaf ");
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-1) + "'", int59 == (-1));
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strBuilder71);
    }

    @Test
    public void test01948() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01948");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        java.lang.String str3 = strBuilder2.getNullText();
        char[] charArray5 = new char[] { 'a' };
        char[] charArray6 = strBuilder2.getChars(charArray5);
        java.lang.StringBuffer stringBuffer7 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder2.append(stringBuffer7);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder2.deleteFirst('#');
        char[] charArray17 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = new org.apache.commons.lang3.text.StrTokenizer(charArray17, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = new org.apache.commons.lang3.text.StrTokenizer(charArray17);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder10.appendAll((java.util.Iterator<java.lang.String>) strTokenizer20);
        java.util.stream.IntStream intStream22 = strBuilder21.codePoints();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[a]");
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[a]");
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray17), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray17), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray17), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(intStream22);
    }

    @Test
    public void test01949() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01949");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.append(false);
        char[] charArray16 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer(charArray16, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = strTokenizer18.setDelimiterString("hi!");
        boolean boolean21 = strTokenizer18.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder5.appendFixedWidthPadRight((java.lang.Object) strTokenizer18, 10, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int28 = strBuilder25.indexOf(strMatcher27);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder25.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder30.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder30.appendln((int) (short) 10);
        boolean boolean35 = strBuilder5.equalsIgnoreCase(strBuilder30);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder30.insert((int) (byte) 1, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder38.appendln(false);
        char[] charArray47 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = new org.apache.commons.lang3.text.StrTokenizer(charArray47, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = strTokenizer49.setDelimiterString("hi!");
        java.lang.String str52 = strTokenizer51.nextToken();
        java.util.List<java.lang.String> strList53 = strTokenizer51.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder54.deleteFirst("hi!");
        java.lang.String str57 = strBuilder56.getNullText();
        char[] charArray59 = new char[] { 'a' };
        char[] charArray60 = strBuilder56.getChars(charArray59);
        char[] charArray65 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray66 = strBuilder56.getChars(charArray65);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer67 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray66);
        int int68 = strList53.indexOf((java.lang.Object) charArray66);
        char[] charArray69 = strBuilder40.getChars(charArray66);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer71 = new org.apache.commons.lang3.text.StrTokenizer(charArray69, "java.io.IOException: ");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer73 = new org.apache.commons.lang3.text.StrTokenizer(charArray69, '\000');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer75 = new org.apache.commons.lang3.text.StrTokenizer(charArray69, ' ');
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(charArray47);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray47), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray47), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray47), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer51);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "#4#a4#" + "'", str52, "#4#a4#");
        org.junit.Assert.assertNotNull(strList53);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNull(str57);
        org.junit.Assert.assertNotNull(charArray59);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray59), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray59), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray59), "[a]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[a]");
        org.junit.Assert.assertNotNull(charArray65);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray65), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray65), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray65), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray66);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray66), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray66), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray66), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(strTokenizer67);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + (-1) + "'", int68 == (-1));
        org.junit.Assert.assertNotNull(charArray69);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray69), " a10\nfalse\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray69), " a10\nfalse\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray69), "[ , a, 1, 0, \n, f, a, l, s, e, \n]");
    }

    @Test
    public void test01950() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01950");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder18.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder24.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder26.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.appendln(10L);
        int int32 = strBuilder26.indexOf("#4#a4#", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder26.insert(1, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder23.appendln(strBuilder35);
        java.io.Writer writer37 = strBuilder36.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder38.deleteFirst("hi!");
        java.lang.String str41 = strBuilder40.getNullText();
        char[] charArray43 = new char[] { 'a' };
        char[] charArray44 = strBuilder40.getChars(charArray43);
        char[] charArray49 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray50 = strBuilder40.getChars(charArray49);
        writer37.write(charArray49);
        writer37.close();
        java.io.Writer writer54 = writer37.append('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder55.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder57.clear();
        java.lang.Throwable throwable62 = null;
        java.io.IOException iOException63 = new java.io.IOException("", throwable62);
        java.io.IOException iOException64 = new java.io.IOException("#4#a4#", throwable62);
        java.io.IOException iOException65 = new java.io.IOException(throwable62);
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray69 = new java.lang.Object[] { 1.0f, iOException65, false, 100, strBuilder68 };
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder58.appendWithSeparators(objArray69, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder71.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder73.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder73.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder79.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder81.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder84 = strBuilder81.appendln(10L);
        int int87 = strBuilder81.indexOf("#4#a4#", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder90 = strBuilder81.insert(1, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder91 = strBuilder78.appendln(strBuilder90);
        org.apache.commons.lang3.text.StrBuilder strBuilder93 = strBuilder91.ensureCapacity(0);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer94 = strBuilder93.asTokenizer();
        java.io.Writer writer95 = writer37.append((java.lang.CharSequence) strBuilder93);
        writer95.flush();
        java.io.Writer writer98 = writer95.append('4');
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(writer37);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNotNull(charArray43);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray43), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray43), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray43), "[a]");
        org.junit.Assert.assertNotNull(charArray44);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray44), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray44), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray44), "[a]");
        org.junit.Assert.assertNotNull(charArray49);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray49), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray49), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray49), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray50);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray50), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray50), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray50), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(writer54);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(objArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray69), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray69), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(strBuilder81);
        org.junit.Assert.assertNotNull(strBuilder82);
        org.junit.Assert.assertNotNull(strBuilder84);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + (-1) + "'", int87 == (-1));
        org.junit.Assert.assertNotNull(strBuilder90);
        org.junit.Assert.assertNotNull(strBuilder91);
        org.junit.Assert.assertNotNull(strBuilder93);
        org.junit.Assert.assertNotNull(strTokenizer94);
        org.junit.Assert.assertNotNull(writer95);
        org.junit.Assert.assertNotNull(writer98);
    }

    @Test
    public void test01951() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01951");
        java.io.IOException iOException1 = new java.io.IOException("true\n");
    }

    @Test
    public void test01952() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01952");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int4 = strBuilder1.indexOf(strMatcher3);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer("#4#a4#", strMatcher3);
        java.lang.String str6 = strTokenizer5.toString();
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = strTokenizer5.getDelimiterMatcher();
        boolean boolean8 = strTokenizer5.hasNext();
        java.lang.String str9 = strTokenizer5.toString();
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer5.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: remove() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str6, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strMatcher7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "StrTokenizer[#4#a4#]" + "'", str9, "StrTokenizer[#4#a4#]");
    }

    @Test
    public void test01953() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01953");
        char[] charArray6 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer8.setDelimiterString("hi!");
        java.lang.String str11 = strTokenizer10.nextToken();
        java.util.List<java.lang.String> strList12 = strTokenizer10.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder13.deleteFirst("hi!");
        java.lang.String str16 = strBuilder15.getNullText();
        char[] charArray18 = new char[] { 'a' };
        char[] charArray19 = strBuilder15.getChars(charArray18);
        char[] charArray24 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray25 = strBuilder15.getChars(charArray24);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray25);
        int int27 = strList12.indexOf((java.lang.Object) charArray25);
        strList12.clear();
        java.util.ListIterator<java.lang.String> strItor29 = strList12.listIterator();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = new org.apache.commons.lang3.text.StrTokenizer("", "#4#a4#");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = strTokenizer32.setQuoteChar('4');
        java.util.List<java.lang.String> strList35 = strTokenizer34.getTokenList();
        boolean boolean36 = strList12.containsAll((java.util.Collection<java.lang.String>) strList35);
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.lang.String> strList39 = strList35.subList(61, 53);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: toIndex = 53");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "#4#a4#" + "'", str11, "#4#a4#");
        org.junit.Assert.assertNotNull(strList12);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(charArray18);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray18), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray18), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray18), "[a]");
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[a]");
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray25);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray25), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray25), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray25), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(strTokenizer26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(strItor29);
        org.junit.Assert.assertNotNull(strTokenizer34);
        org.junit.Assert.assertNotNull(strList35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
    }

    @Test
    public void test01954() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01954");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.String str5 = strBuilder3.rightString((int) (short) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder3.insert(0, "StrTokenizer[#4#a4#]");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher11 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int12 = strBuilder9.indexOf(strMatcher11);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder9.append("#4#a4#");
        java.lang.String str16 = strBuilder9.leftString((int) (short) 100);
        int int18 = strBuilder9.lastIndexOf("StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder9.insert(0, (-1.0f));
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder9.appendSeparator(' ');
        char[] charArray30 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = new org.apache.commons.lang3.text.StrTokenizer(charArray30, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = strTokenizer32.setDelimiterString("hi!");
        java.lang.String str35 = strTokenizer34.nextToken();
        java.util.List<java.lang.String> strList36 = strTokenizer34.getTokenList();
        org.apache.commons.lang3.text.StrMatcher strMatcher37 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = strTokenizer34.setTrimmerMatcher(strMatcher37);
        char[] charArray45 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = new org.apache.commons.lang3.text.StrTokenizer(charArray45, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = new org.apache.commons.lang3.text.StrTokenizer(charArray45);
        int int50 = strMatcher37.isMatch(charArray45, 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder23.append(charArray45);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder3.appendln((java.lang.Object) strBuilder23);
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder53.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder55.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder55.setNewLineText("10\n\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder55.deleteFirst('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder61.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder63.clear();
        java.lang.Throwable throwable68 = null;
        java.io.IOException iOException69 = new java.io.IOException("", throwable68);
        java.io.IOException iOException70 = new java.io.IOException("#4#a4#", throwable68);
        java.io.IOException iOException71 = new java.io.IOException(throwable68);
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray75 = new java.lang.Object[] { 1.0f, iOException71, false, 100, strBuilder74 };
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder64.appendWithSeparators(objArray75, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder77.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder79.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder84 = strBuilder79.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder85 = strBuilder79.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder88 = strBuilder79.replaceFirst('#', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder89 = strBuilder88.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder92 = strBuilder89.appendPadding(52, '1');
        java.lang.String str93 = strBuilder89.getNewLineText();
        java.lang.StringBuffer stringBuffer94 = strBuilder89.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder95 = strBuilder60.appendln(stringBuffer94);
        org.apache.commons.lang3.text.StrBuilder strBuilder96 = strBuilder3.appendln(stringBuffer94);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strMatcher11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "#4#a4#" + "'", str16, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray30), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray30), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray30), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "#4#a4#" + "'", str35, "#4#a4#");
        org.junit.Assert.assertNotNull(strList36);
        org.junit.Assert.assertNotNull(strMatcher37);
        org.junit.Assert.assertNotNull(strTokenizer38);
        org.junit.Assert.assertNotNull(charArray45);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray45), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray45), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray45), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(objArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray75), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray75), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertNotNull(strBuilder81);
        org.junit.Assert.assertNotNull(strBuilder84);
        org.junit.Assert.assertNotNull(strBuilder85);
        org.junit.Assert.assertNotNull(strBuilder88);
        org.junit.Assert.assertNotNull(strBuilder89);
        org.junit.Assert.assertNotNull(strBuilder92);
        org.junit.Assert.assertNull(str93);
        org.junit.Assert.assertNotNull(stringBuffer94);
        org.junit.Assert.assertEquals(stringBuffer94.toString(), "1.0java.io.IOExceptionfalse1001.0\n35.0\n1111111111111111111111111111111111111111111111111111");
        org.junit.Assert.assertNotNull(strBuilder95);
        org.junit.Assert.assertNotNull(strBuilder96);
    }

    @Test
    public void test01955() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01955");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.appendln(10L);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder2.appendPadding((int) (short) 10, '4');
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder2.insert((int) '4', (float) 0L);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 52");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder8);
    }

    @Test
    public void test01956() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01956");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder18.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.append("java.io.IOException: ");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder23.deleteAll('a');
        boolean boolean29 = strBuilder27.endsWith("0java.io.IOExceptionfalse100");
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder27.appendln((long) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder32.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder34.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder34.appendln(10L);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder37.deleteFirst("");
        char[] charArray40 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder39.appendln(charArray40);
        boolean boolean42 = strBuilder39.isEmpty();
        java.lang.String str44 = strBuilder39.rightString((int) 'a');
        char[] charArray51 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = new org.apache.commons.lang3.text.StrTokenizer(charArray51, ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher55 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = new org.apache.commons.lang3.text.StrTokenizer(charArray51, strMatcher55);
        org.apache.commons.lang3.text.StrMatcher strMatcher57 = strTokenizer56.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder39.replaceAll(strMatcher57, "a");
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder31.appendln((java.lang.Object) strMatcher57);
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder31.appendNull();
        int int64 = strBuilder61.lastIndexOf('e', 6);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "10\n\n" + "'", str44, "10\n\n");
        org.junit.Assert.assertNotNull(charArray51);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray51), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray51), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray51), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher55);
        org.junit.Assert.assertNotNull(strMatcher57);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + (-1) + "'", int64 == (-1));
    }

    @Test
    public void test01957() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01957");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("");
        boolean boolean2 = strTokenizer1.hasPrevious();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher5 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int6 = strBuilder3.indexOf(strMatcher5);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder3.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder8.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder8.appendln((int) (short) 10);
        char[] charArray19 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer(charArray19, ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher23 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = new org.apache.commons.lang3.text.StrTokenizer(charArray19, strMatcher23);
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = strTokenizer24.getIgnoredMatcher();
        int int27 = strBuilder8.indexOf(strMatcher25, (int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder8.appendln("0java.io.IOExceptionfalse100");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder30.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder32.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder32.insert(0, (double) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder36.appendFixedWidthPadRight((java.lang.Object) 100.0d, 1, '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder40.trim();
        java.lang.Object[] objArray42 = new java.lang.Object[] {};
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder40.appendAll(objArray42);
        char[] charArray44 = strBuilder40.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder29.append(charArray44);
        char[] charArray52 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = new org.apache.commons.lang3.text.StrTokenizer(charArray52, ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher56 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = new org.apache.commons.lang3.text.StrTokenizer(charArray52, strMatcher56);
        org.apache.commons.lang3.text.StrMatcher strMatcher58 = strTokenizer57.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher59 = strTokenizer57.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder60.deleteFirst("hi!");
        java.lang.String str63 = strBuilder62.getNullText();
        char[] charArray65 = new char[] { 'a' };
        char[] charArray66 = strBuilder62.getChars(charArray65);
        char[] charArray71 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray72 = strBuilder62.getChars(charArray71);
        int int76 = strMatcher59.isMatch(charArray71, (int) (short) 100, (int) (short) 1, (int) (byte) 10);
        int int78 = strBuilder29.indexOf(strMatcher59, 74);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer79 = strTokenizer1.setIgnoredMatcher(strMatcher59);
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer79.set("1false0");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: set() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strTokenizer1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(strMatcher5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher23);
        org.junit.Assert.assertNotNull(strMatcher25);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(objArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray42), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray42), "[]");
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(charArray44);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray44), "100.01");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray44), "100.01");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray44), "[1, 0, 0, ., 0, 1]");
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(charArray52);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray52), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray52), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray52), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher56);
        org.junit.Assert.assertNotNull(strMatcher58);
        org.junit.Assert.assertNotNull(strMatcher59);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNull(str63);
        org.junit.Assert.assertNotNull(charArray65);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray65), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray65), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray65), "[a]");
        org.junit.Assert.assertNotNull(charArray66);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray66), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray66), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray66), "[a]");
        org.junit.Assert.assertNotNull(charArray71);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray71), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray71), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray71), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray72);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray72), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray72), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray72), "[a, 4,  , 4]");
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 0 + "'", int76 == 0);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + (-1) + "'", int78 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer79);
    }

    @Test
    public void test01958() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01958");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        java.lang.String str3 = strBuilder2.getNullText();
        char[] charArray5 = new char[] { 'a' };
        char[] charArray6 = strBuilder2.getChars(charArray5);
        char[] charArray11 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray12 = strBuilder2.getChars(charArray11);
        java.io.Reader reader13 = strBuilder2.asReader();
        reader13.mark((int) (byte) 0);
        boolean boolean16 = reader13.markSupported();
        reader13.close();
        int int18 = reader13.read();
        reader13.mark(49);
        long long22 = reader13.skip((long) 61);
        java.nio.CharBuffer charBuffer23 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int24 = reader13.read(charBuffer23);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[a]");
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(reader13);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + 0L + "'", long22 == 0L);
    }

    @Test
    public void test01959() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01959");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder3.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder5.clear();
        boolean boolean7 = strBuilder6.isEmpty();
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder10.deleteFirst("hi!");
        java.lang.String str13 = strBuilder12.getNullText();
        char[] charArray15 = new char[] { 'a' };
        char[] charArray16 = strBuilder12.getChars(charArray15);
        int int18 = strMatcher9.isMatch(charArray16, 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder6.append(charArray16);
        char[] charArray26 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = new org.apache.commons.lang3.text.StrTokenizer(charArray26, ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer(charArray26, strMatcher30);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int35 = strBuilder32.indexOf(strMatcher34);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder32.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int41 = strBuilder38.indexOf(strMatcher40);
        int int42 = strBuilder32.indexOf(strMatcher40);
        char[] charArray49 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = new org.apache.commons.lang3.text.StrTokenizer(charArray49, ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = new org.apache.commons.lang3.text.StrTokenizer(charArray49, strMatcher53);
        org.apache.commons.lang3.text.StrMatcher strMatcher55 = strTokenizer54.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = new org.apache.commons.lang3.text.StrTokenizer(charArray26, strMatcher40, strMatcher55);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = new org.apache.commons.lang3.text.StrTokenizer(charArray16, strMatcher55);
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = new org.apache.commons.lang3.text.StrBuilder(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher62 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int63 = strBuilder60.indexOf(strMatcher62);
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder60.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder65.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder65.appendln((int) (short) 10);
        org.apache.commons.lang3.text.StrMatcher strMatcher70 = org.apache.commons.lang3.text.StrMatcher.spaceMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder65.replace(strMatcher70, "StrTokenizer[#4#a4#]", (int) (short) 1, 1, (int) (byte) 10);
        int int77 = strBuilder59.lastIndexOf(strMatcher70, (int) (short) 100);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer78 = strTokenizer57.setTrimmerMatcher(strMatcher70);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer79 = strTokenizer2.setQuoteMatcher(strMatcher70);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer80 = new org.apache.commons.lang3.text.StrTokenizer("true\n", strMatcher70);
        java.util.List<java.lang.String> strList81 = strTokenizer80.getTokenList();
        org.junit.Assert.assertNotNull(strTokenizer2);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(strMatcher9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(charArray15);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray15), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray15), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray15), "[a]");
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[a]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(charArray26);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray26), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray26), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray26), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertNotNull(strMatcher34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strMatcher40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertNotNull(charArray49);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray49), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray49), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray49), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher53);
        org.junit.Assert.assertNotNull(strMatcher55);
        org.junit.Assert.assertNotNull(strMatcher62);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + (-1) + "'", int63 == (-1));
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strMatcher70);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + (-1) + "'", int77 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer78);
        org.junit.Assert.assertNotNull(strTokenizer79);
        org.junit.Assert.assertNotNull(strList81);
    }

    @Test
    public void test01960() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01960");
        java.lang.String[] strArray3 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList4 = new java.util.ArrayList<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        char[] charArray12 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strTokenizer14.setDelimiterString("hi!");
        boolean boolean17 = strTokenizer14.isIgnoreEmptyTokens();
        java.lang.String str18 = strTokenizer14.next();
        int int19 = strList4.indexOf((java.lang.Object) strTokenizer14);
        int int20 = strTokenizer14.nextIndex();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher23 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int24 = strBuilder21.indexOf(strMatcher23);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder21.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder26.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder26.appendln((int) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder26.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder33.deleteFirst("hi!");
        java.lang.String str36 = strBuilder35.getNullText();
        char[] charArray38 = new char[] { 'a' };
        char[] charArray39 = strBuilder35.getChars(charArray38);
        char[] charArray44 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray45 = strBuilder35.getChars(charArray44);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = new org.apache.commons.lang3.text.StrTokenizer(charArray44, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder26.appendln(charArray44, 0, 0);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = new org.apache.commons.lang3.text.StrTokenizer(charArray44, "0\nzinekoTrtSeslaf ");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray44);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = strTokenizer14.reset(charArray44);
        int int55 = strTokenizer54.previousIndex();
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer54.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: remove() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "#4#a4#" + "'", str18, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertNotNull(strMatcher23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[a]");
        org.junit.Assert.assertNotNull(charArray39);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray39), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray39), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray39), "[a]");
        org.junit.Assert.assertNotNull(charArray44);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray44), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray44), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray44), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray45);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray45), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray45), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray45), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strTokenizer53);
        org.junit.Assert.assertNotNull(strTokenizer54);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1));
    }

    @Test
    public void test01961() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01961");
        java.lang.String[] strArray3 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList4 = new java.util.ArrayList<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        char[] charArray12 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strTokenizer14.setDelimiterString("hi!");
        boolean boolean17 = strTokenizer14.isIgnoreEmptyTokens();
        java.lang.String str18 = strTokenizer14.next();
        int int19 = strList4.indexOf((java.lang.Object) strTokenizer14);
        java.util.ListIterator<java.lang.String> strItor21 = strList4.listIterator((int) (byte) 0);
        java.util.Iterator<java.lang.String> strItor22 = strList4.iterator();
        java.lang.String[] strArray26 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList27 = new java.util.ArrayList<java.lang.String>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList27, strArray26);
        char[] charArray35 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = new org.apache.commons.lang3.text.StrTokenizer(charArray35, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = strTokenizer37.setDelimiterString("hi!");
        boolean boolean40 = strTokenizer37.isIgnoreEmptyTokens();
        java.lang.String str41 = strTokenizer37.next();
        int int42 = strList27.indexOf((java.lang.Object) strTokenizer37);
        java.util.ListIterator<java.lang.String> strItor44 = strList27.listIterator((int) (byte) 0);
        java.util.Iterator<java.lang.String> strItor45 = strList27.iterator();
        boolean boolean46 = strList4.remove((java.lang.Object) strItor45);
        java.lang.String[] strArray50 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList51 = new java.util.ArrayList<java.lang.String>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList51, strArray50);
        char[] charArray59 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer61 = new org.apache.commons.lang3.text.StrTokenizer(charArray59, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer63 = strTokenizer61.setDelimiterString("hi!");
        boolean boolean64 = strTokenizer61.isIgnoreEmptyTokens();
        java.lang.String str65 = strTokenizer61.next();
        int int66 = strList51.indexOf((java.lang.Object) strTokenizer61);
        java.util.ListIterator<java.lang.String> strItor68 = strList51.listIterator((int) (byte) 0);
        java.util.Iterator<java.lang.String> strItor69 = strList51.iterator();
        boolean boolean70 = strList4.addAll((java.util.Collection<java.lang.String>) strList51);
        java.util.ListIterator<java.lang.String> strItor72 = strList4.listIterator((int) (byte) 0);
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.lang.String> strList75 = strList4.subList(100, 72);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: toIndex = 72");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "#4#a4#" + "'", str18, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(strItor21);
        org.junit.Assert.assertNotNull(strItor22);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "#4#a4#" + "'", str41, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertNotNull(strItor44);
        org.junit.Assert.assertNotNull(strItor45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(strArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(charArray59);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray59), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray59), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray59), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "#4#a4#" + "'", str65, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + (-1) + "'", int66 == (-1));
        org.junit.Assert.assertNotNull(strItor68);
        org.junit.Assert.assertNotNull(strItor69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(strItor72);
    }

    @Test
    public void test01962() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01962");
        char[] charArray6 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer8.setDelimiterString("hi!");
        java.lang.String str11 = strTokenizer10.nextToken();
        java.util.List<java.lang.String> strList12 = strTokenizer10.getTokenList();
        boolean boolean14 = strList12.add("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("");
        java.lang.String str17 = strTokenizer16.getContent();
        boolean boolean18 = strList12.equals((java.lang.Object) strTokenizer16);
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = org.apache.commons.lang3.text.StrMatcher.singleQuoteMatcher();
        boolean boolean20 = strList12.equals((java.lang.Object) strMatcher19);
        java.util.stream.Stream<java.lang.String> strStream21 = strList12.parallelStream();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder24.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder24.insert(0, (double) (byte) 100);
        java.io.Reader reader29 = strBuilder28.asReader();
        boolean boolean30 = strList12.remove((java.lang.Object) reader29);
        java.lang.String str32 = strList12.remove(1);
        // The following exception was thrown during execution in test generation
        try {
            strList12.add(2, "1.0java.io.IOExceptionfalse1001.0\n35.0\njava.io.IOException: 10.0\nStrTokenizer[#4#a4#]\n");
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 2, Size: 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "#4#a4#" + "'", str11, "#4#a4#");
        org.junit.Assert.assertNotNull(strList12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(strStream21);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(reader29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "hi!" + "'", str32, "hi!");
    }

    @Test
    public void test01963() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01963");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder2.insert(0, (double) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder6.appendFixedWidthPadRight((java.lang.Object) 100.0d, 1, '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder10.append(2);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder12.append(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder12.appendFixedWidthPadRight(10, 48, '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int22 = strBuilder19.indexOf(strMatcher21);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder19.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder24.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder26.deleteFirst('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher31 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int32 = strBuilder29.indexOf(strMatcher31);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder29.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder34.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder36.deleteFirst('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder28.appendln(strBuilder36);
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = org.apache.commons.lang3.text.StrMatcher.doubleQuoteMatcher();
        int int42 = strBuilder28.lastIndexOf(strMatcher40, (int) 'a');
        char[] charArray50 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = new org.apache.commons.lang3.text.StrTokenizer(charArray50, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = new org.apache.commons.lang3.text.StrTokenizer(charArray50);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = strTokenizer53.setDelimiterChar('a');
        org.apache.commons.lang3.text.StrMatcher strMatcher56 = strTokenizer55.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer59 = new org.apache.commons.lang3.text.StrTokenizer("", "#4#a4#");
        org.apache.commons.lang3.text.StrMatcher strMatcher60 = strTokenizer59.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer61 = new org.apache.commons.lang3.text.StrTokenizer("0java.io.IOExceptionfalse100", strMatcher56, strMatcher60);
        int int62 = strBuilder28.indexOf(strMatcher60);
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder12.append((java.lang.CharSequence) strBuilder28);
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder28.deleteAll("java.io.IOException: StrTokenizer[not tokenized yet]");
        java.io.Reader reader66 = strBuilder65.asReader();
        char[] charArray73 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer75 = new org.apache.commons.lang3.text.StrTokenizer(charArray73, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer77 = strTokenizer75.setDelimiterString("hi!");
        java.lang.String str78 = strTokenizer77.nextToken();
        java.util.List<java.lang.String> strList79 = strTokenizer77.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder80.deleteFirst("hi!");
        java.lang.String str83 = strBuilder82.getNullText();
        char[] charArray85 = new char[] { 'a' };
        char[] charArray86 = strBuilder82.getChars(charArray85);
        char[] charArray91 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray92 = strBuilder82.getChars(charArray91);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer93 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray92);
        int int94 = strList79.indexOf((java.lang.Object) charArray92);
        strList79.clear();
        java.lang.Object[] objArray96 = strList79.toArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder97 = strBuilder65.appendAll((java.lang.Iterable<java.lang.String>) strList79);
        org.apache.commons.lang3.text.StrBuilder strBuilder98 = strBuilder97.appendNull();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strMatcher31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strMatcher40);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertNotNull(charArray50);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray50), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray50), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray50), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer55);
        org.junit.Assert.assertNotNull(strMatcher56);
        org.junit.Assert.assertNotNull(strMatcher60);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + (-1) + "'", int62 == (-1));
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(reader66);
        org.junit.Assert.assertNotNull(charArray73);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray73), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray73), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray73), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer77);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "#4#a4#" + "'", str78, "#4#a4#");
        org.junit.Assert.assertNotNull(strList79);
        org.junit.Assert.assertNotNull(strBuilder82);
        org.junit.Assert.assertNull(str83);
        org.junit.Assert.assertNotNull(charArray85);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray85), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray85), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray85), "[a]");
        org.junit.Assert.assertNotNull(charArray86);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray86), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray86), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray86), "[a]");
        org.junit.Assert.assertNotNull(charArray91);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray91), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray91), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray91), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray92);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray92), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray92), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray92), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(strTokenizer93);
        org.junit.Assert.assertTrue("'" + int94 + "' != '" + (-1) + "'", int94 == (-1));
        org.junit.Assert.assertNotNull(objArray96);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray96), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray96), "[]");
        org.junit.Assert.assertNotNull(strBuilder97);
        org.junit.Assert.assertNotNull(strBuilder98);
    }

    @Test
    public void test01964() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01964");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("true\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder2.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher5 = org.apache.commons.lang3.text.StrMatcher.splitMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder2.deleteAll(strMatcher5);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder2.append((double) 59);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder2.append((double) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int14 = strBuilder11.indexOf(strMatcher13);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder11.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder16.appendln((int) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder16.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.deleteFirst("hi!");
        java.lang.String str26 = strBuilder25.getNullText();
        char[] charArray28 = new char[] { 'a' };
        char[] charArray29 = strBuilder25.getChars(charArray28);
        char[] charArray34 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray35 = strBuilder25.getChars(charArray34);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = new org.apache.commons.lang3.text.StrTokenizer(charArray34, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder16.appendln(charArray34, 0, 0);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = new org.apache.commons.lang3.text.StrTokenizer(charArray34, "0\nzinekoTrtSeslaf ");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray34);
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = org.apache.commons.lang3.text.StrMatcher.singleQuoteMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher47 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int48 = strBuilder45.indexOf(strMatcher47);
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder45.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder50.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder50.appendln((int) (short) 10);
        char[] charArray61 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer63 = new org.apache.commons.lang3.text.StrTokenizer(charArray61, ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher65 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer66 = new org.apache.commons.lang3.text.StrTokenizer(charArray61, strMatcher65);
        org.apache.commons.lang3.text.StrMatcher strMatcher67 = strTokenizer66.getIgnoredMatcher();
        int int69 = strBuilder50.indexOf(strMatcher67, (int) (byte) 1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer70 = new org.apache.commons.lang3.text.StrTokenizer(charArray34, strMatcher44, strMatcher67);
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder10.append(charArray34);
        java.util.stream.IntStream intStream72 = strBuilder10.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder1.append(strBuilder10);
        boolean boolean75 = strBuilder1.contains('3');
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strMatcher5);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strMatcher13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(charArray28);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray28), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray28), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray28), "[a]");
        org.junit.Assert.assertNotNull(charArray29);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray29), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray29), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray29), "[a]");
        org.junit.Assert.assertNotNull(charArray34);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray34), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray34), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray34), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strTokenizer43);
        org.junit.Assert.assertNotNull(strMatcher44);
        org.junit.Assert.assertNotNull(strMatcher47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(charArray61);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray61), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray61), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray61), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher65);
        org.junit.Assert.assertNotNull(strMatcher67);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + (-1) + "'", int69 == (-1));
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(intStream72);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
    }

    @Test
    public void test01965() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01965");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.append(false);
        char[] charArray16 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer(charArray16, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = strTokenizer18.setDelimiterString("hi!");
        boolean boolean21 = strTokenizer18.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder5.appendFixedWidthPadRight((java.lang.Object) strTokenizer18, 10, ' ');
        int int25 = strTokenizer18.previousIndex();
        boolean boolean26 = strTokenizer18.hasNext();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = strTokenizer18.reset("#4#a4#");
        java.util.List<java.lang.String> strList29 = strTokenizer18.getTokenList();
        java.lang.Object[] objArray30 = strList29.toArray();
        java.util.stream.Stream<java.lang.String> strStream31 = strList29.stream();
        char[] charArray38 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = new org.apache.commons.lang3.text.StrTokenizer(charArray38, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = strTokenizer40.setDelimiterString("hi!");
        boolean boolean43 = strTokenizer40.isIgnoreEmptyTokens();
        java.lang.String str44 = strTokenizer40.next();
        org.apache.commons.lang3.text.StrMatcher strMatcher45 = strTokenizer40.getDelimiterMatcher();
        boolean boolean46 = strTokenizer40.hasNext();
        boolean boolean47 = strList29.contains((java.lang.Object) boolean46);
        java.util.function.UnaryOperator<java.lang.String> strUnaryOperator48 = null;
        // The following exception was thrown during execution in test generation
        try {
            strList29.replaceAll(strUnaryOperator48);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(strTokenizer28);
        org.junit.Assert.assertNotNull(strList29);
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray30), "[#4#a4#]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray30), "[#4#a4#]");
        org.junit.Assert.assertNotNull(strStream31);
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "#4#a4#" + "'", str44, "#4#a4#");
        org.junit.Assert.assertNotNull(strMatcher45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
    }

    @Test
    public void test01966() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01966");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.String str1 = strBuilder0.getNullText();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder2.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher5 = org.apache.commons.lang3.text.StrMatcher.splitMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder2.deleteAll(strMatcher5);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder0.appendln((java.lang.Object) strBuilder2);
        java.util.Iterator<java.lang.String> strItor8 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder0.appendAll(strItor8);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder0.setNewLineText("0\nzinekoTrtSeslaf ");
        // The following exception was thrown during execution in test generation
        try {
            char[] charArray14 = strBuilder0.toCharArray((int) '.', (int) '\000');
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: end < start");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strMatcher5);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
    }

    @Test
    public void test01967() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01967");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        java.lang.String str3 = strBuilder2.getNullText();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.append(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher8 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int9 = strBuilder6.indexOf(strMatcher8);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder6.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder13.deleteFirst('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder13.append('4');
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = org.apache.commons.lang3.text.StrMatcher.quoteMatcher();
        int int20 = strBuilder17.lastIndexOf(strMatcher18, (int) (short) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder2.deleteFirst(strMatcher18);
        char[] charArray28 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = new org.apache.commons.lang3.text.StrTokenizer(charArray28, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = strTokenizer30.setDelimiterString("hi!");
        java.lang.String str33 = strTokenizer32.nextToken();
        java.util.List<java.lang.String> strList34 = strTokenizer32.getTokenList();
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = strTokenizer32.setTrimmerMatcher(strMatcher35);
        char[] charArray43 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = new org.apache.commons.lang3.text.StrTokenizer(charArray43, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = new org.apache.commons.lang3.text.StrTokenizer(charArray43);
        int int48 = strMatcher35.isMatch(charArray43, 0);
        org.apache.commons.lang3.text.StrMatcher strMatcher49 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray43);
        // The following exception was thrown during execution in test generation
        try {
            int int51 = strMatcher18.isMatch(charArray43, 37);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strMatcher8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(charArray28);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray28), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray28), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray28), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "#4#a4#" + "'", str33, "#4#a4#");
        org.junit.Assert.assertNotNull(strList34);
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertNotNull(strTokenizer36);
        org.junit.Assert.assertNotNull(charArray43);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray43), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray43), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray43), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertNotNull(strMatcher49);
    }

    @Test
    public void test01968() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01968");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder18.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder24.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder26.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.appendln(10L);
        int int32 = strBuilder26.indexOf("#4#a4#", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder26.insert(1, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder23.appendln(strBuilder35);
        java.io.Writer writer37 = strBuilder36.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder38.deleteFirst("hi!");
        java.lang.String str41 = strBuilder40.getNullText();
        char[] charArray43 = new char[] { 'a' };
        char[] charArray44 = strBuilder40.getChars(charArray43);
        char[] charArray49 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray50 = strBuilder40.getChars(charArray49);
        writer37.write(charArray49);
        writer37.write("10\n\n");
        writer37.write(10);
        writer37.flush();
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder57.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder59.clear();
        java.lang.Throwable throwable64 = null;
        java.io.IOException iOException65 = new java.io.IOException("", throwable64);
        java.io.IOException iOException66 = new java.io.IOException("#4#a4#", throwable64);
        java.io.IOException iOException67 = new java.io.IOException(throwable64);
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray71 = new java.lang.Object[] { 1.0f, iOException67, false, 100, strBuilder70 };
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder60.appendWithSeparators(objArray71, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder73.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder75.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder75.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder75.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder84 = strBuilder75.replaceFirst('#', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder86 = strBuilder75.setLength((int) ' ');
        char[] charArray89 = strBuilder86.toCharArray((int) ' ', (int) 'a');
        writer37.write(charArray89);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer92 = new org.apache.commons.lang3.text.StrTokenizer(charArray89, "1.0java.io.IOExceptionfalse1001.0\n35.0\n");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer94 = strTokenizer92.reset(".0jav");
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer94.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: remove() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(writer37);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNotNull(charArray43);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray43), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray43), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray43), "[a]");
        org.junit.Assert.assertNotNull(charArray44);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray44), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray44), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray44), "[a]");
        org.junit.Assert.assertNotNull(charArray49);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray49), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray49), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray49), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray50);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray50), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray50), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray50), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(objArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray71), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray71), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertNotNull(strBuilder81);
        org.junit.Assert.assertNotNull(strBuilder84);
        org.junit.Assert.assertNotNull(strBuilder86);
        org.junit.Assert.assertNotNull(charArray89);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray89), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray89), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray89), "[]");
        org.junit.Assert.assertNotNull(strTokenizer94);
    }

    @Test
    public void test01969() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01969");
        java.lang.String[] strArray3 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList4 = new java.util.ArrayList<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        char[] charArray12 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strTokenizer14.setDelimiterString("hi!");
        boolean boolean17 = strTokenizer14.isIgnoreEmptyTokens();
        java.lang.String str18 = strTokenizer14.next();
        int int19 = strList4.indexOf((java.lang.Object) strTokenizer14);
        java.util.ListIterator<java.lang.String> strItor21 = strList4.listIterator((int) (byte) 0);
        java.util.Iterator<java.lang.String> strItor22 = strList4.iterator();
        java.lang.String[] strArray26 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList27 = new java.util.ArrayList<java.lang.String>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList27, strArray26);
        char[] charArray35 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = new org.apache.commons.lang3.text.StrTokenizer(charArray35, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = strTokenizer37.setDelimiterString("hi!");
        boolean boolean40 = strTokenizer37.isIgnoreEmptyTokens();
        java.lang.String str41 = strTokenizer37.next();
        int int42 = strList27.indexOf((java.lang.Object) strTokenizer37);
        boolean boolean43 = strList4.addAll((java.util.Collection<java.lang.String>) strList27);
        java.util.ListIterator<java.lang.String> strItor44 = strList27.listIterator();
        boolean boolean46 = strList27.add("");
        int int47 = strList27.size();
        boolean boolean49 = strList27.add("0java.io.IOExceptionfalse100");
        java.util.function.UnaryOperator<java.lang.String> strUnaryOperator50 = null;
        // The following exception was thrown during execution in test generation
        try {
            strList27.replaceAll(strUnaryOperator50);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "#4#a4#" + "'", str18, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(strItor21);
        org.junit.Assert.assertNotNull(strItor22);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "#4#a4#" + "'", str41, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(strItor44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 4 + "'", int47 == 4);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
    }

    @Test
    public void test01970() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01970");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = new org.apache.commons.lang3.text.StrTokenizer("hi!");
        java.lang.String str2 = strTokenizer1.previousToken();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = strTokenizer1.setQuoteChar(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteFirst("hi!");
        java.lang.String str9 = strBuilder7.leftString(32);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder10.deleteFirst("hi!");
        java.lang.String str13 = strBuilder12.getNullText();
        char[] charArray15 = new char[] { 'a' };
        char[] charArray16 = strBuilder12.getChars(charArray15);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder7.append((java.lang.Object) strBuilder12);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder7.replaceAll('#', ' ');
        java.util.stream.IntStream intStream21 = strBuilder7.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder7.appendSeparator('#');
        boolean boolean24 = strBuilder23.isEmpty();
        char[] charArray25 = new char[] {};
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer(charArray25, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder23.appendln(charArray25);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = strTokenizer1.reset(charArray25);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNotNull(strTokenizer4);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(charArray15);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray15), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray15), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray15), "[a]");
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[a]");
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(intStream21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(charArray25);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray25), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray25), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray25), "[]");
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strTokenizer29);
    }

    @Test
    public void test01971() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01971");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        java.lang.String str3 = strBuilder2.getNullText();
        char[] charArray5 = new char[] { 'a' };
        char[] charArray6 = strBuilder2.getChars(charArray5);
        char[] charArray11 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray12 = strBuilder2.getChars(charArray11);
        java.io.Reader reader13 = strBuilder2.asReader();
        long long15 = reader13.skip((long) 59);
        reader13.reset();
        long long18 = reader13.skip(0L);
        boolean boolean19 = reader13.markSupported();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[a]");
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(reader13);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 0L + "'", long15 == 0L);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 0L + "'", long18 == 0L);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
    }

    @Test
    public void test01972() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01972");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = org.apache.commons.lang3.text.StrMatcher.noneMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("");
        char[] charArray11 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = new org.apache.commons.lang3.text.StrTokenizer(charArray11, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = strTokenizer13.setDelimiterString("hi!");
        java.lang.String str16 = strTokenizer15.nextToken();
        java.util.List<java.lang.String> strList17 = strTokenizer15.getTokenList();
        boolean boolean19 = strList17.add("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("");
        java.lang.String str22 = strTokenizer21.getContent();
        boolean boolean23 = strList17.equals((java.lang.Object) strTokenizer21);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = strTokenizer21.setIgnoreEmptyTokens(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder26.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder28.clear();
        java.lang.Throwable throwable33 = null;
        java.io.IOException iOException34 = new java.io.IOException("", throwable33);
        java.io.IOException iOException35 = new java.io.IOException("#4#a4#", throwable33);
        java.io.IOException iOException36 = new java.io.IOException(throwable33);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray40 = new java.lang.Object[] { 1.0f, iOException36, false, 100, strBuilder39 };
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder29.appendWithSeparators(objArray40, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder42.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder44.appendln((float) '#');
        boolean boolean48 = strBuilder44.contains("StrTokenizer[#4#a4#]");
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder50.deleteFirst("hi!");
        java.lang.String str53 = strBuilder52.getNullText();
        char[] charArray55 = new char[] { 'a' };
        char[] charArray56 = strBuilder52.getChars(charArray55);
        char[] charArray61 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray62 = strBuilder52.getChars(charArray61);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = new org.apache.commons.lang3.text.StrTokenizer(charArray61, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder44.insert(0, charArray61);
        org.apache.commons.lang3.text.StrMatcher strMatcher66 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray61);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer67 = strTokenizer21.setQuoteMatcher(strMatcher66);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer68 = new org.apache.commons.lang3.text.StrTokenizer("0.012true104444444444444444444444444444444444444444444444  \n", strMatcher4, strMatcher66);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer69 = new org.apache.commons.lang3.text.StrTokenizer("#4#", strMatcher1, strMatcher66);
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer69.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: remove() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher1);
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "#4#a4#" + "'", str16, "#4#a4#");
        org.junit.Assert.assertNotNull(strList17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(strTokenizer21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(strTokenizer25);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(objArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray40), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray40), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertNotNull(charArray55);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray55), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray55), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray55), "[a]");
        org.junit.Assert.assertNotNull(charArray56);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray56), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray56), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray56), "[a]");
        org.junit.Assert.assertNotNull(charArray61);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray61), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray61), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray61), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray62);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray62), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray62), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray62), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strMatcher66);
        org.junit.Assert.assertNotNull(strTokenizer67);
    }

    @Test
    public void test01973() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01973");
        java.lang.String[] strArray2 = new java.lang.String[] { "0\nzinekoTrtSeslaf ", "a" };
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        boolean boolean5 = strList3.isEmpty();
        java.lang.String[] strArray9 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList10 = new java.util.ArrayList<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        char[] charArray18 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = new org.apache.commons.lang3.text.StrTokenizer(charArray18, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = strTokenizer20.setDelimiterString("hi!");
        boolean boolean23 = strTokenizer20.isIgnoreEmptyTokens();
        java.lang.String str24 = strTokenizer20.next();
        int int25 = strList10.indexOf((java.lang.Object) strTokenizer20);
        java.util.ListIterator<java.lang.String> strItor27 = strList10.listIterator((int) (byte) 0);
        java.util.Iterator<java.lang.String> strItor28 = strList10.iterator();
        java.lang.String[] strArray32 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList33 = new java.util.ArrayList<java.lang.String>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList33, strArray32);
        char[] charArray41 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = new org.apache.commons.lang3.text.StrTokenizer(charArray41, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = strTokenizer43.setDelimiterString("hi!");
        boolean boolean46 = strTokenizer43.isIgnoreEmptyTokens();
        java.lang.String str47 = strTokenizer43.next();
        int int48 = strList33.indexOf((java.lang.Object) strTokenizer43);
        boolean boolean49 = strList10.addAll((java.util.Collection<java.lang.String>) strList33);
        java.util.ListIterator<java.lang.String> strItor50 = strList33.listIterator();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int54 = strBuilder51.indexOf(strMatcher53);
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder51.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher59 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int60 = strBuilder57.indexOf(strMatcher59);
        int int61 = strBuilder51.indexOf(strMatcher59);
        int int62 = strList33.indexOf((java.lang.Object) strBuilder51);
        int int63 = strList33.size();
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher66 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int67 = strBuilder64.indexOf(strMatcher66);
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder64.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder69.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder69.appendln((int) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder69.setNullText("");
        int int76 = strList33.lastIndexOf((java.lang.Object) strBuilder75);
        boolean boolean77 = strList3.removeAll((java.util.Collection<java.lang.String>) strList33);
        boolean boolean78 = strList33.isEmpty();
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(charArray18);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray18), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray18), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray18), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "#4#a4#" + "'", str24, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNotNull(strItor27);
        org.junit.Assert.assertNotNull(strItor28);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(charArray41);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray41), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray41), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray41), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "#4#a4#" + "'", str47, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(strItor50);
        org.junit.Assert.assertNotNull(strMatcher53);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strMatcher59);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-1) + "'", int60 == (-1));
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + (-1) + "'", int61 == (-1));
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + (-1) + "'", int62 == (-1));
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 3 + "'", int63 == 3);
        org.junit.Assert.assertNotNull(strMatcher66);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + (-1) + "'", int67 == (-1));
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + (-1) + "'", int76 == (-1));
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
    }

    @Test
    public void test01974() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01974");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(".IOExceptionfalse1001.0\n35.0\n1false0\n\n32");
        org.junit.Assert.assertNotNull(strTokenizer1);
    }

    @Test
    public void test01975() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01975");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        java.lang.String str3 = strBuilder2.getNullText();
        char[] charArray5 = new char[] { 'a' };
        char[] charArray6 = strBuilder2.getChars(charArray5);
        char[] charArray11 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray12 = strBuilder2.getChars(charArray11);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray12);
        char[] charArray20 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = new org.apache.commons.lang3.text.StrTokenizer(charArray20, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer(charArray20);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = strTokenizer13.reset(charArray20);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer(charArray20, '#', '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = new org.apache.commons.lang3.text.StrTokenizer(charArray20, "java.io.IOException: StrTokenizer[not tokenized yet]");
        java.lang.String str30 = strTokenizer29.next();
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer29.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: remove() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[a]");
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(strTokenizer13);
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray20), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray20), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray20), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer24);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "#4#a4#" + "'", str30, "#4#a4#");
    }

    @Test
    public void test01976() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01976");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder2.insert(0, (double) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder6.appendFixedWidthPadRight((java.lang.Object) 100.0d, 1, '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder10.append(2);
        char[] charArray19 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer(charArray19, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = new org.apache.commons.lang3.text.StrTokenizer(charArray19);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = strTokenizer22.setDelimiterChar('a');
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = strTokenizer24.getTrimmerMatcher();
        int int26 = strTokenizer24.size();
        java.lang.String str27 = strTokenizer24.next();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = strTokenizer24.setIgnoreEmptyTokens(true);
        java.util.List<java.lang.String> strList30 = strTokenizer24.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder31.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder33.clear();
        boolean boolean35 = strBuilder34.isEmpty();
        org.apache.commons.lang3.text.StrMatcher strMatcher37 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder38.deleteFirst("hi!");
        java.lang.String str41 = strBuilder40.getNullText();
        char[] charArray43 = new char[] { 'a' };
        char[] charArray44 = strBuilder40.getChars(charArray43);
        int int46 = strMatcher37.isMatch(charArray44, 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder34.append(charArray44);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = new org.apache.commons.lang3.text.StrTokenizer(charArray44, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = new org.apache.commons.lang3.text.StrTokenizer(charArray44);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = strTokenizer50.setIgnoreEmptyTokens(true);
        boolean boolean53 = strTokenizer50.hasNext();
        boolean boolean54 = strList30.contains((java.lang.Object) strTokenizer50);
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder10.appendAll((java.util.Iterator<java.lang.String>) strTokenizer50);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder10.insert((int) 'e', (long) 59);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 101");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer24);
        org.junit.Assert.assertNotNull(strMatcher25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 2 + "'", int26 == 2);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "#4#" + "'", str27, "#4#");
        org.junit.Assert.assertNotNull(strTokenizer29);
        org.junit.Assert.assertNotNull(strList30);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(strMatcher37);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNotNull(charArray43);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray43), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray43), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray43), "[a]");
        org.junit.Assert.assertNotNull(charArray44);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray44), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray44), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray44), "[a]");
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strTokenizer52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(strBuilder55);
    }

    @Test
    public void test01977() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01977");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder18.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder24.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder26.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.appendln(10L);
        int int32 = strBuilder26.indexOf("#4#a4#", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder26.insert(1, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder23.appendln(strBuilder35);
        java.io.Writer writer37 = strBuilder36.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder38.deleteFirst("hi!");
        java.lang.String str41 = strBuilder40.getNullText();
        char[] charArray43 = new char[] { 'a' };
        char[] charArray44 = strBuilder40.getChars(charArray43);
        char[] charArray49 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray50 = strBuilder40.getChars(charArray49);
        writer37.write(charArray49);
        writer37.write("10\n\n");
        writer37.write(10);
        writer37.flush();
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder57.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder59.clear();
        java.lang.Throwable throwable64 = null;
        java.io.IOException iOException65 = new java.io.IOException("", throwable64);
        java.io.IOException iOException66 = new java.io.IOException("#4#a4#", throwable64);
        java.io.IOException iOException67 = new java.io.IOException(throwable64);
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray71 = new java.lang.Object[] { 1.0f, iOException67, false, 100, strBuilder70 };
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder60.appendWithSeparators(objArray71, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder73.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder75.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder75.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder75.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder84 = strBuilder75.replaceFirst('#', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder86 = strBuilder75.setLength((int) ' ');
        char[] charArray89 = strBuilder86.toCharArray((int) ' ', (int) 'a');
        writer37.write(charArray89);
        java.io.Writer writer92 = writer37.append(' ');
        writer92.flush();
        writer92.flush();
        writer92.write(36);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(writer37);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNotNull(charArray43);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray43), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray43), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray43), "[a]");
        org.junit.Assert.assertNotNull(charArray44);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray44), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray44), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray44), "[a]");
        org.junit.Assert.assertNotNull(charArray49);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray49), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray49), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray49), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray50);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray50), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray50), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray50), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(objArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray71), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray71), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertNotNull(strBuilder81);
        org.junit.Assert.assertNotNull(strBuilder84);
        org.junit.Assert.assertNotNull(strBuilder86);
        org.junit.Assert.assertNotNull(charArray89);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray89), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray89), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray89), "[]");
        org.junit.Assert.assertNotNull(writer92);
    }

    @Test
    public void test01978() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01978");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append("#4#a4#");
        java.lang.String str7 = strBuilder0.leftString((int) (short) 100);
        int int9 = strBuilder0.lastIndexOf("StrTokenizer[not tokenized yet]");
        java.lang.String str10 = strBuilder0.toString();
        int int13 = strBuilder0.lastIndexOf(' ', (int) ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder0.append(false);
        java.lang.String str16 = strBuilder0.getNullText();
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "#4#a4#" + "'", str7, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "#4#a4#" + "'", str10, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNull(str16);
    }

    @Test
    public void test01979() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01979");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        java.lang.String str3 = strBuilder2.getNullText();
        char[] charArray5 = new char[] { 'a' };
        char[] charArray6 = strBuilder2.getChars(charArray5);
        java.lang.StringBuffer stringBuffer7 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder2.append(stringBuffer7);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder2.deleteFirst('#');
        boolean boolean11 = strBuilder2.isEmpty();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[a]");
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[a]");
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
    }

    @Test
    public void test01980() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01980");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder3.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder4.appendln((long) '#');
        java.util.stream.IntStream intStream7 = strBuilder4.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder4.appendSeparator("10\n\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder4.replaceFirst('4', ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder4.appendNull();
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder4.appendFixedWidthPadRight((java.lang.Object) strMatcher15, 2, '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendln((double) 34);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder20.clear();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(intStream7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strMatcher15);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder21);
    }

    @Test
    public void test01981() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01981");
        char[] charArray6 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer8.setDelimiterString("hi!");
        java.lang.String str11 = strTokenizer10.nextToken();
        java.util.List<java.lang.String> strList12 = strTokenizer10.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder13.deleteFirst("hi!");
        java.lang.String str16 = strBuilder15.getNullText();
        char[] charArray18 = new char[] { 'a' };
        char[] charArray19 = strBuilder15.getChars(charArray18);
        char[] charArray24 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray25 = strBuilder15.getChars(charArray24);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray25);
        int int27 = strList12.indexOf((java.lang.Object) charArray25);
        strList12.clear();
        java.lang.Object[] objArray29 = strList12.toArray();
        boolean boolean30 = strList12.isEmpty();
        // The following exception was thrown during execution in test generation
        try {
            java.util.ListIterator<java.lang.String> strItor32 = strList12.listIterator(59);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 59");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "#4#a4#" + "'", str11, "#4#a4#");
        org.junit.Assert.assertNotNull(strList12);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(charArray18);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray18), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray18), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray18), "[a]");
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[a]");
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray25);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray25), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray25), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray25), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(strTokenizer26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(objArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray29), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray29), "[]");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
    }

    @Test
    public void test01982() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01982");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer(".IOExceptionfalse1001.0\n35.0\n1false0\n\n32", '.');
    }

    @Test
    public void test01983() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01983");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder2.insert(0, (double) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder6.appendFixedWidthPadRight((java.lang.Object) 100.0d, 1, '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder10.append(2);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder13.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder15.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.appendln(10L);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.deleteFirst("");
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = org.apache.commons.lang3.text.StrMatcher.spaceMatcher();
        int int23 = strBuilder18.indexOf(strMatcher21, 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder10.replace(strMatcher21, "java.io.IOException: ", (int) (byte) 1, (int) (byte) 10, (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher31 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int32 = strBuilder29.indexOf(strMatcher31);
        char[] charArray39 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = new org.apache.commons.lang3.text.StrTokenizer(charArray39, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder29.appendAll((java.util.Iterator<java.lang.String>) strTokenizer41);
        java.lang.String str45 = strBuilder29.midString((int) (byte) 1, (-1));
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder46.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder48.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder48.appendln(10L);
        int int54 = strBuilder48.indexOf("#4#a4#", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder48.appendSeparator("", 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder48.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder48.append("java.io.IOException: ");
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder29.append((java.lang.Object) strBuilder60);
        boolean boolean62 = strBuilder10.equals((java.lang.Object) strBuilder61);
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder10.ensureCapacity(48);
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder64.insert(1, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder67.append((double) 4L);
        int int72 = strBuilder69.lastIndexOf("59.0", 66);
        boolean boolean74 = strBuilder69.startsWith("0\nzinekoTrtSeslaf ");
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strMatcher31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNotNull(charArray39);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray39), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray39), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray39), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "" + "'", str45, "");
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + (-1) + "'", int72 == (-1));
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
    }

    @Test
    public void test01984() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01984");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.appendln((int) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder5.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int15 = strBuilder12.indexOf(strMatcher14);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder11.deleteFirst(strMatcher14);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder16.minimizeCapacity();
        char[] charArray24 = new char[] { 'a', '4', 'a', 'a', '#', ' ' };
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int28 = strBuilder25.indexOf(strMatcher27);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder25.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int34 = strBuilder31.indexOf(strMatcher33);
        int int35 = strBuilder25.indexOf(strMatcher33);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = new org.apache.commons.lang3.text.StrTokenizer(charArray24, strMatcher33);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder16.replace(strMatcher33, "", 2, (int) (short) 100, 10);
        char[] charArray44 = strBuilder16.toCharArray((int) (byte) 0, (int) (byte) 0);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = strBuilder16.asTokenizer();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = strTokenizer45.setDelimiterChar('0');
        java.util.List<java.lang.String> strList48 = strTokenizer47.getTokenList();
        java.lang.String[] strArray52 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList53 = new java.util.ArrayList<java.lang.String>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList53, strArray52);
        char[] charArray61 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer63 = new org.apache.commons.lang3.text.StrTokenizer(charArray61, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer65 = strTokenizer63.setDelimiterString("hi!");
        boolean boolean66 = strTokenizer63.isIgnoreEmptyTokens();
        java.lang.String str67 = strTokenizer63.next();
        int int68 = strList53.indexOf((java.lang.Object) strTokenizer63);
        java.util.ListIterator<java.lang.String> strItor70 = strList53.listIterator((int) (byte) 0);
        java.lang.String[] strArray74 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList75 = new java.util.ArrayList<java.lang.String>();
        boolean boolean76 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList75, strArray74);
        char[] charArray83 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer85 = new org.apache.commons.lang3.text.StrTokenizer(charArray83, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer87 = strTokenizer85.setDelimiterString("hi!");
        boolean boolean88 = strTokenizer85.isIgnoreEmptyTokens();
        java.lang.String str89 = strTokenizer85.next();
        int int90 = strList75.indexOf((java.lang.Object) strTokenizer85);
        java.util.ListIterator<java.lang.String> strItor92 = strList75.listIterator((int) (byte) 0);
        java.util.Iterator<java.lang.String> strItor93 = strList75.iterator();
        boolean boolean94 = strList53.removeAll((java.util.Collection<java.lang.String>) strList75);
        java.lang.String str96 = strList75.get(1);
        boolean boolean97 = strList48.addAll((java.util.Collection<java.lang.String>) strList75);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str99 = strList48.remove(10);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 10, Size: 5");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "a4aa# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "a4aa# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[a, 4, a, a, #,  ]");
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(charArray44);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray44), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray44), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray44), "[]");
        org.junit.Assert.assertNotNull(strTokenizer45);
        org.junit.Assert.assertNotNull(strTokenizer47);
        org.junit.Assert.assertNotNull(strList48);
        org.junit.Assert.assertNotNull(strArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(charArray61);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray61), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray61), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray61), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "#4#a4#" + "'", str67, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + (-1) + "'", int68 == (-1));
        org.junit.Assert.assertNotNull(strItor70);
        org.junit.Assert.assertNotNull(strArray74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNotNull(charArray83);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray83), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray83), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray83), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer87);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "#4#a4#" + "'", str89, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + (-1) + "'", int90 == (-1));
        org.junit.Assert.assertNotNull(strItor92);
        org.junit.Assert.assertNotNull(strItor93);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + true + "'", boolean94 == true);
        org.junit.Assert.assertEquals("'" + str96 + "' != '" + "" + "'", str96, "");
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + true + "'", boolean97 == true);
    }

    @Test
    public void test01985() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01985");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder18.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder24.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder26.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.appendln(10L);
        int int32 = strBuilder26.indexOf("#4#a4#", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder26.insert(1, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder23.appendln(strBuilder35);
        java.io.Writer writer37 = strBuilder36.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder38.deleteFirst("hi!");
        java.lang.String str41 = strBuilder40.getNullText();
        char[] charArray43 = new char[] { 'a' };
        char[] charArray44 = strBuilder40.getChars(charArray43);
        char[] charArray49 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray50 = strBuilder40.getChars(charArray49);
        writer37.write(charArray49);
        writer37.write("10\n\n");
        writer37.write(10);
        writer37.flush();
        char[] charArray57 = null;
        writer37.write(charArray57, 2, 32);
        // The following exception was thrown during execution in test generation
        try {
            writer37.write("1.0java.io.IOExceptionfalse1001.0", (int) '.', 5);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: startIndex must be valid");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(writer37);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNotNull(charArray43);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray43), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray43), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray43), "[a]");
        org.junit.Assert.assertNotNull(charArray44);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray44), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray44), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray44), "[a]");
        org.junit.Assert.assertNotNull(charArray49);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray49), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray49), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray49), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray50);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray50), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray50), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray50), "[a, 4,  , 4]");
    }

    @Test
    public void test01986() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01986");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("");
        int int2 = strBuilder1.length();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.deleteFirst("#4#a4#");
        int int7 = strBuilder4.lastIndexOf("1.0java.io.IOExceptionfalse1001.0\n35.0\n10.0\n", 33);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
    }

    @Test
    public void test01987() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01987");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder1.deleteFirst("hi!");
        java.lang.String str4 = strBuilder3.getNullText();
        char[] charArray6 = new char[] { 'a' };
        char[] charArray7 = strBuilder3.getChars(charArray6);
        java.lang.StringBuffer stringBuffer8 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder3.append(stringBuffer8);
        java.io.Writer writer10 = strBuilder9.asWriter();
        writer10.write((int) (short) 1);
        writer10.write((int) (short) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder15.deleteFirst("hi!");
        java.lang.String str19 = strBuilder17.leftString(32);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder20.deleteFirst("hi!");
        java.lang.String str23 = strBuilder22.getNullText();
        char[] charArray25 = new char[] { 'a' };
        char[] charArray26 = strBuilder22.getChars(charArray25);
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder17.append((java.lang.Object) strBuilder22);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder17.append(100L);
        int int32 = strBuilder29.lastIndexOf('a', (int) (short) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder33.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder35.clear();
        java.lang.Throwable throwable40 = null;
        java.io.IOException iOException41 = new java.io.IOException("", throwable40);
        java.io.IOException iOException42 = new java.io.IOException("#4#a4#", throwable40);
        java.io.IOException iOException43 = new java.io.IOException(throwable40);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray47 = new java.lang.Object[] { 1.0f, iOException43, false, 100, strBuilder46 };
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder36.appendWithSeparators(objArray47, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder49.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder51.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder51.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder56.append("java.io.IOException: ");
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder56.deleteAll('a');
        boolean boolean61 = strBuilder60.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher64 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int65 = strBuilder62.indexOf(strMatcher64);
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder62.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder67.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder67.appendln((int) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder67.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder74.deleteFirst("hi!");
        java.lang.String str77 = strBuilder76.getNullText();
        char[] charArray79 = new char[] { 'a' };
        char[] charArray80 = strBuilder76.getChars(charArray79);
        char[] charArray85 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray86 = strBuilder76.getChars(charArray85);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer88 = new org.apache.commons.lang3.text.StrTokenizer(charArray85, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder91 = strBuilder67.appendln(charArray85, 0, 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder92 = strBuilder60.appendln(charArray85);
        org.apache.commons.lang3.text.StrBuilder strBuilder93 = strBuilder29.appendln(charArray85);
        char[] charArray94 = strBuilder29.toCharArray();
        writer10.write(charArray94);
        org.apache.commons.lang3.text.StrMatcher strMatcher96 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray94);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer97 = new org.apache.commons.lang3.text.StrTokenizer("100.01210", strMatcher96);
        java.lang.Object obj98 = strTokenizer97.clone();
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[a]");
        org.junit.Assert.assertNotNull(charArray7);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray7), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray7), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray7), "[a]");
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(writer10);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNotNull(charArray25);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray25), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray25), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray25), "[a]");
        org.junit.Assert.assertNotNull(charArray26);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray26), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray26), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray26), "[a]");
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(objArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray47), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray47), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(strMatcher64);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + (-1) + "'", int65 == (-1));
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNull(str77);
        org.junit.Assert.assertNotNull(charArray79);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray79), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray79), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray79), "[a]");
        org.junit.Assert.assertNotNull(charArray80);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray80), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray80), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray80), "[a]");
        org.junit.Assert.assertNotNull(charArray85);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray85), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray85), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray85), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray86);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray86), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray86), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray86), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(strBuilder91);
        org.junit.Assert.assertNotNull(strBuilder92);
        org.junit.Assert.assertNotNull(strBuilder93);
        org.junit.Assert.assertNotNull(charArray94);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray94), "100a4 4\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray94), "100a4 4\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray94), "[1, 0, 0, a, 4,  , 4, \n]");
        org.junit.Assert.assertNotNull(strMatcher96);
        org.junit.Assert.assertNotNull(obj98);
        org.junit.Assert.assertEquals(obj98.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj98), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj98), "StrTokenizer[not tokenized yet]");
    }

    @Test
    public void test01988() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01988");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = new org.apache.commons.lang3.text.StrTokenizer("100.0false\n");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str2 = strTokenizer1.previous();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
    }

    @Test
    public void test01989() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01989");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = org.apache.commons.lang3.text.StrMatcher.splitMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder0.deleteAll(strMatcher3);
        java.lang.String[] strArray8 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList9 = new java.util.ArrayList<java.lang.String>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList9, strArray8);
        char[] charArray17 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = new org.apache.commons.lang3.text.StrTokenizer(charArray17, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = strTokenizer19.setDelimiterString("hi!");
        boolean boolean22 = strTokenizer19.isIgnoreEmptyTokens();
        java.lang.String str23 = strTokenizer19.next();
        int int24 = strList9.indexOf((java.lang.Object) strTokenizer19);
        java.util.ListIterator<java.lang.String> strItor26 = strList9.listIterator((int) (byte) 0);
        java.lang.String[] strArray30 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList31 = new java.util.ArrayList<java.lang.String>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList31, strArray30);
        char[] charArray39 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = new org.apache.commons.lang3.text.StrTokenizer(charArray39, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = strTokenizer41.setDelimiterString("hi!");
        boolean boolean44 = strTokenizer41.isIgnoreEmptyTokens();
        java.lang.String str45 = strTokenizer41.next();
        int int46 = strList31.indexOf((java.lang.Object) strTokenizer41);
        java.util.ListIterator<java.lang.String> strItor48 = strList31.listIterator((int) (byte) 0);
        java.util.Iterator<java.lang.String> strItor49 = strList31.iterator();
        boolean boolean50 = strList9.removeAll((java.util.Collection<java.lang.String>) strList31);
        java.util.Iterator<java.lang.String> strItor51 = strList9.iterator();
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder0.appendFixedWidthPadRight((java.lang.Object) strItor51, (int) (short) 0, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder0.append((long) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder57.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder59.clear();
        int int61 = strBuilder59.capacity();
        java.lang.StringBuffer stringBuffer62 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder59.appendln(stringBuffer62, (int) (byte) 1, (int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder66.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder68.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder68.appendln(10L);
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder71.deleteFirst("");
        char[] charArray74 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder73.appendln(charArray74);
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher78 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int79 = strBuilder76.indexOf(strMatcher78);
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder76.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder83 = strBuilder81.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder85 = strBuilder81.appendln((int) (short) 10);
        org.apache.commons.lang3.text.StrMatcher strMatcher86 = org.apache.commons.lang3.text.StrMatcher.spaceMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder91 = strBuilder81.replace(strMatcher86, "StrTokenizer[#4#a4#]", (int) (short) 1, 1, (int) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder93 = strBuilder73.replaceFirst(strMatcher86, "hi!");
        boolean boolean94 = strBuilder65.contains(strMatcher86);
        int int95 = strBuilder56.indexOf(strMatcher86);
        org.apache.commons.lang3.text.StrBuilder strBuilder98 = strBuilder56.appendSeparator('1', (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder99 = strBuilder98.clear();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strMatcher3);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray17), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray17), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray17), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "#4#a4#" + "'", str23, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertNotNull(strItor26);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(charArray39);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray39), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray39), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray39), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "#4#a4#" + "'", str45, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertNotNull(strItor48);
        org.junit.Assert.assertNotNull(strItor49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(strItor51);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 32 + "'", int61 == 32);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNotNull(strMatcher78);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + (-1) + "'", int79 == (-1));
        org.junit.Assert.assertNotNull(strBuilder81);
        org.junit.Assert.assertNotNull(strBuilder83);
        org.junit.Assert.assertNotNull(strBuilder85);
        org.junit.Assert.assertNotNull(strMatcher86);
        org.junit.Assert.assertNotNull(strBuilder91);
        org.junit.Assert.assertNotNull(strBuilder93);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertTrue("'" + int95 + "' != '" + (-1) + "'", int95 == (-1));
        org.junit.Assert.assertNotNull(strBuilder98);
        org.junit.Assert.assertNotNull(strBuilder99);
    }

    @Test
    public void test01990() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01990");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder3.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder4.appendln((long) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder6.insert((int) (byte) 0, (double) 1.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder6.append((long) 4);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder12.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder14.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.appendln(10L);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder14.setNewLineText("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder14.ensureCapacity(39);
        boolean boolean23 = strBuilder21.endsWith(".0jav");
        char[] charArray28 = new char[] { 'a', 'a', '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray28);
        char[] charArray30 = strBuilder21.getChars(charArray28);
        char[] charArray37 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = new org.apache.commons.lang3.text.StrTokenizer(charArray37, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = strTokenizer39.setDelimiterString("hi!");
        java.lang.String str42 = strTokenizer41.nextToken();
        java.util.List<java.lang.String> strList43 = strTokenizer41.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder44.deleteFirst("hi!");
        java.lang.String str47 = strBuilder46.getNullText();
        char[] charArray49 = new char[] { 'a' };
        char[] charArray50 = strBuilder46.getChars(charArray49);
        char[] charArray55 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray56 = strBuilder46.getChars(charArray55);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray56);
        int int58 = strList43.indexOf((java.lang.Object) charArray56);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer61 = new org.apache.commons.lang3.text.StrTokenizer(charArray56, '#', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher62 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray56);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer63 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance();
        int int64 = strTokenizer63.nextIndex();
        org.apache.commons.lang3.text.StrMatcher strMatcher66 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("java.io.IOException: ");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer67 = strTokenizer63.setTrimmerMatcher(strMatcher66);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer68 = new org.apache.commons.lang3.text.StrTokenizer(charArray28, strMatcher62, strMatcher66);
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder6.appendln(charArray28);
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder6.appendFixedWidthPadRight(2, (int) '4', '\000');
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder73.insert((int) (short) 100, 27);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 100");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(charArray28);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray28), "10\n ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray28), "10\n ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray28), "[1, 0, \n,  ]");
        org.junit.Assert.assertNotNull(strTokenizer29);
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray30), "10\n ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray30), "10\n ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray30), "[1, 0, \n,  ]");
        org.junit.Assert.assertNotNull(charArray37);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray37), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray37), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray37), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "#4#a4#" + "'", str42, "#4#a4#");
        org.junit.Assert.assertNotNull(strList43);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertNotNull(charArray49);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray49), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray49), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray49), "[a]");
        org.junit.Assert.assertNotNull(charArray50);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray50), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray50), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray50), "[a]");
        org.junit.Assert.assertNotNull(charArray55);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray55), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray55), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray55), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray56);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray56), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray56), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray56), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(strTokenizer57);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + (-1) + "'", int58 == (-1));
        org.junit.Assert.assertNotNull(strMatcher62);
        org.junit.Assert.assertNotNull(strTokenizer63);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 0 + "'", int64 == 0);
        org.junit.Assert.assertNotNull(strMatcher66);
        org.junit.Assert.assertNotNull(strTokenizer67);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strBuilder73);
    }

    @Test
    public void test01991() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01991");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int4 = strBuilder1.indexOf(strMatcher3);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer("#4#a4#", strMatcher3);
        int int6 = strTokenizer5.size();
        int int7 = strTokenizer5.size();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = strTokenizer5.setEmptyTokenAsNull(false);
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer5.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: remove() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertNotNull(strTokenizer9);
    }

    @Test
    public void test01992() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01992");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder18.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.append("java.io.IOException: ");
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.reverse();
        boolean boolean27 = strBuilder23.isEmpty();
        java.io.Reader reader28 = strBuilder23.asReader();
        boolean boolean29 = reader28.ready();
        boolean boolean30 = reader28.markSupported();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(reader28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
    }

    @Test
    public void test01993() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01993");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = org.apache.commons.lang3.text.StrMatcher.splitMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder0.deleteAll(strMatcher3);
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder0.append((double) 59);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder7.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder9.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder9.insert(0, (double) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder13.appendFixedWidthPadRight((java.lang.Object) 100.0d, 1, '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder17.trim();
        java.lang.Object[] objArray19 = new java.lang.Object[] {};
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder17.appendAll(objArray19);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder6.appendAll(objArray19);
        java.lang.String str22 = strBuilder21.toString();
        java.lang.CharSequence charSequence23 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder21.append(charSequence23, 34, (int) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder21.appendNull();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strMatcher3);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[]");
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "59.0" + "'", str22, "59.0");
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder27);
    }

    @Test
    public void test01994() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01994");
        java.io.IOException iOException1 = new java.io.IOException(" 10\n");
        java.io.IOException iOException3 = new java.io.IOException("eslaf");
        iOException1.addSuppressed((java.lang.Throwable) iOException3);
        java.lang.String str5 = iOException1.toString();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "java.io.IOException:  10\n" + "'", str5, "java.io.IOException:  10\n");
    }

    @Test
    public void test01995() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01995");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[#4#a4#]", "StrTokenizer[not tokenized yet]");
        boolean boolean3 = strTokenizer2.isEmptyTokenAsNull();
        java.util.List<java.lang.String> strList4 = strTokenizer2.getTokenList();
        int int5 = strList4.size();
        char[] charArray12 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strTokenizer14.setDelimiterString("hi!");
        java.lang.String str17 = strTokenizer16.nextToken();
        java.util.List<java.lang.String> strList18 = strTokenizer16.getTokenList();
        boolean boolean20 = strList18.add("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("");
        java.lang.String str23 = strTokenizer22.getContent();
        boolean boolean24 = strList18.equals((java.lang.Object) strTokenizer22);
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = org.apache.commons.lang3.text.StrMatcher.singleQuoteMatcher();
        boolean boolean26 = strList18.equals((java.lang.Object) strMatcher25);
        boolean boolean27 = strList4.addAll((java.util.Collection<java.lang.String>) strList18);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder28.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int34 = strBuilder31.indexOf(strMatcher33);
        char[] charArray41 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = new org.apache.commons.lang3.text.StrTokenizer(charArray41, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder31.appendAll((java.util.Iterator<java.lang.String>) strTokenizer43);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder28.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer43, "");
        int int47 = strBuilder28.size();
        boolean boolean48 = strList18.remove((java.lang.Object) strBuilder28);
        boolean boolean50 = strList18.add("aa4#4");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str52 = strList18.get(55);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 55, Size: 3");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(strList4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "#4#a4#" + "'", str17, "#4#a4#");
        org.junit.Assert.assertNotNull(strList18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(strTokenizer22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(strMatcher25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertNotNull(charArray41);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray41), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray41), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray41), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
    }

    @Test
    public void test01996() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01996");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder2.insert(0, (double) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder6.replaceAll("StrTokenizer[not tokenized yet]", "StrTokenizer[#4#a4#]");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder9.appendNewLine();
        int int11 = strBuilder10.capacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.deleteAll("#4#a4#java.io.IOException: zinekoTrtSeslaf \n");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder10.deleteFirst("1.0jv.io.IOExceptionflse1001.0\n35.0\njv.io.IOExce");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = org.apache.commons.lang3.text.StrMatcher.splitMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder16.deleteAll(strMatcher19);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder16.append((float) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int26 = strBuilder23.indexOf(strMatcher25);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder23.append("#4#a4#");
        java.lang.String str30 = strBuilder23.leftString((int) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int34 = strBuilder31.indexOf(strMatcher33);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder31.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder36.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder36.append(false);
        char[] charArray47 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = new org.apache.commons.lang3.text.StrTokenizer(charArray47, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = strTokenizer49.setDelimiterString("hi!");
        boolean boolean52 = strTokenizer49.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder36.appendFixedWidthPadRight((java.lang.Object) strTokenizer49, 10, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher58 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int59 = strBuilder56.indexOf(strMatcher58);
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder56.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder61.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder61.appendln((int) (short) 10);
        boolean boolean66 = strBuilder36.equalsIgnoreCase(strBuilder61);
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder36.reverse();
        java.lang.StringBuffer stringBuffer68 = strBuilder67.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder23.append(stringBuffer68, (int) (byte) 0, 2);
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder16.append(stringBuffer68);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder10.append(stringBuffer68, (int) '3', 21);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: startIndex must be valid");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 32 + "'", int11 == 32);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strMatcher25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "#4#a4#" + "'", str30, "#4#a4#");
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(charArray47);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray47), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray47), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray47), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strMatcher58);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-1) + "'", int59 == (-1));
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(stringBuffer68);
        org.junit.Assert.assertEquals(stringBuffer68.toString(), "zinekoTrtSeslaf ");
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(strBuilder72);
    }

    @Test
    public void test01997() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01997");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("1.0java.io.IOEx", '.');
    }

    @Test
    public void test01998() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01998");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder7.deleteFirst('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder7.append('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.appendSeparator("java.io.IOException: ", (int) ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int18 = strBuilder15.indexOf(strMatcher17);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder15.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder20.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder20.appendln((int) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder20.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder27.deleteFirst("hi!");
        java.lang.String str30 = strBuilder29.getNullText();
        char[] charArray32 = new char[] { 'a' };
        char[] charArray33 = strBuilder29.getChars(charArray32);
        char[] charArray38 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray39 = strBuilder29.getChars(charArray38);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = new org.apache.commons.lang3.text.StrTokenizer(charArray38, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder20.appendln(charArray38, 0, 0);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder11.appendln(charArray38, (int) '#', 59);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: Invalid startIndex: 59");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNotNull(charArray32);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray32), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray32), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray32), "[a]");
        org.junit.Assert.assertNotNull(charArray33);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray33), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray33), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray33), "[a]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray39);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray39), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray39), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray39), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(strBuilder44);
    }

    @Test
    public void test01999() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01999");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("StrTokenizer[1.0java.io.IOExceptionfalse1001.0, 35.0]");
        org.junit.Assert.assertNotNull(strMatcher1);
    }

    @Test
    public void test02000() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test02000");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.appendln(10L);
        int int8 = strBuilder2.indexOf("#4#a4#", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder2.insert(1, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int15 = strBuilder12.indexOf(strMatcher14);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder12.append("#4#a4#");
        java.lang.String str19 = strBuilder12.leftString((int) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int23 = strBuilder20.indexOf(strMatcher22);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder20.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder25.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder25.append(false);
        char[] charArray36 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = new org.apache.commons.lang3.text.StrTokenizer(charArray36, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = strTokenizer38.setDelimiterString("hi!");
        boolean boolean41 = strTokenizer38.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder25.appendFixedWidthPadRight((java.lang.Object) strTokenizer38, 10, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher47 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int48 = strBuilder45.indexOf(strMatcher47);
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder45.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder50.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder50.appendln((int) (short) 10);
        boolean boolean55 = strBuilder25.equalsIgnoreCase(strBuilder50);
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder25.reverse();
        java.lang.StringBuffer stringBuffer57 = strBuilder56.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder12.append(stringBuffer57, (int) (byte) 0, 2);
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder11.append(stringBuffer57);
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher64 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int65 = strBuilder62.indexOf(strMatcher64);
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder62.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder67.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder67.append((int) (short) -1);
        boolean boolean72 = strBuilder11.equalsIgnoreCase(strBuilder71);
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder11.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder73.trim();
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder73.appendln(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder73.deleteCharAt(2);
        int int80 = strBuilder78.indexOf('#');
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "#4#a4#" + "'", str19, "#4#a4#");
        org.junit.Assert.assertNotNull(strMatcher22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(charArray36);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray36), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray36), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray36), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strMatcher47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(stringBuffer57);
        org.junit.Assert.assertEquals(stringBuffer57.toString(), "zinekoTrtSeslaf ");
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strMatcher64);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + (-1) + "'", int65 == (-1));
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + (-1) + "'", int80 == (-1));
    }
}

