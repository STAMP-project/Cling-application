import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest19 {

    public static boolean debug = false;

    @Test
    public void test09501() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09501");
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope((-22189616), 817068741);
    }

    @Test
    public void test09502() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09502");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode0 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int1 = functionNode0.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = functionNode0.getTop();
        com.google.javascript.rhino.head.ast.Name name3 = null;
        functionNode0.setFunctionName(name3);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode5 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = functionNode5.getTop();
        functionNode0.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode5);
        functionNode5.setIsExpressionClosure(true);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode11 = new com.google.javascript.rhino.head.ast.FunctionNode((int) (byte) 100);
        int int12 = functionNode5.addFunction(functionNode11);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode14 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode15 = functionNode14.getTop();
        java.lang.String str16 = scriptNode15.getJsDoc();
        com.google.javascript.rhino.head.Node node18 = scriptNode15.setType(0);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode19 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int20 = functionNode19.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode22 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        java.lang.String str23 = functionNode19.toStringTree(scriptNode22);
        com.google.javascript.rhino.head.ast.Scope scope25 = scriptNode22.getDefiningScope("");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode27 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int28 = scriptNode27.getEndLineno();
        int int29 = scriptNode27.getBaseLineno();
        com.google.javascript.rhino.head.Node node30 = new com.google.javascript.rhino.head.Node(25, node18, (com.google.javascript.rhino.head.Node) scriptNode22, (com.google.javascript.rhino.head.Node) scriptNode27);
        int int31 = functionNode11.compareTo((com.google.javascript.rhino.head.ast.AstNode) scriptNode22);
        com.google.javascript.rhino.head.ast.Scope scope33 = functionNode11.getDefiningScope("109");
        com.google.javascript.rhino.head.ast.RegExpLiteral regExpLiteral35 = new com.google.javascript.rhino.head.ast.RegExpLiteral((int) (short) 1);
        java.lang.String str37 = regExpLiteral35.toSource((int) (byte) 10);
        java.lang.String str38 = regExpLiteral35.getValue();
        functionNode11.addParam((com.google.javascript.rhino.head.ast.AstNode) regExpLiteral35);
        functionNode11.clearParentScope();
        java.lang.String str41 = functionNode11.getName();
        int int42 = functionNode11.getFunctionType();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode43 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int44 = functionNode43.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode45 = functionNode43.getTop();
        com.google.javascript.rhino.head.ast.AstNode astNode46 = functionNode43.getBody();
        com.google.javascript.rhino.head.ast.Jump jump52 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump52.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump56 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump52, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode58 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int59 = scriptNode58.getEndLineno();
        int int60 = scriptNode58.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList61 = scriptNode58.getChildScopes();
        com.google.javascript.rhino.head.Node node62 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump52, (com.google.javascript.rhino.head.Node) scriptNode58);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList63 = scriptNode58.getChildScopes();
        com.google.javascript.rhino.head.ast.Jump jump64 = new com.google.javascript.rhino.head.ast.Jump(11, (com.google.javascript.rhino.head.Node) scriptNode58);
        functionNode43.setParent((com.google.javascript.rhino.head.ast.AstNode) scriptNode58);
        scriptNode58.setLength(20);
        com.google.javascript.rhino.head.ast.Symbol symbol68 = new com.google.javascript.rhino.head.ast.Symbol();
        java.lang.String str69 = symbol68.getName();
        java.lang.String str70 = symbol68.toString();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode71 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int72 = functionNode71.getLp();
        functionNode71.setLineno(0);
        boolean boolean75 = functionNode71.requiresActivation();
        int int76 = functionNode71.getFunctionCount();
        functionNode71.setEncodedSourceStart((int) (byte) -1);
        symbol68.setNode((com.google.javascript.rhino.head.Node) functionNode71);
        scriptNode58.setParent((com.google.javascript.rhino.head.ast.AstNode) functionNode71);
        // The following exception was thrown during execution in test generation
        try {
            functionNode11.setContinue((com.google.javascript.rhino.head.Node) functionNode71);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-1) + "'", int1 == (-1));
        org.junit.Assert.assertNotNull(scriptNode2);
        org.junit.Assert.assertNotNull(scriptNode6);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(scriptNode15);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(node18);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNull(scope25);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 1 + "'", int31 == 1);
        org.junit.Assert.assertNull(scope33);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "                    /null/" + "'", str37, "                    /null/");
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "" + "'", str41, "");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertNotNull(scriptNode45);
        org.junit.Assert.assertNull(astNode46);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-1) + "'", int59 == (-1));
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-1) + "'", int60 == (-1));
        org.junit.Assert.assertNull(scopeList61);
        org.junit.Assert.assertNull(scopeList63);
        org.junit.Assert.assertNull(str69);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "Symbol (EOF) name=null" + "'", str70, "Symbol (EOF) name=null");
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + (-1) + "'", int72 == (-1));
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 0 + "'", int76 == 0);
    }

    @Test
    public void test09503() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09503");
        com.google.javascript.rhino.head.ast.Jump jump4 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump4.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump8 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump4, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int11 = scriptNode10.getEndLineno();
        int int12 = scriptNode10.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList13 = scriptNode10.getChildScopes();
        com.google.javascript.rhino.head.Node node14 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump4, (com.google.javascript.rhino.head.Node) scriptNode10);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList15 = scriptNode10.getFunctions();
        functionNodeList15.clear();
        com.google.javascript.rhino.head.ast.Jump jump21 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump21.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump25 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump21, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode27 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int28 = scriptNode27.getEndLineno();
        int int29 = scriptNode27.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList30 = scriptNode27.getChildScopes();
        com.google.javascript.rhino.head.Node node31 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump21, (com.google.javascript.rhino.head.Node) scriptNode27);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList32 = scriptNode27.getFunctions();
        boolean boolean33 = functionNodeList15.removeAll((java.util.Collection<com.google.javascript.rhino.head.ast.FunctionNode>) functionNodeList32);
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator34 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.Jump jump39 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump39.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump43 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump39, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode45 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int46 = scriptNode45.getEndLineno();
        int int47 = scriptNode45.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList48 = scriptNode45.getChildScopes();
        com.google.javascript.rhino.head.Node node49 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump39, (com.google.javascript.rhino.head.Node) scriptNode45);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList50 = scriptNode45.getFunctions();
        int int51 = functionNodeList50.size();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator52 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        functionNodeList50.sort((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator52);
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator54 = positionComparator52.reversed();
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator55 = astNodeComparator54.reversed();
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator56 = positionComparator34.thenComparing(astNodeComparator54);
        functionNodeList15.sort(astNodeComparator54);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode58 = new com.google.javascript.rhino.head.ast.ScriptNode();
        int int59 = scriptNode58.getEncodedSourceEnd();
        java.lang.String str61 = scriptNode58.toSource((int) (byte) 10);
        scriptNode58.setEncodedSourceEnd((int) (short) -1);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList64 = scriptNode58.getFunctions();
        boolean boolean65 = functionNodeList15.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.FunctionNode>) functionNodeList64);
        java.util.ListIterator<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeItor66 = functionNodeList15.listIterator();
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNull(scopeList13);
        org.junit.Assert.assertNotNull(functionNodeList15);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertNull(scopeList30);
        org.junit.Assert.assertNotNull(functionNodeList32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertNull(scopeList48);
        org.junit.Assert.assertNotNull(functionNodeList50);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertNotNull(astNodeComparator54);
        org.junit.Assert.assertNotNull(astNodeComparator55);
        org.junit.Assert.assertNotNull(astNodeComparator56);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-1) + "'", int59 == (-1));
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "                    {\n                    }\n" + "'", str61, "                    {\n                    }\n");
        org.junit.Assert.assertNotNull(functionNodeList64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(functionNodeItor66);
    }

    @Test
    public void test09504() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09504");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int2 = scriptNode1.getEndLineno();
        int int3 = scriptNode1.getBaseLineno();
        com.google.javascript.rhino.head.Node node4 = scriptNode1.getNext();
        com.google.javascript.rhino.head.Node node5 = scriptNode1.getFirstChild();
        java.lang.String str7 = scriptNode1.toSource(6);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode9 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int10 = functionNode9.getLp();
        functionNode9.setEncodedSource("");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode13 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int14 = functionNode13.getLp();
        functionNode13.setEncodedSource("");
        functionNode13.flattenSymbolTable(false);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode19 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int20 = functionNode19.getLp();
        com.google.javascript.rhino.head.Node node22 = new com.google.javascript.rhino.head.Node((-1), (com.google.javascript.rhino.head.Node) functionNode9, (com.google.javascript.rhino.head.Node) functionNode13, (com.google.javascript.rhino.head.Node) functionNode19, (int) '#');
        com.google.javascript.rhino.head.ast.AstNode astNode23 = functionNode9.getBody();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode24 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int25 = functionNode24.getLp();
        functionNode24.setEncodedSource("");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode28 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int29 = functionNode28.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode30 = functionNode28.getTop();
        com.google.javascript.rhino.head.ast.Name name31 = null;
        functionNode28.setFunctionName(name31);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode33 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode34 = functionNode33.getTop();
        functionNode28.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode33);
        int int36 = functionNode33.getRp();
        int int37 = functionNode33.getFunctionType();
        functionNode24.addParam((com.google.javascript.rhino.head.ast.AstNode) functionNode33);
        com.google.javascript.rhino.head.ast.Scope scope39 = functionNode33.getEnclosingScope();
        functionNode9.setBody((com.google.javascript.rhino.head.ast.AstNode) functionNode33);
        int int41 = functionNode9.getType();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode1, (com.google.javascript.rhino.head.ast.Scope) functionNode9);
        functionNode9.setRequiresActivation();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode44 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.Scope scope46 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 10);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode47 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode48 = functionNode47.getTop();
        functionNode47.setParens((int) (byte) 1, (int) (short) 1);
        functionNode47.setEncodedSourceStart((-1));
        functionNode47.setFunctionIsGetter();
        scope46.addChildToFront((com.google.javascript.rhino.head.Node) functionNode47);
        functionNode44.setBody((com.google.javascript.rhino.head.ast.AstNode) functionNode47);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode57 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode58 = functionNode57.getTop();
        functionNode57.setParens((int) (byte) 1, (int) (short) 1);
        functionNode57.setEncodedSourceStart((-1));
        java.util.List<com.google.javascript.rhino.head.Node> nodeList64 = functionNode57.getResumptionPoints();
        int int65 = functionNode57.getLp();
        functionNode44.setBody((com.google.javascript.rhino.head.ast.AstNode) functionNode57);
        int int67 = functionNode44.getLineno();
        com.google.javascript.rhino.head.ast.Jump jump70 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump70.removeProp((int) 'a');
        com.google.javascript.rhino.head.Node node73 = jump70.getFirstChild();
        int[] intArray74 = null;
        functionNode44.addLiveLocals((com.google.javascript.rhino.head.Node) jump70, intArray74);
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.Node node76 = functionNode9.getChildBefore((com.google.javascript.rhino.head.Node) functionNode44);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNull(node4);
        org.junit.Assert.assertNull(node5);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "            {\n            }\n" + "'", str7, "            {\n            }\n");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertNull(astNode23);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertNotNull(scriptNode30);
        org.junit.Assert.assertNotNull(scriptNode34);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertNotNull(scope39);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 109 + "'", int41 == 109);
        org.junit.Assert.assertNotNull(scriptNode48);
        org.junit.Assert.assertNotNull(scriptNode58);
        org.junit.Assert.assertNull(nodeList64);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 1 + "'", int65 == 1);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + (-1) + "'", int67 == (-1));
        org.junit.Assert.assertNull(node73);
    }

    @Test
    public void test09505() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09505");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 10);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode2 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode3 = functionNode2.getTop();
        functionNode2.setParens((int) (byte) 1, (int) (short) 1);
        functionNode2.setEncodedSourceStart((-1));
        functionNode2.setFunctionIsGetter();
        scope1.addChildToFront((com.google.javascript.rhino.head.Node) functionNode2);
        functionNode2.setRp(19);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int15 = scriptNode14.getEndLineno();
        int int16 = scriptNode14.getBaseLineno();
        com.google.javascript.rhino.head.ast.Jump jump19 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode21 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int22 = scriptNode21.getEndLineno();
        int int23 = scriptNode21.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList24 = scriptNode21.getChildScopes();
        jump19.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode21);
        java.lang.String str26 = scriptNode21.debugPrint();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode14, (com.google.javascript.rhino.head.ast.Scope) scriptNode21);
        com.google.javascript.rhino.head.ast.Scope scope28 = new com.google.javascript.rhino.head.ast.Scope();
        scriptNode21.target = scope28;
        java.lang.String str30 = functionNode2.toStringTree(scriptNode21);
        java.lang.String str32 = scriptNode21.toSource((int) (short) 10);
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap33 = scriptNode21.getSymbolTable();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode35 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int36 = scriptNode35.getEndLineno();
        int int37 = scriptNode35.getBaseLineno();
        scriptNode35.removeProp(0);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList40 = scriptNode35.getSymbols();
        boolean boolean41 = strMap33.containsValue((java.lang.Object) symbolList40);
        java.util.Collection<com.google.javascript.rhino.head.ast.Symbol> symbolCollection42 = strMap33.values();
        com.google.javascript.rhino.head.ast.Jump jump44 = new com.google.javascript.rhino.head.ast.Jump(1579347477);
        com.google.javascript.rhino.head.ast.Symbol symbol45 = strMap33.remove((java.lang.Object) 1579347477);
        java.util.Set<java.lang.String> strSet46 = strMap33.keySet();
        com.google.javascript.rhino.head.ast.Symbol symbol48 = new com.google.javascript.rhino.head.ast.Symbol();
        java.lang.String str49 = symbol48.getName();
        com.google.javascript.rhino.head.Node node50 = symbol48.getNode();
        com.google.javascript.rhino.head.ast.Symbol symbol51 = strMap33.put("                                    /null/", symbol48);
        boolean boolean52 = strMap33.isEmpty();
        strMap33.clear();
        com.google.javascript.rhino.head.ast.Symbol symbol55 = new com.google.javascript.rhino.head.ast.Symbol();
        com.google.javascript.rhino.head.Node node56 = symbol55.getNode();
        com.google.javascript.rhino.head.Node node57 = symbol55.getNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode59 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int60 = scriptNode59.getEndLineno();
        int int61 = scriptNode59.getBaseLineno();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode62 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int63 = functionNode62.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode65 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        java.lang.String str66 = functionNode62.toStringTree(scriptNode65);
        functionNode62.setFunctionIsGetter();
        com.google.javascript.rhino.head.ast.AstNode astNode68 = functionNode62.getBody();
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList69 = functionNode62.getParams();
        scriptNode59.replaceWith((com.google.javascript.rhino.head.ast.Scope) functionNode62);
        symbol55.setNode((com.google.javascript.rhino.head.Node) functionNode62);
        java.lang.String str72 = symbol55.getName();
        com.google.javascript.rhino.head.ast.Symbol symbol73 = strMap33.replace("Scope", symbol55);
        strMap33.clear();
        org.junit.Assert.assertNotNull(scriptNode3);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNull(scopeList24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str26, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "                    {\n                    }\n" + "'", str32, "                    {\n                    }\n");
        org.junit.Assert.assertNotNull(strMap33);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertNotNull(symbolList40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(symbolCollection42);
        org.junit.Assert.assertNull(symbol45);
        org.junit.Assert.assertNotNull(strSet46);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertNull(node50);
        org.junit.Assert.assertNull(symbol51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNull(node56);
        org.junit.Assert.assertNull(node57);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-1) + "'", int60 == (-1));
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + (-1) + "'", int61 == (-1));
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + (-1) + "'", int63 == (-1));
        org.junit.Assert.assertNull(str66);
        org.junit.Assert.assertNull(astNode68);
        org.junit.Assert.assertNotNull(astNodeList69);
        org.junit.Assert.assertNull(str72);
        org.junit.Assert.assertNull(symbol73);
    }

    @Test
    public void test09506() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09506");
        com.google.javascript.rhino.head.ast.Jump jump4 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump4.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump8 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump4, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int11 = scriptNode10.getEndLineno();
        int int12 = scriptNode10.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList13 = scriptNode10.getChildScopes();
        com.google.javascript.rhino.head.Node node14 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump4, (com.google.javascript.rhino.head.Node) scriptNode10);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList15 = scriptNode10.getFunctions();
        functionNodeList15.clear();
        com.google.javascript.rhino.head.ast.Jump jump21 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump21.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump25 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump21, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode27 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int28 = scriptNode27.getEndLineno();
        int int29 = scriptNode27.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList30 = scriptNode27.getChildScopes();
        com.google.javascript.rhino.head.Node node31 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump21, (com.google.javascript.rhino.head.Node) scriptNode27);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList32 = scriptNode27.getFunctions();
        boolean boolean33 = functionNodeList15.removeAll((java.util.Collection<com.google.javascript.rhino.head.ast.FunctionNode>) functionNodeList32);
        functionNodeList15.clear();
        java.util.stream.Stream<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeStream35 = functionNodeList15.parallelStream();
        java.lang.Object[] objArray36 = functionNodeList15.toArray();
        java.lang.String[] strArray42 = new java.lang.String[] { "-22\tSCRIPT -22 1\n", "-1\tBLOCK -1 1\n", "                                /RegExpLiteral/-1\tSCRIPT -1 1\n", "                          /null/", "                                109" };
        java.lang.String[] strArray48 = new java.lang.String[] { "-22\tSCRIPT -22 1\n", "-1\tBLOCK -1 1\n", "                                /RegExpLiteral/-1\tSCRIPT -1 1\n", "                          /null/", "                                109" };
        java.lang.String[][] strArray49 = new java.lang.String[][] { strArray42, strArray48 };
        java.lang.String[][][] strArray50 = new java.lang.String[][][] { strArray49 };
        java.lang.String[][][] strArray51 = functionNodeList15.toArray(strArray50);
        com.google.javascript.rhino.head.ast.Jump jump56 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump56.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump60 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump56, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode62 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int63 = scriptNode62.getEndLineno();
        int int64 = scriptNode62.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList65 = scriptNode62.getChildScopes();
        com.google.javascript.rhino.head.Node node66 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump56, (com.google.javascript.rhino.head.Node) scriptNode62);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList67 = scriptNode62.getFunctions();
        functionNodeList67.clear();
        functionNodeList67.clear();
        java.util.Iterator<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeItor70 = functionNodeList67.iterator();
        com.google.javascript.rhino.head.ast.RegExpLiteral regExpLiteral72 = new com.google.javascript.rhino.head.ast.RegExpLiteral((int) (short) 1);
        java.lang.String str74 = regExpLiteral72.toSource((int) (byte) 10);
        regExpLiteral72.setFlags("-1\tSCRIPT -1 1\n");
        regExpLiteral72.removeProp(8);
        java.lang.String str79 = regExpLiteral72.getValue();
        regExpLiteral72.setLineno(10);
        regExpLiteral72.removeChildren();
        boolean boolean83 = functionNodeList67.equals((java.lang.Object) regExpLiteral72);
        com.google.javascript.rhino.head.ast.Jump jump84 = new com.google.javascript.rhino.head.ast.Jump();
        boolean boolean85 = functionNodeList67.remove((java.lang.Object) jump84);
        java.util.ListIterator<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeItor86 = functionNodeList67.listIterator();
        java.util.stream.Stream<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeStream87 = functionNodeList67.parallelStream();
        functionNodeList67.clear();
        boolean boolean89 = functionNodeList15.containsAll((java.util.Collection<com.google.javascript.rhino.head.ast.FunctionNode>) functionNodeList67);
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.ast.FunctionNode functionNode91 = functionNodeList67.get(1023344933);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 1023344933");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNull(scopeList13);
        org.junit.Assert.assertNotNull(functionNodeList15);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertNull(scopeList30);
        org.junit.Assert.assertNotNull(functionNodeList32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(functionNodeStream35);
        org.junit.Assert.assertNotNull(objArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray36), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray36), "[]");
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertNotNull(strArray49);
        org.junit.Assert.assertNotNull(strArray50);
        org.junit.Assert.assertNotNull(strArray51);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + (-1) + "'", int63 == (-1));
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + (-1) + "'", int64 == (-1));
        org.junit.Assert.assertNull(scopeList65);
        org.junit.Assert.assertNotNull(functionNodeList67);
        org.junit.Assert.assertNotNull(functionNodeItor70);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "                    /null/" + "'", str74, "                    /null/");
        org.junit.Assert.assertNull(str79);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertNotNull(functionNodeItor86);
        org.junit.Assert.assertNotNull(functionNodeStream87);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
    }

    @Test
    public void test09507() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09507");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode2 = new com.google.javascript.rhino.head.ast.FunctionNode((int) (byte) 100);
        int int3 = functionNode2.getEncodedSourceStart();
        int int4 = functionNode2.getFunctionCount();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode5 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = functionNode5.getTop();
        functionNode5.setParens((int) (byte) 1, (int) (short) 1);
        int int10 = functionNode5.getRp();
        com.google.javascript.rhino.head.Node node12 = new com.google.javascript.rhino.head.Node(17, (com.google.javascript.rhino.head.Node) functionNode2, (com.google.javascript.rhino.head.Node) functionNode5, (int) (short) 0);
        functionNode5.setParens((-22), 4);
        com.google.javascript.rhino.head.ast.AstNode astNode16 = functionNode5.getParent();
        boolean boolean17 = functionNode5.isSetter();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(scriptNode6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertNull(astNode16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    }

    @Test
    public void test09508() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09508");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int2 = scriptNode1.getEndLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode4 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int5 = scriptNode4.getEndLineno();
        scriptNode1.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode4);
        java.lang.String str7 = scriptNode1.getNextTempName();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode8 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.AstNode astNode9 = functionNode8.getParent();
        scriptNode1.setParentScope((com.google.javascript.rhino.head.ast.Scope) functionNode8);
        com.google.javascript.rhino.head.ast.AstRoot astRoot11 = functionNode8.getAstRoot();
        functionNode8.setFunctionType((-146877426));
        com.google.javascript.rhino.head.ast.FunctionNode functionNode15 = new com.google.javascript.rhino.head.ast.FunctionNode(0);
        int int16 = functionNode15.getBaseLineno();
        boolean boolean17 = functionNode15.isExpressionClosure();
        functionNode8.setParentScope((com.google.javascript.rhino.head.ast.Scope) functionNode15);
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor19 = null;
        // The following exception was thrown during execution in test generation
        try {
            functionNode8.visit(nodeVisitor19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "$0" + "'", str7, "$0");
        org.junit.Assert.assertNull(astNode9);
        org.junit.Assert.assertNull(astRoot11);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    }

    @Test
    public void test09509() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09509");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 10);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode2 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode3 = functionNode2.getTop();
        functionNode2.setParens((int) (byte) 1, (int) (short) 1);
        functionNode2.setEncodedSourceStart((-1));
        functionNode2.setFunctionIsGetter();
        scope1.addChildToFront((com.google.javascript.rhino.head.Node) functionNode2);
        functionNode2.setRp(19);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int15 = scriptNode14.getEndLineno();
        int int16 = scriptNode14.getBaseLineno();
        com.google.javascript.rhino.head.ast.Jump jump19 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode21 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int22 = scriptNode21.getEndLineno();
        int int23 = scriptNode21.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList24 = scriptNode21.getChildScopes();
        jump19.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode21);
        java.lang.String str26 = scriptNode21.debugPrint();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode14, (com.google.javascript.rhino.head.ast.Scope) scriptNode21);
        com.google.javascript.rhino.head.ast.Scope scope28 = new com.google.javascript.rhino.head.ast.Scope();
        scriptNode21.target = scope28;
        java.lang.String str30 = functionNode2.toStringTree(scriptNode21);
        java.lang.String str32 = scriptNode21.toSource((int) (short) 10);
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap33 = scriptNode21.getSymbolTable();
        int int34 = strMap33.size();
        com.google.javascript.rhino.head.ast.Jump jump39 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump39.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump43 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump39, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode45 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int46 = scriptNode45.getEndLineno();
        int int47 = scriptNode45.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList48 = scriptNode45.getChildScopes();
        com.google.javascript.rhino.head.Node node49 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump39, (com.google.javascript.rhino.head.Node) scriptNode45);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList50 = scriptNode45.getFunctions();
        functionNodeList50.clear();
        functionNodeList50.clear();
        com.google.javascript.rhino.head.ast.Jump jump57 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump57.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump61 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump57, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode63 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int64 = scriptNode63.getEndLineno();
        int int65 = scriptNode63.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList66 = scriptNode63.getChildScopes();
        com.google.javascript.rhino.head.Node node67 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump57, (com.google.javascript.rhino.head.Node) scriptNode63);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList68 = scriptNode63.getFunctions();
        java.util.Spliterator<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeSpliterator69 = functionNodeList68.spliterator();
        int int71 = functionNodeList68.indexOf((java.lang.Object) (byte) 10);
        boolean boolean72 = functionNodeList50.retainAll((java.util.Collection<com.google.javascript.rhino.head.ast.FunctionNode>) functionNodeList68);
        boolean boolean73 = strMap33.containsKey((java.lang.Object) functionNodeList50);
        boolean boolean75 = strMap33.containsKey((java.lang.Object) 1579347477);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode76 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int77 = functionNode76.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode79 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        java.lang.String str80 = functionNode76.toStringTree(scriptNode79);
        functionNode76.setFunctionIsGetter();
        com.google.javascript.rhino.head.ast.AstNode astNode82 = functionNode76.getBody();
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList83 = functionNode76.getParams();
        boolean boolean84 = strMap33.containsKey((java.lang.Object) astNodeList83);
        strMap33.clear();
        com.google.javascript.rhino.head.ast.Symbol symbol86 = new com.google.javascript.rhino.head.ast.Symbol();
        java.lang.String str87 = symbol86.getName();
        com.google.javascript.rhino.head.Node node88 = symbol86.getNode();
        symbol86.setIndex(1);
        com.google.javascript.rhino.head.ast.Scope scope91 = symbol86.getContainingTable();
        java.lang.String str92 = symbol86.getName();
        boolean boolean93 = strMap33.containsValue((java.lang.Object) str92);
        java.util.Set<java.lang.String> strSet94 = strMap33.keySet();
        java.util.Collection<com.google.javascript.rhino.head.ast.Symbol> symbolCollection95 = strMap33.values();
        boolean boolean96 = strMap33.isEmpty();
        int int97 = strMap33.size();
        org.junit.Assert.assertNotNull(scriptNode3);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNull(scopeList24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str26, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "                    {\n                    }\n" + "'", str32, "                    {\n                    }\n");
        org.junit.Assert.assertNotNull(strMap33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertNull(scopeList48);
        org.junit.Assert.assertNotNull(functionNodeList50);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + (-1) + "'", int64 == (-1));
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + (-1) + "'", int65 == (-1));
        org.junit.Assert.assertNull(scopeList66);
        org.junit.Assert.assertNotNull(functionNodeList68);
        org.junit.Assert.assertNotNull(functionNodeSpliterator69);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + (-1) + "'", int71 == (-1));
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + (-1) + "'", int77 == (-1));
        org.junit.Assert.assertNull(str80);
        org.junit.Assert.assertNull(astNode82);
        org.junit.Assert.assertNotNull(astNodeList83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNull(str87);
        org.junit.Assert.assertNull(node88);
        org.junit.Assert.assertNull(scope91);
        org.junit.Assert.assertNull(str92);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertNotNull(strSet94);
        org.junit.Assert.assertNotNull(symbolCollection95);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + true + "'", boolean96 == true);
        org.junit.Assert.assertTrue("'" + int97 + "' != '" + 0 + "'", int97 == 0);
    }

    @Test
    public void test09510() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09510");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode0 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int1 = functionNode0.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = functionNode0.getTop();
        com.google.javascript.rhino.head.ast.Name name3 = null;
        functionNode0.setFunctionName(name3);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode5 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = functionNode5.getTop();
        functionNode0.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode5);
        com.google.javascript.rhino.head.ast.Scope scope10 = new com.google.javascript.rhino.head.ast.Scope((int) (short) -1, 0);
        functionNode0.replaceWith(scope10);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode12 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int13 = functionNode12.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = functionNode12.getTop();
        com.google.javascript.rhino.head.ast.Name name15 = null;
        functionNode12.setFunctionName(name15);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode17 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode18 = functionNode17.getTop();
        functionNode12.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode17);
        int int20 = functionNode0.addFunction(functionNode12);
        functionNode0.flattenSymbolTable(false);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode23 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode24 = functionNode23.getTop();
        functionNode23.setParens((int) (byte) 1, (int) (short) 1);
        functionNode23.setEncodedSourceStart((-1));
        java.util.List<com.google.javascript.rhino.head.Node> nodeList30 = functionNode23.getResumptionPoints();
        com.google.javascript.rhino.head.ast.Scope scope32 = functionNode23.getDefiningScope("hi!");
        boolean boolean33 = functionNode23.isGetterOrSetter();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode34 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int35 = functionNode34.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode36 = functionNode34.getTop();
        com.google.javascript.rhino.head.ast.Name name37 = null;
        functionNode34.setFunctionName(name37);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode39 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode40 = functionNode39.getTop();
        functionNode34.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode39);
        int int42 = functionNode39.getRp();
        int int43 = functionNode39.getFunctionType();
        int int44 = functionNode23.addFunction(functionNode39);
        functionNode39.setRp((-1));
        functionNode0.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode39);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode48 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode49 = functionNode48.getTop();
        int int50 = functionNode48.getRegexpCount();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode51 = functionNode48.getEnclosingFunction();
        functionNode48.setBaseLineno(0);
        functionNode0.setBody((com.google.javascript.rhino.head.ast.AstNode) functionNode48);
        int int55 = functionNode0.getEncodedSourceStart();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList56 = functionNode0.getSymbols();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-1) + "'", int1 == (-1));
        org.junit.Assert.assertNotNull(scriptNode2);
        org.junit.Assert.assertNotNull(scriptNode6);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(scriptNode14);
        org.junit.Assert.assertNotNull(scriptNode18);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(scriptNode24);
        org.junit.Assert.assertNull(nodeList30);
        org.junit.Assert.assertNull(scope32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertNotNull(scriptNode36);
        org.junit.Assert.assertNotNull(scriptNode40);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertNotNull(scriptNode49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertNull(functionNode51);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1));
        org.junit.Assert.assertNotNull(symbolList56);
    }

    @Test
    public void test09511() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09511");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode0 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int1 = functionNode0.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode3 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        java.lang.String str4 = functionNode0.toStringTree(scriptNode3);
        int int5 = scriptNode3.getRegexpCount();
        com.google.javascript.rhino.head.Node node6 = scriptNode3.getLastSibling();
        com.google.javascript.rhino.head.Node node7 = node6.getNext();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode9 = new com.google.javascript.rhino.head.ast.FunctionNode(13);
        node6.addChildrenToFront((com.google.javascript.rhino.head.Node) functionNode9);
        int int11 = functionNode9.getType();
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList12 = functionNode9.getFunctions();
        java.util.ListIterator<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeItor13 = functionNodeList12.listIterator();
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.ast.FunctionNode functionNode15 = functionNodeList12.get(819764875);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 819764875");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-1) + "'", int1 == (-1));
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(node6);
        org.junit.Assert.assertNull(node7);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 109 + "'", int11 == 109);
        org.junit.Assert.assertNotNull(functionNodeList12);
        org.junit.Assert.assertNotNull(functionNodeItor13);
    }

    @Test
    public void test09512() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09512");
        com.google.javascript.rhino.head.ast.Symbol symbol0 = new com.google.javascript.rhino.head.ast.Symbol();
        java.lang.String str1 = symbol0.getName();
        com.google.javascript.rhino.head.Node node2 = symbol0.getNode();
        com.google.javascript.rhino.head.ast.Jump jump4 = new com.google.javascript.rhino.head.ast.Jump((int) ' ');
        symbol0.setNode((com.google.javascript.rhino.head.Node) jump4);
        symbol0.setIndex(18);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode8 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.Scope scope10 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 10);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode11 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode12 = functionNode11.getTop();
        functionNode11.setParens((int) (byte) 1, (int) (short) 1);
        functionNode11.setEncodedSourceStart((-1));
        functionNode11.setFunctionIsGetter();
        scope10.addChildToFront((com.google.javascript.rhino.head.Node) functionNode11);
        functionNode8.setBody((com.google.javascript.rhino.head.ast.AstNode) functionNode11);
        com.google.javascript.rhino.head.ast.AstRoot astRoot21 = functionNode11.getAstRoot();
        functionNode11.setIsExpressionClosure(false);
        symbol0.setContainingTable((com.google.javascript.rhino.head.ast.Scope) functionNode11);
        com.google.javascript.rhino.head.Token.CommentType commentType27 = com.google.javascript.rhino.head.Token.CommentType.HTML;
        com.google.javascript.rhino.head.ast.Comment comment29 = new com.google.javascript.rhino.head.ast.Comment(20, 1, commentType27, "109");
        java.lang.String str31 = comment29.toSource(19);
        java.lang.String str32 = comment29.getValue();
        java.lang.String str34 = comment29.toSource(2);
        boolean boolean35 = comment29.hasSideEffects();
        com.google.javascript.rhino.head.Token.CommentType commentType36 = com.google.javascript.rhino.head.Token.CommentType.JSDOC;
        comment29.setCommentType(commentType36);
        java.lang.String str38 = comment29.getValue();
        java.lang.String str40 = comment29.toSource((-3));
        java.lang.String str41 = comment29.getValue();
        functionNode11.addChild((com.google.javascript.rhino.head.ast.AstNode) comment29);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNotNull(scriptNode12);
        org.junit.Assert.assertNull(astRoot21);
        org.junit.Assert.assertTrue("'" + commentType27 + "' != '" + com.google.javascript.rhino.head.Token.CommentType.HTML + "'", commentType27.equals(com.google.javascript.rhino.head.Token.CommentType.HTML));
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "                                      109" + "'", str31, "                                      109");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "109" + "'", str32, "109");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "    109" + "'", str34, "    109");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + commentType36 + "' != '" + com.google.javascript.rhino.head.Token.CommentType.JSDOC + "'", commentType36.equals(com.google.javascript.rhino.head.Token.CommentType.JSDOC));
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "109" + "'", str38, "109");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "109" + "'", str40, "109");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "109" + "'", str41, "109");
    }

    @Test
    public void test09513() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09513");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode0 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = functionNode0.getTop();
        functionNode0.setParens((int) (byte) 1, (int) (short) 1);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode5 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.Scope scope7 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 10);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode8 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode9 = functionNode8.getTop();
        functionNode8.setParens((int) (byte) 1, (int) (short) 1);
        functionNode8.setEncodedSourceStart((-1));
        functionNode8.setFunctionIsGetter();
        scope7.addChildToFront((com.google.javascript.rhino.head.Node) functionNode8);
        functionNode5.setBody((com.google.javascript.rhino.head.ast.AstNode) functionNode8);
        functionNode5.setFunctionIsSetter();
        int int19 = functionNode0.addFunction(functionNode5);
        java.lang.String str20 = functionNode0.getNextTempName();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode22 = new com.google.javascript.rhino.head.ast.FunctionNode(0);
        int int23 = functionNode22.getBaseLineno();
        functionNode22.setSourceName("                                                                                                                                                                                                        /null/");
        functionNode22.setRequiresActivation();
        functionNode0.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode22);
        functionNode22.setEncodedSourceEnd((int) (byte) -1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode30 = functionNode22.getTop();
        com.google.javascript.rhino.head.ast.Scope scope33 = new com.google.javascript.rhino.head.ast.Scope(6, 4);
        scope33.setRelative((int) (byte) 0);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode36 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int37 = functionNode36.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode38 = functionNode36.getTop();
        com.google.javascript.rhino.head.ast.Name name39 = null;
        functionNode36.setFunctionName(name39);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode41 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.Scope scope43 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 10);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode44 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode45 = functionNode44.getTop();
        functionNode44.setParens((int) (byte) 1, (int) (short) 1);
        functionNode44.setEncodedSourceStart((-1));
        functionNode44.setFunctionIsGetter();
        scope43.addChildToFront((com.google.javascript.rhino.head.Node) functionNode44);
        functionNode41.setBody((com.google.javascript.rhino.head.ast.AstNode) functionNode44);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode54 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode55 = functionNode54.getTop();
        functionNode54.setParens((int) (byte) 1, (int) (short) 1);
        functionNode54.setEncodedSourceStart((-1));
        java.util.List<com.google.javascript.rhino.head.Node> nodeList61 = functionNode54.getResumptionPoints();
        int int62 = functionNode54.getLp();
        functionNode41.setBody((com.google.javascript.rhino.head.ast.AstNode) functionNode54);
        functionNode36.addParam((com.google.javascript.rhino.head.ast.AstNode) functionNode54);
        com.google.javascript.rhino.head.ast.Scope scope66 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 10);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode67 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode68 = functionNode67.getTop();
        functionNode67.setParens((int) (byte) 1, (int) (short) 1);
        functionNode67.setEncodedSourceStart((-1));
        functionNode67.setFunctionIsGetter();
        scope66.addChildToFront((com.google.javascript.rhino.head.Node) functionNode67);
        int[] intArray81 = new int[] { (byte) 10, 8, 0, 5, (byte) -1 };
        functionNode36.addLiveLocals((com.google.javascript.rhino.head.Node) scope66, intArray81);
        functionNode22.addLiveLocals((com.google.javascript.rhino.head.Node) scope33, intArray81);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList84 = functionNode22.getFunctions();
        com.google.javascript.rhino.head.ast.Name name86 = null;
        com.google.javascript.rhino.head.ast.FunctionNode functionNode87 = new com.google.javascript.rhino.head.ast.FunctionNode(17, name86);
        java.lang.Object obj88 = functionNode87.getCompilerData();
        functionNode22.addParam((com.google.javascript.rhino.head.ast.AstNode) functionNode87);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList90 = functionNode87.getSymbols();
        functionNode87.setEncodedSourceBounds((-793599801), (-146877426));
        org.junit.Assert.assertNotNull(scriptNode1);
        org.junit.Assert.assertNotNull(scriptNode9);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "$0" + "'", str20, "$0");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNotNull(scriptNode30);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertNotNull(scriptNode38);
        org.junit.Assert.assertNotNull(scriptNode45);
        org.junit.Assert.assertNotNull(scriptNode55);
        org.junit.Assert.assertNull(nodeList61);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 1 + "'", int62 == 1);
        org.junit.Assert.assertNotNull(scriptNode68);
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[10, 8, 0, 5, -1]");
        org.junit.Assert.assertNotNull(functionNodeList84);
        org.junit.Assert.assertNull(obj88);
        org.junit.Assert.assertNotNull(symbolList90);
    }

    @Test
    public void test09514() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09514");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode1 = new com.google.javascript.rhino.head.ast.FunctionNode((-1262414679));
        int int2 = functionNode1.getFunctionType();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode3 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode4 = functionNode3.getTop();
        functionNode3.setParens((int) (byte) 1, (int) (short) 1);
        functionNode3.setEncodedSourceStart((-1));
        java.util.List<com.google.javascript.rhino.head.Node> nodeList10 = functionNode3.getResumptionPoints();
        com.google.javascript.rhino.head.ast.Scope scope12 = functionNode3.getDefiningScope("hi!");
        boolean boolean13 = functionNode3.isGetterOrSetter();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode14 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int15 = functionNode14.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode16 = functionNode14.getTop();
        com.google.javascript.rhino.head.ast.Name name17 = null;
        functionNode14.setFunctionName(name17);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode19 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode20 = functionNode19.getTop();
        functionNode14.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode19);
        int int22 = functionNode19.getRp();
        int int23 = functionNode19.getFunctionType();
        int int24 = functionNode3.addFunction(functionNode19);
        functionNode3.setFunctionIsGetter();
        functionNode3.setBaseLineno(25);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode28 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.Scope scope30 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 10);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode31 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode32 = functionNode31.getTop();
        functionNode31.setParens((int) (byte) 1, (int) (short) 1);
        functionNode31.setEncodedSourceStart((-1));
        functionNode31.setFunctionIsGetter();
        scope30.addChildToFront((com.google.javascript.rhino.head.Node) functionNode31);
        functionNode28.setBody((com.google.javascript.rhino.head.ast.AstNode) functionNode31);
        functionNode28.setFunctionIsSetter();
        functionNode3.addResumptionPoint((com.google.javascript.rhino.head.Node) functionNode28);
        int int43 = functionNode28.getLp();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList44 = functionNode28.getChildScopes();
        functionNode1.setCompilerData((java.lang.Object) functionNode28);
        com.google.javascript.rhino.head.ast.AstNode astNode46 = null;
        // The following exception was thrown during execution in test generation
        try {
            functionNode1.setBody(astNode46);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: arg cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(scriptNode4);
        org.junit.Assert.assertNull(nodeList10);
        org.junit.Assert.assertNull(scope12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(scriptNode16);
        org.junit.Assert.assertNotNull(scriptNode20);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNotNull(scriptNode32);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertNull(scopeList44);
    }

    @Test
    public void test09515() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09515");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        int int1 = scriptNode0.getRegexpCount();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
    }

    @Test
    public void test09516() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09516");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode1 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int2 = functionNode1.getLp();
        functionNode1.setEncodedSource("");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode5 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int6 = functionNode5.getLp();
        functionNode5.setEncodedSource("");
        functionNode5.flattenSymbolTable(false);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode11 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int12 = functionNode11.getLp();
        com.google.javascript.rhino.head.Node node14 = new com.google.javascript.rhino.head.Node((-1), (com.google.javascript.rhino.head.Node) functionNode1, (com.google.javascript.rhino.head.Node) functionNode5, (com.google.javascript.rhino.head.Node) functionNode11, (int) '#');
        com.google.javascript.rhino.head.ast.Jump jump17 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode19 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int20 = scriptNode19.getEndLineno();
        int int21 = scriptNode19.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList22 = scriptNode19.getChildScopes();
        jump17.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode19);
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor24 = scriptNode19.iterator();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode25 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int26 = functionNode25.getLp();
        functionNode25.setEncodedSource("");
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode19, (com.google.javascript.rhino.head.ast.Scope) functionNode25);
        com.google.javascript.rhino.head.ast.Jump jump34 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump34.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump38 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump34, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode40 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int41 = scriptNode40.getEndLineno();
        int int42 = scriptNode40.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList43 = scriptNode40.getChildScopes();
        com.google.javascript.rhino.head.Node node44 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump34, (com.google.javascript.rhino.head.Node) scriptNode40);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList45 = scriptNode40.getFunctions();
        functionNodeList45.clear();
        int int48 = functionNodeList45.lastIndexOf((java.lang.Object) (-1L));
        com.google.javascript.rhino.head.ast.Jump jump53 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump53.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump57 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump53, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode59 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int60 = scriptNode59.getEndLineno();
        int int61 = scriptNode59.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList62 = scriptNode59.getChildScopes();
        com.google.javascript.rhino.head.Node node63 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump53, (com.google.javascript.rhino.head.Node) scriptNode59);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList64 = scriptNode59.getFunctions();
        functionNodeList64.clear();
        int int67 = functionNodeList64.lastIndexOf((java.lang.Object) (-1L));
        boolean boolean68 = functionNodeList45.removeAll((java.util.Collection<com.google.javascript.rhino.head.ast.FunctionNode>) functionNodeList64);
        com.google.javascript.rhino.head.ast.Jump jump73 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump73.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump77 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump73, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode79 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int80 = scriptNode79.getEndLineno();
        int int81 = scriptNode79.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList82 = scriptNode79.getChildScopes();
        com.google.javascript.rhino.head.Node node83 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump73, (com.google.javascript.rhino.head.Node) scriptNode79);
        com.google.javascript.rhino.head.Node node85 = scriptNode79.setType(0);
        int int86 = functionNodeList64.lastIndexOf((java.lang.Object) scriptNode79);
        functionNode11.addChildAfter((com.google.javascript.rhino.head.Node) functionNode25, (com.google.javascript.rhino.head.Node) scriptNode79);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode89 = new com.google.javascript.rhino.head.ast.FunctionNode((int) (byte) 100);
        int int90 = functionNode89.getEncodedSourceStart();
        int int91 = functionNode89.getFunctionCount();
        functionNode25.addParam((com.google.javascript.rhino.head.ast.AstNode) functionNode89);
        functionNode89.setEncodedSource("136");
        boolean boolean95 = functionNode89.isGenerator();
        com.google.javascript.rhino.head.Node node96 = functionNode89.target;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertNull(scopeList22);
        org.junit.Assert.assertNotNull(nodeItor24);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertNull(scopeList43);
        org.junit.Assert.assertNotNull(functionNodeList45);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-1) + "'", int60 == (-1));
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + (-1) + "'", int61 == (-1));
        org.junit.Assert.assertNull(scopeList62);
        org.junit.Assert.assertNotNull(functionNodeList64);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + (-1) + "'", int67 == (-1));
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + (-1) + "'", int80 == (-1));
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + (-1) + "'", int81 == (-1));
        org.junit.Assert.assertNull(scopeList82);
        org.junit.Assert.assertNotNull(node85);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + (-1) + "'", int86 == (-1));
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + (-1) + "'", int90 == (-1));
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + 0 + "'", int91 == 0);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
        org.junit.Assert.assertNull(node96);
    }

    @Test
    public void test09517() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09517");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode0 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int1 = functionNode0.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = functionNode0.getTop();
        com.google.javascript.rhino.head.ast.Name name3 = null;
        functionNode0.setFunctionName(name3);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode5 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = functionNode5.getTop();
        functionNode0.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode5);
        java.lang.String str8 = functionNode0.getNextTempName();
        java.lang.String str9 = functionNode0.getEncodedSource();
        functionNode0.setIsGenerator();
        functionNode0.setBaseLineno(48);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode14 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int15 = functionNode14.getLp();
        functionNode14.setEncodedSource("");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode18 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int19 = functionNode18.getLp();
        functionNode18.setEncodedSource("");
        functionNode18.flattenSymbolTable(false);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode24 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int25 = functionNode24.getLp();
        com.google.javascript.rhino.head.Node node27 = new com.google.javascript.rhino.head.Node((-1), (com.google.javascript.rhino.head.Node) functionNode14, (com.google.javascript.rhino.head.Node) functionNode18, (com.google.javascript.rhino.head.Node) functionNode24, (int) '#');
        functionNode24.setEncodedSourceStart(25);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode31 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode32 = functionNode31.getTop();
        functionNode31.setParens((int) (byte) 1, (int) (short) 1);
        int int36 = functionNode31.getRp();
        com.google.javascript.rhino.head.Node node39 = com.google.javascript.rhino.head.Node.newString((int) (byte) 100, "");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode40 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int41 = functionNode40.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode43 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        java.lang.String str44 = functionNode40.toStringTree(scriptNode43);
        com.google.javascript.rhino.head.ast.Scope scope46 = scriptNode43.getDefiningScope("");
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList47 = scriptNode43.getSymbols();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode49 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int50 = scriptNode49.getEndLineno();
        int int51 = scriptNode49.getBaseLineno();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode43, (com.google.javascript.rhino.head.ast.Scope) scriptNode49);
        java.lang.String str53 = scriptNode49.getEncodedSource();
        com.google.javascript.rhino.head.Node node55 = new com.google.javascript.rhino.head.Node(136, (com.google.javascript.rhino.head.Node) functionNode31, node39, (com.google.javascript.rhino.head.Node) scriptNode49, (int) (short) 0);
        functionNode24.setParent((com.google.javascript.rhino.head.ast.AstNode) functionNode31);
        functionNode0.target = functionNode24;
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList58 = functionNode0.getSymbols();
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.Node node59 = functionNode0.getDefault();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-1) + "'", int1 == (-1));
        org.junit.Assert.assertNotNull(scriptNode2);
        org.junit.Assert.assertNotNull(scriptNode6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "$0" + "'", str8, "$0");
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNotNull(scriptNode32);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 1 + "'", int36 == 1);
        org.junit.Assert.assertNotNull(node39);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertNull(scope46);
        org.junit.Assert.assertNotNull(symbolList47);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1));
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertNotNull(symbolList58);
    }

    @Test
    public void test09518() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09518");
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.ast.Symbol symbol2 = new com.google.javascript.rhino.head.ast.Symbol((-462033282), "Symbol (EOF) name=                    {\n                    }\n");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid declType: -462033282");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test09519() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09519");
        com.google.javascript.rhino.head.ast.Scope scope3 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 10);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode4 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = functionNode4.getTop();
        functionNode4.setParens((int) (byte) 1, (int) (short) 1);
        functionNode4.setEncodedSourceStart((-1));
        functionNode4.setFunctionIsGetter();
        scope3.addChildToFront((com.google.javascript.rhino.head.Node) functionNode4);
        functionNode4.setRp(19);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode16 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int17 = scriptNode16.getEndLineno();
        int int18 = scriptNode16.getBaseLineno();
        com.google.javascript.rhino.head.ast.Jump jump21 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode23 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int24 = scriptNode23.getEndLineno();
        int int25 = scriptNode23.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList26 = scriptNode23.getChildScopes();
        jump21.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode23);
        java.lang.String str28 = scriptNode23.debugPrint();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode16, (com.google.javascript.rhino.head.ast.Scope) scriptNode23);
        com.google.javascript.rhino.head.ast.Scope scope30 = new com.google.javascript.rhino.head.ast.Scope();
        scriptNode23.target = scope30;
        java.lang.String str32 = functionNode4.toStringTree(scriptNode23);
        java.lang.String str34 = scriptNode23.toSource((int) (short) 10);
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap35 = scriptNode23.getSymbolTable();
        int int36 = strMap35.size();
        strMap35.clear();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode38 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int39 = functionNode38.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode40 = functionNode38.getTop();
        boolean boolean41 = functionNode38.hasSideEffects();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode42 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int43 = functionNode42.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode44 = functionNode42.getTop();
        com.google.javascript.rhino.head.ast.Name name45 = null;
        functionNode42.setFunctionName(name45);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode47 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode48 = functionNode47.getTop();
        functionNode42.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode47);
        int int50 = functionNode47.getRp();
        functionNode47.setParens(11, 2);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode55 = new com.google.javascript.rhino.head.ast.FunctionNode((-1));
        int int56 = functionNode47.addFunction(functionNode55);
        functionNode38.setMemberExprNode((com.google.javascript.rhino.head.ast.AstNode) functionNode47);
        com.google.javascript.rhino.head.ast.Symbol symbol58 = strMap35.remove((java.lang.Object) functionNode47);
        com.google.javascript.rhino.head.Token.CommentType commentType63 = com.google.javascript.rhino.head.Token.CommentType.BLOCK_COMMENT;
        com.google.javascript.rhino.head.ast.Comment comment65 = new com.google.javascript.rhino.head.ast.Comment(25, 16, commentType63, "Symbol (EOF) name=null line=-1");
        com.google.javascript.rhino.head.ast.Comment comment67 = new com.google.javascript.rhino.head.ast.Comment(16, 161, commentType63, "                                                                                                /null/");
        java.lang.String str68 = comment67.getValue();
        com.google.javascript.rhino.head.Token.CommentType commentType71 = com.google.javascript.rhino.head.Token.CommentType.HTML;
        com.google.javascript.rhino.head.ast.Comment comment73 = new com.google.javascript.rhino.head.ast.Comment(20, 1, commentType71, "109");
        java.lang.String str75 = comment73.toSource(19);
        com.google.javascript.rhino.head.Node node77 = new com.google.javascript.rhino.head.Node(52, (com.google.javascript.rhino.head.Node) functionNode47, (com.google.javascript.rhino.head.Node) comment67, (com.google.javascript.rhino.head.Node) comment73, 25);
        com.google.javascript.rhino.head.Token.CommentType commentType78 = comment67.getCommentType();
        com.google.javascript.rhino.head.ast.Jump jump79 = new com.google.javascript.rhino.head.ast.Jump(346933763, (com.google.javascript.rhino.head.Node) comment67);
        org.junit.Assert.assertNotNull(scriptNode5);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNull(scopeList26);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str28, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "                    {\n                    }\n" + "'", str34, "                    {\n                    }\n");
        org.junit.Assert.assertNotNull(strMap35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertNotNull(scriptNode40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertNotNull(scriptNode44);
        org.junit.Assert.assertNotNull(scriptNode48);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertNull(symbol58);
        org.junit.Assert.assertTrue("'" + commentType63 + "' != '" + com.google.javascript.rhino.head.Token.CommentType.BLOCK_COMMENT + "'", commentType63.equals(com.google.javascript.rhino.head.Token.CommentType.BLOCK_COMMENT));
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "                                                                                                /null/" + "'", str68, "                                                                                                /null/");
        org.junit.Assert.assertTrue("'" + commentType71 + "' != '" + com.google.javascript.rhino.head.Token.CommentType.HTML + "'", commentType71.equals(com.google.javascript.rhino.head.Token.CommentType.HTML));
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "                                      109" + "'", str75, "                                      109");
        org.junit.Assert.assertTrue("'" + commentType78 + "' != '" + com.google.javascript.rhino.head.Token.CommentType.BLOCK_COMMENT + "'", commentType78.equals(com.google.javascript.rhino.head.Token.CommentType.BLOCK_COMMENT));
    }

    @Test
    public void test09520() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09520");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode1 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = functionNode1.getTop();
        java.lang.String str3 = scriptNode2.getJsDoc();
        com.google.javascript.rhino.head.Node node5 = scriptNode2.setType(0);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode6 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int7 = functionNode6.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode9 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        java.lang.String str10 = functionNode6.toStringTree(scriptNode9);
        com.google.javascript.rhino.head.ast.Scope scope12 = scriptNode9.getDefiningScope("");
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList13 = scriptNode9.getSymbols();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode15 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int16 = scriptNode15.getEndLineno();
        int int17 = scriptNode15.getBaseLineno();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode9, (com.google.javascript.rhino.head.ast.Scope) scriptNode15);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode20 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int21 = scriptNode20.getEndLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode23 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int24 = scriptNode23.getEndLineno();
        scriptNode20.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode23);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode26 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int27 = functionNode26.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode28 = functionNode26.getTop();
        boolean boolean29 = functionNode26.hasSideEffects();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode31 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int32 = scriptNode31.getEndLineno();
        int int33 = scriptNode31.getBaseLineno();
        com.google.javascript.rhino.head.ast.Jump jump36 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode38 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int39 = scriptNode38.getEndLineno();
        int int40 = scriptNode38.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList41 = scriptNode38.getChildScopes();
        jump36.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode38);
        java.lang.String str43 = scriptNode38.debugPrint();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode31, (com.google.javascript.rhino.head.ast.Scope) scriptNode38);
        com.google.javascript.rhino.head.ast.Scope scope45 = new com.google.javascript.rhino.head.ast.Scope();
        scriptNode38.target = scope45;
        functionNode26.addChildScope(scope45);
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode23, (com.google.javascript.rhino.head.ast.Scope) functionNode26);
        com.google.javascript.rhino.head.Node node49 = new com.google.javascript.rhino.head.Node(20, (com.google.javascript.rhino.head.Node) scriptNode2, (com.google.javascript.rhino.head.Node) scriptNode9, (com.google.javascript.rhino.head.Node) scriptNode23);
        scriptNode23.flattenSymbolTable(true);
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap52 = scriptNode23.getSymbolTable();
        org.junit.Assert.assertNotNull(scriptNode2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(node5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(scope12);
        org.junit.Assert.assertNotNull(symbolList13);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(scriptNode28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertNull(scopeList41);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str43, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertNotNull(strMap52);
    }

    @Test
    public void test09521() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09521");
        com.google.javascript.rhino.head.ast.Jump jump1 = new com.google.javascript.rhino.head.ast.Jump((int) (short) 0);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode2 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int3 = functionNode2.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode4 = functionNode2.getTop();
        com.google.javascript.rhino.head.ast.Name name5 = null;
        functionNode2.setFunctionName(name5);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode7 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode8 = functionNode7.getTop();
        functionNode2.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode7);
        functionNode7.setIsExpressionClosure(true);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode13 = new com.google.javascript.rhino.head.ast.FunctionNode((int) (byte) 100);
        int int14 = functionNode7.addFunction(functionNode13);
        int int15 = jump1.compareTo((com.google.javascript.rhino.head.ast.AstNode) functionNode13);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode17 = new com.google.javascript.rhino.head.ast.FunctionNode(0);
        com.google.javascript.rhino.head.ast.Jump jump23 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump23.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump27 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump23, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode29 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int30 = scriptNode29.getEndLineno();
        int int31 = scriptNode29.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList32 = scriptNode29.getChildScopes();
        com.google.javascript.rhino.head.Node node33 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump23, (com.google.javascript.rhino.head.Node) scriptNode29);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList34 = scriptNode29.getFunctions();
        functionNodeList34.clear();
        com.google.javascript.rhino.head.ast.Jump jump40 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump40.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump44 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump40, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode46 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int47 = scriptNode46.getEndLineno();
        int int48 = scriptNode46.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList49 = scriptNode46.getChildScopes();
        com.google.javascript.rhino.head.Node node50 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump40, (com.google.javascript.rhino.head.Node) scriptNode46);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList51 = scriptNode46.getFunctions();
        boolean boolean52 = functionNodeList34.removeAll((java.util.Collection<com.google.javascript.rhino.head.ast.FunctionNode>) functionNodeList51);
        functionNode17.putProp(20, (java.lang.Object) functionNodeList34);
        int int54 = functionNode13.addFunction(functionNode17);
        functionNode13.removeProp((-2));
        functionNode13.setPosition(2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(scriptNode4);
        org.junit.Assert.assertNotNull(scriptNode8);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNull(scopeList32);
        org.junit.Assert.assertNotNull(functionNodeList34);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
        org.junit.Assert.assertNull(scopeList49);
        org.junit.Assert.assertNotNull(functionNodeList51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
    }

    @Test
    public void test09522() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09522");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 10);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode2 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode3 = functionNode2.getTop();
        functionNode2.setParens((int) (byte) 1, (int) (short) 1);
        functionNode2.setEncodedSourceStart((-1));
        functionNode2.setFunctionIsGetter();
        scope1.addChildToFront((com.google.javascript.rhino.head.Node) functionNode2);
        functionNode2.setRp(19);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int15 = scriptNode14.getEndLineno();
        int int16 = scriptNode14.getBaseLineno();
        com.google.javascript.rhino.head.ast.Jump jump19 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode21 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int22 = scriptNode21.getEndLineno();
        int int23 = scriptNode21.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList24 = scriptNode21.getChildScopes();
        jump19.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode21);
        java.lang.String str26 = scriptNode21.debugPrint();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode14, (com.google.javascript.rhino.head.ast.Scope) scriptNode21);
        com.google.javascript.rhino.head.ast.Scope scope28 = new com.google.javascript.rhino.head.ast.Scope();
        scriptNode21.target = scope28;
        java.lang.String str30 = functionNode2.toStringTree(scriptNode21);
        java.lang.String str32 = scriptNode21.toSource((int) (short) 10);
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap33 = scriptNode21.getSymbolTable();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode35 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int36 = scriptNode35.getEndLineno();
        int int37 = scriptNode35.getBaseLineno();
        scriptNode35.removeProp(0);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList40 = scriptNode35.getSymbols();
        boolean boolean41 = strMap33.containsValue((java.lang.Object) symbolList40);
        java.util.Set<java.util.Map.Entry<java.lang.String, com.google.javascript.rhino.head.ast.Symbol>> strEntrySet42 = strMap33.entrySet();
        java.lang.Object obj43 = null;
        boolean boolean44 = strMap33.equals(obj43);
        org.junit.Assert.assertNotNull(scriptNode3);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNull(scopeList24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str26, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "                    {\n                    }\n" + "'", str32, "                    {\n                    }\n");
        org.junit.Assert.assertNotNull(strMap33);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertNotNull(symbolList40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(strEntrySet42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
    }

    @Test
    public void test09523() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09523");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        int int1 = scriptNode0.getEncodedSourceEnd();
        int int2 = scriptNode0.getFunctionCount();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode3 = scriptNode0.getEnclosingFunction();
        int int4 = scriptNode0.getBaseLineno();
        scriptNode0.setEncodedSourceBounds(5864805, 0);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-1) + "'", int1 == (-1));
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNull(functionNode3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
    }

    @Test
    public void test09524() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09524");
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.ast.Symbol symbol2 = new com.google.javascript.rhino.head.ast.Symbol((-46469981), "/                    {\n                      {\n                      }\n                    }\n//null/-1\tSCRIPT -1 1\n");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid declType: -46469981");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test09525() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09525");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 10);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode2 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode3 = functionNode2.getTop();
        functionNode2.setParens((int) (byte) 1, (int) (short) 1);
        functionNode2.setEncodedSourceStart((-1));
        functionNode2.setFunctionIsGetter();
        scope1.addChildToFront((com.google.javascript.rhino.head.Node) functionNode2);
        functionNode2.setRp(19);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int15 = scriptNode14.getEndLineno();
        int int16 = scriptNode14.getBaseLineno();
        com.google.javascript.rhino.head.ast.Jump jump19 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode21 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int22 = scriptNode21.getEndLineno();
        int int23 = scriptNode21.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList24 = scriptNode21.getChildScopes();
        jump19.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode21);
        java.lang.String str26 = scriptNode21.debugPrint();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode14, (com.google.javascript.rhino.head.ast.Scope) scriptNode21);
        com.google.javascript.rhino.head.ast.Scope scope28 = new com.google.javascript.rhino.head.ast.Scope();
        scriptNode21.target = scope28;
        java.lang.String str30 = functionNode2.toStringTree(scriptNode21);
        java.lang.String str32 = scriptNode21.toSource((int) (short) 10);
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap33 = scriptNode21.getSymbolTable();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode35 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int36 = scriptNode35.getEndLineno();
        int int37 = scriptNode35.getBaseLineno();
        scriptNode35.removeProp(0);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList40 = scriptNode35.getSymbols();
        boolean boolean41 = strMap33.containsValue((java.lang.Object) symbolList40);
        java.util.Collection<com.google.javascript.rhino.head.ast.Symbol> symbolCollection42 = strMap33.values();
        com.google.javascript.rhino.head.ast.Jump jump45 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode47 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int48 = scriptNode47.getEndLineno();
        int int49 = scriptNode47.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList50 = scriptNode47.getChildScopes();
        jump45.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode47);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode53 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int54 = functionNode53.getLp();
        functionNode53.setEncodedSource("");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode57 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int58 = functionNode57.getLp();
        functionNode57.setEncodedSource("");
        functionNode57.flattenSymbolTable(false);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode63 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int64 = functionNode63.getLp();
        com.google.javascript.rhino.head.Node node66 = new com.google.javascript.rhino.head.Node((-1), (com.google.javascript.rhino.head.Node) functionNode53, (com.google.javascript.rhino.head.Node) functionNode57, (com.google.javascript.rhino.head.Node) functionNode63, (int) '#');
        jump45.addChildrenToFront((com.google.javascript.rhino.head.Node) functionNode53);
        int int68 = functionNode53.getLength();
        java.lang.String str69 = functionNode53.getName();
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor70 = functionNode53.iterator();
        boolean boolean71 = strMap33.containsValue((java.lang.Object) functionNode53);
        int int72 = strMap33.size();
        org.junit.Assert.assertNotNull(scriptNode3);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNull(scopeList24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str26, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "                    {\n                    }\n" + "'", str32, "                    {\n                    }\n");
        org.junit.Assert.assertNotNull(strMap33);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertNotNull(symbolList40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(symbolCollection42);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertNull(scopeList50);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + (-1) + "'", int58 == (-1));
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + (-1) + "'", int64 == (-1));
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 1 + "'", int68 == 1);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "" + "'", str69, "");
        org.junit.Assert.assertNotNull(nodeItor70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 0 + "'", int72 == 0);
    }

    @Test
    public void test09526() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09526");
        com.google.javascript.rhino.head.ast.Jump jump4 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump4.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump8 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump4, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int11 = scriptNode10.getEndLineno();
        int int12 = scriptNode10.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList13 = scriptNode10.getChildScopes();
        com.google.javascript.rhino.head.Node node14 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump4, (com.google.javascript.rhino.head.Node) scriptNode10);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList15 = scriptNode10.getChildScopes();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode17 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int18 = functionNode17.getLp();
        functionNode17.setEncodedSource("");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode21 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int22 = functionNode21.getLp();
        functionNode21.setEncodedSource("");
        functionNode21.flattenSymbolTable(false);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode27 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int28 = functionNode27.getLp();
        com.google.javascript.rhino.head.Node node30 = new com.google.javascript.rhino.head.Node((-1), (com.google.javascript.rhino.head.Node) functionNode17, (com.google.javascript.rhino.head.Node) functionNode21, (com.google.javascript.rhino.head.Node) functionNode27, (int) '#');
        com.google.javascript.rhino.head.ast.Comment comment31 = functionNode27.getJsDocNode();
        int int32 = functionNode27.getFunctionCount();
        java.lang.String str33 = scriptNode10.toStringTree((com.google.javascript.rhino.head.ast.ScriptNode) functionNode27);
        com.google.javascript.rhino.head.Node node34 = scriptNode10.getFirstChild();
        com.google.javascript.rhino.head.ast.Symbol symbol35 = new com.google.javascript.rhino.head.ast.Symbol();
        java.lang.String str36 = symbol35.getName();
        com.google.javascript.rhino.head.Node node37 = symbol35.getNode();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode38 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode39 = functionNode38.getTop();
        functionNode38.setParens((int) (byte) 1, (int) (short) 1);
        functionNode38.setEncodedSourceStart((-1));
        java.util.List<com.google.javascript.rhino.head.Node> nodeList45 = functionNode38.getResumptionPoints();
        com.google.javascript.rhino.head.ast.Scope scope47 = functionNode38.getDefiningScope("hi!");
        boolean boolean48 = functionNode38.isGetterOrSetter();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode50 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int51 = scriptNode50.getEndLineno();
        com.google.javascript.rhino.head.ast.Symbol symbol53 = scriptNode50.getSymbol("hi!");
        scriptNode50.putIntProp(3, 0);
        functionNode38.addResumptionPoint((com.google.javascript.rhino.head.Node) scriptNode50);
        functionNode38.setIsGenerator();
        symbol35.setNode((com.google.javascript.rhino.head.Node) functionNode38);
        com.google.javascript.rhino.head.ast.Scope scope60 = symbol35.getContainingTable();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode62 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int63 = functionNode62.getLp();
        functionNode62.setEncodedSource("");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode66 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int67 = functionNode66.getLp();
        functionNode66.setEncodedSource("");
        functionNode66.flattenSymbolTable(false);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode72 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int73 = functionNode72.getLp();
        com.google.javascript.rhino.head.Node node75 = new com.google.javascript.rhino.head.Node((-1), (com.google.javascript.rhino.head.Node) functionNode62, (com.google.javascript.rhino.head.Node) functionNode66, (com.google.javascript.rhino.head.Node) functionNode72, (int) '#');
        boolean boolean76 = functionNode72.isGenerator();
        com.google.javascript.rhino.head.ast.Scope scope78 = new com.google.javascript.rhino.head.ast.Scope();
        scope78.setBounds(0, 10);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode82 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode83 = functionNode82.getTop();
        int int84 = functionNode82.getRegexpCount();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode85 = functionNode82.getEnclosingFunction();
        java.lang.String str86 = scope78.toStringTree((com.google.javascript.rhino.head.ast.ScriptNode) functionNode82);
        functionNode72.putProp(1, (java.lang.Object) functionNode82);
        functionNode72.setParens(8, (int) (byte) 10);
        boolean boolean91 = functionNode72.isGetter();
        symbol35.setNode((com.google.javascript.rhino.head.Node) functionNode72);
        int int93 = scriptNode10.addFunction(functionNode72);
        // The following exception was thrown during execution in test generation
        try {
            int int94 = functionNode72.labelId();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNull(scopeList13);
        org.junit.Assert.assertNull(scopeList15);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNull(comment31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNull(node34);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNull(node37);
        org.junit.Assert.assertNotNull(scriptNode39);
        org.junit.Assert.assertNull(nodeList45);
        org.junit.Assert.assertNull(scope47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1));
        org.junit.Assert.assertNull(symbol53);
        org.junit.Assert.assertNull(scope60);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + (-1) + "'", int63 == (-1));
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + (-1) + "'", int67 == (-1));
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + (-1) + "'", int73 == (-1));
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(scriptNode83);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 0 + "'", int84 == 0);
        org.junit.Assert.assertNull(functionNode85);
        org.junit.Assert.assertNull(str86);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertTrue("'" + int93 + "' != '" + 0 + "'", int93 == 0);
    }

    @Test
    public void test09527() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09527");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int3 = scriptNode2.getEndLineno();
        int int4 = scriptNode2.getBaseLineno();
        scriptNode2.removeProp(0);
        scriptNode2.setEncodedSourceEnd(19);
        com.google.javascript.rhino.head.Node node9 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.Node node10 = new com.google.javascript.rhino.head.Node((-631440296), (com.google.javascript.rhino.head.Node) scriptNode2, node9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
    }

    @Test
    public void test09528() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09528");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode0 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = functionNode0.getTop();
        com.google.javascript.rhino.head.ast.Name name2 = null;
        functionNode0.setFunctionName(name2);
        int int4 = functionNode0.getLength();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode7 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int8 = functionNode7.getLp();
        functionNode7.setEncodedSource("");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode11 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int12 = functionNode11.getLp();
        functionNode11.setEncodedSource("");
        functionNode11.flattenSymbolTable(false);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode17 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int18 = functionNode17.getLp();
        com.google.javascript.rhino.head.Node node20 = new com.google.javascript.rhino.head.Node((-1), (com.google.javascript.rhino.head.Node) functionNode7, (com.google.javascript.rhino.head.Node) functionNode11, (com.google.javascript.rhino.head.Node) functionNode17, (int) '#');
        functionNode17.setEncodedSourceStart(25);
        boolean boolean23 = functionNode17.requiresActivation();
        java.lang.String str24 = functionNode17.getNextTempName();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode26 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode27 = functionNode26.getTop();
        functionNode26.setParens((int) (byte) 1, (int) (short) 1);
        int int31 = functionNode26.getRp();
        com.google.javascript.rhino.head.Node node34 = com.google.javascript.rhino.head.Node.newString((int) (byte) 100, "");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode35 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int36 = functionNode35.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode38 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        java.lang.String str39 = functionNode35.toStringTree(scriptNode38);
        com.google.javascript.rhino.head.ast.Scope scope41 = scriptNode38.getDefiningScope("");
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList42 = scriptNode38.getSymbols();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode44 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int45 = scriptNode44.getEndLineno();
        int int46 = scriptNode44.getBaseLineno();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode38, (com.google.javascript.rhino.head.ast.Scope) scriptNode44);
        java.lang.String str48 = scriptNode44.getEncodedSource();
        com.google.javascript.rhino.head.Node node50 = new com.google.javascript.rhino.head.Node(136, (com.google.javascript.rhino.head.Node) functionNode26, node34, (com.google.javascript.rhino.head.Node) scriptNode44, (int) (short) 0);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode51 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int52 = functionNode51.getLp();
        functionNode51.setEncodedSource("");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode55 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.Scope scope57 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 10);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode58 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode59 = functionNode58.getTop();
        functionNode58.setParens((int) (byte) 1, (int) (short) 1);
        functionNode58.setEncodedSourceStart((-1));
        functionNode58.setFunctionIsGetter();
        scope57.addChildToFront((com.google.javascript.rhino.head.Node) functionNode58);
        functionNode55.setBody((com.google.javascript.rhino.head.ast.AstNode) functionNode58);
        int int68 = functionNode51.addFunction(functionNode55);
        com.google.javascript.rhino.head.Node node70 = new com.google.javascript.rhino.head.Node((int) '4', (com.google.javascript.rhino.head.Node) functionNode17, (com.google.javascript.rhino.head.Node) scriptNode44, (com.google.javascript.rhino.head.Node) functionNode55, 3);
        functionNode0.addChildrenToBack(node70);
        boolean boolean72 = node70.hasSideEffects();
        org.junit.Assert.assertNotNull(scriptNode1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 1 + "'", int4 == 1);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "$0" + "'", str24, "$0");
        org.junit.Assert.assertNotNull(scriptNode27);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 1 + "'", int31 == 1);
        org.junit.Assert.assertNotNull(node34);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNull(scope41);
        org.junit.Assert.assertNotNull(symbolList42);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertNotNull(scriptNode59);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 0 + "'", int68 == 0);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
    }

    @Test
    public void test09529() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09529");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode0 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int1 = functionNode0.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = functionNode0.getTop();
        boolean boolean3 = functionNode0.hasSideEffects();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList4 = functionNode0.getSymbols();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = new com.google.javascript.rhino.head.ast.ScriptNode();
        int int6 = scriptNode5.getEncodedSourceEnd();
        java.lang.String str8 = scriptNode5.toSource((int) (byte) 10);
        scriptNode5.setEncodedSourceEnd((int) (short) -1);
        java.lang.String str11 = functionNode0.toStringTree(scriptNode5);
        functionNode0.setRequiresActivation();
        com.google.javascript.rhino.head.ast.AstNode astNode13 = functionNode0.getMemberExprNode();
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList14 = functionNode0.getParams();
        com.google.javascript.rhino.head.ast.RegExpLiteral regExpLiteral18 = new com.google.javascript.rhino.head.ast.RegExpLiteral((int) '4', (int) (short) -1);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode19 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int20 = functionNode19.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode21 = functionNode19.getTop();
        boolean boolean22 = functionNode19.hasSideEffects();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode23 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int24 = functionNode23.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode25 = functionNode23.getTop();
        com.google.javascript.rhino.head.ast.Name name26 = null;
        functionNode23.setFunctionName(name26);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode28 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.Scope scope30 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 10);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode31 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode32 = functionNode31.getTop();
        functionNode31.setParens((int) (byte) 1, (int) (short) 1);
        functionNode31.setEncodedSourceStart((-1));
        functionNode31.setFunctionIsGetter();
        scope30.addChildToFront((com.google.javascript.rhino.head.Node) functionNode31);
        functionNode28.setBody((com.google.javascript.rhino.head.ast.AstNode) functionNode31);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode41 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode42 = functionNode41.getTop();
        functionNode41.setParens((int) (byte) 1, (int) (short) 1);
        functionNode41.setEncodedSourceStart((-1));
        java.util.List<com.google.javascript.rhino.head.Node> nodeList48 = functionNode41.getResumptionPoints();
        int int49 = functionNode41.getLp();
        functionNode28.setBody((com.google.javascript.rhino.head.ast.AstNode) functionNode41);
        functionNode23.addParam((com.google.javascript.rhino.head.ast.AstNode) functionNode41);
        com.google.javascript.rhino.head.Node node52 = new com.google.javascript.rhino.head.Node(10, (com.google.javascript.rhino.head.Node) regExpLiteral18, (com.google.javascript.rhino.head.Node) functionNode19, (com.google.javascript.rhino.head.Node) functionNode41);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode54 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode55 = functionNode54.getTop();
        functionNode54.setParens((int) (byte) 1, (int) (short) 1);
        functionNode54.setEncodedSourceStart((-1));
        java.util.List<com.google.javascript.rhino.head.Node> nodeList61 = functionNode54.getResumptionPoints();
        com.google.javascript.rhino.head.ast.Scope scope63 = functionNode54.getDefiningScope("hi!");
        boolean boolean64 = functionNode54.isGetterOrSetter();
        com.google.javascript.rhino.head.ast.Scope scope66 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 10);
        int[] intArray73 = new int[] { 25, 17, (short) 0, 20, 19, (byte) 1 };
        functionNode54.addLiveLocals((com.google.javascript.rhino.head.Node) scope66, intArray73);
        com.google.javascript.rhino.head.Node node76 = functionNode54.setType(100);
        functionNode41.putProp((int) (short) 100, (java.lang.Object) node76);
        int int78 = functionNode0.addFunction(functionNode41);
        com.google.javascript.rhino.head.ast.AstNode astNode79 = functionNode41.getBody();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-1) + "'", int1 == (-1));
        org.junit.Assert.assertNotNull(scriptNode2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(symbolList4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "                    {\n                    }\n" + "'", str8, "                    {\n                    }\n");
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(astNode13);
        org.junit.Assert.assertNotNull(astNodeList14);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertNotNull(scriptNode21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertNotNull(scriptNode25);
        org.junit.Assert.assertNotNull(scriptNode32);
        org.junit.Assert.assertNotNull(scriptNode42);
        org.junit.Assert.assertNull(nodeList48);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 1 + "'", int49 == 1);
        org.junit.Assert.assertNotNull(scriptNode55);
        org.junit.Assert.assertNull(nodeList61);
        org.junit.Assert.assertNull(scope63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[25, 17, 0, 20, 19, 1]");
        org.junit.Assert.assertNotNull(node76);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 0 + "'", int78 == 0);
        org.junit.Assert.assertNull(astNode79);
    }

    @Test
    public void test09530() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09530");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode1 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = functionNode1.getTop();
        functionNode1.setParens((int) (byte) 1, (int) (short) 1);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode6 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.Scope scope8 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 10);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode9 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = functionNode9.getTop();
        functionNode9.setParens((int) (byte) 1, (int) (short) 1);
        functionNode9.setEncodedSourceStart((-1));
        functionNode9.setFunctionIsGetter();
        scope8.addChildToFront((com.google.javascript.rhino.head.Node) functionNode9);
        functionNode6.setBody((com.google.javascript.rhino.head.ast.AstNode) functionNode9);
        functionNode6.setFunctionIsSetter();
        int int20 = functionNode1.addFunction(functionNode6);
        functionNode1.setEncodedSourceStart(1);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList23 = functionNode1.getChildScopes();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode25 = new com.google.javascript.rhino.head.ast.FunctionNode((-1262414679));
        boolean boolean26 = functionNode25.isExpressionClosure();
        com.google.javascript.rhino.head.Node node28 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) functionNode1, (com.google.javascript.rhino.head.Node) functionNode25, 350469479);
        int int29 = functionNode1.getLength();
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor30 = null;
        // The following exception was thrown during execution in test generation
        try {
            functionNode1.visit(nodeVisitor30);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(scriptNode2);
        org.junit.Assert.assertNotNull(scriptNode10);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNull(scopeList23);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1 + "'", int29 == 1);
    }

    @Test
    public void test09531() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09531");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode1 = new com.google.javascript.rhino.head.ast.FunctionNode(0);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode2 = functionNode1.getEnclosingFunction();
        com.google.javascript.rhino.head.Node node3 = functionNode1.target;
        functionNode1.setLineno((int) (byte) -1);
        com.google.javascript.rhino.head.ast.Comment comment6 = functionNode1.getJsDocNode();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode8 = new com.google.javascript.rhino.head.ast.FunctionNode(0);
        int int9 = functionNode8.getBaseLineno();
        boolean boolean10 = functionNode8.isGetter();
        com.google.javascript.rhino.head.ast.RegExpLiteral regExpLiteral12 = new com.google.javascript.rhino.head.ast.RegExpLiteral((int) (short) 1);
        regExpLiteral12.setFlags("-1\tSCRIPT -1 1\n");
        java.lang.String str15 = regExpLiteral12.getValue();
        regExpLiteral12.setFlags("52");
        functionNode8.addChildrenToFront((com.google.javascript.rhino.head.Node) regExpLiteral12);
        boolean boolean19 = functionNode8.isGetterOrSetter();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode20 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode21 = functionNode20.getTop();
        int int22 = functionNode20.getRegexpCount();
        int int23 = functionNode20.getParamCount();
        com.google.javascript.rhino.head.ast.AstNode astNode24 = functionNode20.getBody();
        int int25 = functionNode8.addFunction(functionNode20);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode26 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int27 = functionNode26.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode28 = functionNode26.getTop();
        boolean boolean29 = functionNode26.hasSideEffects();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList30 = functionNode26.getSymbols();
        int int31 = functionNode26.getLength();
        boolean boolean32 = functionNode26.isGetterOrSetter();
        functionNode20.addChildrenToFront((com.google.javascript.rhino.head.Node) functionNode26);
        functionNode26.setBounds((int) (byte) 0, (int) (byte) 0);
        functionNode1.replaceWith((com.google.javascript.rhino.head.ast.Scope) functionNode26);
        functionNode1.setIsGenerator();
        org.junit.Assert.assertNull(functionNode2);
        org.junit.Assert.assertNull(node3);
        org.junit.Assert.assertNull(comment6);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(scriptNode21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNull(astNode24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(scriptNode28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(symbolList30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 1 + "'", int31 == 1);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
    }

    @Test
    public void test09532() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09532");
        com.google.javascript.rhino.head.ast.Name name1 = null;
        com.google.javascript.rhino.head.ast.FunctionNode functionNode2 = new com.google.javascript.rhino.head.ast.FunctionNode(4, name1);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode4 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = functionNode4.getTop();
        functionNode4.setParens((int) (byte) 1, (int) (short) 1);
        int int9 = functionNode4.getRp();
        com.google.javascript.rhino.head.Node node12 = com.google.javascript.rhino.head.Node.newString((int) (byte) 100, "");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode13 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int14 = functionNode13.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode16 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        java.lang.String str17 = functionNode13.toStringTree(scriptNode16);
        com.google.javascript.rhino.head.ast.Scope scope19 = scriptNode16.getDefiningScope("");
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList20 = scriptNode16.getSymbols();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode22 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int23 = scriptNode22.getEndLineno();
        int int24 = scriptNode22.getBaseLineno();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode16, (com.google.javascript.rhino.head.ast.Scope) scriptNode22);
        java.lang.String str26 = scriptNode22.getEncodedSource();
        com.google.javascript.rhino.head.Node node28 = new com.google.javascript.rhino.head.Node(136, (com.google.javascript.rhino.head.Node) functionNode4, node12, (com.google.javascript.rhino.head.Node) scriptNode22, (int) (short) 0);
        functionNode2.setTop(scriptNode22);
        com.google.javascript.rhino.head.ast.Name name30 = null;
        functionNode2.setFunctionName(name30);
        org.junit.Assert.assertNotNull(scriptNode5);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertNotNull(node12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(scope19);
        org.junit.Assert.assertNotNull(symbolList20);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertNull(str26);
    }

    @Test
    public void test09533() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09533");
        com.google.javascript.rhino.head.ast.Jump jump4 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump4.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump8 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump4, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int11 = scriptNode10.getEndLineno();
        int int12 = scriptNode10.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList13 = scriptNode10.getChildScopes();
        com.google.javascript.rhino.head.Node node14 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump4, (com.google.javascript.rhino.head.Node) scriptNode10);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList15 = scriptNode10.getFunctions();
        functionNodeList15.clear();
        com.google.javascript.rhino.head.ast.Jump jump21 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump21.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump25 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump21, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode27 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int28 = scriptNode27.getEndLineno();
        int int29 = scriptNode27.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList30 = scriptNode27.getChildScopes();
        com.google.javascript.rhino.head.Node node31 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump21, (com.google.javascript.rhino.head.Node) scriptNode27);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList32 = scriptNode27.getFunctions();
        boolean boolean33 = functionNodeList15.removeAll((java.util.Collection<com.google.javascript.rhino.head.ast.FunctionNode>) functionNodeList32);
        functionNodeList15.clear();
        java.util.stream.Stream<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeStream35 = functionNodeList15.parallelStream();
        com.google.javascript.rhino.head.ast.Jump jump41 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump41.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump45 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump41, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode47 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int48 = scriptNode47.getEndLineno();
        int int49 = scriptNode47.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList50 = scriptNode47.getChildScopes();
        com.google.javascript.rhino.head.Node node51 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump41, (com.google.javascript.rhino.head.Node) scriptNode47);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList52 = scriptNode47.getFunctions();
        int int53 = scriptNode47.getPosition();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList54 = scriptNode47.getChildScopes();
        int int55 = scriptNode47.getEncodedSourceEnd();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList56 = scriptNode47.getSymbols();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode57 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int58 = functionNode57.getLp();
        functionNode57.setEncodedSource("");
        functionNode57.flattenSymbolTable(false);
        com.google.javascript.rhino.head.ast.RegExpLiteral regExpLiteral64 = new com.google.javascript.rhino.head.ast.RegExpLiteral((int) (short) 1);
        java.lang.String str66 = regExpLiteral64.toSource((int) (byte) 10);
        regExpLiteral64.setFlags("-1\tSCRIPT -1 1\n");
        regExpLiteral64.removeProp(8);
        java.lang.String str71 = regExpLiteral64.getValue();
        com.google.javascript.rhino.head.Node node72 = new com.google.javascript.rhino.head.Node(7, (com.google.javascript.rhino.head.Node) scriptNode47, (com.google.javascript.rhino.head.Node) functionNode57, (com.google.javascript.rhino.head.Node) regExpLiteral64);
        int int73 = functionNodeList15.lastIndexOf((java.lang.Object) functionNode57);
        com.google.javascript.rhino.head.Node node76 = new com.google.javascript.rhino.head.Node((-14761645));
        com.google.javascript.rhino.head.ast.FunctionNode functionNode77 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int78 = functionNode77.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode80 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        java.lang.String str81 = functionNode77.toStringTree(scriptNode80);
        functionNode77.setFunctionIsGetter();
        com.google.javascript.rhino.head.ast.RegExpLiteral regExpLiteral84 = new com.google.javascript.rhino.head.ast.RegExpLiteral((int) (short) 1);
        java.lang.String str86 = regExpLiteral84.toSource((int) (byte) 10);
        regExpLiteral84.setFlags("-1\tSCRIPT -1 1\n");
        java.lang.String str90 = regExpLiteral84.toSource((int) (short) -1);
        regExpLiteral84.setFlags("EOF");
        boolean boolean93 = regExpLiteral84.hasSideEffects();
        com.google.javascript.rhino.head.Node node94 = new com.google.javascript.rhino.head.Node(350469479, node76, (com.google.javascript.rhino.head.Node) functionNode77, (com.google.javascript.rhino.head.Node) regExpLiteral84);
        boolean boolean95 = functionNodeList15.remove((java.lang.Object) node76);
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList98 = functionNodeList15.subList(1590262715, (int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: toIndex = 100");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNull(scopeList13);
        org.junit.Assert.assertNotNull(functionNodeList15);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertNull(scopeList30);
        org.junit.Assert.assertNotNull(functionNodeList32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(functionNodeStream35);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertNull(scopeList50);
        org.junit.Assert.assertNotNull(functionNodeList52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
        org.junit.Assert.assertNull(scopeList54);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1));
        org.junit.Assert.assertNotNull(symbolList56);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + (-1) + "'", int58 == (-1));
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "                    /null/" + "'", str66, "                    /null/");
        org.junit.Assert.assertNull(str71);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + (-1) + "'", int73 == (-1));
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + (-1) + "'", int78 == (-1));
        org.junit.Assert.assertNull(str81);
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "                    /null/" + "'", str86, "                    /null/");
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "/null/-1\tSCRIPT -1 1\n" + "'", str90, "/null/-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
    }

    @Test
    public void test09534() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09534");
        com.google.javascript.rhino.head.ast.Name name1 = null;
        com.google.javascript.rhino.head.ast.FunctionNode functionNode2 = new com.google.javascript.rhino.head.ast.FunctionNode(1023344933, name1);
    }

    @Test
    public void test09535() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09535");
        com.google.javascript.rhino.head.Token.CommentType commentType3 = com.google.javascript.rhino.head.Token.CommentType.HTML;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment(20, 1, commentType3, "109");
        com.google.javascript.rhino.head.Token.CommentType commentType6 = comment5.getCommentType();
        comment5.setLength((int) '4');
        com.google.javascript.rhino.head.ast.FunctionNode functionNode10 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = functionNode10.getTop();
        functionNode10.setParens((int) (byte) 1, (int) (short) 1);
        functionNode10.setEncodedSourceStart((-1));
        java.util.List<com.google.javascript.rhino.head.Node> nodeList17 = functionNode10.getResumptionPoints();
        com.google.javascript.rhino.head.ast.Scope scope19 = functionNode10.getDefiningScope("hi!");
        boolean boolean20 = functionNode10.isGetterOrSetter();
        com.google.javascript.rhino.head.ast.Scope scope22 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 10);
        int[] intArray29 = new int[] { 25, 17, (short) 0, 20, 19, (byte) 1 };
        functionNode10.addLiveLocals((com.google.javascript.rhino.head.Node) scope22, intArray29);
        com.google.javascript.rhino.head.Node node32 = functionNode10.setType(100);
        com.google.javascript.rhino.head.Node node34 = new com.google.javascript.rhino.head.Node(10, (com.google.javascript.rhino.head.Node) functionNode10, (int) 'a');
        comment5.addChildToFront(node34);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode37 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int38 = scriptNode37.getEndLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode40 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int41 = scriptNode40.getEndLineno();
        scriptNode37.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode40);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode43 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int44 = functionNode43.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode45 = functionNode43.getTop();
        boolean boolean46 = functionNode43.hasSideEffects();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode48 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int49 = scriptNode48.getEndLineno();
        int int50 = scriptNode48.getBaseLineno();
        com.google.javascript.rhino.head.ast.Jump jump53 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode55 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int56 = scriptNode55.getEndLineno();
        int int57 = scriptNode55.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList58 = scriptNode55.getChildScopes();
        jump53.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode55);
        java.lang.String str60 = scriptNode55.debugPrint();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode48, (com.google.javascript.rhino.head.ast.Scope) scriptNode55);
        com.google.javascript.rhino.head.ast.Scope scope62 = new com.google.javascript.rhino.head.ast.Scope();
        scriptNode55.target = scope62;
        functionNode43.addChildScope(scope62);
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode40, (com.google.javascript.rhino.head.ast.Scope) functionNode43);
        int int66 = functionNode43.getFunctionCount();
        com.google.javascript.rhino.head.ast.Scope scope67 = functionNode43.getEnclosingScope();
        com.google.javascript.rhino.head.Node node70 = new com.google.javascript.rhino.head.Node((int) (byte) 10, (int) '#');
        functionNode43.setCompilerData((java.lang.Object) '#');
        com.google.javascript.rhino.head.Node node73 = new com.google.javascript.rhino.head.Node(8, (com.google.javascript.rhino.head.Node) comment5, (com.google.javascript.rhino.head.Node) functionNode43, (int) (short) -1);
        boolean boolean74 = functionNode43.isExpressionClosure();
        com.google.javascript.rhino.head.ast.AstNode astNode75 = null;
        functionNode43.setMemberExprNode(astNode75);
        org.junit.Assert.assertTrue("'" + commentType3 + "' != '" + com.google.javascript.rhino.head.Token.CommentType.HTML + "'", commentType3.equals(com.google.javascript.rhino.head.Token.CommentType.HTML));
        org.junit.Assert.assertTrue("'" + commentType6 + "' != '" + com.google.javascript.rhino.head.Token.CommentType.HTML + "'", commentType6.equals(com.google.javascript.rhino.head.Token.CommentType.HTML));
        org.junit.Assert.assertNotNull(scriptNode11);
        org.junit.Assert.assertNull(nodeList17);
        org.junit.Assert.assertNull(scope19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[25, 17, 0, 20, 19, 1]");
        org.junit.Assert.assertNotNull(node32);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertNotNull(scriptNode45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1));
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
        org.junit.Assert.assertNull(scopeList58);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str60, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 0 + "'", int66 == 0);
        org.junit.Assert.assertNull(scope67);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
    }

    @Test
    public void test09536() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09536");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode0 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int1 = functionNode0.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = functionNode0.getTop();
        com.google.javascript.rhino.head.ast.AstNode astNode3 = functionNode0.getBody();
        com.google.javascript.rhino.head.ast.Scope scope4 = functionNode0.getParentScope();
        com.google.javascript.rhino.head.ast.Name name5 = null;
        functionNode0.setFunctionName(name5);
        functionNode0.setFunctionIsSetter();
        com.google.javascript.rhino.head.ast.Jump jump11 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump11.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump15 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump11, 0);
        com.google.javascript.rhino.head.ast.Jump jump19 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump19.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump23 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump19, 0);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode24 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int25 = functionNode24.getLp();
        functionNode24.setEncodedSource("");
        functionNode24.flattenSymbolTable(false);
        jump11.addChildAfter((com.google.javascript.rhino.head.Node) jump19, (com.google.javascript.rhino.head.Node) functionNode24);
        int int31 = functionNode24.getLength();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode32 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode33 = functionNode32.getTop();
        com.google.javascript.rhino.head.ast.Name name34 = null;
        functionNode32.setFunctionName(name34);
        boolean boolean36 = functionNode32.requiresActivation();
        com.google.javascript.rhino.head.ast.Jump jump40 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump40.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump44 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump40, 0);
        com.google.javascript.rhino.head.ast.Jump jump48 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump48.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump52 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump48, 0);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode53 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int54 = functionNode53.getLp();
        functionNode53.setEncodedSource("");
        functionNode53.flattenSymbolTable(false);
        jump40.addChildAfter((com.google.javascript.rhino.head.Node) jump48, (com.google.javascript.rhino.head.Node) functionNode53);
        com.google.javascript.rhino.head.Node node60 = functionNode53.target;
        functionNode32.setBody((com.google.javascript.rhino.head.ast.AstNode) functionNode53);
        functionNode24.setBody((com.google.javascript.rhino.head.ast.AstNode) functionNode53);
        com.google.javascript.rhino.head.Node node64 = functionNode53.setType((int) (short) 0);
        java.lang.String str65 = functionNode53.getSourceName();
        java.lang.String str66 = functionNode0.toStringTree((com.google.javascript.rhino.head.ast.ScriptNode) functionNode53);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-1) + "'", int1 == (-1));
        org.junit.Assert.assertNotNull(scriptNode2);
        org.junit.Assert.assertNull(astNode3);
        org.junit.Assert.assertNull(scope4);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 1 + "'", int31 == 1);
        org.junit.Assert.assertNotNull(scriptNode33);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
        org.junit.Assert.assertNull(node60);
        org.junit.Assert.assertNotNull(node64);
        org.junit.Assert.assertNull(str65);
        org.junit.Assert.assertNull(str66);
    }

    @Test
    public void test09537() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09537");
        com.google.javascript.rhino.head.ast.RegExpLiteral regExpLiteral1 = new com.google.javascript.rhino.head.ast.RegExpLiteral(14);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode2 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int3 = functionNode2.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        java.lang.String str6 = functionNode2.toStringTree(scriptNode5);
        functionNode2.setFunctionIsGetter();
        com.google.javascript.rhino.head.ast.AstNode astNode8 = functionNode2.getBody();
        functionNode2.setParens(21, (int) '#');
        int int12 = functionNode2.getLineno();
        functionNode2.setRp(9);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode15 = functionNode2.getTop();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode16 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int17 = functionNode16.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode18 = functionNode16.getTop();
        boolean boolean19 = functionNode16.hasSideEffects();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode21 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int22 = scriptNode21.getEndLineno();
        int int23 = scriptNode21.getBaseLineno();
        com.google.javascript.rhino.head.ast.Jump jump26 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode28 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int29 = scriptNode28.getEndLineno();
        int int30 = scriptNode28.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList31 = scriptNode28.getChildScopes();
        jump26.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode28);
        java.lang.String str33 = scriptNode28.debugPrint();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode21, (com.google.javascript.rhino.head.ast.Scope) scriptNode28);
        com.google.javascript.rhino.head.ast.Scope scope35 = new com.google.javascript.rhino.head.ast.Scope();
        scriptNode28.target = scope35;
        functionNode16.addChildScope(scope35);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode38 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int39 = functionNode38.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode40 = functionNode38.getTop();
        com.google.javascript.rhino.head.ast.Name name41 = null;
        functionNode38.setFunctionName(name41);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode43 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode44 = functionNode43.getTop();
        functionNode38.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode43);
        com.google.javascript.rhino.head.ast.Scope scope48 = new com.google.javascript.rhino.head.ast.Scope((int) (short) -1, 0);
        functionNode38.replaceWith(scope48);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode50 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int51 = functionNode50.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode52 = functionNode50.getTop();
        com.google.javascript.rhino.head.ast.Name name53 = null;
        functionNode50.setFunctionName(name53);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode55 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode56 = functionNode55.getTop();
        functionNode50.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode55);
        int int58 = functionNode38.addFunction(functionNode50);
        int int59 = functionNode16.addFunction(functionNode50);
        functionNode2.addResumptionPoint((com.google.javascript.rhino.head.Node) functionNode50);
        regExpLiteral1.setParent((com.google.javascript.rhino.head.ast.AstNode) functionNode50);
        com.google.javascript.rhino.head.ast.Name name62 = null;
        functionNode50.setFunctionName(name62);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(astNode8);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(scriptNode15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNotNull(scriptNode18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertNull(scopeList31);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str33, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertNotNull(scriptNode40);
        org.junit.Assert.assertNotNull(scriptNode44);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1));
        org.junit.Assert.assertNotNull(scriptNode52);
        org.junit.Assert.assertNotNull(scriptNode56);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
    }

    @Test
    public void test09538() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09538");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int2 = scriptNode1.getEndLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode4 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int5 = scriptNode4.getEndLineno();
        scriptNode1.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode4);
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator7 = scriptNode1.new NodeIterator();
        boolean boolean8 = nodeIterator7.hasNext();
        boolean boolean9 = nodeIterator7.hasNext();
        boolean boolean10 = nodeIterator7.hasNext();
        boolean boolean11 = nodeIterator7.hasNext();
        com.google.javascript.rhino.head.Node node12 = nodeIterator7.next();
        boolean boolean13 = nodeIterator7.hasNext();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(node12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test09539() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09539");
        com.google.javascript.rhino.head.ast.Name name1 = null;
        com.google.javascript.rhino.head.ast.FunctionNode functionNode2 = new com.google.javascript.rhino.head.ast.FunctionNode(1, name1);
        boolean boolean3 = functionNode2.isGetterOrSetter();
        int int4 = functionNode2.getEncodedSourceEnd();
        boolean boolean5 = functionNode2.requiresActivation();
        // The following exception was thrown during execution in test generation
        try {
            int int6 = functionNode2.getParamAndVarCount();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
    }

    @Test
    public void test09540() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09540");
        com.google.javascript.rhino.head.ast.Jump jump3 = new com.google.javascript.rhino.head.ast.Jump(0, 1299931104);
        com.google.javascript.rhino.head.ast.Jump jump5 = new com.google.javascript.rhino.head.ast.Jump(129, (com.google.javascript.rhino.head.Node) jump3, 9);
    }

    @Test
    public void test09541() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09541");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode(1251040444);
    }

    @Test
    public void test09542() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09542");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode0 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int1 = functionNode0.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = functionNode0.getTop();
        com.google.javascript.rhino.head.ast.Name name3 = null;
        functionNode0.setFunctionName(name3);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode5 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = functionNode5.getTop();
        functionNode0.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode5);
        int int8 = functionNode5.getRp();
        int int9 = functionNode5.getFunctionType();
        boolean boolean10 = functionNode5.requiresActivation();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList11 = functionNode5.getChildScopes();
        functionNode5.setFunctionType(100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = functionNode5.getTop();
        com.google.javascript.rhino.head.ast.Symbol symbol15 = new com.google.javascript.rhino.head.ast.Symbol();
        java.lang.String str16 = symbol15.getName();
        com.google.javascript.rhino.head.Node node17 = symbol15.getNode();
        com.google.javascript.rhino.head.ast.Jump jump19 = new com.google.javascript.rhino.head.ast.Jump((int) ' ');
        symbol15.setNode((com.google.javascript.rhino.head.Node) jump19);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode22 = new com.google.javascript.rhino.head.ast.FunctionNode(0);
        int int23 = functionNode22.getBaseLineno();
        functionNode22.setSourceName("                                                                                                                                                                                                        /null/");
        symbol15.setContainingTable((com.google.javascript.rhino.head.ast.Scope) functionNode22);
        int int27 = functionNode22.getLp();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) functionNode5, (com.google.javascript.rhino.head.ast.Scope) functionNode22);
        functionNode22.setLength((-1262414679));
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str32 = functionNode22.toSource(69268905);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-1) + "'", int1 == (-1));
        org.junit.Assert.assertNotNull(scriptNode2);
        org.junit.Assert.assertNotNull(scriptNode6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(scopeList11);
        org.junit.Assert.assertNotNull(scriptNode14);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNull(node17);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
    }

    @Test
    public void test09543() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09543");
        com.google.javascript.rhino.head.ast.Name name1 = null;
        com.google.javascript.rhino.head.ast.FunctionNode functionNode2 = new com.google.javascript.rhino.head.ast.FunctionNode((-592978996), name1);
        boolean boolean3 = functionNode2.hasConsistentReturnUsage();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
    }

    @Test
    public void test09544() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09544");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode1 = new com.google.javascript.rhino.head.ast.FunctionNode((-1));
        java.lang.Object obj2 = functionNode1.getCompilerData();
        int int3 = functionNode1.getEndLineno();
        int int4 = functionNode1.getType();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 109 + "'", int4 == 109);
    }

    @Test
    public void test09545() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09545");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode0 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int1 = functionNode0.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = functionNode0.getTop();
        com.google.javascript.rhino.head.ast.Name name3 = null;
        functionNode0.setFunctionName(name3);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode5 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = functionNode5.getTop();
        functionNode0.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode5);
        int int8 = functionNode5.getRp();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator9 = functionNode5.spliterator();
        java.lang.String str10 = functionNode5.shortName();
        com.google.javascript.rhino.head.ast.Scope scope11 = functionNode5.getEnclosingScope();
        functionNode5.setRp(1299931104);
        com.google.javascript.rhino.head.Node node14 = functionNode5.getLastChild();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-1) + "'", int1 == (-1));
        org.junit.Assert.assertNotNull(scriptNode2);
        org.junit.Assert.assertNotNull(scriptNode6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(nodeSpliterator9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "FunctionNode" + "'", str10, "FunctionNode");
        org.junit.Assert.assertNotNull(scope11);
        org.junit.Assert.assertNull(node14);
    }

    @Test
    public void test09546() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09546");
        com.google.javascript.rhino.head.Node node2 = com.google.javascript.rhino.head.Node.newString(771817347, "                                                                                                                                                                                                  109");
        org.junit.Assert.assertNotNull(node2);
    }

    @Test
    public void test09547() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09547");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode0 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int1 = functionNode0.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = functionNode0.getTop();
        com.google.javascript.rhino.head.ast.Name name3 = null;
        functionNode0.setFunctionName(name3);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode5 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = functionNode5.getTop();
        functionNode0.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode5);
        functionNode5.setIsExpressionClosure(true);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode11 = new com.google.javascript.rhino.head.ast.FunctionNode((int) (byte) 100);
        int int12 = functionNode5.addFunction(functionNode11);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode14 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int15 = functionNode14.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode16 = functionNode14.getTop();
        com.google.javascript.rhino.head.ast.Name name17 = null;
        functionNode14.setFunctionName(name17);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode19 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode20 = functionNode19.getTop();
        functionNode14.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode19);
        functionNode19.setIsExpressionClosure(true);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode25 = new com.google.javascript.rhino.head.ast.FunctionNode((int) (byte) 100);
        int int26 = functionNode19.addFunction(functionNode25);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode28 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode29 = functionNode28.getTop();
        java.lang.String str30 = scriptNode29.getJsDoc();
        com.google.javascript.rhino.head.Node node32 = scriptNode29.setType(0);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode33 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int34 = functionNode33.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode36 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        java.lang.String str37 = functionNode33.toStringTree(scriptNode36);
        com.google.javascript.rhino.head.ast.Scope scope39 = scriptNode36.getDefiningScope("");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode41 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int42 = scriptNode41.getEndLineno();
        int int43 = scriptNode41.getBaseLineno();
        com.google.javascript.rhino.head.Node node44 = new com.google.javascript.rhino.head.Node(25, node32, (com.google.javascript.rhino.head.Node) scriptNode36, (com.google.javascript.rhino.head.Node) scriptNode41);
        int int45 = functionNode25.compareTo((com.google.javascript.rhino.head.ast.AstNode) scriptNode36);
        com.google.javascript.rhino.head.ast.RegExpLiteral regExpLiteral47 = new com.google.javascript.rhino.head.ast.RegExpLiteral((int) (short) 1);
        regExpLiteral47.setFlags("-1\tSCRIPT -1 1\n");
        regExpLiteral47.setFlags("/null/-1\tSCRIPT -1 1\n");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode52 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int53 = functionNode52.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode54 = functionNode52.getTop();
        com.google.javascript.rhino.head.ast.Name name55 = null;
        functionNode52.setFunctionName(name55);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode57 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode58 = functionNode57.getTop();
        functionNode52.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode57);
        int int60 = functionNode57.getRp();
        int int61 = functionNode57.getFunctionType();
        boolean boolean62 = functionNode57.requiresActivation();
        com.google.javascript.rhino.head.Node node63 = new com.google.javascript.rhino.head.Node(26, (com.google.javascript.rhino.head.Node) scriptNode36, (com.google.javascript.rhino.head.Node) regExpLiteral47, (com.google.javascript.rhino.head.Node) functionNode57);
        functionNode5.addParam((com.google.javascript.rhino.head.ast.AstNode) functionNode57);
        int int65 = functionNode57.getLineno();
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList66 = functionNode57.getStatements();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-1) + "'", int1 == (-1));
        org.junit.Assert.assertNotNull(scriptNode2);
        org.junit.Assert.assertNotNull(scriptNode6);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(scriptNode16);
        org.junit.Assert.assertNotNull(scriptNode20);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(scriptNode29);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNotNull(node32);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNull(scope39);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 1 + "'", int45 == 1);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
        org.junit.Assert.assertNotNull(scriptNode54);
        org.junit.Assert.assertNotNull(scriptNode58);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-1) + "'", int60 == (-1));
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 0 + "'", int61 == 0);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + (-1) + "'", int65 == (-1));
        org.junit.Assert.assertNotNull(astNodeList66);
    }

    @Test
    public void test09548() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09548");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode2 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int3 = functionNode2.getLp();
        functionNode2.setEncodedSource("");
        functionNode2.flattenSymbolTable(false);
        java.lang.String str8 = functionNode2.getName();
        functionNode2.setFunctionIsGetter();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode10 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int11 = functionNode10.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode12 = functionNode10.getTop();
        com.google.javascript.rhino.head.Node node13 = functionNode10.getLastSibling();
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList14 = functionNode10.getParams();
        functionNode2.setParams(astNodeList14);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode16 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int17 = functionNode16.getLp();
        functionNode16.setLp((int) (short) 1);
        int int22 = functionNode16.getIntProp(4, 26);
        functionNode16.flattenSymbolTable(true);
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList25 = functionNode16.getParams();
        functionNode2.setParams(astNodeList25);
        functionNode2.setEndLineno(12);
        com.google.javascript.rhino.head.Token.CommentType commentType31 = com.google.javascript.rhino.head.Token.CommentType.HTML;
        com.google.javascript.rhino.head.ast.Comment comment33 = new com.google.javascript.rhino.head.ast.Comment(20, 1, commentType31, "109");
        java.lang.String str35 = comment33.toSource(0);
        java.lang.String str36 = comment33.getValue();
        functionNode2.setJsDocNode(comment33);
        com.google.javascript.rhino.head.Token.CommentType commentType38 = comment33.getCommentType();
        com.google.javascript.rhino.head.ast.Comment comment40 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 10, 0, commentType38, "136");
        com.google.javascript.rhino.head.Token.CommentType commentType41 = comment40.getCommentType();
        com.google.javascript.rhino.head.Token.CommentType commentType42 = comment40.getCommentType();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(scriptNode12);
        org.junit.Assert.assertNotNull(node13);
        org.junit.Assert.assertNotNull(astNodeList14);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 26 + "'", int22 == 26);
        org.junit.Assert.assertNotNull(astNodeList25);
        org.junit.Assert.assertTrue("'" + commentType31 + "' != '" + com.google.javascript.rhino.head.Token.CommentType.HTML + "'", commentType31.equals(com.google.javascript.rhino.head.Token.CommentType.HTML));
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "109" + "'", str35, "109");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "109" + "'", str36, "109");
        org.junit.Assert.assertTrue("'" + commentType38 + "' != '" + com.google.javascript.rhino.head.Token.CommentType.HTML + "'", commentType38.equals(com.google.javascript.rhino.head.Token.CommentType.HTML));
        org.junit.Assert.assertTrue("'" + commentType41 + "' != '" + com.google.javascript.rhino.head.Token.CommentType.HTML + "'", commentType41.equals(com.google.javascript.rhino.head.Token.CommentType.HTML));
        org.junit.Assert.assertTrue("'" + commentType42 + "' != '" + com.google.javascript.rhino.head.Token.CommentType.HTML + "'", commentType42.equals(com.google.javascript.rhino.head.Token.CommentType.HTML));
    }

    @Test
    public void test09549() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09549");
        com.google.javascript.rhino.head.ast.Jump jump3 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump3.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump7 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump3, 0);
        com.google.javascript.rhino.head.ast.Jump jump11 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump11.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump15 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump11, 0);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode16 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int17 = functionNode16.getLp();
        functionNode16.setEncodedSource("");
        functionNode16.flattenSymbolTable(false);
        jump3.addChildAfter((com.google.javascript.rhino.head.Node) jump11, (com.google.javascript.rhino.head.Node) functionNode16);
        int int23 = functionNode16.getPosition();
        java.util.Map<com.google.javascript.rhino.head.Node, int[]> nodeMap24 = functionNode16.getLiveLocals();
        int int25 = functionNode16.getType();
        int int26 = functionNode16.getRp();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode29 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int30 = functionNode29.getLp();
        functionNode29.setLp((int) (short) 1);
        int int35 = functionNode29.getIntProp(4, 26);
        com.google.javascript.rhino.head.ast.Jump jump36 = new com.google.javascript.rhino.head.ast.Jump(3, (com.google.javascript.rhino.head.Node) functionNode29);
        com.google.javascript.rhino.head.Node node37 = new com.google.javascript.rhino.head.Node((int) '4', (com.google.javascript.rhino.head.Node) functionNode29);
        functionNode29.setFunctionType(11);
        boolean boolean40 = functionNode29.hasChildren();
        functionNode29.setParens((-1262414679), (int) '#');
        functionNode16.addParam((com.google.javascript.rhino.head.ast.AstNode) functionNode29);
        java.lang.String str45 = functionNode29.getJsDoc();
        int int46 = functionNode29.getEndLineno();
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNull(nodeMap24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 109 + "'", int25 == 109);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 26 + "'", int35 == 26);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
    }

    @Test
    public void test09550() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09550");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode0 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int1 = functionNode0.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = functionNode0.getTop();
        boolean boolean3 = functionNode0.hasSideEffects();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList4 = functionNode0.getSymbols();
        int int5 = functionNode0.getLength();
        boolean boolean6 = functionNode0.isGetterOrSetter();
        java.util.Map<com.google.javascript.rhino.head.Node, int[]> nodeMap7 = functionNode0.getLiveLocals();
        functionNode0.setIsGenerator();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-1) + "'", int1 == (-1));
        org.junit.Assert.assertNotNull(scriptNode2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(symbolList4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(nodeMap7);
    }

    @Test
    public void test09551() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09551");
        com.google.javascript.rhino.head.ast.Symbol symbol0 = new com.google.javascript.rhino.head.ast.Symbol();
        java.lang.String str1 = symbol0.getName();
        com.google.javascript.rhino.head.Node node2 = symbol0.getNode();
        java.lang.String str3 = symbol0.getDeclTypeName();
        java.lang.String str4 = symbol0.toString();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode5 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int6 = functionNode5.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode7 = functionNode5.getTop();
        boolean boolean8 = functionNode5.hasSideEffects();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int11 = scriptNode10.getEndLineno();
        int int12 = scriptNode10.getBaseLineno();
        com.google.javascript.rhino.head.ast.Jump jump15 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode17 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int18 = scriptNode17.getEndLineno();
        int int19 = scriptNode17.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList20 = scriptNode17.getChildScopes();
        jump15.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode17);
        java.lang.String str22 = scriptNode17.debugPrint();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode10, (com.google.javascript.rhino.head.ast.Scope) scriptNode17);
        com.google.javascript.rhino.head.ast.Scope scope24 = new com.google.javascript.rhino.head.ast.Scope();
        scriptNode17.target = scope24;
        functionNode5.addChildScope(scope24);
        boolean boolean27 = functionNode5.hasConsistentReturnUsage();
        java.lang.String str28 = functionNode5.getNextTempName();
        functionNode5.removeProp(5);
        symbol0.setContainingTable((com.google.javascript.rhino.head.ast.Scope) functionNode5);
        java.lang.String str32 = symbol0.getName();
        symbol0.setIndex(1237778423);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "EOF" + "'", str3, "EOF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Symbol (EOF) name=null" + "'", str4, "Symbol (EOF) name=null");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(scriptNode7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNull(scopeList20);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str22, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "$0" + "'", str28, "$0");
        org.junit.Assert.assertNull(str32);
    }

    @Test
    public void test09552() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09552");
        com.google.javascript.rhino.head.ast.Jump jump4 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump4.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump8 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump4, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int11 = scriptNode10.getEndLineno();
        int int12 = scriptNode10.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList13 = scriptNode10.getChildScopes();
        com.google.javascript.rhino.head.Node node14 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump4, (com.google.javascript.rhino.head.Node) scriptNode10);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList15 = scriptNode10.getFunctions();
        int int16 = functionNodeList15.size();
        functionNodeList15.clear();
        int int19 = functionNodeList15.indexOf((java.lang.Object) 10L);
        com.google.javascript.rhino.head.ast.Jump jump24 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump24.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump28 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump24, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode30 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int31 = scriptNode30.getEndLineno();
        int int32 = scriptNode30.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList33 = scriptNode30.getChildScopes();
        com.google.javascript.rhino.head.Node node34 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump24, (com.google.javascript.rhino.head.Node) scriptNode30);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList35 = scriptNode30.getFunctions();
        functionNodeList35.clear();
        functionNodeList35.clear();
        com.google.javascript.rhino.head.ast.Jump jump42 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump42.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump46 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump42, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode48 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int49 = scriptNode48.getEndLineno();
        int int50 = scriptNode48.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList51 = scriptNode48.getChildScopes();
        com.google.javascript.rhino.head.Node node52 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump42, (com.google.javascript.rhino.head.Node) scriptNode48);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList53 = scriptNode48.getFunctions();
        java.util.Spliterator<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeSpliterator54 = functionNodeList53.spliterator();
        int int56 = functionNodeList53.indexOf((java.lang.Object) (byte) 10);
        boolean boolean57 = functionNodeList35.retainAll((java.util.Collection<com.google.javascript.rhino.head.ast.FunctionNode>) functionNodeList53);
        boolean boolean58 = functionNodeList15.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.FunctionNode>) functionNodeList35);
        java.lang.Object[] objArray59 = functionNodeList35.toArray();
        java.lang.Object[] objArray60 = functionNodeList35.toArray();
        java.util.Iterator<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeItor61 = functionNodeList35.iterator();
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNull(scopeList13);
        org.junit.Assert.assertNotNull(functionNodeList15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNull(scopeList33);
        org.junit.Assert.assertNotNull(functionNodeList35);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertNull(scopeList51);
        org.junit.Assert.assertNotNull(functionNodeList53);
        org.junit.Assert.assertNotNull(functionNodeSpliterator54);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1));
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(objArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray59), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray59), "[]");
        org.junit.Assert.assertNotNull(objArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray60), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray60), "[]");
        org.junit.Assert.assertNotNull(functionNodeItor61);
    }

    @Test
    public void test09553() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09553");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode0 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int1 = functionNode0.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = functionNode0.getTop();
        com.google.javascript.rhino.head.ast.Name name3 = null;
        functionNode0.setFunctionName(name3);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode5 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = functionNode5.getTop();
        functionNode0.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode5);
        int int8 = functionNode5.getRp();
        functionNode5.setParens(11, 2);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode13 = new com.google.javascript.rhino.head.ast.FunctionNode((-1));
        int int14 = functionNode5.addFunction(functionNode13);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode16 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int17 = scriptNode16.getEndLineno();
        int int18 = scriptNode16.getBaseLineno();
        scriptNode16.removeProp(0);
        scriptNode16.setEncodedSourceEnd(19);
        java.lang.String str23 = scriptNode16.toString();
        int[] intArray25 = new int[] { 26 };
        functionNode5.addLiveLocals((com.google.javascript.rhino.head.Node) scriptNode16, intArray25);
        com.google.javascript.rhino.head.ast.Name name27 = null;
        functionNode5.setFunctionName(name27);
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor29 = functionNode5.iterator();
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor30 = null;
        // The following exception was thrown during execution in test generation
        try {
            functionNode5.visit(nodeVisitor30);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-1) + "'", int1 == (-1));
        org.junit.Assert.assertNotNull(scriptNode2);
        org.junit.Assert.assertNotNull(scriptNode6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "136" + "'", str23, "136");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[26]");
        org.junit.Assert.assertNotNull(nodeItor29);
    }

    @Test
    public void test09554() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09554");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode2 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int3 = functionNode2.getLp();
        functionNode2.setLp((int) (short) 1);
        int int8 = functionNode2.getIntProp(4, 26);
        com.google.javascript.rhino.head.ast.Jump jump9 = new com.google.javascript.rhino.head.ast.Jump(3, (com.google.javascript.rhino.head.Node) functionNode2);
        com.google.javascript.rhino.head.Node node10 = new com.google.javascript.rhino.head.Node((int) '4', (com.google.javascript.rhino.head.Node) functionNode2);
        functionNode2.setFunctionType(11);
        boolean boolean13 = functionNode2.hasChildren();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode14 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int15 = functionNode14.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode16 = functionNode14.getTop();
        com.google.javascript.rhino.head.ast.Name name17 = null;
        functionNode14.setFunctionName(name17);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode19 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.Scope scope21 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 10);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode22 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode23 = functionNode22.getTop();
        functionNode22.setParens((int) (byte) 1, (int) (short) 1);
        functionNode22.setEncodedSourceStart((-1));
        functionNode22.setFunctionIsGetter();
        scope21.addChildToFront((com.google.javascript.rhino.head.Node) functionNode22);
        functionNode19.setBody((com.google.javascript.rhino.head.ast.AstNode) functionNode22);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode32 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode33 = functionNode32.getTop();
        functionNode32.setParens((int) (byte) 1, (int) (short) 1);
        functionNode32.setEncodedSourceStart((-1));
        java.util.List<com.google.javascript.rhino.head.Node> nodeList39 = functionNode32.getResumptionPoints();
        int int40 = functionNode32.getLp();
        functionNode19.setBody((com.google.javascript.rhino.head.ast.AstNode) functionNode32);
        functionNode14.addParam((com.google.javascript.rhino.head.ast.AstNode) functionNode32);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode43 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int44 = functionNode43.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode45 = functionNode43.getTop();
        com.google.javascript.rhino.head.ast.Name name46 = null;
        functionNode43.setFunctionName(name46);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode48 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode49 = functionNode48.getTop();
        functionNode43.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode48);
        int int51 = functionNode48.getRp();
        int int52 = functionNode48.getFunctionType();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) functionNode32, (com.google.javascript.rhino.head.ast.Scope) functionNode48);
        functionNode2.setBody((com.google.javascript.rhino.head.ast.AstNode) functionNode48);
        functionNode2.setFunctionType(10);
        com.google.javascript.rhino.head.ast.Scope scope58 = functionNode2.getDefiningScope("                                                                                                                                                                                                  ");
        functionNode2.setEncodedSourceBounds(109, (-47132040));
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 26 + "'", int8 == 26);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(scriptNode16);
        org.junit.Assert.assertNotNull(scriptNode23);
        org.junit.Assert.assertNotNull(scriptNode33);
        org.junit.Assert.assertNull(nodeList39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 1 + "'", int40 == 1);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertNotNull(scriptNode45);
        org.junit.Assert.assertNotNull(scriptNode49);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1));
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertNull(scope58);
    }

    @Test
    public void test09555() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09555");
        com.google.javascript.rhino.head.ast.RegExpLiteral regExpLiteral3 = new com.google.javascript.rhino.head.ast.RegExpLiteral(3, 17);
        com.google.javascript.rhino.head.ast.RegExpLiteral regExpLiteral6 = new com.google.javascript.rhino.head.ast.RegExpLiteral(13, (int) (short) 1);
        com.google.javascript.rhino.head.Node node8 = regExpLiteral6.setType((-446577320));
        com.google.javascript.rhino.head.ast.FunctionNode functionNode10 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int11 = functionNode10.getLp();
        functionNode10.setEncodedSource("");
        functionNode10.flattenSymbolTable(false);
        java.lang.String str16 = functionNode10.getName();
        functionNode10.setFunctionIsGetter();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode18 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int19 = functionNode18.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode20 = functionNode18.getTop();
        boolean boolean21 = functionNode18.hasSideEffects();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList22 = functionNode18.getSymbols();
        functionNode18.setRp(5);
        com.google.javascript.rhino.head.ast.Scope scope25 = functionNode18.getEnclosingScope();
        functionNode18.setLineno(5);
        com.google.javascript.rhino.head.Node node29 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) functionNode10, (com.google.javascript.rhino.head.Node) functionNode18, 1);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode30 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode31 = functionNode30.getTop();
        functionNode30.setParens((int) (byte) 1, (int) (short) 1);
        functionNode30.setEncodedSourceStart((-1));
        java.util.List<com.google.javascript.rhino.head.Node> nodeList37 = functionNode30.getResumptionPoints();
        com.google.javascript.rhino.head.ast.Scope scope39 = functionNode30.getDefiningScope("hi!");
        boolean boolean40 = functionNode30.isGetterOrSetter();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode41 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int42 = functionNode41.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode43 = functionNode41.getTop();
        com.google.javascript.rhino.head.ast.AstNode astNode44 = functionNode41.getBody();
        int int45 = functionNode41.getLength();
        com.google.javascript.rhino.head.ast.Jump jump48 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode50 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int51 = scriptNode50.getEndLineno();
        int int52 = scriptNode50.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList53 = scriptNode50.getChildScopes();
        jump48.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode50);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode56 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int57 = functionNode56.getLp();
        functionNode56.setEncodedSource("");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode60 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int61 = functionNode60.getLp();
        functionNode60.setEncodedSource("");
        functionNode60.flattenSymbolTable(false);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode66 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int67 = functionNode66.getLp();
        com.google.javascript.rhino.head.Node node69 = new com.google.javascript.rhino.head.Node((-1), (com.google.javascript.rhino.head.Node) functionNode56, (com.google.javascript.rhino.head.Node) functionNode60, (com.google.javascript.rhino.head.Node) functionNode66, (int) '#');
        jump48.addChildrenToFront((com.google.javascript.rhino.head.Node) functionNode56);
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList71 = functionNode56.getStatements();
        functionNode41.setParams(astNodeList71);
        functionNode30.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode41);
        functionNode18.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode41);
        java.util.Map<com.google.javascript.rhino.head.Node, int[]> nodeMap75 = functionNode18.getLiveLocals();
        com.google.javascript.rhino.head.Node node77 = new com.google.javascript.rhino.head.Node(35, (com.google.javascript.rhino.head.Node) regExpLiteral3, node8, (com.google.javascript.rhino.head.Node) functionNode18, 129);
        com.google.javascript.rhino.head.Node node78 = regExpLiteral3.getLastChild();
        org.junit.Assert.assertNotNull(node8);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(scriptNode20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(symbolList22);
        org.junit.Assert.assertNull(scope25);
        org.junit.Assert.assertNotNull(scriptNode31);
        org.junit.Assert.assertNull(nodeList37);
        org.junit.Assert.assertNull(scope39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertNotNull(scriptNode43);
        org.junit.Assert.assertNull(astNode44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 1 + "'", int45 == 1);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1));
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertNull(scopeList53);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + (-1) + "'", int61 == (-1));
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + (-1) + "'", int67 == (-1));
        org.junit.Assert.assertNotNull(astNodeList71);
        org.junit.Assert.assertNull(nodeMap75);
        org.junit.Assert.assertNull(node78);
    }

    @Test
    public void test09556() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09556");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int2 = scriptNode1.getEndLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode4 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int5 = scriptNode4.getEndLineno();
        scriptNode1.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode4);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode7 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int8 = functionNode7.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode9 = functionNode7.getTop();
        boolean boolean10 = functionNode7.hasSideEffects();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode12 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int13 = scriptNode12.getEndLineno();
        int int14 = scriptNode12.getBaseLineno();
        com.google.javascript.rhino.head.ast.Jump jump17 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode19 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int20 = scriptNode19.getEndLineno();
        int int21 = scriptNode19.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList22 = scriptNode19.getChildScopes();
        jump17.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode19);
        java.lang.String str24 = scriptNode19.debugPrint();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode12, (com.google.javascript.rhino.head.ast.Scope) scriptNode19);
        com.google.javascript.rhino.head.ast.Scope scope26 = new com.google.javascript.rhino.head.ast.Scope();
        scriptNode19.target = scope26;
        functionNode7.addChildScope(scope26);
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode4, (com.google.javascript.rhino.head.ast.Scope) functionNode7);
        int int30 = functionNode7.getFunctionCount();
        int int31 = functionNode7.getEncodedSourceEnd();
        com.google.javascript.rhino.head.ast.AstRoot astRoot32 = functionNode7.getAstRoot();
        functionNode7.setParens(10, 17);
        com.google.javascript.rhino.head.ast.Jump jump38 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        com.google.javascript.rhino.head.ast.Scope scope40 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 10);
        jump38.addChildrenToBack((com.google.javascript.rhino.head.Node) scope40);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode42 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int43 = functionNode42.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode44 = functionNode42.getTop();
        com.google.javascript.rhino.head.ast.Name name45 = null;
        functionNode42.setFunctionName(name45);
        functionNode42.setIsGenerator();
        java.lang.String str48 = functionNode42.getEncodedSource();
        scope40.target = functionNode42;
        functionNode42.setFunctionIsSetter();
        functionNode7.addResumptionPoint((com.google.javascript.rhino.head.Node) functionNode42);
        com.google.javascript.rhino.head.Node node52 = functionNode7.getLastChild();
        com.google.javascript.rhino.head.ast.RegExpLiteral regExpLiteral54 = new com.google.javascript.rhino.head.ast.RegExpLiteral((int) (short) 1);
        java.lang.String str56 = regExpLiteral54.toSource((int) (byte) 10);
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator57 = regExpLiteral54.new NodeIterator();
        regExpLiteral54.setFlags("$0");
        regExpLiteral54.putIntProp(25, (int) (short) -1);
        functionNode7.addRegExp(regExpLiteral54);
        com.google.javascript.rhino.head.ast.AstNode astNode64 = regExpLiteral54.getParent();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(scriptNode9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertNull(scopeList22);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str24, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNull(astRoot32);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertNotNull(scriptNode44);
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertNull(node52);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "                    /null/" + "'", str56, "                    /null/");
        org.junit.Assert.assertNull(astNode64);
    }

    @Test
    public void test09557() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09557");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 10);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode2 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode3 = functionNode2.getTop();
        functionNode2.setParens((int) (byte) 1, (int) (short) 1);
        functionNode2.setEncodedSourceStart((-1));
        functionNode2.setFunctionIsGetter();
        scope1.addChildToFront((com.google.javascript.rhino.head.Node) functionNode2);
        functionNode2.setRp(19);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int15 = scriptNode14.getEndLineno();
        int int16 = scriptNode14.getBaseLineno();
        com.google.javascript.rhino.head.ast.Jump jump19 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode21 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int22 = scriptNode21.getEndLineno();
        int int23 = scriptNode21.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList24 = scriptNode21.getChildScopes();
        jump19.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode21);
        java.lang.String str26 = scriptNode21.debugPrint();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode14, (com.google.javascript.rhino.head.ast.Scope) scriptNode21);
        com.google.javascript.rhino.head.ast.Scope scope28 = new com.google.javascript.rhino.head.ast.Scope();
        scriptNode21.target = scope28;
        java.lang.String str30 = functionNode2.toStringTree(scriptNode21);
        java.lang.String str32 = scriptNode21.toSource((int) (short) 10);
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap33 = scriptNode21.getSymbolTable();
        int int34 = strMap33.size();
        com.google.javascript.rhino.head.ast.Jump jump39 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump39.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump43 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump39, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode45 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int46 = scriptNode45.getEndLineno();
        int int47 = scriptNode45.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList48 = scriptNode45.getChildScopes();
        com.google.javascript.rhino.head.Node node49 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump39, (com.google.javascript.rhino.head.Node) scriptNode45);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList50 = scriptNode45.getFunctions();
        functionNodeList50.clear();
        functionNodeList50.clear();
        com.google.javascript.rhino.head.ast.Jump jump57 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump57.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump61 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump57, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode63 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int64 = scriptNode63.getEndLineno();
        int int65 = scriptNode63.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList66 = scriptNode63.getChildScopes();
        com.google.javascript.rhino.head.Node node67 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump57, (com.google.javascript.rhino.head.Node) scriptNode63);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList68 = scriptNode63.getFunctions();
        java.util.Spliterator<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeSpliterator69 = functionNodeList68.spliterator();
        int int71 = functionNodeList68.indexOf((java.lang.Object) (byte) 10);
        boolean boolean72 = functionNodeList50.retainAll((java.util.Collection<com.google.javascript.rhino.head.ast.FunctionNode>) functionNodeList68);
        boolean boolean73 = strMap33.containsKey((java.lang.Object) functionNodeList50);
        boolean boolean74 = strMap33.isEmpty();
        com.google.javascript.rhino.head.ast.Symbol symbol75 = new com.google.javascript.rhino.head.ast.Symbol();
        java.lang.String str76 = symbol75.getName();
        symbol75.setIndex((int) '#');
        boolean boolean79 = strMap33.containsKey((java.lang.Object) symbol75);
        java.util.Set<java.util.Map.Entry<java.lang.String, com.google.javascript.rhino.head.ast.Symbol>> strEntrySet80 = strMap33.entrySet();
        com.google.javascript.rhino.head.ast.RegExpLiteral regExpLiteral83 = new com.google.javascript.rhino.head.ast.RegExpLiteral((-1), 3);
        java.lang.String str84 = regExpLiteral83.getFlags();
        java.lang.String str86 = regExpLiteral83.toSource(16);
        com.google.javascript.rhino.head.ast.Symbol symbol87 = new com.google.javascript.rhino.head.ast.Symbol();
        java.lang.String str88 = symbol87.getDeclTypeName();
        int int89 = symbol87.getDeclType();
        com.google.javascript.rhino.head.ast.Scope scope90 = symbol87.getContainingTable();
        java.lang.String str91 = symbol87.getDeclTypeName();
        com.google.javascript.rhino.head.ast.Symbol symbol92 = strMap33.getOrDefault((java.lang.Object) 16, symbol87);
        com.google.javascript.rhino.head.ast.RegExpLiteral regExpLiteral95 = new com.google.javascript.rhino.head.ast.RegExpLiteral((int) '4', (int) (short) -1);
        symbol87.setNode((com.google.javascript.rhino.head.Node) regExpLiteral95);
        regExpLiteral95.setFlags("                                                    /null/-1\tSCRIPT -1 1\n");
        int int99 = regExpLiteral95.getLineno();
        org.junit.Assert.assertNotNull(scriptNode3);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNull(scopeList24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str26, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "                    {\n                    }\n" + "'", str32, "                    {\n                    }\n");
        org.junit.Assert.assertNotNull(strMap33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertNull(scopeList48);
        org.junit.Assert.assertNotNull(functionNodeList50);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + (-1) + "'", int64 == (-1));
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + (-1) + "'", int65 == (-1));
        org.junit.Assert.assertNull(scopeList66);
        org.junit.Assert.assertNotNull(functionNodeList68);
        org.junit.Assert.assertNotNull(functionNodeSpliterator69);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + (-1) + "'", int71 == (-1));
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNull(str76);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(strEntrySet80);
        org.junit.Assert.assertNull(str84);
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "                                /null/" + "'", str86, "                                /null/");
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "EOF" + "'", str88, "EOF");
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + 0 + "'", int89 == 0);
        org.junit.Assert.assertNull(scope90);
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + "EOF" + "'", str91, "EOF");
        org.junit.Assert.assertNotNull(symbol92);
        org.junit.Assert.assertTrue("'" + int99 + "' != '" + (-1) + "'", int99 == (-1));
    }

    @Test
    public void test09558() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09558");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode1 = new com.google.javascript.rhino.head.ast.FunctionNode((-1262414679));
        com.google.javascript.rhino.head.Token.CommentType commentType6 = com.google.javascript.rhino.head.Token.CommentType.HTML;
        com.google.javascript.rhino.head.ast.Comment comment8 = new com.google.javascript.rhino.head.ast.Comment(20, 1, commentType6, "109");
        java.lang.String str10 = comment8.toSource(19);
        java.lang.String str11 = comment8.getValue();
        com.google.javascript.rhino.head.Token.CommentType commentType12 = com.google.javascript.rhino.head.Token.CommentType.HTML;
        comment8.setCommentType(commentType12);
        com.google.javascript.rhino.head.ast.Comment comment15 = new com.google.javascript.rhino.head.ast.Comment(9, 6, commentType12, "                    ");
        functionNode1.setJsDocNode(comment15);
        com.google.javascript.rhino.head.ast.Name name18 = null;
        com.google.javascript.rhino.head.ast.FunctionNode functionNode19 = new com.google.javascript.rhino.head.ast.FunctionNode(136, name18);
        functionNode1.setParent((com.google.javascript.rhino.head.ast.AstNode) name18);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode22 = new com.google.javascript.rhino.head.ast.FunctionNode(0);
        int int23 = functionNode22.getBaseLineno();
        boolean boolean24 = functionNode22.isGetter();
        com.google.javascript.rhino.head.ast.RegExpLiteral regExpLiteral26 = new com.google.javascript.rhino.head.ast.RegExpLiteral((int) (short) 1);
        regExpLiteral26.setFlags("-1\tSCRIPT -1 1\n");
        java.lang.String str29 = regExpLiteral26.getValue();
        regExpLiteral26.setFlags("52");
        functionNode22.addChildrenToFront((com.google.javascript.rhino.head.Node) regExpLiteral26);
        boolean boolean33 = functionNode22.isGetterOrSetter();
        int int34 = functionNode22.getRegexpCount();
        com.google.javascript.rhino.head.ast.RegExpLiteral regExpLiteral37 = new com.google.javascript.rhino.head.ast.RegExpLiteral(12, 10);
        functionNode22.addRegExp(regExpLiteral37);
        functionNode22.setRequiresActivation();
        com.google.javascript.rhino.head.Node node40 = functionNode22.getFirstChild();
        functionNode1.addChildToFront(node40);
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList42 = functionNode1.getParams();
        // The following exception was thrown during execution in test generation
        try {
            functionNode1.setString("                                                    /null/");
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: com.google.javascript.rhino.head.ast.FunctionNode cannot be cast to com.google.javascript.rhino.head.ast.Name");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + commentType6 + "' != '" + com.google.javascript.rhino.head.Token.CommentType.HTML + "'", commentType6.equals(com.google.javascript.rhino.head.Token.CommentType.HTML));
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "                                      109" + "'", str10, "                                      109");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "109" + "'", str11, "109");
        org.junit.Assert.assertTrue("'" + commentType12 + "' != '" + com.google.javascript.rhino.head.Token.CommentType.HTML + "'", commentType12.equals(com.google.javascript.rhino.head.Token.CommentType.HTML));
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertNotNull(node40);
        org.junit.Assert.assertNotNull(astNodeList42);
    }

    @Test
    public void test09559() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09559");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode2 = new com.google.javascript.rhino.head.ast.FunctionNode(0);
        int int3 = functionNode2.getBaseLineno();
        boolean boolean4 = functionNode2.isGetter();
        com.google.javascript.rhino.head.ast.RegExpLiteral regExpLiteral6 = new com.google.javascript.rhino.head.ast.RegExpLiteral((int) (short) 1);
        regExpLiteral6.setFlags("-1\tSCRIPT -1 1\n");
        java.lang.String str9 = regExpLiteral6.getValue();
        regExpLiteral6.setFlags("52");
        functionNode2.addChildrenToFront((com.google.javascript.rhino.head.Node) regExpLiteral6);
        boolean boolean13 = functionNode2.isGetterOrSetter();
        com.google.javascript.rhino.head.ast.Jump jump16 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode18 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int19 = scriptNode18.getEndLineno();
        int int20 = scriptNode18.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList21 = scriptNode18.getChildScopes();
        jump16.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode18);
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor23 = scriptNode18.iterator();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode24 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int25 = functionNode24.getLp();
        functionNode24.setEncodedSource("");
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode18, (com.google.javascript.rhino.head.ast.Scope) functionNode24);
        com.google.javascript.rhino.head.Node node29 = new com.google.javascript.rhino.head.Node((int) (byte) 1, (com.google.javascript.rhino.head.Node) functionNode2, (com.google.javascript.rhino.head.Node) scriptNode18);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList30 = functionNode2.getChildScopes();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode31 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int32 = functionNode31.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode33 = functionNode31.getTop();
        com.google.javascript.rhino.head.ast.Name name34 = null;
        functionNode31.setFunctionName(name34);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode36 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode37 = functionNode36.getTop();
        functionNode31.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode36);
        int int39 = functionNode36.getRp();
        java.lang.String str40 = functionNode36.getSourceName();
        functionNode36.setParens(14, (int) '#');
        int int44 = functionNode2.addFunction(functionNode36);
        functionNode36.setFunctionType(5864805);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertNull(scopeList21);
        org.junit.Assert.assertNotNull(nodeItor23);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNull(scopeList30);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNotNull(scriptNode33);
        org.junit.Assert.assertNotNull(scriptNode37);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
    }

    @Test
    public void test09560() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09560");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode0 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 10);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode3 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode4 = functionNode3.getTop();
        functionNode3.setParens((int) (byte) 1, (int) (short) 1);
        functionNode3.setEncodedSourceStart((-1));
        functionNode3.setFunctionIsGetter();
        scope2.addChildToFront((com.google.javascript.rhino.head.Node) functionNode3);
        functionNode0.setBody((com.google.javascript.rhino.head.ast.AstNode) functionNode3);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode13 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = functionNode13.getTop();
        functionNode13.setParens((int) (byte) 1, (int) (short) 1);
        functionNode13.setEncodedSourceStart((-1));
        java.util.List<com.google.javascript.rhino.head.Node> nodeList20 = functionNode13.getResumptionPoints();
        int int21 = functionNode13.getLp();
        functionNode0.setBody((com.google.javascript.rhino.head.ast.AstNode) functionNode13);
        com.google.javascript.rhino.head.Node node23 = functionNode13.getNext();
        int int24 = functionNode13.getLineno();
        com.google.javascript.rhino.head.Node node25 = functionNode13.target;
        com.google.javascript.rhino.head.ast.FunctionNode functionNode26 = functionNode13.getEnclosingFunction();
        int int27 = functionNode13.getParamCount();
        java.util.List<com.google.javascript.rhino.head.Node> nodeList28 = functionNode13.getResumptionPoints();
        org.junit.Assert.assertNotNull(scriptNode4);
        org.junit.Assert.assertNotNull(scriptNode14);
        org.junit.Assert.assertNull(nodeList20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertNull(node23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertNull(node25);
        org.junit.Assert.assertNotNull(functionNode26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertNull(nodeList28);
    }

    @Test
    public void test09561() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09561");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode1 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = functionNode1.getTop();
        java.lang.String str3 = scriptNode2.getJsDoc();
        com.google.javascript.rhino.head.Node node5 = scriptNode2.setType(0);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode6 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int7 = functionNode6.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode9 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        java.lang.String str10 = functionNode6.toStringTree(scriptNode9);
        com.google.javascript.rhino.head.ast.Scope scope12 = scriptNode9.getDefiningScope("");
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList13 = scriptNode9.getSymbols();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode15 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int16 = scriptNode15.getEndLineno();
        int int17 = scriptNode15.getBaseLineno();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode9, (com.google.javascript.rhino.head.ast.Scope) scriptNode15);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode20 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int21 = scriptNode20.getEndLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode23 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int24 = scriptNode23.getEndLineno();
        scriptNode20.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode23);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode26 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int27 = functionNode26.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode28 = functionNode26.getTop();
        boolean boolean29 = functionNode26.hasSideEffects();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode31 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int32 = scriptNode31.getEndLineno();
        int int33 = scriptNode31.getBaseLineno();
        com.google.javascript.rhino.head.ast.Jump jump36 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode38 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int39 = scriptNode38.getEndLineno();
        int int40 = scriptNode38.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList41 = scriptNode38.getChildScopes();
        jump36.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode38);
        java.lang.String str43 = scriptNode38.debugPrint();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode31, (com.google.javascript.rhino.head.ast.Scope) scriptNode38);
        com.google.javascript.rhino.head.ast.Scope scope45 = new com.google.javascript.rhino.head.ast.Scope();
        scriptNode38.target = scope45;
        functionNode26.addChildScope(scope45);
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode23, (com.google.javascript.rhino.head.ast.Scope) functionNode26);
        com.google.javascript.rhino.head.Node node49 = new com.google.javascript.rhino.head.Node(20, (com.google.javascript.rhino.head.Node) scriptNode2, (com.google.javascript.rhino.head.Node) scriptNode9, (com.google.javascript.rhino.head.Node) scriptNode23);
        boolean boolean50 = scriptNode2.hasSideEffects();
        com.google.javascript.rhino.head.Node node51 = scriptNode2.target;
        com.google.javascript.rhino.head.ast.Scope scope52 = scriptNode2.getEnclosingScope();
        org.junit.Assert.assertNotNull(scriptNode2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(node5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(scope12);
        org.junit.Assert.assertNotNull(symbolList13);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(scriptNode28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertNull(scopeList41);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str43, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNull(node51);
        org.junit.Assert.assertNull(scope52);
    }

    @Test
    public void test09562() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09562");
        com.google.javascript.rhino.head.ast.Jump jump3 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump3.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump7 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump3, 0);
        com.google.javascript.rhino.head.ast.Jump jump11 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump11.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump15 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump11, 0);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode16 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int17 = functionNode16.getLp();
        functionNode16.setEncodedSource("");
        functionNode16.flattenSymbolTable(false);
        jump3.addChildAfter((com.google.javascript.rhino.head.Node) jump11, (com.google.javascript.rhino.head.Node) functionNode16);
        int int23 = functionNode16.getLength();
        com.google.javascript.rhino.head.Node node25 = functionNode16.setType(21);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode26 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode27 = functionNode26.getTop();
        com.google.javascript.rhino.head.ast.Name name28 = null;
        functionNode26.setFunctionName(name28);
        int int30 = functionNode26.getLength();
        functionNode26.setFunctionType(19);
        functionNode16.addParam((com.google.javascript.rhino.head.ast.AstNode) functionNode26);
        functionNode16.removeProp((int) (short) 10);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode36 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int37 = functionNode36.getLp();
        functionNode36.setEncodedSource("");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode40 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int41 = functionNode40.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode42 = functionNode40.getTop();
        com.google.javascript.rhino.head.ast.Name name43 = null;
        functionNode40.setFunctionName(name43);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode45 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode46 = functionNode45.getTop();
        functionNode40.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode45);
        int int48 = functionNode45.getRp();
        int int49 = functionNode45.getFunctionType();
        functionNode36.addParam((com.google.javascript.rhino.head.ast.AstNode) functionNode45);
        com.google.javascript.rhino.head.Node node51 = functionNode36.getLastSibling();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode52 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int53 = functionNode52.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode54 = functionNode52.getTop();
        com.google.javascript.rhino.head.ast.Name name55 = null;
        functionNode52.setFunctionName(name55);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode57 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode58 = functionNode57.getTop();
        functionNode52.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode57);
        int int60 = functionNode57.getRp();
        int int61 = functionNode57.getFunctionType();
        boolean boolean62 = functionNode57.requiresActivation();
        functionNode57.setParens((int) ' ', 9);
        functionNode16.addChildAfter(node51, (com.google.javascript.rhino.head.Node) functionNode57);
        com.google.javascript.rhino.head.Node node67 = functionNode57.target;
        com.google.javascript.rhino.head.ast.AstNode astNode68 = functionNode57.getBody();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode70 = new com.google.javascript.rhino.head.ast.FunctionNode(0);
        int int71 = functionNode70.getBaseLineno();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode73 = new com.google.javascript.rhino.head.ast.FunctionNode((-1));
        functionNode70.setParentScope((com.google.javascript.rhino.head.ast.Scope) functionNode73);
        functionNode70.setRp(22);
        int int77 = functionNode57.addFunction(functionNode70);
        boolean boolean78 = functionNode57.isGenerator();
        int int79 = functionNode57.getRp();
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertNotNull(node25);
        org.junit.Assert.assertNotNull(scriptNode27);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 1 + "'", int30 == 1);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertNotNull(scriptNode42);
        org.junit.Assert.assertNotNull(scriptNode46);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertNotNull(node51);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
        org.junit.Assert.assertNotNull(scriptNode54);
        org.junit.Assert.assertNotNull(scriptNode58);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-1) + "'", int60 == (-1));
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 0 + "'", int61 == 0);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNull(node67);
        org.junit.Assert.assertNull(astNode68);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + (-1) + "'", int71 == (-1));
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 0 + "'", int77 == 0);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 9 + "'", int79 == 9);
    }

    @Test
    public void test09563() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09563");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode0 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int1 = functionNode0.getLp();
        functionNode0.setLineno(0);
        boolean boolean4 = functionNode0.requiresActivation();
        functionNode0.setRelative(21);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode7 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int8 = functionNode7.getLp();
        functionNode7.setLineno(0);
        functionNode0.setBody((com.google.javascript.rhino.head.ast.AstNode) functionNode7);
        java.util.Map<com.google.javascript.rhino.head.Node, int[]> nodeMap12 = functionNode7.getLiveLocals();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator13 = functionNode7.spliterator();
        int int14 = functionNode7.getType();
        functionNode7.setParens(349600310, 8);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-1) + "'", int1 == (-1));
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNull(nodeMap12);
        org.junit.Assert.assertNotNull(nodeSpliterator13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 109 + "'", int14 == 109);
    }

    @Test
    public void test09564() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09564");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode0 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = functionNode0.getTop();
        functionNode0.setParens((int) (byte) 1, (int) (short) 1);
        int int5 = functionNode0.getRp();
        int int6 = functionNode0.getAbsolutePosition();
        com.google.javascript.rhino.head.ast.Scope scope7 = functionNode0.getEnclosingScope();
        functionNode0.setFunctionIsGetter();
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList9 = functionNode0.getFunctions();
        org.junit.Assert.assertNotNull(scriptNode1);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNull(scope7);
        org.junit.Assert.assertNotNull(functionNodeList9);
    }

    @Test
    public void test09565() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09565");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode0 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int1 = functionNode0.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = functionNode0.getTop();
        com.google.javascript.rhino.head.ast.Name name3 = null;
        functionNode0.setFunctionName(name3);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode5 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = functionNode5.getTop();
        functionNode0.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode5);
        com.google.javascript.rhino.head.ast.Scope scope10 = new com.google.javascript.rhino.head.ast.Scope((int) (short) -1, 0);
        functionNode0.replaceWith(scope10);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode12 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int13 = functionNode12.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = functionNode12.getTop();
        com.google.javascript.rhino.head.ast.Name name15 = null;
        functionNode12.setFunctionName(name15);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode17 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode18 = functionNode17.getTop();
        functionNode12.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode17);
        int int20 = functionNode0.addFunction(functionNode12);
        int int21 = functionNode12.getLineno();
        com.google.javascript.rhino.head.ast.Scope scope22 = functionNode12.getEnclosingScope();
        functionNode12.setParens(19, 9);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str26 = functionNode12.getString();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: com.google.javascript.rhino.head.ast.FunctionNode cannot be cast to com.google.javascript.rhino.head.ast.Name");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-1) + "'", int1 == (-1));
        org.junit.Assert.assertNotNull(scriptNode2);
        org.junit.Assert.assertNotNull(scriptNode6);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(scriptNode14);
        org.junit.Assert.assertNotNull(scriptNode18);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertNull(scope22);
    }

    @Test
    public void test09566() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09566");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode0 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int1 = functionNode0.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = functionNode0.getTop();
        boolean boolean3 = functionNode0.hasSideEffects();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int6 = scriptNode5.getEndLineno();
        int int7 = scriptNode5.getBaseLineno();
        com.google.javascript.rhino.head.ast.Jump jump10 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode12 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int13 = scriptNode12.getEndLineno();
        int int14 = scriptNode12.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList15 = scriptNode12.getChildScopes();
        jump10.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode12);
        java.lang.String str17 = scriptNode12.debugPrint();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode5, (com.google.javascript.rhino.head.ast.Scope) scriptNode12);
        com.google.javascript.rhino.head.ast.Scope scope19 = new com.google.javascript.rhino.head.ast.Scope();
        scriptNode12.target = scope19;
        functionNode0.addChildScope(scope19);
        boolean boolean22 = functionNode0.hasConsistentReturnUsage();
        java.util.Map<com.google.javascript.rhino.head.Node, int[]> nodeMap23 = functionNode0.getLiveLocals();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode25 = new com.google.javascript.rhino.head.ast.FunctionNode((int) (byte) 100);
        int int26 = functionNode25.getEncodedSourceStart();
        functionNode0.addResumptionPoint((com.google.javascript.rhino.head.Node) functionNode25);
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap28 = functionNode0.getSymbolTable();
        functionNode0.setSourceName("129");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-1) + "'", int1 == (-1));
        org.junit.Assert.assertNotNull(scriptNode2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNull(scopeList15);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str17, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNull(nodeMap23);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNull(strMap28);
    }

    @Test
    public void test09567() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09567");
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope(15, (int) (byte) 0);
        com.google.javascript.rhino.head.ast.Symbol symbol4 = scope2.getSymbol("");
        com.google.javascript.rhino.head.ast.Name name6 = null;
        com.google.javascript.rhino.head.ast.FunctionNode functionNode7 = new com.google.javascript.rhino.head.ast.FunctionNode(1, name6);
        boolean boolean8 = functionNode7.isGetterOrSetter();
        int int9 = functionNode7.getEncodedSourceEnd();
        scope2.addChildrenToBack((com.google.javascript.rhino.head.Node) functionNode7);
        int int11 = functionNode7.getLength();
        functionNode7.setIsExpressionClosure(false);
        org.junit.Assert.assertNull(symbol4);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
    }

    @Test
    public void test09568() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09568");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode0 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int1 = functionNode0.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = functionNode0.getTop();
        boolean boolean3 = functionNode0.hasSideEffects();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList4 = functionNode0.getSymbols();
        functionNode0.setRp(5);
        com.google.javascript.rhino.head.ast.Scope scope7 = functionNode0.getEnclosingScope();
        boolean boolean8 = functionNode0.isExpressionClosure();
        com.google.javascript.rhino.head.ast.Name name9 = functionNode0.getFunctionName();
        functionNode0.setRp((int) 'a');
        functionNode0.setEncodedSourceStart(200442009);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-1) + "'", int1 == (-1));
        org.junit.Assert.assertNotNull(scriptNode2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(symbolList4);
        org.junit.Assert.assertNull(scope7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(name9);
    }

    @Test
    public void test09569() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09569");
        com.google.javascript.rhino.head.ast.Jump jump6 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump6.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump10 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump6, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode12 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int13 = scriptNode12.getEndLineno();
        int int14 = scriptNode12.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList15 = scriptNode12.getChildScopes();
        com.google.javascript.rhino.head.Node node16 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump6, (com.google.javascript.rhino.head.Node) scriptNode12);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList17 = scriptNode12.getChildScopes();
        com.google.javascript.rhino.head.ast.Jump jump18 = new com.google.javascript.rhino.head.ast.Jump(11, (com.google.javascript.rhino.head.Node) scriptNode12);
        com.google.javascript.rhino.head.Node node20 = new com.google.javascript.rhino.head.Node((int) (byte) -1, (com.google.javascript.rhino.head.Node) scriptNode12, 19);
        com.google.javascript.rhino.head.Node node21 = scriptNode12.getFirstChild();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode22 = scriptNode12.getTop();
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNull(scopeList15);
        org.junit.Assert.assertNull(scopeList17);
        org.junit.Assert.assertNull(node21);
        org.junit.Assert.assertNotNull(scriptNode22);
    }

    @Test
    public void test09570() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09570");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 10);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode2 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode3 = functionNode2.getTop();
        functionNode2.setParens((int) (byte) 1, (int) (short) 1);
        functionNode2.setEncodedSourceStart((-1));
        functionNode2.setFunctionIsGetter();
        scope1.addChildToFront((com.google.javascript.rhino.head.Node) functionNode2);
        functionNode2.setRp(19);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int15 = scriptNode14.getEndLineno();
        int int16 = scriptNode14.getBaseLineno();
        com.google.javascript.rhino.head.ast.Jump jump19 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode21 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int22 = scriptNode21.getEndLineno();
        int int23 = scriptNode21.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList24 = scriptNode21.getChildScopes();
        jump19.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode21);
        java.lang.String str26 = scriptNode21.debugPrint();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode14, (com.google.javascript.rhino.head.ast.Scope) scriptNode21);
        com.google.javascript.rhino.head.ast.Scope scope28 = new com.google.javascript.rhino.head.ast.Scope();
        scriptNode21.target = scope28;
        java.lang.String str30 = functionNode2.toStringTree(scriptNode21);
        java.lang.String str32 = scriptNode21.toSource((int) (short) 10);
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap33 = scriptNode21.getSymbolTable();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode34 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int35 = functionNode34.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode36 = functionNode34.getTop();
        com.google.javascript.rhino.head.ast.Name name37 = null;
        functionNode34.setFunctionName(name37);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode39 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode40 = functionNode39.getTop();
        functionNode34.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode39);
        int int42 = functionNode39.getRp();
        java.lang.Object obj43 = functionNode39.getCompilerData();
        boolean boolean44 = strMap33.containsKey(obj43);
        com.google.javascript.rhino.head.ast.Symbol symbol46 = new com.google.javascript.rhino.head.ast.Symbol();
        symbol46.setIndex(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode50 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int51 = scriptNode50.getEndLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode53 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int54 = scriptNode53.getEndLineno();
        scriptNode50.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode53);
        com.google.javascript.rhino.head.ast.Comment comment56 = null;
        scriptNode50.setJsDocNode(comment56);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList58 = scriptNode50.getSymbols();
        symbol46.setContainingTable((com.google.javascript.rhino.head.ast.Scope) scriptNode50);
        com.google.javascript.rhino.head.ast.Symbol symbol60 = strMap33.putIfAbsent("{\n}\n", symbol46);
        java.util.Collection<com.google.javascript.rhino.head.ast.Symbol> symbolCollection61 = strMap33.values();
        strMap33.clear();
        com.google.javascript.rhino.head.ast.Symbol symbol64 = new com.google.javascript.rhino.head.ast.Symbol();
        java.lang.String str65 = symbol64.getName();
        com.google.javascript.rhino.head.Node node66 = symbol64.getNode();
        symbol64.setIndex(1);
        symbol64.setName("-1\tSCRIPT -1 1\n");
        com.google.javascript.rhino.head.ast.Scope scope71 = symbol64.getContainingTable();
        java.lang.String str72 = symbol64.toString();
        com.google.javascript.rhino.head.ast.Symbol symbol73 = strMap33.putIfAbsent("                                                                {\n                                                                }\n", symbol64);
        int int74 = symbol64.getDeclType();
        org.junit.Assert.assertNotNull(scriptNode3);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNull(scopeList24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str26, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "                    {\n                    }\n" + "'", str32, "                    {\n                    }\n");
        org.junit.Assert.assertNotNull(strMap33);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertNotNull(scriptNode36);
        org.junit.Assert.assertNotNull(scriptNode40);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertNull(obj43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1));
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
        org.junit.Assert.assertNotNull(symbolList58);
        org.junit.Assert.assertNull(symbol60);
        org.junit.Assert.assertNotNull(symbolCollection61);
        org.junit.Assert.assertNull(str65);
        org.junit.Assert.assertNull(node66);
        org.junit.Assert.assertNull(scope71);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "Symbol (EOF) name=-1\tSCRIPT -1 1\n" + "'", str72, "Symbol (EOF) name=-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertNull(symbol73);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 0 + "'", int74 == 0);
    }

    @Test
    public void test09571() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09571");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode0 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int1 = functionNode0.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = functionNode0.getTop();
        boolean boolean3 = functionNode0.hasSideEffects();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList4 = functionNode0.getSymbols();
        functionNode0.setRp(5);
        com.google.javascript.rhino.head.ast.Jump jump8 = new com.google.javascript.rhino.head.ast.Jump((int) (short) 0);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode9 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int10 = functionNode9.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = functionNode9.getTop();
        com.google.javascript.rhino.head.ast.Name name12 = null;
        functionNode9.setFunctionName(name12);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode14 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode15 = functionNode14.getTop();
        functionNode9.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode14);
        functionNode14.setIsExpressionClosure(true);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode20 = new com.google.javascript.rhino.head.ast.FunctionNode((int) (byte) 100);
        int int21 = functionNode14.addFunction(functionNode20);
        int int22 = jump8.compareTo((com.google.javascript.rhino.head.ast.AstNode) functionNode20);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode24 = new com.google.javascript.rhino.head.ast.FunctionNode(0);
        com.google.javascript.rhino.head.ast.Jump jump30 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump30.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump34 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump30, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode36 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int37 = scriptNode36.getEndLineno();
        int int38 = scriptNode36.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList39 = scriptNode36.getChildScopes();
        com.google.javascript.rhino.head.Node node40 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump30, (com.google.javascript.rhino.head.Node) scriptNode36);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList41 = scriptNode36.getFunctions();
        functionNodeList41.clear();
        com.google.javascript.rhino.head.ast.Jump jump47 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump47.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump51 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump47, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode53 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int54 = scriptNode53.getEndLineno();
        int int55 = scriptNode53.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList56 = scriptNode53.getChildScopes();
        com.google.javascript.rhino.head.Node node57 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump47, (com.google.javascript.rhino.head.Node) scriptNode53);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList58 = scriptNode53.getFunctions();
        boolean boolean59 = functionNodeList41.removeAll((java.util.Collection<com.google.javascript.rhino.head.ast.FunctionNode>) functionNodeList58);
        functionNode24.putProp(20, (java.lang.Object) functionNodeList41);
        int int61 = functionNode20.addFunction(functionNode24);
        boolean boolean62 = functionNode24.isGenerator();
        int int63 = functionNode0.addFunction(functionNode24);
        functionNode0.setBaseLineno(10);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode66 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode67 = functionNode66.getTop();
        functionNode66.setParens((int) (byte) 1, (int) (short) 1);
        functionNode66.setEncodedSourceStart((-1));
        functionNode66.setIsGenerator();
        com.google.javascript.rhino.head.ast.Name name74 = functionNode66.getFunctionName();
        com.google.javascript.rhino.head.Node node75 = null;
        functionNode0.addChildBefore((com.google.javascript.rhino.head.Node) functionNode66, node75);
        functionNode66.setBounds((-817814412), (int) (byte) 100);
        // The following exception was thrown during execution in test generation
        try {
            functionNode66.labelId(10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-1) + "'", int1 == (-1));
        org.junit.Assert.assertNotNull(scriptNode2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(symbolList4);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(scriptNode11);
        org.junit.Assert.assertNotNull(scriptNode15);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNull(scopeList39);
        org.junit.Assert.assertNotNull(functionNodeList41);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1));
        org.junit.Assert.assertNull(scopeList56);
        org.junit.Assert.assertNotNull(functionNodeList58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 0 + "'", int61 == 0);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 0 + "'", int63 == 0);
        org.junit.Assert.assertNotNull(scriptNode67);
        org.junit.Assert.assertNull(name74);
    }

    @Test
    public void test09572() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09572");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode0 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int1 = functionNode0.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = functionNode0.getTop();
        boolean boolean3 = functionNode0.hasSideEffects();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList4 = functionNode0.getSymbols();
        int int5 = functionNode0.getLength();
        boolean boolean6 = functionNode0.isGetterOrSetter();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode7 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int8 = functionNode7.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        java.lang.String str11 = functionNode7.toStringTree(scriptNode10);
        functionNode7.setFunctionIsGetter();
        com.google.javascript.rhino.head.ast.AstNode astNode13 = functionNode7.getBody();
        functionNode7.setParens(21, (int) '#');
        int int17 = functionNode7.getLp();
        com.google.javascript.rhino.head.ast.Jump jump22 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump22.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump26 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump22, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode28 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int29 = scriptNode28.getEndLineno();
        int int30 = scriptNode28.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList31 = scriptNode28.getChildScopes();
        com.google.javascript.rhino.head.Node node32 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump22, (com.google.javascript.rhino.head.Node) scriptNode28);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList33 = scriptNode28.getChildScopes();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList34 = scriptNode28.getSymbols();
        functionNode7.setSymbols(symbolList34);
        com.google.javascript.rhino.head.ast.AstNode astNode36 = functionNode7.getBody();
        com.google.javascript.rhino.head.ast.RegExpLiteral regExpLiteral39 = new com.google.javascript.rhino.head.ast.RegExpLiteral((int) '#');
        java.lang.String str40 = regExpLiteral39.shortName();
        regExpLiteral39.setFlags("-1\tBLOCK -1 1\n");
        functionNode7.putProp((int) (byte) -1, (java.lang.Object) "-1\tBLOCK -1 1\n");
        functionNode7.setEncodedSourceStart(0);
        functionNode0.setCompilerData((java.lang.Object) 0);
        com.google.javascript.rhino.head.ast.Name name48 = null;
        com.google.javascript.rhino.head.ast.FunctionNode functionNode49 = new com.google.javascript.rhino.head.ast.FunctionNode(200442009, name48);
        // The following exception was thrown during execution in test generation
        try {
            int int50 = functionNode0.getIndexForNameNode((com.google.javascript.rhino.head.Node) name48);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-1) + "'", int1 == (-1));
        org.junit.Assert.assertNotNull(scriptNode2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(symbolList4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(astNode13);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 21 + "'", int17 == 21);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertNull(scopeList31);
        org.junit.Assert.assertNull(scopeList33);
        org.junit.Assert.assertNotNull(symbolList34);
        org.junit.Assert.assertNull(astNode36);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "RegExpLiteral" + "'", str40, "RegExpLiteral");
    }

    @Test
    public void test09573() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09573");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int2 = scriptNode1.getEndLineno();
        int int3 = scriptNode1.getBaseLineno();
        com.google.javascript.rhino.head.ast.Jump jump6 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode8 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int9 = scriptNode8.getEndLineno();
        int int10 = scriptNode8.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList11 = scriptNode8.getChildScopes();
        jump6.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode8);
        java.lang.String str13 = scriptNode8.debugPrint();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode1, (com.google.javascript.rhino.head.ast.Scope) scriptNode8);
        com.google.javascript.rhino.head.ast.AstNode astNode15 = scriptNode1.getParent();
        int int16 = scriptNode1.getType();
        com.google.javascript.rhino.head.ast.Symbol symbol18 = scriptNode1.getSymbol("109");
        int int19 = scriptNode1.getType();
        com.google.javascript.rhino.head.Node node23 = com.google.javascript.rhino.head.Node.newString((-1110578805), "                                                                      /null/-1\tSCRIPT -1 1\n");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode24 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int25 = functionNode24.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode26 = functionNode24.getTop();
        com.google.javascript.rhino.head.ast.Name name27 = null;
        functionNode24.setFunctionName(name27);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode29 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.Scope scope31 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 10);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode32 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode33 = functionNode32.getTop();
        functionNode32.setParens((int) (byte) 1, (int) (short) 1);
        functionNode32.setEncodedSourceStart((-1));
        functionNode32.setFunctionIsGetter();
        scope31.addChildToFront((com.google.javascript.rhino.head.Node) functionNode32);
        functionNode29.setBody((com.google.javascript.rhino.head.ast.AstNode) functionNode32);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode42 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode43 = functionNode42.getTop();
        functionNode42.setParens((int) (byte) 1, (int) (short) 1);
        functionNode42.setEncodedSourceStart((-1));
        java.util.List<com.google.javascript.rhino.head.Node> nodeList49 = functionNode42.getResumptionPoints();
        int int50 = functionNode42.getLp();
        functionNode29.setBody((com.google.javascript.rhino.head.ast.AstNode) functionNode42);
        functionNode24.addParam((com.google.javascript.rhino.head.ast.AstNode) functionNode42);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode53 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int54 = functionNode53.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode55 = functionNode53.getTop();
        com.google.javascript.rhino.head.ast.Name name56 = null;
        functionNode53.setFunctionName(name56);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode58 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode59 = functionNode58.getTop();
        functionNode53.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode58);
        int int61 = functionNode58.getRp();
        int int62 = functionNode58.getFunctionType();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) functionNode42, (com.google.javascript.rhino.head.ast.Scope) functionNode58);
        com.google.javascript.rhino.head.Node node64 = functionNode42.getLastSibling();
        com.google.javascript.rhino.head.Node node65 = new com.google.javascript.rhino.head.Node((int) (short) 100, node23, (com.google.javascript.rhino.head.Node) functionNode42);
        scriptNode1.addChildrenToBack(node65);
        com.google.javascript.rhino.head.ast.Scope scope68 = scriptNode1.getDefiningScope("                                      109");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNull(scopeList11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str13, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertNull(astNode15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 136 + "'", int16 == 136);
        org.junit.Assert.assertNull(symbol18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 136 + "'", int19 == 136);
        org.junit.Assert.assertNotNull(node23);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNotNull(scriptNode26);
        org.junit.Assert.assertNotNull(scriptNode33);
        org.junit.Assert.assertNotNull(scriptNode43);
        org.junit.Assert.assertNull(nodeList49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 1 + "'", int50 == 1);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
        org.junit.Assert.assertNotNull(scriptNode55);
        org.junit.Assert.assertNotNull(scriptNode59);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + (-1) + "'", int61 == (-1));
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 0 + "'", int62 == 0);
        org.junit.Assert.assertNotNull(node64);
        org.junit.Assert.assertNull(scope68);
    }

    @Test
    public void test09574() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09574");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode1 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int2 = functionNode1.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode3 = functionNode1.getTop();
        boolean boolean4 = functionNode1.hasSideEffects();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int7 = scriptNode6.getEndLineno();
        int int8 = scriptNode6.getBaseLineno();
        com.google.javascript.rhino.head.ast.Jump jump11 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode13 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int14 = scriptNode13.getEndLineno();
        int int15 = scriptNode13.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList16 = scriptNode13.getChildScopes();
        jump11.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode13);
        java.lang.String str18 = scriptNode13.debugPrint();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode6, (com.google.javascript.rhino.head.ast.Scope) scriptNode13);
        com.google.javascript.rhino.head.ast.Scope scope20 = new com.google.javascript.rhino.head.ast.Scope();
        scriptNode13.target = scope20;
        functionNode1.addChildScope(scope20);
        boolean boolean23 = functionNode1.hasConsistentReturnUsage();
        java.lang.String str24 = functionNode1.getNextTempName();
        com.google.javascript.rhino.head.ast.Jump jump25 = new com.google.javascript.rhino.head.ast.Jump((int) (short) -1, (com.google.javascript.rhino.head.Node) functionNode1);
        boolean boolean26 = functionNode1.isExpressionClosure();
        functionNode1.putIntProp(1, 0);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode30 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int31 = functionNode30.getLp();
        functionNode30.setEncodedSource("");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode34 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int35 = functionNode34.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode36 = functionNode34.getTop();
        com.google.javascript.rhino.head.ast.Name name37 = null;
        functionNode34.setFunctionName(name37);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode39 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode40 = functionNode39.getTop();
        functionNode34.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode39);
        int int42 = functionNode39.getRp();
        int int43 = functionNode39.getFunctionType();
        functionNode30.addParam((com.google.javascript.rhino.head.ast.AstNode) functionNode39);
        com.google.javascript.rhino.head.ast.Scope scope45 = functionNode39.getEnclosingScope();
        com.google.javascript.rhino.head.ast.AstNode astNode46 = scope45.getParent();
        com.google.javascript.rhino.head.Node node47 = scope45.getLastSibling();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode48 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int49 = functionNode48.getLp();
        functionNode48.setIsExpressionClosure(false);
        int int52 = functionNode48.getLineno();
        functionNode1.addChildAfter(node47, (com.google.javascript.rhino.head.Node) functionNode48);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode54 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int55 = functionNode54.getLp();
        functionNode54.setLineno(0);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode58 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int59 = functionNode58.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode60 = functionNode58.getTop();
        boolean boolean61 = functionNode58.hasSideEffects();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList62 = functionNode58.getSymbols();
        functionNode58.setRp(5);
        com.google.javascript.rhino.head.ast.Scope scope65 = functionNode58.getEnclosingScope();
        functionNode58.setLineno(5);
        functionNode54.setMemberExprNode((com.google.javascript.rhino.head.ast.AstNode) functionNode58);
        functionNode48.replaceWith((com.google.javascript.rhino.head.ast.Scope) functionNode54);
        int int70 = functionNode48.getFunctionType();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertNotNull(scriptNode3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNull(scopeList16);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str18, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "$0" + "'", str24, "$0");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertNotNull(scriptNode36);
        org.junit.Assert.assertNotNull(scriptNode40);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertNotNull(scope45);
        org.junit.Assert.assertNull(astNode46);
        org.junit.Assert.assertNotNull(node47);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1));
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-1) + "'", int59 == (-1));
        org.junit.Assert.assertNotNull(scriptNode60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(symbolList62);
        org.junit.Assert.assertNull(scope65);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 0 + "'", int70 == 0);
    }

    @Test
    public void test09575() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09575");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode0 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int1 = functionNode0.getLp();
        functionNode0.setIsExpressionClosure(false);
        com.google.javascript.rhino.head.ast.Scope scope4 = functionNode0.getParentScope();
        int int5 = functionNode0.getFunctionType();
        functionNode0.removeChildren();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode7 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode8 = functionNode7.getTop();
        com.google.javascript.rhino.head.ast.Name name9 = null;
        functionNode7.setFunctionName(name9);
        int int11 = functionNode7.getLength();
        com.google.javascript.rhino.head.ast.Scope scope14 = new com.google.javascript.rhino.head.ast.Scope((int) '4');
        functionNode7.putProp(6, (java.lang.Object) scope14);
        functionNode7.setEncodedSourceStart(9);
        com.google.javascript.rhino.head.ast.Scope scope18 = functionNode7.getParentScope();
        functionNode0.replaceWith((com.google.javascript.rhino.head.ast.Scope) functionNode7);
        com.google.javascript.rhino.head.ast.Name name21 = null;
        com.google.javascript.rhino.head.ast.FunctionNode functionNode22 = new com.google.javascript.rhino.head.ast.FunctionNode(4, name21);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode24 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode25 = functionNode24.getTop();
        functionNode24.setParens((int) (byte) 1, (int) (short) 1);
        int int29 = functionNode24.getRp();
        com.google.javascript.rhino.head.Node node32 = com.google.javascript.rhino.head.Node.newString((int) (byte) 100, "");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode33 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int34 = functionNode33.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode36 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        java.lang.String str37 = functionNode33.toStringTree(scriptNode36);
        com.google.javascript.rhino.head.ast.Scope scope39 = scriptNode36.getDefiningScope("");
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList40 = scriptNode36.getSymbols();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode42 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int43 = scriptNode42.getEndLineno();
        int int44 = scriptNode42.getBaseLineno();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode36, (com.google.javascript.rhino.head.ast.Scope) scriptNode42);
        java.lang.String str46 = scriptNode42.getEncodedSource();
        com.google.javascript.rhino.head.Node node48 = new com.google.javascript.rhino.head.Node(136, (com.google.javascript.rhino.head.Node) functionNode24, node32, (com.google.javascript.rhino.head.Node) scriptNode42, (int) (short) 0);
        functionNode22.setTop(scriptNode42);
        functionNode22.setBounds(48, 11);
        int int53 = functionNode7.addFunction(functionNode22);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-1) + "'", int1 == (-1));
        org.junit.Assert.assertNull(scope4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(scriptNode8);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertNull(scope18);
        org.junit.Assert.assertNotNull(scriptNode25);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1 + "'", int29 == 1);
        org.junit.Assert.assertNotNull(node32);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNull(scope39);
        org.junit.Assert.assertNotNull(symbolList40);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
    }

    @Test
    public void test09576() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09576");
        com.google.javascript.rhino.head.ast.Symbol symbol0 = new com.google.javascript.rhino.head.ast.Symbol();
        com.google.javascript.rhino.head.Node node1 = symbol0.getNode();
        com.google.javascript.rhino.head.Node node2 = symbol0.getNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode4 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int5 = scriptNode4.getEndLineno();
        int int6 = scriptNode4.getBaseLineno();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode7 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int8 = functionNode7.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        java.lang.String str11 = functionNode7.toStringTree(scriptNode10);
        functionNode7.setFunctionIsGetter();
        com.google.javascript.rhino.head.ast.AstNode astNode13 = functionNode7.getBody();
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList14 = functionNode7.getParams();
        scriptNode4.replaceWith((com.google.javascript.rhino.head.ast.Scope) functionNode7);
        symbol0.setNode((com.google.javascript.rhino.head.Node) functionNode7);
        java.lang.String str17 = symbol0.getName();
        com.google.javascript.rhino.head.ast.Scope scope18 = symbol0.getContainingTable();
        com.google.javascript.rhino.head.Node node19 = symbol0.getNode();
        symbol0.setIndex(3);
        org.junit.Assert.assertNull(node1);
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(astNode13);
        org.junit.Assert.assertNotNull(astNodeList14);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(scope18);
        org.junit.Assert.assertNotNull(node19);
    }

    @Test
    public void test09577() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09577");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode0 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 10);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode3 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode4 = functionNode3.getTop();
        functionNode3.setParens((int) (byte) 1, (int) (short) 1);
        functionNode3.setEncodedSourceStart((-1));
        functionNode3.setFunctionIsGetter();
        scope2.addChildToFront((com.google.javascript.rhino.head.Node) functionNode3);
        functionNode0.setBody((com.google.javascript.rhino.head.ast.AstNode) functionNode3);
        com.google.javascript.rhino.head.Token.CommentType commentType15 = com.google.javascript.rhino.head.Token.CommentType.HTML;
        com.google.javascript.rhino.head.ast.Comment comment17 = new com.google.javascript.rhino.head.ast.Comment(20, 1, commentType15, "109");
        java.lang.String str19 = comment17.toSource(19);
        java.lang.String str20 = comment17.getValue();
        java.lang.String str22 = comment17.toSource(2);
        boolean boolean23 = comment17.hasSideEffects();
        com.google.javascript.rhino.head.Token.CommentType commentType24 = com.google.javascript.rhino.head.Token.CommentType.JSDOC;
        comment17.setCommentType(commentType24);
        com.google.javascript.rhino.head.Token.CommentType commentType26 = comment17.getCommentType();
        functionNode0.setJsDocNode(comment17);
        int int28 = functionNode0.getEncodedSourceEnd();
        org.junit.Assert.assertNotNull(scriptNode4);
        org.junit.Assert.assertTrue("'" + commentType15 + "' != '" + com.google.javascript.rhino.head.Token.CommentType.HTML + "'", commentType15.equals(com.google.javascript.rhino.head.Token.CommentType.HTML));
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "                                      109" + "'", str19, "                                      109");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "109" + "'", str20, "109");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "    109" + "'", str22, "    109");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + commentType24 + "' != '" + com.google.javascript.rhino.head.Token.CommentType.JSDOC + "'", commentType24.equals(com.google.javascript.rhino.head.Token.CommentType.JSDOC));
        org.junit.Assert.assertTrue("'" + commentType26 + "' != '" + com.google.javascript.rhino.head.Token.CommentType.JSDOC + "'", commentType26.equals(com.google.javascript.rhino.head.Token.CommentType.JSDOC));
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
    }

    @Test
    public void test09578() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09578");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode1 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int2 = functionNode1.getLp();
        functionNode1.setEncodedSource("");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode5 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int6 = functionNode5.getLp();
        functionNode5.setEncodedSource("");
        functionNode5.flattenSymbolTable(false);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode11 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int12 = functionNode11.getLp();
        com.google.javascript.rhino.head.Node node14 = new com.google.javascript.rhino.head.Node((-1), (com.google.javascript.rhino.head.Node) functionNode1, (com.google.javascript.rhino.head.Node) functionNode5, (com.google.javascript.rhino.head.Node) functionNode11, (int) '#');
        boolean boolean15 = functionNode11.isGenerator();
        int int16 = functionNode11.getFunctionType();
        com.google.javascript.rhino.head.Node node17 = functionNode11.getNext();
        functionNode11.setBounds(2, 17);
        com.google.javascript.rhino.head.ast.Jump jump27 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump27.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump31 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump27, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode33 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int34 = scriptNode33.getEndLineno();
        int int35 = scriptNode33.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList36 = scriptNode33.getChildScopes();
        com.google.javascript.rhino.head.Node node37 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump27, (com.google.javascript.rhino.head.Node) scriptNode33);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList38 = scriptNode33.getFunctions();
        int int39 = scriptNode33.getPosition();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList40 = scriptNode33.getChildScopes();
        int int41 = scriptNode33.getEncodedSourceEnd();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList42 = scriptNode33.getSymbols();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode43 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int44 = functionNode43.getLp();
        functionNode43.setEncodedSource("");
        functionNode43.flattenSymbolTable(false);
        com.google.javascript.rhino.head.ast.RegExpLiteral regExpLiteral50 = new com.google.javascript.rhino.head.ast.RegExpLiteral((int) (short) 1);
        java.lang.String str52 = regExpLiteral50.toSource((int) (byte) 10);
        regExpLiteral50.setFlags("-1\tSCRIPT -1 1\n");
        regExpLiteral50.removeProp(8);
        java.lang.String str57 = regExpLiteral50.getValue();
        com.google.javascript.rhino.head.Node node58 = new com.google.javascript.rhino.head.Node(7, (com.google.javascript.rhino.head.Node) scriptNode33, (com.google.javascript.rhino.head.Node) functionNode43, (com.google.javascript.rhino.head.Node) regExpLiteral50);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode59 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode60 = functionNode59.getTop();
        functionNode59.setParens((int) (byte) 1, (int) (short) 1);
        functionNode59.setEncodedSourceStart((-1));
        java.util.List<com.google.javascript.rhino.head.Node> nodeList66 = functionNode59.getResumptionPoints();
        com.google.javascript.rhino.head.ast.Scope scope68 = functionNode59.getDefiningScope("hi!");
        boolean boolean69 = functionNode59.isGetterOrSetter();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode70 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int71 = functionNode70.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode72 = functionNode70.getTop();
        com.google.javascript.rhino.head.ast.Name name73 = null;
        functionNode70.setFunctionName(name73);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode75 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode76 = functionNode75.getTop();
        functionNode70.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode75);
        int int78 = functionNode75.getRp();
        int int79 = functionNode75.getFunctionType();
        int int80 = functionNode59.addFunction(functionNode75);
        com.google.javascript.rhino.head.Node node82 = new com.google.javascript.rhino.head.Node((int) (byte) 100, (com.google.javascript.rhino.head.Node) regExpLiteral50, (com.google.javascript.rhino.head.Node) functionNode75, 0);
        functionNode11.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode75);
        functionNode75.setEncodedSourceStart((-1336829251));
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNull(node17);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertNull(scopeList36);
        org.junit.Assert.assertNotNull(functionNodeList38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertNull(scopeList40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertNotNull(symbolList42);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "                    /null/" + "'", str52, "                    /null/");
        org.junit.Assert.assertNull(str57);
        org.junit.Assert.assertNotNull(scriptNode60);
        org.junit.Assert.assertNull(nodeList66);
        org.junit.Assert.assertNull(scope68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + (-1) + "'", int71 == (-1));
        org.junit.Assert.assertNotNull(scriptNode72);
        org.junit.Assert.assertNotNull(scriptNode76);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + (-1) + "'", int78 == (-1));
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 0 + "'", int79 == 0);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 0 + "'", int80 == 0);
    }

    @Test
    public void test09579() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09579");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str1 = com.google.javascript.rhino.head.ast.AstNode.operatorToString(394394084);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid operator: 394394084");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test09580() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09580");
        com.google.javascript.rhino.head.Node node2 = new com.google.javascript.rhino.head.Node((int) (short) 100, 394394084);
        com.google.javascript.rhino.head.ast.Name name4 = null;
        com.google.javascript.rhino.head.ast.FunctionNode functionNode5 = new com.google.javascript.rhino.head.ast.FunctionNode(1, name4);
        boolean boolean6 = functionNode5.isGetterOrSetter();
        int int7 = functionNode5.getEncodedSourceEnd();
        boolean boolean8 = functionNode5.requiresActivation();
        int int9 = functionNode5.getRegexpCount();
        int int10 = functionNode5.getLineno();
        node2.addChildrenToBack((com.google.javascript.rhino.head.Node) functionNode5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
    }

    @Test
    public void test09581() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09581");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode0 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = functionNode0.getTop();
        int int2 = functionNode0.getRegexpCount();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode3 = functionNode0.getEnclosingFunction();
        // The following exception was thrown during execution in test generation
        try {
            int int6 = functionNode3.getIntProp((-261574003), (-18));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(scriptNode1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNull(functionNode3);
    }

    @Test
    public void test09582() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09582");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode0 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = functionNode0.getTop();
        functionNode0.setParens((int) (byte) 1, (int) (short) 1);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode5 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.Scope scope7 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 10);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode8 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode9 = functionNode8.getTop();
        functionNode8.setParens((int) (byte) 1, (int) (short) 1);
        functionNode8.setEncodedSourceStart((-1));
        functionNode8.setFunctionIsGetter();
        scope7.addChildToFront((com.google.javascript.rhino.head.Node) functionNode8);
        functionNode5.setBody((com.google.javascript.rhino.head.ast.AstNode) functionNode8);
        functionNode5.setFunctionIsSetter();
        int int19 = functionNode0.addFunction(functionNode5);
        java.lang.String str20 = functionNode0.getNextTempName();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode22 = new com.google.javascript.rhino.head.ast.FunctionNode(0);
        int int23 = functionNode22.getBaseLineno();
        functionNode22.setSourceName("                                                                                                                                                                                                        /null/");
        functionNode22.setRequiresActivation();
        functionNode0.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode22);
        com.google.javascript.rhino.head.ast.Jump jump32 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump32.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump36 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump32, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode38 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int39 = scriptNode38.getEndLineno();
        int int40 = scriptNode38.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList41 = scriptNode38.getChildScopes();
        com.google.javascript.rhino.head.Node node42 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump32, (com.google.javascript.rhino.head.Node) scriptNode38);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList43 = scriptNode38.getFunctions();
        functionNodeList43.clear();
        functionNodeList43.clear();
        java.util.Iterator<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeItor46 = functionNodeList43.iterator();
        com.google.javascript.rhino.head.ast.RegExpLiteral regExpLiteral48 = new com.google.javascript.rhino.head.ast.RegExpLiteral((int) (short) 1);
        java.lang.String str50 = regExpLiteral48.toSource((int) (byte) 10);
        regExpLiteral48.setFlags("-1\tSCRIPT -1 1\n");
        regExpLiteral48.removeProp(8);
        java.lang.String str55 = regExpLiteral48.getValue();
        regExpLiteral48.setLineno(10);
        regExpLiteral48.removeChildren();
        boolean boolean59 = functionNodeList43.equals((java.lang.Object) regExpLiteral48);
        functionNode22.addRegExp(regExpLiteral48);
        regExpLiteral48.setValue("                                            /null/");
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor63 = null;
        // The following exception was thrown during execution in test generation
        try {
            regExpLiteral48.visit(nodeVisitor63);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(scriptNode1);
        org.junit.Assert.assertNotNull(scriptNode9);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "$0" + "'", str20, "$0");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertNull(scopeList41);
        org.junit.Assert.assertNotNull(functionNodeList43);
        org.junit.Assert.assertNotNull(functionNodeItor46);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "                    /null/" + "'", str50, "                    /null/");
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
    }

    @Test
    public void test09583() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09583");
        com.google.javascript.rhino.head.Node node2 = new com.google.javascript.rhino.head.Node(84791990, 232081650);
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator3 = node2.new NodeIterator();
    }

    @Test
    public void test09584() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09584");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode0 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int1 = functionNode0.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = functionNode0.getTop();
        com.google.javascript.rhino.head.ast.Name name3 = null;
        functionNode0.setFunctionName(name3);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode5 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = functionNode5.getTop();
        functionNode0.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode5);
        com.google.javascript.rhino.head.ast.Scope scope10 = new com.google.javascript.rhino.head.ast.Scope((int) (short) -1, 0);
        functionNode0.replaceWith(scope10);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode14 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int15 = functionNode14.getLp();
        functionNode14.setEncodedSource("");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode18 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int19 = functionNode18.getLp();
        functionNode18.setEncodedSource("");
        functionNode18.flattenSymbolTable(false);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode24 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int25 = functionNode24.getLp();
        com.google.javascript.rhino.head.Node node27 = new com.google.javascript.rhino.head.Node((-1), (com.google.javascript.rhino.head.Node) functionNode14, (com.google.javascript.rhino.head.Node) functionNode18, (com.google.javascript.rhino.head.Node) functionNode24, (int) '#');
        com.google.javascript.rhino.head.ast.Comment comment28 = functionNode24.getJsDocNode();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode29 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.Scope scope31 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 10);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode32 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode33 = functionNode32.getTop();
        functionNode32.setParens((int) (byte) 1, (int) (short) 1);
        functionNode32.setEncodedSourceStart((-1));
        functionNode32.setFunctionIsGetter();
        scope31.addChildToFront((com.google.javascript.rhino.head.Node) functionNode32);
        functionNode29.setBody((com.google.javascript.rhino.head.ast.AstNode) functionNode32);
        boolean boolean42 = functionNode24.isParam((com.google.javascript.rhino.head.ast.AstNode) functionNode29);
        int int43 = functionNode24.getFunctionCount();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode44 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int45 = functionNode44.getLp();
        functionNode44.setEncodedSource("");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode48 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int49 = functionNode48.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode50 = functionNode48.getTop();
        com.google.javascript.rhino.head.ast.Name name51 = null;
        functionNode48.setFunctionName(name51);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode53 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode54 = functionNode53.getTop();
        functionNode48.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode53);
        int int56 = functionNode53.getRp();
        int int57 = functionNode53.getFunctionType();
        functionNode44.addParam((com.google.javascript.rhino.head.ast.AstNode) functionNode53);
        com.google.javascript.rhino.head.Node node59 = functionNode44.getLastSibling();
        com.google.javascript.rhino.head.Node node60 = new com.google.javascript.rhino.head.Node((int) (byte) 10, (com.google.javascript.rhino.head.Node) functionNode24, (com.google.javascript.rhino.head.Node) functionNode44);
        functionNode0.addResumptionPoint((com.google.javascript.rhino.head.Node) functionNode24);
        functionNode24.setBounds((int) '4', 19);
        int int65 = functionNode24.depth();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-1) + "'", int1 == (-1));
        org.junit.Assert.assertNotNull(scriptNode2);
        org.junit.Assert.assertNotNull(scriptNode6);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNull(comment28);
        org.junit.Assert.assertNotNull(scriptNode33);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertNotNull(scriptNode50);
        org.junit.Assert.assertNotNull(scriptNode54);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1));
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 0 + "'", int57 == 0);
        org.junit.Assert.assertNotNull(node59);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 0 + "'", int65 == 0);
    }

    @Test
    public void test09585() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09585");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode0 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int1 = functionNode0.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = functionNode0.getTop();
        com.google.javascript.rhino.head.ast.AstNode astNode3 = functionNode0.getBody();
        com.google.javascript.rhino.head.ast.Jump jump9 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump9.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump13 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump9, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode15 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int16 = scriptNode15.getEndLineno();
        int int17 = scriptNode15.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList18 = scriptNode15.getChildScopes();
        com.google.javascript.rhino.head.Node node19 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump9, (com.google.javascript.rhino.head.Node) scriptNode15);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList20 = scriptNode15.getChildScopes();
        com.google.javascript.rhino.head.ast.Jump jump21 = new com.google.javascript.rhino.head.ast.Jump(11, (com.google.javascript.rhino.head.Node) scriptNode15);
        functionNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) scriptNode15);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList23 = functionNode0.getFunctions();
        boolean boolean24 = functionNode0.isGetterOrSetter();
        int int25 = functionNode0.getLineno();
        com.google.javascript.rhino.head.ast.Jump jump31 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump31.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump35 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump31, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode37 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int38 = scriptNode37.getEndLineno();
        int int39 = scriptNode37.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList40 = scriptNode37.getChildScopes();
        com.google.javascript.rhino.head.Node node41 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump31, (com.google.javascript.rhino.head.Node) scriptNode37);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList42 = scriptNode37.getFunctions();
        int int43 = scriptNode37.getPosition();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList44 = scriptNode37.getChildScopes();
        int int45 = scriptNode37.getEncodedSourceEnd();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList46 = scriptNode37.getSymbols();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode47 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int48 = functionNode47.getLp();
        functionNode47.setEncodedSource("");
        functionNode47.flattenSymbolTable(false);
        com.google.javascript.rhino.head.ast.RegExpLiteral regExpLiteral54 = new com.google.javascript.rhino.head.ast.RegExpLiteral((int) (short) 1);
        java.lang.String str56 = regExpLiteral54.toSource((int) (byte) 10);
        regExpLiteral54.setFlags("-1\tSCRIPT -1 1\n");
        regExpLiteral54.removeProp(8);
        java.lang.String str61 = regExpLiteral54.getValue();
        com.google.javascript.rhino.head.Node node62 = new com.google.javascript.rhino.head.Node(7, (com.google.javascript.rhino.head.Node) scriptNode37, (com.google.javascript.rhino.head.Node) functionNode47, (com.google.javascript.rhino.head.Node) regExpLiteral54);
        java.lang.String str63 = regExpLiteral54.getFlags();
        com.google.javascript.rhino.head.Token.CommentType commentType69 = com.google.javascript.rhino.head.Token.CommentType.HTML;
        com.google.javascript.rhino.head.ast.Comment comment71 = new com.google.javascript.rhino.head.ast.Comment(20, 1, commentType69, "109");
        java.lang.String str73 = comment71.toSource(19);
        java.lang.String str74 = comment71.getValue();
        java.lang.String str75 = comment71.getValue();
        com.google.javascript.rhino.head.Token.CommentType commentType76 = com.google.javascript.rhino.head.Token.CommentType.LINE;
        comment71.setCommentType(commentType76);
        com.google.javascript.rhino.head.ast.Comment comment79 = new com.google.javascript.rhino.head.ast.Comment(1, 1, commentType76, "                    /null/");
        java.lang.String str80 = comment79.getValue();
        java.lang.String str82 = comment79.toSource(8);
        com.google.javascript.rhino.head.ast.Jump jump84 = new com.google.javascript.rhino.head.ast.Jump((int) (byte) 100, (com.google.javascript.rhino.head.Node) comment79, (int) (short) 10);
        java.lang.String str85 = comment79.getValue();
        java.lang.String str86 = comment79.getValue();
        com.google.javascript.rhino.head.Token.CommentType commentType87 = comment79.getCommentType();
        java.lang.String str89 = comment79.makeIndent((int) (short) 100);
        int int90 = regExpLiteral54.compareTo((com.google.javascript.rhino.head.ast.AstNode) comment79);
        functionNode0.addChild((com.google.javascript.rhino.head.ast.AstNode) regExpLiteral54);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-1) + "'", int1 == (-1));
        org.junit.Assert.assertNotNull(scriptNode2);
        org.junit.Assert.assertNull(astNode3);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNull(scopeList18);
        org.junit.Assert.assertNull(scopeList20);
        org.junit.Assert.assertNotNull(functionNodeList23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertNull(scopeList40);
        org.junit.Assert.assertNotNull(functionNodeList42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertNull(scopeList44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
        org.junit.Assert.assertNotNull(symbolList46);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "                    /null/" + "'", str56, "                    /null/");
        org.junit.Assert.assertNull(str61);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str63, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertTrue("'" + commentType69 + "' != '" + com.google.javascript.rhino.head.Token.CommentType.HTML + "'", commentType69.equals(com.google.javascript.rhino.head.Token.CommentType.HTML));
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "                                      109" + "'", str73, "                                      109");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "109" + "'", str74, "109");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "109" + "'", str75, "109");
        org.junit.Assert.assertTrue("'" + commentType76 + "' != '" + com.google.javascript.rhino.head.Token.CommentType.LINE + "'", commentType76.equals(com.google.javascript.rhino.head.Token.CommentType.LINE));
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "                    /null/" + "'", str80, "                    /null/");
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "                                    /null/" + "'", str82, "                                    /null/");
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "                    /null/" + "'", str85, "                    /null/");
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "                    /null/" + "'", str86, "                    /null/");
        org.junit.Assert.assertTrue("'" + commentType87 + "' != '" + com.google.javascript.rhino.head.Token.CommentType.LINE + "'", commentType87.equals(com.google.javascript.rhino.head.Token.CommentType.LINE));
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "                                                                                                                                                                                                        " + "'", str89, "                                                                                                                                                                                                        ");
// flaky:         org.junit.Assert.assertTrue("'" + int90 + "' != '" + (-822402397) + "'", int90 == (-822402397));
    }

    @Test
    public void test09586() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09586");
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope((-47132040), 1237778423);
    }

    @Test
    public void test09587() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09587");
        com.google.javascript.rhino.head.ast.Symbol symbol0 = new com.google.javascript.rhino.head.ast.Symbol();
        symbol0.setIndex(6);
        java.lang.String str3 = symbol0.getDeclTypeName();
        com.google.javascript.rhino.head.Node node4 = symbol0.getNode();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "EOF" + "'", str3, "EOF");
        org.junit.Assert.assertNull(node4);
    }

    @Test
    public void test09588() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09588");
        com.google.javascript.rhino.head.ast.RegExpLiteral regExpLiteral2 = new com.google.javascript.rhino.head.ast.RegExpLiteral(13, (int) (short) 1);
        com.google.javascript.rhino.head.Node node4 = regExpLiteral2.setType((-446577320));
        com.google.javascript.rhino.head.Node node5 = node4.getLastSibling();
        com.google.javascript.rhino.head.Node node8 = com.google.javascript.rhino.head.Node.newNumber((double) (-3285918));
        node5.putProp((-14761645), (java.lang.Object) node8);
        org.junit.Assert.assertNotNull(node4);
        org.junit.Assert.assertNotNull(node5);
        org.junit.Assert.assertNotNull(node8);
    }

    @Test
    public void test09589() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09589");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 10);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode2 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode3 = functionNode2.getTop();
        functionNode2.setParens((int) (byte) 1, (int) (short) 1);
        functionNode2.setEncodedSourceStart((-1));
        functionNode2.setFunctionIsGetter();
        scope1.addChildToFront((com.google.javascript.rhino.head.Node) functionNode2);
        functionNode2.setRp(19);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int15 = scriptNode14.getEndLineno();
        int int16 = scriptNode14.getBaseLineno();
        com.google.javascript.rhino.head.ast.Jump jump19 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode21 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int22 = scriptNode21.getEndLineno();
        int int23 = scriptNode21.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList24 = scriptNode21.getChildScopes();
        jump19.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode21);
        java.lang.String str26 = scriptNode21.debugPrint();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode14, (com.google.javascript.rhino.head.ast.Scope) scriptNode21);
        com.google.javascript.rhino.head.ast.Scope scope28 = new com.google.javascript.rhino.head.ast.Scope();
        scriptNode21.target = scope28;
        java.lang.String str30 = functionNode2.toStringTree(scriptNode21);
        java.lang.String str32 = scriptNode21.toSource((int) (short) 10);
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap33 = scriptNode21.getSymbolTable();
        int int34 = strMap33.size();
        com.google.javascript.rhino.head.ast.Jump jump39 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump39.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump43 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump39, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode45 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int46 = scriptNode45.getEndLineno();
        int int47 = scriptNode45.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList48 = scriptNode45.getChildScopes();
        com.google.javascript.rhino.head.Node node49 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump39, (com.google.javascript.rhino.head.Node) scriptNode45);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList50 = scriptNode45.getFunctions();
        functionNodeList50.clear();
        functionNodeList50.clear();
        com.google.javascript.rhino.head.ast.Jump jump57 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump57.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump61 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump57, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode63 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int64 = scriptNode63.getEndLineno();
        int int65 = scriptNode63.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList66 = scriptNode63.getChildScopes();
        com.google.javascript.rhino.head.Node node67 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump57, (com.google.javascript.rhino.head.Node) scriptNode63);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList68 = scriptNode63.getFunctions();
        java.util.Spliterator<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeSpliterator69 = functionNodeList68.spliterator();
        int int71 = functionNodeList68.indexOf((java.lang.Object) (byte) 10);
        boolean boolean72 = functionNodeList50.retainAll((java.util.Collection<com.google.javascript.rhino.head.ast.FunctionNode>) functionNodeList68);
        boolean boolean73 = strMap33.containsKey((java.lang.Object) functionNodeList50);
        strMap33.clear();
        com.google.javascript.rhino.head.ast.Symbol symbol76 = new com.google.javascript.rhino.head.ast.Symbol();
        com.google.javascript.rhino.head.Node node77 = symbol76.getNode();
        int int78 = symbol76.getDeclType();
        int int79 = symbol76.getDeclType();
        com.google.javascript.rhino.head.ast.Scope scope80 = symbol76.getContainingTable();
        com.google.javascript.rhino.head.ast.Symbol symbol81 = strMap33.putIfAbsent("Symbol (EOF) name=                    ", symbol76);
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.ast.Scope scope82 = symbol81.getContainingTable();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(scriptNode3);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNull(scopeList24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str26, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "                    {\n                    }\n" + "'", str32, "                    {\n                    }\n");
        org.junit.Assert.assertNotNull(strMap33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertNull(scopeList48);
        org.junit.Assert.assertNotNull(functionNodeList50);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + (-1) + "'", int64 == (-1));
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + (-1) + "'", int65 == (-1));
        org.junit.Assert.assertNull(scopeList66);
        org.junit.Assert.assertNotNull(functionNodeList68);
        org.junit.Assert.assertNotNull(functionNodeSpliterator69);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + (-1) + "'", int71 == (-1));
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNull(node77);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 0 + "'", int78 == 0);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 0 + "'", int79 == 0);
        org.junit.Assert.assertNull(scope80);
        org.junit.Assert.assertNull(symbol81);
    }

    @Test
    public void test09590() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09590");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode1 = new com.google.javascript.rhino.head.ast.FunctionNode((-1262414679));
        functionNode1.setSourceName("35");
    }

    @Test
    public void test09591() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09591");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode1 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int2 = functionNode1.getLp();
        functionNode1.setEncodedSource("");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode5 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int6 = functionNode5.getLp();
        functionNode5.setEncodedSource("");
        functionNode5.flattenSymbolTable(false);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode11 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int12 = functionNode11.getLp();
        com.google.javascript.rhino.head.Node node14 = new com.google.javascript.rhino.head.Node((-1), (com.google.javascript.rhino.head.Node) functionNode1, (com.google.javascript.rhino.head.Node) functionNode5, (com.google.javascript.rhino.head.Node) functionNode11, (int) '#');
        functionNode11.setEncodedSourceStart(25);
        boolean boolean17 = functionNode11.requiresActivation();
        java.lang.String str18 = functionNode11.getNextTempName();
        boolean boolean19 = functionNode11.hasChildren();
        boolean boolean20 = functionNode11.isGetter();
        int int21 = functionNode11.getEncodedSourceStart();
        int int22 = functionNode11.getParamCount();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "$0" + "'", str18, "$0");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 25 + "'", int21 == 25);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
    }

    @Test
    public void test09592() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09592");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode0 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int1 = functionNode0.getLp();
        functionNode0.setLineno(0);
        boolean boolean4 = functionNode0.requiresActivation();
        int int5 = functionNode0.getFunctionCount();
        functionNode0.setEncodedSourceStart((int) (byte) -1);
        com.google.javascript.rhino.head.ast.RegExpLiteral regExpLiteral9 = new com.google.javascript.rhino.head.ast.RegExpLiteral((int) (short) 1);
        regExpLiteral9.setFlags("-1\tSCRIPT -1 1\n");
        java.lang.String str12 = regExpLiteral9.getValue();
        int int13 = regExpLiteral9.getLineno();
        functionNode0.addRegExp(regExpLiteral9);
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor15 = null;
        // The following exception was thrown during execution in test generation
        try {
            regExpLiteral9.visit(nodeVisitor15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-1) + "'", int1 == (-1));
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
    }

    @Test
    public void test09593() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09593");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        // The following exception was thrown during execution in test generation
        try {
            scriptNode1.resetTargets();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
    }

    @Test
    public void test09594() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09594");
        com.google.javascript.rhino.head.Node node3 = com.google.javascript.rhino.head.Node.newString((-1110578805), "                                                                      /null/-1\tSCRIPT -1 1\n");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode4 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int5 = functionNode4.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = functionNode4.getTop();
        com.google.javascript.rhino.head.ast.Name name7 = null;
        functionNode4.setFunctionName(name7);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode9 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.Scope scope11 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 10);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode12 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode13 = functionNode12.getTop();
        functionNode12.setParens((int) (byte) 1, (int) (short) 1);
        functionNode12.setEncodedSourceStart((-1));
        functionNode12.setFunctionIsGetter();
        scope11.addChildToFront((com.google.javascript.rhino.head.Node) functionNode12);
        functionNode9.setBody((com.google.javascript.rhino.head.ast.AstNode) functionNode12);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode22 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode23 = functionNode22.getTop();
        functionNode22.setParens((int) (byte) 1, (int) (short) 1);
        functionNode22.setEncodedSourceStart((-1));
        java.util.List<com.google.javascript.rhino.head.Node> nodeList29 = functionNode22.getResumptionPoints();
        int int30 = functionNode22.getLp();
        functionNode9.setBody((com.google.javascript.rhino.head.ast.AstNode) functionNode22);
        functionNode4.addParam((com.google.javascript.rhino.head.ast.AstNode) functionNode22);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode33 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int34 = functionNode33.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode35 = functionNode33.getTop();
        com.google.javascript.rhino.head.ast.Name name36 = null;
        functionNode33.setFunctionName(name36);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode38 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode39 = functionNode38.getTop();
        functionNode33.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode38);
        int int41 = functionNode38.getRp();
        int int42 = functionNode38.getFunctionType();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) functionNode22, (com.google.javascript.rhino.head.ast.Scope) functionNode38);
        com.google.javascript.rhino.head.Node node44 = functionNode22.getLastSibling();
        com.google.javascript.rhino.head.Node node45 = new com.google.javascript.rhino.head.Node((int) (short) 100, node3, (com.google.javascript.rhino.head.Node) functionNode22);
        functionNode22.setFunctionIsSetter();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode47 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int48 = functionNode47.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode50 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        java.lang.String str51 = functionNode47.toStringTree(scriptNode50);
        functionNode47.setFunctionIsGetter();
        com.google.javascript.rhino.head.ast.AstNode astNode53 = functionNode47.getBody();
        functionNode47.setParens(21, (int) '#');
        int int57 = functionNode47.getLp();
        com.google.javascript.rhino.head.ast.Jump jump62 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump62.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump66 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump62, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode68 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int69 = scriptNode68.getEndLineno();
        int int70 = scriptNode68.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList71 = scriptNode68.getChildScopes();
        com.google.javascript.rhino.head.Node node72 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump62, (com.google.javascript.rhino.head.Node) scriptNode68);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList73 = scriptNode68.getChildScopes();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList74 = scriptNode68.getSymbols();
        functionNode47.setSymbols(symbolList74);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode76 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode77 = functionNode76.getTop();
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList78 = functionNode76.getStatements();
        int int79 = functionNode76.getType();
        functionNode47.replaceWith((com.google.javascript.rhino.head.ast.Scope) functionNode76);
        functionNode22.addChildScope((com.google.javascript.rhino.head.ast.Scope) functionNode76);
        java.util.Map<com.google.javascript.rhino.head.Node, int[]> nodeMap82 = functionNode76.getLiveLocals();
        com.google.javascript.rhino.head.ast.Scope scope83 = com.google.javascript.rhino.head.ast.Scope.splitScope((com.google.javascript.rhino.head.ast.Scope) functionNode76);
        org.junit.Assert.assertNotNull(node3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(scriptNode6);
        org.junit.Assert.assertNotNull(scriptNode13);
        org.junit.Assert.assertNotNull(scriptNode23);
        org.junit.Assert.assertNull(nodeList29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 1 + "'", int30 == 1);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertNotNull(scriptNode35);
        org.junit.Assert.assertNotNull(scriptNode39);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertNotNull(node44);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertNull(astNode53);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 21 + "'", int57 == 21);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + (-1) + "'", int69 == (-1));
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + (-1) + "'", int70 == (-1));
        org.junit.Assert.assertNull(scopeList71);
        org.junit.Assert.assertNull(scopeList73);
        org.junit.Assert.assertNotNull(symbolList74);
        org.junit.Assert.assertNotNull(scriptNode77);
        org.junit.Assert.assertNotNull(astNodeList78);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 109 + "'", int79 == 109);
        org.junit.Assert.assertNull(nodeMap82);
        org.junit.Assert.assertNotNull(scope83);
    }

    @Test
    public void test09595() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09595");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode0 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int1 = functionNode0.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode3 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        java.lang.String str4 = functionNode0.toStringTree(scriptNode3);
        functionNode0.setFunctionIsGetter();
        com.google.javascript.rhino.head.ast.AstNode astNode6 = functionNode0.getBody();
        functionNode0.setParens(21, (int) '#');
        int int10 = functionNode0.getLineno();
        functionNode0.setRp(9);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode13 = functionNode0.getTop();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode16 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int17 = functionNode16.getLp();
        functionNode16.setLp((int) (short) 1);
        int int22 = functionNode16.getIntProp(4, 26);
        com.google.javascript.rhino.head.ast.Jump jump23 = new com.google.javascript.rhino.head.ast.Jump(3, (com.google.javascript.rhino.head.Node) functionNode16);
        com.google.javascript.rhino.head.Node node24 = new com.google.javascript.rhino.head.Node((int) '4', (com.google.javascript.rhino.head.Node) functionNode16);
        functionNode16.setFunctionType(11);
        boolean boolean27 = functionNode16.requiresActivation();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode28 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int29 = functionNode28.getLp();
        functionNode28.setEncodedSource("");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode32 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.Scope scope34 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 10);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode35 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode36 = functionNode35.getTop();
        functionNode35.setParens((int) (byte) 1, (int) (short) 1);
        functionNode35.setEncodedSourceStart((-1));
        functionNode35.setFunctionIsGetter();
        scope34.addChildToFront((com.google.javascript.rhino.head.Node) functionNode35);
        functionNode32.setBody((com.google.javascript.rhino.head.ast.AstNode) functionNode35);
        int int45 = functionNode28.addFunction(functionNode32);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode46 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int47 = functionNode46.getLp();
        functionNode46.setEncodedSource("");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode50 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int51 = functionNode50.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode52 = functionNode50.getTop();
        com.google.javascript.rhino.head.ast.Name name53 = null;
        functionNode50.setFunctionName(name53);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode55 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode56 = functionNode55.getTop();
        functionNode50.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode55);
        int int58 = functionNode55.getRp();
        int int59 = functionNode55.getFunctionType();
        functionNode46.addParam((com.google.javascript.rhino.head.ast.AstNode) functionNode55);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode61 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int62 = functionNode61.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode63 = functionNode61.getTop();
        com.google.javascript.rhino.head.Node node64 = functionNode61.getLastSibling();
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList65 = functionNode61.getParams();
        functionNode46.setParams(astNodeList65);
        functionNode32.setParams(astNodeList65);
        int int68 = functionNode32.getPosition();
        boolean boolean69 = functionNode32.isGetter();
        functionNode16.addChildrenToFront((com.google.javascript.rhino.head.Node) functionNode32);
        int int71 = scriptNode13.compareTo((com.google.javascript.rhino.head.ast.AstNode) functionNode32);
        int int72 = functionNode32.getAbsolutePosition();
        int int73 = functionNode32.getRp();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-1) + "'", int1 == (-1));
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(astNode6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(scriptNode13);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 26 + "'", int22 == 26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertNotNull(scriptNode36);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1));
        org.junit.Assert.assertNotNull(scriptNode52);
        org.junit.Assert.assertNotNull(scriptNode56);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + (-1) + "'", int58 == (-1));
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + (-1) + "'", int62 == (-1));
        org.junit.Assert.assertNotNull(scriptNode63);
        org.junit.Assert.assertNotNull(node64);
        org.junit.Assert.assertNotNull(astNodeList65);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + (-1) + "'", int68 == (-1));
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
// flaky:         org.junit.Assert.assertTrue("'" + int71 + "' != '" + 1186675070 + "'", int71 == 1186675070);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + (-1) + "'", int72 == (-1));
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + (-1) + "'", int73 == (-1));
    }

    @Test
    public void test09596() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09596");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode1 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = functionNode1.getTop();
        functionNode1.setParens((int) (byte) 1, (int) (short) 1);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode6 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.Scope scope8 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 10);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode9 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = functionNode9.getTop();
        functionNode9.setParens((int) (byte) 1, (int) (short) 1);
        functionNode9.setEncodedSourceStart((-1));
        functionNode9.setFunctionIsGetter();
        scope8.addChildToFront((com.google.javascript.rhino.head.Node) functionNode9);
        functionNode6.setBody((com.google.javascript.rhino.head.ast.AstNode) functionNode9);
        functionNode6.setFunctionIsSetter();
        int int20 = functionNode1.addFunction(functionNode6);
        functionNode1.setEncodedSourceStart(1);
        boolean boolean23 = functionNode1.isExpressionClosure();
        com.google.javascript.rhino.head.ast.Symbol symbol25 = functionNode1.getSymbol("  {\n  }\n");
        functionNode1.setFunctionIsSetter();
        functionNode1.setEncodedSource("8");
        com.google.javascript.rhino.head.Node node30 = functionNode1.setType(6);
        com.google.javascript.rhino.head.Node node32 = new com.google.javascript.rhino.head.Node(35, (com.google.javascript.rhino.head.Node) functionNode1, (int) (short) 100);
        int int33 = functionNode1.getLineno();
        org.junit.Assert.assertNotNull(scriptNode2);
        org.junit.Assert.assertNotNull(scriptNode10);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNull(symbol25);
        org.junit.Assert.assertNotNull(node30);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
    }

    @Test
    public void test09597() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09597");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode0 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = functionNode0.getTop();
        functionNode0.setParens((int) (byte) 1, (int) (short) 1);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode5 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.Scope scope7 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 10);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode8 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode9 = functionNode8.getTop();
        functionNode8.setParens((int) (byte) 1, (int) (short) 1);
        functionNode8.setEncodedSourceStart((-1));
        functionNode8.setFunctionIsGetter();
        scope7.addChildToFront((com.google.javascript.rhino.head.Node) functionNode8);
        functionNode5.setBody((com.google.javascript.rhino.head.ast.AstNode) functionNode8);
        functionNode5.setFunctionIsSetter();
        int int19 = functionNode0.addFunction(functionNode5);
        boolean boolean20 = functionNode5.isGenerator();
        functionNode5.setParens(0, 3);
        boolean boolean24 = functionNode5.isSetter();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap25 = functionNode5.getSymbolTable();
        org.junit.Assert.assertNotNull(scriptNode1);
        org.junit.Assert.assertNotNull(scriptNode9);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(strMap25);
    }

    @Test
    public void test09598() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09598");
        com.google.javascript.rhino.head.ast.Jump jump4 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump4.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump8 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump4, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int11 = scriptNode10.getEndLineno();
        int int12 = scriptNode10.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList13 = scriptNode10.getChildScopes();
        com.google.javascript.rhino.head.Node node14 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump4, (com.google.javascript.rhino.head.Node) scriptNode10);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList15 = scriptNode10.getFunctions();
        int int16 = functionNodeList15.size();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator17 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        functionNodeList15.sort((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator17);
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator19 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.Jump jump24 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump24.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump28 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump24, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode30 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int31 = scriptNode30.getEndLineno();
        int int32 = scriptNode30.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList33 = scriptNode30.getChildScopes();
        com.google.javascript.rhino.head.Node node34 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump24, (com.google.javascript.rhino.head.Node) scriptNode30);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList35 = scriptNode30.getFunctions();
        int int36 = functionNodeList35.size();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator37 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        functionNodeList35.sort((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator37);
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator39 = positionComparator37.reversed();
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator40 = astNodeComparator39.reversed();
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator41 = positionComparator19.thenComparing(astNodeComparator39);
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator42 = positionComparator17.thenComparing(astNodeComparator41);
        com.google.javascript.rhino.head.ast.Jump jump47 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump47.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump51 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump47, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode53 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int54 = scriptNode53.getEndLineno();
        int int55 = scriptNode53.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList56 = scriptNode53.getChildScopes();
        com.google.javascript.rhino.head.Node node57 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump47, (com.google.javascript.rhino.head.Node) scriptNode53);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList58 = scriptNode53.getFunctions();
        int int59 = functionNodeList58.size();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator60 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        functionNodeList58.sort((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator60);
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator62 = astNodeComparator42.thenComparing((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator60);
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator63 = positionComparator60.reversed();
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator64 = astNodeComparator63.reversed();
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator65 = astNodeComparator64.reversed();
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNull(scopeList13);
        org.junit.Assert.assertNotNull(functionNodeList15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNull(scopeList33);
        org.junit.Assert.assertNotNull(functionNodeList35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertNotNull(astNodeComparator39);
        org.junit.Assert.assertNotNull(astNodeComparator40);
        org.junit.Assert.assertNotNull(astNodeComparator41);
        org.junit.Assert.assertNotNull(astNodeComparator42);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1));
        org.junit.Assert.assertNull(scopeList56);
        org.junit.Assert.assertNotNull(functionNodeList58);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
        org.junit.Assert.assertNotNull(astNodeComparator62);
        org.junit.Assert.assertNotNull(astNodeComparator63);
        org.junit.Assert.assertNotNull(astNodeComparator64);
        org.junit.Assert.assertNotNull(astNodeComparator65);
    }

    @Test
    public void test09599() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09599");
        com.google.javascript.rhino.head.ast.Symbol symbol0 = new com.google.javascript.rhino.head.ast.Symbol();
        java.lang.String str1 = symbol0.getName();
        com.google.javascript.rhino.head.Node node2 = symbol0.getNode();
        java.lang.String str3 = symbol0.toString();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode4 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int5 = functionNode4.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode7 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        java.lang.String str8 = functionNode4.toStringTree(scriptNode7);
        functionNode4.setFunctionIsGetter();
        com.google.javascript.rhino.head.ast.AstNode astNode10 = functionNode4.getBody();
        functionNode4.setParens(21, (int) '#');
        int int14 = functionNode4.getLineno();
        functionNode4.setRp(9);
        symbol0.setContainingTable((com.google.javascript.rhino.head.ast.Scope) functionNode4);
        com.google.javascript.rhino.head.Node node18 = symbol0.getNode();
        com.google.javascript.rhino.head.ast.Jump jump23 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump23.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump27 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump23, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode29 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int30 = scriptNode29.getEndLineno();
        int int31 = scriptNode29.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList32 = scriptNode29.getChildScopes();
        com.google.javascript.rhino.head.Node node33 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump23, (com.google.javascript.rhino.head.Node) scriptNode29);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList34 = scriptNode29.getFunctions();
        int int35 = functionNodeList34.size();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator36 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        functionNodeList34.sort((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator36);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode39 = new com.google.javascript.rhino.head.ast.FunctionNode(0);
        boolean boolean40 = functionNode39.hasChildren();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode41 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int42 = functionNode41.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode43 = functionNode41.getTop();
        com.google.javascript.rhino.head.ast.Name name44 = null;
        functionNode41.setFunctionName(name44);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode46 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int47 = functionNode46.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode49 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        java.lang.String str50 = functionNode46.toStringTree(scriptNode49);
        functionNode46.setFunctionIsGetter();
        int int52 = functionNode41.addFunction(functionNode46);
        boolean boolean53 = functionNode46.hasSideEffects();
        int int54 = functionNode46.getFunctionCount();
        int int55 = positionComparator36.compare((com.google.javascript.rhino.head.ast.AstNode) functionNode39, (com.google.javascript.rhino.head.ast.AstNode) functionNode46);
        functionNode46.setPosition(17);
        boolean boolean58 = functionNode46.isGetter();
        symbol0.setContainingTable((com.google.javascript.rhino.head.ast.Scope) functionNode46);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode60 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode61 = functionNode60.getTop();
        int int62 = functionNode60.getRegexpCount();
        functionNode60.setFunctionIsGetter();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode65 = new com.google.javascript.rhino.head.ast.FunctionNode(0);
        int int66 = functionNode65.getBaseLineno();
        boolean boolean67 = functionNode65.isGetter();
        com.google.javascript.rhino.head.ast.RegExpLiteral regExpLiteral69 = new com.google.javascript.rhino.head.ast.RegExpLiteral((int) (short) 1);
        regExpLiteral69.setFlags("-1\tSCRIPT -1 1\n");
        java.lang.String str72 = regExpLiteral69.getValue();
        regExpLiteral69.setFlags("52");
        functionNode65.addChildrenToFront((com.google.javascript.rhino.head.Node) regExpLiteral69);
        boolean boolean76 = functionNode65.isGetterOrSetter();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode77 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode78 = functionNode77.getTop();
        int int79 = functionNode77.getRegexpCount();
        int int80 = functionNode77.getParamCount();
        com.google.javascript.rhino.head.ast.AstNode astNode81 = functionNode77.getBody();
        int int82 = functionNode65.addFunction(functionNode77);
        functionNode77.setEncodedSourceStart(17);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode85 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int86 = functionNode85.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode87 = functionNode85.getTop();
        com.google.javascript.rhino.head.ast.AstNode astNode88 = functionNode85.getBody();
        com.google.javascript.rhino.head.ast.Scope scope89 = functionNode85.getParentScope();
        int int90 = functionNode77.addFunction(functionNode85);
        java.util.List<com.google.javascript.rhino.head.Node> nodeList91 = functionNode85.getResumptionPoints();
        com.google.javascript.rhino.head.ast.Name name93 = null;
        com.google.javascript.rhino.head.ast.FunctionNode functionNode94 = new com.google.javascript.rhino.head.ast.FunctionNode((int) (byte) -1, name93);
        java.util.List<com.google.javascript.rhino.head.Node> nodeList95 = functionNode94.getResumptionPoints();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList96 = functionNode94.getSymbols();
        functionNode85.setSymbols(symbolList96);
        functionNode60.setSymbols(symbolList96);
        functionNode46.setSymbols(symbolList96);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Symbol (EOF) name=null" + "'", str3, "Symbol (EOF) name=null");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(astNode10);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNull(node18);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNull(scopeList32);
        org.junit.Assert.assertNotNull(functionNodeList34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertNotNull(scriptNode43);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 1 + "'", int55 == 1);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(scriptNode61);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 0 + "'", int62 == 0);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + (-1) + "'", int66 == (-1));
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNull(str72);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(scriptNode78);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 0 + "'", int79 == 0);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 0 + "'", int80 == 0);
        org.junit.Assert.assertNull(astNode81);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 0 + "'", int82 == 0);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + (-1) + "'", int86 == (-1));
        org.junit.Assert.assertNotNull(scriptNode87);
        org.junit.Assert.assertNull(astNode88);
        org.junit.Assert.assertNull(scope89);
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + 0 + "'", int90 == 0);
        org.junit.Assert.assertNull(nodeList91);
        org.junit.Assert.assertNull(nodeList95);
        org.junit.Assert.assertNotNull(symbolList96);
    }

    @Test
    public void test09600() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09600");
        com.google.javascript.rhino.head.ast.Symbol symbol0 = new com.google.javascript.rhino.head.ast.Symbol();
        symbol0.setIndex(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode4 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int5 = scriptNode4.getEndLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode7 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int8 = scriptNode7.getEndLineno();
        scriptNode4.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode7);
        com.google.javascript.rhino.head.ast.Comment comment10 = null;
        scriptNode4.setJsDocNode(comment10);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList12 = scriptNode4.getSymbols();
        symbol0.setContainingTable((com.google.javascript.rhino.head.ast.Scope) scriptNode4);
        com.google.javascript.rhino.head.ast.Scope scope14 = symbol0.getContainingTable();
        java.lang.String str15 = symbol0.getName();
        com.google.javascript.rhino.head.ast.Scope scope16 = symbol0.getContainingTable();
        int int17 = symbol0.getIndex();
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(symbolList12);
        org.junit.Assert.assertNotNull(scope14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(scope16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 6 + "'", int17 == 6);
    }

    @Test
    public void test09601() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09601");
        com.google.javascript.rhino.head.Node node1 = new com.google.javascript.rhino.head.Node(281549544);
    }

    @Test
    public void test09602() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09602");
        com.google.javascript.rhino.head.ast.Jump jump4 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump4.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump8 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump4, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int11 = scriptNode10.getEndLineno();
        int int12 = scriptNode10.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList13 = scriptNode10.getChildScopes();
        com.google.javascript.rhino.head.Node node14 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump4, (com.google.javascript.rhino.head.Node) scriptNode10);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList15 = scriptNode10.getFunctions();
        functionNodeList15.clear();
        com.google.javascript.rhino.head.ast.Jump jump21 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump21.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump25 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump21, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode27 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int28 = scriptNode27.getEndLineno();
        int int29 = scriptNode27.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList30 = scriptNode27.getChildScopes();
        com.google.javascript.rhino.head.Node node31 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump21, (com.google.javascript.rhino.head.Node) scriptNode27);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList32 = scriptNode27.getFunctions();
        boolean boolean33 = functionNodeList15.removeAll((java.util.Collection<com.google.javascript.rhino.head.ast.FunctionNode>) functionNodeList32);
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator34 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.Jump jump39 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump39.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump43 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump39, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode45 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int46 = scriptNode45.getEndLineno();
        int int47 = scriptNode45.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList48 = scriptNode45.getChildScopes();
        com.google.javascript.rhino.head.Node node49 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump39, (com.google.javascript.rhino.head.Node) scriptNode45);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList50 = scriptNode45.getFunctions();
        int int51 = functionNodeList50.size();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator52 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        functionNodeList50.sort((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator52);
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator54 = positionComparator52.reversed();
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator55 = astNodeComparator54.reversed();
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator56 = positionComparator34.thenComparing(astNodeComparator54);
        functionNodeList15.sort(astNodeComparator54);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode58 = new com.google.javascript.rhino.head.ast.ScriptNode();
        int int59 = scriptNode58.getEncodedSourceEnd();
        java.lang.String str61 = scriptNode58.toSource((int) (byte) 10);
        scriptNode58.setEncodedSourceEnd((int) (short) -1);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList64 = scriptNode58.getFunctions();
        boolean boolean65 = functionNodeList15.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.FunctionNode>) functionNodeList64);
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.ast.FunctionNode functionNode67 = functionNodeList15.remove((int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNull(scopeList13);
        org.junit.Assert.assertNotNull(functionNodeList15);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertNull(scopeList30);
        org.junit.Assert.assertNotNull(functionNodeList32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertNull(scopeList48);
        org.junit.Assert.assertNotNull(functionNodeList50);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertNotNull(astNodeComparator54);
        org.junit.Assert.assertNotNull(astNodeComparator55);
        org.junit.Assert.assertNotNull(astNodeComparator56);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-1) + "'", int59 == (-1));
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "                    {\n                    }\n" + "'", str61, "                    {\n                    }\n");
        org.junit.Assert.assertNotNull(functionNodeList64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
    }

    @Test
    public void test09603() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09603");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode0 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int1 = functionNode0.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = functionNode0.getTop();
        com.google.javascript.rhino.head.ast.Name name3 = null;
        functionNode0.setFunctionName(name3);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode5 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = functionNode5.getTop();
        functionNode0.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode5);
        int int8 = functionNode5.getRp();
        java.lang.String str9 = functionNode5.getSourceName();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode10 = functionNode5.getEnclosingFunction();
        functionNode5.removeChildren();
        com.google.javascript.rhino.head.Token.CommentType commentType17 = com.google.javascript.rhino.head.Token.CommentType.HTML;
        com.google.javascript.rhino.head.ast.Comment comment19 = new com.google.javascript.rhino.head.ast.Comment(20, 1, commentType17, "109");
        java.lang.String str21 = comment19.toSource(19);
        java.lang.String str22 = comment19.getValue();
        java.lang.String str23 = comment19.getValue();
        com.google.javascript.rhino.head.Token.CommentType commentType24 = com.google.javascript.rhino.head.Token.CommentType.LINE;
        comment19.setCommentType(commentType24);
        com.google.javascript.rhino.head.ast.Comment comment27 = new com.google.javascript.rhino.head.ast.Comment(1, 1, commentType24, "                    /null/");
        java.lang.String str28 = comment27.getValue();
        java.lang.String str30 = comment27.toSource(8);
        com.google.javascript.rhino.head.ast.Jump jump32 = new com.google.javascript.rhino.head.ast.Jump(6, (com.google.javascript.rhino.head.Node) comment27, 796955);
        boolean boolean33 = functionNode5.isParam((com.google.javascript.rhino.head.ast.AstNode) comment27);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-1) + "'", int1 == (-1));
        org.junit.Assert.assertNotNull(scriptNode2);
        org.junit.Assert.assertNotNull(scriptNode6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(functionNode10);
        org.junit.Assert.assertTrue("'" + commentType17 + "' != '" + com.google.javascript.rhino.head.Token.CommentType.HTML + "'", commentType17.equals(com.google.javascript.rhino.head.Token.CommentType.HTML));
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "                                      109" + "'", str21, "                                      109");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "109" + "'", str22, "109");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "109" + "'", str23, "109");
        org.junit.Assert.assertTrue("'" + commentType24 + "' != '" + com.google.javascript.rhino.head.Token.CommentType.LINE + "'", commentType24.equals(com.google.javascript.rhino.head.Token.CommentType.LINE));
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "                    /null/" + "'", str28, "                    /null/");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "                                    /null/" + "'", str30, "                                    /null/");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
    }

    @Test
    public void test09604() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09604");
        com.google.javascript.rhino.head.ast.Jump jump4 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump4.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump8 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump4, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int11 = scriptNode10.getEndLineno();
        int int12 = scriptNode10.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList13 = scriptNode10.getChildScopes();
        com.google.javascript.rhino.head.Node node14 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump4, (com.google.javascript.rhino.head.Node) scriptNode10);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList15 = scriptNode10.getFunctions();
        int int16 = functionNodeList15.size();
        com.google.javascript.rhino.head.ast.Jump jump22 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump22.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump26 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump22, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode28 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int29 = scriptNode28.getEndLineno();
        int int30 = scriptNode28.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList31 = scriptNode28.getChildScopes();
        com.google.javascript.rhino.head.Node node32 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump22, (com.google.javascript.rhino.head.Node) scriptNode28);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList33 = scriptNode28.getFunctions();
        functionNodeList33.clear();
        com.google.javascript.rhino.head.ast.Jump jump39 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump39.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump43 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump39, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode45 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int46 = scriptNode45.getEndLineno();
        int int47 = scriptNode45.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList48 = scriptNode45.getChildScopes();
        com.google.javascript.rhino.head.Node node49 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump39, (com.google.javascript.rhino.head.Node) scriptNode45);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList50 = scriptNode45.getFunctions();
        boolean boolean51 = functionNodeList33.removeAll((java.util.Collection<com.google.javascript.rhino.head.ast.FunctionNode>) functionNodeList50);
        boolean boolean52 = functionNodeList15.addAll(0, (java.util.Collection<com.google.javascript.rhino.head.ast.FunctionNode>) functionNodeList33);
        com.google.javascript.rhino.head.ast.Jump jump57 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump57.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump61 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump57, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode63 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int64 = scriptNode63.getEndLineno();
        int int65 = scriptNode63.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList66 = scriptNode63.getChildScopes();
        com.google.javascript.rhino.head.Node node67 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump57, (com.google.javascript.rhino.head.Node) scriptNode63);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList68 = scriptNode63.getFunctions();
        int int69 = functionNodeList68.size();
        functionNodeList68.clear();
        int int72 = functionNodeList68.indexOf((java.lang.Object) 10L);
        java.util.Iterator<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeItor73 = functionNodeList68.iterator();
        boolean boolean74 = functionNodeList15.retainAll((java.util.Collection<com.google.javascript.rhino.head.ast.FunctionNode>) functionNodeList68);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode77 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int78 = scriptNode77.getEndLineno();
        int int79 = scriptNode77.getBaseLineno();
        com.google.javascript.rhino.head.Node node81 = new com.google.javascript.rhino.head.Node((int) (byte) 1, (com.google.javascript.rhino.head.Node) scriptNode77, (int) (byte) 0);
        int int82 = functionNodeList68.indexOf((java.lang.Object) (byte) 1);
        boolean boolean83 = functionNodeList68.isEmpty();
        boolean boolean84 = functionNodeList68.isEmpty();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode86 = new com.google.javascript.rhino.head.ast.FunctionNode(0);
        int int87 = functionNode86.getBaseLineno();
        functionNode86.setSourceName("                                                                                                                                                                                                        /null/");
        functionNode86.setRequiresActivation();
        com.google.javascript.rhino.head.Node node91 = functionNode86.target;
        int int92 = functionNode86.getLength();
        java.lang.String str93 = functionNode86.getEncodedSource();
        com.google.javascript.rhino.head.Node node94 = functionNode86.target;
        com.google.javascript.rhino.head.ast.AstNode astNode95 = functionNode86.getMemberExprNode();
        functionNode86.setSourceName("                                                                                                                                                                                                        ");
        boolean boolean98 = functionNodeList68.contains((java.lang.Object) functionNode86);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNull(scopeList13);
        org.junit.Assert.assertNotNull(functionNodeList15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertNull(scopeList31);
        org.junit.Assert.assertNotNull(functionNodeList33);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertNull(scopeList48);
        org.junit.Assert.assertNotNull(functionNodeList50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + (-1) + "'", int64 == (-1));
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + (-1) + "'", int65 == (-1));
        org.junit.Assert.assertNull(scopeList66);
        org.junit.Assert.assertNotNull(functionNodeList68);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 0 + "'", int69 == 0);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + (-1) + "'", int72 == (-1));
        org.junit.Assert.assertNotNull(functionNodeItor73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + (-1) + "'", int78 == (-1));
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + (-1) + "'", int79 == (-1));
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + (-1) + "'", int82 == (-1));
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + (-1) + "'", int87 == (-1));
        org.junit.Assert.assertNull(node91);
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + 1 + "'", int92 == 1);
        org.junit.Assert.assertNull(str93);
        org.junit.Assert.assertNull(node94);
        org.junit.Assert.assertNull(astNode95);
        org.junit.Assert.assertTrue("'" + boolean98 + "' != '" + false + "'", boolean98 == false);
    }

    @Test
    public void test09605() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09605");
        com.google.javascript.rhino.head.ast.Symbol symbol0 = new com.google.javascript.rhino.head.ast.Symbol();
        java.lang.String str1 = symbol0.getDeclTypeName();
        int int2 = symbol0.getDeclType();
        com.google.javascript.rhino.head.ast.Scope scope3 = symbol0.getContainingTable();
        java.lang.String str4 = symbol0.getDeclTypeName();
        symbol0.setName("                              {\n                              }\n");
        int int7 = symbol0.getDeclType();
        com.google.javascript.rhino.head.ast.Scope scope8 = symbol0.getContainingTable();
        int int9 = symbol0.getDeclType();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "EOF" + "'", str1, "EOF");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNull(scope3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "EOF" + "'", str4, "EOF");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNull(scope8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
    }

    @Test
    public void test09606() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09606");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode1 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = functionNode1.getTop();
        functionNode1.setParens((int) (byte) 1, (int) (short) 1);
        com.google.javascript.rhino.head.Node node6 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) functionNode1);
        int int7 = functionNode1.getEncodedSourceEnd();
        com.google.javascript.rhino.head.ast.Jump jump12 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump12.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump16 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump12, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode18 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int19 = scriptNode18.getEndLineno();
        int int20 = scriptNode18.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList21 = scriptNode18.getChildScopes();
        com.google.javascript.rhino.head.Node node22 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump12, (com.google.javascript.rhino.head.Node) scriptNode18);
        java.lang.String str23 = scriptNode18.getSourceName();
        functionNode1.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode18);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode25 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.Scope scope27 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 10);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode28 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode29 = functionNode28.getTop();
        functionNode28.setParens((int) (byte) 1, (int) (short) 1);
        functionNode28.setEncodedSourceStart((-1));
        functionNode28.setFunctionIsGetter();
        scope27.addChildToFront((com.google.javascript.rhino.head.Node) functionNode28);
        functionNode25.setBody((com.google.javascript.rhino.head.ast.AstNode) functionNode28);
        int int38 = functionNode25.getRegexpCount();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode39 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int40 = functionNode39.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode41 = functionNode39.getTop();
        com.google.javascript.rhino.head.ast.Name name42 = null;
        functionNode39.setFunctionName(name42);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode44 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode45 = functionNode44.getTop();
        functionNode39.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode44);
        int int47 = functionNode44.getRp();
        functionNode44.setParens(11, 2);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode52 = new com.google.javascript.rhino.head.ast.FunctionNode((-1));
        int int53 = functionNode44.addFunction(functionNode52);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode55 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int56 = scriptNode55.getEndLineno();
        int int57 = scriptNode55.getBaseLineno();
        scriptNode55.removeProp(0);
        scriptNode55.setEncodedSourceEnd(19);
        java.lang.String str62 = scriptNode55.toString();
        int[] intArray64 = new int[] { 26 };
        functionNode44.addLiveLocals((com.google.javascript.rhino.head.Node) scriptNode55, intArray64);
        functionNode25.setMemberExprNode((com.google.javascript.rhino.head.ast.AstNode) functionNode44);
        functionNode1.target = functionNode44;
        com.google.javascript.rhino.head.ast.Scope scope69 = functionNode1.getDefiningScope("                    ");
        org.junit.Assert.assertNotNull(scriptNode2);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertNull(scopeList21);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNotNull(scriptNode29);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertNotNull(scriptNode41);
        org.junit.Assert.assertNotNull(scriptNode45);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1));
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "136" + "'", str62, "136");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[26]");
        org.junit.Assert.assertNull(scope69);
    }

    @Test
    public void test09607() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09607");
        com.google.javascript.rhino.head.ast.Jump jump3 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump3.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump7 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump3, 0);
        com.google.javascript.rhino.head.ast.Jump jump11 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump11.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump15 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump11, 0);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode16 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int17 = functionNode16.getLp();
        functionNode16.setEncodedSource("");
        functionNode16.flattenSymbolTable(false);
        jump3.addChildAfter((com.google.javascript.rhino.head.Node) jump11, (com.google.javascript.rhino.head.Node) functionNode16);
        int int23 = functionNode16.getLength();
        com.google.javascript.rhino.head.ast.Name name24 = null;
        functionNode16.setFunctionName(name24);
        functionNode16.putIntProp(109, 23);
        int int29 = functionNode16.getType();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator30 = functionNode16.spliterator();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode32 = new com.google.javascript.rhino.head.ast.FunctionNode(0);
        int int33 = functionNode32.getBaseLineno();
        functionNode32.setPosition((int) '#');
        com.google.javascript.rhino.head.ast.Jump jump42 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump42.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump46 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump42, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode48 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int49 = scriptNode48.getEndLineno();
        int int50 = scriptNode48.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList51 = scriptNode48.getChildScopes();
        com.google.javascript.rhino.head.Node node52 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump42, (com.google.javascript.rhino.head.Node) scriptNode48);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode54 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int55 = scriptNode54.getEndLineno();
        com.google.javascript.rhino.head.ast.RegExpLiteral regExpLiteral57 = new com.google.javascript.rhino.head.ast.RegExpLiteral((int) (short) 1);
        java.lang.String str59 = regExpLiteral57.toSource((int) (byte) 10);
        regExpLiteral57.setFlags("-1\tSCRIPT -1 1\n");
        regExpLiteral57.removeProp(8);
        com.google.javascript.rhino.head.Node node65 = new com.google.javascript.rhino.head.Node(10, node52, (com.google.javascript.rhino.head.Node) scriptNode54, (com.google.javascript.rhino.head.Node) regExpLiteral57, 3);
        functionNode32.putProp(1579347477, (java.lang.Object) node52);
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.Node node67 = functionNode16.getChildBefore(node52);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 109 + "'", int29 == 109);
        org.junit.Assert.assertNotNull(nodeSpliterator30);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertNull(scopeList51);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1));
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "                    /null/" + "'", str59, "                    /null/");
    }

    @Test
    public void test09608() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09608");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 10);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode2 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode3 = functionNode2.getTop();
        functionNode2.setParens((int) (byte) 1, (int) (short) 1);
        functionNode2.setEncodedSourceStart((-1));
        functionNode2.setFunctionIsGetter();
        scope1.addChildToFront((com.google.javascript.rhino.head.Node) functionNode2);
        functionNode2.setRp(19);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int15 = scriptNode14.getEndLineno();
        int int16 = scriptNode14.getBaseLineno();
        com.google.javascript.rhino.head.ast.Jump jump19 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode21 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int22 = scriptNode21.getEndLineno();
        int int23 = scriptNode21.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList24 = scriptNode21.getChildScopes();
        jump19.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode21);
        java.lang.String str26 = scriptNode21.debugPrint();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode14, (com.google.javascript.rhino.head.ast.Scope) scriptNode21);
        com.google.javascript.rhino.head.ast.Scope scope28 = new com.google.javascript.rhino.head.ast.Scope();
        scriptNode21.target = scope28;
        java.lang.String str30 = functionNode2.toStringTree(scriptNode21);
        java.lang.String str32 = scriptNode21.toSource((int) (short) 10);
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap33 = scriptNode21.getSymbolTable();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode34 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int35 = functionNode34.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode36 = functionNode34.getTop();
        com.google.javascript.rhino.head.ast.Name name37 = null;
        functionNode34.setFunctionName(name37);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode39 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode40 = functionNode39.getTop();
        functionNode34.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode39);
        int int42 = functionNode39.getRp();
        java.lang.Object obj43 = functionNode39.getCompilerData();
        boolean boolean44 = strMap33.containsKey(obj43);
        com.google.javascript.rhino.head.ast.Symbol symbol46 = new com.google.javascript.rhino.head.ast.Symbol();
        symbol46.setIndex(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode50 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int51 = scriptNode50.getEndLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode53 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int54 = scriptNode53.getEndLineno();
        scriptNode50.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode53);
        com.google.javascript.rhino.head.ast.Comment comment56 = null;
        scriptNode50.setJsDocNode(comment56);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList58 = scriptNode50.getSymbols();
        symbol46.setContainingTable((com.google.javascript.rhino.head.ast.Scope) scriptNode50);
        com.google.javascript.rhino.head.ast.Symbol symbol60 = strMap33.putIfAbsent("{\n}\n", symbol46);
        int int61 = strMap33.size();
        com.google.javascript.rhino.head.ast.Name name63 = null;
        com.google.javascript.rhino.head.ast.FunctionNode functionNode64 = new com.google.javascript.rhino.head.ast.FunctionNode(17, name63);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode65 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int66 = functionNode65.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode68 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        java.lang.String str69 = functionNode65.toStringTree(scriptNode68);
        int int70 = scriptNode68.getRegexpCount();
        java.lang.Object obj71 = scriptNode68.getCompilerData();
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList72 = scriptNode68.getStatements();
        java.lang.String str73 = functionNode64.toStringTree(scriptNode68);
        scriptNode68.setEndLineno((int) (short) 10);
        boolean boolean76 = strMap33.containsKey((java.lang.Object) (short) 10);
        boolean boolean77 = strMap33.isEmpty();
        org.junit.Assert.assertNotNull(scriptNode3);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNull(scopeList24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str26, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "                    {\n                    }\n" + "'", str32, "                    {\n                    }\n");
        org.junit.Assert.assertNotNull(strMap33);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertNotNull(scriptNode36);
        org.junit.Assert.assertNotNull(scriptNode40);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertNull(obj43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1));
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
        org.junit.Assert.assertNotNull(symbolList58);
        org.junit.Assert.assertNull(symbol60);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 1 + "'", int61 == 1);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + (-1) + "'", int66 == (-1));
        org.junit.Assert.assertNull(str69);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 0 + "'", int70 == 0);
        org.junit.Assert.assertNull(obj71);
        org.junit.Assert.assertNotNull(astNodeList72);
        org.junit.Assert.assertNull(str73);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
    }

    @Test
    public void test09609() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09609");
        com.google.javascript.rhino.head.ast.Jump jump4 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump4.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump8 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump4, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int11 = scriptNode10.getEndLineno();
        int int12 = scriptNode10.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList13 = scriptNode10.getChildScopes();
        com.google.javascript.rhino.head.Node node14 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump4, (com.google.javascript.rhino.head.Node) scriptNode10);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList15 = scriptNode10.getFunctions();
        int int16 = functionNodeList15.size();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator17 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        functionNodeList15.sort((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator17);
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator19 = positionComparator17.reversed();
        com.google.javascript.rhino.head.ast.Jump jump23 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump23.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump27 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump23, 0);
        com.google.javascript.rhino.head.ast.Jump jump31 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump31.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump35 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump31, 0);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode36 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int37 = functionNode36.getLp();
        functionNode36.setEncodedSource("");
        functionNode36.flattenSymbolTable(false);
        jump23.addChildAfter((com.google.javascript.rhino.head.Node) jump31, (com.google.javascript.rhino.head.Node) functionNode36);
        int int43 = functionNode36.getPosition();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode45 = new com.google.javascript.rhino.head.ast.FunctionNode(0);
        boolean boolean46 = functionNode45.isExpressionClosure();
        int int47 = positionComparator17.compare((com.google.javascript.rhino.head.ast.AstNode) functionNode36, (com.google.javascript.rhino.head.ast.AstNode) functionNode45);
        java.lang.String str48 = functionNode45.getSourceName();
        int int49 = functionNode45.getRp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode50 = functionNode45.getTop();
        com.google.javascript.rhino.head.ast.Symbol symbol52 = scriptNode50.getSymbol("                          /null/");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode53 = scriptNode50.getTop();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap54 = scriptNode50.getSymbolTable();
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNull(scopeList13);
        org.junit.Assert.assertNotNull(functionNodeList15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(astNodeComparator19);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertNotNull(scriptNode50);
        org.junit.Assert.assertNull(symbol52);
        org.junit.Assert.assertNotNull(scriptNode53);
        org.junit.Assert.assertNull(strMap54);
    }

    @Test
    public void test09610() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09610");
        com.google.javascript.rhino.head.ast.Jump jump4 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump4.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump8 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump4, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int11 = scriptNode10.getEndLineno();
        int int12 = scriptNode10.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList13 = scriptNode10.getChildScopes();
        com.google.javascript.rhino.head.Node node14 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump4, (com.google.javascript.rhino.head.Node) scriptNode10);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList15 = scriptNode10.getChildScopes();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode17 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int18 = functionNode17.getLp();
        functionNode17.setEncodedSource("");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode21 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int22 = functionNode21.getLp();
        functionNode21.setEncodedSource("");
        functionNode21.flattenSymbolTable(false);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode27 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int28 = functionNode27.getLp();
        com.google.javascript.rhino.head.Node node30 = new com.google.javascript.rhino.head.Node((-1), (com.google.javascript.rhino.head.Node) functionNode17, (com.google.javascript.rhino.head.Node) functionNode21, (com.google.javascript.rhino.head.Node) functionNode27, (int) '#');
        com.google.javascript.rhino.head.ast.Comment comment31 = functionNode27.getJsDocNode();
        int int32 = functionNode27.getFunctionCount();
        java.lang.String str33 = scriptNode10.toStringTree((com.google.javascript.rhino.head.ast.ScriptNode) functionNode27);
        functionNode27.flattenSymbolTable(false);
        // The following exception was thrown during execution in test generation
        try {
            functionNode27.labelId((-767426003));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNull(scopeList13);
        org.junit.Assert.assertNull(scopeList15);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNull(comment31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNull(str33);
    }

    @Test
    public void test09611() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09611");
        com.google.javascript.rhino.head.ast.Jump jump4 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump4.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump8 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump4, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int11 = scriptNode10.getEndLineno();
        int int12 = scriptNode10.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList13 = scriptNode10.getChildScopes();
        com.google.javascript.rhino.head.Node node14 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump4, (com.google.javascript.rhino.head.Node) scriptNode10);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList15 = scriptNode10.getFunctions();
        int int16 = functionNodeList15.size();
        com.google.javascript.rhino.head.ast.Jump jump22 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump22.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump26 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump22, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode28 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int29 = scriptNode28.getEndLineno();
        int int30 = scriptNode28.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList31 = scriptNode28.getChildScopes();
        com.google.javascript.rhino.head.Node node32 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump22, (com.google.javascript.rhino.head.Node) scriptNode28);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList33 = scriptNode28.getFunctions();
        functionNodeList33.clear();
        com.google.javascript.rhino.head.ast.Jump jump39 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump39.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump43 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump39, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode45 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int46 = scriptNode45.getEndLineno();
        int int47 = scriptNode45.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList48 = scriptNode45.getChildScopes();
        com.google.javascript.rhino.head.Node node49 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump39, (com.google.javascript.rhino.head.Node) scriptNode45);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList50 = scriptNode45.getFunctions();
        boolean boolean51 = functionNodeList33.removeAll((java.util.Collection<com.google.javascript.rhino.head.ast.FunctionNode>) functionNodeList50);
        boolean boolean52 = functionNodeList15.addAll(0, (java.util.Collection<com.google.javascript.rhino.head.ast.FunctionNode>) functionNodeList33);
        int int53 = functionNodeList15.size();
        java.util.Iterator<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeItor54 = functionNodeList15.iterator();
        java.lang.Object[] objArray55 = functionNodeList15.toArray();
        java.util.Spliterator<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeSpliterator56 = functionNodeList15.spliterator();
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNull(scopeList13);
        org.junit.Assert.assertNotNull(functionNodeList15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertNull(scopeList31);
        org.junit.Assert.assertNotNull(functionNodeList33);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertNull(scopeList48);
        org.junit.Assert.assertNotNull(functionNodeList50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertNotNull(functionNodeItor54);
        org.junit.Assert.assertNotNull(objArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray55), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray55), "[]");
        org.junit.Assert.assertNotNull(functionNodeSpliterator56);
    }

    @Test
    public void test09612() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09612");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode3 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int4 = scriptNode3.getEndLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int7 = scriptNode6.getEndLineno();
        scriptNode3.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode6);
        com.google.javascript.rhino.head.ast.Scope scope9 = scriptNode6.getParentScope();
        com.google.javascript.rhino.head.ast.Scope scope10 = new com.google.javascript.rhino.head.ast.Scope();
        scriptNode6.addChildrenToBack((com.google.javascript.rhino.head.Node) scope10);
        java.lang.String str13 = scriptNode6.toSource(10);
        com.google.javascript.rhino.head.ast.Jump jump14 = new com.google.javascript.rhino.head.ast.Jump(19, (com.google.javascript.rhino.head.Node) scriptNode6);
        com.google.javascript.rhino.head.ast.Jump jump15 = new com.google.javascript.rhino.head.ast.Jump(10, (com.google.javascript.rhino.head.Node) scriptNode6);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList16 = scriptNode6.getFunctions();
        com.google.javascript.rhino.head.ast.Jump jump20 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode22 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int23 = scriptNode22.getEndLineno();
        int int24 = scriptNode22.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList25 = scriptNode22.getChildScopes();
        jump20.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode22);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode28 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int29 = functionNode28.getLp();
        functionNode28.setEncodedSource("");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode32 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int33 = functionNode32.getLp();
        functionNode32.setEncodedSource("");
        functionNode32.flattenSymbolTable(false);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode38 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int39 = functionNode38.getLp();
        com.google.javascript.rhino.head.Node node41 = new com.google.javascript.rhino.head.Node((-1), (com.google.javascript.rhino.head.Node) functionNode28, (com.google.javascript.rhino.head.Node) functionNode32, (com.google.javascript.rhino.head.Node) functionNode38, (int) '#');
        jump20.addChildrenToFront((com.google.javascript.rhino.head.Node) functionNode28);
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList43 = functionNode28.getStatements();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode44 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode45 = functionNode44.getTop();
        com.google.javascript.rhino.head.ast.AstRoot astRoot46 = functionNode44.getAstRoot();
        functionNode28.replaceWith((com.google.javascript.rhino.head.ast.Scope) functionNode44);
        functionNode28.setLineno(4);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList50 = functionNode28.getFunctions();
        com.google.javascript.rhino.head.ast.Symbol symbol51 = new com.google.javascript.rhino.head.ast.Symbol();
        com.google.javascript.rhino.head.Node node52 = symbol51.getNode();
        com.google.javascript.rhino.head.Node node53 = symbol51.getNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode55 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int56 = scriptNode55.getEndLineno();
        int int57 = scriptNode55.getBaseLineno();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode58 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int59 = functionNode58.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode61 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        java.lang.String str62 = functionNode58.toStringTree(scriptNode61);
        functionNode58.setFunctionIsGetter();
        com.google.javascript.rhino.head.ast.AstNode astNode64 = functionNode58.getBody();
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList65 = functionNode58.getParams();
        scriptNode55.replaceWith((com.google.javascript.rhino.head.ast.Scope) functionNode58);
        symbol51.setNode((com.google.javascript.rhino.head.Node) functionNode58);
        java.lang.String str68 = symbol51.getName();
        boolean boolean69 = functionNodeList50.remove((java.lang.Object) str68);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode70 = new com.google.javascript.rhino.head.ast.ScriptNode();
        int int71 = scriptNode70.getEncodedSourceEnd();
        java.lang.String str73 = scriptNode70.toSource((int) (byte) 10);
        scriptNode70.setEncodedSourceEnd((int) (short) -1);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList76 = scriptNode70.getFunctions();
        scriptNode70.removeChildren();
        int int78 = functionNodeList50.lastIndexOf((java.lang.Object) scriptNode70);
        java.util.ListIterator<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeItor79 = functionNodeList50.listIterator();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean80 = functionNodeList16.addAll(723930335, (java.util.Collection<com.google.javascript.rhino.head.ast.FunctionNode>) functionNodeList50);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 723930335, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNull(scope9);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "                    {\n                      {\n                      }\n                    }\n" + "'", str13, "                    {\n                      {\n                      }\n                    }\n");
        org.junit.Assert.assertNotNull(functionNodeList16);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertNull(scopeList25);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertNotNull(astNodeList43);
        org.junit.Assert.assertNotNull(scriptNode45);
        org.junit.Assert.assertNull(astRoot46);
        org.junit.Assert.assertNotNull(functionNodeList50);
        org.junit.Assert.assertNull(node52);
        org.junit.Assert.assertNull(node53);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1));
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-1) + "'", int59 == (-1));
        org.junit.Assert.assertNull(str62);
        org.junit.Assert.assertNull(astNode64);
        org.junit.Assert.assertNotNull(astNodeList65);
        org.junit.Assert.assertNull(str68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + (-1) + "'", int71 == (-1));
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "                    {\n                    }\n" + "'", str73, "                    {\n                    }\n");
        org.junit.Assert.assertNotNull(functionNodeList76);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + (-1) + "'", int78 == (-1));
        org.junit.Assert.assertNotNull(functionNodeItor79);
    }

    @Test
    public void test09613() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09613");
        com.google.javascript.rhino.head.ast.RegExpLiteral regExpLiteral1 = new com.google.javascript.rhino.head.ast.RegExpLiteral((int) (byte) -1);
        regExpLiteral1.setValue("          ");
        regExpLiteral1.setValue("            ");
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor6 = null;
        // The following exception was thrown during execution in test generation
        try {
            regExpLiteral1.visit(nodeVisitor6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test09614() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09614");
        com.google.javascript.rhino.head.Node node2 = com.google.javascript.rhino.head.Node.newString((-631440296), "  ");
        org.junit.Assert.assertNotNull(node2);
    }

    @Test
    public void test09615() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09615");
        com.google.javascript.rhino.head.ast.Jump jump3 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump3.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump7 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump3, 0);
        com.google.javascript.rhino.head.ast.Jump jump11 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump11.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump15 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump11, 0);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode16 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int17 = functionNode16.getLp();
        functionNode16.setEncodedSource("");
        functionNode16.flattenSymbolTable(false);
        jump3.addChildAfter((com.google.javascript.rhino.head.Node) jump11, (com.google.javascript.rhino.head.Node) functionNode16);
        int int23 = functionNode16.getLength();
        com.google.javascript.rhino.head.Node node25 = functionNode16.setType(21);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode26 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode27 = functionNode26.getTop();
        com.google.javascript.rhino.head.ast.Name name28 = null;
        functionNode26.setFunctionName(name28);
        int int30 = functionNode26.getLength();
        functionNode26.setFunctionType(19);
        functionNode16.addParam((com.google.javascript.rhino.head.ast.AstNode) functionNode26);
        functionNode16.removeProp((int) (short) 10);
        com.google.javascript.rhino.head.ast.AstRoot astRoot36 = functionNode16.getAstRoot();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap37 = functionNode16.getSymbolTable();
        functionNode16.setSourceName("                                                                      {\n                                                                      }\n");
        com.google.javascript.rhino.head.ast.RegExpLiteral regExpLiteral41 = new com.google.javascript.rhino.head.ast.RegExpLiteral((int) (short) 1);
        java.lang.String str43 = regExpLiteral41.toSource((int) (byte) 10);
        regExpLiteral41.setFlags("-1\tSCRIPT -1 1\n");
        java.lang.String str47 = regExpLiteral41.toSource((int) (short) -1);
        regExpLiteral41.setFlags("EOF");
        java.lang.String str51 = regExpLiteral41.makeIndent(10);
        regExpLiteral41.setValue("/null/EOF");
        regExpLiteral41.removeProp((-1305759086));
        // The following exception was thrown during execution in test generation
        try {
            int int56 = functionNode16.getIndexForNameNode((com.google.javascript.rhino.head.Node) regExpLiteral41);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: com.google.javascript.rhino.head.ast.RegExpLiteral cannot be cast to com.google.javascript.rhino.head.ast.Name");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertNotNull(node25);
        org.junit.Assert.assertNotNull(scriptNode27);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 1 + "'", int30 == 1);
        org.junit.Assert.assertNull(astRoot36);
        org.junit.Assert.assertNull(strMap37);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "                    /null/" + "'", str43, "                    /null/");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "/null/-1\tSCRIPT -1 1\n" + "'", str47, "/null/-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "                    " + "'", str51, "                    ");
    }

    @Test
    public void test09616() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09616");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 10);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode2 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode3 = functionNode2.getTop();
        functionNode2.setParens((int) (byte) 1, (int) (short) 1);
        functionNode2.setEncodedSourceStart((-1));
        functionNode2.setFunctionIsGetter();
        scope1.addChildToFront((com.google.javascript.rhino.head.Node) functionNode2);
        functionNode2.setRp(19);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int15 = scriptNode14.getEndLineno();
        int int16 = scriptNode14.getBaseLineno();
        com.google.javascript.rhino.head.ast.Jump jump19 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode21 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int22 = scriptNode21.getEndLineno();
        int int23 = scriptNode21.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList24 = scriptNode21.getChildScopes();
        jump19.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode21);
        java.lang.String str26 = scriptNode21.debugPrint();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode14, (com.google.javascript.rhino.head.ast.Scope) scriptNode21);
        com.google.javascript.rhino.head.ast.Scope scope28 = new com.google.javascript.rhino.head.ast.Scope();
        scriptNode21.target = scope28;
        java.lang.String str30 = functionNode2.toStringTree(scriptNode21);
        java.lang.String str32 = scriptNode21.toSource((int) (short) 10);
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap33 = scriptNode21.getSymbolTable();
        int int34 = strMap33.size();
        com.google.javascript.rhino.head.ast.Jump jump39 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump39.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump43 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump39, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode45 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int46 = scriptNode45.getEndLineno();
        int int47 = scriptNode45.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList48 = scriptNode45.getChildScopes();
        com.google.javascript.rhino.head.Node node49 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump39, (com.google.javascript.rhino.head.Node) scriptNode45);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList50 = scriptNode45.getFunctions();
        functionNodeList50.clear();
        functionNodeList50.clear();
        com.google.javascript.rhino.head.ast.Jump jump57 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump57.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump61 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump57, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode63 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int64 = scriptNode63.getEndLineno();
        int int65 = scriptNode63.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList66 = scriptNode63.getChildScopes();
        com.google.javascript.rhino.head.Node node67 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump57, (com.google.javascript.rhino.head.Node) scriptNode63);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList68 = scriptNode63.getFunctions();
        java.util.Spliterator<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeSpliterator69 = functionNodeList68.spliterator();
        int int71 = functionNodeList68.indexOf((java.lang.Object) (byte) 10);
        boolean boolean72 = functionNodeList50.retainAll((java.util.Collection<com.google.javascript.rhino.head.ast.FunctionNode>) functionNodeList68);
        boolean boolean73 = strMap33.containsKey((java.lang.Object) functionNodeList50);
        java.util.Collection<com.google.javascript.rhino.head.ast.Symbol> symbolCollection74 = strMap33.values();
        com.google.javascript.rhino.head.Node node76 = com.google.javascript.rhino.head.Node.newNumber((double) '#');
        com.google.javascript.rhino.head.ast.Symbol symbol77 = strMap33.get((java.lang.Object) '#');
        java.util.Collection<com.google.javascript.rhino.head.ast.Symbol> symbolCollection78 = strMap33.values();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode79 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int80 = functionNode79.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode81 = functionNode79.getTop();
        com.google.javascript.rhino.head.Node node82 = functionNode79.getLastSibling();
        com.google.javascript.rhino.head.ast.Symbol symbol83 = strMap33.get((java.lang.Object) node82);
        java.util.Collection<com.google.javascript.rhino.head.ast.Symbol> symbolCollection84 = strMap33.values();
        boolean boolean85 = strMap33.isEmpty();
        org.junit.Assert.assertNotNull(scriptNode3);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNull(scopeList24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str26, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "                    {\n                    }\n" + "'", str32, "                    {\n                    }\n");
        org.junit.Assert.assertNotNull(strMap33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertNull(scopeList48);
        org.junit.Assert.assertNotNull(functionNodeList50);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + (-1) + "'", int64 == (-1));
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + (-1) + "'", int65 == (-1));
        org.junit.Assert.assertNull(scopeList66);
        org.junit.Assert.assertNotNull(functionNodeList68);
        org.junit.Assert.assertNotNull(functionNodeSpliterator69);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + (-1) + "'", int71 == (-1));
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(symbolCollection74);
        org.junit.Assert.assertNotNull(node76);
        org.junit.Assert.assertNull(symbol77);
        org.junit.Assert.assertNotNull(symbolCollection78);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + (-1) + "'", int80 == (-1));
        org.junit.Assert.assertNotNull(scriptNode81);
        org.junit.Assert.assertNotNull(node82);
        org.junit.Assert.assertNull(symbol83);
        org.junit.Assert.assertNotNull(symbolCollection84);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
    }

    @Test
    public void test09617() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09617");
        com.google.javascript.rhino.head.Token.CommentType commentType4 = com.google.javascript.rhino.head.Token.CommentType.HTML;
        com.google.javascript.rhino.head.ast.Comment comment6 = new com.google.javascript.rhino.head.ast.Comment(20, 1, commentType4, "109");
        java.lang.String str8 = comment6.toSource(19);
        com.google.javascript.rhino.head.ast.Scope scope11 = new com.google.javascript.rhino.head.ast.Scope((int) (short) -1, 0);
        com.google.javascript.rhino.head.Node node12 = new com.google.javascript.rhino.head.Node((int) (short) 10, (com.google.javascript.rhino.head.Node) comment6, (com.google.javascript.rhino.head.Node) scope11);
        java.lang.String str13 = scope11.toSource();
        com.google.javascript.rhino.head.Node node15 = new com.google.javascript.rhino.head.Node(281549544, (com.google.javascript.rhino.head.Node) scope11, 17);
        org.junit.Assert.assertTrue("'" + commentType4 + "' != '" + com.google.javascript.rhino.head.Token.CommentType.HTML + "'", commentType4.equals(com.google.javascript.rhino.head.Token.CommentType.HTML));
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "                                      109" + "'", str8, "                                      109");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "{\n}\n" + "'", str13, "{\n}\n");
    }

    @Test
    public void test09618() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09618");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 10);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode2 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode3 = functionNode2.getTop();
        functionNode2.setParens((int) (byte) 1, (int) (short) 1);
        functionNode2.setEncodedSourceStart((-1));
        functionNode2.setFunctionIsGetter();
        scope1.addChildToFront((com.google.javascript.rhino.head.Node) functionNode2);
        functionNode2.setRp(19);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int15 = scriptNode14.getEndLineno();
        int int16 = scriptNode14.getBaseLineno();
        com.google.javascript.rhino.head.ast.Jump jump19 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode21 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int22 = scriptNode21.getEndLineno();
        int int23 = scriptNode21.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList24 = scriptNode21.getChildScopes();
        jump19.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode21);
        java.lang.String str26 = scriptNode21.debugPrint();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode14, (com.google.javascript.rhino.head.ast.Scope) scriptNode21);
        com.google.javascript.rhino.head.ast.Scope scope28 = new com.google.javascript.rhino.head.ast.Scope();
        scriptNode21.target = scope28;
        java.lang.String str30 = functionNode2.toStringTree(scriptNode21);
        boolean boolean31 = functionNode2.hasConsistentReturnUsage();
        com.google.javascript.rhino.head.ast.Jump jump34 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode36 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int37 = scriptNode36.getEndLineno();
        int int38 = scriptNode36.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList39 = scriptNode36.getChildScopes();
        jump34.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode36);
        java.lang.String str41 = scriptNode36.debugPrint();
        java.lang.Object obj43 = scriptNode36.getProp((-1));
        int int44 = scriptNode36.getAbsolutePosition();
        functionNode2.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode36);
        java.lang.String str46 = functionNode2.getName();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode47 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int48 = functionNode47.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode49 = functionNode47.getTop();
        com.google.javascript.rhino.head.ast.Name name50 = null;
        functionNode47.setFunctionName(name50);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode52 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode53 = functionNode52.getTop();
        functionNode47.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode52);
        com.google.javascript.rhino.head.ast.Scope scope57 = new com.google.javascript.rhino.head.ast.Scope((int) (short) -1, 0);
        functionNode47.replaceWith(scope57);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode59 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int60 = functionNode59.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode61 = functionNode59.getTop();
        com.google.javascript.rhino.head.ast.Name name62 = null;
        functionNode59.setFunctionName(name62);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode64 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode65 = functionNode64.getTop();
        functionNode59.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode64);
        int int67 = functionNode47.addFunction(functionNode59);
        int int68 = functionNode59.getLineno();
        int int69 = functionNode59.getFunctionType();
        functionNode59.setRelative((-1262414679));
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap72 = functionNode59.getSymbolTable();
        functionNode2.setParentScope((com.google.javascript.rhino.head.ast.Scope) functionNode59);
        boolean boolean74 = functionNode2.requiresActivation();
        com.google.javascript.rhino.head.ast.RegExpLiteral regExpLiteral77 = new com.google.javascript.rhino.head.ast.RegExpLiteral((-1), 3);
        java.lang.String str78 = regExpLiteral77.getJsDoc();
        functionNode2.addRegExp(regExpLiteral77);
        java.lang.String str80 = regExpLiteral77.getFlags();
        org.junit.Assert.assertNotNull(scriptNode3);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNull(scopeList24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str26, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNull(scopeList39);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str41, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertNull(obj43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "" + "'", str46, "");
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
        org.junit.Assert.assertNotNull(scriptNode49);
        org.junit.Assert.assertNotNull(scriptNode53);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-1) + "'", int60 == (-1));
        org.junit.Assert.assertNotNull(scriptNode61);
        org.junit.Assert.assertNotNull(scriptNode65);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 0 + "'", int67 == 0);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + (-1) + "'", int68 == (-1));
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 0 + "'", int69 == 0);
        org.junit.Assert.assertNull(strMap72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNull(str78);
        org.junit.Assert.assertNull(str80);
    }

    @Test
    public void test09619() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09619");
        com.google.javascript.rhino.head.ast.Jump jump4 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump4.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump8 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump4, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int11 = scriptNode10.getEndLineno();
        int int12 = scriptNode10.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList13 = scriptNode10.getChildScopes();
        com.google.javascript.rhino.head.Node node14 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump4, (com.google.javascript.rhino.head.Node) scriptNode10);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList15 = scriptNode10.getFunctions();
        int int16 = functionNodeList15.size();
        functionNodeList15.clear();
        int int19 = functionNodeList15.indexOf((java.lang.Object) 10L);
        com.google.javascript.rhino.head.ast.Jump jump24 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump24.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump28 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump24, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode30 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int31 = scriptNode30.getEndLineno();
        int int32 = scriptNode30.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList33 = scriptNode30.getChildScopes();
        com.google.javascript.rhino.head.Node node34 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump24, (com.google.javascript.rhino.head.Node) scriptNode30);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList35 = scriptNode30.getFunctions();
        functionNodeList35.clear();
        functionNodeList35.clear();
        com.google.javascript.rhino.head.ast.Jump jump42 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump42.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump46 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump42, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode48 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int49 = scriptNode48.getEndLineno();
        int int50 = scriptNode48.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList51 = scriptNode48.getChildScopes();
        com.google.javascript.rhino.head.Node node52 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump42, (com.google.javascript.rhino.head.Node) scriptNode48);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList53 = scriptNode48.getFunctions();
        java.util.Spliterator<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeSpliterator54 = functionNodeList53.spliterator();
        int int56 = functionNodeList53.indexOf((java.lang.Object) (byte) 10);
        boolean boolean57 = functionNodeList35.retainAll((java.util.Collection<com.google.javascript.rhino.head.ast.FunctionNode>) functionNodeList53);
        boolean boolean58 = functionNodeList15.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.FunctionNode>) functionNodeList35);
        com.google.javascript.rhino.head.ast.Jump jump63 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump63.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump67 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump63, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode69 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int70 = scriptNode69.getEndLineno();
        int int71 = scriptNode69.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList72 = scriptNode69.getChildScopes();
        com.google.javascript.rhino.head.Node node73 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump63, (com.google.javascript.rhino.head.Node) scriptNode69);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList74 = scriptNode69.getFunctions();
        functionNodeList74.clear();
        int int77 = functionNodeList74.lastIndexOf((java.lang.Object) (-1L));
        com.google.javascript.rhino.head.ast.Jump jump82 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump82.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump86 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump82, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode88 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int89 = scriptNode88.getEndLineno();
        int int90 = scriptNode88.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList91 = scriptNode88.getChildScopes();
        com.google.javascript.rhino.head.Node node92 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump82, (com.google.javascript.rhino.head.Node) scriptNode88);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList93 = scriptNode88.getFunctions();
        functionNodeList93.clear();
        int int96 = functionNodeList93.lastIndexOf((java.lang.Object) (-1L));
        boolean boolean97 = functionNodeList74.removeAll((java.util.Collection<com.google.javascript.rhino.head.ast.FunctionNode>) functionNodeList93);
        boolean boolean98 = functionNodeList15.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.FunctionNode>) functionNodeList74);
        java.lang.Object[] objArray99 = functionNodeList15.toArray();
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNull(scopeList13);
        org.junit.Assert.assertNotNull(functionNodeList15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNull(scopeList33);
        org.junit.Assert.assertNotNull(functionNodeList35);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertNull(scopeList51);
        org.junit.Assert.assertNotNull(functionNodeList53);
        org.junit.Assert.assertNotNull(functionNodeSpliterator54);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1));
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + (-1) + "'", int70 == (-1));
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + (-1) + "'", int71 == (-1));
        org.junit.Assert.assertNull(scopeList72);
        org.junit.Assert.assertNotNull(functionNodeList74);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + (-1) + "'", int77 == (-1));
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + (-1) + "'", int89 == (-1));
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + (-1) + "'", int90 == (-1));
        org.junit.Assert.assertNull(scopeList91);
        org.junit.Assert.assertNotNull(functionNodeList93);
        org.junit.Assert.assertTrue("'" + int96 + "' != '" + (-1) + "'", int96 == (-1));
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + false + "'", boolean97 == false);
        org.junit.Assert.assertTrue("'" + boolean98 + "' != '" + false + "'", boolean98 == false);
        org.junit.Assert.assertNotNull(objArray99);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray99), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray99), "[]");
    }

    @Test
    public void test09620() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09620");
        com.google.javascript.rhino.head.ast.Jump jump4 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump4.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump8 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump4, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int11 = scriptNode10.getEndLineno();
        int int12 = scriptNode10.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList13 = scriptNode10.getChildScopes();
        com.google.javascript.rhino.head.Node node14 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump4, (com.google.javascript.rhino.head.Node) scriptNode10);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList15 = scriptNode10.getFunctions();
        functionNodeList15.clear();
        com.google.javascript.rhino.head.ast.Jump jump21 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump21.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump25 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump21, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode27 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int28 = scriptNode27.getEndLineno();
        int int29 = scriptNode27.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList30 = scriptNode27.getChildScopes();
        com.google.javascript.rhino.head.Node node31 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump21, (com.google.javascript.rhino.head.Node) scriptNode27);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList32 = scriptNode27.getFunctions();
        boolean boolean33 = functionNodeList15.removeAll((java.util.Collection<com.google.javascript.rhino.head.ast.FunctionNode>) functionNodeList32);
        java.util.Spliterator<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeSpliterator34 = functionNodeList15.spliterator();
        com.google.javascript.rhino.head.ast.Jump jump39 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump39.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump43 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump39, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode45 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int46 = scriptNode45.getEndLineno();
        int int47 = scriptNode45.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList48 = scriptNode45.getChildScopes();
        com.google.javascript.rhino.head.Node node49 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump39, (com.google.javascript.rhino.head.Node) scriptNode45);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList50 = scriptNode45.getFunctions();
        int int51 = functionNodeList50.size();
        com.google.javascript.rhino.head.ast.Jump jump57 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump57.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump61 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump57, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode63 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int64 = scriptNode63.getEndLineno();
        int int65 = scriptNode63.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList66 = scriptNode63.getChildScopes();
        com.google.javascript.rhino.head.Node node67 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump57, (com.google.javascript.rhino.head.Node) scriptNode63);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList68 = scriptNode63.getFunctions();
        functionNodeList68.clear();
        com.google.javascript.rhino.head.ast.Jump jump74 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump74.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump78 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump74, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode80 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int81 = scriptNode80.getEndLineno();
        int int82 = scriptNode80.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList83 = scriptNode80.getChildScopes();
        com.google.javascript.rhino.head.Node node84 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump74, (com.google.javascript.rhino.head.Node) scriptNode80);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList85 = scriptNode80.getFunctions();
        boolean boolean86 = functionNodeList68.removeAll((java.util.Collection<com.google.javascript.rhino.head.ast.FunctionNode>) functionNodeList85);
        boolean boolean87 = functionNodeList50.addAll(0, (java.util.Collection<com.google.javascript.rhino.head.ast.FunctionNode>) functionNodeList68);
        boolean boolean88 = functionNodeList15.containsAll((java.util.Collection<com.google.javascript.rhino.head.ast.FunctionNode>) functionNodeList68);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode90 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int91 = functionNode90.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode92 = functionNode90.getTop();
        boolean boolean93 = functionNode90.hasSideEffects();
        java.lang.String str94 = functionNode90.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode95 = functionNode90.getTop();
        int int96 = functionNode90.getLineno();
        boolean boolean97 = functionNode90.hasSideEffects();
        com.google.javascript.rhino.head.ast.AstNode astNode98 = functionNode90.getMemberExprNode();
        // The following exception was thrown during execution in test generation
        try {
            functionNodeList68.add((-631440296), functionNode90);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNull(scopeList13);
        org.junit.Assert.assertNotNull(functionNodeList15);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertNull(scopeList30);
        org.junit.Assert.assertNotNull(functionNodeList32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(functionNodeSpliterator34);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertNull(scopeList48);
        org.junit.Assert.assertNotNull(functionNodeList50);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + (-1) + "'", int64 == (-1));
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + (-1) + "'", int65 == (-1));
        org.junit.Assert.assertNull(scopeList66);
        org.junit.Assert.assertNotNull(functionNodeList68);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + (-1) + "'", int81 == (-1));
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + (-1) + "'", int82 == (-1));
        org.junit.Assert.assertNull(scopeList83);
        org.junit.Assert.assertNotNull(functionNodeList85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + (-1) + "'", int91 == (-1));
        org.junit.Assert.assertNotNull(scriptNode92);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + true + "'", boolean93 == true);
        org.junit.Assert.assertEquals("'" + str94 + "' != '" + "109" + "'", str94, "109");
        org.junit.Assert.assertNotNull(scriptNode95);
        org.junit.Assert.assertTrue("'" + int96 + "' != '" + (-1) + "'", int96 == (-1));
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + true + "'", boolean97 == true);
        org.junit.Assert.assertNull(astNode98);
    }

    @Test
    public void test09621() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09621");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode0 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int1 = functionNode0.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = functionNode0.getTop();
        boolean boolean3 = functionNode0.hasSideEffects();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList4 = functionNode0.getSymbols();
        functionNode0.setRp(5);
        com.google.javascript.rhino.head.ast.Scope scope7 = functionNode0.getEnclosingScope();
        int int8 = functionNode0.getRp();
        java.util.List<com.google.javascript.rhino.head.Node> nodeList9 = functionNode0.getResumptionPoints();
        boolean boolean10 = functionNode0.requiresActivation();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode12 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int13 = functionNode12.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = functionNode12.getTop();
        com.google.javascript.rhino.head.ast.Name name15 = null;
        functionNode12.setFunctionName(name15);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode17 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode18 = functionNode17.getTop();
        functionNode12.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode17);
        com.google.javascript.rhino.head.ast.Scope scope22 = new com.google.javascript.rhino.head.ast.Scope((int) (short) -1, 0);
        functionNode12.replaceWith(scope22);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode24 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int25 = functionNode24.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode26 = functionNode24.getTop();
        com.google.javascript.rhino.head.ast.Name name27 = null;
        functionNode24.setFunctionName(name27);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode29 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode30 = functionNode29.getTop();
        functionNode24.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode29);
        int int32 = functionNode12.addFunction(functionNode24);
        int int33 = functionNode24.getLineno();
        com.google.javascript.rhino.head.Node node35 = new com.google.javascript.rhino.head.Node((int) (short) -1, (com.google.javascript.rhino.head.Node) functionNode24, (int) (short) -1);
        functionNode0.addResumptionPoint((com.google.javascript.rhino.head.Node) functionNode24);
        java.lang.String str37 = functionNode24.getName();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-1) + "'", int1 == (-1));
        org.junit.Assert.assertNotNull(scriptNode2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(symbolList4);
        org.junit.Assert.assertNull(scope7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 5 + "'", int8 == 5);
        org.junit.Assert.assertNull(nodeList9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(scriptNode14);
        org.junit.Assert.assertNotNull(scriptNode18);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNotNull(scriptNode26);
        org.junit.Assert.assertNotNull(scriptNode30);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "" + "'", str37, "");
    }

    @Test
    public void test09622() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09622");
        com.google.javascript.rhino.head.ast.Jump jump5 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump5.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump9 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump5, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int12 = scriptNode11.getEndLineno();
        int int13 = scriptNode11.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList14 = scriptNode11.getChildScopes();
        com.google.javascript.rhino.head.Node node15 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump5, (com.google.javascript.rhino.head.Node) scriptNode11);
        com.google.javascript.rhino.head.ast.Jump jump16 = new com.google.javascript.rhino.head.ast.Jump(20, node15);
        com.google.javascript.rhino.head.ast.RegExpLiteral regExpLiteral20 = new com.google.javascript.rhino.head.ast.RegExpLiteral(35, 22);
        com.google.javascript.rhino.head.ast.Jump jump21 = new com.google.javascript.rhino.head.ast.Jump(6, (com.google.javascript.rhino.head.Node) regExpLiteral20);
        jump21.setRelative(21);
        jump21.setRelative(13);
        int int26 = jump16.compareTo((com.google.javascript.rhino.head.ast.AstNode) jump21);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode28 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode29 = functionNode28.getTop();
        functionNode28.setParens((int) (byte) 1, (int) (short) 1);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode33 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.Scope scope35 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 10);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode36 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode37 = functionNode36.getTop();
        functionNode36.setParens((int) (byte) 1, (int) (short) 1);
        functionNode36.setEncodedSourceStart((-1));
        functionNode36.setFunctionIsGetter();
        scope35.addChildToFront((com.google.javascript.rhino.head.Node) functionNode36);
        functionNode33.setBody((com.google.javascript.rhino.head.ast.AstNode) functionNode36);
        functionNode33.setFunctionIsSetter();
        int int47 = functionNode28.addFunction(functionNode33);
        java.lang.String str48 = functionNode28.getNextTempName();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode50 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int51 = scriptNode50.getEndLineno();
        int int52 = scriptNode50.getBaseLineno();
        scriptNode50.removeProp(0);
        scriptNode50.setEncodedSourceEnd(19);
        functionNode28.addParam((com.google.javascript.rhino.head.ast.AstNode) scriptNode50);
        int int58 = functionNode28.getFunctionCount();
        com.google.javascript.rhino.head.ast.Scope scope60 = functionNode28.getDefiningScope("                            {\n                            }\n");
        functionNode28.flattenSymbolTable(true);
        java.lang.String str63 = functionNode28.getName();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode64 = functionNode28.getEnclosingFunction();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap65 = functionNode28.getSymbolTable();
        jump16.putProp((-13), (java.lang.Object) functionNode28);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str68 = jump16.toSource((int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: 20");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNull(scopeList14);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 1 + "'", int26 == 1);
        org.junit.Assert.assertNotNull(scriptNode29);
        org.junit.Assert.assertNotNull(scriptNode37);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "$0" + "'", str48, "$0");
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1));
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 1 + "'", int58 == 1);
        org.junit.Assert.assertNull(scope60);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "" + "'", str63, "");
        org.junit.Assert.assertNull(functionNode64);
        org.junit.Assert.assertNull(strMap65);
    }

    @Test
    public void test09623() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09623");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 10);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode2 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode3 = functionNode2.getTop();
        functionNode2.setParens((int) (byte) 1, (int) (short) 1);
        functionNode2.setEncodedSourceStart((-1));
        functionNode2.setFunctionIsGetter();
        scope1.addChildToFront((com.google.javascript.rhino.head.Node) functionNode2);
        functionNode2.setRp(19);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int15 = scriptNode14.getEndLineno();
        int int16 = scriptNode14.getBaseLineno();
        com.google.javascript.rhino.head.ast.Jump jump19 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode21 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int22 = scriptNode21.getEndLineno();
        int int23 = scriptNode21.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList24 = scriptNode21.getChildScopes();
        jump19.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode21);
        java.lang.String str26 = scriptNode21.debugPrint();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode14, (com.google.javascript.rhino.head.ast.Scope) scriptNode21);
        com.google.javascript.rhino.head.ast.Scope scope28 = new com.google.javascript.rhino.head.ast.Scope();
        scriptNode21.target = scope28;
        java.lang.String str30 = functionNode2.toStringTree(scriptNode21);
        java.lang.String str32 = scriptNode21.toSource((int) (short) 10);
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap33 = scriptNode21.getSymbolTable();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode35 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int36 = scriptNode35.getEndLineno();
        int int37 = scriptNode35.getBaseLineno();
        scriptNode35.removeProp(0);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList40 = scriptNode35.getSymbols();
        boolean boolean41 = strMap33.containsValue((java.lang.Object) symbolList40);
        java.util.Collection<com.google.javascript.rhino.head.ast.Symbol> symbolCollection42 = strMap33.values();
        com.google.javascript.rhino.head.ast.Jump jump44 = new com.google.javascript.rhino.head.ast.Jump(1579347477);
        com.google.javascript.rhino.head.ast.Symbol symbol45 = strMap33.remove((java.lang.Object) 1579347477);
        com.google.javascript.rhino.head.ast.Jump jump48 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode50 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int51 = scriptNode50.getEndLineno();
        int int52 = scriptNode50.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList53 = scriptNode50.getChildScopes();
        jump48.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode50);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode56 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int57 = functionNode56.getLp();
        functionNode56.setEncodedSource("");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode60 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int61 = functionNode60.getLp();
        functionNode60.setEncodedSource("");
        functionNode60.flattenSymbolTable(false);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode66 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int67 = functionNode66.getLp();
        com.google.javascript.rhino.head.Node node69 = new com.google.javascript.rhino.head.Node((-1), (com.google.javascript.rhino.head.Node) functionNode56, (com.google.javascript.rhino.head.Node) functionNode60, (com.google.javascript.rhino.head.Node) functionNode66, (int) '#');
        jump48.addChildrenToFront((com.google.javascript.rhino.head.Node) functionNode56);
        boolean boolean71 = strMap33.containsValue((java.lang.Object) functionNode56);
        com.google.javascript.rhino.head.ast.Symbol symbol72 = new com.google.javascript.rhino.head.ast.Symbol();
        java.lang.String str73 = symbol72.getName();
        java.lang.String str74 = symbol72.getDeclTypeName();
        int int75 = symbol72.getDeclType();
        boolean boolean76 = strMap33.containsValue((java.lang.Object) int75);
        com.google.javascript.rhino.head.ast.Name name78 = null;
        com.google.javascript.rhino.head.ast.FunctionNode functionNode79 = new com.google.javascript.rhino.head.ast.FunctionNode(16, name78);
        int int80 = functionNode79.getBaseLineno();
        boolean boolean81 = strMap33.containsValue((java.lang.Object) int80);
        org.junit.Assert.assertNotNull(scriptNode3);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNull(scopeList24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str26, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "                    {\n                    }\n" + "'", str32, "                    {\n                    }\n");
        org.junit.Assert.assertNotNull(strMap33);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertNotNull(symbolList40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(symbolCollection42);
        org.junit.Assert.assertNull(symbol45);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1));
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertNull(scopeList53);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + (-1) + "'", int61 == (-1));
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + (-1) + "'", int67 == (-1));
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNull(str73);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "EOF" + "'", str74, "EOF");
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 0 + "'", int75 == 0);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + (-1) + "'", int80 == (-1));
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
    }

    @Test
    public void test09624() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09624");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode0 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int1 = functionNode0.getLp();
        functionNode0.setLineno(0);
        boolean boolean4 = functionNode0.requiresActivation();
        int int5 = functionNode0.getFunctionCount();
        int int6 = functionNode0.getEndLineno();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode7 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode8 = functionNode7.getTop();
        functionNode7.setParens((int) (byte) 1, (int) (short) 1);
        functionNode7.setEncodedSourceStart((-1));
        java.util.List<com.google.javascript.rhino.head.Node> nodeList14 = functionNode7.getResumptionPoints();
        com.google.javascript.rhino.head.ast.Scope scope16 = functionNode7.getDefiningScope("hi!");
        boolean boolean17 = functionNode7.isGetterOrSetter();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode18 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int19 = functionNode18.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode20 = functionNode18.getTop();
        com.google.javascript.rhino.head.ast.Name name21 = null;
        functionNode18.setFunctionName(name21);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode23 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode24 = functionNode23.getTop();
        functionNode18.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode23);
        int int26 = functionNode23.getRp();
        int int27 = functionNode23.getFunctionType();
        int int28 = functionNode7.addFunction(functionNode23);
        functionNode23.setRp((-1));
        java.lang.String str31 = functionNode23.getName();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode33 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int34 = functionNode33.getLp();
        functionNode33.setEncodedSource("");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode37 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int38 = functionNode37.getLp();
        functionNode37.setEncodedSource("");
        functionNode37.flattenSymbolTable(false);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode43 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int44 = functionNode43.getLp();
        com.google.javascript.rhino.head.Node node46 = new com.google.javascript.rhino.head.Node((-1), (com.google.javascript.rhino.head.Node) functionNode33, (com.google.javascript.rhino.head.Node) functionNode37, (com.google.javascript.rhino.head.Node) functionNode43, (int) '#');
        boolean boolean47 = functionNode43.isGenerator();
        int int48 = functionNode43.getFunctionType();
        boolean boolean49 = functionNode43.hasSideEffects();
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList50 = functionNode43.getStatements();
        functionNode23.setCompilerData((java.lang.Object) astNodeList50);
        functionNode0.setParams(astNodeList50);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode54 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int55 = scriptNode54.getEndLineno();
        int int56 = scriptNode54.getBaseLineno();
        com.google.javascript.rhino.head.ast.Jump jump59 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode61 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int62 = scriptNode61.getEndLineno();
        int int63 = scriptNode61.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList64 = scriptNode61.getChildScopes();
        jump59.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode61);
        java.lang.String str66 = scriptNode61.debugPrint();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode54, (com.google.javascript.rhino.head.ast.Scope) scriptNode61);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode68 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int69 = functionNode68.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode70 = functionNode68.getTop();
        com.google.javascript.rhino.head.ast.Name name71 = null;
        functionNode68.setFunctionName(name71);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode73 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int74 = functionNode73.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode76 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        java.lang.String str77 = functionNode73.toStringTree(scriptNode76);
        functionNode73.setFunctionIsGetter();
        int int79 = functionNode68.addFunction(functionNode73);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList80 = functionNode68.getSymbols();
        scriptNode61.setSymbols(symbolList80);
        functionNode0.setSymbols(symbolList80);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-1) + "'", int1 == (-1));
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(scriptNode8);
        org.junit.Assert.assertNull(nodeList14);
        org.junit.Assert.assertNull(scope16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(scriptNode20);
        org.junit.Assert.assertNotNull(scriptNode24);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "" + "'", str31, "");
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(astNodeList50);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1));
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1));
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + (-1) + "'", int62 == (-1));
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + (-1) + "'", int63 == (-1));
        org.junit.Assert.assertNull(scopeList64);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str66, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + (-1) + "'", int69 == (-1));
        org.junit.Assert.assertNotNull(scriptNode70);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + (-1) + "'", int74 == (-1));
        org.junit.Assert.assertNull(str77);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 0 + "'", int79 == 0);
        org.junit.Assert.assertNotNull(symbolList80);
    }

    @Test
    public void test09625() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09625");
        com.google.javascript.rhino.head.ast.Symbol symbol0 = new com.google.javascript.rhino.head.ast.Symbol();
        com.google.javascript.rhino.head.ast.Scope scope1 = symbol0.getContainingTable();
        int int2 = symbol0.getIndex();
        java.lang.String str3 = symbol0.getName();
        symbol0.setIndex(23);
        org.junit.Assert.assertNull(scope1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertNull(str3);
    }

    @Test
    public void test09626() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09626");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode1 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = functionNode1.getTop();
        com.google.javascript.rhino.head.ast.Name name3 = null;
        functionNode1.setFunctionName(name3);
        boolean boolean5 = functionNode1.requiresActivation();
        com.google.javascript.rhino.head.ast.Jump jump9 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump9.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump13 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump9, 0);
        com.google.javascript.rhino.head.ast.Jump jump17 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump17.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump21 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump17, 0);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode22 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int23 = functionNode22.getLp();
        functionNode22.setEncodedSource("");
        functionNode22.flattenSymbolTable(false);
        jump9.addChildAfter((com.google.javascript.rhino.head.Node) jump17, (com.google.javascript.rhino.head.Node) functionNode22);
        com.google.javascript.rhino.head.Node node29 = functionNode22.target;
        functionNode1.setBody((com.google.javascript.rhino.head.ast.AstNode) functionNode22);
        com.google.javascript.rhino.head.Node node32 = new com.google.javascript.rhino.head.Node(10, (com.google.javascript.rhino.head.Node) functionNode22, 10);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode33 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int34 = functionNode33.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode35 = functionNode33.getTop();
        com.google.javascript.rhino.head.ast.Name name36 = null;
        functionNode33.setFunctionName(name36);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode38 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode39 = functionNode38.getTop();
        functionNode33.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode38);
        com.google.javascript.rhino.head.ast.Scope scope43 = new com.google.javascript.rhino.head.ast.Scope((int) (short) -1, 0);
        functionNode33.replaceWith(scope43);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode45 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int46 = functionNode45.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode47 = functionNode45.getTop();
        com.google.javascript.rhino.head.ast.Name name48 = null;
        functionNode45.setFunctionName(name48);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode50 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode51 = functionNode50.getTop();
        functionNode45.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode50);
        int int53 = functionNode33.addFunction(functionNode45);
        functionNode33.flattenSymbolTable(false);
        functionNode22.setParent((com.google.javascript.rhino.head.ast.AstNode) functionNode33);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode57 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int58 = functionNode57.getLp();
        functionNode57.setEncodedSource("");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode61 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int62 = functionNode61.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode63 = functionNode61.getTop();
        com.google.javascript.rhino.head.ast.Name name64 = null;
        functionNode61.setFunctionName(name64);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode66 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode67 = functionNode66.getTop();
        functionNode61.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode66);
        int int69 = functionNode66.getRp();
        int int70 = functionNode66.getFunctionType();
        functionNode57.addParam((com.google.javascript.rhino.head.ast.AstNode) functionNode66);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode72 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int73 = functionNode72.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode74 = functionNode72.getTop();
        com.google.javascript.rhino.head.Node node75 = functionNode72.getLastSibling();
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList76 = functionNode72.getParams();
        functionNode57.setParams(astNodeList76);
        functionNode57.setIsExpressionClosure(true);
        int int82 = functionNode57.getIntProp(6, 4);
        com.google.javascript.rhino.head.ast.AstNode astNode83 = functionNode57.getBody();
        java.lang.String str84 = functionNode57.getNextTempName();
        int int85 = functionNode57.getEncodedSourceStart();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) functionNode33, (com.google.javascript.rhino.head.ast.Scope) functionNode57);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList87 = functionNode33.getFunctions();
        functionNodeList87.clear();
        org.junit.Assert.assertNotNull(scriptNode2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNull(node29);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertNotNull(scriptNode35);
        org.junit.Assert.assertNotNull(scriptNode39);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertNotNull(scriptNode47);
        org.junit.Assert.assertNotNull(scriptNode51);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + (-1) + "'", int58 == (-1));
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + (-1) + "'", int62 == (-1));
        org.junit.Assert.assertNotNull(scriptNode63);
        org.junit.Assert.assertNotNull(scriptNode67);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + (-1) + "'", int69 == (-1));
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 0 + "'", int70 == 0);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + (-1) + "'", int73 == (-1));
        org.junit.Assert.assertNotNull(scriptNode74);
        org.junit.Assert.assertNotNull(node75);
        org.junit.Assert.assertNotNull(astNodeList76);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 4 + "'", int82 == 4);
        org.junit.Assert.assertNull(astNode83);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "$0" + "'", str84, "$0");
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + (-1) + "'", int85 == (-1));
        org.junit.Assert.assertNotNull(functionNodeList87);
    }

    @Test
    public void test09627() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09627");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode0 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int1 = functionNode0.getLp();
        functionNode0.setLength(19);
        boolean boolean4 = functionNode0.isGetter();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-1) + "'", int1 == (-1));
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    }

    @Test
    public void test09628() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09628");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode0 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int1 = functionNode0.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = functionNode0.getTop();
        com.google.javascript.rhino.head.ast.Name name3 = null;
        functionNode0.setFunctionName(name3);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode5 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = functionNode5.getTop();
        functionNode0.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode5);
        java.lang.String str8 = functionNode0.getNextTempName();
        java.lang.String str9 = functionNode0.getEncodedSource();
        functionNode0.setIsGenerator();
        functionNode0.setBaseLineno(48);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode14 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int15 = functionNode14.getLp();
        functionNode14.setEncodedSource("");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode18 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int19 = functionNode18.getLp();
        functionNode18.setEncodedSource("");
        functionNode18.flattenSymbolTable(false);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode24 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int25 = functionNode24.getLp();
        com.google.javascript.rhino.head.Node node27 = new com.google.javascript.rhino.head.Node((-1), (com.google.javascript.rhino.head.Node) functionNode14, (com.google.javascript.rhino.head.Node) functionNode18, (com.google.javascript.rhino.head.Node) functionNode24, (int) '#');
        functionNode24.setEncodedSourceStart(25);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode31 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode32 = functionNode31.getTop();
        functionNode31.setParens((int) (byte) 1, (int) (short) 1);
        int int36 = functionNode31.getRp();
        com.google.javascript.rhino.head.Node node39 = com.google.javascript.rhino.head.Node.newString((int) (byte) 100, "");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode40 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int41 = functionNode40.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode43 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        java.lang.String str44 = functionNode40.toStringTree(scriptNode43);
        com.google.javascript.rhino.head.ast.Scope scope46 = scriptNode43.getDefiningScope("");
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList47 = scriptNode43.getSymbols();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode49 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int50 = scriptNode49.getEndLineno();
        int int51 = scriptNode49.getBaseLineno();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode43, (com.google.javascript.rhino.head.ast.Scope) scriptNode49);
        java.lang.String str53 = scriptNode49.getEncodedSource();
        com.google.javascript.rhino.head.Node node55 = new com.google.javascript.rhino.head.Node(136, (com.google.javascript.rhino.head.Node) functionNode31, node39, (com.google.javascript.rhino.head.Node) scriptNode49, (int) (short) 0);
        functionNode24.setParent((com.google.javascript.rhino.head.ast.AstNode) functionNode31);
        functionNode0.target = functionNode24;
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList58 = functionNode0.getSymbols();
        com.google.javascript.rhino.head.Node node60 = functionNode0.setType((int) (short) 1);
        java.lang.String str61 = functionNode0.getNextTempName();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str63 = functionNode0.toSource(25);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-1) + "'", int1 == (-1));
        org.junit.Assert.assertNotNull(scriptNode2);
        org.junit.Assert.assertNotNull(scriptNode6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "$0" + "'", str8, "$0");
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNotNull(scriptNode32);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 1 + "'", int36 == 1);
        org.junit.Assert.assertNotNull(node39);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertNull(scope46);
        org.junit.Assert.assertNotNull(symbolList47);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1));
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertNotNull(symbolList58);
        org.junit.Assert.assertNotNull(node60);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "$1" + "'", str61, "$1");
    }

    @Test
    public void test09629() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09629");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode0 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int1 = functionNode0.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = functionNode0.getTop();
        com.google.javascript.rhino.head.ast.Jump jump8 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump8.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump12 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump8, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int15 = scriptNode14.getEndLineno();
        int int16 = scriptNode14.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList17 = scriptNode14.getChildScopes();
        com.google.javascript.rhino.head.Node node18 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump8, (com.google.javascript.rhino.head.Node) scriptNode14);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode20 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int21 = scriptNode20.getEndLineno();
        com.google.javascript.rhino.head.ast.RegExpLiteral regExpLiteral23 = new com.google.javascript.rhino.head.ast.RegExpLiteral((int) (short) 1);
        java.lang.String str25 = regExpLiteral23.toSource((int) (byte) 10);
        regExpLiteral23.setFlags("-1\tSCRIPT -1 1\n");
        regExpLiteral23.removeProp(8);
        com.google.javascript.rhino.head.Node node31 = new com.google.javascript.rhino.head.Node(10, node18, (com.google.javascript.rhino.head.Node) scriptNode20, (com.google.javascript.rhino.head.Node) regExpLiteral23, 3);
        java.lang.String str33 = regExpLiteral23.makeIndent((int) (short) 100);
        int int34 = regExpLiteral23.getType();
        functionNode0.setMemberExprNode((com.google.javascript.rhino.head.ast.AstNode) regExpLiteral23);
        com.google.javascript.rhino.head.ast.Name name36 = null;
        functionNode0.setFunctionName(name36);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode39 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int40 = scriptNode39.getEndLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode42 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int43 = scriptNode42.getEndLineno();
        scriptNode39.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode42);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode45 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int46 = functionNode45.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode47 = functionNode45.getTop();
        boolean boolean48 = functionNode45.hasSideEffects();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode50 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int51 = scriptNode50.getEndLineno();
        int int52 = scriptNode50.getBaseLineno();
        com.google.javascript.rhino.head.ast.Jump jump55 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode57 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int58 = scriptNode57.getEndLineno();
        int int59 = scriptNode57.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList60 = scriptNode57.getChildScopes();
        jump55.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode57);
        java.lang.String str62 = scriptNode57.debugPrint();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode50, (com.google.javascript.rhino.head.ast.Scope) scriptNode57);
        com.google.javascript.rhino.head.ast.Scope scope64 = new com.google.javascript.rhino.head.ast.Scope();
        scriptNode57.target = scope64;
        functionNode45.addChildScope(scope64);
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode42, (com.google.javascript.rhino.head.ast.Scope) functionNode45);
        int int68 = functionNode45.getFunctionCount();
        com.google.javascript.rhino.head.ast.Name name69 = null;
        functionNode45.setFunctionName(name69);
        int int73 = functionNode45.getIntProp(3, 0);
        functionNode45.setEndLineno(48);
        functionNode45.setEncodedSourceBounds(1579347477, 136);
        int int79 = functionNode0.addFunction(functionNode45);
        functionNode0.flattenSymbolTable(false);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList82 = functionNode0.getSymbols();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-1) + "'", int1 == (-1));
        org.junit.Assert.assertNotNull(scriptNode2);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNull(scopeList17);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "                    /null/" + "'", str25, "                    /null/");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "                                                                                                                                                                                                        " + "'", str33, "                                                                                                                                                                                                        ");
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 48 + "'", int34 == 48);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertNotNull(scriptNode47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1));
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + (-1) + "'", int58 == (-1));
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-1) + "'", int59 == (-1));
        org.junit.Assert.assertNull(scopeList60);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str62, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 0 + "'", int68 == 0);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 0 + "'", int73 == 0);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 0 + "'", int79 == 0);
        org.junit.Assert.assertNotNull(symbolList82);
    }

    @Test
    public void test09630() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09630");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode0 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = functionNode0.getTop();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode3 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int4 = functionNode3.getLp();
        functionNode3.setEncodedSource("");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode7 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int8 = functionNode7.getLp();
        functionNode7.setEncodedSource("");
        functionNode7.flattenSymbolTable(false);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode13 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int14 = functionNode13.getLp();
        com.google.javascript.rhino.head.Node node16 = new com.google.javascript.rhino.head.Node((-1), (com.google.javascript.rhino.head.Node) functionNode3, (com.google.javascript.rhino.head.Node) functionNode7, (com.google.javascript.rhino.head.Node) functionNode13, (int) '#');
        com.google.javascript.rhino.head.ast.AstNode astNode17 = functionNode3.getBody();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode18 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int19 = functionNode18.getLp();
        functionNode18.setEncodedSource("");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode22 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int23 = functionNode22.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode24 = functionNode22.getTop();
        com.google.javascript.rhino.head.ast.Name name25 = null;
        functionNode22.setFunctionName(name25);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode27 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode28 = functionNode27.getTop();
        functionNode22.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode27);
        int int30 = functionNode27.getRp();
        int int31 = functionNode27.getFunctionType();
        functionNode18.addParam((com.google.javascript.rhino.head.ast.AstNode) functionNode27);
        com.google.javascript.rhino.head.ast.Scope scope33 = functionNode27.getEnclosingScope();
        functionNode3.setBody((com.google.javascript.rhino.head.ast.AstNode) functionNode27);
        int int35 = functionNode0.addFunction(functionNode3);
        functionNode0.setEncodedSourceEnd(350469479);
        com.google.javascript.rhino.head.ast.Scope scope39 = new com.google.javascript.rhino.head.ast.Scope((int) (byte) -1);
        functionNode0.addChild((com.google.javascript.rhino.head.ast.AstNode) scope39);
        int int41 = functionNode0.getLength();
        int int42 = functionNode0.getLineno();
        com.google.javascript.rhino.head.ast.Symbol symbol44 = functionNode0.getSymbol("1299931104\tSCRIPT 1299931104 1\n");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode46 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        com.google.javascript.rhino.head.ast.Comment comment47 = null;
        scriptNode46.setJsDocNode(comment47);
        com.google.javascript.rhino.head.Node node49 = scriptNode46.getLastChild();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode51 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.Scope scope53 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 10);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode54 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode55 = functionNode54.getTop();
        functionNode54.setParens((int) (byte) 1, (int) (short) 1);
        functionNode54.setEncodedSourceStart((-1));
        functionNode54.setFunctionIsGetter();
        scope53.addChildToFront((com.google.javascript.rhino.head.Node) functionNode54);
        functionNode51.setBody((com.google.javascript.rhino.head.ast.AstNode) functionNode54);
        com.google.javascript.rhino.head.ast.Jump jump65 = new com.google.javascript.rhino.head.ast.Jump(2, (com.google.javascript.rhino.head.Node) functionNode54, (int) (byte) 100);
        boolean boolean66 = functionNode54.hasConsistentReturnUsage();
        int int67 = scriptNode46.compareTo((com.google.javascript.rhino.head.ast.AstNode) functionNode54);
        functionNode54.setFunctionType((-793599801));
        // The following exception was thrown during execution in test generation
        try {
            int int70 = functionNode0.getIndexForNameNode((com.google.javascript.rhino.head.Node) functionNode54);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(scriptNode1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNull(astNode17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNotNull(scriptNode24);
        org.junit.Assert.assertNotNull(scriptNode28);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNotNull(scope33);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 1 + "'", int41 == 1);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertNull(symbol44);
        org.junit.Assert.assertNull(node49);
        org.junit.Assert.assertNotNull(scriptNode55);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
// flaky:         org.junit.Assert.assertTrue("'" + int67 + "' != '" + 1626238924 + "'", int67 == 1626238924);
    }

    @Test
    public void test09631() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09631");
        com.google.javascript.rhino.head.ast.Jump jump2 = new com.google.javascript.rhino.head.ast.Jump(24, 1579347477);
    }

    @Test
    public void test09632() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09632");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode0 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int1 = functionNode0.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = functionNode0.getTop();
        boolean boolean3 = functionNode0.hasSideEffects();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList4 = functionNode0.getSymbols();
        functionNode0.setRp(5);
        functionNode0.setParens((int) '#', 24);
        int int10 = functionNode0.getParamCount();
        com.google.javascript.rhino.head.ast.Jump jump13 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        com.google.javascript.rhino.head.ast.Scope scope15 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 10);
        jump13.addChildrenToBack((com.google.javascript.rhino.head.Node) scope15);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode17 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int18 = functionNode17.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode19 = functionNode17.getTop();
        com.google.javascript.rhino.head.ast.Name name20 = null;
        functionNode17.setFunctionName(name20);
        functionNode17.setIsGenerator();
        java.lang.String str23 = functionNode17.getEncodedSource();
        scope15.target = functionNode17;
        functionNode0.setMemberExprNode((com.google.javascript.rhino.head.ast.AstNode) functionNode17);
        com.google.javascript.rhino.head.ast.AstNode astNode26 = functionNode0.getBody();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode28 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int29 = scriptNode28.getEndLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode31 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int32 = scriptNode31.getEndLineno();
        scriptNode28.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode31);
        java.lang.String str34 = scriptNode28.getNextTempName();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode35 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.AstNode astNode36 = functionNode35.getParent();
        scriptNode28.setParentScope((com.google.javascript.rhino.head.ast.Scope) functionNode35);
        functionNode35.clearParentScope();
        functionNode35.putIntProp(19, (-462033282));
        functionNode0.replaceWith((com.google.javascript.rhino.head.ast.Scope) functionNode35);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-1) + "'", int1 == (-1));
        org.junit.Assert.assertNotNull(scriptNode2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(symbolList4);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNotNull(scriptNode19);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNull(astNode26);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "$0" + "'", str34, "$0");
        org.junit.Assert.assertNull(astNode36);
    }

    @Test
    public void test09633() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09633");
        com.google.javascript.rhino.head.Token.CommentType commentType4 = com.google.javascript.rhino.head.Token.CommentType.HTML;
        com.google.javascript.rhino.head.ast.Comment comment6 = new com.google.javascript.rhino.head.ast.Comment(20, 1, commentType4, "109");
        com.google.javascript.rhino.head.Token.CommentType commentType7 = comment6.getCommentType();
        com.google.javascript.rhino.head.ast.Comment comment9 = new com.google.javascript.rhino.head.ast.Comment(136, 327364487, commentType7, "FunctionNode");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode10 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int11 = functionNode10.getLp();
        functionNode10.setLp((int) (short) 1);
        int int16 = functionNode10.getIntProp(4, 26);
        boolean boolean17 = functionNode10.hasChildren();
        java.lang.String str18 = functionNode10.getNextTempName();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode19 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode20 = functionNode19.getTop();
        com.google.javascript.rhino.head.ast.Name name21 = null;
        functionNode19.setFunctionName(name21);
        functionNode10.addChildScope((com.google.javascript.rhino.head.ast.Scope) functionNode19);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode24 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int25 = functionNode24.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode26 = functionNode24.getTop();
        boolean boolean27 = functionNode24.hasSideEffects();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode29 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int30 = scriptNode29.getEndLineno();
        int int31 = scriptNode29.getBaseLineno();
        com.google.javascript.rhino.head.ast.Jump jump34 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode36 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int37 = scriptNode36.getEndLineno();
        int int38 = scriptNode36.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList39 = scriptNode36.getChildScopes();
        jump34.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode36);
        java.lang.String str41 = scriptNode36.debugPrint();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode29, (com.google.javascript.rhino.head.ast.Scope) scriptNode36);
        com.google.javascript.rhino.head.ast.Scope scope43 = new com.google.javascript.rhino.head.ast.Scope();
        scriptNode36.target = scope43;
        functionNode24.addChildScope(scope43);
        boolean boolean46 = functionNode24.hasConsistentReturnUsage();
        functionNode10.addResumptionPoint((com.google.javascript.rhino.head.Node) functionNode24);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode48 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode49 = functionNode48.getTop();
        com.google.javascript.rhino.head.ast.Name name50 = null;
        functionNode48.setFunctionName(name50);
        int int52 = functionNode48.getLength();
        functionNode48.setFunctionType(19);
        int int55 = functionNode48.getFunctionType();
        functionNode10.setTop((com.google.javascript.rhino.head.ast.ScriptNode) functionNode48);
        comment9.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode48);
        // The following exception was thrown during execution in test generation
        try {
            double double58 = functionNode48.getDouble();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: com.google.javascript.rhino.head.ast.FunctionNode cannot be cast to com.google.javascript.rhino.head.ast.NumberLiteral");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + commentType4 + "' != '" + com.google.javascript.rhino.head.Token.CommentType.HTML + "'", commentType4.equals(com.google.javascript.rhino.head.Token.CommentType.HTML));
        org.junit.Assert.assertTrue("'" + commentType7 + "' != '" + com.google.javascript.rhino.head.Token.CommentType.HTML + "'", commentType7.equals(com.google.javascript.rhino.head.Token.CommentType.HTML));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 26 + "'", int16 == 26);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "$0" + "'", str18, "$0");
        org.junit.Assert.assertNotNull(scriptNode20);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNotNull(scriptNode26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNull(scopeList39);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str41, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(scriptNode49);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 1 + "'", int52 == 1);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 19 + "'", int55 == 19);
    }

    @Test
    public void test09634() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09634");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode0 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = functionNode0.getTop();
        functionNode0.setParens((int) (byte) 1, (int) (short) 1);
        functionNode0.setEncodedSourceStart((-1));
        java.util.List<com.google.javascript.rhino.head.Node> nodeList7 = functionNode0.getResumptionPoints();
        com.google.javascript.rhino.head.ast.Scope scope9 = functionNode0.getDefiningScope("hi!");
        boolean boolean10 = functionNode0.isGetterOrSetter();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode11 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int12 = functionNode11.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode13 = functionNode11.getTop();
        com.google.javascript.rhino.head.ast.Name name14 = null;
        functionNode11.setFunctionName(name14);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode16 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode17 = functionNode16.getTop();
        functionNode11.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode16);
        int int19 = functionNode16.getRp();
        int int20 = functionNode16.getFunctionType();
        int int21 = functionNode0.addFunction(functionNode16);
        functionNode0.setFunctionIsGetter();
        functionNode0.setBaseLineno(25);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode25 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.Scope scope27 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 10);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode28 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode29 = functionNode28.getTop();
        functionNode28.setParens((int) (byte) 1, (int) (short) 1);
        functionNode28.setEncodedSourceStart((-1));
        functionNode28.setFunctionIsGetter();
        scope27.addChildToFront((com.google.javascript.rhino.head.Node) functionNode28);
        functionNode25.setBody((com.google.javascript.rhino.head.ast.AstNode) functionNode28);
        functionNode25.setFunctionIsSetter();
        functionNode0.addResumptionPoint((com.google.javascript.rhino.head.Node) functionNode25);
        int int40 = functionNode25.getLp();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList41 = functionNode25.getChildScopes();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode42 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int43 = functionNode42.getLp();
        functionNode42.setEncodedSource("");
        functionNode42.flattenSymbolTable(false);
        boolean boolean48 = functionNode42.requiresActivation();
        java.lang.String str49 = functionNode42.getEncodedSource();
        com.google.javascript.rhino.head.Node node51 = functionNode42.setType(19);
        functionNode42.setEncodedSourceEnd((-18802601));
        functionNode25.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode42);
        org.junit.Assert.assertNotNull(scriptNode1);
        org.junit.Assert.assertNull(nodeList7);
        org.junit.Assert.assertNull(scope9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(scriptNode13);
        org.junit.Assert.assertNotNull(scriptNode17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNotNull(scriptNode29);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertNull(scopeList41);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "" + "'", str49, "");
        org.junit.Assert.assertNotNull(node51);
    }

    @Test
    public void test09635() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09635");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode3 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int4 = functionNode3.getLp();
        functionNode3.setLp((int) (short) 1);
        int int9 = functionNode3.getIntProp(4, 26);
        com.google.javascript.rhino.head.ast.Jump jump10 = new com.google.javascript.rhino.head.ast.Jump(3, (com.google.javascript.rhino.head.Node) functionNode3);
        com.google.javascript.rhino.head.Node node11 = new com.google.javascript.rhino.head.Node((int) '4', (com.google.javascript.rhino.head.Node) functionNode3);
        functionNode3.setFunctionType(11);
        boolean boolean14 = functionNode3.hasChildren();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode15 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int16 = functionNode15.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode17 = functionNode15.getTop();
        com.google.javascript.rhino.head.ast.Name name18 = null;
        functionNode15.setFunctionName(name18);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode20 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.Scope scope22 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 10);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode23 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode24 = functionNode23.getTop();
        functionNode23.setParens((int) (byte) 1, (int) (short) 1);
        functionNode23.setEncodedSourceStart((-1));
        functionNode23.setFunctionIsGetter();
        scope22.addChildToFront((com.google.javascript.rhino.head.Node) functionNode23);
        functionNode20.setBody((com.google.javascript.rhino.head.ast.AstNode) functionNode23);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode33 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode34 = functionNode33.getTop();
        functionNode33.setParens((int) (byte) 1, (int) (short) 1);
        functionNode33.setEncodedSourceStart((-1));
        java.util.List<com.google.javascript.rhino.head.Node> nodeList40 = functionNode33.getResumptionPoints();
        int int41 = functionNode33.getLp();
        functionNode20.setBody((com.google.javascript.rhino.head.ast.AstNode) functionNode33);
        functionNode15.addParam((com.google.javascript.rhino.head.ast.AstNode) functionNode33);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode44 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int45 = functionNode44.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode46 = functionNode44.getTop();
        com.google.javascript.rhino.head.ast.Name name47 = null;
        functionNode44.setFunctionName(name47);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode49 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode50 = functionNode49.getTop();
        functionNode44.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode49);
        int int52 = functionNode49.getRp();
        int int53 = functionNode49.getFunctionType();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) functionNode33, (com.google.javascript.rhino.head.ast.Scope) functionNode49);
        functionNode3.setBody((com.google.javascript.rhino.head.ast.AstNode) functionNode49);
        com.google.javascript.rhino.head.Node node57 = new com.google.javascript.rhino.head.Node(19, (com.google.javascript.rhino.head.Node) functionNode3, (-592978996));
        com.google.javascript.rhino.head.ast.FunctionNode functionNode58 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int59 = functionNode58.getLp();
        functionNode58.setEncodedSource("");
        functionNode58.flattenSymbolTable(false);
        java.lang.String str64 = functionNode58.getName();
        functionNode58.setFunctionIsGetter();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode66 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int67 = functionNode66.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode68 = functionNode66.getTop();
        com.google.javascript.rhino.head.Node node69 = functionNode66.getLastSibling();
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList70 = functionNode66.getParams();
        functionNode58.setParams(astNodeList70);
        com.google.javascript.rhino.head.ast.Scope scope72 = functionNode58.getEnclosingScope();
        com.google.javascript.rhino.head.ast.AstNode astNode73 = functionNode58.getBody();
        // The following exception was thrown during execution in test generation
        try {
            node57.addChildrenToFront((com.google.javascript.rhino.head.Node) astNode73);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 26 + "'", int9 == 26);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(scriptNode17);
        org.junit.Assert.assertNotNull(scriptNode24);
        org.junit.Assert.assertNotNull(scriptNode34);
        org.junit.Assert.assertNull(nodeList40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 1 + "'", int41 == 1);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
        org.junit.Assert.assertNotNull(scriptNode46);
        org.junit.Assert.assertNotNull(scriptNode50);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-1) + "'", int59 == (-1));
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "" + "'", str64, "");
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + (-1) + "'", int67 == (-1));
        org.junit.Assert.assertNotNull(scriptNode68);
        org.junit.Assert.assertNotNull(node69);
        org.junit.Assert.assertNotNull(astNodeList70);
        org.junit.Assert.assertNull(scope72);
        org.junit.Assert.assertNull(astNode73);
    }

    @Test
    public void test09636() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09636");
        com.google.javascript.rhino.head.ast.Jump jump4 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump4.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump8 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump4, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int11 = scriptNode10.getEndLineno();
        int int12 = scriptNode10.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList13 = scriptNode10.getChildScopes();
        com.google.javascript.rhino.head.Node node14 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump4, (com.google.javascript.rhino.head.Node) scriptNode10);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList15 = scriptNode10.getChildScopes();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode17 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int18 = functionNode17.getLp();
        functionNode17.setEncodedSource("");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode21 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int22 = functionNode21.getLp();
        functionNode21.setEncodedSource("");
        functionNode21.flattenSymbolTable(false);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode27 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int28 = functionNode27.getLp();
        com.google.javascript.rhino.head.Node node30 = new com.google.javascript.rhino.head.Node((-1), (com.google.javascript.rhino.head.Node) functionNode17, (com.google.javascript.rhino.head.Node) functionNode21, (com.google.javascript.rhino.head.Node) functionNode27, (int) '#');
        com.google.javascript.rhino.head.ast.Comment comment31 = functionNode27.getJsDocNode();
        int int32 = functionNode27.getFunctionCount();
        java.lang.String str33 = scriptNode10.toStringTree((com.google.javascript.rhino.head.ast.ScriptNode) functionNode27);
        com.google.javascript.rhino.head.Node node34 = scriptNode10.getFirstChild();
        com.google.javascript.rhino.head.ast.Symbol symbol35 = new com.google.javascript.rhino.head.ast.Symbol();
        java.lang.String str36 = symbol35.getName();
        com.google.javascript.rhino.head.Node node37 = symbol35.getNode();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode38 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode39 = functionNode38.getTop();
        functionNode38.setParens((int) (byte) 1, (int) (short) 1);
        functionNode38.setEncodedSourceStart((-1));
        java.util.List<com.google.javascript.rhino.head.Node> nodeList45 = functionNode38.getResumptionPoints();
        com.google.javascript.rhino.head.ast.Scope scope47 = functionNode38.getDefiningScope("hi!");
        boolean boolean48 = functionNode38.isGetterOrSetter();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode50 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int51 = scriptNode50.getEndLineno();
        com.google.javascript.rhino.head.ast.Symbol symbol53 = scriptNode50.getSymbol("hi!");
        scriptNode50.putIntProp(3, 0);
        functionNode38.addResumptionPoint((com.google.javascript.rhino.head.Node) scriptNode50);
        functionNode38.setIsGenerator();
        symbol35.setNode((com.google.javascript.rhino.head.Node) functionNode38);
        com.google.javascript.rhino.head.ast.Scope scope60 = symbol35.getContainingTable();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode62 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int63 = functionNode62.getLp();
        functionNode62.setEncodedSource("");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode66 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int67 = functionNode66.getLp();
        functionNode66.setEncodedSource("");
        functionNode66.flattenSymbolTable(false);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode72 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int73 = functionNode72.getLp();
        com.google.javascript.rhino.head.Node node75 = new com.google.javascript.rhino.head.Node((-1), (com.google.javascript.rhino.head.Node) functionNode62, (com.google.javascript.rhino.head.Node) functionNode66, (com.google.javascript.rhino.head.Node) functionNode72, (int) '#');
        boolean boolean76 = functionNode72.isGenerator();
        com.google.javascript.rhino.head.ast.Scope scope78 = new com.google.javascript.rhino.head.ast.Scope();
        scope78.setBounds(0, 10);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode82 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode83 = functionNode82.getTop();
        int int84 = functionNode82.getRegexpCount();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode85 = functionNode82.getEnclosingFunction();
        java.lang.String str86 = scope78.toStringTree((com.google.javascript.rhino.head.ast.ScriptNode) functionNode82);
        functionNode72.putProp(1, (java.lang.Object) functionNode82);
        functionNode72.setParens(8, (int) (byte) 10);
        boolean boolean91 = functionNode72.isGetter();
        symbol35.setNode((com.google.javascript.rhino.head.Node) functionNode72);
        int int93 = scriptNode10.addFunction(functionNode72);
        int int94 = functionNode72.getFunctionType();
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNull(scopeList13);
        org.junit.Assert.assertNull(scopeList15);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNull(comment31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNull(node34);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNull(node37);
        org.junit.Assert.assertNotNull(scriptNode39);
        org.junit.Assert.assertNull(nodeList45);
        org.junit.Assert.assertNull(scope47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1));
        org.junit.Assert.assertNull(symbol53);
        org.junit.Assert.assertNull(scope60);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + (-1) + "'", int63 == (-1));
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + (-1) + "'", int67 == (-1));
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + (-1) + "'", int73 == (-1));
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(scriptNode83);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 0 + "'", int84 == 0);
        org.junit.Assert.assertNull(functionNode85);
        org.junit.Assert.assertNull(str86);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertTrue("'" + int93 + "' != '" + 0 + "'", int93 == 0);
        org.junit.Assert.assertTrue("'" + int94 + "' != '" + 0 + "'", int94 == 0);
    }

    @Test
    public void test09637() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09637");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode0 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int1 = functionNode0.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = functionNode0.getTop();
        boolean boolean3 = functionNode0.hasSideEffects();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int6 = scriptNode5.getEndLineno();
        int int7 = scriptNode5.getBaseLineno();
        com.google.javascript.rhino.head.ast.Jump jump10 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode12 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int13 = scriptNode12.getEndLineno();
        int int14 = scriptNode12.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList15 = scriptNode12.getChildScopes();
        jump10.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode12);
        java.lang.String str17 = scriptNode12.debugPrint();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode5, (com.google.javascript.rhino.head.ast.Scope) scriptNode12);
        com.google.javascript.rhino.head.ast.Scope scope19 = new com.google.javascript.rhino.head.ast.Scope();
        scriptNode12.target = scope19;
        functionNode0.addChildScope(scope19);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode22 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int23 = functionNode22.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode24 = functionNode22.getTop();
        com.google.javascript.rhino.head.ast.Name name25 = null;
        functionNode22.setFunctionName(name25);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode27 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode28 = functionNode27.getTop();
        functionNode22.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode27);
        com.google.javascript.rhino.head.ast.Scope scope32 = new com.google.javascript.rhino.head.ast.Scope((int) (short) -1, 0);
        functionNode22.replaceWith(scope32);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode34 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int35 = functionNode34.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode36 = functionNode34.getTop();
        com.google.javascript.rhino.head.ast.Name name37 = null;
        functionNode34.setFunctionName(name37);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode39 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode40 = functionNode39.getTop();
        functionNode34.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode39);
        int int42 = functionNode22.addFunction(functionNode34);
        int int43 = functionNode0.addFunction(functionNode34);
        functionNode34.putIntProp(22, 2);
        com.google.javascript.rhino.head.ast.AstNode astNode47 = functionNode34.getBody();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode48 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int49 = functionNode48.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode51 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        java.lang.String str52 = functionNode48.toStringTree(scriptNode51);
        int int53 = scriptNode51.getRegexpCount();
        com.google.javascript.rhino.head.Node node54 = scriptNode51.getLastSibling();
        int int55 = scriptNode51.getRegexpCount();
        functionNode34.setTop(scriptNode51);
        int int57 = functionNode34.getEncodedSourceEnd();
        functionNode34.setFunctionIsGetter();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String[] strArray59 = functionNode34.getParamAndVarNames();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-1) + "'", int1 == (-1));
        org.junit.Assert.assertNotNull(scriptNode2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNull(scopeList15);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str17, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNotNull(scriptNode24);
        org.junit.Assert.assertNotNull(scriptNode28);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertNotNull(scriptNode36);
        org.junit.Assert.assertNotNull(scriptNode40);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertNull(astNode47);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertNotNull(node54);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
    }

    @Test
    public void test09638() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09638");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode1 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int2 = functionNode1.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode3 = functionNode1.getTop();
        com.google.javascript.rhino.head.ast.Name name4 = null;
        functionNode1.setFunctionName(name4);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode6 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode7 = functionNode6.getTop();
        functionNode1.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode6);
        com.google.javascript.rhino.head.ast.Scope scope11 = new com.google.javascript.rhino.head.ast.Scope((int) (short) -1, 0);
        functionNode1.replaceWith(scope11);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode13 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int14 = functionNode13.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode15 = functionNode13.getTop();
        com.google.javascript.rhino.head.ast.Name name16 = null;
        functionNode13.setFunctionName(name16);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode18 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode19 = functionNode18.getTop();
        functionNode13.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode18);
        int int21 = functionNode1.addFunction(functionNode13);
        int int22 = functionNode13.getLineno();
        com.google.javascript.rhino.head.Node node24 = new com.google.javascript.rhino.head.Node((int) (short) -1, (com.google.javascript.rhino.head.Node) functionNode13, (int) (short) -1);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList25 = functionNode13.getSymbols();
        boolean boolean26 = functionNode13.hasConsistentReturnUsage();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertNotNull(scriptNode3);
        org.junit.Assert.assertNotNull(scriptNode7);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNotNull(scriptNode15);
        org.junit.Assert.assertNotNull(scriptNode19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNotNull(symbolList25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
    }

    @Test
    public void test09639() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09639");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode0 = new com.google.javascript.rhino.head.ast.FunctionNode();
        functionNode0.setFunctionIsGetter();
        functionNode0.setFunctionType(7);
        com.google.javascript.rhino.head.Node node6 = new com.google.javascript.rhino.head.Node((int) (byte) 10, (int) '#');
        com.google.javascript.rhino.head.ast.FunctionNode functionNode8 = new com.google.javascript.rhino.head.ast.FunctionNode(0);
        int int9 = functionNode8.getBaseLineno();
        boolean boolean10 = functionNode8.isGetter();
        com.google.javascript.rhino.head.ast.RegExpLiteral regExpLiteral12 = new com.google.javascript.rhino.head.ast.RegExpLiteral((int) (short) 1);
        regExpLiteral12.setFlags("-1\tSCRIPT -1 1\n");
        java.lang.String str15 = regExpLiteral12.getValue();
        regExpLiteral12.setFlags("52");
        functionNode8.addChildrenToFront((com.google.javascript.rhino.head.Node) regExpLiteral12);
        boolean boolean19 = functionNode8.isGetterOrSetter();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode20 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode21 = functionNode20.getTop();
        int int22 = functionNode20.getRegexpCount();
        int int23 = functionNode20.getParamCount();
        com.google.javascript.rhino.head.ast.AstNode astNode24 = functionNode20.getBody();
        int int25 = functionNode8.addFunction(functionNode20);
        functionNode20.setEncodedSourceStart(17);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode28 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int29 = functionNode28.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode30 = functionNode28.getTop();
        com.google.javascript.rhino.head.ast.AstNode astNode31 = functionNode28.getBody();
        com.google.javascript.rhino.head.ast.Scope scope32 = functionNode28.getParentScope();
        int int33 = functionNode20.addFunction(functionNode28);
        node6.addChildToFront((com.google.javascript.rhino.head.Node) functionNode28);
        functionNode0.addChildScope((com.google.javascript.rhino.head.ast.Scope) functionNode28);
        int int36 = functionNode28.getEncodedSourceEnd();
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(scriptNode21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNull(astNode24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertNotNull(scriptNode30);
        org.junit.Assert.assertNull(astNode31);
        org.junit.Assert.assertNull(scope32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
    }

    @Test
    public void test09640() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09640");
        com.google.javascript.rhino.head.ast.Symbol symbol0 = new com.google.javascript.rhino.head.ast.Symbol();
        java.lang.String str1 = symbol0.getName();
        com.google.javascript.rhino.head.Node node2 = symbol0.getNode();
        java.lang.String str3 = symbol0.getDeclTypeName();
        java.lang.String str4 = symbol0.toString();
        java.lang.String str5 = symbol0.toString();
        com.google.javascript.rhino.head.Node node6 = symbol0.getNode();
        int int7 = symbol0.getDeclType();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "EOF" + "'", str3, "EOF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Symbol (EOF) name=null" + "'", str4, "Symbol (EOF) name=null");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Symbol (EOF) name=null" + "'", str5, "Symbol (EOF) name=null");
        org.junit.Assert.assertNull(node6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
    }

    @Test
    public void test09641() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09641");
        com.google.javascript.rhino.head.ast.Jump jump4 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump4.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump8 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump4, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int11 = scriptNode10.getEndLineno();
        int int12 = scriptNode10.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList13 = scriptNode10.getChildScopes();
        com.google.javascript.rhino.head.Node node14 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump4, (com.google.javascript.rhino.head.Node) scriptNode10);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList15 = scriptNode10.getFunctions();
        functionNodeList15.clear();
        functionNodeList15.clear();
        java.util.Iterator<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeItor18 = functionNodeList15.iterator();
        com.google.javascript.rhino.head.ast.RegExpLiteral regExpLiteral20 = new com.google.javascript.rhino.head.ast.RegExpLiteral((int) (short) 1);
        java.lang.String str22 = regExpLiteral20.toSource((int) (byte) 10);
        regExpLiteral20.setFlags("-1\tSCRIPT -1 1\n");
        regExpLiteral20.removeProp(8);
        java.lang.String str27 = regExpLiteral20.getValue();
        regExpLiteral20.setLineno(10);
        regExpLiteral20.removeChildren();
        boolean boolean31 = functionNodeList15.equals((java.lang.Object) regExpLiteral20);
        com.google.javascript.rhino.head.ast.Jump jump32 = new com.google.javascript.rhino.head.ast.Jump();
        boolean boolean33 = functionNodeList15.remove((java.lang.Object) jump32);
        int int34 = functionNodeList15.size();
        com.google.javascript.rhino.head.ast.Jump jump39 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump39.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump43 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump39, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode45 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int46 = scriptNode45.getEndLineno();
        int int47 = scriptNode45.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList48 = scriptNode45.getChildScopes();
        com.google.javascript.rhino.head.Node node49 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump39, (com.google.javascript.rhino.head.Node) scriptNode45);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList50 = scriptNode45.getFunctions();
        int int51 = functionNodeList50.size();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator52 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        functionNodeList50.sort((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator52);
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator54 = positionComparator52.reversed();
        com.google.javascript.rhino.head.ast.Jump jump58 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump58.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump62 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump58, 0);
        com.google.javascript.rhino.head.ast.Jump jump66 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump66.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump70 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump66, 0);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode71 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int72 = functionNode71.getLp();
        functionNode71.setEncodedSource("");
        functionNode71.flattenSymbolTable(false);
        jump58.addChildAfter((com.google.javascript.rhino.head.Node) jump66, (com.google.javascript.rhino.head.Node) functionNode71);
        int int78 = functionNode71.getPosition();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode80 = new com.google.javascript.rhino.head.ast.FunctionNode(0);
        boolean boolean81 = functionNode80.isExpressionClosure();
        int int82 = positionComparator52.compare((com.google.javascript.rhino.head.ast.AstNode) functionNode71, (com.google.javascript.rhino.head.ast.AstNode) functionNode80);
        int int83 = functionNode80.getAbsolutePosition();
        java.lang.String str84 = functionNode80.getSourceName();
        int int85 = functionNodeList15.lastIndexOf((java.lang.Object) functionNode80);
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList88 = functionNodeList15.subList(796955, (-352611807));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: fromIndex(796955) > toIndex(-352611807)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNull(scopeList13);
        org.junit.Assert.assertNotNull(functionNodeList15);
        org.junit.Assert.assertNotNull(functionNodeItor18);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "                    /null/" + "'", str22, "                    /null/");
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertNull(scopeList48);
        org.junit.Assert.assertNotNull(functionNodeList50);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertNotNull(astNodeComparator54);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + (-1) + "'", int72 == (-1));
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + (-1) + "'", int78 == (-1));
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + (-1) + "'", int82 == (-1));
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 0 + "'", int83 == 0);
        org.junit.Assert.assertNull(str84);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + (-1) + "'", int85 == (-1));
    }

    @Test
    public void test09642() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09642");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode0 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = functionNode0.getTop();
        functionNode0.setParens((int) (byte) 1, (int) (short) 1);
        functionNode0.setEncodedSourceStart((-1));
        java.util.List<com.google.javascript.rhino.head.Node> nodeList7 = functionNode0.getResumptionPoints();
        com.google.javascript.rhino.head.ast.Scope scope9 = functionNode0.getDefiningScope("hi!");
        boolean boolean10 = functionNode0.isGetterOrSetter();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode11 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int12 = functionNode11.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode13 = functionNode11.getTop();
        com.google.javascript.rhino.head.ast.AstNode astNode14 = functionNode11.getBody();
        int int15 = functionNode11.getLength();
        com.google.javascript.rhino.head.ast.Jump jump18 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode20 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int21 = scriptNode20.getEndLineno();
        int int22 = scriptNode20.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList23 = scriptNode20.getChildScopes();
        jump18.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode20);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode26 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int27 = functionNode26.getLp();
        functionNode26.setEncodedSource("");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode30 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int31 = functionNode30.getLp();
        functionNode30.setEncodedSource("");
        functionNode30.flattenSymbolTable(false);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode36 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int37 = functionNode36.getLp();
        com.google.javascript.rhino.head.Node node39 = new com.google.javascript.rhino.head.Node((-1), (com.google.javascript.rhino.head.Node) functionNode26, (com.google.javascript.rhino.head.Node) functionNode30, (com.google.javascript.rhino.head.Node) functionNode36, (int) '#');
        jump18.addChildrenToFront((com.google.javascript.rhino.head.Node) functionNode26);
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList41 = functionNode26.getStatements();
        functionNode11.setParams(astNodeList41);
        functionNode0.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode11);
        java.util.List<com.google.javascript.rhino.head.Node> nodeList44 = functionNode11.getResumptionPoints();
        functionNode11.setBaseLineno(26);
        functionNode11.setRp((-164717278));
        org.junit.Assert.assertNotNull(scriptNode1);
        org.junit.Assert.assertNull(nodeList7);
        org.junit.Assert.assertNull(scope9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(scriptNode13);
        org.junit.Assert.assertNull(astNode14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNull(scopeList23);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertNotNull(astNodeList41);
        org.junit.Assert.assertNull(nodeList44);
    }

    @Test
    public void test09643() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09643");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode0 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = functionNode0.getTop();
        functionNode0.setParens((int) (byte) 1, (int) (short) 1);
        functionNode0.setEncodedSourceStart((-1));
        java.util.List<com.google.javascript.rhino.head.Node> nodeList7 = functionNode0.getResumptionPoints();
        com.google.javascript.rhino.head.ast.Scope scope9 = functionNode0.getDefiningScope("hi!");
        boolean boolean10 = functionNode0.isGetterOrSetter();
        com.google.javascript.rhino.head.ast.Scope scope12 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 10);
        int[] intArray19 = new int[] { 25, 17, (short) 0, 20, 19, (byte) 1 };
        functionNode0.addLiveLocals((com.google.javascript.rhino.head.Node) scope12, intArray19);
        com.google.javascript.rhino.head.Node node22 = functionNode0.setType(100);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList23 = functionNode0.getFunctions();
        com.google.javascript.rhino.head.ast.Jump jump27 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump27.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump31 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump27, 0);
        com.google.javascript.rhino.head.ast.Jump jump35 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump35.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump39 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump35, 0);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode40 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int41 = functionNode40.getLp();
        functionNode40.setEncodedSource("");
        functionNode40.flattenSymbolTable(false);
        jump27.addChildAfter((com.google.javascript.rhino.head.Node) jump35, (com.google.javascript.rhino.head.Node) functionNode40);
        int int47 = functionNode40.getLength();
        com.google.javascript.rhino.head.Node node49 = functionNode40.setType(21);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode50 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode51 = functionNode50.getTop();
        com.google.javascript.rhino.head.ast.Name name52 = null;
        functionNode50.setFunctionName(name52);
        int int54 = functionNode50.getLength();
        functionNode50.setFunctionType(19);
        functionNode40.addParam((com.google.javascript.rhino.head.ast.AstNode) functionNode50);
        functionNode40.removeProp((int) (short) 10);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode60 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int61 = functionNode60.getLp();
        functionNode60.setEncodedSource("");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode64 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int65 = functionNode64.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode66 = functionNode64.getTop();
        com.google.javascript.rhino.head.ast.Name name67 = null;
        functionNode64.setFunctionName(name67);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode69 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode70 = functionNode69.getTop();
        functionNode64.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode69);
        int int72 = functionNode69.getRp();
        int int73 = functionNode69.getFunctionType();
        functionNode60.addParam((com.google.javascript.rhino.head.ast.AstNode) functionNode69);
        com.google.javascript.rhino.head.Node node75 = functionNode60.getLastSibling();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode76 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int77 = functionNode76.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode78 = functionNode76.getTop();
        com.google.javascript.rhino.head.ast.Name name79 = null;
        functionNode76.setFunctionName(name79);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode81 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode82 = functionNode81.getTop();
        functionNode76.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode81);
        int int84 = functionNode81.getRp();
        int int85 = functionNode81.getFunctionType();
        boolean boolean86 = functionNode81.requiresActivation();
        functionNode81.setParens((int) ' ', 9);
        functionNode40.addChildAfter(node75, (com.google.javascript.rhino.head.Node) functionNode81);
        com.google.javascript.rhino.head.Node node91 = functionNode81.target;
        boolean boolean92 = functionNodeList23.remove((java.lang.Object) functionNode81);
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList95 = functionNodeList23.subList(774094395, (int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: toIndex = 10");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(scriptNode1);
        org.junit.Assert.assertNull(nodeList7);
        org.junit.Assert.assertNull(scope9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[25, 17, 0, 20, 19, 1]");
        org.junit.Assert.assertNotNull(node22);
        org.junit.Assert.assertNotNull(functionNodeList23);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 1 + "'", int47 == 1);
        org.junit.Assert.assertNotNull(node49);
        org.junit.Assert.assertNotNull(scriptNode51);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 1 + "'", int54 == 1);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + (-1) + "'", int61 == (-1));
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + (-1) + "'", int65 == (-1));
        org.junit.Assert.assertNotNull(scriptNode66);
        org.junit.Assert.assertNotNull(scriptNode70);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + (-1) + "'", int72 == (-1));
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 0 + "'", int73 == 0);
        org.junit.Assert.assertNotNull(node75);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + (-1) + "'", int77 == (-1));
        org.junit.Assert.assertNotNull(scriptNode78);
        org.junit.Assert.assertNotNull(scriptNode82);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + (-1) + "'", int84 == (-1));
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 0 + "'", int85 == 0);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertNull(node91);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
    }

    @Test
    public void test09644() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09644");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int3 = scriptNode2.getEndLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int6 = scriptNode5.getEndLineno();
        scriptNode2.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode5);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode8 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int9 = functionNode8.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = functionNode8.getTop();
        boolean boolean11 = functionNode8.hasSideEffects();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode13 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int14 = scriptNode13.getEndLineno();
        int int15 = scriptNode13.getBaseLineno();
        com.google.javascript.rhino.head.ast.Jump jump18 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode20 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int21 = scriptNode20.getEndLineno();
        int int22 = scriptNode20.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList23 = scriptNode20.getChildScopes();
        jump18.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode20);
        java.lang.String str25 = scriptNode20.debugPrint();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode13, (com.google.javascript.rhino.head.ast.Scope) scriptNode20);
        com.google.javascript.rhino.head.ast.Scope scope27 = new com.google.javascript.rhino.head.ast.Scope();
        scriptNode20.target = scope27;
        functionNode8.addChildScope(scope27);
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode5, (com.google.javascript.rhino.head.ast.Scope) functionNode8);
        com.google.javascript.rhino.head.ast.Symbol symbol32 = scriptNode5.getSymbol("/RegExpLiteral/-1\tSCRIPT -1 1\n");
        com.google.javascript.rhino.head.Node node34 = new com.google.javascript.rhino.head.Node(24, (com.google.javascript.rhino.head.Node) scriptNode5, 35);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(scriptNode10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNull(scopeList23);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str25, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertNull(symbol32);
    }

    @Test
    public void test09645() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09645");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode1 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int2 = functionNode1.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode3 = functionNode1.getTop();
        com.google.javascript.rhino.head.ast.Name name4 = null;
        functionNode1.setFunctionName(name4);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode6 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode7 = functionNode6.getTop();
        functionNode1.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode6);
        functionNode6.setIsExpressionClosure(true);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode12 = new com.google.javascript.rhino.head.ast.FunctionNode((int) (byte) 100);
        int int13 = functionNode6.addFunction(functionNode12);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode15 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode16 = functionNode15.getTop();
        java.lang.String str17 = scriptNode16.getJsDoc();
        com.google.javascript.rhino.head.Node node19 = scriptNode16.setType(0);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode20 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int21 = functionNode20.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode23 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        java.lang.String str24 = functionNode20.toStringTree(scriptNode23);
        com.google.javascript.rhino.head.ast.Scope scope26 = scriptNode23.getDefiningScope("");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode28 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int29 = scriptNode28.getEndLineno();
        int int30 = scriptNode28.getBaseLineno();
        com.google.javascript.rhino.head.Node node31 = new com.google.javascript.rhino.head.Node(25, node19, (com.google.javascript.rhino.head.Node) scriptNode23, (com.google.javascript.rhino.head.Node) scriptNode28);
        int int32 = functionNode12.compareTo((com.google.javascript.rhino.head.ast.AstNode) scriptNode23);
        com.google.javascript.rhino.head.ast.RegExpLiteral regExpLiteral34 = new com.google.javascript.rhino.head.ast.RegExpLiteral((int) (short) 1);
        regExpLiteral34.setFlags("-1\tSCRIPT -1 1\n");
        regExpLiteral34.setFlags("/null/-1\tSCRIPT -1 1\n");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode39 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int40 = functionNode39.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode41 = functionNode39.getTop();
        com.google.javascript.rhino.head.ast.Name name42 = null;
        functionNode39.setFunctionName(name42);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode44 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode45 = functionNode44.getTop();
        functionNode39.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode44);
        int int47 = functionNode44.getRp();
        int int48 = functionNode44.getFunctionType();
        boolean boolean49 = functionNode44.requiresActivation();
        com.google.javascript.rhino.head.Node node50 = new com.google.javascript.rhino.head.Node(26, (com.google.javascript.rhino.head.Node) scriptNode23, (com.google.javascript.rhino.head.Node) regExpLiteral34, (com.google.javascript.rhino.head.Node) functionNode44);
        com.google.javascript.rhino.head.ast.Name name51 = null;
        functionNode44.setFunctionName(name51);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode53 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int54 = functionNode53.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode55 = functionNode53.getTop();
        com.google.javascript.rhino.head.Node node56 = functionNode53.getLastSibling();
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList57 = functionNode53.getParams();
        functionNode53.removeProp(2);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode60 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.Scope scope62 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 10);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode63 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode64 = functionNode63.getTop();
        functionNode63.setParens((int) (byte) 1, (int) (short) 1);
        functionNode63.setEncodedSourceStart((-1));
        functionNode63.setFunctionIsGetter();
        scope62.addChildToFront((com.google.javascript.rhino.head.Node) functionNode63);
        functionNode60.setBody((com.google.javascript.rhino.head.ast.AstNode) functionNode63);
        functionNode60.setFunctionIsSetter();
        int int74 = functionNode60.getLineno();
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList75 = functionNode60.getParams();
        functionNode53.addChildScope((com.google.javascript.rhino.head.ast.Scope) functionNode60);
        int int77 = functionNode60.getLp();
        boolean boolean78 = functionNode44.isParam((com.google.javascript.rhino.head.ast.AstNode) functionNode60);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertNotNull(scriptNode3);
        org.junit.Assert.assertNotNull(scriptNode7);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(scriptNode16);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(node19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(scope26);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1 + "'", int32 == 1);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertNotNull(scriptNode41);
        org.junit.Assert.assertNotNull(scriptNode45);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
        org.junit.Assert.assertNotNull(scriptNode55);
        org.junit.Assert.assertNotNull(node56);
        org.junit.Assert.assertNotNull(astNodeList57);
        org.junit.Assert.assertNotNull(scriptNode64);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + (-1) + "'", int74 == (-1));
        org.junit.Assert.assertNotNull(astNodeList75);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + (-1) + "'", int77 == (-1));
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
    }

    @Test
    public void test09646() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09646");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode1 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int2 = functionNode1.getLp();
        functionNode1.setEncodedSource("");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode5 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int6 = functionNode5.getLp();
        functionNode5.setEncodedSource("");
        functionNode5.flattenSymbolTable(false);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode11 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int12 = functionNode11.getLp();
        com.google.javascript.rhino.head.Node node14 = new com.google.javascript.rhino.head.Node((-1), (com.google.javascript.rhino.head.Node) functionNode1, (com.google.javascript.rhino.head.Node) functionNode5, (com.google.javascript.rhino.head.Node) functionNode11, (int) '#');
        com.google.javascript.rhino.head.ast.Comment comment15 = functionNode11.getJsDocNode();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode16 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.Scope scope18 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 10);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode19 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode20 = functionNode19.getTop();
        functionNode19.setParens((int) (byte) 1, (int) (short) 1);
        functionNode19.setEncodedSourceStart((-1));
        functionNode19.setFunctionIsGetter();
        scope18.addChildToFront((com.google.javascript.rhino.head.Node) functionNode19);
        functionNode16.setBody((com.google.javascript.rhino.head.ast.AstNode) functionNode19);
        boolean boolean29 = functionNode11.isParam((com.google.javascript.rhino.head.ast.AstNode) functionNode16);
        int int30 = functionNode16.getLp();
        int int31 = functionNode16.getEncodedSourceEnd();
        functionNode16.setRp((int) (short) 10);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode34 = functionNode16.getTop();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str36 = scriptNode34.getParamOrVarName((int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNull(comment15);
        org.junit.Assert.assertNotNull(scriptNode20);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNotNull(scriptNode34);
    }

    @Test
    public void test09647() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09647");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode1 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int2 = functionNode1.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode3 = functionNode1.getTop();
        com.google.javascript.rhino.head.ast.Name name4 = null;
        functionNode1.setFunctionName(name4);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode6 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode7 = functionNode6.getTop();
        functionNode1.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode6);
        functionNode6.setIsExpressionClosure(true);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode12 = new com.google.javascript.rhino.head.ast.FunctionNode((int) (byte) 100);
        int int13 = functionNode6.addFunction(functionNode12);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode15 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode16 = functionNode15.getTop();
        java.lang.String str17 = scriptNode16.getJsDoc();
        com.google.javascript.rhino.head.Node node19 = scriptNode16.setType(0);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode20 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int21 = functionNode20.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode23 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        java.lang.String str24 = functionNode20.toStringTree(scriptNode23);
        com.google.javascript.rhino.head.ast.Scope scope26 = scriptNode23.getDefiningScope("");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode28 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int29 = scriptNode28.getEndLineno();
        int int30 = scriptNode28.getBaseLineno();
        com.google.javascript.rhino.head.Node node31 = new com.google.javascript.rhino.head.Node(25, node19, (com.google.javascript.rhino.head.Node) scriptNode23, (com.google.javascript.rhino.head.Node) scriptNode28);
        int int32 = functionNode12.compareTo((com.google.javascript.rhino.head.ast.AstNode) scriptNode23);
        com.google.javascript.rhino.head.ast.RegExpLiteral regExpLiteral35 = new com.google.javascript.rhino.head.ast.RegExpLiteral((int) (short) 1);
        java.lang.String str37 = regExpLiteral35.toSource((int) (byte) 10);
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator38 = regExpLiteral35.new NodeIterator();
        java.lang.String str40 = regExpLiteral35.toSource(100);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode41 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int42 = functionNode41.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode43 = functionNode41.getTop();
        com.google.javascript.rhino.head.ast.Name name44 = null;
        functionNode41.setFunctionName(name44);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode46 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode47 = functionNode46.getTop();
        functionNode41.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode46);
        java.lang.String str49 = functionNode41.getNextTempName();
        com.google.javascript.rhino.head.Node node51 = new com.google.javascript.rhino.head.Node(350469479, (com.google.javascript.rhino.head.Node) regExpLiteral35, (com.google.javascript.rhino.head.Node) functionNode41, 7);
        com.google.javascript.rhino.head.Node node52 = new com.google.javascript.rhino.head.Node((int) (byte) 10, (com.google.javascript.rhino.head.Node) functionNode12, node51);
        com.google.javascript.rhino.head.ast.RegExpLiteral regExpLiteral55 = new com.google.javascript.rhino.head.ast.RegExpLiteral(2, 6);
        boolean boolean56 = regExpLiteral55.hasSideEffects();
        functionNode12.addRegExp(regExpLiteral55);
        com.google.javascript.rhino.head.ast.AstNode astNode58 = functionNode12.getMemberExprNode();
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.Node node59 = astNode58.getLastSibling();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertNotNull(scriptNode3);
        org.junit.Assert.assertNotNull(scriptNode7);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(scriptNode16);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(node19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(scope26);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1 + "'", int32 == 1);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "                    /null/" + "'", str37, "                    /null/");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "                                                                                                                                                                                                        /null/" + "'", str40, "                                                                                                                                                                                                        /null/");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertNotNull(scriptNode43);
        org.junit.Assert.assertNotNull(scriptNode47);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "$0" + "'", str49, "$0");
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNull(astNode58);
    }

    @Test
    public void test09648() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09648");
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 10, 628528643);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode3 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int4 = functionNode3.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = functionNode3.getTop();
        boolean boolean6 = functionNode3.hasSideEffects();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList7 = functionNode3.getSymbols();
        functionNode3.setRp(5);
        functionNode3.setParens((int) '#', 24);
        int int13 = functionNode3.getParamCount();
        com.google.javascript.rhino.head.ast.Jump jump16 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        com.google.javascript.rhino.head.ast.Scope scope18 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 10);
        jump16.addChildrenToBack((com.google.javascript.rhino.head.Node) scope18);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode20 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int21 = functionNode20.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode22 = functionNode20.getTop();
        com.google.javascript.rhino.head.ast.Name name23 = null;
        functionNode20.setFunctionName(name23);
        functionNode20.setIsGenerator();
        java.lang.String str26 = functionNode20.getEncodedSource();
        scope18.target = functionNode20;
        functionNode3.setMemberExprNode((com.google.javascript.rhino.head.ast.AstNode) functionNode20);
        functionNode20.setLp(35);
        boolean boolean31 = functionNode20.hasConsistentReturnUsage();
        int int32 = functionNode20.depth();
        scope2.addChildToBack((com.google.javascript.rhino.head.Node) functionNode20);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode34 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int35 = functionNode34.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode36 = functionNode34.getTop();
        com.google.javascript.rhino.head.Node node37 = functionNode34.getLastSibling();
        com.google.javascript.rhino.head.ast.AstNode astNode38 = functionNode34.getMemberExprNode();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode39 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int40 = functionNode39.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode41 = functionNode39.getTop();
        com.google.javascript.rhino.head.ast.Name name42 = null;
        functionNode39.setFunctionName(name42);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode44 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode45 = functionNode44.getTop();
        functionNode39.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode44);
        functionNode44.setIsExpressionClosure(true);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode50 = new com.google.javascript.rhino.head.ast.FunctionNode((int) (byte) 100);
        int int51 = functionNode44.addFunction(functionNode50);
        int int52 = functionNode34.addFunction(functionNode44);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode53 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int54 = functionNode53.getLp();
        functionNode53.setEncodedSource("");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode57 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.Scope scope59 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 10);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode60 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode61 = functionNode60.getTop();
        functionNode60.setParens((int) (byte) 1, (int) (short) 1);
        functionNode60.setEncodedSourceStart((-1));
        functionNode60.setFunctionIsGetter();
        scope59.addChildToFront((com.google.javascript.rhino.head.Node) functionNode60);
        functionNode57.setBody((com.google.javascript.rhino.head.ast.AstNode) functionNode60);
        int int70 = functionNode53.addFunction(functionNode57);
        com.google.javascript.rhino.head.ast.Symbol symbol72 = functionNode53.getSymbol("-1\tBLOCK -1 1\n");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode74 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int75 = scriptNode74.getEndLineno();
        com.google.javascript.rhino.head.ast.Symbol symbol77 = scriptNode74.getSymbol("hi!");
        scriptNode74.putIntProp(3, 0);
        functionNode53.setParent((com.google.javascript.rhino.head.ast.AstNode) scriptNode74);
        boolean boolean82 = functionNode34.isParam((com.google.javascript.rhino.head.ast.AstNode) functionNode53);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList83 = functionNode53.getSymbols();
        int int84 = functionNode20.addFunction(functionNode53);
        com.google.javascript.rhino.head.ast.Symbol symbol86 = functionNode53.getSymbol("                    {\n                      {\n                      }\n                    }\n");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str87 = functionNode53.debugPrint();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(scriptNode5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(symbolList7);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertNotNull(scriptNode22);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1 + "'", int32 == 1);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertNotNull(scriptNode36);
        org.junit.Assert.assertNotNull(node37);
        org.junit.Assert.assertNull(astNode38);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertNotNull(scriptNode41);
        org.junit.Assert.assertNotNull(scriptNode45);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
        org.junit.Assert.assertNotNull(scriptNode61);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 0 + "'", int70 == 0);
        org.junit.Assert.assertNull(symbol72);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + (-1) + "'", int75 == (-1));
        org.junit.Assert.assertNull(symbol77);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(symbolList83);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 0 + "'", int84 == 0);
        org.junit.Assert.assertNull(symbol86);
    }

    @Test
    public void test09649() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09649");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int2 = scriptNode1.getEndLineno();
        com.google.javascript.rhino.head.ast.Symbol symbol4 = scriptNode1.getSymbol("hi!");
        java.lang.String str5 = scriptNode1.debugPrint();
        scriptNode1.setPosition(136);
        java.lang.String str8 = scriptNode1.debugPrint();
        com.google.javascript.rhino.head.Token.CommentType commentType14 = com.google.javascript.rhino.head.Token.CommentType.HTML;
        com.google.javascript.rhino.head.ast.Comment comment16 = new com.google.javascript.rhino.head.ast.Comment(20, 1, commentType14, "109");
        com.google.javascript.rhino.head.ast.Comment comment18 = new com.google.javascript.rhino.head.ast.Comment(11, 35, commentType14, "                    109");
        com.google.javascript.rhino.head.Token.CommentType commentType19 = comment18.getCommentType();
        int int20 = comment18.getType();
        scriptNode1.putProp(18, (java.lang.Object) comment18);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str23 = scriptNode1.getParamOrVarName((int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertNull(symbol4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str5, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "136\tSCRIPT 136 1\n" + "'", str8, "136\tSCRIPT 136 1\n");
        org.junit.Assert.assertTrue("'" + commentType14 + "' != '" + com.google.javascript.rhino.head.Token.CommentType.HTML + "'", commentType14.equals(com.google.javascript.rhino.head.Token.CommentType.HTML));
        org.junit.Assert.assertTrue("'" + commentType19 + "' != '" + com.google.javascript.rhino.head.Token.CommentType.HTML + "'", commentType19.equals(com.google.javascript.rhino.head.Token.CommentType.HTML));
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 161 + "'", int20 == 161);
    }

    @Test
    public void test09650() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09650");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode0 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int1 = functionNode0.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = functionNode0.getTop();
        com.google.javascript.rhino.head.ast.AstNode astNode3 = functionNode0.getBody();
        int int4 = functionNode0.getLength();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap5 = null;
        functionNode0.setSymbolTable(strMap5);
        int int7 = functionNode0.getEndLineno();
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor8 = null;
        // The following exception was thrown during execution in test generation
        try {
            functionNode0.visit(nodeVisitor8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-1) + "'", int1 == (-1));
        org.junit.Assert.assertNotNull(scriptNode2);
        org.junit.Assert.assertNull(astNode3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 1 + "'", int4 == 1);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
    }

    @Test
    public void test09651() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09651");
        com.google.javascript.rhino.head.ast.Jump jump2 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode4 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int5 = scriptNode4.getEndLineno();
        int int6 = scriptNode4.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList7 = scriptNode4.getChildScopes();
        jump2.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode4);
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator9 = scriptNode4.spliterator();
        java.lang.String str10 = scriptNode4.getNextTempName();
        scriptNode4.removeChildren();
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNull(scopeList7);
        org.junit.Assert.assertNotNull(nodeSpliterator9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "$0" + "'", str10, "$0");
    }

    @Test
    public void test09652() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09652");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode0 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int1 = functionNode0.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = functionNode0.getTop();
        com.google.javascript.rhino.head.ast.Name name3 = null;
        functionNode0.setFunctionName(name3);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode5 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = functionNode5.getTop();
        functionNode0.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode5);
        java.lang.String str8 = functionNode0.getNextTempName();
        java.lang.String str9 = functionNode0.getEncodedSource();
        functionNode0.setIsGenerator();
        functionNode0.setBaseLineno(48);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode13 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = functionNode13.getTop();
        functionNode13.setParens((int) (byte) 1, (int) (short) 1);
        functionNode13.setEncodedSourceStart((-1));
        java.util.List<com.google.javascript.rhino.head.Node> nodeList20 = functionNode13.getResumptionPoints();
        com.google.javascript.rhino.head.ast.Scope scope22 = functionNode13.getDefiningScope("hi!");
        boolean boolean23 = functionNode13.isGetterOrSetter();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode25 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int26 = scriptNode25.getEndLineno();
        com.google.javascript.rhino.head.ast.Symbol symbol28 = scriptNode25.getSymbol("hi!");
        scriptNode25.putIntProp(3, 0);
        functionNode13.addResumptionPoint((com.google.javascript.rhino.head.Node) scriptNode25);
        functionNode13.setIsGenerator();
        int int34 = functionNode13.getEncodedSourceStart();
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList35 = functionNode13.getParams();
        functionNode0.setParentScope((com.google.javascript.rhino.head.ast.Scope) functionNode13);
        functionNode0.setFunctionType(232081650);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-1) + "'", int1 == (-1));
        org.junit.Assert.assertNotNull(scriptNode2);
        org.junit.Assert.assertNotNull(scriptNode6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "$0" + "'", str8, "$0");
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(scriptNode14);
        org.junit.Assert.assertNull(nodeList20);
        org.junit.Assert.assertNull(scope22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNull(symbol28);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertNotNull(astNodeList35);
    }

    @Test
    public void test09653() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09653");
        com.google.javascript.rhino.head.ast.RegExpLiteral regExpLiteral2 = new com.google.javascript.rhino.head.ast.RegExpLiteral(365513504);
        com.google.javascript.rhino.head.ast.Name name4 = null;
        com.google.javascript.rhino.head.ast.FunctionNode functionNode5 = new com.google.javascript.rhino.head.ast.FunctionNode(16, name4);
        int int6 = functionNode5.getBaseLineno();
        java.lang.Object obj8 = functionNode5.getProp(21);
        java.lang.Object obj9 = functionNode5.getCompilerData();
        functionNode5.setRequiresActivation();
        functionNode5.setIsGenerator();
        java.lang.String str12 = regExpLiteral2.toStringTree((com.google.javascript.rhino.head.ast.ScriptNode) functionNode5);
        com.google.javascript.rhino.head.ast.Jump jump15 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode17 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int18 = scriptNode17.getEndLineno();
        int int19 = scriptNode17.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList20 = scriptNode17.getChildScopes();
        jump15.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode17);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode23 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int24 = functionNode23.getLp();
        functionNode23.setEncodedSource("");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode27 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int28 = functionNode27.getLp();
        functionNode27.setEncodedSource("");
        functionNode27.flattenSymbolTable(false);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode33 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int34 = functionNode33.getLp();
        com.google.javascript.rhino.head.Node node36 = new com.google.javascript.rhino.head.Node((-1), (com.google.javascript.rhino.head.Node) functionNode23, (com.google.javascript.rhino.head.Node) functionNode27, (com.google.javascript.rhino.head.Node) functionNode33, (int) '#');
        jump15.addChildrenToFront((com.google.javascript.rhino.head.Node) functionNode23);
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList38 = functionNode23.getStatements();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode39 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode40 = functionNode39.getTop();
        com.google.javascript.rhino.head.ast.AstRoot astRoot41 = functionNode39.getAstRoot();
        functionNode23.replaceWith((com.google.javascript.rhino.head.ast.Scope) functionNode39);
        com.google.javascript.rhino.head.Node node44 = new com.google.javascript.rhino.head.Node(24, (com.google.javascript.rhino.head.Node) regExpLiteral2, (com.google.javascript.rhino.head.Node) functionNode23, 774094395);
        com.google.javascript.rhino.head.Node node45 = node44.getLastSibling();
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNull(scopeList20);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertNotNull(astNodeList38);
        org.junit.Assert.assertNotNull(scriptNode40);
        org.junit.Assert.assertNull(astRoot41);
        org.junit.Assert.assertNotNull(node45);
    }

    @Test
    public void test09654() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09654");
        com.google.javascript.rhino.head.ast.Jump jump4 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump4.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump8 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump4, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int11 = scriptNode10.getEndLineno();
        int int12 = scriptNode10.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList13 = scriptNode10.getChildScopes();
        com.google.javascript.rhino.head.Node node14 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump4, (com.google.javascript.rhino.head.Node) scriptNode10);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList15 = scriptNode10.getFunctions();
        functionNodeList15.clear();
        com.google.javascript.rhino.head.ast.Jump jump21 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump21.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump25 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump21, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode27 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int28 = scriptNode27.getEndLineno();
        int int29 = scriptNode27.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList30 = scriptNode27.getChildScopes();
        com.google.javascript.rhino.head.Node node31 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump21, (com.google.javascript.rhino.head.Node) scriptNode27);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList32 = scriptNode27.getFunctions();
        boolean boolean33 = functionNodeList15.removeAll((java.util.Collection<com.google.javascript.rhino.head.ast.FunctionNode>) functionNodeList32);
        java.util.Spliterator<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeSpliterator34 = functionNodeList15.spliterator();
        com.google.javascript.rhino.head.ast.Jump jump39 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump39.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump43 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump39, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode45 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int46 = scriptNode45.getEndLineno();
        int int47 = scriptNode45.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList48 = scriptNode45.getChildScopes();
        com.google.javascript.rhino.head.Node node49 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump39, (com.google.javascript.rhino.head.Node) scriptNode45);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList50 = scriptNode45.getFunctions();
        int int51 = functionNodeList50.size();
        com.google.javascript.rhino.head.ast.Jump jump57 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump57.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump61 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump57, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode63 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int64 = scriptNode63.getEndLineno();
        int int65 = scriptNode63.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList66 = scriptNode63.getChildScopes();
        com.google.javascript.rhino.head.Node node67 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump57, (com.google.javascript.rhino.head.Node) scriptNode63);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList68 = scriptNode63.getFunctions();
        functionNodeList68.clear();
        com.google.javascript.rhino.head.ast.Jump jump74 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump74.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump78 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump74, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode80 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int81 = scriptNode80.getEndLineno();
        int int82 = scriptNode80.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList83 = scriptNode80.getChildScopes();
        com.google.javascript.rhino.head.Node node84 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump74, (com.google.javascript.rhino.head.Node) scriptNode80);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList85 = scriptNode80.getFunctions();
        boolean boolean86 = functionNodeList68.removeAll((java.util.Collection<com.google.javascript.rhino.head.ast.FunctionNode>) functionNodeList85);
        boolean boolean87 = functionNodeList50.addAll(0, (java.util.Collection<com.google.javascript.rhino.head.ast.FunctionNode>) functionNodeList68);
        boolean boolean88 = functionNodeList15.containsAll((java.util.Collection<com.google.javascript.rhino.head.ast.FunctionNode>) functionNodeList68);
        java.util.stream.Stream<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeStream89 = functionNodeList15.stream();
        java.util.stream.Stream<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeStream90 = functionNodeList15.parallelStream();
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNull(scopeList13);
        org.junit.Assert.assertNotNull(functionNodeList15);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertNull(scopeList30);
        org.junit.Assert.assertNotNull(functionNodeList32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(functionNodeSpliterator34);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertNull(scopeList48);
        org.junit.Assert.assertNotNull(functionNodeList50);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + (-1) + "'", int64 == (-1));
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + (-1) + "'", int65 == (-1));
        org.junit.Assert.assertNull(scopeList66);
        org.junit.Assert.assertNotNull(functionNodeList68);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + (-1) + "'", int81 == (-1));
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + (-1) + "'", int82 == (-1));
        org.junit.Assert.assertNull(scopeList83);
        org.junit.Assert.assertNotNull(functionNodeList85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertNotNull(functionNodeStream89);
        org.junit.Assert.assertNotNull(functionNodeStream90);
    }

    @Test
    public void test09655() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09655");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode0 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 10);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode3 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode4 = functionNode3.getTop();
        functionNode3.setParens((int) (byte) 1, (int) (short) 1);
        functionNode3.setEncodedSourceStart((-1));
        functionNode3.setFunctionIsGetter();
        scope2.addChildToFront((com.google.javascript.rhino.head.Node) functionNode3);
        functionNode0.setBody((com.google.javascript.rhino.head.ast.AstNode) functionNode3);
        functionNode0.setFunctionIsSetter();
        int int14 = functionNode0.getLineno();
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList15 = functionNode0.getParams();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode18 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int19 = functionNode18.getLp();
        functionNode18.setEncodedSource("");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode22 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int23 = functionNode22.getLp();
        functionNode22.setEncodedSource("");
        functionNode22.flattenSymbolTable(false);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode28 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int29 = functionNode28.getLp();
        com.google.javascript.rhino.head.Node node31 = new com.google.javascript.rhino.head.Node((-1), (com.google.javascript.rhino.head.Node) functionNode18, (com.google.javascript.rhino.head.Node) functionNode22, (com.google.javascript.rhino.head.Node) functionNode28, (int) '#');
        com.google.javascript.rhino.head.ast.Comment comment32 = functionNode28.getJsDocNode();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode33 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.Scope scope35 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 10);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode36 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode37 = functionNode36.getTop();
        functionNode36.setParens((int) (byte) 1, (int) (short) 1);
        functionNode36.setEncodedSourceStart((-1));
        functionNode36.setFunctionIsGetter();
        scope35.addChildToFront((com.google.javascript.rhino.head.Node) functionNode36);
        functionNode33.setBody((com.google.javascript.rhino.head.ast.AstNode) functionNode36);
        boolean boolean46 = functionNode28.isParam((com.google.javascript.rhino.head.ast.AstNode) functionNode33);
        int int47 = functionNode28.getFunctionCount();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode48 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int49 = functionNode48.getLp();
        functionNode48.setEncodedSource("");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode52 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int53 = functionNode52.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode54 = functionNode52.getTop();
        com.google.javascript.rhino.head.ast.Name name55 = null;
        functionNode52.setFunctionName(name55);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode57 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode58 = functionNode57.getTop();
        functionNode52.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode57);
        int int60 = functionNode57.getRp();
        int int61 = functionNode57.getFunctionType();
        functionNode48.addParam((com.google.javascript.rhino.head.ast.AstNode) functionNode57);
        com.google.javascript.rhino.head.Node node63 = functionNode48.getLastSibling();
        com.google.javascript.rhino.head.Node node64 = new com.google.javascript.rhino.head.Node((int) (byte) 10, (com.google.javascript.rhino.head.Node) functionNode28, (com.google.javascript.rhino.head.Node) functionNode48);
        com.google.javascript.rhino.head.ast.Jump jump69 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump69.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump73 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump69, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode75 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int76 = scriptNode75.getEndLineno();
        int int77 = scriptNode75.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList78 = scriptNode75.getChildScopes();
        com.google.javascript.rhino.head.Node node79 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump69, (com.google.javascript.rhino.head.Node) scriptNode75);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList80 = scriptNode75.getChildScopes();
        int int81 = scriptNode75.getEncodedSourceStart();
        functionNode28.addParam((com.google.javascript.rhino.head.ast.AstNode) scriptNode75);
        functionNode0.setTop(scriptNode75);
        java.lang.String str84 = functionNode0.shortName();
        // The following exception was thrown during execution in test generation
        try {
            functionNode0.setDouble((double) 803742638);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: com.google.javascript.rhino.head.ast.FunctionNode cannot be cast to com.google.javascript.rhino.head.ast.NumberLiteral");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(scriptNode4);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNotNull(astNodeList15);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertNull(comment32);
        org.junit.Assert.assertNotNull(scriptNode37);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
        org.junit.Assert.assertNotNull(scriptNode54);
        org.junit.Assert.assertNotNull(scriptNode58);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-1) + "'", int60 == (-1));
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 0 + "'", int61 == 0);
        org.junit.Assert.assertNotNull(node63);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + (-1) + "'", int76 == (-1));
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + (-1) + "'", int77 == (-1));
        org.junit.Assert.assertNull(scopeList78);
        org.junit.Assert.assertNull(scopeList80);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + (-1) + "'", int81 == (-1));
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "FunctionNode" + "'", str84, "FunctionNode");
    }

    @Test
    public void test09656() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09656");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode1 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = functionNode1.getTop();
        functionNode1.setParens((int) (byte) 1, (int) (short) 1);
        com.google.javascript.rhino.head.Node node6 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) functionNode1);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode7 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int8 = functionNode7.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode9 = functionNode7.getTop();
        com.google.javascript.rhino.head.ast.AstNode astNode10 = functionNode7.getBody();
        int int11 = functionNode7.getLength();
        com.google.javascript.rhino.head.ast.Jump jump14 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode16 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int17 = scriptNode16.getEndLineno();
        int int18 = scriptNode16.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList19 = scriptNode16.getChildScopes();
        jump14.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode16);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode22 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int23 = functionNode22.getLp();
        functionNode22.setEncodedSource("");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode26 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int27 = functionNode26.getLp();
        functionNode26.setEncodedSource("");
        functionNode26.flattenSymbolTable(false);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode32 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int33 = functionNode32.getLp();
        com.google.javascript.rhino.head.Node node35 = new com.google.javascript.rhino.head.Node((-1), (com.google.javascript.rhino.head.Node) functionNode22, (com.google.javascript.rhino.head.Node) functionNode26, (com.google.javascript.rhino.head.Node) functionNode32, (int) '#');
        jump14.addChildrenToFront((com.google.javascript.rhino.head.Node) functionNode22);
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList37 = functionNode22.getStatements();
        functionNode7.setParams(astNodeList37);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode39 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int40 = functionNode39.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode41 = functionNode39.getTop();
        com.google.javascript.rhino.head.Node node42 = functionNode39.getLastSibling();
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList43 = functionNode39.getParams();
        functionNode7.setParams(astNodeList43);
        functionNode1.addParam((com.google.javascript.rhino.head.ast.AstNode) functionNode7);
        com.google.javascript.rhino.head.ast.RegExpLiteral regExpLiteral47 = new com.google.javascript.rhino.head.ast.RegExpLiteral((int) '#');
        java.lang.String str48 = regExpLiteral47.shortName();
        functionNode1.addRegExp(regExpLiteral47);
        com.google.javascript.rhino.head.ast.AstRoot astRoot50 = functionNode1.getAstRoot();
        // The following exception was thrown during execution in test generation
        try {
            java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap51 = astRoot50.getSymbolTable();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(scriptNode2);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(scriptNode9);
        org.junit.Assert.assertNull(astNode10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNull(scopeList19);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertNotNull(astNodeList37);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertNotNull(scriptNode41);
        org.junit.Assert.assertNotNull(node42);
        org.junit.Assert.assertNotNull(astNodeList43);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "RegExpLiteral" + "'", str48, "RegExpLiteral");
        org.junit.Assert.assertNull(astRoot50);
    }

    @Test
    public void test09657() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09657");
        com.google.javascript.rhino.head.Token.CommentType commentType4 = com.google.javascript.rhino.head.Token.CommentType.BLOCK_COMMENT;
        com.google.javascript.rhino.head.ast.Comment comment6 = new com.google.javascript.rhino.head.ast.Comment(25, 16, commentType4, "Symbol (EOF) name=null line=-1");
        com.google.javascript.rhino.head.ast.Comment comment8 = new com.google.javascript.rhino.head.ast.Comment(16, 161, commentType4, "                                                                                                /null/");
        java.lang.String str9 = comment8.getValue();
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor10 = null;
        // The following exception was thrown during execution in test generation
        try {
            comment8.visit(nodeVisitor10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + commentType4 + "' != '" + com.google.javascript.rhino.head.Token.CommentType.BLOCK_COMMENT + "'", commentType4.equals(com.google.javascript.rhino.head.Token.CommentType.BLOCK_COMMENT));
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "                                                                                                /null/" + "'", str9, "                                                                                                /null/");
    }

    @Test
    public void test09658() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09658");
        com.google.javascript.rhino.head.Node node1 = new com.google.javascript.rhino.head.Node(6);
    }

    @Test
    public void test09659() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09659");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode0 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int1 = functionNode0.getLp();
        functionNode0.setEncodedSource("");
        functionNode0.flattenSymbolTable(false);
        java.lang.String str6 = functionNode0.getName();
        int int7 = functionNode0.getType();
        boolean boolean8 = functionNode0.isExpressionClosure();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-1) + "'", int1 == (-1));
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 109 + "'", int7 == 109);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test09660() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09660");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode1 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int2 = functionNode1.getLp();
        functionNode1.setEncodedSource("");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode5 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int6 = functionNode5.getLp();
        functionNode5.setEncodedSource("");
        functionNode5.flattenSymbolTable(false);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode11 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int12 = functionNode11.getLp();
        com.google.javascript.rhino.head.Node node14 = new com.google.javascript.rhino.head.Node((-1), (com.google.javascript.rhino.head.Node) functionNode1, (com.google.javascript.rhino.head.Node) functionNode5, (com.google.javascript.rhino.head.Node) functionNode11, (int) '#');
        boolean boolean15 = functionNode11.isGenerator();
        com.google.javascript.rhino.head.ast.Scope scope17 = new com.google.javascript.rhino.head.ast.Scope();
        scope17.setBounds(0, 10);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode21 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode22 = functionNode21.getTop();
        int int23 = functionNode21.getRegexpCount();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode24 = functionNode21.getEnclosingFunction();
        java.lang.String str25 = scope17.toStringTree((com.google.javascript.rhino.head.ast.ScriptNode) functionNode21);
        functionNode11.putProp(1, (java.lang.Object) functionNode21);
        functionNode11.setParens(8, (int) (byte) 10);
        boolean boolean30 = functionNode11.isGetter();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode31 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode32 = functionNode31.getTop();
        int int33 = functionNode31.getRegexpCount();
        int int34 = functionNode31.getParamCount();
        com.google.javascript.rhino.head.ast.AstNode astNode35 = functionNode31.getBody();
        java.util.List<com.google.javascript.rhino.head.Node> nodeList36 = functionNode31.getResumptionPoints();
        functionNode11.setTop((com.google.javascript.rhino.head.ast.ScriptNode) functionNode31);
        int int38 = functionNode11.getBaseLineno();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(scriptNode22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNull(functionNode24);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(scriptNode32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertNull(astNode35);
        org.junit.Assert.assertNull(nodeList36);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
    }

    @Test
    public void test09661() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09661");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode1 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int2 = functionNode1.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode3 = functionNode1.getTop();
        boolean boolean4 = functionNode1.hasSideEffects();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int7 = scriptNode6.getEndLineno();
        int int8 = scriptNode6.getBaseLineno();
        com.google.javascript.rhino.head.ast.Jump jump11 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode13 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int14 = scriptNode13.getEndLineno();
        int int15 = scriptNode13.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList16 = scriptNode13.getChildScopes();
        jump11.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode13);
        java.lang.String str18 = scriptNode13.debugPrint();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode6, (com.google.javascript.rhino.head.ast.Scope) scriptNode13);
        com.google.javascript.rhino.head.ast.Scope scope20 = new com.google.javascript.rhino.head.ast.Scope();
        scriptNode13.target = scope20;
        functionNode1.addChildScope(scope20);
        java.lang.String str23 = scope20.debugPrint();
        com.google.javascript.rhino.head.ast.Jump jump25 = new com.google.javascript.rhino.head.ast.Jump(69268905, (com.google.javascript.rhino.head.Node) scope20, 16);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertNotNull(scriptNode3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNull(scopeList16);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str18, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "-1\tBLOCK -1 1\n" + "'", str23, "-1\tBLOCK -1 1\n");
    }

    @Test
    public void test09662() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09662");
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((-1305759086), 232081650, commentType3, "            //null//null/-1\tSCRIPT -1 1\n/");
        com.google.javascript.rhino.head.ast.Jump jump7 = new com.google.javascript.rhino.head.ast.Jump(1, (com.google.javascript.rhino.head.Node) comment5, (-1336829251));
    }

    @Test
    public void test09663() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09663");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode0 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int1 = functionNode0.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = functionNode0.getTop();
        com.google.javascript.rhino.head.ast.AstNode astNode3 = functionNode0.getBody();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode4 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int5 = functionNode4.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = functionNode4.getTop();
        com.google.javascript.rhino.head.Node node7 = functionNode4.getLastSibling();
        com.google.javascript.rhino.head.ast.AstNode astNode8 = functionNode4.getMemberExprNode();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode9 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int10 = functionNode9.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = functionNode9.getTop();
        com.google.javascript.rhino.head.ast.Name name12 = null;
        functionNode9.setFunctionName(name12);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode14 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode15 = functionNode14.getTop();
        functionNode9.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode14);
        functionNode14.setIsExpressionClosure(true);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode20 = new com.google.javascript.rhino.head.ast.FunctionNode((int) (byte) 100);
        int int21 = functionNode14.addFunction(functionNode20);
        int int22 = functionNode4.addFunction(functionNode14);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode23 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int24 = functionNode23.getLp();
        functionNode23.setEncodedSource("");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode27 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.Scope scope29 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 10);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode30 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode31 = functionNode30.getTop();
        functionNode30.setParens((int) (byte) 1, (int) (short) 1);
        functionNode30.setEncodedSourceStart((-1));
        functionNode30.setFunctionIsGetter();
        scope29.addChildToFront((com.google.javascript.rhino.head.Node) functionNode30);
        functionNode27.setBody((com.google.javascript.rhino.head.ast.AstNode) functionNode30);
        int int40 = functionNode23.addFunction(functionNode27);
        com.google.javascript.rhino.head.ast.Symbol symbol42 = functionNode23.getSymbol("-1\tBLOCK -1 1\n");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode44 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int45 = scriptNode44.getEndLineno();
        com.google.javascript.rhino.head.ast.Symbol symbol47 = scriptNode44.getSymbol("hi!");
        scriptNode44.putIntProp(3, 0);
        functionNode23.setParent((com.google.javascript.rhino.head.ast.AstNode) scriptNode44);
        boolean boolean52 = functionNode4.isParam((com.google.javascript.rhino.head.ast.AstNode) functionNode23);
        com.google.javascript.rhino.head.ast.AstNode astNode53 = functionNode23.getParent();
        functionNode0.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode23);
        int int55 = functionNode23.getEncodedSourceEnd();
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.Node node56 = functionNode23.getFinally();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-1) + "'", int1 == (-1));
        org.junit.Assert.assertNotNull(scriptNode2);
        org.junit.Assert.assertNull(astNode3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(scriptNode6);
        org.junit.Assert.assertNotNull(node7);
        org.junit.Assert.assertNull(astNode8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(scriptNode11);
        org.junit.Assert.assertNotNull(scriptNode15);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertNotNull(scriptNode31);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertNull(symbol42);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
        org.junit.Assert.assertNull(symbol47);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(astNode53);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1));
    }

    @Test
    public void test09664() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09664");
        com.google.javascript.rhino.head.ast.RegExpLiteral regExpLiteral1 = new com.google.javascript.rhino.head.ast.RegExpLiteral(14);
        int int2 = regExpLiteral1.getAbsolutePosition();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 14 + "'", int2 == 14);
    }

    @Test
    public void test09665() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09665");
        com.google.javascript.rhino.head.ast.Symbol symbol0 = new com.google.javascript.rhino.head.ast.Symbol();
        com.google.javascript.rhino.head.Node node1 = symbol0.getNode();
        int int2 = symbol0.getDeclType();
        com.google.javascript.rhino.head.Node node3 = symbol0.getNode();
        // The following exception was thrown during execution in test generation
        try {
            symbol0.setDeclType((-18802601));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid declType: -18802601");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(node1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNull(node3);
    }

    @Test
    public void test09666() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09666");
        com.google.javascript.rhino.head.ast.RegExpLiteral regExpLiteral1 = new com.google.javascript.rhino.head.ast.RegExpLiteral(18);
        java.lang.String str2 = regExpLiteral1.getValue();
        org.junit.Assert.assertNull(str2);
    }

    @Test
    public void test09667() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09667");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode0 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int1 = functionNode0.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = functionNode0.getTop();
        com.google.javascript.rhino.head.ast.AstNode astNode3 = functionNode0.getBody();
        com.google.javascript.rhino.head.ast.Jump jump9 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump9.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump13 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump9, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode15 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int16 = scriptNode15.getEndLineno();
        int int17 = scriptNode15.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList18 = scriptNode15.getChildScopes();
        com.google.javascript.rhino.head.Node node19 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump9, (com.google.javascript.rhino.head.Node) scriptNode15);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList20 = scriptNode15.getChildScopes();
        com.google.javascript.rhino.head.ast.Jump jump21 = new com.google.javascript.rhino.head.ast.Jump(11, (com.google.javascript.rhino.head.Node) scriptNode15);
        functionNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) scriptNode15);
        // The following exception was thrown during execution in test generation
        try {
            boolean[] booleanArray23 = functionNode0.getParamAndVarConst();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-1) + "'", int1 == (-1));
        org.junit.Assert.assertNotNull(scriptNode2);
        org.junit.Assert.assertNull(astNode3);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNull(scopeList18);
        org.junit.Assert.assertNull(scopeList20);
    }

    @Test
    public void test09668() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09668");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode2 = new com.google.javascript.rhino.head.ast.FunctionNode((int) (byte) 100);
        int int3 = functionNode2.getEncodedSourceStart();
        int int4 = functionNode2.getFunctionCount();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode5 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = functionNode5.getTop();
        functionNode5.setParens((int) (byte) 1, (int) (short) 1);
        int int10 = functionNode5.getRp();
        com.google.javascript.rhino.head.Node node12 = new com.google.javascript.rhino.head.Node(17, (com.google.javascript.rhino.head.Node) functionNode2, (com.google.javascript.rhino.head.Node) functionNode5, (int) (short) 0);
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor13 = null;
        // The following exception was thrown during execution in test generation
        try {
            functionNode5.visit(nodeVisitor13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(scriptNode6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
    }

    @Test
    public void test09669() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09669");
        com.google.javascript.rhino.head.ast.Jump jump3 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump3.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump7 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump3, 0);
        com.google.javascript.rhino.head.ast.Jump jump11 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump11.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump15 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump11, 0);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode16 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int17 = functionNode16.getLp();
        functionNode16.setEncodedSource("");
        functionNode16.flattenSymbolTable(false);
        jump3.addChildAfter((com.google.javascript.rhino.head.Node) jump11, (com.google.javascript.rhino.head.Node) functionNode16);
        int int23 = functionNode16.getLength();
        com.google.javascript.rhino.head.Node node25 = functionNode16.setType(21);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode26 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode27 = functionNode26.getTop();
        com.google.javascript.rhino.head.ast.Name name28 = null;
        functionNode26.setFunctionName(name28);
        int int30 = functionNode26.getLength();
        functionNode26.setFunctionType(19);
        functionNode16.addParam((com.google.javascript.rhino.head.ast.AstNode) functionNode26);
        functionNode16.removeProp((int) (short) 10);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode36 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int37 = functionNode36.getLp();
        functionNode36.setEncodedSource("");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode40 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int41 = functionNode40.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode42 = functionNode40.getTop();
        com.google.javascript.rhino.head.ast.Name name43 = null;
        functionNode40.setFunctionName(name43);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode45 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode46 = functionNode45.getTop();
        functionNode40.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode45);
        int int48 = functionNode45.getRp();
        int int49 = functionNode45.getFunctionType();
        functionNode36.addParam((com.google.javascript.rhino.head.ast.AstNode) functionNode45);
        com.google.javascript.rhino.head.Node node51 = functionNode36.getLastSibling();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode52 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int53 = functionNode52.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode54 = functionNode52.getTop();
        com.google.javascript.rhino.head.ast.Name name55 = null;
        functionNode52.setFunctionName(name55);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode57 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode58 = functionNode57.getTop();
        functionNode52.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode57);
        int int60 = functionNode57.getRp();
        int int61 = functionNode57.getFunctionType();
        boolean boolean62 = functionNode57.requiresActivation();
        functionNode57.setParens((int) ' ', 9);
        functionNode16.addChildAfter(node51, (com.google.javascript.rhino.head.Node) functionNode57);
        com.google.javascript.rhino.head.Node node67 = functionNode57.target;
        com.google.javascript.rhino.head.ast.AstNode astNode68 = functionNode57.getBody();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode70 = new com.google.javascript.rhino.head.ast.FunctionNode(0);
        int int71 = functionNode70.getBaseLineno();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode73 = new com.google.javascript.rhino.head.ast.FunctionNode((-1));
        functionNode70.setParentScope((com.google.javascript.rhino.head.ast.Scope) functionNode73);
        functionNode70.setRp(22);
        int int77 = functionNode57.addFunction(functionNode70);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str78 = functionNode57.debugPrint();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertNotNull(node25);
        org.junit.Assert.assertNotNull(scriptNode27);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 1 + "'", int30 == 1);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertNotNull(scriptNode42);
        org.junit.Assert.assertNotNull(scriptNode46);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertNotNull(node51);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
        org.junit.Assert.assertNotNull(scriptNode54);
        org.junit.Assert.assertNotNull(scriptNode58);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-1) + "'", int60 == (-1));
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 0 + "'", int61 == 0);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNull(node67);
        org.junit.Assert.assertNull(astNode68);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + (-1) + "'", int71 == (-1));
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 0 + "'", int77 == 0);
    }

    @Test
    public void test09670() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09670");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str1 = com.google.javascript.rhino.head.ast.AstNode.operatorToString(1115430013);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid operator: 1115430013");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test09671() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09671");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode0 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 10);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode3 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode4 = functionNode3.getTop();
        functionNode3.setParens((int) (byte) 1, (int) (short) 1);
        functionNode3.setEncodedSourceStart((-1));
        functionNode3.setFunctionIsGetter();
        scope2.addChildToFront((com.google.javascript.rhino.head.Node) functionNode3);
        functionNode0.setBody((com.google.javascript.rhino.head.ast.AstNode) functionNode3);
        functionNode0.setRequiresActivation();
        boolean boolean14 = functionNode0.isExpressionClosure();
        functionNode0.setSourceName("hi!");
        int int17 = functionNode0.getFunctionCount();
        boolean boolean18 = functionNode0.isSetter();
        com.google.javascript.rhino.head.ast.Scope scope20 = functionNode0.getDefiningScope("                                            {\n                                            }\n");
        org.junit.Assert.assertNotNull(scriptNode4);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(scope20);
    }

    @Test
    public void test09672() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09672");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode0 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int1 = functionNode0.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = functionNode0.getTop();
        boolean boolean3 = functionNode0.hasSideEffects();
        java.lang.String str4 = functionNode0.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = functionNode0.getTop();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode6 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int7 = functionNode6.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode8 = functionNode6.getTop();
        boolean boolean9 = functionNode6.hasSideEffects();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int12 = scriptNode11.getEndLineno();
        int int13 = scriptNode11.getBaseLineno();
        com.google.javascript.rhino.head.ast.Jump jump16 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode18 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int19 = scriptNode18.getEndLineno();
        int int20 = scriptNode18.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList21 = scriptNode18.getChildScopes();
        jump16.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode18);
        java.lang.String str23 = scriptNode18.debugPrint();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode11, (com.google.javascript.rhino.head.ast.Scope) scriptNode18);
        com.google.javascript.rhino.head.ast.Scope scope25 = new com.google.javascript.rhino.head.ast.Scope();
        scriptNode18.target = scope25;
        functionNode6.addChildScope(scope25);
        boolean boolean28 = functionNode6.hasConsistentReturnUsage();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode29 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode30 = functionNode29.getTop();
        functionNode29.setParens((int) (byte) 1, (int) (short) 1);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode34 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.Scope scope36 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 10);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode37 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode38 = functionNode37.getTop();
        functionNode37.setParens((int) (byte) 1, (int) (short) 1);
        functionNode37.setEncodedSourceStart((-1));
        functionNode37.setFunctionIsGetter();
        scope36.addChildToFront((com.google.javascript.rhino.head.Node) functionNode37);
        functionNode34.setBody((com.google.javascript.rhino.head.ast.AstNode) functionNode37);
        functionNode34.setFunctionIsSetter();
        int int48 = functionNode29.addFunction(functionNode34);
        java.lang.String str49 = functionNode29.getNextTempName();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode51 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int52 = scriptNode51.getEndLineno();
        int int53 = scriptNode51.getBaseLineno();
        scriptNode51.removeProp(0);
        scriptNode51.setEncodedSourceEnd(19);
        functionNode29.addParam((com.google.javascript.rhino.head.ast.AstNode) scriptNode51);
        functionNode6.addChildrenToFront((com.google.javascript.rhino.head.Node) scriptNode51);
        functionNode0.addChildrenToFront((com.google.javascript.rhino.head.Node) functionNode6);
        com.google.javascript.rhino.head.ast.RegExpLiteral regExpLiteral62 = new com.google.javascript.rhino.head.ast.RegExpLiteral((int) (short) 1);
        java.lang.String str64 = regExpLiteral62.toSource((int) (byte) 10);
        regExpLiteral62.setLineno(0);
        regExpLiteral62.setValue("EOF");
        regExpLiteral62.setLength((int) (byte) 0);
        functionNode6.addRegExp(regExpLiteral62);
        java.lang.String str72 = regExpLiteral62.getFlags();
        boolean boolean73 = regExpLiteral62.hasSideEffects();
        regExpLiteral62.setRelative(830992930);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-1) + "'", int1 == (-1));
        org.junit.Assert.assertNotNull(scriptNode2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "109" + "'", str4, "109");
        org.junit.Assert.assertNotNull(scriptNode5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(scriptNode8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertNull(scopeList21);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str23, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(scriptNode30);
        org.junit.Assert.assertNotNull(scriptNode38);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "$0" + "'", str49, "$0");
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "                    /null/" + "'", str64, "                    /null/");
        org.junit.Assert.assertNull(str72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
    }

    @Test
    public void test09673() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09673");
        com.google.javascript.rhino.head.ast.RegExpLiteral regExpLiteral1 = new com.google.javascript.rhino.head.ast.RegExpLiteral((-1262414679));
        regExpLiteral1.setLength(21);
        com.google.javascript.rhino.head.Node node4 = regExpLiteral1.getFirstChild();
        java.lang.String str5 = regExpLiteral1.getFlags();
        org.junit.Assert.assertNull(node4);
        org.junit.Assert.assertNull(str5);
    }

    @Test
    public void test09674() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09674");
        com.google.javascript.rhino.head.ast.Jump jump2 = new com.google.javascript.rhino.head.ast.Jump(0, 48);
    }

    @Test
    public void test09675() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09675");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode0 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int1 = functionNode0.getLp();
        functionNode0.setLineno(0);
        boolean boolean4 = functionNode0.isGetterOrSetter();
        java.lang.String str5 = functionNode0.getNextTempName();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList6 = functionNode0.getChildScopes();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode7 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int8 = functionNode7.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        java.lang.String str11 = functionNode7.toStringTree(scriptNode10);
        int int12 = scriptNode10.getRegexpCount();
        com.google.javascript.rhino.head.Node node13 = scriptNode10.getLastSibling();
        int int14 = scriptNode10.getRegexpCount();
        functionNode0.addResumptionPoint((com.google.javascript.rhino.head.Node) scriptNode10);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-1) + "'", int1 == (-1));
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "$0" + "'", str5, "$0");
        org.junit.Assert.assertNull(scopeList6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(node13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
    }

    @Test
    public void test09676() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09676");
        com.google.javascript.rhino.head.ast.RegExpLiteral regExpLiteral1 = new com.google.javascript.rhino.head.ast.RegExpLiteral((-22));
        regExpLiteral1.setValue("                          EOF");
        java.lang.String str4 = regExpLiteral1.toString();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode6 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int7 = functionNode6.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode8 = functionNode6.getTop();
        boolean boolean9 = functionNode6.hasSideEffects();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int12 = scriptNode11.getEndLineno();
        int int13 = scriptNode11.getBaseLineno();
        com.google.javascript.rhino.head.ast.Jump jump16 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode18 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int19 = scriptNode18.getEndLineno();
        int int20 = scriptNode18.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList21 = scriptNode18.getChildScopes();
        jump16.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode18);
        java.lang.String str23 = scriptNode18.debugPrint();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode11, (com.google.javascript.rhino.head.ast.Scope) scriptNode18);
        com.google.javascript.rhino.head.ast.Scope scope25 = new com.google.javascript.rhino.head.ast.Scope();
        scriptNode18.target = scope25;
        functionNode6.addChildScope(scope25);
        boolean boolean28 = functionNode6.hasConsistentReturnUsage();
        java.lang.String str29 = functionNode6.getNextTempName();
        com.google.javascript.rhino.head.ast.Jump jump30 = new com.google.javascript.rhino.head.ast.Jump((int) (short) -1, (com.google.javascript.rhino.head.Node) functionNode6);
        java.lang.String str31 = regExpLiteral1.toStringTree((com.google.javascript.rhino.head.ast.ScriptNode) functionNode6);
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor32 = null;
        // The following exception was thrown during execution in test generation
        try {
            functionNode6.visit(nodeVisitor32);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "48" + "'", str4, "48");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(scriptNode8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertNull(scopeList21);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str23, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "$0" + "'", str29, "$0");
        org.junit.Assert.assertNull(str31);
    }

    @Test
    public void test09677() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09677");
        com.google.javascript.rhino.head.ast.Jump jump4 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump4.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump8 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump4, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int11 = scriptNode10.getEndLineno();
        int int12 = scriptNode10.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList13 = scriptNode10.getChildScopes();
        com.google.javascript.rhino.head.Node node14 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump4, (com.google.javascript.rhino.head.Node) scriptNode10);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList15 = scriptNode10.getFunctions();
        int int16 = functionNodeList15.size();
        com.google.javascript.rhino.head.ast.Symbol symbol17 = new com.google.javascript.rhino.head.ast.Symbol();
        com.google.javascript.rhino.head.Node node18 = symbol17.getNode();
        symbol17.setIndex(4);
        java.lang.String str21 = symbol17.getDeclTypeName();
        int int22 = functionNodeList15.lastIndexOf((java.lang.Object) str21);
        java.util.stream.Stream<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeStream23 = functionNodeList15.stream();
        com.google.javascript.rhino.head.ast.Jump jump28 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump28.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump32 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump28, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode34 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int35 = scriptNode34.getEndLineno();
        int int36 = scriptNode34.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList37 = scriptNode34.getChildScopes();
        com.google.javascript.rhino.head.Node node38 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump28, (com.google.javascript.rhino.head.Node) scriptNode34);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList39 = scriptNode34.getFunctions();
        int int40 = functionNodeList39.size();
        com.google.javascript.rhino.head.ast.Symbol symbol41 = new com.google.javascript.rhino.head.ast.Symbol();
        com.google.javascript.rhino.head.Node node42 = symbol41.getNode();
        symbol41.setIndex(4);
        java.lang.String str45 = symbol41.getDeclTypeName();
        int int46 = functionNodeList39.lastIndexOf((java.lang.Object) str45);
        functionNodeList39.clear();
        boolean boolean48 = functionNodeList15.removeAll((java.util.Collection<com.google.javascript.rhino.head.ast.FunctionNode>) functionNodeList39);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNull(scopeList13);
        org.junit.Assert.assertNotNull(functionNodeList15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNull(node18);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "EOF" + "'", str21, "EOF");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNotNull(functionNodeStream23);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNull(scopeList37);
        org.junit.Assert.assertNotNull(functionNodeList39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertNull(node42);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "EOF" + "'", str45, "EOF");
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
    }

    @Test
    public void test09678() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09678");
        com.google.javascript.rhino.head.ast.Jump jump2 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode4 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int5 = scriptNode4.getEndLineno();
        int int6 = scriptNode4.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList7 = scriptNode4.getChildScopes();
        jump2.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode4);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode10 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int11 = functionNode10.getLp();
        functionNode10.setEncodedSource("");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode14 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int15 = functionNode14.getLp();
        functionNode14.setEncodedSource("");
        functionNode14.flattenSymbolTable(false);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode20 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int21 = functionNode20.getLp();
        com.google.javascript.rhino.head.Node node23 = new com.google.javascript.rhino.head.Node((-1), (com.google.javascript.rhino.head.Node) functionNode10, (com.google.javascript.rhino.head.Node) functionNode14, (com.google.javascript.rhino.head.Node) functionNode20, (int) '#');
        jump2.addChildrenToFront((com.google.javascript.rhino.head.Node) functionNode10);
        int int25 = functionNode10.getLength();
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList26 = functionNode10.getStatements();
        functionNode10.removeProp(327364487);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNull(scopeList7);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 1 + "'", int25 == 1);
        org.junit.Assert.assertNotNull(astNodeList26);
    }

    @Test
    public void test09679() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09679");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode0 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int1 = functionNode0.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = functionNode0.getTop();
        boolean boolean3 = functionNode0.hasSideEffects();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList4 = functionNode0.getSymbols();
        functionNode0.setRp(5);
        functionNode0.setParens((int) '#', 24);
        int int10 = functionNode0.getParamCount();
        com.google.javascript.rhino.head.ast.Jump jump13 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        com.google.javascript.rhino.head.ast.Scope scope15 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 10);
        jump13.addChildrenToBack((com.google.javascript.rhino.head.Node) scope15);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode17 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int18 = functionNode17.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode19 = functionNode17.getTop();
        com.google.javascript.rhino.head.ast.Name name20 = null;
        functionNode17.setFunctionName(name20);
        functionNode17.setIsGenerator();
        java.lang.String str23 = functionNode17.getEncodedSource();
        scope15.target = functionNode17;
        functionNode0.setMemberExprNode((com.google.javascript.rhino.head.ast.AstNode) functionNode17);
        // The following exception was thrown during execution in test generation
        try {
            functionNode0.labelId((int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-1) + "'", int1 == (-1));
        org.junit.Assert.assertNotNull(scriptNode2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(symbolList4);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNotNull(scriptNode19);
        org.junit.Assert.assertNull(str23);
    }

    @Test
    public void test09680() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09680");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 10);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode2 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode3 = functionNode2.getTop();
        functionNode2.setParens((int) (byte) 1, (int) (short) 1);
        functionNode2.setEncodedSourceStart((-1));
        functionNode2.setFunctionIsGetter();
        scope1.addChildToFront((com.google.javascript.rhino.head.Node) functionNode2);
        functionNode2.setRp(19);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int15 = scriptNode14.getEndLineno();
        int int16 = scriptNode14.getBaseLineno();
        com.google.javascript.rhino.head.ast.Jump jump19 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode21 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int22 = scriptNode21.getEndLineno();
        int int23 = scriptNode21.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList24 = scriptNode21.getChildScopes();
        jump19.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode21);
        java.lang.String str26 = scriptNode21.debugPrint();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode14, (com.google.javascript.rhino.head.ast.Scope) scriptNode21);
        com.google.javascript.rhino.head.ast.Scope scope28 = new com.google.javascript.rhino.head.ast.Scope();
        scriptNode21.target = scope28;
        java.lang.String str30 = functionNode2.toStringTree(scriptNode21);
        java.lang.String str32 = scriptNode21.toSource((int) (short) 10);
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap33 = scriptNode21.getSymbolTable();
        int int34 = strMap33.size();
        java.lang.Object obj35 = null;
        java.lang.Object obj36 = null;
        boolean boolean37 = strMap33.remove(obj35, obj36);
        com.google.javascript.rhino.head.ast.Symbol symbol39 = new com.google.javascript.rhino.head.ast.Symbol();
        java.lang.String str40 = symbol39.getName();
        com.google.javascript.rhino.head.Node node41 = symbol39.getNode();
        symbol39.setIndex(1);
        java.lang.String str44 = symbol39.getName();
        com.google.javascript.rhino.head.ast.Symbol symbol45 = null;
        boolean boolean46 = strMap33.replace("    109", symbol39, symbol45);
        com.google.javascript.rhino.head.ast.Symbol symbol47 = new com.google.javascript.rhino.head.ast.Symbol();
        com.google.javascript.rhino.head.Node node48 = symbol47.getNode();
        boolean boolean49 = strMap33.containsValue((java.lang.Object) symbol47);
        com.google.javascript.rhino.head.ast.Symbol symbol51 = new com.google.javascript.rhino.head.ast.Symbol();
        com.google.javascript.rhino.head.Node node52 = symbol51.getNode();
        int int53 = symbol51.getDeclType();
        int int54 = symbol51.getDeclType();
        java.lang.String str55 = symbol51.toString();
        java.lang.String str56 = symbol51.toString();
        com.google.javascript.rhino.head.ast.Symbol symbol57 = strMap33.replace("", symbol51);
        strMap33.clear();
        boolean boolean59 = strMap33.isEmpty();
        int int60 = strMap33.size();
        org.junit.Assert.assertNotNull(scriptNode3);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNull(scopeList24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str26, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "                    {\n                    }\n" + "'", str32, "                    {\n                    }\n");
        org.junit.Assert.assertNotNull(strMap33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNull(node41);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNull(node48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNull(node52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "Symbol (EOF) name=null" + "'", str55, "Symbol (EOF) name=null");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "Symbol (EOF) name=null" + "'", str56, "Symbol (EOF) name=null");
        org.junit.Assert.assertNull(symbol57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 0 + "'", int60 == 0);
    }

    @Test
    public void test09681() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09681");
        com.google.javascript.rhino.head.ast.RegExpLiteral regExpLiteral2 = new com.google.javascript.rhino.head.ast.RegExpLiteral((int) (short) 1);
        java.lang.String str4 = regExpLiteral2.toSource((int) (byte) 10);
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator5 = regExpLiteral2.new NodeIterator();
        java.lang.String str7 = regExpLiteral2.toSource(100);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode8 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int9 = functionNode8.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = functionNode8.getTop();
        com.google.javascript.rhino.head.ast.Name name11 = null;
        functionNode8.setFunctionName(name11);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode13 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = functionNode13.getTop();
        functionNode8.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode13);
        java.lang.String str16 = functionNode8.getNextTempName();
        com.google.javascript.rhino.head.Node node18 = new com.google.javascript.rhino.head.Node(350469479, (com.google.javascript.rhino.head.Node) regExpLiteral2, (com.google.javascript.rhino.head.Node) functionNode8, 7);
        regExpLiteral2.setValue("");
        com.google.javascript.rhino.head.ast.Comment comment21 = regExpLiteral2.getJsDocNode();
        regExpLiteral2.setFlags("<=");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "                    /null/" + "'", str4, "                    /null/");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "                                                                                                                                                                                                        /null/" + "'", str7, "                                                                                                                                                                                                        /null/");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(scriptNode10);
        org.junit.Assert.assertNotNull(scriptNode14);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "$0" + "'", str16, "$0");
        org.junit.Assert.assertNull(comment21);
    }

    @Test
    public void test09682() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09682");
        com.google.javascript.rhino.head.ast.RegExpLiteral regExpLiteral3 = new com.google.javascript.rhino.head.ast.RegExpLiteral((-1), 8);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode4 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = functionNode4.getTop();
        functionNode4.setParens((int) (byte) 1, (int) (short) 1);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode9 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.Scope scope11 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 10);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode12 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode13 = functionNode12.getTop();
        functionNode12.setParens((int) (byte) 1, (int) (short) 1);
        functionNode12.setEncodedSourceStart((-1));
        functionNode12.setFunctionIsGetter();
        scope11.addChildToFront((com.google.javascript.rhino.head.Node) functionNode12);
        functionNode9.setBody((com.google.javascript.rhino.head.ast.AstNode) functionNode12);
        functionNode9.setFunctionIsSetter();
        int int23 = functionNode4.addFunction(functionNode9);
        boolean boolean24 = functionNode9.isGenerator();
        java.lang.String str25 = functionNode9.getEncodedSource();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode27 = new com.google.javascript.rhino.head.ast.ScriptNode(21);
        com.google.javascript.rhino.head.Node node28 = new com.google.javascript.rhino.head.Node((-1), (com.google.javascript.rhino.head.Node) regExpLiteral3, (com.google.javascript.rhino.head.Node) functionNode9, (com.google.javascript.rhino.head.Node) scriptNode27);
        int int29 = regExpLiteral3.getAbsolutePosition();
        org.junit.Assert.assertNotNull(scriptNode5);
        org.junit.Assert.assertNotNull(scriptNode13);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
    }

    @Test
    public void test09683() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09683");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode0 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = functionNode0.getTop();
        com.google.javascript.rhino.head.ast.Name name2 = null;
        functionNode0.setFunctionName(name2);
        int int4 = functionNode0.getLength();
        com.google.javascript.rhino.head.ast.Scope scope7 = new com.google.javascript.rhino.head.ast.Scope((int) '4');
        functionNode0.putProp(6, (java.lang.Object) scope7);
        functionNode0.setEncodedSourceStart(9);
        com.google.javascript.rhino.head.ast.Scope scope11 = functionNode0.getParentScope();
        boolean boolean12 = functionNode0.isGetterOrSetter();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList13 = functionNode0.getSymbols();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str14 = functionNode0.getString();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: com.google.javascript.rhino.head.ast.FunctionNode cannot be cast to com.google.javascript.rhino.head.ast.Name");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(scriptNode1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 1 + "'", int4 == 1);
        org.junit.Assert.assertNull(scope11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(symbolList13);
    }

    @Test
    public void test09684() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09684");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode0 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int1 = functionNode0.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = functionNode0.getTop();
        boolean boolean3 = functionNode0.hasSideEffects();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList4 = functionNode0.getSymbols();
        functionNode0.setRp(5);
        com.google.javascript.rhino.head.ast.Scope scope7 = functionNode0.getEnclosingScope();
        functionNode0.setLineno(5);
        functionNode0.setIsExpressionClosure(false);
        functionNode0.setFunctionType(100);
        functionNode0.setFunctionIsSetter();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-1) + "'", int1 == (-1));
        org.junit.Assert.assertNotNull(scriptNode2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(symbolList4);
        org.junit.Assert.assertNull(scope7);
    }

    @Test
    public void test09685() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09685");
        com.google.javascript.rhino.head.ast.RegExpLiteral regExpLiteral2 = new com.google.javascript.rhino.head.ast.RegExpLiteral((-440310255), (int) (short) 10);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode3 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode4 = functionNode3.getTop();
        functionNode3.setParens((int) (byte) 1, (int) (short) 1);
        functionNode3.setEncodedSourceStart((-1));
        java.util.List<com.google.javascript.rhino.head.Node> nodeList10 = functionNode3.getResumptionPoints();
        com.google.javascript.rhino.head.ast.Scope scope12 = functionNode3.getDefiningScope("hi!");
        boolean boolean13 = functionNode3.isGetterOrSetter();
        functionNode3.setSourceName("                                                                                                                                                                                                        /null/");
        java.lang.String str16 = functionNode3.getName();
        com.google.javascript.rhino.head.ast.Jump jump21 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump21.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump25 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump21, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode27 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int28 = scriptNode27.getEndLineno();
        int int29 = scriptNode27.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList30 = scriptNode27.getChildScopes();
        com.google.javascript.rhino.head.Node node31 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump21, (com.google.javascript.rhino.head.Node) scriptNode27);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList32 = scriptNode27.getFunctions();
        functionNodeList32.clear();
        com.google.javascript.rhino.head.ast.Jump jump38 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump38.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump42 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump38, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode44 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int45 = scriptNode44.getEndLineno();
        int int46 = scriptNode44.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList47 = scriptNode44.getChildScopes();
        com.google.javascript.rhino.head.Node node48 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump38, (com.google.javascript.rhino.head.Node) scriptNode44);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList49 = scriptNode44.getFunctions();
        boolean boolean50 = functionNodeList32.removeAll((java.util.Collection<com.google.javascript.rhino.head.ast.FunctionNode>) functionNodeList49);
        java.util.Spliterator<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeSpliterator51 = functionNodeList32.spliterator();
        java.util.stream.Stream<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeStream52 = functionNodeList32.stream();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode53 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode54 = functionNode53.getTop();
        functionNode53.setParens((int) (byte) 1, (int) (short) 1);
        int int60 = functionNode53.getIntProp((int) (short) 100, (int) (byte) 10);
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator61 = functionNode53.spliterator();
        boolean boolean62 = functionNodeList32.contains((java.lang.Object) functionNode53);
        functionNode3.addParam((com.google.javascript.rhino.head.ast.AstNode) functionNode53);
        java.lang.String str64 = functionNode53.getName();
        // The following exception was thrown during execution in test generation
        try {
            regExpLiteral2.setScope((com.google.javascript.rhino.head.ast.Scope) functionNode53);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(scriptNode4);
        org.junit.Assert.assertNull(nodeList10);
        org.junit.Assert.assertNull(scope12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertNull(scopeList30);
        org.junit.Assert.assertNotNull(functionNodeList32);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertNull(scopeList47);
        org.junit.Assert.assertNotNull(functionNodeList49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(functionNodeSpliterator51);
        org.junit.Assert.assertNotNull(functionNodeStream52);
        org.junit.Assert.assertNotNull(scriptNode54);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 10 + "'", int60 == 10);
        org.junit.Assert.assertNotNull(nodeSpliterator61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "" + "'", str64, "");
    }

    @Test
    public void test09686() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09686");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int2 = scriptNode1.getEndLineno();
        int int3 = scriptNode1.getBaseLineno();
        com.google.javascript.rhino.head.ast.Jump jump6 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode8 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int9 = scriptNode8.getEndLineno();
        int int10 = scriptNode8.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList11 = scriptNode8.getChildScopes();
        jump6.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode8);
        java.lang.String str13 = scriptNode8.debugPrint();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode1, (com.google.javascript.rhino.head.ast.Scope) scriptNode8);
        com.google.javascript.rhino.head.ast.AstNode astNode15 = scriptNode1.getParent();
        scriptNode1.setSourceName("                    /null/");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode18 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.Scope scope20 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 10);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode21 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode22 = functionNode21.getTop();
        functionNode21.setParens((int) (byte) 1, (int) (short) 1);
        functionNode21.setEncodedSourceStart((-1));
        functionNode21.setFunctionIsGetter();
        scope20.addChildToFront((com.google.javascript.rhino.head.Node) functionNode21);
        functionNode18.setBody((com.google.javascript.rhino.head.ast.AstNode) functionNode21);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode31 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode32 = functionNode31.getTop();
        functionNode31.setParens((int) (byte) 1, (int) (short) 1);
        functionNode31.setEncodedSourceStart((-1));
        java.util.List<com.google.javascript.rhino.head.Node> nodeList38 = functionNode31.getResumptionPoints();
        int int39 = functionNode31.getLp();
        functionNode18.setBody((com.google.javascript.rhino.head.ast.AstNode) functionNode31);
        com.google.javascript.rhino.head.Node node41 = functionNode31.getNext();
        scriptNode1.addChildScope((com.google.javascript.rhino.head.ast.Scope) functionNode31);
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor43 = functionNode31.iterator();
        functionNode31.setEncodedSourceStart((-817814412));
        int int46 = functionNode31.getParamCount();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNull(scopeList11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str13, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertNull(astNode15);
        org.junit.Assert.assertNotNull(scriptNode22);
        org.junit.Assert.assertNotNull(scriptNode32);
        org.junit.Assert.assertNull(nodeList38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 1 + "'", int39 == 1);
        org.junit.Assert.assertNull(node41);
        org.junit.Assert.assertNotNull(nodeItor43);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
    }

    @Test
    public void test09687() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09687");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode1 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int2 = functionNode1.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode3 = functionNode1.getTop();
        com.google.javascript.rhino.head.ast.Name name4 = null;
        functionNode1.setFunctionName(name4);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode6 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode7 = functionNode6.getTop();
        functionNode1.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode6);
        int int9 = functionNode6.getRp();
        int int10 = functionNode6.getFunctionType();
        com.google.javascript.rhino.head.ast.RegExpLiteral regExpLiteral14 = new com.google.javascript.rhino.head.ast.RegExpLiteral((int) '4', (int) (short) -1);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode15 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int16 = functionNode15.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode17 = functionNode15.getTop();
        boolean boolean18 = functionNode15.hasSideEffects();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode19 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int20 = functionNode19.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode21 = functionNode19.getTop();
        com.google.javascript.rhino.head.ast.Name name22 = null;
        functionNode19.setFunctionName(name22);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode24 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.Scope scope26 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 10);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode27 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode28 = functionNode27.getTop();
        functionNode27.setParens((int) (byte) 1, (int) (short) 1);
        functionNode27.setEncodedSourceStart((-1));
        functionNode27.setFunctionIsGetter();
        scope26.addChildToFront((com.google.javascript.rhino.head.Node) functionNode27);
        functionNode24.setBody((com.google.javascript.rhino.head.ast.AstNode) functionNode27);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode37 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode38 = functionNode37.getTop();
        functionNode37.setParens((int) (byte) 1, (int) (short) 1);
        functionNode37.setEncodedSourceStart((-1));
        java.util.List<com.google.javascript.rhino.head.Node> nodeList44 = functionNode37.getResumptionPoints();
        int int45 = functionNode37.getLp();
        functionNode24.setBody((com.google.javascript.rhino.head.ast.AstNode) functionNode37);
        functionNode19.addParam((com.google.javascript.rhino.head.ast.AstNode) functionNode37);
        com.google.javascript.rhino.head.Node node48 = new com.google.javascript.rhino.head.Node(10, (com.google.javascript.rhino.head.Node) regExpLiteral14, (com.google.javascript.rhino.head.Node) functionNode15, (com.google.javascript.rhino.head.Node) functionNode37);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode49 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int50 = functionNode49.getLp();
        functionNode49.setEncodedSource("");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode53 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int54 = functionNode53.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode55 = functionNode53.getTop();
        com.google.javascript.rhino.head.ast.Name name56 = null;
        functionNode53.setFunctionName(name56);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode58 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode59 = functionNode58.getTop();
        functionNode53.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode58);
        int int61 = functionNode58.getRp();
        int int62 = functionNode58.getFunctionType();
        functionNode49.addParam((com.google.javascript.rhino.head.ast.AstNode) functionNode58);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode64 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int65 = functionNode64.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode66 = functionNode64.getTop();
        com.google.javascript.rhino.head.Node node67 = functionNode64.getLastSibling();
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList68 = functionNode64.getParams();
        functionNode49.setParams(astNodeList68);
        functionNode15.setParams(astNodeList68);
        functionNode6.addResumptionPoint((com.google.javascript.rhino.head.Node) functionNode15);
        int int72 = functionNode15.getEndLineno();
        com.google.javascript.rhino.head.Node node73 = new com.google.javascript.rhino.head.Node((int) (byte) 10, (com.google.javascript.rhino.head.Node) functionNode15);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertNotNull(scriptNode3);
        org.junit.Assert.assertNotNull(scriptNode7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(scriptNode17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertNotNull(scriptNode21);
        org.junit.Assert.assertNotNull(scriptNode28);
        org.junit.Assert.assertNotNull(scriptNode38);
        org.junit.Assert.assertNull(nodeList44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 1 + "'", int45 == 1);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
        org.junit.Assert.assertNotNull(scriptNode55);
        org.junit.Assert.assertNotNull(scriptNode59);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + (-1) + "'", int61 == (-1));
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 0 + "'", int62 == 0);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + (-1) + "'", int65 == (-1));
        org.junit.Assert.assertNotNull(scriptNode66);
        org.junit.Assert.assertNotNull(node67);
        org.junit.Assert.assertNotNull(astNodeList68);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + (-1) + "'", int72 == (-1));
    }

    @Test
    public void test09688() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09688");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode2 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode3 = functionNode2.getTop();
        java.lang.String str4 = scriptNode3.getJsDoc();
        com.google.javascript.rhino.head.Node node6 = scriptNode3.setType(0);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode7 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int8 = functionNode7.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        java.lang.String str11 = functionNode7.toStringTree(scriptNode10);
        com.google.javascript.rhino.head.ast.Scope scope13 = scriptNode10.getDefiningScope("");
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList14 = scriptNode10.getSymbols();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode16 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int17 = scriptNode16.getEndLineno();
        int int18 = scriptNode16.getBaseLineno();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode10, (com.google.javascript.rhino.head.ast.Scope) scriptNode16);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode21 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int22 = scriptNode21.getEndLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode24 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int25 = scriptNode24.getEndLineno();
        scriptNode21.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode24);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode27 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int28 = functionNode27.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode29 = functionNode27.getTop();
        boolean boolean30 = functionNode27.hasSideEffects();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode32 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int33 = scriptNode32.getEndLineno();
        int int34 = scriptNode32.getBaseLineno();
        com.google.javascript.rhino.head.ast.Jump jump37 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode39 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int40 = scriptNode39.getEndLineno();
        int int41 = scriptNode39.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList42 = scriptNode39.getChildScopes();
        jump37.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode39);
        java.lang.String str44 = scriptNode39.debugPrint();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode32, (com.google.javascript.rhino.head.ast.Scope) scriptNode39);
        com.google.javascript.rhino.head.ast.Scope scope46 = new com.google.javascript.rhino.head.ast.Scope();
        scriptNode39.target = scope46;
        functionNode27.addChildScope(scope46);
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode24, (com.google.javascript.rhino.head.ast.Scope) functionNode27);
        com.google.javascript.rhino.head.Node node50 = new com.google.javascript.rhino.head.Node(20, (com.google.javascript.rhino.head.Node) scriptNode3, (com.google.javascript.rhino.head.Node) scriptNode10, (com.google.javascript.rhino.head.Node) scriptNode24);
        boolean boolean51 = scriptNode3.hasSideEffects();
        com.google.javascript.rhino.head.Node node52 = scriptNode3.target;
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList53 = scriptNode3.getStatements();
        com.google.javascript.rhino.head.Node node55 = new com.google.javascript.rhino.head.Node((-18802601), (com.google.javascript.rhino.head.Node) scriptNode3, (int) (byte) 10);
        com.google.javascript.rhino.head.Node node56 = scriptNode3.getLastSibling();
        org.junit.Assert.assertNotNull(scriptNode3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(node6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(scope13);
        org.junit.Assert.assertNotNull(symbolList14);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNotNull(scriptNode29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertNull(scopeList42);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str44, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNull(node52);
        org.junit.Assert.assertNotNull(astNodeList53);
        org.junit.Assert.assertNotNull(node56);
    }

    @Test
    public void test09689() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09689");
        com.google.javascript.rhino.head.ast.Symbol symbol0 = new com.google.javascript.rhino.head.ast.Symbol();
        java.lang.String str1 = symbol0.getDeclTypeName();
        int int2 = symbol0.getDeclType();
        int int3 = symbol0.getIndex();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = new com.google.javascript.rhino.head.ast.ScriptNode((-1044852625));
        int int6 = scriptNode5.getBaseLineno();
        symbol0.setContainingTable((com.google.javascript.rhino.head.ast.Scope) scriptNode5);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "EOF" + "'", str1, "EOF");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
    }

    @Test
    public void test09690() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09690");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode2 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int3 = functionNode2.getLp();
        functionNode2.setLp((int) (short) 1);
        int int8 = functionNode2.getIntProp(4, 26);
        com.google.javascript.rhino.head.ast.Jump jump9 = new com.google.javascript.rhino.head.ast.Jump(3, (com.google.javascript.rhino.head.Node) functionNode2);
        com.google.javascript.rhino.head.Node node10 = new com.google.javascript.rhino.head.Node((int) '4', (com.google.javascript.rhino.head.Node) functionNode2);
        functionNode2.setFunctionType(11);
        boolean boolean13 = functionNode2.requiresActivation();
        com.google.javascript.rhino.head.ast.Scope scope14 = functionNode2.getParentScope();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 26 + "'", int8 == 26);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(scope14);
    }

    @Test
    public void test09691() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09691");
        com.google.javascript.rhino.head.ast.Jump jump4 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump4.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump8 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump4, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int11 = scriptNode10.getEndLineno();
        int int12 = scriptNode10.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList13 = scriptNode10.getChildScopes();
        com.google.javascript.rhino.head.Node node14 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump4, (com.google.javascript.rhino.head.Node) scriptNode10);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList15 = scriptNode10.getFunctions();
        functionNodeList15.clear();
        functionNodeList15.clear();
        java.util.Iterator<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeItor18 = functionNodeList15.iterator();
        com.google.javascript.rhino.head.ast.RegExpLiteral regExpLiteral20 = new com.google.javascript.rhino.head.ast.RegExpLiteral((int) (short) 1);
        java.lang.String str22 = regExpLiteral20.toSource((int) (byte) 10);
        regExpLiteral20.setFlags("-1\tSCRIPT -1 1\n");
        regExpLiteral20.removeProp(8);
        java.lang.String str27 = regExpLiteral20.getValue();
        regExpLiteral20.setLineno(10);
        regExpLiteral20.removeChildren();
        boolean boolean31 = functionNodeList15.equals((java.lang.Object) regExpLiteral20);
        com.google.javascript.rhino.head.ast.Jump jump32 = new com.google.javascript.rhino.head.ast.Jump();
        boolean boolean33 = functionNodeList15.remove((java.lang.Object) jump32);
        int int34 = functionNodeList15.size();
        com.google.javascript.rhino.head.ast.Jump jump39 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump39.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump43 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump39, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode45 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int46 = scriptNode45.getEndLineno();
        int int47 = scriptNode45.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList48 = scriptNode45.getChildScopes();
        com.google.javascript.rhino.head.Node node49 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump39, (com.google.javascript.rhino.head.Node) scriptNode45);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList50 = scriptNode45.getFunctions();
        int int51 = functionNodeList50.size();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator52 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        functionNodeList50.sort((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator52);
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator54 = positionComparator52.reversed();
        com.google.javascript.rhino.head.ast.Jump jump58 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump58.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump62 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump58, 0);
        com.google.javascript.rhino.head.ast.Jump jump66 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump66.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump70 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump66, 0);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode71 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int72 = functionNode71.getLp();
        functionNode71.setEncodedSource("");
        functionNode71.flattenSymbolTable(false);
        jump58.addChildAfter((com.google.javascript.rhino.head.Node) jump66, (com.google.javascript.rhino.head.Node) functionNode71);
        int int78 = functionNode71.getPosition();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode80 = new com.google.javascript.rhino.head.ast.FunctionNode(0);
        boolean boolean81 = functionNode80.isExpressionClosure();
        int int82 = positionComparator52.compare((com.google.javascript.rhino.head.ast.AstNode) functionNode71, (com.google.javascript.rhino.head.ast.AstNode) functionNode80);
        int int83 = functionNode80.getAbsolutePosition();
        java.lang.String str84 = functionNode80.getSourceName();
        int int85 = functionNodeList15.lastIndexOf((java.lang.Object) functionNode80);
        functionNode80.setIsExpressionClosure(false);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNull(scopeList13);
        org.junit.Assert.assertNotNull(functionNodeList15);
        org.junit.Assert.assertNotNull(functionNodeItor18);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "                    /null/" + "'", str22, "                    /null/");
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertNull(scopeList48);
        org.junit.Assert.assertNotNull(functionNodeList50);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertNotNull(astNodeComparator54);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + (-1) + "'", int72 == (-1));
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + (-1) + "'", int78 == (-1));
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + (-1) + "'", int82 == (-1));
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 0 + "'", int83 == 0);
        org.junit.Assert.assertNull(str84);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + (-1) + "'", int85 == (-1));
    }

    @Test
    public void test09692() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09692");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode((-324184714));
    }

    @Test
    public void test09693() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09693");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode0 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int1 = functionNode0.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = functionNode0.getTop();
        boolean boolean3 = functionNode0.hasSideEffects();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int6 = scriptNode5.getEndLineno();
        int int7 = scriptNode5.getBaseLineno();
        com.google.javascript.rhino.head.ast.Jump jump10 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode12 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int13 = scriptNode12.getEndLineno();
        int int14 = scriptNode12.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList15 = scriptNode12.getChildScopes();
        jump10.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode12);
        java.lang.String str17 = scriptNode12.debugPrint();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode5, (com.google.javascript.rhino.head.ast.Scope) scriptNode12);
        com.google.javascript.rhino.head.ast.Scope scope19 = new com.google.javascript.rhino.head.ast.Scope();
        scriptNode12.target = scope19;
        functionNode0.addChildScope(scope19);
        boolean boolean22 = functionNode0.hasConsistentReturnUsage();
        java.util.Map<com.google.javascript.rhino.head.Node, int[]> nodeMap23 = functionNode0.getLiveLocals();
        boolean boolean24 = functionNode0.isGetter();
        java.lang.Object obj26 = functionNode0.getProp((int) '#');
        functionNode0.setPosition(819764875);
        java.lang.String str29 = functionNode0.getJsDoc();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-1) + "'", int1 == (-1));
        org.junit.Assert.assertNotNull(scriptNode2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNull(scopeList15);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str17, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNull(nodeMap23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertNull(str29);
    }

    @Test
    public void test09694() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09694");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode0 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int1 = functionNode0.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = functionNode0.getTop();
        boolean boolean3 = functionNode0.hasSideEffects();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList4 = functionNode0.getSymbols();
        functionNode0.setRp(5);
        com.google.javascript.rhino.head.ast.Scope scope7 = functionNode0.getEnclosingScope();
        functionNode0.setLineno(5);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode12 = new com.google.javascript.rhino.head.ast.FunctionNode((int) (byte) 100);
        int int13 = functionNode12.getEncodedSourceStart();
        int int14 = functionNode12.getFunctionCount();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode15 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode16 = functionNode15.getTop();
        functionNode15.setParens((int) (byte) 1, (int) (short) 1);
        int int20 = functionNode15.getRp();
        com.google.javascript.rhino.head.Node node22 = new com.google.javascript.rhino.head.Node(17, (com.google.javascript.rhino.head.Node) functionNode12, (com.google.javascript.rhino.head.Node) functionNode15, (int) (short) 0);
        com.google.javascript.rhino.head.ast.Symbol symbol24 = functionNode15.getSymbol("$0");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode25 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int26 = functionNode25.getLp();
        functionNode25.setEncodedSource("");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode29 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.Scope scope31 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 10);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode32 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode33 = functionNode32.getTop();
        functionNode32.setParens((int) (byte) 1, (int) (short) 1);
        functionNode32.setEncodedSourceStart((-1));
        functionNode32.setFunctionIsGetter();
        scope31.addChildToFront((com.google.javascript.rhino.head.Node) functionNode32);
        functionNode29.setBody((com.google.javascript.rhino.head.ast.AstNode) functionNode32);
        int int42 = functionNode25.addFunction(functionNode29);
        functionNode15.setBody((com.google.javascript.rhino.head.ast.AstNode) functionNode25);
        functionNode0.addChildrenToFront((com.google.javascript.rhino.head.Node) functionNode25);
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor45 = null;
        // The following exception was thrown during execution in test generation
        try {
            functionNode25.visit(nodeVisitor45);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-1) + "'", int1 == (-1));
        org.junit.Assert.assertNotNull(scriptNode2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(symbolList4);
        org.junit.Assert.assertNull(scope7);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(scriptNode16);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertNull(symbol24);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNotNull(scriptNode33);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
    }

    @Test
    public void test09695() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09695");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode0 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = functionNode0.getTop();
        functionNode0.setParens((int) (byte) 1, (int) (short) 1);
        functionNode0.setEncodedSourceStart((-1));
        java.util.List<com.google.javascript.rhino.head.Node> nodeList7 = functionNode0.getResumptionPoints();
        com.google.javascript.rhino.head.ast.Scope scope9 = functionNode0.getDefiningScope("hi!");
        boolean boolean10 = functionNode0.isGetterOrSetter();
        com.google.javascript.rhino.head.ast.Scope scope12 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 10);
        int[] intArray19 = new int[] { 25, 17, (short) 0, 20, 19, (byte) 1 };
        functionNode0.addLiveLocals((com.google.javascript.rhino.head.Node) scope12, intArray19);
        com.google.javascript.rhino.head.Node node22 = functionNode0.setType(100);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList23 = functionNode0.getFunctions();
        com.google.javascript.rhino.head.ast.Jump jump28 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump28.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump32 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump28, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode34 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int35 = scriptNode34.getEndLineno();
        int int36 = scriptNode34.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList37 = scriptNode34.getChildScopes();
        com.google.javascript.rhino.head.Node node38 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump28, (com.google.javascript.rhino.head.Node) scriptNode34);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList39 = scriptNode34.getFunctions();
        int int40 = functionNodeList39.size();
        functionNodeList39.clear();
        int int43 = functionNodeList39.indexOf((java.lang.Object) 10L);
        boolean boolean44 = functionNodeList23.containsAll((java.util.Collection<com.google.javascript.rhino.head.ast.FunctionNode>) functionNodeList39);
        java.lang.Object[] objArray45 = functionNodeList39.toArray();
        java.util.Spliterator<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeSpliterator46 = functionNodeList39.spliterator();
        org.junit.Assert.assertNotNull(scriptNode1);
        org.junit.Assert.assertNull(nodeList7);
        org.junit.Assert.assertNull(scope9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[25, 17, 0, 20, 19, 1]");
        org.junit.Assert.assertNotNull(node22);
        org.junit.Assert.assertNotNull(functionNodeList23);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNull(scopeList37);
        org.junit.Assert.assertNotNull(functionNodeList39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(objArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray45), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray45), "[]");
        org.junit.Assert.assertNotNull(functionNodeSpliterator46);
    }

    @Test
    public void test09696() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09696");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode2 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int3 = functionNode2.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode4 = functionNode2.getTop();
        boolean boolean5 = functionNode2.hasSideEffects();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList6 = functionNode2.getSymbols();
        functionNode2.setRp(5);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode9 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int10 = functionNode9.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode12 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        java.lang.String str13 = functionNode9.toStringTree(scriptNode12);
        int int14 = scriptNode12.getRegexpCount();
        com.google.javascript.rhino.head.Node node15 = scriptNode12.getLastSibling();
        com.google.javascript.rhino.head.Node node16 = node15.getNext();
        com.google.javascript.rhino.head.Node node17 = new com.google.javascript.rhino.head.Node(2, (com.google.javascript.rhino.head.Node) functionNode2, node15);
        com.google.javascript.rhino.head.ast.Jump jump18 = new com.google.javascript.rhino.head.ast.Jump((-616130778), (com.google.javascript.rhino.head.Node) functionNode2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(scriptNode4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(symbolList6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(node15);
        org.junit.Assert.assertNull(node16);
    }

    @Test
    public void test09697() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09697");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode1 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int2 = functionNode1.getLp();
        functionNode1.setEncodedSource("");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode5 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int6 = functionNode5.getLp();
        functionNode5.setEncodedSource("");
        functionNode5.flattenSymbolTable(false);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode11 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int12 = functionNode11.getLp();
        com.google.javascript.rhino.head.Node node14 = new com.google.javascript.rhino.head.Node((-1), (com.google.javascript.rhino.head.Node) functionNode1, (com.google.javascript.rhino.head.Node) functionNode5, (com.google.javascript.rhino.head.Node) functionNode11, (int) '#');
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList15 = functionNode1.getChildScopes();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode17 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int18 = scriptNode17.getEndLineno();
        int int19 = scriptNode17.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList20 = scriptNode17.getChildScopes();
        functionNode1.setMemberExprNode((com.google.javascript.rhino.head.ast.AstNode) scriptNode17);
        functionNode1.setEncodedSourceEnd((int) (short) 100);
        java.lang.String str24 = functionNode1.getJsDoc();
        functionNode1.setEncodedSourceBounds((-1), (int) (short) -1);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList28 = functionNode1.getFunctions();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode30 = new com.google.javascript.rhino.head.ast.FunctionNode(13);
        functionNode30.setFunctionIsGetter();
        boolean boolean32 = functionNodeList28.contains((java.lang.Object) functionNode30);
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.ast.FunctionNode functionNode34 = functionNodeList28.remove((-146877426));
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNull(scopeList15);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNull(scopeList20);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(functionNodeList28);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
    }

    @Test
    public void test09698() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09698");
        com.google.javascript.rhino.head.ast.Name name2 = null;
        com.google.javascript.rhino.head.ast.FunctionNode functionNode3 = new com.google.javascript.rhino.head.ast.FunctionNode(136, name2);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode4 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int5 = functionNode4.getLp();
        functionNode4.setEncodedSource("");
        boolean boolean8 = functionNode4.isExpressionClosure();
        boolean boolean9 = functionNode4.hasSideEffects();
        com.google.javascript.rhino.head.Node node10 = new com.google.javascript.rhino.head.Node(346933763, (com.google.javascript.rhino.head.Node) functionNode3, (com.google.javascript.rhino.head.Node) functionNode4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
    }

    @Test
    public void test09699() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09699");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode0 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int1 = functionNode0.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = functionNode0.getTop();
        boolean boolean3 = functionNode0.hasSideEffects();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int6 = scriptNode5.getEndLineno();
        int int7 = scriptNode5.getBaseLineno();
        com.google.javascript.rhino.head.ast.Jump jump10 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode12 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int13 = scriptNode12.getEndLineno();
        int int14 = scriptNode12.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList15 = scriptNode12.getChildScopes();
        jump10.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode12);
        java.lang.String str17 = scriptNode12.debugPrint();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode5, (com.google.javascript.rhino.head.ast.Scope) scriptNode12);
        com.google.javascript.rhino.head.ast.Scope scope19 = new com.google.javascript.rhino.head.ast.Scope();
        scriptNode12.target = scope19;
        functionNode0.addChildScope(scope19);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode22 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int23 = functionNode22.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode24 = functionNode22.getTop();
        com.google.javascript.rhino.head.ast.Name name25 = null;
        functionNode22.setFunctionName(name25);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode27 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode28 = functionNode27.getTop();
        functionNode22.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode27);
        com.google.javascript.rhino.head.ast.Scope scope32 = new com.google.javascript.rhino.head.ast.Scope((int) (short) -1, 0);
        functionNode22.replaceWith(scope32);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode34 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int35 = functionNode34.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode36 = functionNode34.getTop();
        com.google.javascript.rhino.head.ast.Name name37 = null;
        functionNode34.setFunctionName(name37);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode39 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode40 = functionNode39.getTop();
        functionNode34.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode39);
        int int42 = functionNode22.addFunction(functionNode34);
        int int43 = functionNode0.addFunction(functionNode34);
        functionNode34.putIntProp(22, 2);
        com.google.javascript.rhino.head.ast.AstNode astNode47 = functionNode34.getBody();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode48 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int49 = functionNode48.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode51 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        java.lang.String str52 = functionNode48.toStringTree(scriptNode51);
        int int53 = scriptNode51.getRegexpCount();
        com.google.javascript.rhino.head.Node node54 = scriptNode51.getLastSibling();
        int int55 = scriptNode51.getRegexpCount();
        functionNode34.setTop(scriptNode51);
        int int57 = functionNode34.getEncodedSourceEnd();
        int int58 = functionNode34.getParamCount();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-1) + "'", int1 == (-1));
        org.junit.Assert.assertNotNull(scriptNode2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNull(scopeList15);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str17, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNotNull(scriptNode24);
        org.junit.Assert.assertNotNull(scriptNode28);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertNotNull(scriptNode36);
        org.junit.Assert.assertNotNull(scriptNode40);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertNull(astNode47);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertNotNull(node54);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
    }

    @Test
    public void test09700() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09700");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int3 = scriptNode2.getEndLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int6 = scriptNode5.getEndLineno();
        scriptNode2.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode5);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode8 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int9 = functionNode8.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = functionNode8.getTop();
        boolean boolean11 = functionNode8.hasSideEffects();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode13 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int14 = scriptNode13.getEndLineno();
        int int15 = scriptNode13.getBaseLineno();
        com.google.javascript.rhino.head.ast.Jump jump18 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode20 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int21 = scriptNode20.getEndLineno();
        int int22 = scriptNode20.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList23 = scriptNode20.getChildScopes();
        jump18.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode20);
        java.lang.String str25 = scriptNode20.debugPrint();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode13, (com.google.javascript.rhino.head.ast.Scope) scriptNode20);
        com.google.javascript.rhino.head.ast.Scope scope27 = new com.google.javascript.rhino.head.ast.Scope();
        scriptNode20.target = scope27;
        functionNode8.addChildScope(scope27);
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode5, (com.google.javascript.rhino.head.ast.Scope) functionNode8);
        int int31 = functionNode8.getFunctionCount();
        com.google.javascript.rhino.head.ast.Jump jump33 = new com.google.javascript.rhino.head.ast.Jump(350469479, (com.google.javascript.rhino.head.Node) functionNode8, (-3285918));
        int int34 = functionNode8.getLength();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(scriptNode10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNull(scopeList23);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str25, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 1 + "'", int34 == 1);
    }

    @Test
    public void test09701() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09701");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode0 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int1 = functionNode0.getLp();
        functionNode0.setLp((int) (short) 1);
        int int6 = functionNode0.getIntProp(4, 26);
        functionNode0.flattenSymbolTable(true);
        java.lang.Object obj9 = functionNode0.getCompilerData();
        functionNode0.setRp(48);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode13 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int14 = functionNode13.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode16 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        java.lang.String str17 = functionNode13.toStringTree(scriptNode16);
        int int18 = scriptNode16.getRegexpCount();
        com.google.javascript.rhino.head.Node node19 = scriptNode16.getLastSibling();
        int int20 = scriptNode16.getRegexpCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode21 = new com.google.javascript.rhino.head.ast.ScriptNode();
        int int22 = scriptNode21.getLineno();
        scriptNode16.addChildScope((com.google.javascript.rhino.head.ast.Scope) scriptNode21);
        com.google.javascript.rhino.head.ast.Jump jump25 = new com.google.javascript.rhino.head.ast.Jump((int) ' ', (com.google.javascript.rhino.head.Node) scriptNode21, (int) (byte) 100);
        java.lang.String str26 = functionNode0.toStringTree(scriptNode21);
        com.google.javascript.rhino.head.Node node27 = scriptNode21.target;
        java.lang.String str28 = scriptNode21.getSourceName();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-1) + "'", int1 == (-1));
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 26 + "'", int6 == 26);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(node19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNull(node27);
        org.junit.Assert.assertNull(str28);
    }

    @Test
    public void test09702() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09702");
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.ast.Symbol symbol2 = new com.google.javascript.rhino.head.ast.Symbol((-544960523), "                          EOF");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid declType: -544960523");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test09703() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09703");
        com.google.javascript.rhino.head.Node node1 = null;
        com.google.javascript.rhino.head.ast.Jump jump4 = new com.google.javascript.rhino.head.ast.Jump(22, 0);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode6 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int7 = functionNode6.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode8 = functionNode6.getTop();
        boolean boolean9 = functionNode6.hasSideEffects();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList10 = functionNode6.getSymbols();
        int int11 = functionNode6.getLength();
        boolean boolean12 = functionNode6.isGetterOrSetter();
        com.google.javascript.rhino.head.ast.Jump jump16 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump16.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump20 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump16, 0);
        com.google.javascript.rhino.head.ast.Jump jump24 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump24.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump28 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump24, 0);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode29 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int30 = functionNode29.getLp();
        functionNode29.setEncodedSource("");
        functionNode29.flattenSymbolTable(false);
        jump16.addChildAfter((com.google.javascript.rhino.head.Node) jump24, (com.google.javascript.rhino.head.Node) functionNode29);
        functionNode6.setBody((com.google.javascript.rhino.head.ast.AstNode) jump16);
        int int37 = functionNode6.getEncodedSourceStart();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode38 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode39 = functionNode38.getTop();
        com.google.javascript.rhino.head.ast.Name name40 = null;
        functionNode38.setFunctionName(name40);
        int int42 = functionNode38.getLength();
        com.google.javascript.rhino.head.ast.Scope scope45 = new com.google.javascript.rhino.head.ast.Scope((int) '4');
        functionNode38.putProp(6, (java.lang.Object) scope45);
        functionNode38.setEncodedSourceStart(9);
        com.google.javascript.rhino.head.Node node50 = new com.google.javascript.rhino.head.Node(11, (com.google.javascript.rhino.head.Node) functionNode6, (com.google.javascript.rhino.head.Node) functionNode38, 0);
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.Node node51 = new com.google.javascript.rhino.head.Node((-2), node1, (com.google.javascript.rhino.head.Node) jump4, (com.google.javascript.rhino.head.Node) functionNode6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(scriptNode8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(symbolList10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertNotNull(scriptNode39);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 1 + "'", int42 == 1);
    }

    @Test
    public void test09704() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09704");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode0 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int1 = functionNode0.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = functionNode0.getTop();
        com.google.javascript.rhino.head.ast.Name name3 = null;
        functionNode0.setFunctionName(name3);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode5 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = functionNode5.getTop();
        functionNode0.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode5);
        functionNode5.setIsExpressionClosure(true);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode11 = new com.google.javascript.rhino.head.ast.FunctionNode((int) (byte) 100);
        int int12 = functionNode5.addFunction(functionNode11);
        com.google.javascript.rhino.head.ast.Name name13 = null;
        functionNode5.setFunctionName(name13);
        com.google.javascript.rhino.head.Node node15 = functionNode5.getLastSibling();
        functionNode5.setIsExpressionClosure(true);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode18 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode19 = functionNode18.getTop();
        functionNode18.setParens((int) (byte) 1, (int) (short) 1);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode23 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.Scope scope25 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 10);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode26 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode27 = functionNode26.getTop();
        functionNode26.setParens((int) (byte) 1, (int) (short) 1);
        functionNode26.setEncodedSourceStart((-1));
        functionNode26.setFunctionIsGetter();
        scope25.addChildToFront((com.google.javascript.rhino.head.Node) functionNode26);
        functionNode23.setBody((com.google.javascript.rhino.head.ast.AstNode) functionNode26);
        functionNode23.setFunctionIsSetter();
        int int37 = functionNode18.addFunction(functionNode23);
        functionNode18.setEncodedSourceStart(1);
        boolean boolean40 = functionNode18.isExpressionClosure();
        com.google.javascript.rhino.head.Node node41 = functionNode18.target;
        functionNode18.setFunctionType((int) (short) -1);
        functionNode18.setEncodedSourceStart(22);
        int int46 = functionNode5.addFunction(functionNode18);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-1) + "'", int1 == (-1));
        org.junit.Assert.assertNotNull(scriptNode2);
        org.junit.Assert.assertNotNull(scriptNode6);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(node15);
        org.junit.Assert.assertNotNull(scriptNode19);
        org.junit.Assert.assertNotNull(scriptNode27);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNull(node41);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 1 + "'", int46 == 1);
    }

    @Test
    public void test09705() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09705");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode0 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = functionNode0.getTop();
        com.google.javascript.rhino.head.ast.Name name2 = null;
        functionNode0.setFunctionName(name2);
        boolean boolean4 = functionNode0.requiresActivation();
        com.google.javascript.rhino.head.ast.Jump jump8 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump8.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump12 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump8, 0);
        com.google.javascript.rhino.head.ast.Jump jump16 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump16.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump20 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump16, 0);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode21 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int22 = functionNode21.getLp();
        functionNode21.setEncodedSource("");
        functionNode21.flattenSymbolTable(false);
        jump8.addChildAfter((com.google.javascript.rhino.head.Node) jump16, (com.google.javascript.rhino.head.Node) functionNode21);
        com.google.javascript.rhino.head.Node node28 = functionNode21.target;
        functionNode0.setBody((com.google.javascript.rhino.head.ast.AstNode) functionNode21);
        int int30 = functionNode21.getEncodedSourceStart();
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList31 = functionNode21.getFunctions();
        java.lang.String str32 = functionNode21.getJsDoc();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode33 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int34 = functionNode33.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode35 = functionNode33.getTop();
        com.google.javascript.rhino.head.ast.Name name36 = null;
        functionNode33.setFunctionName(name36);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode38 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode39 = functionNode38.getTop();
        functionNode33.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode38);
        java.lang.String str41 = functionNode33.getNextTempName();
        java.lang.String str42 = functionNode33.getEncodedSource();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode44 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int45 = functionNode44.getLp();
        functionNode44.setEncodedSource("");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode48 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int49 = functionNode48.getLp();
        functionNode48.setEncodedSource("");
        functionNode48.flattenSymbolTable(false);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode54 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int55 = functionNode54.getLp();
        com.google.javascript.rhino.head.Node node57 = new com.google.javascript.rhino.head.Node((-1), (com.google.javascript.rhino.head.Node) functionNode44, (com.google.javascript.rhino.head.Node) functionNode48, (com.google.javascript.rhino.head.Node) functionNode54, (int) '#');
        com.google.javascript.rhino.head.ast.AstNode astNode58 = functionNode44.getBody();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode59 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int60 = functionNode59.getLp();
        functionNode59.setEncodedSource("");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode63 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int64 = functionNode63.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode65 = functionNode63.getTop();
        com.google.javascript.rhino.head.ast.Name name66 = null;
        functionNode63.setFunctionName(name66);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode68 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode69 = functionNode68.getTop();
        functionNode63.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode68);
        int int71 = functionNode68.getRp();
        int int72 = functionNode68.getFunctionType();
        functionNode59.addParam((com.google.javascript.rhino.head.ast.AstNode) functionNode68);
        com.google.javascript.rhino.head.ast.Scope scope74 = functionNode68.getEnclosingScope();
        functionNode44.setBody((com.google.javascript.rhino.head.ast.AstNode) functionNode68);
        functionNode68.setLp(26);
        functionNode33.addChildScope((com.google.javascript.rhino.head.ast.Scope) functionNode68);
        java.lang.String str79 = functionNode33.getName();
        int int80 = functionNode21.compareTo((com.google.javascript.rhino.head.ast.AstNode) functionNode33);
        // The following exception was thrown during execution in test generation
        try {
            double double81 = functionNode21.getDouble();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: com.google.javascript.rhino.head.ast.FunctionNode cannot be cast to com.google.javascript.rhino.head.ast.NumberLiteral");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(scriptNode1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNull(node28);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertNotNull(functionNodeList31);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertNotNull(scriptNode35);
        org.junit.Assert.assertNotNull(scriptNode39);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "$0" + "'", str41, "$0");
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1));
        org.junit.Assert.assertNull(astNode58);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-1) + "'", int60 == (-1));
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + (-1) + "'", int64 == (-1));
        org.junit.Assert.assertNotNull(scriptNode65);
        org.junit.Assert.assertNotNull(scriptNode69);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + (-1) + "'", int71 == (-1));
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 0 + "'", int72 == 0);
        org.junit.Assert.assertNotNull(scope74);
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "" + "'", str79, "");
// flaky:         org.junit.Assert.assertTrue("'" + int80 + "' != '" + (-1064887969) + "'", int80 == (-1064887969));
    }

    @Test
    public void test09706() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09706");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode0 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int1 = functionNode0.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = functionNode0.getTop();
        com.google.javascript.rhino.head.ast.Name name3 = null;
        functionNode0.setFunctionName(name3);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode5 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = functionNode5.getTop();
        functionNode0.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode5);
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList8 = functionNode0.getParams();
        functionNode0.setRequiresActivation();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = new com.google.javascript.rhino.head.ast.ScriptNode();
        int int11 = scriptNode10.getEncodedSourceEnd();
        functionNode0.addResumptionPoint((com.google.javascript.rhino.head.Node) scriptNode10);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList13 = scriptNode10.getFunctions();
        // The following exception was thrown during execution in test generation
        try {
            scriptNode10.setString("                      /hi!/-1\tSCRIPT -1 1\n");
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: com.google.javascript.rhino.head.ast.ScriptNode cannot be cast to com.google.javascript.rhino.head.ast.Name");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-1) + "'", int1 == (-1));
        org.junit.Assert.assertNotNull(scriptNode2);
        org.junit.Assert.assertNotNull(scriptNode6);
        org.junit.Assert.assertNotNull(astNodeList8);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(functionNodeList13);
    }

    @Test
    public void test09707() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09707");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 10);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode2 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode3 = functionNode2.getTop();
        functionNode2.setParens((int) (byte) 1, (int) (short) 1);
        functionNode2.setEncodedSourceStart((-1));
        functionNode2.setFunctionIsGetter();
        scope1.addChildToFront((com.google.javascript.rhino.head.Node) functionNode2);
        functionNode2.setRp(19);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int15 = scriptNode14.getEndLineno();
        int int16 = scriptNode14.getBaseLineno();
        com.google.javascript.rhino.head.ast.Jump jump19 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode21 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int22 = scriptNode21.getEndLineno();
        int int23 = scriptNode21.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList24 = scriptNode21.getChildScopes();
        jump19.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode21);
        java.lang.String str26 = scriptNode21.debugPrint();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode14, (com.google.javascript.rhino.head.ast.Scope) scriptNode21);
        com.google.javascript.rhino.head.ast.Scope scope28 = new com.google.javascript.rhino.head.ast.Scope();
        scriptNode21.target = scope28;
        java.lang.String str30 = functionNode2.toStringTree(scriptNode21);
        java.lang.String str32 = scriptNode21.toSource((int) (short) 10);
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap33 = scriptNode21.getSymbolTable();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode35 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int36 = scriptNode35.getEndLineno();
        int int37 = scriptNode35.getBaseLineno();
        scriptNode35.removeProp(0);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList40 = scriptNode35.getSymbols();
        boolean boolean41 = strMap33.containsValue((java.lang.Object) symbolList40);
        java.util.Collection<com.google.javascript.rhino.head.ast.Symbol> symbolCollection42 = strMap33.values();
        com.google.javascript.rhino.head.ast.Jump jump45 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode47 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int48 = scriptNode47.getEndLineno();
        int int49 = scriptNode47.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList50 = scriptNode47.getChildScopes();
        jump45.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode47);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode53 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int54 = functionNode53.getLp();
        functionNode53.setEncodedSource("");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode57 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int58 = functionNode57.getLp();
        functionNode57.setEncodedSource("");
        functionNode57.flattenSymbolTable(false);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode63 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int64 = functionNode63.getLp();
        com.google.javascript.rhino.head.Node node66 = new com.google.javascript.rhino.head.Node((-1), (com.google.javascript.rhino.head.Node) functionNode53, (com.google.javascript.rhino.head.Node) functionNode57, (com.google.javascript.rhino.head.Node) functionNode63, (int) '#');
        jump45.addChildrenToFront((com.google.javascript.rhino.head.Node) functionNode53);
        int int68 = functionNode53.getLength();
        java.lang.String str69 = functionNode53.getName();
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor70 = functionNode53.iterator();
        boolean boolean71 = strMap33.containsValue((java.lang.Object) functionNode53);
        java.util.Set<java.lang.String> strSet72 = strMap33.keySet();
        java.util.Collection<com.google.javascript.rhino.head.ast.Symbol> symbolCollection73 = strMap33.values();
        org.junit.Assert.assertNotNull(scriptNode3);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNull(scopeList24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str26, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "                    {\n                    }\n" + "'", str32, "                    {\n                    }\n");
        org.junit.Assert.assertNotNull(strMap33);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertNotNull(symbolList40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(symbolCollection42);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertNull(scopeList50);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + (-1) + "'", int58 == (-1));
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + (-1) + "'", int64 == (-1));
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 1 + "'", int68 == 1);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "" + "'", str69, "");
        org.junit.Assert.assertNotNull(nodeItor70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(strSet72);
        org.junit.Assert.assertNotNull(symbolCollection73);
    }

    @Test
    public void test09708() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09708");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode1 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int2 = functionNode1.getLp();
        functionNode1.setEncodedSource("");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode5 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int6 = functionNode5.getLp();
        functionNode5.setEncodedSource("");
        functionNode5.flattenSymbolTable(false);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode11 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int12 = functionNode11.getLp();
        com.google.javascript.rhino.head.Node node14 = new com.google.javascript.rhino.head.Node((-1), (com.google.javascript.rhino.head.Node) functionNode1, (com.google.javascript.rhino.head.Node) functionNode5, (com.google.javascript.rhino.head.Node) functionNode11, (int) '#');
        functionNode11.flattenSymbolTable(true);
        functionNode11.setLineno(1);
        java.lang.String str19 = functionNode11.getNextTempName();
        int int20 = functionNode11.depth();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode21 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int22 = functionNode21.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode23 = functionNode21.getTop();
        com.google.javascript.rhino.head.ast.AstNode astNode24 = functionNode21.getBody();
        java.lang.String str25 = functionNode11.toStringTree((com.google.javascript.rhino.head.ast.ScriptNode) functionNode21);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode26 = functionNode11.getTop();
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.Node node27 = scriptNode26.getDefault();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "$0" + "'", str19, "$0");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNotNull(scriptNode23);
        org.junit.Assert.assertNull(astNode24);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNotNull(scriptNode26);
    }

    @Test
    public void test09709() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09709");
        com.google.javascript.rhino.head.ast.Scope scope0 = new com.google.javascript.rhino.head.ast.Scope();
        scope0.setBounds(0, 10);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode4 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = functionNode4.getTop();
        int int6 = functionNode4.getRegexpCount();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode7 = functionNode4.getEnclosingFunction();
        java.lang.String str8 = scope0.toStringTree((com.google.javascript.rhino.head.ast.ScriptNode) functionNode4);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode10 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int11 = functionNode10.getLp();
        functionNode10.setEncodedSource("");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode14 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int15 = functionNode14.getLp();
        functionNode14.setEncodedSource("");
        functionNode14.flattenSymbolTable(false);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode20 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int21 = functionNode20.getLp();
        com.google.javascript.rhino.head.Node node23 = new com.google.javascript.rhino.head.Node((-1), (com.google.javascript.rhino.head.Node) functionNode10, (com.google.javascript.rhino.head.Node) functionNode14, (com.google.javascript.rhino.head.Node) functionNode20, (int) '#');
        boolean boolean24 = functionNode20.isGenerator();
        int int25 = functionNode20.getFunctionType();
        com.google.javascript.rhino.head.Node node26 = functionNode20.getFirstChild();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode27 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int28 = functionNode27.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode30 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        java.lang.String str31 = functionNode27.toStringTree(scriptNode30);
        functionNode27.setFunctionIsGetter();
        com.google.javascript.rhino.head.ast.AstNode astNode33 = functionNode27.getBody();
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList34 = functionNode27.getParams();
        int int35 = functionNode27.getFunctionType();
        functionNode27.setBaseLineno(350469479);
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList38 = functionNode27.getStatements();
        functionNode20.setParams(astNodeList38);
        functionNode4.setParams(astNodeList38);
        org.junit.Assert.assertNotNull(scriptNode5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNull(functionNode7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNull(node26);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNull(astNode33);
        org.junit.Assert.assertNotNull(astNodeList34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertNotNull(astNodeList38);
    }

    @Test
    public void test09710() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09710");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode0 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = functionNode0.getTop();
        com.google.javascript.rhino.head.ast.Name name2 = null;
        functionNode0.setFunctionName(name2);
        boolean boolean4 = functionNode0.requiresActivation();
        com.google.javascript.rhino.head.ast.RegExpLiteral regExpLiteral6 = new com.google.javascript.rhino.head.ast.RegExpLiteral((int) (short) 1);
        java.lang.String str8 = regExpLiteral6.toSource((int) (byte) 10);
        regExpLiteral6.setFlags("-1\tSCRIPT -1 1\n");
        regExpLiteral6.removeProp(8);
        java.lang.String str13 = regExpLiteral6.getValue();
        regExpLiteral6.setLineno(10);
        regExpLiteral6.removeChildren();
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor17 = regExpLiteral6.iterator();
        functionNode0.addRegExp(regExpLiteral6);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode19 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int20 = functionNode19.getLp();
        functionNode19.setEncodedSource("");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode23 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.Scope scope25 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 10);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode26 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode27 = functionNode26.getTop();
        functionNode26.setParens((int) (byte) 1, (int) (short) 1);
        functionNode26.setEncodedSourceStart((-1));
        functionNode26.setFunctionIsGetter();
        scope25.addChildToFront((com.google.javascript.rhino.head.Node) functionNode26);
        functionNode23.setBody((com.google.javascript.rhino.head.ast.AstNode) functionNode26);
        int int36 = functionNode19.addFunction(functionNode23);
        functionNode0.addChildToBack((com.google.javascript.rhino.head.Node) functionNode19);
        functionNode0.setLength(136);
        // The following exception was thrown during execution in test generation
        try {
            int int41 = functionNode0.getExistingIntProp((-2749035));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(scriptNode1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "                    /null/" + "'", str8, "                    /null/");
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(nodeItor17);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertNotNull(scriptNode27);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
    }

    @Test
    public void test09711() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09711");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 10);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode2 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode3 = functionNode2.getTop();
        functionNode2.setParens((int) (byte) 1, (int) (short) 1);
        functionNode2.setEncodedSourceStart((-1));
        functionNode2.setFunctionIsGetter();
        scope1.addChildToFront((com.google.javascript.rhino.head.Node) functionNode2);
        functionNode2.setRp(19);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int15 = scriptNode14.getEndLineno();
        int int16 = scriptNode14.getBaseLineno();
        com.google.javascript.rhino.head.ast.Jump jump19 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode21 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int22 = scriptNode21.getEndLineno();
        int int23 = scriptNode21.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList24 = scriptNode21.getChildScopes();
        jump19.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode21);
        java.lang.String str26 = scriptNode21.debugPrint();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode14, (com.google.javascript.rhino.head.ast.Scope) scriptNode21);
        com.google.javascript.rhino.head.ast.Scope scope28 = new com.google.javascript.rhino.head.ast.Scope();
        scriptNode21.target = scope28;
        java.lang.String str30 = functionNode2.toStringTree(scriptNode21);
        java.lang.String str32 = scriptNode21.toSource((int) (short) 10);
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap33 = scriptNode21.getSymbolTable();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode35 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int36 = scriptNode35.getEndLineno();
        int int37 = scriptNode35.getBaseLineno();
        scriptNode35.removeProp(0);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList40 = scriptNode35.getSymbols();
        boolean boolean41 = strMap33.containsValue((java.lang.Object) symbolList40);
        java.util.Collection<com.google.javascript.rhino.head.ast.Symbol> symbolCollection42 = strMap33.values();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode44 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int45 = scriptNode44.getEndLineno();
        int int46 = scriptNode44.getBaseLineno();
        com.google.javascript.rhino.head.ast.Jump jump49 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode51 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int52 = scriptNode51.getEndLineno();
        int int53 = scriptNode51.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList54 = scriptNode51.getChildScopes();
        jump49.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode51);
        java.lang.String str56 = scriptNode51.debugPrint();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode44, (com.google.javascript.rhino.head.ast.Scope) scriptNode51);
        scriptNode44.setRelative(21);
        com.google.javascript.rhino.head.ast.Jump jump64 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump64.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump68 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump64, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode70 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int71 = scriptNode70.getEndLineno();
        int int72 = scriptNode70.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList73 = scriptNode70.getChildScopes();
        com.google.javascript.rhino.head.Node node74 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump64, (com.google.javascript.rhino.head.Node) scriptNode70);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList75 = scriptNode70.getChildScopes();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList76 = scriptNode70.getSymbols();
        scriptNode44.addChildScope((com.google.javascript.rhino.head.ast.Scope) scriptNode70);
        java.lang.String str78 = scriptNode44.getSourceName();
        boolean boolean79 = strMap33.containsKey((java.lang.Object) str78);
        strMap33.clear();
        com.google.javascript.rhino.head.ast.Symbol symbol82 = new com.google.javascript.rhino.head.ast.Symbol();
        symbol82.setIndex(6);
        java.lang.String str85 = symbol82.toString();
        com.google.javascript.rhino.head.Node node86 = symbol82.getNode();
        java.lang.String str87 = symbol82.toString();
        com.google.javascript.rhino.head.ast.Scope scope89 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        symbol82.setNode((com.google.javascript.rhino.head.Node) scope89);
        int int91 = symbol82.getDeclType();
        int int92 = symbol82.getIndex();
        com.google.javascript.rhino.head.ast.Symbol symbol93 = strMap33.put("            -1\tSCRIPT -1 1\n", symbol82);
        org.junit.Assert.assertNotNull(scriptNode3);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNull(scopeList24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str26, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "                    {\n                    }\n" + "'", str32, "                    {\n                    }\n");
        org.junit.Assert.assertNotNull(strMap33);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertNotNull(symbolList40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(symbolCollection42);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
        org.junit.Assert.assertNull(scopeList54);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str56, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + (-1) + "'", int71 == (-1));
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + (-1) + "'", int72 == (-1));
        org.junit.Assert.assertNull(scopeList73);
        org.junit.Assert.assertNull(scopeList75);
        org.junit.Assert.assertNotNull(symbolList76);
        org.junit.Assert.assertNull(str78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "Symbol (EOF) name=null" + "'", str85, "Symbol (EOF) name=null");
        org.junit.Assert.assertNull(node86);
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "Symbol (EOF) name=null" + "'", str87, "Symbol (EOF) name=null");
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + 0 + "'", int91 == 0);
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + 6 + "'", int92 == 6);
        org.junit.Assert.assertNull(symbol93);
    }

    @Test
    public void test09712() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09712");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int2 = scriptNode1.getEndLineno();
        int int3 = scriptNode1.getBaseLineno();
        scriptNode1.removeProp(0);
        scriptNode1.setEncodedSourceEnd(19);
        java.lang.String str8 = scriptNode1.toString();
        int int9 = scriptNode1.getEndLineno();
        com.google.javascript.rhino.head.ast.AstRoot astRoot10 = scriptNode1.getAstRoot();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str11 = astRoot10.getNextTempName();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "136" + "'", str8, "136");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNull(astRoot10);
    }

    @Test
    public void test09713() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09713");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int2 = scriptNode1.getEndLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode4 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int5 = scriptNode4.getEndLineno();
        scriptNode1.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode4);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode7 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int8 = functionNode7.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode9 = functionNode7.getTop();
        boolean boolean10 = functionNode7.hasSideEffects();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode12 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int13 = scriptNode12.getEndLineno();
        int int14 = scriptNode12.getBaseLineno();
        com.google.javascript.rhino.head.ast.Jump jump17 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode19 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int20 = scriptNode19.getEndLineno();
        int int21 = scriptNode19.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList22 = scriptNode19.getChildScopes();
        jump17.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode19);
        java.lang.String str24 = scriptNode19.debugPrint();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode12, (com.google.javascript.rhino.head.ast.Scope) scriptNode19);
        com.google.javascript.rhino.head.ast.Scope scope26 = new com.google.javascript.rhino.head.ast.Scope();
        scriptNode19.target = scope26;
        functionNode7.addChildScope(scope26);
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode4, (com.google.javascript.rhino.head.ast.Scope) functionNode7);
        int int30 = functionNode7.getFunctionCount();
        int int31 = functionNode7.getEncodedSourceEnd();
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList32 = functionNode7.getStatements();
        com.google.javascript.rhino.head.ast.Name name33 = functionNode7.getFunctionName();
        int int34 = functionNode7.getParamCount();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(scriptNode9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertNull(scopeList22);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str24, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNotNull(astNodeList32);
        org.junit.Assert.assertNull(name33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
    }

    @Test
    public void test09714() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09714");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode1 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int2 = functionNode1.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode3 = functionNode1.getTop();
        boolean boolean4 = functionNode1.hasSideEffects();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int7 = scriptNode6.getEndLineno();
        int int8 = scriptNode6.getBaseLineno();
        com.google.javascript.rhino.head.ast.Jump jump11 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode13 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int14 = scriptNode13.getEndLineno();
        int int15 = scriptNode13.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList16 = scriptNode13.getChildScopes();
        jump11.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode13);
        java.lang.String str18 = scriptNode13.debugPrint();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode6, (com.google.javascript.rhino.head.ast.Scope) scriptNode13);
        com.google.javascript.rhino.head.ast.Scope scope20 = new com.google.javascript.rhino.head.ast.Scope();
        scriptNode13.target = scope20;
        functionNode1.addChildScope(scope20);
        boolean boolean23 = functionNode1.hasConsistentReturnUsage();
        java.lang.String str24 = functionNode1.getNextTempName();
        com.google.javascript.rhino.head.ast.Jump jump25 = new com.google.javascript.rhino.head.ast.Jump((int) (short) -1, (com.google.javascript.rhino.head.Node) functionNode1);
        boolean boolean26 = functionNode1.isExpressionClosure();
        com.google.javascript.rhino.head.ast.RegExpLiteral regExpLiteral28 = new com.google.javascript.rhino.head.ast.RegExpLiteral((int) (short) 1);
        regExpLiteral28.setFlags("-1\tSCRIPT -1 1\n");
        regExpLiteral28.setValue("hi!");
        functionNode1.addRegExp(regExpLiteral28);
        java.lang.String str34 = regExpLiteral28.getFlags();
        java.lang.String str35 = regExpLiteral28.getValue();
        java.lang.String str37 = regExpLiteral28.toSource(19);
        regExpLiteral28.setValue("109");
        regExpLiteral28.setValue("136\tSCRIPT 136 1\n");
        int int42 = regExpLiteral28.getPosition();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertNotNull(scriptNode3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNull(scopeList16);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str18, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "$0" + "'", str24, "$0");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str34, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!" + "'", str35, "hi!");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "                                      /hi!/-1\tSCRIPT -1 1\n" + "'", str37, "                                      /hi!/-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 1 + "'", int42 == 1);
    }

    @Test
    public void test09715() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09715");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode3 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int4 = functionNode3.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = functionNode3.getTop();
        boolean boolean6 = functionNode3.hasSideEffects();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode8 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int9 = scriptNode8.getEndLineno();
        int int10 = scriptNode8.getBaseLineno();
        com.google.javascript.rhino.head.ast.Jump jump13 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode15 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int16 = scriptNode15.getEndLineno();
        int int17 = scriptNode15.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList18 = scriptNode15.getChildScopes();
        jump13.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode15);
        java.lang.String str20 = scriptNode15.debugPrint();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode8, (com.google.javascript.rhino.head.ast.Scope) scriptNode15);
        com.google.javascript.rhino.head.ast.Scope scope22 = new com.google.javascript.rhino.head.ast.Scope();
        scriptNode15.target = scope22;
        functionNode3.addChildScope(scope22);
        boolean boolean25 = functionNode3.hasConsistentReturnUsage();
        java.lang.String str26 = functionNode3.getNextTempName();
        com.google.javascript.rhino.head.ast.Jump jump27 = new com.google.javascript.rhino.head.ast.Jump((int) (short) -1, (com.google.javascript.rhino.head.Node) functionNode3);
        boolean boolean28 = functionNode3.isExpressionClosure();
        functionNode3.putIntProp(1, 0);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode32 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int33 = functionNode32.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode34 = functionNode32.getTop();
        com.google.javascript.rhino.head.Node node35 = functionNode32.getLastSibling();
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList36 = functionNode32.getParams();
        functionNode3.target = functionNode32;
        com.google.javascript.rhino.head.Node node38 = new com.google.javascript.rhino.head.Node((-592978996), (com.google.javascript.rhino.head.Node) functionNode32);
        int int39 = functionNode32.getFunctionType();
        com.google.javascript.rhino.head.ast.Name name41 = null;
        com.google.javascript.rhino.head.ast.FunctionNode functionNode42 = new com.google.javascript.rhino.head.ast.FunctionNode(15, name41);
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList43 = functionNode42.getParams();
        int int46 = functionNode42.getIntProp(35, (int) (short) 10);
        java.lang.String str47 = functionNode42.getSourceName();
        com.google.javascript.rhino.head.Node node48 = new com.google.javascript.rhino.head.Node(200442009, (com.google.javascript.rhino.head.Node) functionNode32, (com.google.javascript.rhino.head.Node) functionNode42);
        boolean boolean49 = functionNode32.hasChildren();
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(scriptNode5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNull(scopeList18);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str20, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "$0" + "'", str26, "$0");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertNotNull(scriptNode34);
        org.junit.Assert.assertNotNull(node35);
        org.junit.Assert.assertNotNull(astNodeList36);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNotNull(astNodeList43);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 10 + "'", int46 == 10);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
    }

    @Test
    public void test09716() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09716");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope(1724962859);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode2 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int3 = functionNode2.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode4 = functionNode2.getTop();
        com.google.javascript.rhino.head.ast.Name name5 = null;
        functionNode2.setFunctionName(name5);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode7 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode8 = functionNode7.getTop();
        functionNode2.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode7);
        int int10 = functionNode7.getRp();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator11 = functionNode7.spliterator();
        java.lang.String str12 = functionNode7.shortName();
        com.google.javascript.rhino.head.ast.Scope scope13 = functionNode7.getEnclosingScope();
        // The following exception was thrown during execution in test generation
        try {
            scope1.setLoop((com.google.javascript.rhino.head.ast.Jump) scope13);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(scriptNode4);
        org.junit.Assert.assertNotNull(scriptNode8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(nodeSpliterator11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "FunctionNode" + "'", str12, "FunctionNode");
        org.junit.Assert.assertNotNull(scope13);
    }

    @Test
    public void test09717() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09717");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode1 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = functionNode1.getTop();
        functionNode1.setParens((int) (byte) 1, (int) (short) 1);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode6 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.Scope scope8 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 10);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode9 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = functionNode9.getTop();
        functionNode9.setParens((int) (byte) 1, (int) (short) 1);
        functionNode9.setEncodedSourceStart((-1));
        functionNode9.setFunctionIsGetter();
        scope8.addChildToFront((com.google.javascript.rhino.head.Node) functionNode9);
        functionNode6.setBody((com.google.javascript.rhino.head.ast.AstNode) functionNode9);
        functionNode6.setFunctionIsSetter();
        int int20 = functionNode1.addFunction(functionNode6);
        functionNode1.setEncodedSourceStart(1);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList23 = functionNode1.getChildScopes();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode25 = new com.google.javascript.rhino.head.ast.FunctionNode((-1262414679));
        boolean boolean26 = functionNode25.isExpressionClosure();
        com.google.javascript.rhino.head.Node node28 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) functionNode1, (com.google.javascript.rhino.head.Node) functionNode25, 350469479);
        int int29 = functionNode1.getLength();
        boolean boolean30 = functionNode1.isGetter();
        com.google.javascript.rhino.head.Node node31 = functionNode1.target;
        org.junit.Assert.assertNotNull(scriptNode2);
        org.junit.Assert.assertNotNull(scriptNode10);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNull(scopeList23);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1 + "'", int29 == 1);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNull(node31);
    }

    @Test
    public void test09718() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09718");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode1 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = functionNode1.getTop();
        functionNode1.setParens((int) (byte) 1, (int) (short) 1);
        com.google.javascript.rhino.head.Node node6 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) functionNode1);
        int int7 = functionNode1.getEncodedSourceEnd();
        com.google.javascript.rhino.head.ast.Jump jump12 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump12.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump16 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump12, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode18 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int19 = scriptNode18.getEndLineno();
        int int20 = scriptNode18.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList21 = scriptNode18.getChildScopes();
        com.google.javascript.rhino.head.Node node22 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump12, (com.google.javascript.rhino.head.Node) scriptNode18);
        java.lang.String str23 = scriptNode18.getSourceName();
        functionNode1.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode18);
        com.google.javascript.rhino.head.ast.Jump jump26 = new com.google.javascript.rhino.head.ast.Jump((int) (short) 0);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode27 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int28 = functionNode27.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode29 = functionNode27.getTop();
        com.google.javascript.rhino.head.ast.Name name30 = null;
        functionNode27.setFunctionName(name30);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode32 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode33 = functionNode32.getTop();
        functionNode27.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode32);
        com.google.javascript.rhino.head.ast.Scope scope37 = new com.google.javascript.rhino.head.ast.Scope((int) (short) -1, 0);
        functionNode27.replaceWith(scope37);
        functionNode27.setBaseLineno((int) (short) 10);
        jump26.addChildrenToBack((com.google.javascript.rhino.head.Node) functionNode27);
        com.google.javascript.rhino.head.ast.Symbol symbol43 = functionNode27.getSymbol("                                                                                                                                                                                                        {\n                                                                                                                                                                                                        }\n");
        scriptNode18.addChildrenToBack((com.google.javascript.rhino.head.Node) functionNode27);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode45 = functionNode27.getEnclosingFunction();
        org.junit.Assert.assertNotNull(scriptNode2);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertNull(scopeList21);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNotNull(scriptNode29);
        org.junit.Assert.assertNotNull(scriptNode33);
        org.junit.Assert.assertNull(symbol43);
        org.junit.Assert.assertNull(functionNode45);
    }

    @Test
    public void test09719() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09719");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode0 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = functionNode0.getTop();
        functionNode0.setParens((int) (byte) 1, (int) (short) 1);
        com.google.javascript.rhino.head.ast.AstNode astNode5 = null;
        functionNode0.setParent(astNode5);
        boolean boolean7 = functionNode0.isGetter();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator8 = functionNode0.spliterator();
        int int9 = functionNode0.getParamCount();
        org.junit.Assert.assertNotNull(scriptNode1);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(nodeSpliterator8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
    }

    @Test
    public void test09720() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09720");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode((-616130778));
        int int2 = scriptNode1.getLength();
        scriptNode1.setEndLineno((int) ' ');
        scriptNode1.flattenSymbolTable(false);
        int int7 = scriptNode1.getRegexpCount();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
    }

    @Test
    public void test09721() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09721");
        com.google.javascript.rhino.head.ast.Symbol symbol0 = new com.google.javascript.rhino.head.ast.Symbol();
        java.lang.String str1 = symbol0.getName();
        com.google.javascript.rhino.head.Node node2 = symbol0.getNode();
        java.lang.String str3 = symbol0.toString();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode4 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int5 = functionNode4.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode7 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        java.lang.String str8 = functionNode4.toStringTree(scriptNode7);
        functionNode4.setFunctionIsGetter();
        com.google.javascript.rhino.head.ast.AstNode astNode10 = functionNode4.getBody();
        functionNode4.setParens(21, (int) '#');
        int int14 = functionNode4.getLineno();
        functionNode4.setRp(9);
        symbol0.setContainingTable((com.google.javascript.rhino.head.ast.Scope) functionNode4);
        symbol0.setName("1299931104\tSCRIPT 1299931104 1\n");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Symbol (EOF) name=null" + "'", str3, "Symbol (EOF) name=null");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(astNode10);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
    }

    @Test
    public void test09722() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09722");
        com.google.javascript.rhino.head.ast.Jump jump4 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump4.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump8 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump4, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int11 = scriptNode10.getEndLineno();
        int int12 = scriptNode10.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList13 = scriptNode10.getChildScopes();
        com.google.javascript.rhino.head.Node node14 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump4, (com.google.javascript.rhino.head.Node) scriptNode10);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList15 = scriptNode10.getFunctions();
        functionNodeList15.clear();
        functionNodeList15.clear();
        java.util.Iterator<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeItor18 = functionNodeList15.iterator();
        com.google.javascript.rhino.head.ast.Jump jump23 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump23.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump27 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump23, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode29 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int30 = scriptNode29.getEndLineno();
        int int31 = scriptNode29.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList32 = scriptNode29.getChildScopes();
        com.google.javascript.rhino.head.Node node33 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump23, (com.google.javascript.rhino.head.Node) scriptNode29);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList34 = scriptNode29.getFunctions();
        int int35 = functionNodeList34.size();
        com.google.javascript.rhino.head.ast.Jump jump41 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump41.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump45 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump41, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode47 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int48 = scriptNode47.getEndLineno();
        int int49 = scriptNode47.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList50 = scriptNode47.getChildScopes();
        com.google.javascript.rhino.head.Node node51 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump41, (com.google.javascript.rhino.head.Node) scriptNode47);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList52 = scriptNode47.getFunctions();
        functionNodeList52.clear();
        com.google.javascript.rhino.head.ast.Jump jump58 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump58.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump62 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump58, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode64 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int65 = scriptNode64.getEndLineno();
        int int66 = scriptNode64.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList67 = scriptNode64.getChildScopes();
        com.google.javascript.rhino.head.Node node68 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump58, (com.google.javascript.rhino.head.Node) scriptNode64);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList69 = scriptNode64.getFunctions();
        boolean boolean70 = functionNodeList52.removeAll((java.util.Collection<com.google.javascript.rhino.head.ast.FunctionNode>) functionNodeList69);
        boolean boolean71 = functionNodeList34.addAll(0, (java.util.Collection<com.google.javascript.rhino.head.ast.FunctionNode>) functionNodeList52);
        com.google.javascript.rhino.head.ast.Jump jump76 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump76.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump80 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump76, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode82 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int83 = scriptNode82.getEndLineno();
        int int84 = scriptNode82.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList85 = scriptNode82.getChildScopes();
        com.google.javascript.rhino.head.Node node86 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump76, (com.google.javascript.rhino.head.Node) scriptNode82);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList87 = scriptNode82.getFunctions();
        int int88 = functionNodeList87.size();
        functionNodeList87.clear();
        int int91 = functionNodeList87.indexOf((java.lang.Object) 10L);
        java.util.Iterator<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeItor92 = functionNodeList87.iterator();
        boolean boolean93 = functionNodeList34.retainAll((java.util.Collection<com.google.javascript.rhino.head.ast.FunctionNode>) functionNodeList87);
        boolean boolean94 = functionNodeList15.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.FunctionNode>) functionNodeList87);
        java.util.Spliterator<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeSpliterator95 = functionNodeList87.spliterator();
        java.lang.Object[] objArray96 = functionNodeList87.toArray();
        int int97 = functionNodeList87.size();
        java.util.ListIterator<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeItor98 = functionNodeList87.listIterator();
        int int99 = functionNodeList87.size();
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNull(scopeList13);
        org.junit.Assert.assertNotNull(functionNodeList15);
        org.junit.Assert.assertNotNull(functionNodeItor18);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNull(scopeList32);
        org.junit.Assert.assertNotNull(functionNodeList34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertNull(scopeList50);
        org.junit.Assert.assertNotNull(functionNodeList52);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + (-1) + "'", int65 == (-1));
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + (-1) + "'", int66 == (-1));
        org.junit.Assert.assertNull(scopeList67);
        org.junit.Assert.assertNotNull(functionNodeList69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + (-1) + "'", int83 == (-1));
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + (-1) + "'", int84 == (-1));
        org.junit.Assert.assertNull(scopeList85);
        org.junit.Assert.assertNotNull(functionNodeList87);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + 0 + "'", int88 == 0);
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + (-1) + "'", int91 == (-1));
        org.junit.Assert.assertNotNull(functionNodeItor92);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertNotNull(functionNodeSpliterator95);
        org.junit.Assert.assertNotNull(objArray96);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray96), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray96), "[]");
        org.junit.Assert.assertTrue("'" + int97 + "' != '" + 0 + "'", int97 == 0);
        org.junit.Assert.assertNotNull(functionNodeItor98);
        org.junit.Assert.assertTrue("'" + int99 + "' != '" + 0 + "'", int99 == 0);
    }

    @Test
    public void test09723() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09723");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode0 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int1 = functionNode0.getLp();
        functionNode0.setEncodedSource("");
        com.google.javascript.rhino.head.Node node4 = functionNode0.getLastChild();
        int int5 = functionNode0.getPosition();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-1) + "'", int1 == (-1));
        org.junit.Assert.assertNull(node4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
    }

    @Test
    public void test09724() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09724");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode3 = new com.google.javascript.rhino.head.ast.FunctionNode((int) (byte) 100);
        int int4 = functionNode3.getEncodedSourceStart();
        int int5 = functionNode3.getFunctionCount();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode6 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode7 = functionNode6.getTop();
        functionNode6.setParens((int) (byte) 1, (int) (short) 1);
        int int11 = functionNode6.getRp();
        com.google.javascript.rhino.head.Node node13 = new com.google.javascript.rhino.head.Node(17, (com.google.javascript.rhino.head.Node) functionNode3, (com.google.javascript.rhino.head.Node) functionNode6, (int) (short) 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode15 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int16 = scriptNode15.getEndLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode18 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int19 = scriptNode18.getEndLineno();
        scriptNode15.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode18);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode21 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int22 = functionNode21.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode23 = functionNode21.getTop();
        boolean boolean24 = functionNode21.hasSideEffects();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode26 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int27 = scriptNode26.getEndLineno();
        int int28 = scriptNode26.getBaseLineno();
        com.google.javascript.rhino.head.ast.Jump jump31 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode33 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int34 = scriptNode33.getEndLineno();
        int int35 = scriptNode33.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList36 = scriptNode33.getChildScopes();
        jump31.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode33);
        java.lang.String str38 = scriptNode33.debugPrint();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode26, (com.google.javascript.rhino.head.ast.Scope) scriptNode33);
        com.google.javascript.rhino.head.ast.Scope scope40 = new com.google.javascript.rhino.head.ast.Scope();
        scriptNode33.target = scope40;
        functionNode21.addChildScope(scope40);
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode18, (com.google.javascript.rhino.head.ast.Scope) functionNode21);
        com.google.javascript.rhino.head.Node node45 = new com.google.javascript.rhino.head.Node(8, (com.google.javascript.rhino.head.Node) functionNode3, (com.google.javascript.rhino.head.Node) scriptNode18, (int) 'a');
        com.google.javascript.rhino.head.ast.AstNode astNode46 = functionNode3.getMemberExprNode();
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor47 = null;
        // The following exception was thrown during execution in test generation
        try {
            functionNode3.visit(nodeVisitor47);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(scriptNode7);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNotNull(scriptNode23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertNull(scopeList36);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str38, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertNull(astNode46);
    }

    @Test
    public void test09725() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09725");
        com.google.javascript.rhino.head.ast.Jump jump3 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump3.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump7 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump3, 0);
        com.google.javascript.rhino.head.ast.Jump jump11 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump11.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump15 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump11, 0);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode16 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int17 = functionNode16.getLp();
        functionNode16.setEncodedSource("");
        functionNode16.flattenSymbolTable(false);
        jump3.addChildAfter((com.google.javascript.rhino.head.Node) jump11, (com.google.javascript.rhino.head.Node) functionNode16);
        int int23 = functionNode16.getPosition();
        java.util.Map<com.google.javascript.rhino.head.Node, int[]> nodeMap24 = functionNode16.getLiveLocals();
        com.google.javascript.rhino.head.ast.Scope scope25 = functionNode16.getEnclosingScope();
        com.google.javascript.rhino.head.Node node27 = com.google.javascript.rhino.head.Node.newString("Scope");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode30 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int31 = functionNode30.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode32 = functionNode30.getTop();
        boolean boolean33 = functionNode30.hasSideEffects();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode35 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int36 = scriptNode35.getEndLineno();
        int int37 = scriptNode35.getBaseLineno();
        com.google.javascript.rhino.head.ast.Jump jump40 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode42 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int43 = scriptNode42.getEndLineno();
        int int44 = scriptNode42.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList45 = scriptNode42.getChildScopes();
        jump40.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode42);
        java.lang.String str47 = scriptNode42.debugPrint();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode35, (com.google.javascript.rhino.head.ast.Scope) scriptNode42);
        com.google.javascript.rhino.head.ast.Scope scope49 = new com.google.javascript.rhino.head.ast.Scope();
        scriptNode42.target = scope49;
        functionNode30.addChildScope(scope49);
        boolean boolean52 = functionNode30.hasConsistentReturnUsage();
        java.lang.String str53 = functionNode30.getNextTempName();
        com.google.javascript.rhino.head.ast.Jump jump54 = new com.google.javascript.rhino.head.ast.Jump((int) (short) -1, (com.google.javascript.rhino.head.Node) functionNode30);
        boolean boolean55 = functionNode30.isExpressionClosure();
        functionNode30.putIntProp(1, 0);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode59 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int60 = functionNode59.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode61 = functionNode59.getTop();
        com.google.javascript.rhino.head.Node node62 = functionNode59.getLastSibling();
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList63 = functionNode59.getParams();
        functionNode30.target = functionNode59;
        com.google.javascript.rhino.head.Node node65 = new com.google.javascript.rhino.head.Node((-592978996), (com.google.javascript.rhino.head.Node) functionNode59);
        int int66 = functionNode59.getFunctionType();
        node27.addChildToFront((com.google.javascript.rhino.head.Node) functionNode59);
        int int68 = functionNode16.getIndexForNameNode(node27);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNull(nodeMap24);
        org.junit.Assert.assertNull(scope25);
        org.junit.Assert.assertNotNull(node27);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNotNull(scriptNode32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertNull(scopeList45);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str47, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "$0" + "'", str53, "$0");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-1) + "'", int60 == (-1));
        org.junit.Assert.assertNotNull(scriptNode61);
        org.junit.Assert.assertNotNull(node62);
        org.junit.Assert.assertNotNull(astNodeList63);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 0 + "'", int66 == 0);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + (-1) + "'", int68 == (-1));
    }

    @Test
    public void test09726() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09726");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode0 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int1 = functionNode0.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = functionNode0.getTop();
        com.google.javascript.rhino.head.ast.Name name3 = null;
        functionNode0.setFunctionName(name3);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode5 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = functionNode5.getTop();
        functionNode0.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode5);
        int int8 = functionNode5.getRp();
        int int9 = functionNode5.getFunctionType();
        com.google.javascript.rhino.head.ast.RegExpLiteral regExpLiteral13 = new com.google.javascript.rhino.head.ast.RegExpLiteral((int) '4', (int) (short) -1);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode14 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int15 = functionNode14.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode16 = functionNode14.getTop();
        boolean boolean17 = functionNode14.hasSideEffects();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode18 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int19 = functionNode18.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode20 = functionNode18.getTop();
        com.google.javascript.rhino.head.ast.Name name21 = null;
        functionNode18.setFunctionName(name21);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode23 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.Scope scope25 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 10);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode26 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode27 = functionNode26.getTop();
        functionNode26.setParens((int) (byte) 1, (int) (short) 1);
        functionNode26.setEncodedSourceStart((-1));
        functionNode26.setFunctionIsGetter();
        scope25.addChildToFront((com.google.javascript.rhino.head.Node) functionNode26);
        functionNode23.setBody((com.google.javascript.rhino.head.ast.AstNode) functionNode26);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode36 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode37 = functionNode36.getTop();
        functionNode36.setParens((int) (byte) 1, (int) (short) 1);
        functionNode36.setEncodedSourceStart((-1));
        java.util.List<com.google.javascript.rhino.head.Node> nodeList43 = functionNode36.getResumptionPoints();
        int int44 = functionNode36.getLp();
        functionNode23.setBody((com.google.javascript.rhino.head.ast.AstNode) functionNode36);
        functionNode18.addParam((com.google.javascript.rhino.head.ast.AstNode) functionNode36);
        com.google.javascript.rhino.head.Node node47 = new com.google.javascript.rhino.head.Node(10, (com.google.javascript.rhino.head.Node) regExpLiteral13, (com.google.javascript.rhino.head.Node) functionNode14, (com.google.javascript.rhino.head.Node) functionNode36);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode48 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int49 = functionNode48.getLp();
        functionNode48.setEncodedSource("");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode52 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int53 = functionNode52.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode54 = functionNode52.getTop();
        com.google.javascript.rhino.head.ast.Name name55 = null;
        functionNode52.setFunctionName(name55);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode57 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode58 = functionNode57.getTop();
        functionNode52.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode57);
        int int60 = functionNode57.getRp();
        int int61 = functionNode57.getFunctionType();
        functionNode48.addParam((com.google.javascript.rhino.head.ast.AstNode) functionNode57);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode63 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int64 = functionNode63.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode65 = functionNode63.getTop();
        com.google.javascript.rhino.head.Node node66 = functionNode63.getLastSibling();
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList67 = functionNode63.getParams();
        functionNode48.setParams(astNodeList67);
        functionNode14.setParams(astNodeList67);
        functionNode5.addResumptionPoint((com.google.javascript.rhino.head.Node) functionNode14);
        boolean boolean71 = functionNode5.hasChildren();
        int int72 = functionNode5.getLength();
        com.google.javascript.rhino.head.ast.Name name73 = functionNode5.getFunctionName();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-1) + "'", int1 == (-1));
        org.junit.Assert.assertNotNull(scriptNode2);
        org.junit.Assert.assertNotNull(scriptNode6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(scriptNode16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(scriptNode20);
        org.junit.Assert.assertNotNull(scriptNode27);
        org.junit.Assert.assertNotNull(scriptNode37);
        org.junit.Assert.assertNull(nodeList43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 1 + "'", int44 == 1);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
        org.junit.Assert.assertNotNull(scriptNode54);
        org.junit.Assert.assertNotNull(scriptNode58);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-1) + "'", int60 == (-1));
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 0 + "'", int61 == 0);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + (-1) + "'", int64 == (-1));
        org.junit.Assert.assertNotNull(scriptNode65);
        org.junit.Assert.assertNotNull(node66);
        org.junit.Assert.assertNotNull(astNodeList67);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 1 + "'", int72 == 1);
        org.junit.Assert.assertNull(name73);
    }

    @Test
    public void test09727() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09727");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode1 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = functionNode1.getTop();
        functionNode1.setParens((int) (byte) 1, (int) (short) 1);
        com.google.javascript.rhino.head.Node node6 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) functionNode1);
        functionNode1.setRequiresActivation();
        java.lang.String str8 = functionNode1.shortName();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode9 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = functionNode9.getTop();
        functionNode9.setParens((int) (byte) 1, (int) (short) 1);
        int int14 = functionNode9.getRp();
        int int15 = functionNode9.getAbsolutePosition();
        com.google.javascript.rhino.head.ast.AstNode astNode16 = functionNode9.getMemberExprNode();
        int int17 = functionNode9.getBaseLineno();
        functionNode1.addResumptionPoint((com.google.javascript.rhino.head.Node) functionNode9);
        int int19 = functionNode9.getParamCount();
        org.junit.Assert.assertNotNull(scriptNode2);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "FunctionNode" + "'", str8, "FunctionNode");
        org.junit.Assert.assertNotNull(scriptNode10);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNull(astNode16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
    }

    @Test
    public void test09728() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09728");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode0 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int1 = functionNode0.getLp();
        functionNode0.setEncodedSource("");
        functionNode0.flattenSymbolTable(false);
        java.lang.String str6 = functionNode0.getName();
        functionNode0.setFunctionIsGetter();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode8 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int9 = functionNode8.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = functionNode8.getTop();
        com.google.javascript.rhino.head.Node node11 = functionNode8.getLastSibling();
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList12 = functionNode8.getParams();
        functionNode0.setParams(astNodeList12);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode14 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int15 = functionNode14.getLp();
        functionNode14.setLp((int) (short) 1);
        int int20 = functionNode14.getIntProp(4, 26);
        functionNode14.flattenSymbolTable(true);
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList23 = functionNode14.getParams();
        functionNode0.setParams(astNodeList23);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode25 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int26 = functionNode25.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode27 = functionNode25.getTop();
        boolean boolean28 = functionNode25.hasSideEffects();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode29 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int30 = functionNode29.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode31 = functionNode29.getTop();
        com.google.javascript.rhino.head.ast.Name name32 = null;
        functionNode29.setFunctionName(name32);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode34 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int35 = functionNode34.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode37 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        java.lang.String str38 = functionNode34.toStringTree(scriptNode37);
        functionNode34.setFunctionIsGetter();
        int int40 = functionNode29.addFunction(functionNode34);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList41 = functionNode29.getSymbols();
        functionNode25.setSymbols(symbolList41);
        functionNode0.setSymbols(symbolList41);
        com.google.javascript.rhino.head.ast.Jump jump45 = new com.google.javascript.rhino.head.ast.Jump((int) (short) 0);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode46 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int47 = functionNode46.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode48 = functionNode46.getTop();
        com.google.javascript.rhino.head.ast.Name name49 = null;
        functionNode46.setFunctionName(name49);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode51 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode52 = functionNode51.getTop();
        functionNode46.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode51);
        functionNode51.setIsExpressionClosure(true);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode57 = new com.google.javascript.rhino.head.ast.FunctionNode((int) (byte) 100);
        int int58 = functionNode51.addFunction(functionNode57);
        int int59 = jump45.compareTo((com.google.javascript.rhino.head.ast.AstNode) functionNode57);
        functionNode57.setEncodedSourceStart((int) '4');
        functionNode57.setLength(48);
        functionNode57.setFunctionType(19);
        functionNode57.setFunctionIsGetter();
        functionNode57.setSourceName("                    {\n                    }\n");
        functionNode57.setEncodedSourceBounds(0, (int) 'a');
        boolean boolean72 = functionNode0.isParam((com.google.javascript.rhino.head.ast.AstNode) functionNode57);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str73 = functionNode0.toSource();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-1) + "'", int1 == (-1));
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(scriptNode10);
        org.junit.Assert.assertNotNull(node11);
        org.junit.Assert.assertNotNull(astNodeList12);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 26 + "'", int20 == 26);
        org.junit.Assert.assertNotNull(astNodeList23);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNotNull(scriptNode27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertNotNull(scriptNode31);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertNotNull(symbolList41);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertNotNull(scriptNode48);
        org.junit.Assert.assertNotNull(scriptNode52);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-1) + "'", int59 == (-1));
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
    }

    @Test
    public void test09729() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09729");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode0 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = functionNode0.getTop();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode3 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int4 = functionNode3.getLp();
        functionNode3.setEncodedSource("");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode7 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int8 = functionNode7.getLp();
        functionNode7.setEncodedSource("");
        functionNode7.flattenSymbolTable(false);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode13 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int14 = functionNode13.getLp();
        com.google.javascript.rhino.head.Node node16 = new com.google.javascript.rhino.head.Node((-1), (com.google.javascript.rhino.head.Node) functionNode3, (com.google.javascript.rhino.head.Node) functionNode7, (com.google.javascript.rhino.head.Node) functionNode13, (int) '#');
        com.google.javascript.rhino.head.ast.AstNode astNode17 = functionNode3.getBody();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode18 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int19 = functionNode18.getLp();
        functionNode18.setEncodedSource("");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode22 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int23 = functionNode22.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode24 = functionNode22.getTop();
        com.google.javascript.rhino.head.ast.Name name25 = null;
        functionNode22.setFunctionName(name25);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode27 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode28 = functionNode27.getTop();
        functionNode22.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode27);
        int int30 = functionNode27.getRp();
        int int31 = functionNode27.getFunctionType();
        functionNode18.addParam((com.google.javascript.rhino.head.ast.AstNode) functionNode27);
        com.google.javascript.rhino.head.ast.Scope scope33 = functionNode27.getEnclosingScope();
        functionNode3.setBody((com.google.javascript.rhino.head.ast.AstNode) functionNode27);
        int int35 = functionNode0.addFunction(functionNode3);
        java.util.List<com.google.javascript.rhino.head.Node> nodeList36 = functionNode0.getResumptionPoints();
        functionNode0.setLineno(14);
        com.google.javascript.rhino.head.ast.Jump jump45 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump45.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump49 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump45, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode51 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int52 = scriptNode51.getEndLineno();
        int int53 = scriptNode51.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList54 = scriptNode51.getChildScopes();
        com.google.javascript.rhino.head.Node node55 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump45, (com.google.javascript.rhino.head.Node) scriptNode51);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList56 = scriptNode51.getFunctions();
        int int57 = scriptNode51.getPosition();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList58 = scriptNode51.getChildScopes();
        int int59 = scriptNode51.getEncodedSourceEnd();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList60 = scriptNode51.getSymbols();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode61 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int62 = functionNode61.getLp();
        functionNode61.setEncodedSource("");
        functionNode61.flattenSymbolTable(false);
        com.google.javascript.rhino.head.ast.RegExpLiteral regExpLiteral68 = new com.google.javascript.rhino.head.ast.RegExpLiteral((int) (short) 1);
        java.lang.String str70 = regExpLiteral68.toSource((int) (byte) 10);
        regExpLiteral68.setFlags("-1\tSCRIPT -1 1\n");
        regExpLiteral68.removeProp(8);
        java.lang.String str75 = regExpLiteral68.getValue();
        com.google.javascript.rhino.head.Node node76 = new com.google.javascript.rhino.head.Node(7, (com.google.javascript.rhino.head.Node) scriptNode51, (com.google.javascript.rhino.head.Node) functionNode61, (com.google.javascript.rhino.head.Node) regExpLiteral68);
        functionNode61.flattenSymbolTable(false);
        com.google.javascript.rhino.head.ast.Jump jump79 = new com.google.javascript.rhino.head.ast.Jump(16, (com.google.javascript.rhino.head.Node) functionNode61);
        com.google.javascript.rhino.head.Node node80 = jump79.getFirstChild();
        functionNode0.addChildToFront(node80);
        int int82 = functionNode0.getRp();
        com.google.javascript.rhino.head.ast.AstRoot astRoot83 = functionNode0.getAstRoot();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str84 = astRoot83.getJsDoc();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(scriptNode1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNull(astNode17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNotNull(scriptNode24);
        org.junit.Assert.assertNotNull(scriptNode28);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNotNull(scope33);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertNull(nodeList36);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
        org.junit.Assert.assertNull(scopeList54);
        org.junit.Assert.assertNotNull(functionNodeList56);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
        org.junit.Assert.assertNull(scopeList58);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-1) + "'", int59 == (-1));
        org.junit.Assert.assertNotNull(symbolList60);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + (-1) + "'", int62 == (-1));
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "                    /null/" + "'", str70, "                    /null/");
        org.junit.Assert.assertNull(str75);
        org.junit.Assert.assertNotNull(node80);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + (-1) + "'", int82 == (-1));
        org.junit.Assert.assertNull(astRoot83);
    }

    @Test
    public void test09730() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09730");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode0 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int1 = functionNode0.getLp();
        functionNode0.setEncodedSource("");
        functionNode0.flattenSymbolTable(false);
        java.lang.String str6 = functionNode0.getName();
        functionNode0.setFunctionIsGetter();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode8 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int9 = functionNode8.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = functionNode8.getTop();
        com.google.javascript.rhino.head.Node node11 = functionNode8.getLastSibling();
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList12 = functionNode8.getParams();
        functionNode0.setParams(astNodeList12);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode14 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int15 = functionNode14.getLp();
        functionNode14.setLp((int) (short) 1);
        int int20 = functionNode14.getIntProp(4, 26);
        functionNode14.flattenSymbolTable(true);
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList23 = functionNode14.getParams();
        functionNode0.setParams(astNodeList23);
        functionNode0.setEndLineno(12);
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor27 = functionNode0.iterator();
        int int28 = functionNode0.getLineno();
        com.google.javascript.rhino.head.Node node29 = functionNode0.getNext();
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList30 = functionNode0.getStatements();
        functionNode0.removeProp(346933763);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-1) + "'", int1 == (-1));
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(scriptNode10);
        org.junit.Assert.assertNotNull(node11);
        org.junit.Assert.assertNotNull(astNodeList12);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 26 + "'", int20 == 26);
        org.junit.Assert.assertNotNull(astNodeList23);
        org.junit.Assert.assertNotNull(nodeItor27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNull(node29);
        org.junit.Assert.assertNotNull(astNodeList30);
    }

    @Test
    public void test09731() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09731");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode0 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int1 = functionNode0.getLp();
        functionNode0.setEncodedSource("");
        functionNode0.flattenSymbolTable(false);
        java.lang.String str6 = functionNode0.getName();
        boolean boolean7 = functionNode0.hasConsistentReturnUsage();
        com.google.javascript.rhino.head.ast.RegExpLiteral regExpLiteral9 = new com.google.javascript.rhino.head.ast.RegExpLiteral((int) '#');
        java.lang.String str10 = regExpLiteral9.shortName();
        regExpLiteral9.setFlags("-1\tBLOCK -1 1\n");
        regExpLiteral9.setFlags("                                            {\n                                            }\n");
        regExpLiteral9.setFlags("                          ");
        regExpLiteral9.setFlags("                                                                                                                                                                                                        ");
        regExpLiteral9.setValue("                                {\n                                }\n");
        functionNode0.addChildToBack((com.google.javascript.rhino.head.Node) regExpLiteral9);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-1) + "'", int1 == (-1));
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "RegExpLiteral" + "'", str10, "RegExpLiteral");
    }

    @Test
    public void test09732() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09732");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 10);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode2 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode3 = functionNode2.getTop();
        functionNode2.setParens((int) (byte) 1, (int) (short) 1);
        functionNode2.setEncodedSourceStart((-1));
        functionNode2.setFunctionIsGetter();
        scope1.addChildToFront((com.google.javascript.rhino.head.Node) functionNode2);
        functionNode2.setRp(19);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int15 = scriptNode14.getEndLineno();
        int int16 = scriptNode14.getBaseLineno();
        com.google.javascript.rhino.head.ast.Jump jump19 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode21 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int22 = scriptNode21.getEndLineno();
        int int23 = scriptNode21.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList24 = scriptNode21.getChildScopes();
        jump19.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode21);
        java.lang.String str26 = scriptNode21.debugPrint();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode14, (com.google.javascript.rhino.head.ast.Scope) scriptNode21);
        com.google.javascript.rhino.head.ast.Scope scope28 = new com.google.javascript.rhino.head.ast.Scope();
        scriptNode21.target = scope28;
        java.lang.String str30 = functionNode2.toStringTree(scriptNode21);
        java.lang.String str32 = scriptNode21.toSource((int) (short) 10);
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap33 = scriptNode21.getSymbolTable();
        int int34 = strMap33.size();
        com.google.javascript.rhino.head.ast.Jump jump39 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump39.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump43 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump39, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode45 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int46 = scriptNode45.getEndLineno();
        int int47 = scriptNode45.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList48 = scriptNode45.getChildScopes();
        com.google.javascript.rhino.head.Node node49 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump39, (com.google.javascript.rhino.head.Node) scriptNode45);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList50 = scriptNode45.getFunctions();
        functionNodeList50.clear();
        functionNodeList50.clear();
        com.google.javascript.rhino.head.ast.Jump jump57 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump57.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump61 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump57, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode63 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int64 = scriptNode63.getEndLineno();
        int int65 = scriptNode63.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList66 = scriptNode63.getChildScopes();
        com.google.javascript.rhino.head.Node node67 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump57, (com.google.javascript.rhino.head.Node) scriptNode63);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList68 = scriptNode63.getFunctions();
        java.util.Spliterator<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeSpliterator69 = functionNodeList68.spliterator();
        int int71 = functionNodeList68.indexOf((java.lang.Object) (byte) 10);
        boolean boolean72 = functionNodeList50.retainAll((java.util.Collection<com.google.javascript.rhino.head.ast.FunctionNode>) functionNodeList68);
        boolean boolean73 = strMap33.containsKey((java.lang.Object) functionNodeList50);
        java.util.Collection<com.google.javascript.rhino.head.ast.Symbol> symbolCollection74 = strMap33.values();
        com.google.javascript.rhino.head.Node node76 = com.google.javascript.rhino.head.Node.newNumber((double) '#');
        com.google.javascript.rhino.head.ast.Symbol symbol77 = strMap33.get((java.lang.Object) '#');
        java.util.Set<java.lang.String> strSet78 = strMap33.keySet();
        com.google.javascript.rhino.head.ast.RegExpLiteral regExpLiteral81 = new com.google.javascript.rhino.head.ast.RegExpLiteral(5, (int) ' ');
        com.google.javascript.rhino.head.ast.Symbol symbol82 = new com.google.javascript.rhino.head.ast.Symbol();
        java.lang.String str83 = symbol82.getDeclTypeName();
        int int84 = symbol82.getDeclType();
        com.google.javascript.rhino.head.ast.Scope scope85 = symbol82.getContainingTable();
        java.lang.String str86 = symbol82.getDeclTypeName();
        symbol82.setName("                              {\n                              }\n");
        com.google.javascript.rhino.head.ast.Symbol symbol89 = strMap33.getOrDefault((java.lang.Object) ' ', symbol82);
        com.google.javascript.rhino.head.ast.Scope scope90 = symbol82.getContainingTable();
        org.junit.Assert.assertNotNull(scriptNode3);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNull(scopeList24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str26, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "                    {\n                    }\n" + "'", str32, "                    {\n                    }\n");
        org.junit.Assert.assertNotNull(strMap33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertNull(scopeList48);
        org.junit.Assert.assertNotNull(functionNodeList50);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + (-1) + "'", int64 == (-1));
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + (-1) + "'", int65 == (-1));
        org.junit.Assert.assertNull(scopeList66);
        org.junit.Assert.assertNotNull(functionNodeList68);
        org.junit.Assert.assertNotNull(functionNodeSpliterator69);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + (-1) + "'", int71 == (-1));
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(symbolCollection74);
        org.junit.Assert.assertNotNull(node76);
        org.junit.Assert.assertNull(symbol77);
        org.junit.Assert.assertNotNull(strSet78);
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "EOF" + "'", str83, "EOF");
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 0 + "'", int84 == 0);
        org.junit.Assert.assertNull(scope85);
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "EOF" + "'", str86, "EOF");
        org.junit.Assert.assertNotNull(symbol89);
        org.junit.Assert.assertNull(scope90);
    }

    @Test
    public void test09733() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09733");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode0 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int1 = functionNode0.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = functionNode0.getTop();
        com.google.javascript.rhino.head.ast.Name name3 = null;
        functionNode0.setFunctionName(name3);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode5 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = functionNode5.getTop();
        functionNode0.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode5);
        java.lang.String str8 = functionNode0.getNextTempName();
        java.lang.String str9 = functionNode0.getEncodedSource();
        functionNode0.setIsGenerator();
        functionNode0.setBaseLineno(48);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode14 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int15 = functionNode14.getLp();
        functionNode14.setEncodedSource("");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode18 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int19 = functionNode18.getLp();
        functionNode18.setEncodedSource("");
        functionNode18.flattenSymbolTable(false);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode24 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int25 = functionNode24.getLp();
        com.google.javascript.rhino.head.Node node27 = new com.google.javascript.rhino.head.Node((-1), (com.google.javascript.rhino.head.Node) functionNode14, (com.google.javascript.rhino.head.Node) functionNode18, (com.google.javascript.rhino.head.Node) functionNode24, (int) '#');
        functionNode24.setEncodedSourceStart(25);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode31 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode32 = functionNode31.getTop();
        functionNode31.setParens((int) (byte) 1, (int) (short) 1);
        int int36 = functionNode31.getRp();
        com.google.javascript.rhino.head.Node node39 = com.google.javascript.rhino.head.Node.newString((int) (byte) 100, "");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode40 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int41 = functionNode40.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode43 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        java.lang.String str44 = functionNode40.toStringTree(scriptNode43);
        com.google.javascript.rhino.head.ast.Scope scope46 = scriptNode43.getDefiningScope("");
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList47 = scriptNode43.getSymbols();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode49 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int50 = scriptNode49.getEndLineno();
        int int51 = scriptNode49.getBaseLineno();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode43, (com.google.javascript.rhino.head.ast.Scope) scriptNode49);
        java.lang.String str53 = scriptNode49.getEncodedSource();
        com.google.javascript.rhino.head.Node node55 = new com.google.javascript.rhino.head.Node(136, (com.google.javascript.rhino.head.Node) functionNode31, node39, (com.google.javascript.rhino.head.Node) scriptNode49, (int) (short) 0);
        functionNode24.setParent((com.google.javascript.rhino.head.ast.AstNode) functionNode31);
        functionNode0.target = functionNode24;
        com.google.javascript.rhino.head.ast.Scope scope59 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 10);
        int[] intArray65 = new int[] { (short) 0, (byte) 1, (short) 10, 8, (-1110578805) };
        functionNode24.addLiveLocals((com.google.javascript.rhino.head.Node) scope59, intArray65);
        functionNode24.setLineno((int) ' ');
        boolean boolean69 = functionNode24.isGetter();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-1) + "'", int1 == (-1));
        org.junit.Assert.assertNotNull(scriptNode2);
        org.junit.Assert.assertNotNull(scriptNode6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "$0" + "'", str8, "$0");
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNotNull(scriptNode32);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 1 + "'", int36 == 1);
        org.junit.Assert.assertNotNull(node39);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertNull(scope46);
        org.junit.Assert.assertNotNull(symbolList47);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1));
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 1, 10, 8, -1110578805]");
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
    }

    @Test
    public void test09734() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09734");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int2 = scriptNode1.getEndLineno();
        int int3 = scriptNode1.getBaseLineno();
        com.google.javascript.rhino.head.ast.Jump jump6 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode8 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int9 = scriptNode8.getEndLineno();
        int int10 = scriptNode8.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList11 = scriptNode8.getChildScopes();
        jump6.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode8);
        java.lang.String str13 = scriptNode8.debugPrint();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode1, (com.google.javascript.rhino.head.ast.Scope) scriptNode8);
        com.google.javascript.rhino.head.ast.AstNode astNode15 = scriptNode1.getParent();
        int int16 = scriptNode1.getBaseLineno();
        com.google.javascript.rhino.head.Node node17 = scriptNode1.target;
        // The following exception was thrown during execution in test generation
        try {
            boolean[] booleanArray18 = scriptNode1.getParamAndVarConst();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNull(scopeList11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str13, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertNull(astNode15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNull(node17);
    }

    @Test
    public void test09735() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09735");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int2 = scriptNode1.getEndLineno();
        com.google.javascript.rhino.head.ast.Symbol symbol3 = new com.google.javascript.rhino.head.ast.Symbol();
        java.lang.String str4 = symbol3.getName();
        com.google.javascript.rhino.head.Node node5 = symbol3.getNode();
        com.google.javascript.rhino.head.ast.Jump jump7 = new com.google.javascript.rhino.head.ast.Jump((int) ' ');
        symbol3.setNode((com.google.javascript.rhino.head.Node) jump7);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode10 = new com.google.javascript.rhino.head.ast.FunctionNode(0);
        int int11 = functionNode10.getBaseLineno();
        functionNode10.setSourceName("                                                                                                                                                                                                        /null/");
        symbol3.setContainingTable((com.google.javascript.rhino.head.ast.Scope) functionNode10);
        int int15 = functionNode10.getLp();
        int int16 = functionNode10.getType();
        java.lang.String str17 = scriptNode1.toStringTree((com.google.javascript.rhino.head.ast.ScriptNode) functionNode10);
        com.google.javascript.rhino.head.Token.CommentType commentType20 = com.google.javascript.rhino.head.Token.CommentType.HTML;
        com.google.javascript.rhino.head.ast.Comment comment22 = new com.google.javascript.rhino.head.ast.Comment(20, 1, commentType20, "109");
        java.lang.String str24 = comment22.toSource(19);
        java.lang.String str25 = comment22.getValue();
        java.lang.String str27 = comment22.toSource(2);
        boolean boolean28 = comment22.hasSideEffects();
        com.google.javascript.rhino.head.Token.CommentType commentType29 = com.google.javascript.rhino.head.Token.CommentType.JSDOC;
        comment22.setCommentType(commentType29);
        com.google.javascript.rhino.head.Token.CommentType commentType31 = comment22.getCommentType();
        scriptNode1.setJsDocNode(comment22);
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.Node node33 = scriptNode1.getFinally();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(node5);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 109 + "'", int16 == 109);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertTrue("'" + commentType20 + "' != '" + com.google.javascript.rhino.head.Token.CommentType.HTML + "'", commentType20.equals(com.google.javascript.rhino.head.Token.CommentType.HTML));
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "                                      109" + "'", str24, "                                      109");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "109" + "'", str25, "109");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "    109" + "'", str27, "    109");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + commentType29 + "' != '" + com.google.javascript.rhino.head.Token.CommentType.JSDOC + "'", commentType29.equals(com.google.javascript.rhino.head.Token.CommentType.JSDOC));
        org.junit.Assert.assertTrue("'" + commentType31 + "' != '" + com.google.javascript.rhino.head.Token.CommentType.JSDOC + "'", commentType31.equals(com.google.javascript.rhino.head.Token.CommentType.JSDOC));
    }

    @Test
    public void test09736() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09736");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode0 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int1 = functionNode0.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = functionNode0.getTop();
        com.google.javascript.rhino.head.ast.Name name3 = null;
        functionNode0.setFunctionName(name3);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode5 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = functionNode5.getTop();
        functionNode0.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode5);
        functionNode5.setIsExpressionClosure(true);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode11 = new com.google.javascript.rhino.head.ast.FunctionNode((int) (byte) 100);
        int int12 = functionNode5.addFunction(functionNode11);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode14 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode15 = functionNode14.getTop();
        java.lang.String str16 = scriptNode15.getJsDoc();
        com.google.javascript.rhino.head.Node node18 = scriptNode15.setType(0);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode19 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int20 = functionNode19.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode22 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        java.lang.String str23 = functionNode19.toStringTree(scriptNode22);
        com.google.javascript.rhino.head.ast.Scope scope25 = scriptNode22.getDefiningScope("");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode27 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int28 = scriptNode27.getEndLineno();
        int int29 = scriptNode27.getBaseLineno();
        com.google.javascript.rhino.head.Node node30 = new com.google.javascript.rhino.head.Node(25, node18, (com.google.javascript.rhino.head.Node) scriptNode22, (com.google.javascript.rhino.head.Node) scriptNode27);
        int int31 = functionNode11.compareTo((com.google.javascript.rhino.head.ast.AstNode) scriptNode22);
        com.google.javascript.rhino.head.ast.Jump jump36 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump36.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump40 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump36, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode42 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int43 = scriptNode42.getEndLineno();
        int int44 = scriptNode42.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList45 = scriptNode42.getChildScopes();
        com.google.javascript.rhino.head.Node node46 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump36, (com.google.javascript.rhino.head.Node) scriptNode42);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList47 = scriptNode42.getFunctions();
        functionNodeList47.clear();
        int int50 = functionNodeList47.lastIndexOf((java.lang.Object) (-1L));
        functionNodeList47.clear();
        com.google.javascript.rhino.head.ast.Jump jump56 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump56.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump60 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump56, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode62 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int63 = scriptNode62.getEndLineno();
        int int64 = scriptNode62.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList65 = scriptNode62.getChildScopes();
        com.google.javascript.rhino.head.Node node66 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump56, (com.google.javascript.rhino.head.Node) scriptNode62);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList67 = scriptNode62.getFunctions();
        int int68 = functionNodeList67.size();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator69 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        functionNodeList67.sort((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator69);
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator71 = positionComparator69.reversed();
        functionNodeList47.sort((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator69);
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator73 = positionComparator69.reversed();
        scriptNode22.setCompilerData((java.lang.Object) astNodeComparator73);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-1) + "'", int1 == (-1));
        org.junit.Assert.assertNotNull(scriptNode2);
        org.junit.Assert.assertNotNull(scriptNode6);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(scriptNode15);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(node18);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNull(scope25);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 1 + "'", int31 == 1);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertNull(scopeList45);
        org.junit.Assert.assertNotNull(functionNodeList47);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + (-1) + "'", int63 == (-1));
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + (-1) + "'", int64 == (-1));
        org.junit.Assert.assertNull(scopeList65);
        org.junit.Assert.assertNotNull(functionNodeList67);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 0 + "'", int68 == 0);
        org.junit.Assert.assertNotNull(astNodeComparator71);
        org.junit.Assert.assertNotNull(astNodeComparator73);
    }

    @Test
    public void test09737() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09737");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 10);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode2 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode3 = functionNode2.getTop();
        functionNode2.setParens((int) (byte) 1, (int) (short) 1);
        functionNode2.setEncodedSourceStart((-1));
        functionNode2.setFunctionIsGetter();
        scope1.addChildToFront((com.google.javascript.rhino.head.Node) functionNode2);
        functionNode2.setRp(19);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int15 = scriptNode14.getEndLineno();
        int int16 = scriptNode14.getBaseLineno();
        com.google.javascript.rhino.head.ast.Jump jump19 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode21 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int22 = scriptNode21.getEndLineno();
        int int23 = scriptNode21.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList24 = scriptNode21.getChildScopes();
        jump19.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode21);
        java.lang.String str26 = scriptNode21.debugPrint();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode14, (com.google.javascript.rhino.head.ast.Scope) scriptNode21);
        com.google.javascript.rhino.head.ast.Scope scope28 = new com.google.javascript.rhino.head.ast.Scope();
        scriptNode21.target = scope28;
        java.lang.String str30 = functionNode2.toStringTree(scriptNode21);
        java.lang.String str32 = scriptNode21.toSource((int) (short) 10);
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap33 = scriptNode21.getSymbolTable();
        int int34 = strMap33.size();
        com.google.javascript.rhino.head.ast.Jump jump39 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump39.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump43 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump39, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode45 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int46 = scriptNode45.getEndLineno();
        int int47 = scriptNode45.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList48 = scriptNode45.getChildScopes();
        com.google.javascript.rhino.head.Node node49 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump39, (com.google.javascript.rhino.head.Node) scriptNode45);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList50 = scriptNode45.getFunctions();
        functionNodeList50.clear();
        functionNodeList50.clear();
        com.google.javascript.rhino.head.ast.Jump jump57 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump57.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump61 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump57, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode63 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int64 = scriptNode63.getEndLineno();
        int int65 = scriptNode63.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList66 = scriptNode63.getChildScopes();
        com.google.javascript.rhino.head.Node node67 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump57, (com.google.javascript.rhino.head.Node) scriptNode63);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList68 = scriptNode63.getFunctions();
        java.util.Spliterator<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeSpliterator69 = functionNodeList68.spliterator();
        int int71 = functionNodeList68.indexOf((java.lang.Object) (byte) 10);
        boolean boolean72 = functionNodeList50.retainAll((java.util.Collection<com.google.javascript.rhino.head.ast.FunctionNode>) functionNodeList68);
        boolean boolean73 = strMap33.containsKey((java.lang.Object) functionNodeList50);
        java.util.Collection<com.google.javascript.rhino.head.ast.Symbol> symbolCollection74 = strMap33.values();
        com.google.javascript.rhino.head.Node node76 = com.google.javascript.rhino.head.Node.newNumber((double) '#');
        com.google.javascript.rhino.head.ast.Symbol symbol77 = strMap33.get((java.lang.Object) '#');
        java.util.Collection<com.google.javascript.rhino.head.ast.Symbol> symbolCollection78 = strMap33.values();
        java.util.Set<java.lang.String> strSet79 = strMap33.keySet();
        boolean boolean80 = strMap33.isEmpty();
        org.junit.Assert.assertNotNull(scriptNode3);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNull(scopeList24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str26, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "                    {\n                    }\n" + "'", str32, "                    {\n                    }\n");
        org.junit.Assert.assertNotNull(strMap33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertNull(scopeList48);
        org.junit.Assert.assertNotNull(functionNodeList50);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + (-1) + "'", int64 == (-1));
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + (-1) + "'", int65 == (-1));
        org.junit.Assert.assertNull(scopeList66);
        org.junit.Assert.assertNotNull(functionNodeList68);
        org.junit.Assert.assertNotNull(functionNodeSpliterator69);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + (-1) + "'", int71 == (-1));
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(symbolCollection74);
        org.junit.Assert.assertNotNull(node76);
        org.junit.Assert.assertNull(symbol77);
        org.junit.Assert.assertNotNull(symbolCollection78);
        org.junit.Assert.assertNotNull(strSet79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
    }

    @Test
    public void test09738() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09738");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode0 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int1 = functionNode0.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = functionNode0.getTop();
        com.google.javascript.rhino.head.ast.Name name3 = null;
        functionNode0.setFunctionName(name3);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode5 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = functionNode5.getTop();
        functionNode0.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode5);
        int int8 = functionNode5.getRp();
        int int9 = functionNode5.getFunctionType();
        boolean boolean10 = functionNode5.isExpressionClosure();
        com.google.javascript.rhino.head.ast.Jump jump12 = new com.google.javascript.rhino.head.ast.Jump((int) (short) 0);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode13 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int14 = functionNode13.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode15 = functionNode13.getTop();
        com.google.javascript.rhino.head.ast.Name name16 = null;
        functionNode13.setFunctionName(name16);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode18 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode19 = functionNode18.getTop();
        functionNode13.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode18);
        functionNode18.setIsExpressionClosure(true);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode24 = new com.google.javascript.rhino.head.ast.FunctionNode((int) (byte) 100);
        int int25 = functionNode18.addFunction(functionNode24);
        int int26 = jump12.compareTo((com.google.javascript.rhino.head.ast.AstNode) functionNode24);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode28 = new com.google.javascript.rhino.head.ast.FunctionNode(0);
        com.google.javascript.rhino.head.ast.Jump jump34 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump34.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump38 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump34, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode40 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int41 = scriptNode40.getEndLineno();
        int int42 = scriptNode40.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList43 = scriptNode40.getChildScopes();
        com.google.javascript.rhino.head.Node node44 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump34, (com.google.javascript.rhino.head.Node) scriptNode40);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList45 = scriptNode40.getFunctions();
        functionNodeList45.clear();
        com.google.javascript.rhino.head.ast.Jump jump51 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump51.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump55 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump51, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode57 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int58 = scriptNode57.getEndLineno();
        int int59 = scriptNode57.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList60 = scriptNode57.getChildScopes();
        com.google.javascript.rhino.head.Node node61 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump51, (com.google.javascript.rhino.head.Node) scriptNode57);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList62 = scriptNode57.getFunctions();
        boolean boolean63 = functionNodeList45.removeAll((java.util.Collection<com.google.javascript.rhino.head.ast.FunctionNode>) functionNodeList62);
        functionNode28.putProp(20, (java.lang.Object) functionNodeList45);
        int int65 = functionNode24.addFunction(functionNode28);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode66 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode67 = functionNode66.getTop();
        functionNode66.setParens((int) (byte) 1, (int) (short) 1);
        functionNode66.setEncodedSourceStart((-1));
        java.util.List<com.google.javascript.rhino.head.Node> nodeList73 = functionNode66.getResumptionPoints();
        com.google.javascript.rhino.head.ast.Scope scope75 = functionNode66.getDefiningScope("hi!");
        boolean boolean76 = functionNode66.isGetterOrSetter();
        com.google.javascript.rhino.head.ast.Scope scope78 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 10);
        int[] intArray85 = new int[] { 25, 17, (short) 0, 20, 19, (byte) 1 };
        functionNode66.addLiveLocals((com.google.javascript.rhino.head.Node) scope78, intArray85);
        functionNode5.addLiveLocals((com.google.javascript.rhino.head.Node) functionNode28, intArray85);
        int int88 = functionNode5.getEncodedSourceStart();
        int int89 = functionNode5.getEncodedSourceEnd();
        functionNode5.setEndLineno(1685771249);
        java.lang.String str92 = functionNode5.getSourceName();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-1) + "'", int1 == (-1));
        org.junit.Assert.assertNotNull(scriptNode2);
        org.junit.Assert.assertNotNull(scriptNode6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNotNull(scriptNode15);
        org.junit.Assert.assertNotNull(scriptNode19);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertNull(scopeList43);
        org.junit.Assert.assertNotNull(functionNodeList45);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + (-1) + "'", int58 == (-1));
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-1) + "'", int59 == (-1));
        org.junit.Assert.assertNull(scopeList60);
        org.junit.Assert.assertNotNull(functionNodeList62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 0 + "'", int65 == 0);
        org.junit.Assert.assertNotNull(scriptNode67);
        org.junit.Assert.assertNull(nodeList73);
        org.junit.Assert.assertNull(scope75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[25, 17, 0, 20, 19, 1]");
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + (-1) + "'", int88 == (-1));
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + (-1) + "'", int89 == (-1));
        org.junit.Assert.assertNull(str92);
    }

    @Test
    public void test09739() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09739");
        com.google.javascript.rhino.head.ast.Name name1 = null;
        com.google.javascript.rhino.head.ast.FunctionNode functionNode2 = new com.google.javascript.rhino.head.ast.FunctionNode(350469479, name1);
        java.lang.String str3 = functionNode2.getName();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str5 = functionNode2.getRegexpFlags(69268905);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
    }

    @Test
    public void test09740() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09740");
        com.google.javascript.rhino.head.Token.CommentType commentType4 = com.google.javascript.rhino.head.Token.CommentType.HTML;
        com.google.javascript.rhino.head.ast.Comment comment6 = new com.google.javascript.rhino.head.ast.Comment(20, 1, commentType4, "109");
        com.google.javascript.rhino.head.ast.Comment comment8 = new com.google.javascript.rhino.head.ast.Comment(136, 15, commentType4, "-1\tSCRIPT -1 1\n");
        com.google.javascript.rhino.head.Token.CommentType commentType9 = com.google.javascript.rhino.head.Token.CommentType.JSDOC;
        comment8.setCommentType(commentType9);
        com.google.javascript.rhino.head.Token.CommentType commentType11 = comment8.getCommentType();
        comment8.setPosition(1423344554);
        org.junit.Assert.assertTrue("'" + commentType4 + "' != '" + com.google.javascript.rhino.head.Token.CommentType.HTML + "'", commentType4.equals(com.google.javascript.rhino.head.Token.CommentType.HTML));
        org.junit.Assert.assertTrue("'" + commentType9 + "' != '" + com.google.javascript.rhino.head.Token.CommentType.JSDOC + "'", commentType9.equals(com.google.javascript.rhino.head.Token.CommentType.JSDOC));
        org.junit.Assert.assertTrue("'" + commentType11 + "' != '" + com.google.javascript.rhino.head.Token.CommentType.JSDOC + "'", commentType11.equals(com.google.javascript.rhino.head.Token.CommentType.JSDOC));
    }

    @Test
    public void test09741() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09741");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode0 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int1 = functionNode0.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = functionNode0.getTop();
        com.google.javascript.rhino.head.ast.Name name3 = null;
        functionNode0.setFunctionName(name3);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode5 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = functionNode5.getTop();
        functionNode0.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode5);
        int int8 = functionNode5.getRp();
        int int9 = functionNode5.getFunctionType();
        com.google.javascript.rhino.head.ast.RegExpLiteral regExpLiteral13 = new com.google.javascript.rhino.head.ast.RegExpLiteral((int) '4', (int) (short) -1);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode14 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int15 = functionNode14.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode16 = functionNode14.getTop();
        boolean boolean17 = functionNode14.hasSideEffects();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode18 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int19 = functionNode18.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode20 = functionNode18.getTop();
        com.google.javascript.rhino.head.ast.Name name21 = null;
        functionNode18.setFunctionName(name21);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode23 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.Scope scope25 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 10);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode26 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode27 = functionNode26.getTop();
        functionNode26.setParens((int) (byte) 1, (int) (short) 1);
        functionNode26.setEncodedSourceStart((-1));
        functionNode26.setFunctionIsGetter();
        scope25.addChildToFront((com.google.javascript.rhino.head.Node) functionNode26);
        functionNode23.setBody((com.google.javascript.rhino.head.ast.AstNode) functionNode26);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode36 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode37 = functionNode36.getTop();
        functionNode36.setParens((int) (byte) 1, (int) (short) 1);
        functionNode36.setEncodedSourceStart((-1));
        java.util.List<com.google.javascript.rhino.head.Node> nodeList43 = functionNode36.getResumptionPoints();
        int int44 = functionNode36.getLp();
        functionNode23.setBody((com.google.javascript.rhino.head.ast.AstNode) functionNode36);
        functionNode18.addParam((com.google.javascript.rhino.head.ast.AstNode) functionNode36);
        com.google.javascript.rhino.head.Node node47 = new com.google.javascript.rhino.head.Node(10, (com.google.javascript.rhino.head.Node) regExpLiteral13, (com.google.javascript.rhino.head.Node) functionNode14, (com.google.javascript.rhino.head.Node) functionNode36);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode48 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int49 = functionNode48.getLp();
        functionNode48.setEncodedSource("");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode52 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int53 = functionNode52.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode54 = functionNode52.getTop();
        com.google.javascript.rhino.head.ast.Name name55 = null;
        functionNode52.setFunctionName(name55);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode57 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode58 = functionNode57.getTop();
        functionNode52.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode57);
        int int60 = functionNode57.getRp();
        int int61 = functionNode57.getFunctionType();
        functionNode48.addParam((com.google.javascript.rhino.head.ast.AstNode) functionNode57);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode63 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int64 = functionNode63.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode65 = functionNode63.getTop();
        com.google.javascript.rhino.head.Node node66 = functionNode63.getLastSibling();
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList67 = functionNode63.getParams();
        functionNode48.setParams(astNodeList67);
        functionNode14.setParams(astNodeList67);
        functionNode5.addResumptionPoint((com.google.javascript.rhino.head.Node) functionNode14);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str72 = functionNode14.toSource((-146877426));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-1) + "'", int1 == (-1));
        org.junit.Assert.assertNotNull(scriptNode2);
        org.junit.Assert.assertNotNull(scriptNode6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(scriptNode16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(scriptNode20);
        org.junit.Assert.assertNotNull(scriptNode27);
        org.junit.Assert.assertNotNull(scriptNode37);
        org.junit.Assert.assertNull(nodeList43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 1 + "'", int44 == 1);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
        org.junit.Assert.assertNotNull(scriptNode54);
        org.junit.Assert.assertNotNull(scriptNode58);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-1) + "'", int60 == (-1));
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 0 + "'", int61 == 0);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + (-1) + "'", int64 == (-1));
        org.junit.Assert.assertNotNull(scriptNode65);
        org.junit.Assert.assertNotNull(node66);
        org.junit.Assert.assertNotNull(astNodeList67);
    }

    @Test
    public void test09742() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09742");
        com.google.javascript.rhino.head.ast.Scope scope0 = new com.google.javascript.rhino.head.ast.Scope();
        scope0.setBounds(0, 10);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode4 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = functionNode4.getTop();
        int int6 = functionNode4.getRegexpCount();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode7 = functionNode4.getEnclosingFunction();
        java.lang.String str8 = scope0.toStringTree((com.google.javascript.rhino.head.ast.ScriptNode) functionNode4);
        boolean boolean9 = functionNode4.isGetterOrSetter();
        org.junit.Assert.assertNotNull(scriptNode5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNull(functionNode7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test09743() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09743");
        com.google.javascript.rhino.head.ast.Symbol symbol0 = new com.google.javascript.rhino.head.ast.Symbol();
        symbol0.setIndex(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode4 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int5 = scriptNode4.getEndLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode7 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int8 = scriptNode7.getEndLineno();
        scriptNode4.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode7);
        com.google.javascript.rhino.head.ast.Comment comment10 = null;
        scriptNode4.setJsDocNode(comment10);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList12 = scriptNode4.getSymbols();
        symbol0.setContainingTable((com.google.javascript.rhino.head.ast.Scope) scriptNode4);
        com.google.javascript.rhino.head.ast.Scope scope14 = symbol0.getContainingTable();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode15 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int16 = functionNode15.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode17 = functionNode15.getTop();
        com.google.javascript.rhino.head.Node node18 = functionNode15.getLastSibling();
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList19 = functionNode15.getParams();
        java.lang.String str20 = functionNode15.shortName();
        scope14.target = functionNode15;
        com.google.javascript.rhino.head.ast.Scope scope23 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 10);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode24 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode25 = functionNode24.getTop();
        functionNode24.setParens((int) (byte) 1, (int) (short) 1);
        functionNode24.setEncodedSourceStart((-1));
        functionNode24.setFunctionIsGetter();
        scope23.addChildToFront((com.google.javascript.rhino.head.Node) functionNode24);
        functionNode24.setRp(19);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode36 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int37 = scriptNode36.getEndLineno();
        int int38 = scriptNode36.getBaseLineno();
        com.google.javascript.rhino.head.ast.Jump jump41 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode43 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int44 = scriptNode43.getEndLineno();
        int int45 = scriptNode43.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList46 = scriptNode43.getChildScopes();
        jump41.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode43);
        java.lang.String str48 = scriptNode43.debugPrint();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode36, (com.google.javascript.rhino.head.ast.Scope) scriptNode43);
        com.google.javascript.rhino.head.ast.Scope scope50 = new com.google.javascript.rhino.head.ast.Scope();
        scriptNode43.target = scope50;
        java.lang.String str52 = functionNode24.toStringTree(scriptNode43);
        java.lang.String str54 = scriptNode43.toSource((int) (short) 10);
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap55 = scriptNode43.getSymbolTable();
        int int56 = strMap55.size();
        functionNode15.setSymbolTable(strMap55);
        strMap55.clear();
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(symbolList12);
        org.junit.Assert.assertNotNull(scope14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(scriptNode17);
        org.junit.Assert.assertNotNull(node18);
        org.junit.Assert.assertNotNull(astNodeList19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "FunctionNode" + "'", str20, "FunctionNode");
        org.junit.Assert.assertNotNull(scriptNode25);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
        org.junit.Assert.assertNull(scopeList46);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str48, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "                    {\n                    }\n" + "'", str54, "                    {\n                    }\n");
        org.junit.Assert.assertNotNull(strMap55);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
    }

    @Test
    public void test09744() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09744");
        com.google.javascript.rhino.head.ast.RegExpLiteral regExpLiteral2 = new com.google.javascript.rhino.head.ast.RegExpLiteral(0, (int) (short) -1);
        java.lang.String str3 = regExpLiteral2.getValue();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode7 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int8 = functionNode7.getLp();
        functionNode7.setEncodedSource("");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode11 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int12 = functionNode11.getLp();
        functionNode11.setEncodedSource("");
        functionNode11.flattenSymbolTable(false);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode17 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int18 = functionNode17.getLp();
        com.google.javascript.rhino.head.Node node20 = new com.google.javascript.rhino.head.Node((-1), (com.google.javascript.rhino.head.Node) functionNode7, (com.google.javascript.rhino.head.Node) functionNode11, (com.google.javascript.rhino.head.Node) functionNode17, (int) '#');
        com.google.javascript.rhino.head.ast.Comment comment21 = functionNode17.getJsDocNode();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode22 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.Scope scope24 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 10);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode25 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode26 = functionNode25.getTop();
        functionNode25.setParens((int) (byte) 1, (int) (short) 1);
        functionNode25.setEncodedSourceStart((-1));
        functionNode25.setFunctionIsGetter();
        scope24.addChildToFront((com.google.javascript.rhino.head.Node) functionNode25);
        functionNode22.setBody((com.google.javascript.rhino.head.ast.AstNode) functionNode25);
        boolean boolean35 = functionNode17.isParam((com.google.javascript.rhino.head.ast.AstNode) functionNode22);
        int int36 = functionNode17.getFunctionCount();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode37 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int38 = functionNode37.getLp();
        functionNode37.setEncodedSource("");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode41 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int42 = functionNode41.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode43 = functionNode41.getTop();
        com.google.javascript.rhino.head.ast.Name name44 = null;
        functionNode41.setFunctionName(name44);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode46 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode47 = functionNode46.getTop();
        functionNode41.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode46);
        int int49 = functionNode46.getRp();
        int int50 = functionNode46.getFunctionType();
        functionNode37.addParam((com.google.javascript.rhino.head.ast.AstNode) functionNode46);
        com.google.javascript.rhino.head.Node node52 = functionNode37.getLastSibling();
        com.google.javascript.rhino.head.Node node53 = new com.google.javascript.rhino.head.Node((int) (byte) 10, (com.google.javascript.rhino.head.Node) functionNode17, (com.google.javascript.rhino.head.Node) functionNode37);
        com.google.javascript.rhino.head.Node node54 = functionNode37.getLastSibling();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode56 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int57 = scriptNode56.getEndLineno();
        int int58 = scriptNode56.getBaseLineno();
        com.google.javascript.rhino.head.ast.Jump jump61 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode63 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int64 = scriptNode63.getEndLineno();
        int int65 = scriptNode63.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList66 = scriptNode63.getChildScopes();
        jump61.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode63);
        java.lang.String str68 = scriptNode63.debugPrint();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode56, (com.google.javascript.rhino.head.ast.Scope) scriptNode63);
        scriptNode56.setRelative(21);
        com.google.javascript.rhino.head.ast.Jump jump76 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump76.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump80 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump76, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode82 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int83 = scriptNode82.getEndLineno();
        int int84 = scriptNode82.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList85 = scriptNode82.getChildScopes();
        com.google.javascript.rhino.head.Node node86 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump76, (com.google.javascript.rhino.head.Node) scriptNode82);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList87 = scriptNode82.getChildScopes();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList88 = scriptNode82.getSymbols();
        scriptNode56.addChildScope((com.google.javascript.rhino.head.ast.Scope) scriptNode82);
        scriptNode82.clearParentScope();
        com.google.javascript.rhino.head.ast.RegExpLiteral regExpLiteral93 = new com.google.javascript.rhino.head.ast.RegExpLiteral(18, 0);
        scriptNode82.addRegExp(regExpLiteral93);
        java.lang.String str96 = regExpLiteral93.toSource((-616130778));
        boolean boolean97 = functionNode37.isParam((com.google.javascript.rhino.head.ast.AstNode) regExpLiteral93);
        regExpLiteral2.putProp((int) (byte) 1, (java.lang.Object) functionNode37);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNull(comment21);
        org.junit.Assert.assertNotNull(scriptNode26);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertNotNull(scriptNode43);
        org.junit.Assert.assertNotNull(scriptNode47);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertNotNull(node52);
        org.junit.Assert.assertNotNull(node54);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + (-1) + "'", int58 == (-1));
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + (-1) + "'", int64 == (-1));
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + (-1) + "'", int65 == (-1));
        org.junit.Assert.assertNull(scopeList66);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str68, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + (-1) + "'", int83 == (-1));
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + (-1) + "'", int84 == (-1));
        org.junit.Assert.assertNull(scopeList85);
        org.junit.Assert.assertNull(scopeList87);
        org.junit.Assert.assertNotNull(symbolList88);
        org.junit.Assert.assertEquals("'" + str96 + "' != '" + "/null/" + "'", str96, "/null/");
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + false + "'", boolean97 == false);
    }

    @Test
    public void test09745() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09745");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode1 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int2 = functionNode1.getLp();
        functionNode1.setEncodedSource("");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode5 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int6 = functionNode5.getLp();
        functionNode5.setEncodedSource("");
        functionNode5.flattenSymbolTable(false);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode11 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int12 = functionNode11.getLp();
        com.google.javascript.rhino.head.Node node14 = new com.google.javascript.rhino.head.Node((-1), (com.google.javascript.rhino.head.Node) functionNode1, (com.google.javascript.rhino.head.Node) functionNode5, (com.google.javascript.rhino.head.Node) functionNode11, (int) '#');
        boolean boolean15 = functionNode11.isGenerator();
        int int16 = functionNode11.getFunctionType();
        com.google.javascript.rhino.head.Node node17 = functionNode11.getNext();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode18 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int19 = functionNode18.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode20 = functionNode18.getTop();
        com.google.javascript.rhino.head.ast.Name name21 = null;
        functionNode18.setFunctionName(name21);
        functionNode18.setIsGenerator();
        functionNode11.setMemberExprNode((com.google.javascript.rhino.head.ast.AstNode) functionNode18);
        functionNode18.setFunctionIsGetter();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode27 = new com.google.javascript.rhino.head.ast.ScriptNode(32);
        com.google.javascript.rhino.head.ast.Scope scope28 = scriptNode27.getEnclosingScope();
        functionNode18.addParam((com.google.javascript.rhino.head.ast.AstNode) scriptNode27);
        functionNode18.setRp((int) '#');
        com.google.javascript.rhino.head.ast.FunctionNode functionNode34 = new com.google.javascript.rhino.head.ast.FunctionNode((int) (byte) 100);
        int int35 = functionNode34.getEncodedSourceStart();
        int int36 = functionNode34.getFunctionCount();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode37 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode38 = functionNode37.getTop();
        functionNode37.setParens((int) (byte) 1, (int) (short) 1);
        int int42 = functionNode37.getRp();
        com.google.javascript.rhino.head.Node node44 = new com.google.javascript.rhino.head.Node(17, (com.google.javascript.rhino.head.Node) functionNode34, (com.google.javascript.rhino.head.Node) functionNode37, (int) (short) 0);
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList45 = functionNode37.getStatements();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode46 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int47 = functionNode46.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode49 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        java.lang.String str50 = functionNode46.toStringTree(scriptNode49);
        int int51 = scriptNode49.getRegexpCount();
        java.lang.Object obj52 = scriptNode49.getCompilerData();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode54 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int55 = scriptNode54.getEndLineno();
        int int56 = scriptNode54.getBaseLineno();
        com.google.javascript.rhino.head.ast.Jump jump59 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode61 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int62 = scriptNode61.getEndLineno();
        int int63 = scriptNode61.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList64 = scriptNode61.getChildScopes();
        jump59.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode61);
        java.lang.String str66 = scriptNode61.debugPrint();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode54, (com.google.javascript.rhino.head.ast.Scope) scriptNode61);
        com.google.javascript.rhino.head.ast.Scope scope68 = new com.google.javascript.rhino.head.ast.Scope();
        scriptNode61.target = scope68;
        int int70 = scriptNode61.getEncodedSourceStart();
        java.lang.String str71 = scriptNode49.toStringTree(scriptNode61);
        functionNode37.setCompilerData((java.lang.Object) scriptNode61);
        functionNode18.setParent((com.google.javascript.rhino.head.ast.AstNode) scriptNode61);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNull(node17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(scriptNode20);
        org.junit.Assert.assertNull(scope28);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertNotNull(scriptNode38);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 1 + "'", int42 == 1);
        org.junit.Assert.assertNotNull(astNodeList45);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertNull(obj52);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1));
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1));
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + (-1) + "'", int62 == (-1));
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + (-1) + "'", int63 == (-1));
        org.junit.Assert.assertNull(scopeList64);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str66, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + (-1) + "'", int70 == (-1));
        org.junit.Assert.assertNull(str71);
    }

    @Test
    public void test09746() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09746");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int2 = scriptNode1.getEndLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode4 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int5 = scriptNode4.getEndLineno();
        scriptNode1.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode4);
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator7 = scriptNode1.new NodeIterator();
        boolean boolean8 = nodeIterator7.hasNext();
        boolean boolean9 = nodeIterator7.hasNext();
        boolean boolean10 = nodeIterator7.hasNext();
        com.google.javascript.rhino.head.Node node11 = nodeIterator7.next();
        nodeIterator7.remove();
        nodeIterator7.remove();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(node11);
    }

    @Test
    public void test09747() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09747");
        com.google.javascript.rhino.head.Token.CommentType commentType4 = com.google.javascript.rhino.head.Token.CommentType.HTML;
        com.google.javascript.rhino.head.ast.Comment comment6 = new com.google.javascript.rhino.head.ast.Comment(20, 1, commentType4, "109");
        java.lang.String str8 = comment6.toSource(19);
        java.lang.String str9 = comment6.getValue();
        java.lang.String str10 = comment6.getValue();
        com.google.javascript.rhino.head.Token.CommentType commentType11 = comment6.getCommentType();
        com.google.javascript.rhino.head.ast.Comment comment13 = new com.google.javascript.rhino.head.ast.Comment(7, 394394084, commentType11, "48");
        org.junit.Assert.assertTrue("'" + commentType4 + "' != '" + com.google.javascript.rhino.head.Token.CommentType.HTML + "'", commentType4.equals(com.google.javascript.rhino.head.Token.CommentType.HTML));
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "                                      109" + "'", str8, "                                      109");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "109" + "'", str9, "109");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "109" + "'", str10, "109");
        org.junit.Assert.assertTrue("'" + commentType11 + "' != '" + com.google.javascript.rhino.head.Token.CommentType.HTML + "'", commentType11.equals(com.google.javascript.rhino.head.Token.CommentType.HTML));
    }

    @Test
    public void test09748() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09748");
        com.google.javascript.rhino.head.ast.RegExpLiteral regExpLiteral1 = new com.google.javascript.rhino.head.ast.RegExpLiteral(14);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode2 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int3 = functionNode2.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        java.lang.String str6 = functionNode2.toStringTree(scriptNode5);
        functionNode2.setFunctionIsGetter();
        com.google.javascript.rhino.head.ast.AstNode astNode8 = functionNode2.getBody();
        functionNode2.setParens(21, (int) '#');
        int int12 = functionNode2.getLineno();
        functionNode2.setRp(9);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode15 = functionNode2.getTop();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode16 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int17 = functionNode16.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode18 = functionNode16.getTop();
        boolean boolean19 = functionNode16.hasSideEffects();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode21 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int22 = scriptNode21.getEndLineno();
        int int23 = scriptNode21.getBaseLineno();
        com.google.javascript.rhino.head.ast.Jump jump26 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode28 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int29 = scriptNode28.getEndLineno();
        int int30 = scriptNode28.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList31 = scriptNode28.getChildScopes();
        jump26.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode28);
        java.lang.String str33 = scriptNode28.debugPrint();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode21, (com.google.javascript.rhino.head.ast.Scope) scriptNode28);
        com.google.javascript.rhino.head.ast.Scope scope35 = new com.google.javascript.rhino.head.ast.Scope();
        scriptNode28.target = scope35;
        functionNode16.addChildScope(scope35);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode38 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int39 = functionNode38.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode40 = functionNode38.getTop();
        com.google.javascript.rhino.head.ast.Name name41 = null;
        functionNode38.setFunctionName(name41);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode43 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode44 = functionNode43.getTop();
        functionNode38.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode43);
        com.google.javascript.rhino.head.ast.Scope scope48 = new com.google.javascript.rhino.head.ast.Scope((int) (short) -1, 0);
        functionNode38.replaceWith(scope48);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode50 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int51 = functionNode50.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode52 = functionNode50.getTop();
        com.google.javascript.rhino.head.ast.Name name53 = null;
        functionNode50.setFunctionName(name53);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode55 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode56 = functionNode55.getTop();
        functionNode50.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode55);
        int int58 = functionNode38.addFunction(functionNode50);
        int int59 = functionNode16.addFunction(functionNode50);
        functionNode2.addResumptionPoint((com.google.javascript.rhino.head.Node) functionNode50);
        regExpLiteral1.setParent((com.google.javascript.rhino.head.ast.AstNode) functionNode50);
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator62 = regExpLiteral1.new NodeIterator();
        regExpLiteral1.setFlags("                                        /            /");
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(astNode8);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(scriptNode15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNotNull(scriptNode18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertNull(scopeList31);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str33, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertNotNull(scriptNode40);
        org.junit.Assert.assertNotNull(scriptNode44);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1));
        org.junit.Assert.assertNotNull(scriptNode52);
        org.junit.Assert.assertNotNull(scriptNode56);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
    }

    @Test
    public void test09749() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09749");
        com.google.javascript.rhino.head.ast.Jump jump4 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump4.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump8 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump4, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int11 = scriptNode10.getEndLineno();
        int int12 = scriptNode10.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList13 = scriptNode10.getChildScopes();
        com.google.javascript.rhino.head.Node node14 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump4, (com.google.javascript.rhino.head.Node) scriptNode10);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList15 = scriptNode10.getFunctions();
        functionNodeList15.clear();
        functionNodeList15.clear();
        java.util.Iterator<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeItor18 = functionNodeList15.iterator();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode19 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int20 = functionNode19.getLp();
        functionNode19.setLp((int) (short) 1);
        int int25 = functionNode19.getIntProp(4, 26);
        functionNode19.flattenSymbolTable(true);
        boolean boolean28 = functionNodeList15.equals((java.lang.Object) functionNode19);
        java.lang.Object obj29 = null;
        int int30 = functionNodeList15.indexOf(obj29);
        java.util.stream.Stream<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeStream31 = functionNodeList15.stream();
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNull(scopeList13);
        org.junit.Assert.assertNotNull(functionNodeList15);
        org.junit.Assert.assertNotNull(functionNodeItor18);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 26 + "'", int25 == 26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertNotNull(functionNodeStream31);
    }

    @Test
    public void test09750() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09750");
        com.google.javascript.rhino.head.ast.Jump jump4 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump4.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump8 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump4, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int11 = scriptNode10.getEndLineno();
        int int12 = scriptNode10.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList13 = scriptNode10.getChildScopes();
        com.google.javascript.rhino.head.Node node14 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump4, (com.google.javascript.rhino.head.Node) scriptNode10);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList15 = scriptNode10.getFunctions();
        functionNodeList15.clear();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode17 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int18 = functionNode17.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode19 = functionNode17.getTop();
        com.google.javascript.rhino.head.Node node20 = functionNode17.getLastSibling();
        com.google.javascript.rhino.head.ast.AstNode astNode21 = functionNode17.getMemberExprNode();
        boolean boolean22 = functionNodeList15.contains((java.lang.Object) astNode21);
        com.google.javascript.rhino.head.ast.Jump jump27 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump27.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump31 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump27, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode33 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int34 = scriptNode33.getEndLineno();
        int int35 = scriptNode33.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList36 = scriptNode33.getChildScopes();
        com.google.javascript.rhino.head.Node node37 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump27, (com.google.javascript.rhino.head.Node) scriptNode33);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList38 = scriptNode33.getFunctions();
        functionNodeList38.clear();
        functionNodeList38.clear();
        java.util.Iterator<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeItor41 = functionNodeList38.iterator();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode42 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int43 = functionNode42.getLp();
        functionNode42.setLp((int) (short) 1);
        int int48 = functionNode42.getIntProp(4, 26);
        functionNode42.flattenSymbolTable(true);
        boolean boolean51 = functionNodeList38.equals((java.lang.Object) functionNode42);
        boolean boolean52 = functionNodeList15.remove((java.lang.Object) boolean51);
        java.lang.Object[] objArray53 = functionNodeList15.toArray();
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNull(scopeList13);
        org.junit.Assert.assertNotNull(functionNodeList15);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNotNull(scriptNode19);
        org.junit.Assert.assertNotNull(node20);
        org.junit.Assert.assertNull(astNode21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertNull(scopeList36);
        org.junit.Assert.assertNotNull(functionNodeList38);
        org.junit.Assert.assertNotNull(functionNodeItor41);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 26 + "'", int48 == 26);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(objArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray53), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray53), "[]");
    }

    @Test
    public void test09751() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09751");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode0 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = functionNode0.getTop();
        java.lang.String str2 = functionNode0.getName();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator3 = functionNode0.spliterator();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode4 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int5 = functionNode4.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = functionNode4.getTop();
        boolean boolean7 = functionNode4.hasSideEffects();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList8 = functionNode4.getSymbols();
        functionNode4.setRp(5);
        com.google.javascript.rhino.head.ast.Scope scope11 = functionNode4.getEnclosingScope();
        functionNode4.setLineno((int) (short) -1);
        int int14 = functionNode0.addFunction(functionNode4);
        java.lang.Object obj16 = functionNode0.getProp((-18802601));
        org.junit.Assert.assertNotNull(scriptNode1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "" + "'", str2, "");
        org.junit.Assert.assertNotNull(nodeSpliterator3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(scriptNode6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(symbolList8);
        org.junit.Assert.assertNull(scope11);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNull(obj16);
    }

    @Test
    public void test09752() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09752");
        com.google.javascript.rhino.head.ast.Name name1 = null;
        com.google.javascript.rhino.head.ast.FunctionNode functionNode2 = new com.google.javascript.rhino.head.ast.FunctionNode((int) '#', name1);
    }

    @Test
    public void test09753() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09753");
        com.google.javascript.rhino.head.ast.Name name1 = null;
        com.google.javascript.rhino.head.ast.FunctionNode functionNode2 = new com.google.javascript.rhino.head.ast.FunctionNode(136, name1);
        com.google.javascript.rhino.head.ast.AstNode astNode3 = functionNode2.getBody();
        functionNode2.setEncodedSource("Symbol (EOF) name=                                                                                                                                                                                                        /null/");
        org.junit.Assert.assertNull(astNode3);
    }

    @Test
    public void test09754() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09754");
        com.google.javascript.rhino.head.ast.Jump jump4 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump4.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump8 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump4, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int11 = scriptNode10.getEndLineno();
        int int12 = scriptNode10.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList13 = scriptNode10.getChildScopes();
        com.google.javascript.rhino.head.Node node14 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump4, (com.google.javascript.rhino.head.Node) scriptNode10);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList15 = scriptNode10.getFunctions();
        int int16 = functionNodeList15.size();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator17 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        functionNodeList15.sort((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator17);
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator19 = positionComparator17.reversed();
        com.google.javascript.rhino.head.ast.Jump jump23 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump23.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump27 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump23, 0);
        com.google.javascript.rhino.head.ast.Jump jump31 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump31.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump35 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump31, 0);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode36 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int37 = functionNode36.getLp();
        functionNode36.setEncodedSource("");
        functionNode36.flattenSymbolTable(false);
        jump23.addChildAfter((com.google.javascript.rhino.head.Node) jump31, (com.google.javascript.rhino.head.Node) functionNode36);
        int int43 = functionNode36.getPosition();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode45 = new com.google.javascript.rhino.head.ast.FunctionNode(0);
        boolean boolean46 = functionNode45.isExpressionClosure();
        int int47 = positionComparator17.compare((com.google.javascript.rhino.head.ast.AstNode) functionNode36, (com.google.javascript.rhino.head.ast.AstNode) functionNode45);
        com.google.javascript.rhino.head.ast.Scope scope48 = functionNode36.getParentScope();
        int int49 = functionNode36.getRegexpCount();
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.ast.Scope scope50 = com.google.javascript.rhino.head.ast.Scope.splitScope((com.google.javascript.rhino.head.ast.Scope) functionNode36);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: com.google.javascript.rhino.head.ast.Scope cannot be cast to com.google.javascript.rhino.head.ast.ScriptNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNull(scopeList13);
        org.junit.Assert.assertNotNull(functionNodeList15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(astNodeComparator19);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertNull(scope48);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
    }

    @Test
    public void test09755() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09755");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int2 = scriptNode1.getEndLineno();
        int int3 = scriptNode1.getBaseLineno();
        com.google.javascript.rhino.head.ast.Jump jump6 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode8 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int9 = scriptNode8.getEndLineno();
        int int10 = scriptNode8.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList11 = scriptNode8.getChildScopes();
        jump6.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode8);
        java.lang.String str13 = scriptNode8.debugPrint();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode1, (com.google.javascript.rhino.head.ast.Scope) scriptNode8);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode15 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int16 = functionNode15.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode17 = functionNode15.getTop();
        boolean boolean18 = functionNode15.hasSideEffects();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode20 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int21 = scriptNode20.getEndLineno();
        int int22 = scriptNode20.getBaseLineno();
        com.google.javascript.rhino.head.ast.Jump jump25 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode27 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int28 = scriptNode27.getEndLineno();
        int int29 = scriptNode27.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList30 = scriptNode27.getChildScopes();
        jump25.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode27);
        java.lang.String str32 = scriptNode27.debugPrint();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode20, (com.google.javascript.rhino.head.ast.Scope) scriptNode27);
        com.google.javascript.rhino.head.ast.Scope scope34 = new com.google.javascript.rhino.head.ast.Scope();
        scriptNode27.target = scope34;
        functionNode15.addChildScope(scope34);
        boolean boolean37 = functionNode15.hasConsistentReturnUsage();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode38 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode39 = functionNode38.getTop();
        functionNode38.setParens((int) (byte) 1, (int) (short) 1);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode43 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.Scope scope45 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 10);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode46 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode47 = functionNode46.getTop();
        functionNode46.setParens((int) (byte) 1, (int) (short) 1);
        functionNode46.setEncodedSourceStart((-1));
        functionNode46.setFunctionIsGetter();
        scope45.addChildToFront((com.google.javascript.rhino.head.Node) functionNode46);
        functionNode43.setBody((com.google.javascript.rhino.head.ast.AstNode) functionNode46);
        functionNode43.setFunctionIsSetter();
        int int57 = functionNode38.addFunction(functionNode43);
        java.lang.String str58 = functionNode38.getNextTempName();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode60 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int61 = scriptNode60.getEndLineno();
        int int62 = scriptNode60.getBaseLineno();
        scriptNode60.removeProp(0);
        scriptNode60.setEncodedSourceEnd(19);
        functionNode38.addParam((com.google.javascript.rhino.head.ast.AstNode) scriptNode60);
        functionNode15.addChildrenToFront((com.google.javascript.rhino.head.Node) scriptNode60);
        scriptNode8.addChildrenToFront((com.google.javascript.rhino.head.Node) functionNode15);
        scriptNode8.setSourceName("                                    ");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode72 = scriptNode8.getEnclosingFunction();
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.ast.Comment comment73 = functionNode72.getJsDocNode();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNull(scopeList11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str13, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(scriptNode17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertNull(scopeList30);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str32, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(scriptNode39);
        org.junit.Assert.assertNotNull(scriptNode47);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 0 + "'", int57 == 0);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "$0" + "'", str58, "$0");
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + (-1) + "'", int61 == (-1));
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + (-1) + "'", int62 == (-1));
        org.junit.Assert.assertNull(functionNode72);
    }

    @Test
    public void test09756() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09756");
        com.google.javascript.rhino.head.ast.Jump jump4 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump4.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump8 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump4, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int11 = scriptNode10.getEndLineno();
        int int12 = scriptNode10.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList13 = scriptNode10.getChildScopes();
        com.google.javascript.rhino.head.Node node14 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump4, (com.google.javascript.rhino.head.Node) scriptNode10);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList15 = scriptNode10.getFunctions();
        java.util.Spliterator<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeSpliterator16 = functionNodeList15.spliterator();
        int int18 = functionNodeList15.indexOf((java.lang.Object) (byte) 10);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode20 = new com.google.javascript.rhino.head.ast.FunctionNode(0);
        int int21 = functionNode20.getBaseLineno();
        functionNode20.setPosition((int) '#');
        com.google.javascript.rhino.head.ast.FunctionNode functionNode25 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode26 = functionNode25.getTop();
        java.lang.String str27 = scriptNode26.getJsDoc();
        com.google.javascript.rhino.head.Node node29 = scriptNode26.setType(0);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode30 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int31 = functionNode30.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode33 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        java.lang.String str34 = functionNode30.toStringTree(scriptNode33);
        com.google.javascript.rhino.head.ast.Scope scope36 = scriptNode33.getDefiningScope("");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode38 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int39 = scriptNode38.getEndLineno();
        int int40 = scriptNode38.getBaseLineno();
        com.google.javascript.rhino.head.Node node41 = new com.google.javascript.rhino.head.Node(25, node29, (com.google.javascript.rhino.head.Node) scriptNode33, (com.google.javascript.rhino.head.Node) scriptNode38);
        functionNode20.setTop(scriptNode33);
        com.google.javascript.rhino.head.ast.Name name43 = null;
        functionNode20.setFunctionName(name43);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode45 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int46 = functionNode45.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode47 = functionNode45.getTop();
        com.google.javascript.rhino.head.ast.Name name48 = null;
        functionNode45.setFunctionName(name48);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode50 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode51 = functionNode50.getTop();
        functionNode45.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode50);
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList53 = functionNode45.getParams();
        functionNode45.setRequiresActivation();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode55 = new com.google.javascript.rhino.head.ast.ScriptNode();
        int int56 = scriptNode55.getEncodedSourceEnd();
        functionNode45.addResumptionPoint((com.google.javascript.rhino.head.Node) scriptNode55);
        java.util.List<com.google.javascript.rhino.head.Node> nodeList58 = functionNode45.getResumptionPoints();
        functionNode20.setBody((com.google.javascript.rhino.head.ast.AstNode) functionNode45);
        boolean boolean60 = functionNodeList15.remove((java.lang.Object) functionNode20);
        java.util.stream.Stream<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeStream61 = functionNodeList15.stream();
        java.util.ListIterator<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeItor62 = functionNodeList15.listIterator();
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNull(scopeList13);
        org.junit.Assert.assertNotNull(functionNodeList15);
        org.junit.Assert.assertNotNull(functionNodeSpliterator16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertNotNull(scriptNode26);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(node29);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNull(scope36);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertNotNull(scriptNode47);
        org.junit.Assert.assertNotNull(scriptNode51);
        org.junit.Assert.assertNotNull(astNodeList53);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1));
        org.junit.Assert.assertNotNull(nodeList58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(functionNodeStream61);
        org.junit.Assert.assertNotNull(functionNodeItor62);
    }

    @Test
    public void test09757() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09757");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 10);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode2 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode3 = functionNode2.getTop();
        functionNode2.setParens((int) (byte) 1, (int) (short) 1);
        functionNode2.setEncodedSourceStart((-1));
        functionNode2.setFunctionIsGetter();
        scope1.addChildToFront((com.google.javascript.rhino.head.Node) functionNode2);
        functionNode2.setRp(19);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int15 = scriptNode14.getEndLineno();
        int int16 = scriptNode14.getBaseLineno();
        com.google.javascript.rhino.head.ast.Jump jump19 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode21 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int22 = scriptNode21.getEndLineno();
        int int23 = scriptNode21.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList24 = scriptNode21.getChildScopes();
        jump19.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode21);
        java.lang.String str26 = scriptNode21.debugPrint();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode14, (com.google.javascript.rhino.head.ast.Scope) scriptNode21);
        com.google.javascript.rhino.head.ast.Scope scope28 = new com.google.javascript.rhino.head.ast.Scope();
        scriptNode21.target = scope28;
        java.lang.String str30 = functionNode2.toStringTree(scriptNode21);
        java.lang.String str32 = scriptNode21.toSource((int) (short) 10);
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap33 = scriptNode21.getSymbolTable();
        int int34 = strMap33.size();
        strMap33.clear();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode36 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int37 = functionNode36.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode38 = functionNode36.getTop();
        boolean boolean39 = functionNode36.hasSideEffects();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode40 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int41 = functionNode40.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode42 = functionNode40.getTop();
        com.google.javascript.rhino.head.ast.Name name43 = null;
        functionNode40.setFunctionName(name43);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode45 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode46 = functionNode45.getTop();
        functionNode40.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode45);
        int int48 = functionNode45.getRp();
        functionNode45.setParens(11, 2);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode53 = new com.google.javascript.rhino.head.ast.FunctionNode((-1));
        int int54 = functionNode45.addFunction(functionNode53);
        functionNode36.setMemberExprNode((com.google.javascript.rhino.head.ast.AstNode) functionNode45);
        com.google.javascript.rhino.head.ast.Symbol symbol56 = strMap33.remove((java.lang.Object) functionNode45);
        functionNode45.clearParentScope();
        com.google.javascript.rhino.head.ast.Name name58 = null;
        functionNode45.setFunctionName(name58);
        functionNode45.setLength((-14761645));
        org.junit.Assert.assertNotNull(scriptNode3);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNull(scopeList24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str26, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "                    {\n                    }\n" + "'", str32, "                    {\n                    }\n");
        org.junit.Assert.assertNotNull(strMap33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertNotNull(scriptNode38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertNotNull(scriptNode42);
        org.junit.Assert.assertNotNull(scriptNode46);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
        org.junit.Assert.assertNull(symbol56);
    }

    @Test
    public void test09758() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09758");
        com.google.javascript.rhino.head.ast.Jump jump4 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump4.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump8 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump4, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int11 = scriptNode10.getEndLineno();
        int int12 = scriptNode10.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList13 = scriptNode10.getChildScopes();
        com.google.javascript.rhino.head.Node node14 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump4, (com.google.javascript.rhino.head.Node) scriptNode10);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList15 = scriptNode10.getFunctions();
        int int16 = functionNodeList15.size();
        functionNodeList15.clear();
        int int19 = functionNodeList15.indexOf((java.lang.Object) 10L);
        java.util.Iterator<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeItor20 = functionNodeList15.iterator();
        java.util.Iterator<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeItor21 = functionNodeList15.iterator();
        com.google.javascript.rhino.head.ast.Symbol symbol22 = new com.google.javascript.rhino.head.ast.Symbol();
        int int23 = symbol22.getIndex();
        symbol22.setIndex(35);
        com.google.javascript.rhino.head.ast.Jump jump28 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump28.removeProp((int) 'a');
        com.google.javascript.rhino.head.Node node31 = jump28.getFirstChild();
        symbol22.setNode(node31);
        int int33 = symbol22.getIndex();
        int int34 = functionNodeList15.indexOf((java.lang.Object) int33);
        int int36 = functionNodeList15.indexOf((java.lang.Object) "/=");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNull(scopeList13);
        org.junit.Assert.assertNotNull(functionNodeList15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(functionNodeItor20);
        org.junit.Assert.assertNotNull(functionNodeItor21);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNull(node31);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 35 + "'", int33 == 35);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
    }

    @Test
    public void test09759() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09759");
        com.google.javascript.rhino.head.Node node2 = new com.google.javascript.rhino.head.Node(5864805, 394394084);
    }

    @Test
    public void test09760() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09760");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode2 = new com.google.javascript.rhino.head.ast.FunctionNode(0);
        int int3 = functionNode2.getBaseLineno();
        boolean boolean4 = functionNode2.isGetter();
        com.google.javascript.rhino.head.ast.RegExpLiteral regExpLiteral6 = new com.google.javascript.rhino.head.ast.RegExpLiteral((int) (short) 1);
        regExpLiteral6.setFlags("-1\tSCRIPT -1 1\n");
        java.lang.String str9 = regExpLiteral6.getValue();
        regExpLiteral6.setFlags("52");
        functionNode2.addChildrenToFront((com.google.javascript.rhino.head.Node) regExpLiteral6);
        boolean boolean13 = functionNode2.isGetterOrSetter();
        com.google.javascript.rhino.head.ast.Jump jump16 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode18 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int19 = scriptNode18.getEndLineno();
        int int20 = scriptNode18.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList21 = scriptNode18.getChildScopes();
        jump16.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode18);
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor23 = scriptNode18.iterator();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode24 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int25 = functionNode24.getLp();
        functionNode24.setEncodedSource("");
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode18, (com.google.javascript.rhino.head.ast.Scope) functionNode24);
        com.google.javascript.rhino.head.Node node29 = new com.google.javascript.rhino.head.Node((int) (byte) 1, (com.google.javascript.rhino.head.Node) functionNode2, (com.google.javascript.rhino.head.Node) scriptNode18);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList30 = functionNode2.getChildScopes();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode31 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int32 = functionNode31.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode33 = functionNode31.getTop();
        com.google.javascript.rhino.head.ast.Name name34 = null;
        functionNode31.setFunctionName(name34);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode36 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode37 = functionNode36.getTop();
        functionNode31.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode36);
        int int39 = functionNode36.getRp();
        java.lang.String str40 = functionNode36.getSourceName();
        functionNode36.setParens(14, (int) '#');
        int int44 = functionNode2.addFunction(functionNode36);
        // The following exception was thrown during execution in test generation
        try {
            functionNode36.setBaseLineno((-1336829251));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertNull(scopeList21);
        org.junit.Assert.assertNotNull(nodeItor23);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNull(scopeList30);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNotNull(scriptNode33);
        org.junit.Assert.assertNotNull(scriptNode37);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
    }

    @Test
    public void test09761() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09761");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int3 = scriptNode2.getEndLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int6 = scriptNode5.getEndLineno();
        scriptNode2.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode5);
        com.google.javascript.rhino.head.ast.Jump jump9 = new com.google.javascript.rhino.head.ast.Jump((int) 'a', (com.google.javascript.rhino.head.Node) scriptNode5, 350469479);
        com.google.javascript.rhino.head.Node node10 = jump9.getLastSibling();
        com.google.javascript.rhino.head.ast.Scope scope11 = jump9.getEnclosingScope();
        int int12 = jump9.getLineno();
        jump9.setPosition((-1305759086));
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(node10);
        org.junit.Assert.assertNull(scope11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 350469479 + "'", int12 == 350469479);
    }

    @Test
    public void test09762() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09762");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode0 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = functionNode0.getTop();
        com.google.javascript.rhino.head.Node node2 = scriptNode1.getFirstChild();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode4 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int5 = functionNode4.getLp();
        functionNode4.setEncodedSource("");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode8 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int9 = functionNode8.getLp();
        functionNode8.setEncodedSource("");
        functionNode8.flattenSymbolTable(false);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode14 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int15 = functionNode14.getLp();
        com.google.javascript.rhino.head.Node node17 = new com.google.javascript.rhino.head.Node((-1), (com.google.javascript.rhino.head.Node) functionNode4, (com.google.javascript.rhino.head.Node) functionNode8, (com.google.javascript.rhino.head.Node) functionNode14, (int) '#');
        boolean boolean18 = functionNode14.isGenerator();
        com.google.javascript.rhino.head.ast.Scope scope20 = new com.google.javascript.rhino.head.ast.Scope();
        scope20.setBounds(0, 10);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode24 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode25 = functionNode24.getTop();
        int int26 = functionNode24.getRegexpCount();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode27 = functionNode24.getEnclosingFunction();
        java.lang.String str28 = scope20.toStringTree((com.google.javascript.rhino.head.ast.ScriptNode) functionNode24);
        functionNode14.putProp(1, (java.lang.Object) functionNode24);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode30 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int31 = functionNode30.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode32 = functionNode30.getTop();
        com.google.javascript.rhino.head.ast.Name name33 = null;
        functionNode30.setFunctionName(name33);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode35 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode36 = functionNode35.getTop();
        functionNode30.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode35);
        functionNode35.setIsExpressionClosure(true);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode41 = new com.google.javascript.rhino.head.ast.FunctionNode((int) (byte) 100);
        int int42 = functionNode35.addFunction(functionNode41);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode44 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode45 = functionNode44.getTop();
        java.lang.String str46 = scriptNode45.getJsDoc();
        com.google.javascript.rhino.head.Node node48 = scriptNode45.setType(0);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode49 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int50 = functionNode49.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode52 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        java.lang.String str53 = functionNode49.toStringTree(scriptNode52);
        com.google.javascript.rhino.head.ast.Scope scope55 = scriptNode52.getDefiningScope("");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode57 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int58 = scriptNode57.getEndLineno();
        int int59 = scriptNode57.getBaseLineno();
        com.google.javascript.rhino.head.Node node60 = new com.google.javascript.rhino.head.Node(25, node48, (com.google.javascript.rhino.head.Node) scriptNode52, (com.google.javascript.rhino.head.Node) scriptNode57);
        int int61 = functionNode41.compareTo((com.google.javascript.rhino.head.ast.AstNode) scriptNode52);
        functionNode24.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode52);
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode1, (com.google.javascript.rhino.head.ast.Scope) scriptNode52);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList64 = scriptNode52.getFunctions();
        scriptNode52.setRelative((int) (short) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode68 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int69 = scriptNode68.getEndLineno();
        int int70 = scriptNode68.getBaseLineno();
        com.google.javascript.rhino.head.ast.Jump jump73 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode75 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int76 = scriptNode75.getEndLineno();
        int int77 = scriptNode75.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList78 = scriptNode75.getChildScopes();
        jump73.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode75);
        java.lang.String str80 = scriptNode75.debugPrint();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode68, (com.google.javascript.rhino.head.ast.Scope) scriptNode75);
        int int82 = scriptNode68.getBaseLineno();
        scriptNode52.target = scriptNode68;
        org.junit.Assert.assertNotNull(scriptNode1);
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(scriptNode25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNull(functionNode27);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNotNull(scriptNode32);
        org.junit.Assert.assertNotNull(scriptNode36);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertNotNull(scriptNode45);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertNotNull(node48);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertNull(scope55);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + (-1) + "'", int58 == (-1));
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-1) + "'", int59 == (-1));
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 1 + "'", int61 == 1);
        org.junit.Assert.assertNotNull(functionNodeList64);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + (-1) + "'", int69 == (-1));
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + (-1) + "'", int70 == (-1));
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + (-1) + "'", int76 == (-1));
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + (-1) + "'", int77 == (-1));
        org.junit.Assert.assertNull(scopeList78);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str80, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + (-1) + "'", int82 == (-1));
    }

    @Test
    public void test09763() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09763");
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.ast.Symbol symbol2 = new com.google.javascript.rhino.head.ast.Symbol((-120268669), "                            -1\tSCRIPT -1 1\n");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid declType: -120268669");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test09764() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09764");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode0 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int1 = functionNode0.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = functionNode0.getTop();
        com.google.javascript.rhino.head.ast.Name name3 = null;
        functionNode0.setFunctionName(name3);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode5 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = functionNode5.getTop();
        functionNode0.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode5);
        com.google.javascript.rhino.head.ast.Scope scope10 = new com.google.javascript.rhino.head.ast.Scope((int) (short) -1, 0);
        functionNode0.replaceWith(scope10);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode12 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int13 = functionNode12.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = functionNode12.getTop();
        com.google.javascript.rhino.head.ast.Name name15 = null;
        functionNode12.setFunctionName(name15);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode17 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode18 = functionNode17.getTop();
        functionNode12.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode17);
        int int20 = functionNode0.addFunction(functionNode12);
        int int21 = functionNode12.getLineno();
        int int22 = functionNode12.getFunctionType();
        functionNode12.setRp(7);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode25 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int26 = functionNode25.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode27 = functionNode25.getTop();
        com.google.javascript.rhino.head.Node node28 = functionNode25.getLastSibling();
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList29 = functionNode25.getParams();
        int int30 = functionNode25.getType();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator31 = functionNode25.new NodeIterator();
        functionNode12.addResumptionPoint((com.google.javascript.rhino.head.Node) functionNode25);
        java.lang.String str33 = functionNode12.getSourceName();
        com.google.javascript.rhino.head.ast.Jump jump39 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump39.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump43 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump39, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode45 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int46 = scriptNode45.getEndLineno();
        int int47 = scriptNode45.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList48 = scriptNode45.getChildScopes();
        com.google.javascript.rhino.head.Node node49 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump39, (com.google.javascript.rhino.head.Node) scriptNode45);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode51 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int52 = scriptNode51.getEndLineno();
        com.google.javascript.rhino.head.ast.RegExpLiteral regExpLiteral54 = new com.google.javascript.rhino.head.ast.RegExpLiteral((int) (short) 1);
        java.lang.String str56 = regExpLiteral54.toSource((int) (byte) 10);
        regExpLiteral54.setFlags("-1\tSCRIPT -1 1\n");
        regExpLiteral54.removeProp(8);
        com.google.javascript.rhino.head.Node node62 = new com.google.javascript.rhino.head.Node(10, node49, (com.google.javascript.rhino.head.Node) scriptNode51, (com.google.javascript.rhino.head.Node) regExpLiteral54, 3);
        java.lang.String str64 = regExpLiteral54.makeIndent((int) (short) 100);
        java.lang.String str66 = regExpLiteral54.toSource((int) (short) 10);
        functionNode12.addRegExp(regExpLiteral54);
        java.lang.String str68 = regExpLiteral54.getFlags();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-1) + "'", int1 == (-1));
        org.junit.Assert.assertNotNull(scriptNode2);
        org.junit.Assert.assertNotNull(scriptNode6);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(scriptNode14);
        org.junit.Assert.assertNotNull(scriptNode18);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNotNull(scriptNode27);
        org.junit.Assert.assertNotNull(node28);
        org.junit.Assert.assertNotNull(astNodeList29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 109 + "'", int30 == 109);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertNull(scopeList48);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "                    /null/" + "'", str56, "                    /null/");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "                                                                                                                                                                                                        " + "'", str64, "                                                                                                                                                                                                        ");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "                    /null/-1\tSCRIPT -1 1\n" + "'", str66, "                    /null/-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str68, "-1\tSCRIPT -1 1\n");
    }

    @Test
    public void test09765() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09765");
        com.google.javascript.rhino.head.ast.Jump jump4 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump4.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump8 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump4, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int11 = scriptNode10.getEndLineno();
        int int12 = scriptNode10.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList13 = scriptNode10.getChildScopes();
        com.google.javascript.rhino.head.Node node14 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump4, (com.google.javascript.rhino.head.Node) scriptNode10);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList15 = scriptNode10.getFunctions();
        int int16 = functionNodeList15.size();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator17 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        functionNodeList15.sort((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator17);
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator19 = positionComparator17.reversed();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode20 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode21 = functionNode20.getTop();
        com.google.javascript.rhino.head.ast.Name name22 = null;
        functionNode20.setFunctionName(name22);
        boolean boolean24 = functionNode20.requiresActivation();
        com.google.javascript.rhino.head.ast.RegExpLiteral regExpLiteral26 = new com.google.javascript.rhino.head.ast.RegExpLiteral((int) (short) 1);
        java.lang.String str28 = regExpLiteral26.toSource((int) (byte) 10);
        regExpLiteral26.setFlags("-1\tSCRIPT -1 1\n");
        regExpLiteral26.removeProp(8);
        java.lang.String str33 = regExpLiteral26.getValue();
        regExpLiteral26.setLineno(10);
        regExpLiteral26.removeChildren();
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor37 = regExpLiteral26.iterator();
        functionNode20.addRegExp(regExpLiteral26);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode39 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int40 = functionNode39.getLp();
        functionNode39.setEncodedSource("");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode43 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.Scope scope45 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 10);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode46 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode47 = functionNode46.getTop();
        functionNode46.setParens((int) (byte) 1, (int) (short) 1);
        functionNode46.setEncodedSourceStart((-1));
        functionNode46.setFunctionIsGetter();
        scope45.addChildToFront((com.google.javascript.rhino.head.Node) functionNode46);
        functionNode43.setBody((com.google.javascript.rhino.head.ast.AstNode) functionNode46);
        int int56 = functionNode39.addFunction(functionNode43);
        functionNode20.addChildToBack((com.google.javascript.rhino.head.Node) functionNode39);
        com.google.javascript.rhino.head.ast.Jump jump61 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump61.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump65 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump61, 0);
        com.google.javascript.rhino.head.ast.Jump jump69 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump69.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump73 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump69, 0);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode74 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int75 = functionNode74.getLp();
        functionNode74.setEncodedSource("");
        functionNode74.flattenSymbolTable(false);
        jump61.addChildAfter((com.google.javascript.rhino.head.Node) jump69, (com.google.javascript.rhino.head.Node) functionNode74);
        com.google.javascript.rhino.head.Node node81 = functionNode74.target;
        int int82 = positionComparator17.compare((com.google.javascript.rhino.head.ast.AstNode) functionNode20, (com.google.javascript.rhino.head.ast.AstNode) functionNode74);
        functionNode20.setEndLineno(13);
        int int85 = functionNode20.getBaseLineno();
        functionNode20.setIsExpressionClosure(true);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNull(scopeList13);
        org.junit.Assert.assertNotNull(functionNodeList15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(astNodeComparator19);
        org.junit.Assert.assertNotNull(scriptNode21);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "                    /null/" + "'", str28, "                    /null/");
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNotNull(nodeItor37);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertNotNull(scriptNode47);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + (-1) + "'", int75 == (-1));
        org.junit.Assert.assertNull(node81);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 0 + "'", int82 == 0);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + (-1) + "'", int85 == (-1));
    }

    @Test
    public void test09766() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09766");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode0 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = functionNode0.getTop();
        functionNode0.setParens((int) (byte) 1, (int) (short) 1);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode5 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.Scope scope7 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 10);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode8 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode9 = functionNode8.getTop();
        functionNode8.setParens((int) (byte) 1, (int) (short) 1);
        functionNode8.setEncodedSourceStart((-1));
        functionNode8.setFunctionIsGetter();
        scope7.addChildToFront((com.google.javascript.rhino.head.Node) functionNode8);
        functionNode5.setBody((com.google.javascript.rhino.head.ast.AstNode) functionNode8);
        functionNode5.setFunctionIsSetter();
        int int19 = functionNode0.addFunction(functionNode5);
        java.lang.String str20 = functionNode0.getNextTempName();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode22 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int23 = scriptNode22.getEndLineno();
        int int24 = scriptNode22.getBaseLineno();
        scriptNode22.removeProp(0);
        scriptNode22.setEncodedSourceEnd(19);
        functionNode0.addParam((com.google.javascript.rhino.head.ast.AstNode) scriptNode22);
        functionNode0.setEncodedSource("                {\n                }\n");
        boolean boolean32 = functionNode0.isSetter();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode34 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode35 = functionNode34.getTop();
        com.google.javascript.rhino.head.ast.Name name36 = null;
        functionNode34.setFunctionName(name36);
        boolean boolean38 = functionNode34.requiresActivation();
        com.google.javascript.rhino.head.ast.Jump jump42 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump42.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump46 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump42, 0);
        com.google.javascript.rhino.head.ast.Jump jump50 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump50.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump54 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump50, 0);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode55 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int56 = functionNode55.getLp();
        functionNode55.setEncodedSource("");
        functionNode55.flattenSymbolTable(false);
        jump42.addChildAfter((com.google.javascript.rhino.head.Node) jump50, (com.google.javascript.rhino.head.Node) functionNode55);
        com.google.javascript.rhino.head.Node node62 = functionNode55.target;
        functionNode34.setBody((com.google.javascript.rhino.head.ast.AstNode) functionNode55);
        com.google.javascript.rhino.head.Node node65 = new com.google.javascript.rhino.head.Node(10, (com.google.javascript.rhino.head.Node) functionNode55, 10);
        functionNode55.setFunctionIsSetter();
        functionNode55.setBaseLineno(11);
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList69 = functionNode55.getStatements();
        functionNode0.addChildToBack((com.google.javascript.rhino.head.Node) functionNode55);
        functionNode0.setEncodedSourceBounds(4, (-979800144));
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str75 = functionNode0.toSource((-816165888));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(scriptNode1);
        org.junit.Assert.assertNotNull(scriptNode9);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "$0" + "'", str20, "$0");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(scriptNode35);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1));
        org.junit.Assert.assertNull(node62);
        org.junit.Assert.assertNotNull(astNodeList69);
    }

    @Test
    public void test09767() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09767");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode0 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int1 = functionNode0.getLp();
        functionNode0.setEncodedSource("");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode4 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int5 = functionNode4.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = functionNode4.getTop();
        com.google.javascript.rhino.head.ast.Name name7 = null;
        functionNode4.setFunctionName(name7);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode9 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = functionNode9.getTop();
        functionNode4.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode9);
        int int12 = functionNode9.getRp();
        int int13 = functionNode9.getFunctionType();
        functionNode0.addParam((com.google.javascript.rhino.head.ast.AstNode) functionNode9);
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator15 = functionNode9.new NodeIterator();
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList16 = functionNode9.getStatements();
        com.google.javascript.rhino.head.Node node17 = null;
        com.google.javascript.rhino.head.Node node18 = functionNode9.getChildBefore(node17);
        int int19 = functionNode9.getLp();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-1) + "'", int1 == (-1));
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(scriptNode6);
        org.junit.Assert.assertNotNull(scriptNode10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(astNodeList16);
        org.junit.Assert.assertNull(node18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
    }

    @Test
    public void test09768() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09768");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode0 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int1 = functionNode0.getLp();
        functionNode0.setEncodedSource("");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode4 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.Scope scope6 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 10);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode7 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode8 = functionNode7.getTop();
        functionNode7.setParens((int) (byte) 1, (int) (short) 1);
        functionNode7.setEncodedSourceStart((-1));
        functionNode7.setFunctionIsGetter();
        scope6.addChildToFront((com.google.javascript.rhino.head.Node) functionNode7);
        functionNode4.setBody((com.google.javascript.rhino.head.ast.AstNode) functionNode7);
        int int17 = functionNode0.addFunction(functionNode4);
        com.google.javascript.rhino.head.Node node18 = functionNode4.target;
        boolean boolean19 = functionNode4.isGenerator();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-1) + "'", int1 == (-1));
        org.junit.Assert.assertNotNull(scriptNode8);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNull(node18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    }

    @Test
    public void test09769() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09769");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int2 = scriptNode1.getEndLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode4 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int5 = scriptNode4.getEndLineno();
        scriptNode1.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode4);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode7 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int8 = functionNode7.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode9 = functionNode7.getTop();
        boolean boolean10 = functionNode7.hasSideEffects();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode12 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int13 = scriptNode12.getEndLineno();
        int int14 = scriptNode12.getBaseLineno();
        com.google.javascript.rhino.head.ast.Jump jump17 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode19 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int20 = scriptNode19.getEndLineno();
        int int21 = scriptNode19.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList22 = scriptNode19.getChildScopes();
        jump17.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode19);
        java.lang.String str24 = scriptNode19.debugPrint();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode12, (com.google.javascript.rhino.head.ast.Scope) scriptNode19);
        com.google.javascript.rhino.head.ast.Scope scope26 = new com.google.javascript.rhino.head.ast.Scope();
        scriptNode19.target = scope26;
        functionNode7.addChildScope(scope26);
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode4, (com.google.javascript.rhino.head.ast.Scope) functionNode7);
        int int30 = functionNode7.getFunctionCount();
        java.lang.String str31 = functionNode7.shortName();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode32 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode33 = functionNode32.getTop();
        com.google.javascript.rhino.head.ast.Name name34 = null;
        functionNode32.setFunctionName(name34);
        int int36 = functionNode32.getLength();
        com.google.javascript.rhino.head.ast.Scope scope39 = new com.google.javascript.rhino.head.ast.Scope((int) '4');
        functionNode32.putProp(6, (java.lang.Object) scope39);
        java.lang.String str41 = functionNode32.getJsDoc();
        boolean boolean42 = functionNode7.isParam((com.google.javascript.rhino.head.ast.AstNode) functionNode32);
        functionNode32.setFunctionIsGetter();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(scriptNode9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertNull(scopeList22);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str24, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "FunctionNode" + "'", str31, "FunctionNode");
        org.junit.Assert.assertNotNull(scriptNode33);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 1 + "'", int36 == 1);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
    }

    @Test
    public void test09770() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09770");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode1 = new com.google.javascript.rhino.head.ast.FunctionNode(18);
        int int4 = functionNode1.getIntProp(136, 10);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode6 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.Scope scope8 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 10);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode9 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = functionNode9.getTop();
        functionNode9.setParens((int) (byte) 1, (int) (short) 1);
        functionNode9.setEncodedSourceStart((-1));
        functionNode9.setFunctionIsGetter();
        scope8.addChildToFront((com.google.javascript.rhino.head.Node) functionNode9);
        functionNode6.setBody((com.google.javascript.rhino.head.ast.AstNode) functionNode9);
        functionNode6.setFunctionIsSetter();
        boolean boolean20 = functionNode6.isExpressionClosure();
        functionNode6.putIntProp(7, (int) (byte) 0);
        com.google.javascript.rhino.head.ast.Jump jump24 = new com.google.javascript.rhino.head.ast.Jump(4, (com.google.javascript.rhino.head.Node) functionNode6);
        functionNode6.setRequiresActivation();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode26 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int27 = functionNode26.getLp();
        functionNode26.setEncodedSource("");
        com.google.javascript.rhino.head.Node node30 = functionNode26.getLastChild();
        boolean boolean31 = functionNode26.isSetter();
        functionNode6.target = functionNode26;
        functionNode1.addChildrenToFront((com.google.javascript.rhino.head.Node) functionNode26);
        com.google.javascript.rhino.head.ast.AstNode astNode34 = functionNode1.getBody();
        functionNode1.setIsGenerator();
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 10 + "'", int4 == 10);
        org.junit.Assert.assertNotNull(scriptNode10);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNull(node30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNull(astNode34);
    }

    @Test
    public void test09771() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09771");
        com.google.javascript.rhino.head.ast.Jump jump4 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump4.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump8 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump4, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int11 = scriptNode10.getEndLineno();
        int int12 = scriptNode10.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList13 = scriptNode10.getChildScopes();
        com.google.javascript.rhino.head.Node node14 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump4, (com.google.javascript.rhino.head.Node) scriptNode10);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList15 = scriptNode10.getFunctions();
        int int16 = functionNodeList15.size();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator17 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        functionNodeList15.sort((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator17);
        java.util.stream.Stream<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeStream19 = functionNodeList15.parallelStream();
        boolean boolean20 = functionNodeList15.isEmpty();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode21 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode22 = functionNode21.getTop();
        functionNode21.setParens((int) (byte) 1, (int) (short) 1);
        int int28 = functionNode21.getIntProp((int) (short) 100, (int) (byte) 10);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode29 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int30 = functionNode29.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode31 = functionNode29.getTop();
        boolean boolean32 = functionNode29.hasSideEffects();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode34 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int35 = scriptNode34.getEndLineno();
        int int36 = scriptNode34.getBaseLineno();
        com.google.javascript.rhino.head.ast.Jump jump39 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode41 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int42 = scriptNode41.getEndLineno();
        int int43 = scriptNode41.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList44 = scriptNode41.getChildScopes();
        jump39.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode41);
        java.lang.String str46 = scriptNode41.debugPrint();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode34, (com.google.javascript.rhino.head.ast.Scope) scriptNode41);
        com.google.javascript.rhino.head.ast.Scope scope48 = new com.google.javascript.rhino.head.ast.Scope();
        scriptNode41.target = scope48;
        functionNode29.addChildScope(scope48);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode51 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int52 = functionNode51.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode53 = functionNode51.getTop();
        com.google.javascript.rhino.head.ast.Name name54 = null;
        functionNode51.setFunctionName(name54);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode56 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode57 = functionNode56.getTop();
        functionNode51.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode56);
        com.google.javascript.rhino.head.ast.Scope scope61 = new com.google.javascript.rhino.head.ast.Scope((int) (short) -1, 0);
        functionNode51.replaceWith(scope61);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode63 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int64 = functionNode63.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode65 = functionNode63.getTop();
        com.google.javascript.rhino.head.ast.Name name66 = null;
        functionNode63.setFunctionName(name66);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode68 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode69 = functionNode68.getTop();
        functionNode63.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode68);
        int int71 = functionNode51.addFunction(functionNode63);
        int int72 = functionNode29.addFunction(functionNode63);
        functionNode21.addChildScope((com.google.javascript.rhino.head.ast.Scope) functionNode63);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode74 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int75 = functionNode74.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode76 = functionNode74.getTop();
        boolean boolean77 = functionNode74.hasSideEffects();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList78 = functionNode74.getSymbols();
        int int79 = functionNode74.getLength();
        boolean boolean80 = functionNode74.isGetterOrSetter();
        functionNode21.addResumptionPoint((com.google.javascript.rhino.head.Node) functionNode74);
        int int82 = functionNode74.getEncodedSourceEnd();
        boolean boolean83 = functionNodeList15.equals((java.lang.Object) functionNode74);
        java.util.stream.Stream<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeStream84 = functionNodeList15.parallelStream();
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNull(scopeList13);
        org.junit.Assert.assertNotNull(functionNodeList15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(functionNodeStream19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(scriptNode22);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 10 + "'", int28 == 10);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertNotNull(scriptNode31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertNull(scopeList44);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str46, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertNotNull(scriptNode53);
        org.junit.Assert.assertNotNull(scriptNode57);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + (-1) + "'", int64 == (-1));
        org.junit.Assert.assertNotNull(scriptNode65);
        org.junit.Assert.assertNotNull(scriptNode69);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 0 + "'", int71 == 0);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 0 + "'", int72 == 0);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + (-1) + "'", int75 == (-1));
        org.junit.Assert.assertNotNull(scriptNode76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(symbolList78);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 1 + "'", int79 == 1);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + (-1) + "'", int82 == (-1));
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(functionNodeStream84);
    }

    @Test
    public void test09772() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09772");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode0 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int1 = functionNode0.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode3 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        java.lang.String str4 = functionNode0.toStringTree(scriptNode3);
        functionNode0.setFunctionIsGetter();
        com.google.javascript.rhino.head.ast.AstNode astNode6 = functionNode0.getBody();
        functionNode0.setParens(21, (int) '#');
        functionNode0.setFunctionIsSetter();
        functionNode0.flattenSymbolTable(false);
        functionNode0.setEncodedSourceStart(851648702);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-1) + "'", int1 == (-1));
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(astNode6);
    }

    @Test
    public void test09773() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09773");
        com.google.javascript.rhino.head.ast.Jump jump4 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump4.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump8 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump4, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int11 = scriptNode10.getEndLineno();
        int int12 = scriptNode10.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList13 = scriptNode10.getChildScopes();
        com.google.javascript.rhino.head.Node node14 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump4, (com.google.javascript.rhino.head.Node) scriptNode10);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList15 = scriptNode10.getFunctions();
        functionNodeList15.clear();
        functionNodeList15.clear();
        int int18 = functionNodeList15.size();
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.ast.FunctionNode functionNode20 = functionNodeList15.get(445666398);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 445666398");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNull(scopeList13);
        org.junit.Assert.assertNotNull(functionNodeList15);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
    }

    @Test
    public void test09774() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09774");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 10);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode2 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode3 = functionNode2.getTop();
        functionNode2.setParens((int) (byte) 1, (int) (short) 1);
        functionNode2.setEncodedSourceStart((-1));
        functionNode2.setFunctionIsGetter();
        scope1.addChildToFront((com.google.javascript.rhino.head.Node) functionNode2);
        functionNode2.setRp(19);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int15 = scriptNode14.getEndLineno();
        int int16 = scriptNode14.getBaseLineno();
        com.google.javascript.rhino.head.ast.Jump jump19 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode21 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int22 = scriptNode21.getEndLineno();
        int int23 = scriptNode21.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList24 = scriptNode21.getChildScopes();
        jump19.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode21);
        java.lang.String str26 = scriptNode21.debugPrint();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode14, (com.google.javascript.rhino.head.ast.Scope) scriptNode21);
        com.google.javascript.rhino.head.ast.Scope scope28 = new com.google.javascript.rhino.head.ast.Scope();
        scriptNode21.target = scope28;
        java.lang.String str30 = functionNode2.toStringTree(scriptNode21);
        java.lang.String str32 = scriptNode21.toSource((int) (short) 10);
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap33 = scriptNode21.getSymbolTable();
        int int34 = strMap33.size();
        com.google.javascript.rhino.head.ast.Jump jump39 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump39.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump43 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump39, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode45 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int46 = scriptNode45.getEndLineno();
        int int47 = scriptNode45.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList48 = scriptNode45.getChildScopes();
        com.google.javascript.rhino.head.Node node49 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump39, (com.google.javascript.rhino.head.Node) scriptNode45);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList50 = scriptNode45.getFunctions();
        functionNodeList50.clear();
        functionNodeList50.clear();
        com.google.javascript.rhino.head.ast.Jump jump57 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump57.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump61 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump57, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode63 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int64 = scriptNode63.getEndLineno();
        int int65 = scriptNode63.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList66 = scriptNode63.getChildScopes();
        com.google.javascript.rhino.head.Node node67 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump57, (com.google.javascript.rhino.head.Node) scriptNode63);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList68 = scriptNode63.getFunctions();
        java.util.Spliterator<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeSpliterator69 = functionNodeList68.spliterator();
        int int71 = functionNodeList68.indexOf((java.lang.Object) (byte) 10);
        boolean boolean72 = functionNodeList50.retainAll((java.util.Collection<com.google.javascript.rhino.head.ast.FunctionNode>) functionNodeList68);
        boolean boolean73 = strMap33.containsKey((java.lang.Object) functionNodeList50);
        java.util.Collection<com.google.javascript.rhino.head.ast.Symbol> symbolCollection74 = strMap33.values();
        com.google.javascript.rhino.head.Node node76 = com.google.javascript.rhino.head.Node.newNumber((double) '#');
        com.google.javascript.rhino.head.ast.Symbol symbol77 = strMap33.get((java.lang.Object) '#');
        com.google.javascript.rhino.head.ast.FunctionNode functionNode78 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int79 = functionNode78.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode80 = functionNode78.getTop();
        com.google.javascript.rhino.head.Node node81 = functionNode78.getLastSibling();
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList82 = functionNode78.getParams();
        com.google.javascript.rhino.head.ast.Symbol symbol83 = new com.google.javascript.rhino.head.ast.Symbol();
        int int84 = symbol83.getIndex();
        symbol83.setIndex(35);
        com.google.javascript.rhino.head.ast.Symbol symbol87 = strMap33.getOrDefault((java.lang.Object) functionNode78, symbol83);
        java.lang.String str88 = functionNode78.getNextTempName();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode89 = functionNode78.getTop();
        // The following exception was thrown during execution in test generation
        try {
            boolean[] booleanArray90 = functionNode78.getParamAndVarConst();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(scriptNode3);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNull(scopeList24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str26, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "                    {\n                    }\n" + "'", str32, "                    {\n                    }\n");
        org.junit.Assert.assertNotNull(strMap33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertNull(scopeList48);
        org.junit.Assert.assertNotNull(functionNodeList50);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + (-1) + "'", int64 == (-1));
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + (-1) + "'", int65 == (-1));
        org.junit.Assert.assertNull(scopeList66);
        org.junit.Assert.assertNotNull(functionNodeList68);
        org.junit.Assert.assertNotNull(functionNodeSpliterator69);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + (-1) + "'", int71 == (-1));
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(symbolCollection74);
        org.junit.Assert.assertNotNull(node76);
        org.junit.Assert.assertNull(symbol77);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + (-1) + "'", int79 == (-1));
        org.junit.Assert.assertNotNull(scriptNode80);
        org.junit.Assert.assertNotNull(node81);
        org.junit.Assert.assertNotNull(astNodeList82);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + (-1) + "'", int84 == (-1));
        org.junit.Assert.assertNotNull(symbol87);
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "$0" + "'", str88, "$0");
        org.junit.Assert.assertNotNull(scriptNode89);
    }

    @Test
    public void test09775() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09775");
        com.google.javascript.rhino.head.ast.Symbol symbol0 = new com.google.javascript.rhino.head.ast.Symbol();
        int int1 = symbol0.getIndex();
        symbol0.setIndex(35);
        com.google.javascript.rhino.head.ast.Jump jump6 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump6.removeProp((int) 'a');
        com.google.javascript.rhino.head.Node node9 = jump6.getFirstChild();
        symbol0.setNode(node9);
        int int11 = symbol0.getIndex();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode12 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.Scope scope14 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 10);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode15 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode16 = functionNode15.getTop();
        functionNode15.setParens((int) (byte) 1, (int) (short) 1);
        functionNode15.setEncodedSourceStart((-1));
        functionNode15.setFunctionIsGetter();
        scope14.addChildToFront((com.google.javascript.rhino.head.Node) functionNode15);
        functionNode12.setBody((com.google.javascript.rhino.head.ast.AstNode) functionNode15);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode25 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode26 = functionNode25.getTop();
        functionNode25.setParens((int) (byte) 1, (int) (short) 1);
        functionNode25.setEncodedSourceStart((-1));
        java.util.List<com.google.javascript.rhino.head.Node> nodeList32 = functionNode25.getResumptionPoints();
        int int33 = functionNode25.getLp();
        functionNode12.setBody((com.google.javascript.rhino.head.ast.AstNode) functionNode25);
        com.google.javascript.rhino.head.Node node35 = functionNode25.getNext();
        int int36 = functionNode25.getLineno();
        com.google.javascript.rhino.head.ast.Jump jump42 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump42.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump46 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump42, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode48 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int49 = scriptNode48.getEndLineno();
        int int50 = scriptNode48.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList51 = scriptNode48.getChildScopes();
        com.google.javascript.rhino.head.Node node52 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump42, (com.google.javascript.rhino.head.Node) scriptNode48);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList53 = scriptNode48.getFunctions();
        java.util.Spliterator<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeSpliterator54 = functionNodeList53.spliterator();
        int int56 = functionNodeList53.indexOf((java.lang.Object) (byte) 10);
        com.google.javascript.rhino.head.ast.Scope scope58 = new com.google.javascript.rhino.head.ast.Scope((-1));
        java.lang.String str60 = scope58.toSource((int) (byte) 1);
        boolean boolean61 = functionNodeList53.equals((java.lang.Object) scope58);
        functionNode25.putProp((-18802601), (java.lang.Object) boolean61);
        symbol0.setContainingTable((com.google.javascript.rhino.head.ast.Scope) functionNode25);
        boolean boolean64 = functionNode25.hasSideEffects();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-1) + "'", int1 == (-1));
        org.junit.Assert.assertNull(node9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 35 + "'", int11 == 35);
        org.junit.Assert.assertNotNull(scriptNode16);
        org.junit.Assert.assertNotNull(scriptNode26);
        org.junit.Assert.assertNull(nodeList32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 1 + "'", int33 == 1);
        org.junit.Assert.assertNull(node35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertNull(scopeList51);
        org.junit.Assert.assertNotNull(functionNodeList53);
        org.junit.Assert.assertNotNull(functionNodeSpliterator54);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1));
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "  {\n  }\n" + "'", str60, "  {\n  }\n");
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
    }

    @Test
    public void test09776() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09776");
        com.google.javascript.rhino.head.ast.RegExpLiteral regExpLiteral1 = new com.google.javascript.rhino.head.ast.RegExpLiteral((int) (short) 1);
        java.lang.String str3 = regExpLiteral1.toSource((int) (byte) 10);
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator4 = regExpLiteral1.new NodeIterator();
        boolean boolean5 = nodeIterator4.hasNext();
        boolean boolean6 = nodeIterator4.hasNext();
        boolean boolean7 = nodeIterator4.hasNext();
        boolean boolean8 = nodeIterator4.hasNext();
        boolean boolean9 = nodeIterator4.hasNext();
        boolean boolean10 = nodeIterator4.hasNext();
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.Node node11 = nodeIterator4.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "                    /null/" + "'", str3, "                    /null/");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test09777() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09777");
        com.google.javascript.rhino.head.Node node2 = com.google.javascript.rhino.head.Node.newString((int) (byte) 0, "");
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor3 = node2.iterator();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator4 = node2.new NodeIterator();
        org.junit.Assert.assertNotNull(node2);
        org.junit.Assert.assertNotNull(nodeItor3);
    }

    @Test
    public void test09778() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09778");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        int int1 = scriptNode0.getEncodedSourceEnd();
        scriptNode0.setSourceName("");
        int int4 = scriptNode0.getLineno();
        java.lang.String str5 = scriptNode0.toSource();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode7 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int8 = functionNode7.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode9 = functionNode7.getTop();
        com.google.javascript.rhino.head.ast.Name name10 = null;
        functionNode7.setFunctionName(name10);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode12 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode13 = functionNode12.getTop();
        functionNode7.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode12);
        functionNode12.setIsExpressionClosure(true);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode18 = new com.google.javascript.rhino.head.ast.FunctionNode((int) (byte) 100);
        int int19 = functionNode12.addFunction(functionNode18);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode21 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode22 = functionNode21.getTop();
        java.lang.String str23 = scriptNode22.getJsDoc();
        com.google.javascript.rhino.head.Node node25 = scriptNode22.setType(0);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode26 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int27 = functionNode26.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode29 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        java.lang.String str30 = functionNode26.toStringTree(scriptNode29);
        com.google.javascript.rhino.head.ast.Scope scope32 = scriptNode29.getDefiningScope("");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode34 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int35 = scriptNode34.getEndLineno();
        int int36 = scriptNode34.getBaseLineno();
        com.google.javascript.rhino.head.Node node37 = new com.google.javascript.rhino.head.Node(25, node25, (com.google.javascript.rhino.head.Node) scriptNode29, (com.google.javascript.rhino.head.Node) scriptNode34);
        int int38 = functionNode18.compareTo((com.google.javascript.rhino.head.ast.AstNode) scriptNode29);
        com.google.javascript.rhino.head.ast.RegExpLiteral regExpLiteral40 = new com.google.javascript.rhino.head.ast.RegExpLiteral((int) (short) 1);
        regExpLiteral40.setFlags("-1\tSCRIPT -1 1\n");
        regExpLiteral40.setValue("hi!");
        com.google.javascript.rhino.head.ast.Jump jump48 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump48.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump52 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump48, 0);
        java.lang.String str53 = jump48.toString();
        com.google.javascript.rhino.head.Node node54 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) scriptNode29, (com.google.javascript.rhino.head.Node) regExpLiteral40, (com.google.javascript.rhino.head.Node) jump48);
        regExpLiteral40.setFlags("");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode58 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int59 = scriptNode58.getEndLineno();
        com.google.javascript.rhino.head.Node node61 = scriptNode58.setType(8);
        regExpLiteral40.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode58);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode64 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int65 = scriptNode64.getEndLineno();
        int int66 = scriptNode64.getBaseLineno();
        scriptNode64.removeProp(0);
        scriptNode64.setEncodedSourceEnd(19);
        com.google.javascript.rhino.head.ast.RegExpLiteral regExpLiteral73 = new com.google.javascript.rhino.head.ast.RegExpLiteral((int) (short) 100, 23);
        scriptNode64.addRegExp(regExpLiteral73);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode77 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int78 = scriptNode77.getEndLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode80 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int81 = scriptNode80.getEndLineno();
        scriptNode77.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode80);
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator83 = scriptNode77.new NodeIterator();
        boolean boolean84 = nodeIterator83.hasNext();
        boolean boolean85 = nodeIterator83.hasNext();
        com.google.javascript.rhino.head.Node node86 = nodeIterator83.next();
        regExpLiteral73.putProp(193715443, (java.lang.Object) node86);
        scriptNode0.addChildAfter((com.google.javascript.rhino.head.Node) scriptNode58, (com.google.javascript.rhino.head.Node) regExpLiteral73);
        regExpLiteral73.setFlags("        ");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-1) + "'", int1 == (-1));
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "{\n}\n" + "'", str5, "{\n}\n");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(scriptNode9);
        org.junit.Assert.assertNotNull(scriptNode13);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(scriptNode22);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNotNull(node25);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNull(scope32);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 1 + "'", int38 == 1);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "52" + "'", str53, "52");
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-1) + "'", int59 == (-1));
        org.junit.Assert.assertNotNull(node61);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + (-1) + "'", int65 == (-1));
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + (-1) + "'", int66 == (-1));
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + (-1) + "'", int78 == (-1));
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + (-1) + "'", int81 == (-1));
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertNotNull(node86);
    }

    @Test
    public void test09779() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09779");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode1 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = functionNode1.getTop();
        com.google.javascript.rhino.head.ast.Name name3 = null;
        functionNode1.setFunctionName(name3);
        boolean boolean5 = functionNode1.requiresActivation();
        com.google.javascript.rhino.head.ast.RegExpLiteral regExpLiteral7 = new com.google.javascript.rhino.head.ast.RegExpLiteral((int) (short) 1);
        java.lang.String str9 = regExpLiteral7.toSource((int) (byte) 10);
        regExpLiteral7.setFlags("-1\tSCRIPT -1 1\n");
        regExpLiteral7.removeProp(8);
        java.lang.String str14 = regExpLiteral7.getValue();
        regExpLiteral7.setLineno(10);
        regExpLiteral7.removeChildren();
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor18 = regExpLiteral7.iterator();
        functionNode1.addRegExp(regExpLiteral7);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode20 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.Scope scope22 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 10);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode23 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode24 = functionNode23.getTop();
        functionNode23.setParens((int) (byte) 1, (int) (short) 1);
        functionNode23.setEncodedSourceStart((-1));
        functionNode23.setFunctionIsGetter();
        scope22.addChildToFront((com.google.javascript.rhino.head.Node) functionNode23);
        functionNode20.setBody((com.google.javascript.rhino.head.ast.AstNode) functionNode23);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode33 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode34 = functionNode33.getTop();
        functionNode33.setParens((int) (byte) 1, (int) (short) 1);
        functionNode33.setEncodedSourceStart((-1));
        java.util.List<com.google.javascript.rhino.head.Node> nodeList40 = functionNode33.getResumptionPoints();
        int int41 = functionNode33.getLp();
        functionNode20.setBody((com.google.javascript.rhino.head.ast.AstNode) functionNode33);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode44 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int45 = scriptNode44.getEndLineno();
        int int46 = scriptNode44.getBaseLineno();
        scriptNode44.removeProp(0);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList49 = scriptNode44.getSymbols();
        functionNode20.setSymbols(symbolList49);
        functionNode1.setSymbols(symbolList49);
        com.google.javascript.rhino.head.ast.Name name52 = functionNode1.getFunctionName();
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.Node node53 = new com.google.javascript.rhino.head.Node(682903487, (com.google.javascript.rhino.head.Node) name52);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(scriptNode2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "                    /null/" + "'", str9, "                    /null/");
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(nodeItor18);
        org.junit.Assert.assertNotNull(scriptNode24);
        org.junit.Assert.assertNotNull(scriptNode34);
        org.junit.Assert.assertNull(nodeList40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 1 + "'", int41 == 1);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertNotNull(symbolList49);
        org.junit.Assert.assertNull(name52);
    }

    @Test
    public void test09780() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09780");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode0 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int1 = functionNode0.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = functionNode0.getTop();
        com.google.javascript.rhino.head.ast.Name name3 = null;
        functionNode0.setFunctionName(name3);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode5 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int6 = functionNode5.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode8 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        java.lang.String str9 = functionNode5.toStringTree(scriptNode8);
        functionNode5.setFunctionIsGetter();
        int int11 = functionNode0.addFunction(functionNode5);
        boolean boolean12 = functionNode5.hasSideEffects();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode13 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int14 = functionNode13.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode15 = functionNode13.getTop();
        functionNode5.setBody((com.google.javascript.rhino.head.ast.AstNode) scriptNode15);
        int int17 = functionNode5.getLp();
        com.google.javascript.rhino.head.Token.CommentType commentType22 = com.google.javascript.rhino.head.Token.CommentType.HTML;
        com.google.javascript.rhino.head.ast.Comment comment24 = new com.google.javascript.rhino.head.ast.Comment(20, 1, commentType22, "109");
        java.lang.String str26 = comment24.toSource(19);
        java.lang.String str27 = comment24.getValue();
        java.lang.String str29 = comment24.toSource(2);
        boolean boolean30 = comment24.hasSideEffects();
        com.google.javascript.rhino.head.Token.CommentType commentType31 = com.google.javascript.rhino.head.Token.CommentType.JSDOC;
        comment24.setCommentType(commentType31);
        com.google.javascript.rhino.head.ast.Comment comment34 = new com.google.javascript.rhino.head.ast.Comment(15, (int) ' ', commentType31, "");
        java.lang.String str36 = comment34.toSource((int) (short) -1);
        java.lang.String str37 = comment34.getValue();
        functionNode5.addResumptionPoint((com.google.javascript.rhino.head.Node) comment34);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-1) + "'", int1 == (-1));
        org.junit.Assert.assertNotNull(scriptNode2);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNotNull(scriptNode15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + commentType22 + "' != '" + com.google.javascript.rhino.head.Token.CommentType.HTML + "'", commentType22.equals(com.google.javascript.rhino.head.Token.CommentType.HTML));
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "                                      109" + "'", str26, "                                      109");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "109" + "'", str27, "109");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "    109" + "'", str29, "    109");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + commentType31 + "' != '" + com.google.javascript.rhino.head.Token.CommentType.JSDOC + "'", commentType31.equals(com.google.javascript.rhino.head.Token.CommentType.JSDOC));
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "" + "'", str37, "");
    }

    @Test
    public void test09781() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09781");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode0 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int1 = functionNode0.getLp();
        functionNode0.setEncodedSource("");
        com.google.javascript.rhino.head.Node node4 = functionNode0.getLastChild();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator5 = functionNode0.new NodeIterator();
        // The following exception was thrown during execution in test generation
        try {
            nodeIterator5.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: next() has not been called");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-1) + "'", int1 == (-1));
        org.junit.Assert.assertNull(node4);
    }

    @Test
    public void test09782() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09782");
        com.google.javascript.rhino.head.ast.Jump jump4 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump4.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump8 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump4, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int11 = scriptNode10.getEndLineno();
        int int12 = scriptNode10.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList13 = scriptNode10.getChildScopes();
        com.google.javascript.rhino.head.Node node14 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump4, (com.google.javascript.rhino.head.Node) scriptNode10);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList15 = scriptNode10.getFunctions();
        int int16 = functionNodeList15.size();
        com.google.javascript.rhino.head.ast.Jump jump22 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump22.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump26 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump22, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode28 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int29 = scriptNode28.getEndLineno();
        int int30 = scriptNode28.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList31 = scriptNode28.getChildScopes();
        com.google.javascript.rhino.head.Node node32 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump22, (com.google.javascript.rhino.head.Node) scriptNode28);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList33 = scriptNode28.getFunctions();
        functionNodeList33.clear();
        com.google.javascript.rhino.head.ast.Jump jump39 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump39.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump43 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump39, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode45 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int46 = scriptNode45.getEndLineno();
        int int47 = scriptNode45.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList48 = scriptNode45.getChildScopes();
        com.google.javascript.rhino.head.Node node49 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump39, (com.google.javascript.rhino.head.Node) scriptNode45);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList50 = scriptNode45.getFunctions();
        boolean boolean51 = functionNodeList33.removeAll((java.util.Collection<com.google.javascript.rhino.head.ast.FunctionNode>) functionNodeList50);
        boolean boolean52 = functionNodeList15.addAll(0, (java.util.Collection<com.google.javascript.rhino.head.ast.FunctionNode>) functionNodeList33);
        com.google.javascript.rhino.head.ast.Jump jump57 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump57.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump61 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump57, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode63 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int64 = scriptNode63.getEndLineno();
        int int65 = scriptNode63.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList66 = scriptNode63.getChildScopes();
        com.google.javascript.rhino.head.Node node67 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump57, (com.google.javascript.rhino.head.Node) scriptNode63);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList68 = scriptNode63.getFunctions();
        int int69 = functionNodeList68.size();
        functionNodeList68.clear();
        int int72 = functionNodeList68.indexOf((java.lang.Object) 10L);
        java.util.Iterator<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeItor73 = functionNodeList68.iterator();
        boolean boolean74 = functionNodeList15.retainAll((java.util.Collection<com.google.javascript.rhino.head.ast.FunctionNode>) functionNodeList68);
        com.google.javascript.rhino.head.ast.Jump jump79 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump79.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump83 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump79, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode85 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int86 = scriptNode85.getEndLineno();
        int int87 = scriptNode85.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList88 = scriptNode85.getChildScopes();
        com.google.javascript.rhino.head.Node node89 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump79, (com.google.javascript.rhino.head.Node) scriptNode85);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList90 = scriptNode85.getFunctions();
        int int91 = functionNodeList90.size();
        functionNodeList90.clear();
        int int94 = functionNodeList90.indexOf((java.lang.Object) 10L);
        boolean boolean95 = functionNodeList68.containsAll((java.util.Collection<com.google.javascript.rhino.head.ast.FunctionNode>) functionNodeList90);
        functionNodeList90.clear();
        boolean boolean97 = functionNodeList90.isEmpty();
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNull(scopeList13);
        org.junit.Assert.assertNotNull(functionNodeList15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertNull(scopeList31);
        org.junit.Assert.assertNotNull(functionNodeList33);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertNull(scopeList48);
        org.junit.Assert.assertNotNull(functionNodeList50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + (-1) + "'", int64 == (-1));
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + (-1) + "'", int65 == (-1));
        org.junit.Assert.assertNull(scopeList66);
        org.junit.Assert.assertNotNull(functionNodeList68);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 0 + "'", int69 == 0);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + (-1) + "'", int72 == (-1));
        org.junit.Assert.assertNotNull(functionNodeItor73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + (-1) + "'", int86 == (-1));
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + (-1) + "'", int87 == (-1));
        org.junit.Assert.assertNull(scopeList88);
        org.junit.Assert.assertNotNull(functionNodeList90);
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + 0 + "'", int91 == 0);
        org.junit.Assert.assertTrue("'" + int94 + "' != '" + (-1) + "'", int94 == (-1));
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + true + "'", boolean95 == true);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + true + "'", boolean97 == true);
    }

    @Test
    public void test09783() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09783");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode0 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int1 = functionNode0.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = functionNode0.getTop();
        boolean boolean3 = functionNode0.hasSideEffects();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int6 = scriptNode5.getEndLineno();
        int int7 = scriptNode5.getBaseLineno();
        com.google.javascript.rhino.head.ast.Jump jump10 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode12 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int13 = scriptNode12.getEndLineno();
        int int14 = scriptNode12.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList15 = scriptNode12.getChildScopes();
        jump10.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode12);
        java.lang.String str17 = scriptNode12.debugPrint();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode5, (com.google.javascript.rhino.head.ast.Scope) scriptNode12);
        com.google.javascript.rhino.head.ast.Scope scope19 = new com.google.javascript.rhino.head.ast.Scope();
        scriptNode12.target = scope19;
        functionNode0.addChildScope(scope19);
        boolean boolean22 = functionNode0.hasConsistentReturnUsage();
        java.util.Map<com.google.javascript.rhino.head.Node, int[]> nodeMap23 = functionNode0.getLiveLocals();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode25 = new com.google.javascript.rhino.head.ast.FunctionNode((int) (byte) 100);
        int int26 = functionNode25.getEncodedSourceStart();
        functionNode0.addResumptionPoint((com.google.javascript.rhino.head.Node) functionNode25);
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap28 = functionNode0.getSymbolTable();
        functionNode0.setEncodedSourceStart(7);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode31 = functionNode0.getTop();
        functionNode0.setFunctionType(48);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-1) + "'", int1 == (-1));
        org.junit.Assert.assertNotNull(scriptNode2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNull(scopeList15);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str17, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNull(nodeMap23);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNull(strMap28);
        org.junit.Assert.assertNotNull(scriptNode31);
    }

    @Test
    public void test09784() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09784");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode1 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int2 = functionNode1.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode3 = functionNode1.getTop();
        boolean boolean4 = functionNode1.hasSideEffects();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int7 = scriptNode6.getEndLineno();
        int int8 = scriptNode6.getBaseLineno();
        com.google.javascript.rhino.head.ast.Jump jump11 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode13 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int14 = scriptNode13.getEndLineno();
        int int15 = scriptNode13.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList16 = scriptNode13.getChildScopes();
        jump11.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode13);
        java.lang.String str18 = scriptNode13.debugPrint();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode6, (com.google.javascript.rhino.head.ast.Scope) scriptNode13);
        com.google.javascript.rhino.head.ast.Scope scope20 = new com.google.javascript.rhino.head.ast.Scope();
        scriptNode13.target = scope20;
        functionNode1.addChildScope(scope20);
        boolean boolean23 = functionNode1.hasConsistentReturnUsage();
        java.lang.String str24 = functionNode1.getNextTempName();
        com.google.javascript.rhino.head.ast.Jump jump25 = new com.google.javascript.rhino.head.ast.Jump((int) (short) -1, (com.google.javascript.rhino.head.Node) functionNode1);
        boolean boolean26 = functionNode1.isExpressionClosure();
        com.google.javascript.rhino.head.ast.RegExpLiteral regExpLiteral28 = new com.google.javascript.rhino.head.ast.RegExpLiteral((int) (short) 1);
        regExpLiteral28.setFlags("-1\tSCRIPT -1 1\n");
        regExpLiteral28.setValue("hi!");
        functionNode1.addRegExp(regExpLiteral28);
        java.lang.String str34 = regExpLiteral28.getFlags();
        java.lang.String str35 = regExpLiteral28.getValue();
        java.lang.String str37 = regExpLiteral28.toSource(19);
        regExpLiteral28.setValue("109");
        regExpLiteral28.setValue("136\tSCRIPT 136 1\n");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode43 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int44 = functionNode43.getLp();
        regExpLiteral28.putProp(84791990, (java.lang.Object) functionNode43);
        regExpLiteral28.setFlags("35");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertNotNull(scriptNode3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNull(scopeList16);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str18, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "$0" + "'", str24, "$0");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str34, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!" + "'", str35, "hi!");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "                                      /hi!/-1\tSCRIPT -1 1\n" + "'", str37, "                                      /hi!/-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
    }

    @Test
    public void test09785() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09785");
        com.google.javascript.rhino.head.Node node2 = com.google.javascript.rhino.head.Node.newString((-631440296), "                    {\n                    }\n");
        org.junit.Assert.assertNotNull(node2);
    }

    @Test
    public void test09786() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09786");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode1 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int2 = functionNode1.getLp();
        functionNode1.setEncodedSource("");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode5 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int6 = functionNode5.getLp();
        functionNode5.setEncodedSource("");
        functionNode5.flattenSymbolTable(false);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode11 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int12 = functionNode11.getLp();
        com.google.javascript.rhino.head.Node node14 = new com.google.javascript.rhino.head.Node((-1), (com.google.javascript.rhino.head.Node) functionNode1, (com.google.javascript.rhino.head.Node) functionNode5, (com.google.javascript.rhino.head.Node) functionNode11, (int) '#');
        com.google.javascript.rhino.head.ast.Comment comment15 = functionNode11.getJsDocNode();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode16 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.Scope scope18 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 10);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode19 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode20 = functionNode19.getTop();
        functionNode19.setParens((int) (byte) 1, (int) (short) 1);
        functionNode19.setEncodedSourceStart((-1));
        functionNode19.setFunctionIsGetter();
        scope18.addChildToFront((com.google.javascript.rhino.head.Node) functionNode19);
        functionNode16.setBody((com.google.javascript.rhino.head.ast.AstNode) functionNode19);
        boolean boolean29 = functionNode11.isParam((com.google.javascript.rhino.head.ast.AstNode) functionNode16);
        functionNode11.setFunctionType(13);
        functionNode11.setRp(19);
        int int34 = functionNode11.getRp();
        functionNode11.setBounds(13, (int) (short) -1);
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor38 = functionNode11.iterator();
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList39 = functionNode11.getStatements();
        // The following exception was thrown during execution in test generation
        try {
            functionNode11.resetTargets();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNull(comment15);
        org.junit.Assert.assertNotNull(scriptNode20);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 19 + "'", int34 == 19);
        org.junit.Assert.assertNotNull(nodeItor38);
        org.junit.Assert.assertNotNull(astNodeList39);
    }

    @Test
    public void test09787() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09787");
        com.google.javascript.rhino.head.ast.Scope scope0 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.ast.Name name3 = null;
        com.google.javascript.rhino.head.ast.FunctionNode functionNode4 = new com.google.javascript.rhino.head.ast.FunctionNode(15, name3);
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList5 = functionNode4.getParams();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode6 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int7 = functionNode6.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode8 = functionNode6.getTop();
        com.google.javascript.rhino.head.ast.Name name9 = null;
        functionNode6.setFunctionName(name9);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode11 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode12 = functionNode11.getTop();
        functionNode6.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode11);
        functionNode11.setIsExpressionClosure(true);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode17 = new com.google.javascript.rhino.head.ast.FunctionNode((int) (byte) 100);
        int int18 = functionNode11.addFunction(functionNode17);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode20 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode21 = functionNode20.getTop();
        java.lang.String str22 = scriptNode21.getJsDoc();
        com.google.javascript.rhino.head.Node node24 = scriptNode21.setType(0);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode25 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int26 = functionNode25.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode28 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        java.lang.String str29 = functionNode25.toStringTree(scriptNode28);
        com.google.javascript.rhino.head.ast.Scope scope31 = scriptNode28.getDefiningScope("");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode33 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int34 = scriptNode33.getEndLineno();
        int int35 = scriptNode33.getBaseLineno();
        com.google.javascript.rhino.head.Node node36 = new com.google.javascript.rhino.head.Node(25, node24, (com.google.javascript.rhino.head.Node) scriptNode28, (com.google.javascript.rhino.head.Node) scriptNode33);
        int int37 = functionNode17.compareTo((com.google.javascript.rhino.head.ast.AstNode) scriptNode28);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode38 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int39 = functionNode38.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode40 = functionNode38.getTop();
        com.google.javascript.rhino.head.ast.Name name41 = null;
        functionNode38.setFunctionName(name41);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode43 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int44 = functionNode43.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode46 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        java.lang.String str47 = functionNode43.toStringTree(scriptNode46);
        functionNode43.setFunctionIsGetter();
        int int49 = functionNode38.addFunction(functionNode43);
        boolean boolean50 = functionNode43.hasSideEffects();
        scriptNode28.setParent((com.google.javascript.rhino.head.ast.AstNode) functionNode43);
        functionNode4.addChildToBack((com.google.javascript.rhino.head.Node) functionNode43);
        com.google.javascript.rhino.head.Node node53 = new com.google.javascript.rhino.head.Node((-603955719), (com.google.javascript.rhino.head.Node) functionNode43);
        scope0.setParentScope((com.google.javascript.rhino.head.ast.Scope) functionNode43);
        org.junit.Assert.assertNotNull(astNodeList5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(scriptNode8);
        org.junit.Assert.assertNotNull(scriptNode12);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(scriptNode21);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(node24);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNull(scope31);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 1 + "'", int37 == 1);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertNotNull(scriptNode40);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
    }

    @Test
    public void test09788() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09788");
        com.google.javascript.rhino.head.ast.Jump jump1 = new com.google.javascript.rhino.head.ast.Jump(5864805);
    }

    @Test
    public void test09789() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09789");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode0 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int1 = functionNode0.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = functionNode0.getTop();
        com.google.javascript.rhino.head.ast.Name name3 = null;
        functionNode0.setFunctionName(name3);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode5 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = functionNode5.getTop();
        functionNode0.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode5);
        functionNode5.setIsExpressionClosure(true);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode11 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int12 = functionNode11.getLp();
        functionNode11.setEncodedSource("");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode15 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int16 = functionNode15.getLp();
        functionNode15.setEncodedSource("");
        functionNode15.flattenSymbolTable(false);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode21 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int22 = functionNode21.getLp();
        com.google.javascript.rhino.head.Node node24 = new com.google.javascript.rhino.head.Node((-1), (com.google.javascript.rhino.head.Node) functionNode11, (com.google.javascript.rhino.head.Node) functionNode15, (com.google.javascript.rhino.head.Node) functionNode21, (int) '#');
        com.google.javascript.rhino.head.ast.Comment comment25 = functionNode21.getJsDocNode();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode26 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.Scope scope28 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 10);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode29 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode30 = functionNode29.getTop();
        functionNode29.setParens((int) (byte) 1, (int) (short) 1);
        functionNode29.setEncodedSourceStart((-1));
        functionNode29.setFunctionIsGetter();
        scope28.addChildToFront((com.google.javascript.rhino.head.Node) functionNode29);
        functionNode26.setBody((com.google.javascript.rhino.head.ast.AstNode) functionNode29);
        boolean boolean39 = functionNode21.isParam((com.google.javascript.rhino.head.ast.AstNode) functionNode26);
        functionNode21.setFunctionType(13);
        functionNode21.setRp(19);
        boolean boolean44 = functionNode21.isGenerator();
        java.util.List<com.google.javascript.rhino.head.Node> nodeList45 = functionNode21.getResumptionPoints();
        com.google.javascript.rhino.head.ast.Symbol symbol47 = functionNode21.getSymbol("            {\n            }\n");
        functionNode5.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode21);
        int int49 = functionNode21.getEncodedSourceStart();
        // The following exception was thrown during execution in test generation
        try {
            boolean[] booleanArray50 = functionNode21.getParamAndVarConst();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-1) + "'", int1 == (-1));
        org.junit.Assert.assertNotNull(scriptNode2);
        org.junit.Assert.assertNotNull(scriptNode6);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNull(comment25);
        org.junit.Assert.assertNotNull(scriptNode30);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNull(nodeList45);
        org.junit.Assert.assertNull(symbol47);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
    }

    @Test
    public void test09790() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09790");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int3 = scriptNode2.getEndLineno();
        int int4 = scriptNode2.getBaseLineno();
        com.google.javascript.rhino.head.ast.Jump jump7 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode9 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int10 = scriptNode9.getEndLineno();
        int int11 = scriptNode9.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList12 = scriptNode9.getChildScopes();
        jump7.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode9);
        java.lang.String str14 = scriptNode9.debugPrint();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode2, (com.google.javascript.rhino.head.ast.Scope) scriptNode9);
        scriptNode2.setRelative(21);
        com.google.javascript.rhino.head.ast.Jump jump22 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump22.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump26 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump22, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode28 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int29 = scriptNode28.getEndLineno();
        int int30 = scriptNode28.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList31 = scriptNode28.getChildScopes();
        com.google.javascript.rhino.head.Node node32 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump22, (com.google.javascript.rhino.head.Node) scriptNode28);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList33 = scriptNode28.getChildScopes();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList34 = scriptNode28.getSymbols();
        scriptNode2.addChildScope((com.google.javascript.rhino.head.ast.Scope) scriptNode28);
        java.lang.String str36 = scriptNode2.getSourceName();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode37 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int38 = functionNode37.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode39 = functionNode37.getTop();
        com.google.javascript.rhino.head.ast.Name name40 = null;
        functionNode37.setFunctionName(name40);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode42 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode43 = functionNode42.getTop();
        functionNode37.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode42);
        functionNode42.setIsExpressionClosure(true);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode48 = new com.google.javascript.rhino.head.ast.FunctionNode((int) (byte) 100);
        int int49 = functionNode42.addFunction(functionNode48);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode51 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode52 = functionNode51.getTop();
        java.lang.String str53 = scriptNode52.getJsDoc();
        com.google.javascript.rhino.head.Node node55 = scriptNode52.setType(0);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode56 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int57 = functionNode56.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode59 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        java.lang.String str60 = functionNode56.toStringTree(scriptNode59);
        com.google.javascript.rhino.head.ast.Scope scope62 = scriptNode59.getDefiningScope("");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode64 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int65 = scriptNode64.getEndLineno();
        int int66 = scriptNode64.getBaseLineno();
        com.google.javascript.rhino.head.Node node67 = new com.google.javascript.rhino.head.Node(25, node55, (com.google.javascript.rhino.head.Node) scriptNode59, (com.google.javascript.rhino.head.Node) scriptNode64);
        int int68 = functionNode48.compareTo((com.google.javascript.rhino.head.ast.AstNode) scriptNode59);
        com.google.javascript.rhino.head.ast.Scope scope70 = functionNode48.getDefiningScope("109");
        com.google.javascript.rhino.head.ast.RegExpLiteral regExpLiteral72 = new com.google.javascript.rhino.head.ast.RegExpLiteral((int) (short) 1);
        java.lang.String str74 = regExpLiteral72.toSource((int) (byte) 10);
        java.lang.String str75 = regExpLiteral72.getValue();
        functionNode48.addParam((com.google.javascript.rhino.head.ast.AstNode) regExpLiteral72);
        com.google.javascript.rhino.head.Node node77 = functionNode48.getLastChild();
        com.google.javascript.rhino.head.Node node78 = new com.google.javascript.rhino.head.Node((-3285918), (com.google.javascript.rhino.head.Node) scriptNode2, (com.google.javascript.rhino.head.Node) functionNode48);
        java.lang.String str80 = scriptNode2.toSource((int) 'a');
        com.google.javascript.rhino.head.ast.FunctionNode functionNode82 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int83 = functionNode82.getLp();
        functionNode82.setEncodedSource("");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode86 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int87 = functionNode86.getLp();
        functionNode86.setEncodedSource("");
        functionNode86.flattenSymbolTable(false);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode92 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int93 = functionNode92.getLp();
        com.google.javascript.rhino.head.Node node95 = new com.google.javascript.rhino.head.Node((-1), (com.google.javascript.rhino.head.Node) functionNode82, (com.google.javascript.rhino.head.Node) functionNode86, (com.google.javascript.rhino.head.Node) functionNode92, (int) '#');
        boolean boolean96 = functionNode86.isExpressionClosure();
        scriptNode2.setCompilerData((java.lang.Object) functionNode86);
        java.util.List<com.google.javascript.rhino.head.Node> nodeList98 = functionNode86.getResumptionPoints();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNull(scopeList12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str14, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertNull(scopeList31);
        org.junit.Assert.assertNull(scopeList33);
        org.junit.Assert.assertNotNull(symbolList34);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNotNull(scriptNode39);
        org.junit.Assert.assertNotNull(scriptNode43);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertNotNull(scriptNode52);
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertNotNull(node55);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
        org.junit.Assert.assertNull(str60);
        org.junit.Assert.assertNull(scope62);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + (-1) + "'", int65 == (-1));
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + (-1) + "'", int66 == (-1));
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 1 + "'", int68 == 1);
        org.junit.Assert.assertNull(scope70);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "                    /null/" + "'", str74, "                    /null/");
        org.junit.Assert.assertNull(str75);
        org.junit.Assert.assertNull(node77);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "                                                                                                                                                                                                  {\n                                                                                                                                                                                                  }\n" + "'", str80, "                                                                                                                                                                                                  {\n                                                                                                                                                                                                  }\n");
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + (-1) + "'", int83 == (-1));
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + (-1) + "'", int87 == (-1));
        org.junit.Assert.assertTrue("'" + int93 + "' != '" + (-1) + "'", int93 == (-1));
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
        org.junit.Assert.assertNull(nodeList98);
    }

    @Test
    public void test09791() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09791");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode0 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int1 = functionNode0.getLp();
        functionNode0.setLp((int) (short) 1);
        int int6 = functionNode0.getIntProp(4, 26);
        boolean boolean7 = functionNode0.hasChildren();
        java.lang.String str8 = functionNode0.getNextTempName();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode9 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = functionNode9.getTop();
        com.google.javascript.rhino.head.ast.Name name11 = null;
        functionNode9.setFunctionName(name11);
        functionNode0.addChildScope((com.google.javascript.rhino.head.ast.Scope) functionNode9);
        com.google.javascript.rhino.head.ast.Name name14 = null;
        functionNode9.setFunctionName(name14);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode16 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode17 = functionNode16.getTop();
        functionNode16.setParens((int) (byte) 1, (int) (short) 1);
        functionNode16.setEncodedSourceStart((-1));
        java.util.List<com.google.javascript.rhino.head.Node> nodeList23 = functionNode16.getResumptionPoints();
        com.google.javascript.rhino.head.ast.Scope scope25 = functionNode16.getDefiningScope("hi!");
        boolean boolean26 = functionNode16.isGetterOrSetter();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode27 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int28 = functionNode27.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode29 = functionNode27.getTop();
        com.google.javascript.rhino.head.ast.Name name30 = null;
        functionNode27.setFunctionName(name30);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode32 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode33 = functionNode32.getTop();
        functionNode27.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode32);
        int int35 = functionNode32.getRp();
        int int36 = functionNode32.getFunctionType();
        int int37 = functionNode16.addFunction(functionNode32);
        java.lang.String str38 = functionNode16.getNextTempName();
        int int39 = functionNode9.addFunction(functionNode16);
        java.lang.String str40 = functionNode9.getName();
        // The following exception was thrown during execution in test generation
        try {
            functionNode9.labelId(691568742);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-1) + "'", int1 == (-1));
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 26 + "'", int6 == 26);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "$0" + "'", str8, "$0");
        org.junit.Assert.assertNotNull(scriptNode10);
        org.junit.Assert.assertNotNull(scriptNode17);
        org.junit.Assert.assertNull(nodeList23);
        org.junit.Assert.assertNull(scope25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNotNull(scriptNode29);
        org.junit.Assert.assertNotNull(scriptNode33);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "$0" + "'", str38, "$0");
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "" + "'", str40, "");
    }

    @Test
    public void test09792() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09792");
        com.google.javascript.rhino.head.ast.Symbol symbol0 = new com.google.javascript.rhino.head.ast.Symbol();
        java.lang.String str1 = symbol0.getName();
        com.google.javascript.rhino.head.Node node2 = symbol0.getNode();
        symbol0.setIndex(1);
        symbol0.setIndex(109);
        int int7 = symbol0.getIndex();
        java.lang.String str8 = symbol0.toString();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 109 + "'", int7 == 109);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Symbol (EOF) name=null" + "'", str8, "Symbol (EOF) name=null");
    }

    @Test
    public void test09793() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09793");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode0 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = functionNode0.getTop();
        java.lang.String str2 = functionNode0.getName();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator3 = functionNode0.spliterator();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode4 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int5 = functionNode4.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = functionNode4.getTop();
        boolean boolean7 = functionNode4.hasSideEffects();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList8 = functionNode4.getSymbols();
        functionNode4.setRp(5);
        com.google.javascript.rhino.head.ast.Scope scope11 = functionNode4.getEnclosingScope();
        functionNode4.setLineno((int) (short) -1);
        int int14 = functionNode0.addFunction(functionNode4);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList15 = functionNode4.getChildScopes();
        org.junit.Assert.assertNotNull(scriptNode1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "" + "'", str2, "");
        org.junit.Assert.assertNotNull(nodeSpliterator3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(scriptNode6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(symbolList8);
        org.junit.Assert.assertNull(scope11);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNull(scopeList15);
    }

    @Test
    public void test09794() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09794");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode1 = new com.google.javascript.rhino.head.ast.FunctionNode(9);
        functionNode1.setFunctionIsSetter();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode4 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = functionNode4.getTop();
        java.lang.String str6 = scriptNode5.getJsDoc();
        com.google.javascript.rhino.head.Node node8 = scriptNode5.setType(0);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode9 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int10 = functionNode9.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode12 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        java.lang.String str13 = functionNode9.toStringTree(scriptNode12);
        com.google.javascript.rhino.head.ast.Scope scope15 = scriptNode12.getDefiningScope("");
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList16 = scriptNode12.getSymbols();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode18 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int19 = scriptNode18.getEndLineno();
        int int20 = scriptNode18.getBaseLineno();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode12, (com.google.javascript.rhino.head.ast.Scope) scriptNode18);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode23 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int24 = scriptNode23.getEndLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode26 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int27 = scriptNode26.getEndLineno();
        scriptNode23.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode26);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode29 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int30 = functionNode29.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode31 = functionNode29.getTop();
        boolean boolean32 = functionNode29.hasSideEffects();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode34 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int35 = scriptNode34.getEndLineno();
        int int36 = scriptNode34.getBaseLineno();
        com.google.javascript.rhino.head.ast.Jump jump39 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode41 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int42 = scriptNode41.getEndLineno();
        int int43 = scriptNode41.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList44 = scriptNode41.getChildScopes();
        jump39.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode41);
        java.lang.String str46 = scriptNode41.debugPrint();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode34, (com.google.javascript.rhino.head.ast.Scope) scriptNode41);
        com.google.javascript.rhino.head.ast.Scope scope48 = new com.google.javascript.rhino.head.ast.Scope();
        scriptNode41.target = scope48;
        functionNode29.addChildScope(scope48);
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode26, (com.google.javascript.rhino.head.ast.Scope) functionNode29);
        com.google.javascript.rhino.head.Node node52 = new com.google.javascript.rhino.head.Node(20, (com.google.javascript.rhino.head.Node) scriptNode5, (com.google.javascript.rhino.head.Node) scriptNode12, (com.google.javascript.rhino.head.Node) scriptNode26);
        int int53 = scriptNode12.getEndLineno();
        // The following exception was thrown during execution in test generation
        try {
            functionNode1.setContinue((com.google.javascript.rhino.head.Node) scriptNode12);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(scriptNode5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(node8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(scope15);
        org.junit.Assert.assertNotNull(symbolList16);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertNotNull(scriptNode31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertNull(scopeList44);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str46, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
    }

    @Test
    public void test09795() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09795");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 10);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode2 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode3 = functionNode2.getTop();
        functionNode2.setParens((int) (byte) 1, (int) (short) 1);
        functionNode2.setEncodedSourceStart((-1));
        functionNode2.setFunctionIsGetter();
        scope1.addChildToFront((com.google.javascript.rhino.head.Node) functionNode2);
        functionNode2.setRp(19);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int15 = scriptNode14.getEndLineno();
        int int16 = scriptNode14.getBaseLineno();
        com.google.javascript.rhino.head.ast.Jump jump19 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode21 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int22 = scriptNode21.getEndLineno();
        int int23 = scriptNode21.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList24 = scriptNode21.getChildScopes();
        jump19.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode21);
        java.lang.String str26 = scriptNode21.debugPrint();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode14, (com.google.javascript.rhino.head.ast.Scope) scriptNode21);
        com.google.javascript.rhino.head.ast.Scope scope28 = new com.google.javascript.rhino.head.ast.Scope();
        scriptNode21.target = scope28;
        java.lang.String str30 = functionNode2.toStringTree(scriptNode21);
        java.lang.String str32 = scriptNode21.toSource((int) (short) 10);
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap33 = scriptNode21.getSymbolTable();
        int int34 = strMap33.size();
        strMap33.clear();
        com.google.javascript.rhino.head.ast.Symbol symbol37 = null;
        com.google.javascript.rhino.head.ast.Symbol symbol38 = strMap33.replace("Symbol (EOF) name=null", symbol37);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode40 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int41 = scriptNode40.getEndLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode43 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int44 = scriptNode43.getEndLineno();
        scriptNode40.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode43);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode46 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int47 = functionNode46.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode48 = functionNode46.getTop();
        boolean boolean49 = functionNode46.hasSideEffects();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode51 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int52 = scriptNode51.getEndLineno();
        int int53 = scriptNode51.getBaseLineno();
        com.google.javascript.rhino.head.ast.Jump jump56 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode58 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int59 = scriptNode58.getEndLineno();
        int int60 = scriptNode58.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList61 = scriptNode58.getChildScopes();
        jump56.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode58);
        java.lang.String str63 = scriptNode58.debugPrint();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode51, (com.google.javascript.rhino.head.ast.Scope) scriptNode58);
        com.google.javascript.rhino.head.ast.Scope scope65 = new com.google.javascript.rhino.head.ast.Scope();
        scriptNode58.target = scope65;
        functionNode46.addChildScope(scope65);
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode43, (com.google.javascript.rhino.head.ast.Scope) functionNode46);
        int int69 = functionNode46.getFunctionCount();
        int int70 = functionNode46.getEncodedSourceEnd();
        com.google.javascript.rhino.head.ast.AstRoot astRoot71 = functionNode46.getAstRoot();
        functionNode46.setParens(10, 17);
        com.google.javascript.rhino.head.ast.Symbol symbol75 = strMap33.get((java.lang.Object) functionNode46);
        com.google.javascript.rhino.head.ast.Symbol symbol77 = new com.google.javascript.rhino.head.ast.Symbol();
        com.google.javascript.rhino.head.Node node78 = symbol77.getNode();
        symbol77.setIndex(4);
        com.google.javascript.rhino.head.ast.Scope scope81 = symbol77.getContainingTable();
        int int82 = symbol77.getDeclType();
        com.google.javascript.rhino.head.Node node83 = symbol77.getNode();
        com.google.javascript.rhino.head.ast.Symbol symbol84 = strMap33.put("  ", symbol77);
        com.google.javascript.rhino.head.ast.Symbol symbol86 = new com.google.javascript.rhino.head.ast.Symbol();
        java.lang.String str87 = symbol86.getName();
        symbol86.setIndex((int) '#');
        com.google.javascript.rhino.head.ast.Symbol symbol90 = strMap33.putIfAbsent("                                                                /null/-1\tSCRIPT -1 1\n", symbol86);
        symbol86.setIndex(0);
        java.lang.String str93 = symbol86.toString();
        org.junit.Assert.assertNotNull(scriptNode3);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNull(scopeList24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str26, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "                    {\n                    }\n" + "'", str32, "                    {\n                    }\n");
        org.junit.Assert.assertNotNull(strMap33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertNull(symbol38);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertNotNull(scriptNode48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-1) + "'", int59 == (-1));
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-1) + "'", int60 == (-1));
        org.junit.Assert.assertNull(scopeList61);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str63, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 0 + "'", int69 == 0);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + (-1) + "'", int70 == (-1));
        org.junit.Assert.assertNull(astRoot71);
        org.junit.Assert.assertNull(symbol75);
        org.junit.Assert.assertNull(node78);
        org.junit.Assert.assertNull(scope81);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 0 + "'", int82 == 0);
        org.junit.Assert.assertNull(node83);
        org.junit.Assert.assertNull(symbol84);
        org.junit.Assert.assertNull(str87);
        org.junit.Assert.assertNull(symbol90);
        org.junit.Assert.assertEquals("'" + str93 + "' != '" + "Symbol (EOF) name=null" + "'", str93, "Symbol (EOF) name=null");
    }

    @Test
    public void test09796() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09796");
        com.google.javascript.rhino.head.ast.Symbol symbol0 = new com.google.javascript.rhino.head.ast.Symbol();
        com.google.javascript.rhino.head.Node node1 = symbol0.getNode();
        symbol0.setIndex(4);
        java.lang.String str4 = symbol0.getDeclTypeName();
        java.lang.String str5 = symbol0.toString();
        symbol0.setIndex(25);
        com.google.javascript.rhino.head.Node node8 = symbol0.getNode();
        java.lang.String str9 = symbol0.getDeclTypeName();
        int int10 = symbol0.getDeclType();
        org.junit.Assert.assertNull(node1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "EOF" + "'", str4, "EOF");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Symbol (EOF) name=null" + "'", str5, "Symbol (EOF) name=null");
        org.junit.Assert.assertNull(node8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "EOF" + "'", str9, "EOF");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
    }

    @Test
    public void test09797() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09797");
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.ast.Symbol symbol2 = new com.google.javascript.rhino.head.ast.Symbol(671469117, "                      /hi!/-1\tSCRIPT -1 1\n");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid declType: 671469117");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test09798() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09798");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode0 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int1 = functionNode0.getLp();
        functionNode0.setEncodedSource("");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode4 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int5 = functionNode4.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = functionNode4.getTop();
        com.google.javascript.rhino.head.ast.Name name7 = null;
        functionNode4.setFunctionName(name7);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode9 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = functionNode9.getTop();
        functionNode4.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode9);
        int int12 = functionNode9.getRp();
        int int13 = functionNode9.getFunctionType();
        functionNode0.addParam((com.google.javascript.rhino.head.ast.AstNode) functionNode9);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode15 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int16 = functionNode15.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode17 = functionNode15.getTop();
        com.google.javascript.rhino.head.Node node18 = functionNode15.getLastSibling();
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList19 = functionNode15.getParams();
        functionNode0.setParams(astNodeList19);
        functionNode0.setIsExpressionClosure(true);
        int int25 = functionNode0.getIntProp(6, 4);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode27 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int28 = scriptNode27.getEndLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode30 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int31 = scriptNode30.getEndLineno();
        scriptNode27.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode30);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode33 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int34 = functionNode33.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode35 = functionNode33.getTop();
        boolean boolean36 = functionNode33.hasSideEffects();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode38 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int39 = scriptNode38.getEndLineno();
        int int40 = scriptNode38.getBaseLineno();
        com.google.javascript.rhino.head.ast.Jump jump43 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode45 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int46 = scriptNode45.getEndLineno();
        int int47 = scriptNode45.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList48 = scriptNode45.getChildScopes();
        jump43.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode45);
        java.lang.String str50 = scriptNode45.debugPrint();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode38, (com.google.javascript.rhino.head.ast.Scope) scriptNode45);
        com.google.javascript.rhino.head.ast.Scope scope52 = new com.google.javascript.rhino.head.ast.Scope();
        scriptNode45.target = scope52;
        functionNode33.addChildScope(scope52);
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode30, (com.google.javascript.rhino.head.ast.Scope) functionNode33);
        int int56 = functionNode33.getFunctionCount();
        int int57 = functionNode33.getLineno();
        int int58 = functionNode33.getLength();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) functionNode0, (com.google.javascript.rhino.head.ast.Scope) functionNode33);
        functionNode0.setRp(18);
        boolean boolean62 = functionNode0.isGetter();
        com.google.javascript.rhino.head.ast.RegExpLiteral regExpLiteral65 = new com.google.javascript.rhino.head.ast.RegExpLiteral((int) (short) 1);
        java.lang.String str67 = regExpLiteral65.toSource((int) (byte) 10);
        regExpLiteral65.setLineno(0);
        regExpLiteral65.setValue("EOF");
        regExpLiteral65.setLength((int) (byte) 0);
        java.lang.String str74 = regExpLiteral65.getFlags();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode75 = new com.google.javascript.rhino.head.ast.FunctionNode();
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList76 = functionNode75.getFunctions();
        com.google.javascript.rhino.head.Node node77 = new com.google.javascript.rhino.head.Node((-324184714), (com.google.javascript.rhino.head.Node) regExpLiteral65, (com.google.javascript.rhino.head.Node) functionNode75);
        // The following exception was thrown during execution in test generation
        try {
            functionNode0.setDefault((com.google.javascript.rhino.head.Node) regExpLiteral65);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-1) + "'", int1 == (-1));
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(scriptNode6);
        org.junit.Assert.assertNotNull(scriptNode10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(scriptNode17);
        org.junit.Assert.assertNotNull(node18);
        org.junit.Assert.assertNotNull(astNodeList19);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 4 + "'", int25 == 4);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertNotNull(scriptNode35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertNull(scopeList48);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str50, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 1 + "'", int58 == 1);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "                    /null/" + "'", str67, "                    /null/");
        org.junit.Assert.assertNull(str74);
        org.junit.Assert.assertNotNull(functionNodeList76);
    }

    @Test
    public void test09799() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09799");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode1 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = functionNode1.getTop();
        com.google.javascript.rhino.head.ast.Name name3 = null;
        functionNode1.setFunctionName(name3);
        boolean boolean5 = functionNode1.requiresActivation();
        com.google.javascript.rhino.head.ast.Jump jump9 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump9.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump13 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump9, 0);
        com.google.javascript.rhino.head.ast.Jump jump17 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump17.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump21 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump17, 0);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode22 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int23 = functionNode22.getLp();
        functionNode22.setEncodedSource("");
        functionNode22.flattenSymbolTable(false);
        jump9.addChildAfter((com.google.javascript.rhino.head.Node) jump17, (com.google.javascript.rhino.head.Node) functionNode22);
        com.google.javascript.rhino.head.Node node29 = functionNode22.target;
        functionNode1.setBody((com.google.javascript.rhino.head.ast.AstNode) functionNode22);
        com.google.javascript.rhino.head.Node node32 = new com.google.javascript.rhino.head.Node(10, (com.google.javascript.rhino.head.Node) functionNode22, 10);
        functionNode22.setFunctionIsSetter();
        functionNode22.setBaseLineno(11);
        java.lang.String str36 = functionNode22.getName();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode37 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int38 = functionNode37.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode39 = functionNode37.getTop();
        com.google.javascript.rhino.head.ast.Name name40 = null;
        functionNode37.setFunctionName(name40);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode42 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode43 = functionNode42.getTop();
        functionNode37.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode42);
        functionNode42.setIsExpressionClosure(true);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode48 = new com.google.javascript.rhino.head.ast.FunctionNode((int) (byte) 100);
        int int49 = functionNode42.addFunction(functionNode48);
        com.google.javascript.rhino.head.ast.Name name50 = null;
        functionNode42.setFunctionName(name50);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode53 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int54 = functionNode53.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode55 = functionNode53.getTop();
        com.google.javascript.rhino.head.ast.AstNode astNode56 = functionNode53.getBody();
        int int57 = functionNode53.getLength();
        functionNode42.putProp(100, (java.lang.Object) functionNode53);
        int int59 = functionNode42.getEndLineno();
        int int60 = functionNode22.addFunction(functionNode42);
        com.google.javascript.rhino.head.ast.Scope scope62 = functionNode22.getDefiningScope("hi!");
        org.junit.Assert.assertNotNull(scriptNode2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNull(node29);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNotNull(scriptNode39);
        org.junit.Assert.assertNotNull(scriptNode43);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
        org.junit.Assert.assertNotNull(scriptNode55);
        org.junit.Assert.assertNull(astNode56);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 1 + "'", int57 == 1);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-1) + "'", int59 == (-1));
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 0 + "'", int60 == 0);
        org.junit.Assert.assertNull(scope62);
    }

    @Test
    public void test09800() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09800");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 10);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode2 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode3 = functionNode2.getTop();
        functionNode2.setParens((int) (byte) 1, (int) (short) 1);
        functionNode2.setEncodedSourceStart((-1));
        functionNode2.setFunctionIsGetter();
        scope1.addChildToFront((com.google.javascript.rhino.head.Node) functionNode2);
        functionNode2.setRp(19);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int15 = scriptNode14.getEndLineno();
        int int16 = scriptNode14.getBaseLineno();
        com.google.javascript.rhino.head.ast.Jump jump19 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode21 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int22 = scriptNode21.getEndLineno();
        int int23 = scriptNode21.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList24 = scriptNode21.getChildScopes();
        jump19.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode21);
        java.lang.String str26 = scriptNode21.debugPrint();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode14, (com.google.javascript.rhino.head.ast.Scope) scriptNode21);
        com.google.javascript.rhino.head.ast.Scope scope28 = new com.google.javascript.rhino.head.ast.Scope();
        scriptNode21.target = scope28;
        java.lang.String str30 = functionNode2.toStringTree(scriptNode21);
        java.lang.String str32 = scriptNode21.toSource((int) (short) 10);
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap33 = scriptNode21.getSymbolTable();
        int int34 = strMap33.size();
        java.util.Collection<com.google.javascript.rhino.head.ast.Symbol> symbolCollection35 = strMap33.values();
        com.google.javascript.rhino.head.Node node38 = new com.google.javascript.rhino.head.Node(100, (int) (short) -1);
        com.google.javascript.rhino.head.ast.Symbol symbol39 = strMap33.remove((java.lang.Object) (short) -1);
        com.google.javascript.rhino.head.ast.Symbol symbol41 = new com.google.javascript.rhino.head.ast.Symbol();
        java.lang.String str42 = symbol41.getName();
        com.google.javascript.rhino.head.Node node43 = symbol41.getNode();
        com.google.javascript.rhino.head.ast.Jump jump45 = new com.google.javascript.rhino.head.ast.Jump((int) ' ');
        symbol41.setNode((com.google.javascript.rhino.head.Node) jump45);
        java.lang.String str47 = symbol41.getDeclTypeName();
        int int48 = symbol41.getIndex();
        com.google.javascript.rhino.head.ast.Symbol symbol49 = strMap33.putIfAbsent("/null/-1\tSCRIPT -1 1\n", symbol41);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode51 = new com.google.javascript.rhino.head.ast.FunctionNode((int) (byte) 100);
        int int52 = functionNode51.getEncodedSourceStart();
        int int53 = functionNode51.getFunctionCount();
        boolean boolean54 = functionNode51.isGetter();
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList55 = functionNode51.getFunctions();
        int int56 = functionNode51.getEncodedSourceEnd();
        boolean boolean57 = strMap33.containsValue((java.lang.Object) int56);
        int int58 = strMap33.size();
        org.junit.Assert.assertNotNull(scriptNode3);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNull(scopeList24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str26, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "                    {\n                    }\n" + "'", str32, "                    {\n                    }\n");
        org.junit.Assert.assertNotNull(strMap33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertNotNull(symbolCollection35);
        org.junit.Assert.assertNull(symbol39);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNull(node43);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "EOF" + "'", str47, "EOF");
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
        org.junit.Assert.assertNull(symbol49);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(functionNodeList55);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1));
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 1 + "'", int58 == 1);
    }

    @Test
    public void test09801() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09801");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode2 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode3 = functionNode2.getTop();
        com.google.javascript.rhino.head.ast.Name name4 = null;
        functionNode2.setFunctionName(name4);
        boolean boolean6 = functionNode2.requiresActivation();
        com.google.javascript.rhino.head.ast.Jump jump10 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump10.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump14 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump10, 0);
        com.google.javascript.rhino.head.ast.Jump jump18 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump18.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump22 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump18, 0);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode23 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int24 = functionNode23.getLp();
        functionNode23.setEncodedSource("");
        functionNode23.flattenSymbolTable(false);
        jump10.addChildAfter((com.google.javascript.rhino.head.Node) jump18, (com.google.javascript.rhino.head.Node) functionNode23);
        com.google.javascript.rhino.head.Node node30 = functionNode23.target;
        functionNode2.setBody((com.google.javascript.rhino.head.ast.AstNode) functionNode23);
        com.google.javascript.rhino.head.Node node33 = new com.google.javascript.rhino.head.Node(10, (com.google.javascript.rhino.head.Node) functionNode23, 10);
        boolean boolean34 = functionNode23.isExpressionClosure();
        com.google.javascript.rhino.head.ast.Jump jump36 = new com.google.javascript.rhino.head.ast.Jump((-1), (com.google.javascript.rhino.head.Node) functionNode23, 21);
        functionNode23.putProp((int) '4', (java.lang.Object) "                    /null/-1\tSCRIPT -1 1\n");
        boolean[] booleanArray40 = functionNode23.getParamAndVarConst();
        org.junit.Assert.assertNotNull(scriptNode3);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertNull(node30);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(booleanArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray40), "[]");
    }

    @Test
    public void test09802() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09802");
        com.google.javascript.rhino.head.ast.Jump jump4 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump4.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump8 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump4, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int11 = scriptNode10.getEndLineno();
        int int12 = scriptNode10.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList13 = scriptNode10.getChildScopes();
        com.google.javascript.rhino.head.Node node14 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump4, (com.google.javascript.rhino.head.Node) scriptNode10);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList15 = scriptNode10.getFunctions();
        int int16 = functionNodeList15.size();
        com.google.javascript.rhino.head.ast.Jump jump22 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump22.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump26 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump22, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode28 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int29 = scriptNode28.getEndLineno();
        int int30 = scriptNode28.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList31 = scriptNode28.getChildScopes();
        com.google.javascript.rhino.head.Node node32 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump22, (com.google.javascript.rhino.head.Node) scriptNode28);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList33 = scriptNode28.getFunctions();
        functionNodeList33.clear();
        com.google.javascript.rhino.head.ast.Jump jump39 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump39.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump43 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump39, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode45 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int46 = scriptNode45.getEndLineno();
        int int47 = scriptNode45.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList48 = scriptNode45.getChildScopes();
        com.google.javascript.rhino.head.Node node49 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump39, (com.google.javascript.rhino.head.Node) scriptNode45);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList50 = scriptNode45.getFunctions();
        boolean boolean51 = functionNodeList33.removeAll((java.util.Collection<com.google.javascript.rhino.head.ast.FunctionNode>) functionNodeList50);
        boolean boolean52 = functionNodeList15.addAll(0, (java.util.Collection<com.google.javascript.rhino.head.ast.FunctionNode>) functionNodeList33);
        com.google.javascript.rhino.head.ast.Jump jump57 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump57.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump61 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump57, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode63 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int64 = scriptNode63.getEndLineno();
        int int65 = scriptNode63.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList66 = scriptNode63.getChildScopes();
        com.google.javascript.rhino.head.Node node67 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump57, (com.google.javascript.rhino.head.Node) scriptNode63);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList68 = scriptNode63.getFunctions();
        int int69 = functionNodeList68.size();
        functionNodeList68.clear();
        int int72 = functionNodeList68.indexOf((java.lang.Object) 10L);
        java.util.Iterator<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeItor73 = functionNodeList68.iterator();
        boolean boolean74 = functionNodeList15.retainAll((java.util.Collection<com.google.javascript.rhino.head.ast.FunctionNode>) functionNodeList68);
        java.util.stream.Stream<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeStream75 = functionNodeList68.parallelStream();
        java.util.Spliterator<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeSpliterator76 = functionNodeList68.spliterator();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode78 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int79 = functionNode78.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode80 = functionNode78.getTop();
        com.google.javascript.rhino.head.ast.Name name81 = null;
        functionNode78.setFunctionName(name81);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode83 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode84 = functionNode83.getTop();
        functionNode78.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode83);
        int int86 = functionNode83.getRp();
        int int87 = functionNode83.getFunctionType();
        boolean boolean88 = functionNode83.requiresActivation();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList89 = functionNode83.getChildScopes();
        functionNode83.setFunctionType(100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode92 = functionNode83.getTop();
        int int93 = functionNode83.getRegexpCount();
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.ast.FunctionNode functionNode94 = functionNodeList68.set((-18802601), functionNode83);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNull(scopeList13);
        org.junit.Assert.assertNotNull(functionNodeList15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertNull(scopeList31);
        org.junit.Assert.assertNotNull(functionNodeList33);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertNull(scopeList48);
        org.junit.Assert.assertNotNull(functionNodeList50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + (-1) + "'", int64 == (-1));
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + (-1) + "'", int65 == (-1));
        org.junit.Assert.assertNull(scopeList66);
        org.junit.Assert.assertNotNull(functionNodeList68);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 0 + "'", int69 == 0);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + (-1) + "'", int72 == (-1));
        org.junit.Assert.assertNotNull(functionNodeItor73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(functionNodeStream75);
        org.junit.Assert.assertNotNull(functionNodeSpliterator76);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + (-1) + "'", int79 == (-1));
        org.junit.Assert.assertNotNull(scriptNode80);
        org.junit.Assert.assertNotNull(scriptNode84);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + (-1) + "'", int86 == (-1));
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 0 + "'", int87 == 0);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertNull(scopeList89);
        org.junit.Assert.assertNotNull(scriptNode92);
        org.junit.Assert.assertTrue("'" + int93 + "' != '" + 0 + "'", int93 == 0);
    }

    @Test
    public void test09803() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09803");
        com.google.javascript.rhino.head.ast.Symbol symbol0 = new com.google.javascript.rhino.head.ast.Symbol();
        java.lang.String str1 = symbol0.getName();
        com.google.javascript.rhino.head.ast.Jump jump6 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump6.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump10 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump6, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode12 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int13 = scriptNode12.getEndLineno();
        int int14 = scriptNode12.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList15 = scriptNode12.getChildScopes();
        com.google.javascript.rhino.head.Node node16 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump6, (com.google.javascript.rhino.head.Node) scriptNode12);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList17 = scriptNode12.getChildScopes();
        symbol0.setContainingTable((com.google.javascript.rhino.head.ast.Scope) scriptNode12);
        java.lang.String str19 = symbol0.getName();
        java.lang.String str20 = symbol0.getDeclTypeName();
        int int21 = symbol0.getIndex();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode22 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode23 = functionNode22.getTop();
        functionNode22.setParens((int) (byte) 1, (int) (short) 1);
        int int27 = functionNode22.getRp();
        int int28 = functionNode22.getAbsolutePosition();
        com.google.javascript.rhino.head.ast.AstNode astNode29 = functionNode22.getMemberExprNode();
        int int30 = functionNode22.getBaseLineno();
        int int31 = functionNode22.getEncodedSourceEnd();
        java.lang.String str32 = functionNode22.getJsDoc();
        symbol0.setNode((com.google.javascript.rhino.head.Node) functionNode22);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNull(scopeList15);
        org.junit.Assert.assertNull(scopeList17);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "EOF" + "'", str20, "EOF");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertNotNull(scriptNode23);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1 + "'", int27 == 1);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNull(astNode29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNull(str32);
    }

    @Test
    public void test09804() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09804");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode1 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int2 = functionNode1.getLp();
        functionNode1.setEncodedSource("");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode5 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int6 = functionNode5.getLp();
        functionNode5.setEncodedSource("");
        functionNode5.flattenSymbolTable(false);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode11 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int12 = functionNode11.getLp();
        com.google.javascript.rhino.head.Node node14 = new com.google.javascript.rhino.head.Node((-1), (com.google.javascript.rhino.head.Node) functionNode1, (com.google.javascript.rhino.head.Node) functionNode5, (com.google.javascript.rhino.head.Node) functionNode11, (int) '#');
        com.google.javascript.rhino.head.ast.Comment comment15 = functionNode11.getJsDocNode();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode16 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.Scope scope18 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 10);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode19 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode20 = functionNode19.getTop();
        functionNode19.setParens((int) (byte) 1, (int) (short) 1);
        functionNode19.setEncodedSourceStart((-1));
        functionNode19.setFunctionIsGetter();
        scope18.addChildToFront((com.google.javascript.rhino.head.Node) functionNode19);
        functionNode16.setBody((com.google.javascript.rhino.head.ast.AstNode) functionNode19);
        boolean boolean29 = functionNode11.isParam((com.google.javascript.rhino.head.ast.AstNode) functionNode16);
        int int30 = functionNode16.getLp();
        int int31 = functionNode16.getEncodedSourceEnd();
        boolean boolean32 = functionNode16.isGetterOrSetter();
        com.google.javascript.rhino.head.Node node36 = com.google.javascript.rhino.head.Node.newString("                {\n                }\n");
        com.google.javascript.rhino.head.ast.Jump jump39 = new com.google.javascript.rhino.head.ast.Jump(3, 13);
        com.google.javascript.rhino.head.Node node40 = new com.google.javascript.rhino.head.Node(136, node36, (com.google.javascript.rhino.head.Node) jump39);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode41 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int42 = functionNode41.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode43 = functionNode41.getTop();
        com.google.javascript.rhino.head.ast.Name name44 = null;
        functionNode41.setFunctionName(name44);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode46 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode47 = functionNode46.getTop();
        functionNode41.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode46);
        functionNode46.setEncodedSourceStart(6);
        com.google.javascript.rhino.head.Token.CommentType commentType53 = com.google.javascript.rhino.head.Token.CommentType.HTML;
        com.google.javascript.rhino.head.ast.Comment comment55 = new com.google.javascript.rhino.head.ast.Comment(20, 1, commentType53, "109");
        java.lang.String str57 = comment55.toSource(0);
        java.lang.String str58 = comment55.getValue();
        com.google.javascript.rhino.head.Node node60 = new com.google.javascript.rhino.head.Node(136, node40, (com.google.javascript.rhino.head.Node) functionNode46, (com.google.javascript.rhino.head.Node) comment55, 17);
        functionNode16.replaceWith((com.google.javascript.rhino.head.ast.Scope) functionNode46);
        boolean boolean62 = functionNode46.hasConsistentReturnUsage();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNull(comment15);
        org.junit.Assert.assertNotNull(scriptNode20);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(node36);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertNotNull(scriptNode43);
        org.junit.Assert.assertNotNull(scriptNode47);
        org.junit.Assert.assertTrue("'" + commentType53 + "' != '" + com.google.javascript.rhino.head.Token.CommentType.HTML + "'", commentType53.equals(com.google.javascript.rhino.head.Token.CommentType.HTML));
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "109" + "'", str57, "109");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "109" + "'", str58, "109");
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
    }

    @Test
    public void test09805() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09805");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode0 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int1 = functionNode0.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = functionNode0.getTop();
        com.google.javascript.rhino.head.ast.Name name3 = null;
        functionNode0.setFunctionName(name3);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode5 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int6 = functionNode5.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode8 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        java.lang.String str9 = functionNode5.toStringTree(scriptNode8);
        functionNode5.setFunctionIsGetter();
        int int11 = functionNode0.addFunction(functionNode5);
        boolean boolean12 = functionNode5.hasSideEffects();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode13 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int14 = functionNode13.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode15 = functionNode13.getTop();
        functionNode5.setBody((com.google.javascript.rhino.head.ast.AstNode) scriptNode15);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode18 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int19 = scriptNode18.getEndLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode21 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int22 = scriptNode21.getEndLineno();
        scriptNode18.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode21);
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator24 = scriptNode18.new NodeIterator();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode15, (com.google.javascript.rhino.head.ast.Scope) scriptNode18);
        scriptNode18.setEncodedSourceBounds(14, (int) (short) 10);
        int int29 = scriptNode18.getEncodedSourceEnd();
        java.lang.String str31 = scriptNode18.toSource((-1305759086));
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-1) + "'", int1 == (-1));
        org.junit.Assert.assertNotNull(scriptNode2);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNotNull(scriptNode15);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 10 + "'", int29 == 10);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "{\n{\n}\n}\n" + "'", str31, "{\n{\n}\n}\n");
    }

    @Test
    public void test09806() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09806");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str1 = com.google.javascript.rhino.head.ast.AstNode.operatorToString(84791990);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid operator: 84791990");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test09807() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09807");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode1 = new com.google.javascript.rhino.head.ast.FunctionNode(0);
        int int2 = functionNode1.getBaseLineno();
        functionNode1.setSourceName("                                                                                                                                                                                                        /null/");
        functionNode1.setRequiresActivation();
        com.google.javascript.rhino.head.Node node6 = functionNode1.target;
        functionNode1.setParens((int) '#', (int) (byte) 0);
        int int10 = functionNode1.getAbsolutePosition();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode11 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int12 = functionNode11.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode13 = functionNode11.getTop();
        com.google.javascript.rhino.head.ast.Name name14 = null;
        functionNode11.setFunctionName(name14);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode16 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.Scope scope18 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 10);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode19 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode20 = functionNode19.getTop();
        functionNode19.setParens((int) (byte) 1, (int) (short) 1);
        functionNode19.setEncodedSourceStart((-1));
        functionNode19.setFunctionIsGetter();
        scope18.addChildToFront((com.google.javascript.rhino.head.Node) functionNode19);
        functionNode16.setBody((com.google.javascript.rhino.head.ast.AstNode) functionNode19);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode29 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode30 = functionNode29.getTop();
        functionNode29.setParens((int) (byte) 1, (int) (short) 1);
        functionNode29.setEncodedSourceStart((-1));
        java.util.List<com.google.javascript.rhino.head.Node> nodeList36 = functionNode29.getResumptionPoints();
        int int37 = functionNode29.getLp();
        functionNode16.setBody((com.google.javascript.rhino.head.ast.AstNode) functionNode29);
        functionNode11.addParam((com.google.javascript.rhino.head.ast.AstNode) functionNode29);
        functionNode1.setParentScope((com.google.javascript.rhino.head.ast.Scope) functionNode29);
        java.lang.String str41 = functionNode29.shortName();
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList42 = functionNode29.getFunctions();
        java.util.function.UnaryOperator<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeUnaryOperator43 = null;
        // The following exception was thrown during execution in test generation
        try {
            functionNodeList42.replaceAll(functionNodeUnaryOperator43);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertNull(node6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(scriptNode13);
        org.junit.Assert.assertNotNull(scriptNode20);
        org.junit.Assert.assertNotNull(scriptNode30);
        org.junit.Assert.assertNull(nodeList36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 1 + "'", int37 == 1);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "FunctionNode" + "'", str41, "FunctionNode");
        org.junit.Assert.assertNotNull(functionNodeList42);
    }

    @Test
    public void test09808() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09808");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode1 = new com.google.javascript.rhino.head.ast.FunctionNode((-854226344));
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.ast.Scope scope2 = functionNode1.getScope();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: com.google.javascript.rhino.head.ast.FunctionNode cannot be cast to com.google.javascript.rhino.head.ast.Name");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
    }

    @Test
    public void test09809() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09809");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode1 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int2 = functionNode1.getLp();
        functionNode1.setEncodedSource("");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode5 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int6 = functionNode5.getLp();
        functionNode5.setEncodedSource("");
        functionNode5.flattenSymbolTable(false);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode11 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int12 = functionNode11.getLp();
        com.google.javascript.rhino.head.Node node14 = new com.google.javascript.rhino.head.Node((-1), (com.google.javascript.rhino.head.Node) functionNode1, (com.google.javascript.rhino.head.Node) functionNode5, (com.google.javascript.rhino.head.Node) functionNode11, (int) '#');
        com.google.javascript.rhino.head.ast.Comment comment15 = functionNode11.getJsDocNode();
        int int16 = functionNode11.getFunctionCount();
        boolean boolean17 = functionNode11.hasConsistentReturnUsage();
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor18 = functionNode11.iterator();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNull(comment15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(nodeItor18);
    }

    @Test
    public void test09810() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09810");
        com.google.javascript.rhino.head.ast.Jump jump4 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump4.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump8 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump4, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int11 = scriptNode10.getEndLineno();
        int int12 = scriptNode10.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList13 = scriptNode10.getChildScopes();
        com.google.javascript.rhino.head.Node node14 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump4, (com.google.javascript.rhino.head.Node) scriptNode10);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList15 = scriptNode10.getFunctions();
        int int16 = functionNodeList15.size();
        com.google.javascript.rhino.head.ast.Jump jump22 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump22.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump26 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump22, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode28 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int29 = scriptNode28.getEndLineno();
        int int30 = scriptNode28.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList31 = scriptNode28.getChildScopes();
        com.google.javascript.rhino.head.Node node32 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump22, (com.google.javascript.rhino.head.Node) scriptNode28);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList33 = scriptNode28.getFunctions();
        functionNodeList33.clear();
        com.google.javascript.rhino.head.ast.Jump jump39 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump39.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump43 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump39, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode45 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int46 = scriptNode45.getEndLineno();
        int int47 = scriptNode45.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList48 = scriptNode45.getChildScopes();
        com.google.javascript.rhino.head.Node node49 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump39, (com.google.javascript.rhino.head.Node) scriptNode45);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList50 = scriptNode45.getFunctions();
        boolean boolean51 = functionNodeList33.removeAll((java.util.Collection<com.google.javascript.rhino.head.ast.FunctionNode>) functionNodeList50);
        boolean boolean52 = functionNodeList15.addAll(0, (java.util.Collection<com.google.javascript.rhino.head.ast.FunctionNode>) functionNodeList33);
        int int53 = functionNodeList15.size();
        java.util.Iterator<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeItor54 = functionNodeList15.iterator();
        boolean boolean55 = functionNodeList15.isEmpty();
        java.util.stream.Stream<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeStream56 = functionNodeList15.parallelStream();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode57 = new com.google.javascript.rhino.head.ast.FunctionNode();
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList58 = functionNode57.getFunctions();
        int int59 = functionNodeList15.lastIndexOf((java.lang.Object) functionNode57);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode61 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int62 = functionNode61.getLp();
        functionNode61.setEncodedSource("");
        functionNode61.flattenSymbolTable(false);
        java.lang.String str67 = functionNode61.getName();
        functionNode61.setFunctionIsGetter();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode69 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int70 = functionNode69.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode71 = functionNode69.getTop();
        boolean boolean72 = functionNode69.hasSideEffects();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList73 = functionNode69.getSymbols();
        functionNode69.setRp(5);
        com.google.javascript.rhino.head.ast.Scope scope76 = functionNode69.getEnclosingScope();
        functionNode69.setLineno(5);
        com.google.javascript.rhino.head.Node node80 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) functionNode61, (com.google.javascript.rhino.head.Node) functionNode69, 1);
        functionNode61.setPosition((-446577320));
        boolean boolean83 = functionNode61.isExpressionClosure();
        com.google.javascript.rhino.head.ast.Jump jump87 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        com.google.javascript.rhino.head.ast.Scope scope89 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 10);
        jump87.addChildrenToBack((com.google.javascript.rhino.head.Node) scope89);
        com.google.javascript.rhino.head.ast.Jump jump92 = new com.google.javascript.rhino.head.ast.Jump(15);
        com.google.javascript.rhino.head.Node node94 = new com.google.javascript.rhino.head.Node(10, (com.google.javascript.rhino.head.Node) jump87, (com.google.javascript.rhino.head.Node) jump92, (int) '4');
        boolean boolean95 = jump92.hasSideEffects();
        functionNode61.setCompilerData((java.lang.Object) boolean95);
        // The following exception was thrown during execution in test generation
        try {
            functionNode57.setLoop((com.google.javascript.rhino.head.ast.Jump) functionNode61);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNull(scopeList13);
        org.junit.Assert.assertNotNull(functionNodeList15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertNull(scopeList31);
        org.junit.Assert.assertNotNull(functionNodeList33);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertNull(scopeList48);
        org.junit.Assert.assertNotNull(functionNodeList50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertNotNull(functionNodeItor54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(functionNodeStream56);
        org.junit.Assert.assertNotNull(functionNodeList58);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-1) + "'", int59 == (-1));
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + (-1) + "'", int62 == (-1));
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "" + "'", str67, "");
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + (-1) + "'", int70 == (-1));
        org.junit.Assert.assertNotNull(scriptNode71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(symbolList73);
        org.junit.Assert.assertNull(scope76);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
    }

    @Test
    public void test09811() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09811");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode2 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int3 = functionNode2.getLp();
        functionNode2.setEncodedSource("");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode6 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int7 = functionNode6.getLp();
        functionNode6.setEncodedSource("");
        functionNode6.flattenSymbolTable(false);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode12 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int13 = functionNode12.getLp();
        com.google.javascript.rhino.head.Node node15 = new com.google.javascript.rhino.head.Node((-1), (com.google.javascript.rhino.head.Node) functionNode2, (com.google.javascript.rhino.head.Node) functionNode6, (com.google.javascript.rhino.head.Node) functionNode12, (int) '#');
        functionNode12.setEncodedSourceStart(25);
        boolean boolean18 = functionNode12.requiresActivation();
        java.lang.String str19 = functionNode12.getNextTempName();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode21 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode22 = functionNode21.getTop();
        functionNode21.setParens((int) (byte) 1, (int) (short) 1);
        int int26 = functionNode21.getRp();
        com.google.javascript.rhino.head.Node node29 = com.google.javascript.rhino.head.Node.newString((int) (byte) 100, "");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode30 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int31 = functionNode30.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode33 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        java.lang.String str34 = functionNode30.toStringTree(scriptNode33);
        com.google.javascript.rhino.head.ast.Scope scope36 = scriptNode33.getDefiningScope("");
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList37 = scriptNode33.getSymbols();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode39 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int40 = scriptNode39.getEndLineno();
        int int41 = scriptNode39.getBaseLineno();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode33, (com.google.javascript.rhino.head.ast.Scope) scriptNode39);
        java.lang.String str43 = scriptNode39.getEncodedSource();
        com.google.javascript.rhino.head.Node node45 = new com.google.javascript.rhino.head.Node(136, (com.google.javascript.rhino.head.Node) functionNode21, node29, (com.google.javascript.rhino.head.Node) scriptNode39, (int) (short) 0);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode46 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int47 = functionNode46.getLp();
        functionNode46.setEncodedSource("");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode50 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.Scope scope52 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 10);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode53 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode54 = functionNode53.getTop();
        functionNode53.setParens((int) (byte) 1, (int) (short) 1);
        functionNode53.setEncodedSourceStart((-1));
        functionNode53.setFunctionIsGetter();
        scope52.addChildToFront((com.google.javascript.rhino.head.Node) functionNode53);
        functionNode50.setBody((com.google.javascript.rhino.head.ast.AstNode) functionNode53);
        int int63 = functionNode46.addFunction(functionNode50);
        com.google.javascript.rhino.head.Node node65 = new com.google.javascript.rhino.head.Node((int) '4', (com.google.javascript.rhino.head.Node) functionNode12, (com.google.javascript.rhino.head.Node) scriptNode39, (com.google.javascript.rhino.head.Node) functionNode50, 3);
        com.google.javascript.rhino.head.ast.Scope scope66 = functionNode12.getEnclosingScope();
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList67 = functionNode12.getFunctions();
        java.util.ListIterator<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeItor68 = functionNodeList67.listIterator();
        java.lang.Object[] objArray69 = functionNodeList67.toArray();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "$0" + "'", str19, "$0");
        org.junit.Assert.assertNotNull(scriptNode22);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 1 + "'", int26 == 1);
        org.junit.Assert.assertNotNull(node29);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNull(scope36);
        org.junit.Assert.assertNotNull(symbolList37);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertNotNull(scriptNode54);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 0 + "'", int63 == 0);
        org.junit.Assert.assertNull(scope66);
        org.junit.Assert.assertNotNull(functionNodeList67);
        org.junit.Assert.assertNotNull(functionNodeItor68);
        org.junit.Assert.assertNotNull(objArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray69), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray69), "[]");
    }

    @Test
    public void test09812() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09812");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 10);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode2 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode3 = functionNode2.getTop();
        functionNode2.setParens((int) (byte) 1, (int) (short) 1);
        functionNode2.setEncodedSourceStart((-1));
        functionNode2.setFunctionIsGetter();
        scope1.addChildToFront((com.google.javascript.rhino.head.Node) functionNode2);
        functionNode2.setRp(19);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int15 = scriptNode14.getEndLineno();
        int int16 = scriptNode14.getBaseLineno();
        com.google.javascript.rhino.head.ast.Jump jump19 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode21 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int22 = scriptNode21.getEndLineno();
        int int23 = scriptNode21.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList24 = scriptNode21.getChildScopes();
        jump19.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode21);
        java.lang.String str26 = scriptNode21.debugPrint();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode14, (com.google.javascript.rhino.head.ast.Scope) scriptNode21);
        com.google.javascript.rhino.head.ast.Scope scope28 = new com.google.javascript.rhino.head.ast.Scope();
        scriptNode21.target = scope28;
        java.lang.String str30 = functionNode2.toStringTree(scriptNode21);
        java.lang.String str32 = scriptNode21.toSource((int) (short) 10);
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap33 = scriptNode21.getSymbolTable();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode34 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int35 = functionNode34.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode36 = functionNode34.getTop();
        com.google.javascript.rhino.head.ast.Name name37 = null;
        functionNode34.setFunctionName(name37);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode39 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode40 = functionNode39.getTop();
        functionNode34.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode39);
        int int42 = functionNode39.getRp();
        java.lang.Object obj43 = functionNode39.getCompilerData();
        boolean boolean44 = strMap33.containsKey(obj43);
        com.google.javascript.rhino.head.ast.Symbol symbol46 = new com.google.javascript.rhino.head.ast.Symbol();
        symbol46.setIndex(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode50 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int51 = scriptNode50.getEndLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode53 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int54 = scriptNode53.getEndLineno();
        scriptNode50.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode53);
        com.google.javascript.rhino.head.ast.Comment comment56 = null;
        scriptNode50.setJsDocNode(comment56);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList58 = scriptNode50.getSymbols();
        symbol46.setContainingTable((com.google.javascript.rhino.head.ast.Scope) scriptNode50);
        com.google.javascript.rhino.head.ast.Symbol symbol60 = strMap33.putIfAbsent("{\n}\n", symbol46);
        java.util.Collection<com.google.javascript.rhino.head.ast.Symbol> symbolCollection61 = strMap33.values();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode62 = new com.google.javascript.rhino.head.ast.ScriptNode();
        int int63 = scriptNode62.getEncodedSourceEnd();
        java.lang.String str65 = scriptNode62.toSource((int) (byte) 10);
        java.lang.String str67 = scriptNode62.toSource((int) (short) 0);
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator68 = scriptNode62.spliterator();
        com.google.javascript.rhino.head.ast.Symbol symbol69 = strMap33.remove((java.lang.Object) scriptNode62);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode70 = scriptNode62.getTop();
        org.junit.Assert.assertNotNull(scriptNode3);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNull(scopeList24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str26, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "                    {\n                    }\n" + "'", str32, "                    {\n                    }\n");
        org.junit.Assert.assertNotNull(strMap33);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertNotNull(scriptNode36);
        org.junit.Assert.assertNotNull(scriptNode40);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertNull(obj43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1));
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
        org.junit.Assert.assertNotNull(symbolList58);
        org.junit.Assert.assertNull(symbol60);
        org.junit.Assert.assertNotNull(symbolCollection61);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + (-1) + "'", int63 == (-1));
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "                    {\n                    }\n" + "'", str65, "                    {\n                    }\n");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "{\n}\n" + "'", str67, "{\n}\n");
        org.junit.Assert.assertNotNull(nodeSpliterator68);
        org.junit.Assert.assertNull(symbol69);
        org.junit.Assert.assertNotNull(scriptNode70);
    }

    @Test
    public void test09813() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09813");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode0 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = functionNode0.getTop();
        functionNode0.setParens((int) (byte) 1, (int) (short) 1);
        functionNode0.setEncodedSourceStart((-1));
        java.util.List<com.google.javascript.rhino.head.Node> nodeList7 = functionNode0.getResumptionPoints();
        com.google.javascript.rhino.head.ast.Scope scope9 = functionNode0.getDefiningScope("hi!");
        boolean boolean10 = functionNode0.isGetterOrSetter();
        com.google.javascript.rhino.head.ast.Scope scope12 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 10);
        int[] intArray19 = new int[] { 25, 17, (short) 0, 20, 19, (byte) 1 };
        functionNode0.addLiveLocals((com.google.javascript.rhino.head.Node) scope12, intArray19);
        com.google.javascript.rhino.head.Node node22 = functionNode0.setType(100);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList23 = functionNode0.getFunctions();
        int int24 = functionNode0.getFunctionCount();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode25 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int26 = functionNode25.getLp();
        functionNode25.setEncodedSource("");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode29 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int30 = functionNode29.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode31 = functionNode29.getTop();
        com.google.javascript.rhino.head.ast.Name name32 = null;
        functionNode29.setFunctionName(name32);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode34 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode35 = functionNode34.getTop();
        functionNode29.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode34);
        int int37 = functionNode34.getRp();
        int int38 = functionNode34.getFunctionType();
        functionNode25.addParam((com.google.javascript.rhino.head.ast.AstNode) functionNode34);
        com.google.javascript.rhino.head.ast.Scope scope40 = functionNode34.getEnclosingScope();
        functionNode34.putProp((-1110578805), (java.lang.Object) "                                /null/");
        functionNode34.setEndLineno(14);
        com.google.javascript.rhino.head.ast.AstNode astNode46 = functionNode34.getParent();
        // The following exception was thrown during execution in test generation
        try {
            functionNode0.removeChild((com.google.javascript.rhino.head.Node) functionNode34);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(scriptNode1);
        org.junit.Assert.assertNull(nodeList7);
        org.junit.Assert.assertNull(scope9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[25, 17, 0, 20, 19, 1]");
        org.junit.Assert.assertNotNull(node22);
        org.junit.Assert.assertNotNull(functionNodeList23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertNotNull(scriptNode31);
        org.junit.Assert.assertNotNull(scriptNode35);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertNotNull(scope40);
        org.junit.Assert.assertNotNull(astNode46);
    }

    @Test
    public void test09814() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09814");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode1 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int2 = functionNode1.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode3 = functionNode1.getTop();
        boolean boolean4 = functionNode1.hasSideEffects();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int7 = scriptNode6.getEndLineno();
        int int8 = scriptNode6.getBaseLineno();
        com.google.javascript.rhino.head.ast.Jump jump11 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode13 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int14 = scriptNode13.getEndLineno();
        int int15 = scriptNode13.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList16 = scriptNode13.getChildScopes();
        jump11.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode13);
        java.lang.String str18 = scriptNode13.debugPrint();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode6, (com.google.javascript.rhino.head.ast.Scope) scriptNode13);
        com.google.javascript.rhino.head.ast.Scope scope20 = new com.google.javascript.rhino.head.ast.Scope();
        scriptNode13.target = scope20;
        functionNode1.addChildScope(scope20);
        boolean boolean23 = functionNode1.hasConsistentReturnUsage();
        java.lang.String str24 = functionNode1.getNextTempName();
        com.google.javascript.rhino.head.ast.Jump jump25 = new com.google.javascript.rhino.head.ast.Jump((int) (short) -1, (com.google.javascript.rhino.head.Node) functionNode1);
        boolean boolean26 = functionNode1.isExpressionClosure();
        functionNode1.putIntProp(1, 0);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode30 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int31 = functionNode30.getLp();
        functionNode30.setEncodedSource("");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode34 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int35 = functionNode34.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode36 = functionNode34.getTop();
        com.google.javascript.rhino.head.ast.Name name37 = null;
        functionNode34.setFunctionName(name37);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode39 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode40 = functionNode39.getTop();
        functionNode34.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode39);
        int int42 = functionNode39.getRp();
        int int43 = functionNode39.getFunctionType();
        functionNode30.addParam((com.google.javascript.rhino.head.ast.AstNode) functionNode39);
        com.google.javascript.rhino.head.ast.Scope scope45 = functionNode39.getEnclosingScope();
        com.google.javascript.rhino.head.ast.AstNode astNode46 = scope45.getParent();
        com.google.javascript.rhino.head.Node node47 = scope45.getLastSibling();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode48 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int49 = functionNode48.getLp();
        functionNode48.setIsExpressionClosure(false);
        int int52 = functionNode48.getLineno();
        functionNode1.addChildAfter(node47, (com.google.javascript.rhino.head.Node) functionNode48);
        int int54 = functionNode1.getBaseLineno();
        functionNode1.removeChildren();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode56 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.Scope scope58 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 10);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode59 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode60 = functionNode59.getTop();
        functionNode59.setParens((int) (byte) 1, (int) (short) 1);
        functionNode59.setEncodedSourceStart((-1));
        functionNode59.setFunctionIsGetter();
        scope58.addChildToFront((com.google.javascript.rhino.head.Node) functionNode59);
        functionNode56.setBody((com.google.javascript.rhino.head.ast.AstNode) functionNode59);
        functionNode56.setRequiresActivation();
        boolean boolean70 = functionNode56.isExpressionClosure();
        functionNode56.setBounds(26, 4);
        boolean boolean74 = functionNode1.isParam((com.google.javascript.rhino.head.ast.AstNode) functionNode56);
        int int75 = functionNode56.getType();
        int int76 = functionNode56.getType();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertNotNull(scriptNode3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNull(scopeList16);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str18, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "$0" + "'", str24, "$0");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertNotNull(scriptNode36);
        org.junit.Assert.assertNotNull(scriptNode40);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertNotNull(scope45);
        org.junit.Assert.assertNull(astNode46);
        org.junit.Assert.assertNotNull(node47);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
        org.junit.Assert.assertNotNull(scriptNode60);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 109 + "'", int75 == 109);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 109 + "'", int76 == 109);
    }

    @Test
    public void test09815() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09815");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode2 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode3 = functionNode2.getTop();
        java.lang.String str4 = scriptNode3.getJsDoc();
        com.google.javascript.rhino.head.Node node6 = scriptNode3.setType(0);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode7 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int8 = functionNode7.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        java.lang.String str11 = functionNode7.toStringTree(scriptNode10);
        com.google.javascript.rhino.head.ast.Scope scope13 = scriptNode10.getDefiningScope("");
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList14 = scriptNode10.getSymbols();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode16 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int17 = scriptNode16.getEndLineno();
        int int18 = scriptNode16.getBaseLineno();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode10, (com.google.javascript.rhino.head.ast.Scope) scriptNode16);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode21 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int22 = scriptNode21.getEndLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode24 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int25 = scriptNode24.getEndLineno();
        scriptNode21.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode24);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode27 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int28 = functionNode27.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode29 = functionNode27.getTop();
        boolean boolean30 = functionNode27.hasSideEffects();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode32 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int33 = scriptNode32.getEndLineno();
        int int34 = scriptNode32.getBaseLineno();
        com.google.javascript.rhino.head.ast.Jump jump37 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode39 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int40 = scriptNode39.getEndLineno();
        int int41 = scriptNode39.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList42 = scriptNode39.getChildScopes();
        jump37.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode39);
        java.lang.String str44 = scriptNode39.debugPrint();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode32, (com.google.javascript.rhino.head.ast.Scope) scriptNode39);
        com.google.javascript.rhino.head.ast.Scope scope46 = new com.google.javascript.rhino.head.ast.Scope();
        scriptNode39.target = scope46;
        functionNode27.addChildScope(scope46);
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode24, (com.google.javascript.rhino.head.ast.Scope) functionNode27);
        com.google.javascript.rhino.head.Node node50 = new com.google.javascript.rhino.head.Node(20, (com.google.javascript.rhino.head.Node) scriptNode3, (com.google.javascript.rhino.head.Node) scriptNode10, (com.google.javascript.rhino.head.Node) scriptNode24);
        com.google.javascript.rhino.head.Node node51 = new com.google.javascript.rhino.head.Node(136, (com.google.javascript.rhino.head.Node) scriptNode24);
        scriptNode24.setEncodedSourceEnd(3);
        int int54 = scriptNode24.getParamCount();
        scriptNode24.setEncodedSource("                                                                                                        {\n                                                                                                        }\n");
        scriptNode24.setEncodedSourceStart((-532790313));
        org.junit.Assert.assertNotNull(scriptNode3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(node6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(scope13);
        org.junit.Assert.assertNotNull(symbolList14);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNotNull(scriptNode29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertNull(scopeList42);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str44, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
    }

    @Test
    public void test09816() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09816");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode2 = new com.google.javascript.rhino.head.ast.FunctionNode(13);
        int int3 = functionNode2.getType();
        com.google.javascript.rhino.head.Node node4 = new com.google.javascript.rhino.head.Node(24, (com.google.javascript.rhino.head.Node) functionNode2);
        functionNode2.putIntProp(4, 2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 109 + "'", int3 == 109);
    }

    @Test
    public void test09817() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09817");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode0 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int1 = functionNode0.getLp();
        functionNode0.setEncodedSource("");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode4 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.Scope scope6 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 10);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode7 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode8 = functionNode7.getTop();
        functionNode7.setParens((int) (byte) 1, (int) (short) 1);
        functionNode7.setEncodedSourceStart((-1));
        functionNode7.setFunctionIsGetter();
        scope6.addChildToFront((com.google.javascript.rhino.head.Node) functionNode7);
        functionNode4.setBody((com.google.javascript.rhino.head.ast.AstNode) functionNode7);
        int int17 = functionNode0.addFunction(functionNode4);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode18 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int19 = functionNode18.getLp();
        functionNode18.setEncodedSource("");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode22 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int23 = functionNode22.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode24 = functionNode22.getTop();
        com.google.javascript.rhino.head.ast.Name name25 = null;
        functionNode22.setFunctionName(name25);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode27 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode28 = functionNode27.getTop();
        functionNode22.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode27);
        int int30 = functionNode27.getRp();
        int int31 = functionNode27.getFunctionType();
        functionNode18.addParam((com.google.javascript.rhino.head.ast.AstNode) functionNode27);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode33 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int34 = functionNode33.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode35 = functionNode33.getTop();
        com.google.javascript.rhino.head.Node node36 = functionNode33.getLastSibling();
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList37 = functionNode33.getParams();
        functionNode18.setParams(astNodeList37);
        functionNode4.setParams(astNodeList37);
        com.google.javascript.rhino.head.ast.Comment comment40 = functionNode4.getJsDocNode();
        int int41 = functionNode4.getRp();
        functionNode4.setEncodedSourceBounds(97, (-1));
        com.google.javascript.rhino.head.ast.Name name46 = null;
        com.google.javascript.rhino.head.ast.FunctionNode functionNode47 = new com.google.javascript.rhino.head.ast.FunctionNode(16, name46);
        int int48 = functionNode47.getBaseLineno();
        java.lang.Object obj50 = functionNode47.getProp(21);
        java.lang.Object obj51 = functionNode47.getCompilerData();
        functionNode47.setRequiresActivation();
        functionNode4.setParent((com.google.javascript.rhino.head.ast.AstNode) functionNode47);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode54 = functionNode47.getTop();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-1) + "'", int1 == (-1));
        org.junit.Assert.assertNotNull(scriptNode8);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNotNull(scriptNode24);
        org.junit.Assert.assertNotNull(scriptNode28);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertNotNull(scriptNode35);
        org.junit.Assert.assertNotNull(node36);
        org.junit.Assert.assertNotNull(astNodeList37);
        org.junit.Assert.assertNull(comment40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
        org.junit.Assert.assertNull(obj50);
        org.junit.Assert.assertNull(obj51);
        org.junit.Assert.assertNotNull(scriptNode54);
    }

    @Test
    public void test09818() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09818");
        com.google.javascript.rhino.head.ast.Jump jump4 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump4.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump8 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump4, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int11 = scriptNode10.getEndLineno();
        int int12 = scriptNode10.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList13 = scriptNode10.getChildScopes();
        com.google.javascript.rhino.head.Node node14 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump4, (com.google.javascript.rhino.head.Node) scriptNode10);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList15 = scriptNode10.getChildScopes();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode17 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int18 = functionNode17.getLp();
        functionNode17.setEncodedSource("");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode21 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int22 = functionNode21.getLp();
        functionNode21.setEncodedSource("");
        functionNode21.flattenSymbolTable(false);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode27 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int28 = functionNode27.getLp();
        com.google.javascript.rhino.head.Node node30 = new com.google.javascript.rhino.head.Node((-1), (com.google.javascript.rhino.head.Node) functionNode17, (com.google.javascript.rhino.head.Node) functionNode21, (com.google.javascript.rhino.head.Node) functionNode27, (int) '#');
        com.google.javascript.rhino.head.ast.Comment comment31 = functionNode27.getJsDocNode();
        int int32 = functionNode27.getFunctionCount();
        java.lang.String str33 = scriptNode10.toStringTree((com.google.javascript.rhino.head.ast.ScriptNode) functionNode27);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode34 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int35 = functionNode34.getLp();
        functionNode34.setEncodedSource("");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode38 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.Scope scope40 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 10);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode41 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode42 = functionNode41.getTop();
        functionNode41.setParens((int) (byte) 1, (int) (short) 1);
        functionNode41.setEncodedSourceStart((-1));
        functionNode41.setFunctionIsGetter();
        scope40.addChildToFront((com.google.javascript.rhino.head.Node) functionNode41);
        functionNode38.setBody((com.google.javascript.rhino.head.ast.AstNode) functionNode41);
        int int51 = functionNode34.addFunction(functionNode38);
        java.lang.Object obj52 = functionNode38.getCompilerData();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) functionNode27, (com.google.javascript.rhino.head.ast.Scope) functionNode38);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode55 = new com.google.javascript.rhino.head.ast.FunctionNode(0);
        int int56 = functionNode55.getBaseLineno();
        boolean boolean57 = functionNode55.isGetter();
        com.google.javascript.rhino.head.ast.RegExpLiteral regExpLiteral59 = new com.google.javascript.rhino.head.ast.RegExpLiteral((int) (short) 1);
        regExpLiteral59.setFlags("-1\tSCRIPT -1 1\n");
        java.lang.String str62 = regExpLiteral59.getValue();
        regExpLiteral59.setFlags("52");
        functionNode55.addChildrenToFront((com.google.javascript.rhino.head.Node) regExpLiteral59);
        boolean boolean66 = functionNode55.isGetterOrSetter();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode67 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode68 = functionNode67.getTop();
        int int69 = functionNode67.getRegexpCount();
        int int70 = functionNode67.getParamCount();
        com.google.javascript.rhino.head.ast.AstNode astNode71 = functionNode67.getBody();
        int int72 = functionNode55.addFunction(functionNode67);
        functionNode67.setEncodedSourceStart(17);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode75 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int76 = functionNode75.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode77 = functionNode75.getTop();
        com.google.javascript.rhino.head.ast.AstNode astNode78 = functionNode75.getBody();
        com.google.javascript.rhino.head.ast.Scope scope79 = functionNode75.getParentScope();
        int int80 = functionNode67.addFunction(functionNode75);
        int int81 = functionNode75.getLineno();
        functionNode75.setFunctionIsGetter();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode84 = new com.google.javascript.rhino.head.ast.ScriptNode(35);
        com.google.javascript.rhino.head.Node node86 = scriptNode84.setType(16);
        functionNode75.setTop(scriptNode84);
        int int88 = functionNode27.addFunction(functionNode75);
        boolean boolean89 = functionNode75.isGetterOrSetter();
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNull(scopeList13);
        org.junit.Assert.assertNull(scopeList15);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNull(comment31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertNotNull(scriptNode42);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertNull(obj52);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1));
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNull(str62);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(scriptNode68);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 0 + "'", int69 == 0);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 0 + "'", int70 == 0);
        org.junit.Assert.assertNull(astNode71);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 0 + "'", int72 == 0);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + (-1) + "'", int76 == (-1));
        org.junit.Assert.assertNotNull(scriptNode77);
        org.junit.Assert.assertNull(astNode78);
        org.junit.Assert.assertNull(scope79);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 0 + "'", int80 == 0);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + (-1) + "'", int81 == (-1));
        org.junit.Assert.assertNotNull(node86);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + 0 + "'", int88 == 0);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
    }

    @Test
    public void test09819() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09819");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode0 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int1 = functionNode0.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = functionNode0.getTop();
        com.google.javascript.rhino.head.ast.Name name3 = null;
        functionNode0.setFunctionName(name3);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode5 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int6 = functionNode5.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode8 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        java.lang.String str9 = functionNode5.toStringTree(scriptNode8);
        functionNode5.setFunctionIsGetter();
        int int11 = functionNode0.addFunction(functionNode5);
        boolean boolean12 = functionNode5.hasSideEffects();
        int int13 = functionNode5.getAbsolutePosition();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap14 = functionNode5.getSymbolTable();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode16 = new com.google.javascript.rhino.head.ast.FunctionNode(0);
        int int17 = functionNode16.getBaseLineno();
        boolean boolean18 = functionNode16.isGetter();
        com.google.javascript.rhino.head.ast.RegExpLiteral regExpLiteral20 = new com.google.javascript.rhino.head.ast.RegExpLiteral((int) (short) 1);
        regExpLiteral20.setFlags("-1\tSCRIPT -1 1\n");
        java.lang.String str23 = regExpLiteral20.getValue();
        regExpLiteral20.setFlags("52");
        functionNode16.addChildrenToFront((com.google.javascript.rhino.head.Node) regExpLiteral20);
        boolean boolean27 = functionNode16.isGetterOrSetter();
        int int28 = functionNode16.getRegexpCount();
        boolean boolean29 = functionNode16.isGenerator();
        functionNode5.setParent((com.google.javascript.rhino.head.ast.AstNode) functionNode16);
        functionNode16.setRequiresActivation();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-1) + "'", int1 == (-1));
        org.junit.Assert.assertNotNull(scriptNode2);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
    }

    @Test
    public void test09820() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09820");
        com.google.javascript.rhino.head.ast.RegExpLiteral regExpLiteral2 = new com.google.javascript.rhino.head.ast.RegExpLiteral(6, 26);
        regExpLiteral2.setValue("+");
        java.lang.String str5 = regExpLiteral2.getValue();
        com.google.javascript.rhino.head.ast.Comment comment6 = regExpLiteral2.getJsDocNode();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "+" + "'", str5, "+");
        org.junit.Assert.assertNull(comment6);
    }

    @Test
    public void test09821() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09821");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        com.google.javascript.rhino.head.ast.Comment comment2 = scriptNode1.getJsDocNode();
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList3 = scriptNode1.getFunctions();
        com.google.javascript.rhino.head.ast.Jump jump8 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump8.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump12 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump8, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int15 = scriptNode14.getEndLineno();
        int int16 = scriptNode14.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList17 = scriptNode14.getChildScopes();
        com.google.javascript.rhino.head.Node node18 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump8, (com.google.javascript.rhino.head.Node) scriptNode14);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList19 = scriptNode14.getFunctions();
        functionNodeList19.clear();
        functionNodeList19.clear();
        java.util.Iterator<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeItor22 = functionNodeList19.iterator();
        com.google.javascript.rhino.head.ast.RegExpLiteral regExpLiteral24 = new com.google.javascript.rhino.head.ast.RegExpLiteral((int) (short) 1);
        java.lang.String str26 = regExpLiteral24.toSource((int) (byte) 10);
        regExpLiteral24.setFlags("-1\tSCRIPT -1 1\n");
        regExpLiteral24.removeProp(8);
        java.lang.String str31 = regExpLiteral24.getValue();
        regExpLiteral24.setLineno(10);
        regExpLiteral24.removeChildren();
        boolean boolean35 = functionNodeList19.equals((java.lang.Object) regExpLiteral24);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode36 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int37 = functionNode36.getLp();
        functionNode36.setEncodedSource("");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode40 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.Scope scope42 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 10);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode43 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode44 = functionNode43.getTop();
        functionNode43.setParens((int) (byte) 1, (int) (short) 1);
        functionNode43.setEncodedSourceStart((-1));
        functionNode43.setFunctionIsGetter();
        scope42.addChildToFront((com.google.javascript.rhino.head.Node) functionNode43);
        functionNode40.setBody((com.google.javascript.rhino.head.ast.AstNode) functionNode43);
        int int53 = functionNode36.addFunction(functionNode40);
        com.google.javascript.rhino.head.ast.Symbol symbol55 = functionNode36.getSymbol("-1\tBLOCK -1 1\n");
        com.google.javascript.rhino.head.Node[] nodeArray56 = new com.google.javascript.rhino.head.Node[] { functionNode36 };
        com.google.javascript.rhino.head.Node[] nodeArray57 = functionNodeList19.toArray(nodeArray56);
        com.google.javascript.rhino.head.Node[] nodeArray58 = functionNodeList3.toArray(nodeArray56);
        java.util.Iterator<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeItor59 = functionNodeList3.iterator();
        org.junit.Assert.assertNull(comment2);
        org.junit.Assert.assertNotNull(functionNodeList3);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNull(scopeList17);
        org.junit.Assert.assertNotNull(functionNodeList19);
        org.junit.Assert.assertNotNull(functionNodeItor22);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "                    /null/" + "'", str26, "                    /null/");
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertNotNull(scriptNode44);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertNull(symbol55);
        org.junit.Assert.assertNotNull(nodeArray56);
        org.junit.Assert.assertNotNull(nodeArray57);
        org.junit.Assert.assertNotNull(nodeArray58);
        org.junit.Assert.assertNotNull(functionNodeItor59);
    }

    @Test
    public void test09822() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09822");
        com.google.javascript.rhino.head.ast.RegExpLiteral regExpLiteral2 = new com.google.javascript.rhino.head.ast.RegExpLiteral((-1), 3);
        java.lang.String str3 = regExpLiteral2.getFlags();
        regExpLiteral2.setPosition((int) (byte) 0);
        regExpLiteral2.setPosition(109);
        int int8 = regExpLiteral2.getPosition();
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 109 + "'", int8 == 109);
    }

    @Test
    public void test09823() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09823");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode1 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = functionNode1.getTop();
        com.google.javascript.rhino.head.ast.Name name3 = null;
        functionNode1.setFunctionName(name3);
        int int5 = functionNode1.getLength();
        com.google.javascript.rhino.head.ast.Scope scope8 = new com.google.javascript.rhino.head.ast.Scope((int) '4');
        functionNode1.putProp(6, (java.lang.Object) scope8);
        java.lang.String str10 = functionNode1.getName();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode13 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int14 = functionNode13.getLp();
        functionNode13.setEncodedSource("");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode17 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int18 = functionNode17.getLp();
        functionNode17.setEncodedSource("");
        functionNode17.flattenSymbolTable(false);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode23 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int24 = functionNode23.getLp();
        com.google.javascript.rhino.head.Node node26 = new com.google.javascript.rhino.head.Node((-1), (com.google.javascript.rhino.head.Node) functionNode13, (com.google.javascript.rhino.head.Node) functionNode17, (com.google.javascript.rhino.head.Node) functionNode23, (int) '#');
        com.google.javascript.rhino.head.ast.Comment comment27 = functionNode23.getJsDocNode();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode28 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.Scope scope30 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 10);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode31 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode32 = functionNode31.getTop();
        functionNode31.setParens((int) (byte) 1, (int) (short) 1);
        functionNode31.setEncodedSourceStart((-1));
        functionNode31.setFunctionIsGetter();
        scope30.addChildToFront((com.google.javascript.rhino.head.Node) functionNode31);
        functionNode28.setBody((com.google.javascript.rhino.head.ast.AstNode) functionNode31);
        boolean boolean41 = functionNode23.isParam((com.google.javascript.rhino.head.ast.AstNode) functionNode28);
        com.google.javascript.rhino.head.ast.Jump jump42 = new com.google.javascript.rhino.head.ast.Jump(8, (com.google.javascript.rhino.head.Node) functionNode23);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode44 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int45 = scriptNode44.getEndLineno();
        int int46 = scriptNode44.getBaseLineno();
        com.google.javascript.rhino.head.ast.Jump jump49 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode51 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int52 = scriptNode51.getEndLineno();
        int int53 = scriptNode51.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList54 = scriptNode51.getChildScopes();
        jump49.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode51);
        java.lang.String str56 = scriptNode51.debugPrint();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode44, (com.google.javascript.rhino.head.ast.Scope) scriptNode51);
        com.google.javascript.rhino.head.ast.AstNode astNode58 = scriptNode44.getParent();
        int int59 = scriptNode44.getType();
        com.google.javascript.rhino.head.ast.Symbol symbol61 = scriptNode44.getSymbol("109");
        java.lang.String str62 = scriptNode44.toSource();
        int int63 = scriptNode44.getEncodedSourceEnd();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode64 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode65 = functionNode64.getTop();
        functionNode64.setParens((int) (byte) 1, (int) (short) 1);
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor69 = functionNode64.iterator();
        functionNode64.setLp(136);
        int int72 = functionNode64.getFunctionType();
        scriptNode44.addChildrenToBack((com.google.javascript.rhino.head.Node) functionNode64);
        functionNode23.setParentScope((com.google.javascript.rhino.head.ast.Scope) functionNode64);
        com.google.javascript.rhino.head.Node node75 = new com.google.javascript.rhino.head.Node(327364487, (com.google.javascript.rhino.head.Node) functionNode1, (com.google.javascript.rhino.head.Node) functionNode23);
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.ast.Scope scope76 = functionNode23.getScope();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: com.google.javascript.rhino.head.ast.FunctionNode cannot be cast to com.google.javascript.rhino.head.ast.Name");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(scriptNode2);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertNull(comment27);
        org.junit.Assert.assertNotNull(scriptNode32);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
        org.junit.Assert.assertNull(scopeList54);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str56, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertNull(astNode58);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 136 + "'", int59 == 136);
        org.junit.Assert.assertNull(symbol61);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "{\n}\n" + "'", str62, "{\n}\n");
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + (-1) + "'", int63 == (-1));
        org.junit.Assert.assertNotNull(scriptNode65);
        org.junit.Assert.assertNotNull(nodeItor69);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 0 + "'", int72 == 0);
    }

    @Test
    public void test09824() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09824");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode0 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int1 = functionNode0.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode3 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        java.lang.String str4 = functionNode0.toStringTree(scriptNode3);
        functionNode0.setFunctionIsGetter();
        com.google.javascript.rhino.head.ast.AstNode astNode6 = functionNode0.getBody();
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList7 = functionNode0.getParams();
        int int8 = functionNode0.getFunctionType();
        functionNode0.setBaseLineno(350469479);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode11 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int12 = functionNode11.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode13 = functionNode11.getTop();
        com.google.javascript.rhino.head.ast.Name name14 = null;
        functionNode11.setFunctionName(name14);
        functionNode11.setIsGenerator();
        java.lang.String str17 = functionNode11.getEncodedSource();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode18 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.Scope scope20 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 10);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode21 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode22 = functionNode21.getTop();
        functionNode21.setParens((int) (byte) 1, (int) (short) 1);
        functionNode21.setEncodedSourceStart((-1));
        functionNode21.setFunctionIsGetter();
        scope20.addChildToFront((com.google.javascript.rhino.head.Node) functionNode21);
        functionNode18.setBody((com.google.javascript.rhino.head.ast.AstNode) functionNode21);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode31 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode32 = functionNode31.getTop();
        functionNode31.setParens((int) (byte) 1, (int) (short) 1);
        functionNode31.setEncodedSourceStart((-1));
        java.util.List<com.google.javascript.rhino.head.Node> nodeList38 = functionNode31.getResumptionPoints();
        int int39 = functionNode31.getLp();
        functionNode18.setBody((com.google.javascript.rhino.head.ast.AstNode) functionNode31);
        functionNode31.setLp((int) (short) 10);
        functionNode11.addChildrenToFront((com.google.javascript.rhino.head.Node) functionNode31);
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) functionNode0, (com.google.javascript.rhino.head.ast.Scope) functionNode31);
        functionNode31.setRp((-330954035));
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-1) + "'", int1 == (-1));
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(astNode6);
        org.junit.Assert.assertNotNull(astNodeList7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(scriptNode13);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(scriptNode22);
        org.junit.Assert.assertNotNull(scriptNode32);
        org.junit.Assert.assertNull(nodeList38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 1 + "'", int39 == 1);
    }

    @Test
    public void test09825() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09825");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 10);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode2 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode3 = functionNode2.getTop();
        functionNode2.setParens((int) (byte) 1, (int) (short) 1);
        functionNode2.setEncodedSourceStart((-1));
        functionNode2.setFunctionIsGetter();
        scope1.addChildToFront((com.google.javascript.rhino.head.Node) functionNode2);
        functionNode2.setRp(19);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int15 = scriptNode14.getEndLineno();
        int int16 = scriptNode14.getBaseLineno();
        com.google.javascript.rhino.head.ast.Jump jump19 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode21 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int22 = scriptNode21.getEndLineno();
        int int23 = scriptNode21.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList24 = scriptNode21.getChildScopes();
        jump19.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode21);
        java.lang.String str26 = scriptNode21.debugPrint();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode14, (com.google.javascript.rhino.head.ast.Scope) scriptNode21);
        com.google.javascript.rhino.head.ast.Scope scope28 = new com.google.javascript.rhino.head.ast.Scope();
        scriptNode21.target = scope28;
        java.lang.String str30 = functionNode2.toStringTree(scriptNode21);
        java.lang.String str32 = scriptNode21.toSource((int) (short) 10);
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap33 = scriptNode21.getSymbolTable();
        int int34 = strMap33.size();
        com.google.javascript.rhino.head.ast.Jump jump39 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump39.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump43 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump39, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode45 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int46 = scriptNode45.getEndLineno();
        int int47 = scriptNode45.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList48 = scriptNode45.getChildScopes();
        com.google.javascript.rhino.head.Node node49 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump39, (com.google.javascript.rhino.head.Node) scriptNode45);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList50 = scriptNode45.getFunctions();
        functionNodeList50.clear();
        functionNodeList50.clear();
        com.google.javascript.rhino.head.ast.Jump jump57 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump57.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump61 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump57, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode63 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int64 = scriptNode63.getEndLineno();
        int int65 = scriptNode63.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList66 = scriptNode63.getChildScopes();
        com.google.javascript.rhino.head.Node node67 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump57, (com.google.javascript.rhino.head.Node) scriptNode63);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList68 = scriptNode63.getFunctions();
        java.util.Spliterator<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeSpliterator69 = functionNodeList68.spliterator();
        int int71 = functionNodeList68.indexOf((java.lang.Object) (byte) 10);
        boolean boolean72 = functionNodeList50.retainAll((java.util.Collection<com.google.javascript.rhino.head.ast.FunctionNode>) functionNodeList68);
        boolean boolean73 = strMap33.containsKey((java.lang.Object) functionNodeList50);
        java.util.Collection<com.google.javascript.rhino.head.ast.Symbol> symbolCollection74 = strMap33.values();
        com.google.javascript.rhino.head.Node node76 = com.google.javascript.rhino.head.Node.newNumber((double) '#');
        com.google.javascript.rhino.head.ast.Symbol symbol77 = strMap33.get((java.lang.Object) '#');
        int int78 = strMap33.size();
        boolean boolean79 = strMap33.isEmpty();
        com.google.javascript.rhino.head.ast.Symbol symbol81 = new com.google.javascript.rhino.head.ast.Symbol();
        symbol81.setIndex(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode85 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int86 = scriptNode85.getEndLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode88 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int89 = scriptNode88.getEndLineno();
        scriptNode85.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode88);
        com.google.javascript.rhino.head.ast.Comment comment91 = null;
        scriptNode85.setJsDocNode(comment91);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList93 = scriptNode85.getSymbols();
        symbol81.setContainingTable((com.google.javascript.rhino.head.ast.Scope) scriptNode85);
        com.google.javascript.rhino.head.ast.Scope scope95 = symbol81.getContainingTable();
        com.google.javascript.rhino.head.ast.Symbol symbol96 = strMap33.replace("    109", symbol81);
        java.util.Collection<com.google.javascript.rhino.head.ast.Symbol> symbolCollection97 = strMap33.values();
        java.util.Collection<com.google.javascript.rhino.head.ast.Symbol> symbolCollection98 = strMap33.values();
        org.junit.Assert.assertNotNull(scriptNode3);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNull(scopeList24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str26, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "                    {\n                    }\n" + "'", str32, "                    {\n                    }\n");
        org.junit.Assert.assertNotNull(strMap33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertNull(scopeList48);
        org.junit.Assert.assertNotNull(functionNodeList50);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + (-1) + "'", int64 == (-1));
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + (-1) + "'", int65 == (-1));
        org.junit.Assert.assertNull(scopeList66);
        org.junit.Assert.assertNotNull(functionNodeList68);
        org.junit.Assert.assertNotNull(functionNodeSpliterator69);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + (-1) + "'", int71 == (-1));
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(symbolCollection74);
        org.junit.Assert.assertNotNull(node76);
        org.junit.Assert.assertNull(symbol77);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 0 + "'", int78 == 0);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + (-1) + "'", int86 == (-1));
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + (-1) + "'", int89 == (-1));
        org.junit.Assert.assertNotNull(symbolList93);
        org.junit.Assert.assertNotNull(scope95);
        org.junit.Assert.assertNull(symbol96);
        org.junit.Assert.assertNotNull(symbolCollection97);
        org.junit.Assert.assertNotNull(symbolCollection98);
    }

    @Test
    public void test09826() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09826");
        com.google.javascript.rhino.head.ast.Jump jump2 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode4 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int5 = scriptNode4.getEndLineno();
        int int6 = scriptNode4.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList7 = scriptNode4.getChildScopes();
        jump2.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode4);
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor9 = scriptNode4.iterator();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode11 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int12 = functionNode11.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode13 = functionNode11.getTop();
        com.google.javascript.rhino.head.ast.Name name14 = null;
        functionNode11.setFunctionName(name14);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode16 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode17 = functionNode16.getTop();
        functionNode11.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode16);
        functionNode16.setIsExpressionClosure(true);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode22 = new com.google.javascript.rhino.head.ast.FunctionNode((int) (byte) 100);
        int int23 = functionNode16.addFunction(functionNode22);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode25 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode26 = functionNode25.getTop();
        java.lang.String str27 = scriptNode26.getJsDoc();
        com.google.javascript.rhino.head.Node node29 = scriptNode26.setType(0);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode30 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int31 = functionNode30.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode33 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        java.lang.String str34 = functionNode30.toStringTree(scriptNode33);
        com.google.javascript.rhino.head.ast.Scope scope36 = scriptNode33.getDefiningScope("");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode38 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int39 = scriptNode38.getEndLineno();
        int int40 = scriptNode38.getBaseLineno();
        com.google.javascript.rhino.head.Node node41 = new com.google.javascript.rhino.head.Node(25, node29, (com.google.javascript.rhino.head.Node) scriptNode33, (com.google.javascript.rhino.head.Node) scriptNode38);
        int int42 = functionNode22.compareTo((com.google.javascript.rhino.head.ast.AstNode) scriptNode33);
        com.google.javascript.rhino.head.ast.RegExpLiteral regExpLiteral44 = new com.google.javascript.rhino.head.ast.RegExpLiteral((int) (short) 1);
        regExpLiteral44.setFlags("-1\tSCRIPT -1 1\n");
        regExpLiteral44.setValue("hi!");
        com.google.javascript.rhino.head.ast.Jump jump52 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump52.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump56 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump52, 0);
        java.lang.String str57 = jump52.toString();
        com.google.javascript.rhino.head.Node node58 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) scriptNode33, (com.google.javascript.rhino.head.Node) regExpLiteral44, (com.google.javascript.rhino.head.Node) jump52);
        scriptNode4.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode33);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode60 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int61 = functionNode60.getLp();
        functionNode60.setEncodedSource("");
        functionNode60.flattenSymbolTable(false);
        boolean boolean66 = functionNode60.requiresActivation();
        java.lang.String str67 = functionNode60.getEncodedSource();
        com.google.javascript.rhino.head.Node node69 = functionNode60.setType(19);
        functionNode60.setRp(0);
        scriptNode4.addChildScope((com.google.javascript.rhino.head.ast.Scope) functionNode60);
        functionNode60.setSourceName("/null/  ");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNull(scopeList7);
        org.junit.Assert.assertNotNull(nodeItor9);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(scriptNode13);
        org.junit.Assert.assertNotNull(scriptNode17);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(scriptNode26);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(node29);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNull(scope36);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 1 + "'", int42 == 1);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "52" + "'", str57, "52");
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + (-1) + "'", int61 == (-1));
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "" + "'", str67, "");
        org.junit.Assert.assertNotNull(node69);
    }

    @Test
    public void test09827() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09827");
        com.google.javascript.rhino.head.ast.Jump jump5 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump5.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump9 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump5, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int12 = scriptNode11.getEndLineno();
        int int13 = scriptNode11.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList14 = scriptNode11.getChildScopes();
        com.google.javascript.rhino.head.Node node15 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump5, (com.google.javascript.rhino.head.Node) scriptNode11);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList16 = scriptNode11.getFunctions();
        functionNodeList16.clear();
        com.google.javascript.rhino.head.ast.Jump jump22 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump22.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump26 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump22, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode28 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int29 = scriptNode28.getEndLineno();
        int int30 = scriptNode28.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList31 = scriptNode28.getChildScopes();
        com.google.javascript.rhino.head.Node node32 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump22, (com.google.javascript.rhino.head.Node) scriptNode28);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList33 = scriptNode28.getFunctions();
        functionNodeList33.clear();
        boolean boolean35 = functionNodeList16.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.FunctionNode>) functionNodeList33);
        functionNodeList16.clear();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode37 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode38 = functionNode37.getTop();
        functionNode37.setParens((int) (byte) 1, (int) (short) 1);
        functionNode37.setEncodedSourceStart((-1));
        java.util.List<com.google.javascript.rhino.head.Node> nodeList44 = functionNode37.getResumptionPoints();
        com.google.javascript.rhino.head.ast.Scope scope46 = functionNode37.getDefiningScope("hi!");
        boolean boolean47 = functionNode37.isGetterOrSetter();
        int int48 = functionNodeList16.lastIndexOf((java.lang.Object) functionNode37);
        int int49 = functionNode37.getParamCount();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode51 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int52 = functionNode51.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode54 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        java.lang.String str55 = functionNode51.toStringTree(scriptNode54);
        com.google.javascript.rhino.head.ast.Scope scope57 = scriptNode54.getDefiningScope("");
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList58 = scriptNode54.getSymbols();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode60 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int61 = scriptNode60.getEndLineno();
        int int62 = scriptNode60.getBaseLineno();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode54, (com.google.javascript.rhino.head.ast.Scope) scriptNode60);
        java.lang.String str64 = scriptNode60.getEncodedSource();
        java.lang.String str65 = scriptNode60.getJsDoc();
        com.google.javascript.rhino.head.Node node66 = new com.google.javascript.rhino.head.Node(101, (com.google.javascript.rhino.head.Node) scriptNode60);
        boolean boolean67 = functionNode37.isParam((com.google.javascript.rhino.head.ast.AstNode) scriptNode60);
        com.google.javascript.rhino.head.ast.Jump jump69 = new com.google.javascript.rhino.head.ast.Jump(423262234, (com.google.javascript.rhino.head.Node) scriptNode60, (-148907469));
        com.google.javascript.rhino.head.Node node70 = jump69.getLastChild();
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNull(scopeList14);
        org.junit.Assert.assertNotNull(functionNodeList16);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertNull(scopeList31);
        org.junit.Assert.assertNotNull(functionNodeList33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(scriptNode38);
        org.junit.Assert.assertNull(nodeList44);
        org.junit.Assert.assertNull(scope46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertNull(scope57);
        org.junit.Assert.assertNotNull(symbolList58);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + (-1) + "'", int61 == (-1));
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + (-1) + "'", int62 == (-1));
        org.junit.Assert.assertNull(str64);
        org.junit.Assert.assertNull(str65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(node70);
    }

    @Test
    public void test09828() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09828");
        com.google.javascript.rhino.head.ast.RegExpLiteral regExpLiteral1 = new com.google.javascript.rhino.head.ast.RegExpLiteral((int) (short) 1);
        java.lang.String str3 = regExpLiteral1.toSource((int) (byte) 10);
        regExpLiteral1.setFlags("-1\tSCRIPT -1 1\n");
        regExpLiteral1.removeProp(8);
        java.lang.String str8 = regExpLiteral1.getValue();
        regExpLiteral1.setLineno(10);
        java.lang.String str12 = regExpLiteral1.toSource(4);
        com.google.javascript.rhino.head.ast.Scope scope13 = new com.google.javascript.rhino.head.ast.Scope();
        scope13.setBounds(0, 10);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode17 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode18 = functionNode17.getTop();
        int int19 = functionNode17.getRegexpCount();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode20 = functionNode17.getEnclosingFunction();
        java.lang.String str21 = scope13.toStringTree((com.google.javascript.rhino.head.ast.ScriptNode) functionNode17);
        java.lang.String str22 = functionNode17.shortName();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap23 = functionNode17.getSymbolTable();
        regExpLiteral1.addChildrenToBack((com.google.javascript.rhino.head.Node) functionNode17);
        regExpLiteral1.setFlags("20\tCOMMENT 20 1\n");
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.ast.Scope scope27 = regExpLiteral1.getScope();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: com.google.javascript.rhino.head.ast.RegExpLiteral cannot be cast to com.google.javascript.rhino.head.ast.Name");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "                    /null/" + "'", str3, "                    /null/");
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "        /null/-1\tSCRIPT -1 1\n" + "'", str12, "        /null/-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertNotNull(scriptNode18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNull(functionNode20);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "FunctionNode" + "'", str22, "FunctionNode");
        org.junit.Assert.assertNull(strMap23);
    }

    @Test
    public void test09829() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09829");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode0 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = functionNode0.getTop();
        functionNode0.setParens((int) (byte) 1, (int) (short) 1);
        functionNode0.setEncodedSourceStart((-1));
        java.util.List<com.google.javascript.rhino.head.Node> nodeList7 = functionNode0.getResumptionPoints();
        com.google.javascript.rhino.head.ast.Scope scope9 = functionNode0.getDefiningScope("hi!");
        boolean boolean10 = functionNode0.isGetterOrSetter();
        com.google.javascript.rhino.head.ast.Scope scope12 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 10);
        int[] intArray19 = new int[] { 25, 17, (short) 0, 20, 19, (byte) 1 };
        functionNode0.addLiveLocals((com.google.javascript.rhino.head.Node) scope12, intArray19);
        com.google.javascript.rhino.head.Node node22 = functionNode0.setType(100);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList23 = functionNode0.getFunctions();
        com.google.javascript.rhino.head.ast.Jump jump28 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump28.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump32 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump28, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode34 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int35 = scriptNode34.getEndLineno();
        int int36 = scriptNode34.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList37 = scriptNode34.getChildScopes();
        com.google.javascript.rhino.head.Node node38 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump28, (com.google.javascript.rhino.head.Node) scriptNode34);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList39 = scriptNode34.getFunctions();
        boolean[] booleanArray42 = new boolean[] { false, false };
        boolean[] booleanArray45 = new boolean[] { false, false };
        boolean[] booleanArray48 = new boolean[] { false, false };
        boolean[] booleanArray51 = new boolean[] { false, false };
        boolean[][] booleanArray52 = new boolean[][] { booleanArray42, booleanArray45, booleanArray48, booleanArray51 };
        boolean[][] booleanArray53 = functionNodeList39.toArray(booleanArray52);
        boolean boolean54 = functionNodeList23.retainAll((java.util.Collection<com.google.javascript.rhino.head.ast.FunctionNode>) functionNodeList39);
        java.util.stream.Stream<com.google.javascript.rhino.head.ast.FunctionNode>[] functionNodeStreamArray55 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.stream.Stream<com.google.javascript.rhino.head.ast.FunctionNode>[] functionNodeStreamArray56 = functionNodeList39.toArray(functionNodeStreamArray55);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(scriptNode1);
        org.junit.Assert.assertNull(nodeList7);
        org.junit.Assert.assertNull(scope9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[25, 17, 0, 20, 19, 1]");
        org.junit.Assert.assertNotNull(node22);
        org.junit.Assert.assertNotNull(functionNodeList23);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNull(scopeList37);
        org.junit.Assert.assertNotNull(functionNodeList39);
        org.junit.Assert.assertNotNull(booleanArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray42), "[false, false]");
        org.junit.Assert.assertNotNull(booleanArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray45), "[false, false]");
        org.junit.Assert.assertNotNull(booleanArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray48), "[false, false]");
        org.junit.Assert.assertNotNull(booleanArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray51), "[false, false]");
        org.junit.Assert.assertNotNull(booleanArray52);
        org.junit.Assert.assertNotNull(booleanArray53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
    }

    @Test
    public void test09830() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09830");
        com.google.javascript.rhino.head.ast.Name name1 = null;
        com.google.javascript.rhino.head.ast.FunctionNode functionNode2 = new com.google.javascript.rhino.head.ast.FunctionNode(1, name1);
        boolean boolean3 = functionNode2.isGetterOrSetter();
        functionNode2.setBounds(136, 14);
        functionNode2.clearParentScope();
        java.lang.String str9 = functionNode2.makeIndent(109);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "                                                                                                                                                                                                                          " + "'", str9, "                                                                                                                                                                                                                          ");
    }

    @Test
    public void test09831() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09831");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode0 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int1 = functionNode0.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = functionNode0.getTop();
        com.google.javascript.rhino.head.ast.Name name3 = null;
        functionNode0.setFunctionName(name3);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode5 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = functionNode5.getTop();
        functionNode0.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode5);
        functionNode5.setIsExpressionClosure(true);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode11 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int12 = functionNode11.getLp();
        functionNode11.setEncodedSource("");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode15 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int16 = functionNode15.getLp();
        functionNode15.setEncodedSource("");
        functionNode15.flattenSymbolTable(false);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode21 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int22 = functionNode21.getLp();
        com.google.javascript.rhino.head.Node node24 = new com.google.javascript.rhino.head.Node((-1), (com.google.javascript.rhino.head.Node) functionNode11, (com.google.javascript.rhino.head.Node) functionNode15, (com.google.javascript.rhino.head.Node) functionNode21, (int) '#');
        com.google.javascript.rhino.head.ast.Comment comment25 = functionNode21.getJsDocNode();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode26 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.Scope scope28 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 10);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode29 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode30 = functionNode29.getTop();
        functionNode29.setParens((int) (byte) 1, (int) (short) 1);
        functionNode29.setEncodedSourceStart((-1));
        functionNode29.setFunctionIsGetter();
        scope28.addChildToFront((com.google.javascript.rhino.head.Node) functionNode29);
        functionNode26.setBody((com.google.javascript.rhino.head.ast.AstNode) functionNode29);
        boolean boolean39 = functionNode21.isParam((com.google.javascript.rhino.head.ast.AstNode) functionNode26);
        functionNode21.setFunctionType(13);
        functionNode21.setRp(19);
        boolean boolean44 = functionNode21.isGenerator();
        java.util.List<com.google.javascript.rhino.head.Node> nodeList45 = functionNode21.getResumptionPoints();
        com.google.javascript.rhino.head.ast.Symbol symbol47 = functionNode21.getSymbol("            {\n            }\n");
        functionNode5.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode21);
        boolean boolean49 = functionNode5.hasChildren();
        boolean boolean50 = functionNode5.requiresActivation();
        boolean boolean51 = functionNode5.hasChildren();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-1) + "'", int1 == (-1));
        org.junit.Assert.assertNotNull(scriptNode2);
        org.junit.Assert.assertNotNull(scriptNode6);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNull(comment25);
        org.junit.Assert.assertNotNull(scriptNode30);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNull(nodeList45);
        org.junit.Assert.assertNull(symbol47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
    }

    @Test
    public void test09832() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09832");
        com.google.javascript.rhino.head.Node node1 = com.google.javascript.rhino.head.Node.newString("                                                    /null/");
        java.lang.Object obj3 = node1.getProp((-1288016238));
        org.junit.Assert.assertNotNull(node1);
        org.junit.Assert.assertNull(obj3);
    }

    @Test
    public void test09833() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09833");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode0 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = functionNode0.getTop();
        functionNode0.setParens((int) (byte) 1, (int) (short) 1);
        functionNode0.setEncodedSourceStart((-1));
        java.util.List<com.google.javascript.rhino.head.Node> nodeList7 = functionNode0.getResumptionPoints();
        com.google.javascript.rhino.head.ast.Scope scope9 = functionNode0.getDefiningScope("hi!");
        boolean boolean10 = functionNode0.isGetterOrSetter();
        com.google.javascript.rhino.head.ast.Scope scope12 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 10);
        int[] intArray19 = new int[] { 25, 17, (short) 0, 20, 19, (byte) 1 };
        functionNode0.addLiveLocals((com.google.javascript.rhino.head.Node) scope12, intArray19);
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList21 = functionNode0.getParams();
        org.junit.Assert.assertNotNull(scriptNode1);
        org.junit.Assert.assertNull(nodeList7);
        org.junit.Assert.assertNull(scope9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[25, 17, 0, 20, 19, 1]");
        org.junit.Assert.assertNotNull(astNodeList21);
    }

    @Test
    public void test09834() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09834");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode0 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int1 = functionNode0.getLp();
        functionNode0.setEncodedSource("");
        functionNode0.flattenSymbolTable(false);
        java.lang.String str6 = functionNode0.getName();
        functionNode0.setFunctionIsGetter();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode8 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int9 = functionNode8.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = functionNode8.getTop();
        com.google.javascript.rhino.head.Node node11 = functionNode8.getLastSibling();
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList12 = functionNode8.getParams();
        functionNode0.setParams(astNodeList12);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode14 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int15 = functionNode14.getLp();
        functionNode14.setLp((int) (short) 1);
        int int20 = functionNode14.getIntProp(4, 26);
        functionNode14.flattenSymbolTable(true);
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList23 = functionNode14.getParams();
        functionNode0.setParams(astNodeList23);
        functionNode0.setEndLineno(12);
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor27 = functionNode0.iterator();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode28 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int29 = functionNode28.getLp();
        functionNode28.setEncodedSource("");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode32 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.Scope scope34 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 10);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode35 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode36 = functionNode35.getTop();
        functionNode35.setParens((int) (byte) 1, (int) (short) 1);
        functionNode35.setEncodedSourceStart((-1));
        functionNode35.setFunctionIsGetter();
        scope34.addChildToFront((com.google.javascript.rhino.head.Node) functionNode35);
        functionNode32.setBody((com.google.javascript.rhino.head.ast.AstNode) functionNode35);
        int int45 = functionNode28.addFunction(functionNode32);
        com.google.javascript.rhino.head.ast.Symbol symbol47 = functionNode28.getSymbol("-1\tBLOCK -1 1\n");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode49 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int50 = scriptNode49.getEndLineno();
        com.google.javascript.rhino.head.ast.Symbol symbol52 = scriptNode49.getSymbol("hi!");
        scriptNode49.putIntProp(3, 0);
        functionNode28.setParent((com.google.javascript.rhino.head.ast.AstNode) scriptNode49);
        functionNode0.setBody((com.google.javascript.rhino.head.ast.AstNode) scriptNode49);
        java.lang.String[] strArray58 = functionNode0.getParamAndVarNames();
        functionNode0.setRp((int) (short) 1);
        int int61 = functionNode0.getType();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-1) + "'", int1 == (-1));
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(scriptNode10);
        org.junit.Assert.assertNotNull(node11);
        org.junit.Assert.assertNotNull(astNodeList12);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 26 + "'", int20 == 26);
        org.junit.Assert.assertNotNull(astNodeList23);
        org.junit.Assert.assertNotNull(nodeItor27);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertNotNull(scriptNode36);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertNull(symbol47);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertNull(symbol52);
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 109 + "'", int61 == 109);
    }

    @Test
    public void test09835() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09835");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 10);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode2 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode3 = functionNode2.getTop();
        functionNode2.setParens((int) (byte) 1, (int) (short) 1);
        functionNode2.setEncodedSourceStart((-1));
        functionNode2.setFunctionIsGetter();
        scope1.addChildToFront((com.google.javascript.rhino.head.Node) functionNode2);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode11 = functionNode2.getEnclosingFunction();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode12 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode13 = functionNode12.getTop();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode15 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int16 = functionNode15.getLp();
        functionNode15.setEncodedSource("");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode19 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int20 = functionNode19.getLp();
        functionNode19.setEncodedSource("");
        functionNode19.flattenSymbolTable(false);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode25 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int26 = functionNode25.getLp();
        com.google.javascript.rhino.head.Node node28 = new com.google.javascript.rhino.head.Node((-1), (com.google.javascript.rhino.head.Node) functionNode15, (com.google.javascript.rhino.head.Node) functionNode19, (com.google.javascript.rhino.head.Node) functionNode25, (int) '#');
        com.google.javascript.rhino.head.ast.AstNode astNode29 = functionNode15.getBody();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode30 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int31 = functionNode30.getLp();
        functionNode30.setEncodedSource("");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode34 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int35 = functionNode34.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode36 = functionNode34.getTop();
        com.google.javascript.rhino.head.ast.Name name37 = null;
        functionNode34.setFunctionName(name37);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode39 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode40 = functionNode39.getTop();
        functionNode34.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode39);
        int int42 = functionNode39.getRp();
        int int43 = functionNode39.getFunctionType();
        functionNode30.addParam((com.google.javascript.rhino.head.ast.AstNode) functionNode39);
        com.google.javascript.rhino.head.ast.Scope scope45 = functionNode39.getEnclosingScope();
        functionNode15.setBody((com.google.javascript.rhino.head.ast.AstNode) functionNode39);
        int int47 = functionNode12.addFunction(functionNode15);
        java.util.List<com.google.javascript.rhino.head.Node> nodeList48 = functionNode12.getResumptionPoints();
        boolean boolean49 = functionNode12.hasSideEffects();
        functionNode2.addResumptionPoint((com.google.javascript.rhino.head.Node) functionNode12);
        functionNode12.setEncodedSource("109");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode54 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode55 = functionNode54.getTop();
        java.lang.String str56 = scriptNode55.getJsDoc();
        com.google.javascript.rhino.head.Node node58 = scriptNode55.setType(0);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode59 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int60 = functionNode59.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode62 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        java.lang.String str63 = functionNode59.toStringTree(scriptNode62);
        com.google.javascript.rhino.head.ast.Scope scope65 = scriptNode62.getDefiningScope("");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode67 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int68 = scriptNode67.getEndLineno();
        int int69 = scriptNode67.getBaseLineno();
        com.google.javascript.rhino.head.Node node70 = new com.google.javascript.rhino.head.Node(25, node58, (com.google.javascript.rhino.head.Node) scriptNode62, (com.google.javascript.rhino.head.Node) scriptNode67);
        boolean boolean71 = scriptNode67.hasConsistentReturnUsage();
        java.lang.String str72 = scriptNode67.getNextTempName();
        java.lang.String str73 = scriptNode67.shortName();
        functionNode12.replaceWith((com.google.javascript.rhino.head.ast.Scope) scriptNode67);
        functionNode12.setIsExpressionClosure(false);
        com.google.javascript.rhino.head.ast.Symbol symbol78 = functionNode12.getSymbol("                    109");
        com.google.javascript.rhino.head.ast.AstNode astNode79 = functionNode12.getParent();
        org.junit.Assert.assertNotNull(scriptNode3);
        org.junit.Assert.assertNull(functionNode11);
        org.junit.Assert.assertNotNull(scriptNode13);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNull(astNode29);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertNotNull(scriptNode36);
        org.junit.Assert.assertNotNull(scriptNode40);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertNotNull(scope45);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertNull(nodeList48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(scriptNode55);
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertNotNull(node58);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-1) + "'", int60 == (-1));
        org.junit.Assert.assertNull(str63);
        org.junit.Assert.assertNull(scope65);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + (-1) + "'", int68 == (-1));
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + (-1) + "'", int69 == (-1));
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "$0" + "'", str72, "$0");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "ScriptNode" + "'", str73, "ScriptNode");
        org.junit.Assert.assertNull(symbol78);
        org.junit.Assert.assertNull(astNode79);
    }

    @Test
    public void test09836() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09836");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode0 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = functionNode0.getTop();
        functionNode0.setParens((int) (byte) 1, (int) (short) 1);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode5 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.Scope scope7 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 10);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode8 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode9 = functionNode8.getTop();
        functionNode8.setParens((int) (byte) 1, (int) (short) 1);
        functionNode8.setEncodedSourceStart((-1));
        functionNode8.setFunctionIsGetter();
        scope7.addChildToFront((com.google.javascript.rhino.head.Node) functionNode8);
        functionNode5.setBody((com.google.javascript.rhino.head.ast.AstNode) functionNode8);
        functionNode5.setFunctionIsSetter();
        int int19 = functionNode0.addFunction(functionNode5);
        java.lang.String str20 = functionNode0.getNextTempName();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode22 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int23 = scriptNode22.getEndLineno();
        int int24 = scriptNode22.getBaseLineno();
        scriptNode22.removeProp(0);
        scriptNode22.setEncodedSourceEnd(19);
        functionNode0.addParam((com.google.javascript.rhino.head.ast.AstNode) scriptNode22);
        int int30 = functionNode0.getFunctionCount();
        com.google.javascript.rhino.head.ast.Scope scope32 = functionNode0.getDefiningScope("                            {\n                            }\n");
        functionNode0.flattenSymbolTable(true);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode35 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int36 = functionNode35.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode37 = functionNode35.getTop();
        com.google.javascript.rhino.head.ast.AstNode astNode38 = functionNode35.getBody();
        com.google.javascript.rhino.head.ast.Jump jump44 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump44.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump48 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump44, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode50 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int51 = scriptNode50.getEndLineno();
        int int52 = scriptNode50.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList53 = scriptNode50.getChildScopes();
        com.google.javascript.rhino.head.Node node54 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump44, (com.google.javascript.rhino.head.Node) scriptNode50);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList55 = scriptNode50.getChildScopes();
        com.google.javascript.rhino.head.ast.Jump jump56 = new com.google.javascript.rhino.head.ast.Jump(11, (com.google.javascript.rhino.head.Node) scriptNode50);
        functionNode35.setParent((com.google.javascript.rhino.head.ast.AstNode) scriptNode50);
        com.google.javascript.rhino.head.ast.AstNode astNode58 = functionNode35.getMemberExprNode();
        com.google.javascript.rhino.head.Node node59 = functionNode35.target;
        int int60 = functionNode0.addFunction(functionNode35);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode61 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode62 = functionNode61.getTop();
        functionNode61.setParens((int) (byte) 1, (int) (short) 1);
        functionNode61.setEncodedSourceStart((-1));
        java.util.List<com.google.javascript.rhino.head.Node> nodeList68 = functionNode61.getResumptionPoints();
        com.google.javascript.rhino.head.ast.Scope scope70 = functionNode61.getDefiningScope("hi!");
        boolean boolean71 = functionNode61.isGetterOrSetter();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode73 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int74 = scriptNode73.getEndLineno();
        com.google.javascript.rhino.head.ast.Symbol symbol76 = scriptNode73.getSymbol("hi!");
        scriptNode73.putIntProp(3, 0);
        functionNode61.addResumptionPoint((com.google.javascript.rhino.head.Node) scriptNode73);
        functionNode61.setIsGenerator();
        boolean boolean82 = functionNode61.isGetterOrSetter();
        boolean boolean83 = functionNode61.requiresActivation();
        functionNode0.setTop((com.google.javascript.rhino.head.ast.ScriptNode) functionNode61);
        org.junit.Assert.assertNotNull(scriptNode1);
        org.junit.Assert.assertNotNull(scriptNode9);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "$0" + "'", str20, "$0");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 1 + "'", int30 == 1);
        org.junit.Assert.assertNull(scope32);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNotNull(scriptNode37);
        org.junit.Assert.assertNull(astNode38);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1));
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertNull(scopeList53);
        org.junit.Assert.assertNull(scopeList55);
        org.junit.Assert.assertNull(astNode58);
        org.junit.Assert.assertNull(node59);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 1 + "'", int60 == 1);
        org.junit.Assert.assertNotNull(scriptNode62);
        org.junit.Assert.assertNull(nodeList68);
        org.junit.Assert.assertNull(scope70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + (-1) + "'", int74 == (-1));
        org.junit.Assert.assertNull(symbol76);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
    }

    @Test
    public void test09837() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09837");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode0 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int1 = functionNode0.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = functionNode0.getTop();
        boolean boolean3 = functionNode0.hasSideEffects();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList4 = functionNode0.getSymbols();
        functionNode0.setRp(5);
        com.google.javascript.rhino.head.ast.Scope scope7 = functionNode0.getEnclosingScope();
        int int8 = functionNode0.getRp();
        java.util.List<com.google.javascript.rhino.head.Node> nodeList9 = functionNode0.getResumptionPoints();
        boolean boolean10 = functionNode0.requiresActivation();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode12 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int13 = functionNode12.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = functionNode12.getTop();
        com.google.javascript.rhino.head.ast.Name name15 = null;
        functionNode12.setFunctionName(name15);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode17 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode18 = functionNode17.getTop();
        functionNode12.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode17);
        com.google.javascript.rhino.head.ast.Scope scope22 = new com.google.javascript.rhino.head.ast.Scope((int) (short) -1, 0);
        functionNode12.replaceWith(scope22);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode24 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int25 = functionNode24.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode26 = functionNode24.getTop();
        com.google.javascript.rhino.head.ast.Name name27 = null;
        functionNode24.setFunctionName(name27);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode29 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode30 = functionNode29.getTop();
        functionNode24.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode29);
        int int32 = functionNode12.addFunction(functionNode24);
        int int33 = functionNode24.getLineno();
        com.google.javascript.rhino.head.Node node35 = new com.google.javascript.rhino.head.Node((int) (short) -1, (com.google.javascript.rhino.head.Node) functionNode24, (int) (short) -1);
        functionNode0.addResumptionPoint((com.google.javascript.rhino.head.Node) functionNode24);
        int int37 = functionNode24.getType();
        com.google.javascript.rhino.head.ast.AstNode astNode38 = functionNode24.getBody();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-1) + "'", int1 == (-1));
        org.junit.Assert.assertNotNull(scriptNode2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(symbolList4);
        org.junit.Assert.assertNull(scope7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 5 + "'", int8 == 5);
        org.junit.Assert.assertNull(nodeList9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(scriptNode14);
        org.junit.Assert.assertNotNull(scriptNode18);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNotNull(scriptNode26);
        org.junit.Assert.assertNotNull(scriptNode30);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 109 + "'", int37 == 109);
        org.junit.Assert.assertNull(astNode38);
    }

    @Test
    public void test09838() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09838");
        com.google.javascript.rhino.head.ast.Symbol symbol0 = new com.google.javascript.rhino.head.ast.Symbol();
        com.google.javascript.rhino.head.Node node1 = symbol0.getNode();
        symbol0.setIndex(9);
        org.junit.Assert.assertNull(node1);
    }

    @Test
    public void test09839() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09839");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode1 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int2 = functionNode1.getLp();
        functionNode1.setEncodedSource("");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode5 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int6 = functionNode5.getLp();
        functionNode5.setEncodedSource("");
        functionNode5.flattenSymbolTable(false);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode11 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int12 = functionNode11.getLp();
        com.google.javascript.rhino.head.Node node14 = new com.google.javascript.rhino.head.Node((-1), (com.google.javascript.rhino.head.Node) functionNode1, (com.google.javascript.rhino.head.Node) functionNode5, (com.google.javascript.rhino.head.Node) functionNode11, (int) '#');
        boolean boolean15 = functionNode11.isGenerator();
        int int16 = functionNode11.getFunctionType();
        com.google.javascript.rhino.head.Node node17 = functionNode11.getNext();
        functionNode11.setFunctionIsSetter();
        boolean boolean19 = functionNode11.hasSideEffects();
        com.google.javascript.rhino.head.ast.Name name20 = null;
        functionNode11.setFunctionName(name20);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNull(node17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
    }

    @Test
    public void test09840() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09840");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode0 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int1 = functionNode0.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = functionNode0.getTop();
        com.google.javascript.rhino.head.ast.Name name3 = null;
        functionNode0.setFunctionName(name3);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode5 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = functionNode5.getTop();
        functionNode0.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode5);
        int int8 = functionNode5.getRp();
        int int9 = functionNode5.getFunctionType();
        com.google.javascript.rhino.head.ast.RegExpLiteral regExpLiteral13 = new com.google.javascript.rhino.head.ast.RegExpLiteral((int) '4', (int) (short) -1);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode14 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int15 = functionNode14.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode16 = functionNode14.getTop();
        boolean boolean17 = functionNode14.hasSideEffects();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode18 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int19 = functionNode18.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode20 = functionNode18.getTop();
        com.google.javascript.rhino.head.ast.Name name21 = null;
        functionNode18.setFunctionName(name21);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode23 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.Scope scope25 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 10);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode26 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode27 = functionNode26.getTop();
        functionNode26.setParens((int) (byte) 1, (int) (short) 1);
        functionNode26.setEncodedSourceStart((-1));
        functionNode26.setFunctionIsGetter();
        scope25.addChildToFront((com.google.javascript.rhino.head.Node) functionNode26);
        functionNode23.setBody((com.google.javascript.rhino.head.ast.AstNode) functionNode26);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode36 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode37 = functionNode36.getTop();
        functionNode36.setParens((int) (byte) 1, (int) (short) 1);
        functionNode36.setEncodedSourceStart((-1));
        java.util.List<com.google.javascript.rhino.head.Node> nodeList43 = functionNode36.getResumptionPoints();
        int int44 = functionNode36.getLp();
        functionNode23.setBody((com.google.javascript.rhino.head.ast.AstNode) functionNode36);
        functionNode18.addParam((com.google.javascript.rhino.head.ast.AstNode) functionNode36);
        com.google.javascript.rhino.head.Node node47 = new com.google.javascript.rhino.head.Node(10, (com.google.javascript.rhino.head.Node) regExpLiteral13, (com.google.javascript.rhino.head.Node) functionNode14, (com.google.javascript.rhino.head.Node) functionNode36);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode48 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int49 = functionNode48.getLp();
        functionNode48.setEncodedSource("");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode52 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int53 = functionNode52.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode54 = functionNode52.getTop();
        com.google.javascript.rhino.head.ast.Name name55 = null;
        functionNode52.setFunctionName(name55);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode57 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode58 = functionNode57.getTop();
        functionNode52.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode57);
        int int60 = functionNode57.getRp();
        int int61 = functionNode57.getFunctionType();
        functionNode48.addParam((com.google.javascript.rhino.head.ast.AstNode) functionNode57);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode63 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int64 = functionNode63.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode65 = functionNode63.getTop();
        com.google.javascript.rhino.head.Node node66 = functionNode63.getLastSibling();
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList67 = functionNode63.getParams();
        functionNode48.setParams(astNodeList67);
        functionNode14.setParams(astNodeList67);
        functionNode5.addResumptionPoint((com.google.javascript.rhino.head.Node) functionNode14);
        functionNode5.setBaseLineno(48);
        functionNode5.setRp(100);
        com.google.javascript.rhino.head.ast.RegExpLiteral regExpLiteral77 = new com.google.javascript.rhino.head.ast.RegExpLiteral((-631440296), 109);
        int int78 = functionNode5.compareTo((com.google.javascript.rhino.head.ast.AstNode) regExpLiteral77);
        com.google.javascript.rhino.head.Node node79 = regExpLiteral77.getNext();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-1) + "'", int1 == (-1));
        org.junit.Assert.assertNotNull(scriptNode2);
        org.junit.Assert.assertNotNull(scriptNode6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(scriptNode16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(scriptNode20);
        org.junit.Assert.assertNotNull(scriptNode27);
        org.junit.Assert.assertNotNull(scriptNode37);
        org.junit.Assert.assertNull(nodeList43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 1 + "'", int44 == 1);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
        org.junit.Assert.assertNotNull(scriptNode54);
        org.junit.Assert.assertNotNull(scriptNode58);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-1) + "'", int60 == (-1));
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 0 + "'", int61 == 0);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + (-1) + "'", int64 == (-1));
        org.junit.Assert.assertNotNull(scriptNode65);
        org.junit.Assert.assertNotNull(node66);
        org.junit.Assert.assertNotNull(astNodeList67);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 1 + "'", int78 == 1);
        org.junit.Assert.assertNull(node79);
    }

    @Test
    public void test09841() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09841");
        com.google.javascript.rhino.head.ast.Jump jump5 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump5.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump9 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump5, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int12 = scriptNode11.getEndLineno();
        int int13 = scriptNode11.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList14 = scriptNode11.getChildScopes();
        com.google.javascript.rhino.head.Node node15 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump5, (com.google.javascript.rhino.head.Node) scriptNode11);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode16 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int17 = functionNode16.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode18 = functionNode16.getTop();
        com.google.javascript.rhino.head.Node node19 = functionNode16.getLastSibling();
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList20 = functionNode16.getParams();
        com.google.javascript.rhino.head.Node node22 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump5, (com.google.javascript.rhino.head.Node) functionNode16, 3);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode23 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int24 = functionNode23.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode25 = functionNode23.getTop();
        boolean boolean26 = functionNode23.hasSideEffects();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList27 = functionNode23.getSymbols();
        functionNode23.setRp(5);
        com.google.javascript.rhino.head.ast.Jump jump31 = new com.google.javascript.rhino.head.ast.Jump((int) (short) 0);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode32 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int33 = functionNode32.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode34 = functionNode32.getTop();
        com.google.javascript.rhino.head.ast.Name name35 = null;
        functionNode32.setFunctionName(name35);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode37 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode38 = functionNode37.getTop();
        functionNode32.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode37);
        functionNode37.setIsExpressionClosure(true);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode43 = new com.google.javascript.rhino.head.ast.FunctionNode((int) (byte) 100);
        int int44 = functionNode37.addFunction(functionNode43);
        int int45 = jump31.compareTo((com.google.javascript.rhino.head.ast.AstNode) functionNode43);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode47 = new com.google.javascript.rhino.head.ast.FunctionNode(0);
        com.google.javascript.rhino.head.ast.Jump jump53 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump53.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump57 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump53, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode59 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int60 = scriptNode59.getEndLineno();
        int int61 = scriptNode59.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList62 = scriptNode59.getChildScopes();
        com.google.javascript.rhino.head.Node node63 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump53, (com.google.javascript.rhino.head.Node) scriptNode59);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList64 = scriptNode59.getFunctions();
        functionNodeList64.clear();
        com.google.javascript.rhino.head.ast.Jump jump70 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump70.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump74 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump70, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode76 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int77 = scriptNode76.getEndLineno();
        int int78 = scriptNode76.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList79 = scriptNode76.getChildScopes();
        com.google.javascript.rhino.head.Node node80 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump70, (com.google.javascript.rhino.head.Node) scriptNode76);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList81 = scriptNode76.getFunctions();
        boolean boolean82 = functionNodeList64.removeAll((java.util.Collection<com.google.javascript.rhino.head.ast.FunctionNode>) functionNodeList81);
        functionNode47.putProp(20, (java.lang.Object) functionNodeList64);
        int int84 = functionNode43.addFunction(functionNode47);
        boolean boolean85 = functionNode47.isGenerator();
        int int86 = functionNode23.addFunction(functionNode47);
        functionNode16.addParam((com.google.javascript.rhino.head.ast.AstNode) functionNode47);
        functionNode47.setFunctionType(19);
        int int90 = functionNode47.getRp();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str92 = functionNode47.toSource(25);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNull(scopeList14);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNotNull(scriptNode18);
        org.junit.Assert.assertNotNull(node19);
        org.junit.Assert.assertNotNull(astNodeList20);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertNotNull(scriptNode25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(symbolList27);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertNotNull(scriptNode34);
        org.junit.Assert.assertNotNull(scriptNode38);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-1) + "'", int60 == (-1));
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + (-1) + "'", int61 == (-1));
        org.junit.Assert.assertNull(scopeList62);
        org.junit.Assert.assertNotNull(functionNodeList64);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + (-1) + "'", int77 == (-1));
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + (-1) + "'", int78 == (-1));
        org.junit.Assert.assertNull(scopeList79);
        org.junit.Assert.assertNotNull(functionNodeList81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 0 + "'", int84 == 0);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + 0 + "'", int86 == 0);
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + (-1) + "'", int90 == (-1));
    }

    @Test
    public void test09842() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09842");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode2 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int3 = functionNode2.getLp();
        functionNode2.setLp((int) (short) 1);
        int int8 = functionNode2.getIntProp(4, 26);
        com.google.javascript.rhino.head.ast.Jump jump9 = new com.google.javascript.rhino.head.ast.Jump(3, (com.google.javascript.rhino.head.Node) functionNode2);
        com.google.javascript.rhino.head.Node node10 = new com.google.javascript.rhino.head.Node((int) '4', (com.google.javascript.rhino.head.Node) functionNode2);
        functionNode2.setRequiresActivation();
        com.google.javascript.rhino.head.Node node13 = functionNode2.setType(9);
        node13.removeProp(682903487);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 26 + "'", int8 == 26);
        org.junit.Assert.assertNotNull(node13);
    }

    @Test
    public void test09843() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09843");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int2 = scriptNode1.getEndLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode4 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int5 = scriptNode4.getEndLineno();
        scriptNode1.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode4);
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator7 = scriptNode1.new NodeIterator();
        boolean boolean8 = nodeIterator7.hasNext();
        boolean boolean9 = nodeIterator7.hasNext();
        boolean boolean10 = nodeIterator7.hasNext();
        com.google.javascript.rhino.head.Node node11 = nodeIterator7.next();
        boolean boolean12 = nodeIterator7.hasNext();
        nodeIterator7.remove();
        boolean boolean14 = nodeIterator7.hasNext();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(node11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test09844() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09844");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int2 = scriptNode1.getEndLineno();
        int int3 = scriptNode1.getBaseLineno();
        com.google.javascript.rhino.head.ast.Jump jump6 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode8 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int9 = scriptNode8.getEndLineno();
        int int10 = scriptNode8.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList11 = scriptNode8.getChildScopes();
        jump6.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode8);
        java.lang.String str13 = scriptNode8.debugPrint();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode1, (com.google.javascript.rhino.head.ast.Scope) scriptNode8);
        com.google.javascript.rhino.head.ast.AstNode astNode15 = scriptNode1.getParent();
        int int16 = scriptNode1.getBaseLineno();
        int int17 = scriptNode1.getBaseLineno();
        com.google.javascript.rhino.head.ast.RegExpLiteral regExpLiteral18 = new com.google.javascript.rhino.head.ast.RegExpLiteral();
        java.lang.String str19 = regExpLiteral18.getValue();
        scriptNode1.addRegExp(regExpLiteral18);
        boolean boolean21 = scriptNode1.hasSideEffects();
        com.google.javascript.rhino.head.ast.Symbol symbol23 = scriptNode1.getSymbol("            //null//null/-1\tSCRIPT -1 1\n/");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNull(scopeList11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str13, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertNull(astNode15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(symbol23);
    }

    @Test
    public void test09845() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09845");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode1 = new com.google.javascript.rhino.head.ast.FunctionNode(0);
        int int2 = functionNode1.getBaseLineno();
        functionNode1.setPosition((int) '#');
        int int5 = functionNode1.getPosition();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 35 + "'", int5 == 35);
    }

    @Test
    public void test09846() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09846");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode0 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int1 = functionNode0.getLp();
        functionNode0.setEncodedSource("");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode4 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int5 = functionNode4.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = functionNode4.getTop();
        com.google.javascript.rhino.head.ast.Name name7 = null;
        functionNode4.setFunctionName(name7);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode9 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = functionNode9.getTop();
        functionNode4.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode9);
        int int12 = functionNode9.getRp();
        int int13 = functionNode9.getFunctionType();
        functionNode0.addParam((com.google.javascript.rhino.head.ast.AstNode) functionNode9);
        com.google.javascript.rhino.head.Node node15 = functionNode0.getLastSibling();
        int int16 = functionNode0.getRegexpCount();
        functionNode0.setIsExpressionClosure(true);
        com.google.javascript.rhino.head.ast.Scope scope19 = functionNode0.getParentScope();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-1) + "'", int1 == (-1));
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(scriptNode6);
        org.junit.Assert.assertNotNull(scriptNode10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(node15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNull(scope19);
    }

    @Test
    public void test09847() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09847");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode0 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 10);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode3 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode4 = functionNode3.getTop();
        functionNode3.setParens((int) (byte) 1, (int) (short) 1);
        functionNode3.setEncodedSourceStart((-1));
        functionNode3.setFunctionIsGetter();
        scope2.addChildToFront((com.google.javascript.rhino.head.Node) functionNode3);
        functionNode0.setBody((com.google.javascript.rhino.head.ast.AstNode) functionNode3);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode13 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = functionNode13.getTop();
        functionNode13.setParens((int) (byte) 1, (int) (short) 1);
        functionNode13.setEncodedSourceStart((-1));
        java.util.List<com.google.javascript.rhino.head.Node> nodeList20 = functionNode13.getResumptionPoints();
        int int21 = functionNode13.getLp();
        functionNode0.setBody((com.google.javascript.rhino.head.ast.AstNode) functionNode13);
        functionNode13.setLp((int) (short) 0);
        int int25 = functionNode13.getLineno();
        boolean boolean26 = functionNode13.hasSideEffects();
        org.junit.Assert.assertNotNull(scriptNode4);
        org.junit.Assert.assertNotNull(scriptNode14);
        org.junit.Assert.assertNull(nodeList20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
    }

    @Test
    public void test09848() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09848");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode0 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int1 = functionNode0.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = functionNode0.getTop();
        com.google.javascript.rhino.head.ast.Name name3 = null;
        functionNode0.setFunctionName(name3);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode5 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.Scope scope7 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 10);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode8 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode9 = functionNode8.getTop();
        functionNode8.setParens((int) (byte) 1, (int) (short) 1);
        functionNode8.setEncodedSourceStart((-1));
        functionNode8.setFunctionIsGetter();
        scope7.addChildToFront((com.google.javascript.rhino.head.Node) functionNode8);
        functionNode5.setBody((com.google.javascript.rhino.head.ast.AstNode) functionNode8);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode18 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode19 = functionNode18.getTop();
        functionNode18.setParens((int) (byte) 1, (int) (short) 1);
        functionNode18.setEncodedSourceStart((-1));
        java.util.List<com.google.javascript.rhino.head.Node> nodeList25 = functionNode18.getResumptionPoints();
        int int26 = functionNode18.getLp();
        functionNode5.setBody((com.google.javascript.rhino.head.ast.AstNode) functionNode18);
        functionNode0.addParam((com.google.javascript.rhino.head.ast.AstNode) functionNode18);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode29 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int30 = functionNode29.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode31 = functionNode29.getTop();
        com.google.javascript.rhino.head.ast.Name name32 = null;
        functionNode29.setFunctionName(name32);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode34 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode35 = functionNode34.getTop();
        functionNode29.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode34);
        int int37 = functionNode34.getRp();
        int int38 = functionNode34.getFunctionType();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) functionNode18, (com.google.javascript.rhino.head.ast.Scope) functionNode34);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode40 = functionNode34.getTop();
        boolean boolean41 = functionNode34.requiresActivation();
        int int42 = functionNode34.getLength();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-1) + "'", int1 == (-1));
        org.junit.Assert.assertNotNull(scriptNode2);
        org.junit.Assert.assertNotNull(scriptNode9);
        org.junit.Assert.assertNotNull(scriptNode19);
        org.junit.Assert.assertNull(nodeList25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 1 + "'", int26 == 1);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertNotNull(scriptNode31);
        org.junit.Assert.assertNotNull(scriptNode35);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertNotNull(scriptNode40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 1 + "'", int42 == 1);
    }

    @Test
    public void test09849() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09849");
        com.google.javascript.rhino.head.Token.CommentType commentType2 = null;
        com.google.javascript.rhino.head.ast.Comment comment4 = new com.google.javascript.rhino.head.ast.Comment(84791990, (-572453929), commentType2, "                        ");
    }

    @Test
    public void test09850() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09850");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode0 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = functionNode0.getTop();
        int int2 = functionNode0.getRegexpCount();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode3 = functionNode0.getEnclosingFunction();
        functionNode0.setBaseLineno(0);
        com.google.javascript.rhino.head.ast.Name name7 = null;
        com.google.javascript.rhino.head.ast.FunctionNode functionNode8 = new com.google.javascript.rhino.head.ast.FunctionNode((int) (byte) -1, name7);
        java.util.List<com.google.javascript.rhino.head.Node> nodeList9 = functionNode8.getResumptionPoints();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList10 = functionNode8.getSymbols();
        int int11 = functionNode0.addFunction(functionNode8);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList12 = functionNode0.getFunctions();
        java.util.Iterator<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeItor13 = functionNodeList12.iterator();
        org.junit.Assert.assertNotNull(scriptNode1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNull(functionNode3);
        org.junit.Assert.assertNull(nodeList9);
        org.junit.Assert.assertNotNull(symbolList10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(functionNodeList12);
        org.junit.Assert.assertNotNull(functionNodeItor13);
    }

    @Test
    public void test09851() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09851");
        com.google.javascript.rhino.head.ast.Jump jump4 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump4.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump8 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump4, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int11 = scriptNode10.getEndLineno();
        int int12 = scriptNode10.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList13 = scriptNode10.getChildScopes();
        com.google.javascript.rhino.head.Node node14 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump4, (com.google.javascript.rhino.head.Node) scriptNode10);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList15 = scriptNode10.getFunctions();
        functionNodeList15.clear();
        functionNodeList15.clear();
        com.google.javascript.rhino.head.ast.Jump jump22 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump22.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump26 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump22, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode28 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int29 = scriptNode28.getEndLineno();
        int int30 = scriptNode28.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList31 = scriptNode28.getChildScopes();
        com.google.javascript.rhino.head.Node node32 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump22, (com.google.javascript.rhino.head.Node) scriptNode28);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList33 = scriptNode28.getFunctions();
        java.util.Spliterator<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeSpliterator34 = functionNodeList33.spliterator();
        int int36 = functionNodeList33.indexOf((java.lang.Object) (byte) 10);
        boolean boolean37 = functionNodeList15.retainAll((java.util.Collection<com.google.javascript.rhino.head.ast.FunctionNode>) functionNodeList33);
        java.lang.Object obj38 = null;
        int int39 = functionNodeList33.lastIndexOf(obj38);
        java.util.Spliterator<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeSpliterator40 = functionNodeList33.spliterator();
        int int41 = functionNodeList33.size();
        java.util.Spliterator<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeSpliterator42 = functionNodeList33.spliterator();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode44 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int45 = functionNode44.getLp();
        functionNode44.setEncodedSource("");
        functionNode44.setLp(2);
        java.util.List<com.google.javascript.rhino.head.Node> nodeList50 = functionNode44.getResumptionPoints();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode51 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int52 = functionNode51.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode53 = functionNode51.getTop();
        com.google.javascript.rhino.head.ast.Name name54 = null;
        functionNode51.setFunctionName(name54);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode56 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int57 = functionNode56.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode59 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        java.lang.String str60 = functionNode56.toStringTree(scriptNode59);
        functionNode56.setFunctionIsGetter();
        int int62 = functionNode51.addFunction(functionNode56);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList63 = functionNode51.getSymbols();
        com.google.javascript.rhino.head.Node node65 = new com.google.javascript.rhino.head.Node(4, (com.google.javascript.rhino.head.Node) functionNode44, (com.google.javascript.rhino.head.Node) functionNode51, 25);
        int int66 = functionNodeList33.lastIndexOf((java.lang.Object) functionNode51);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode67 = null;
        functionNode51.setTop(scriptNode67);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNull(scopeList13);
        org.junit.Assert.assertNotNull(functionNodeList15);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertNull(scopeList31);
        org.junit.Assert.assertNotNull(functionNodeList33);
        org.junit.Assert.assertNotNull(functionNodeSpliterator34);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertNotNull(functionNodeSpliterator40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertNotNull(functionNodeSpliterator42);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
        org.junit.Assert.assertNull(nodeList50);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertNotNull(scriptNode53);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
        org.junit.Assert.assertNull(str60);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 0 + "'", int62 == 0);
        org.junit.Assert.assertNotNull(symbolList63);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + (-1) + "'", int66 == (-1));
    }

    @Test
    public void test09852() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09852");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode1 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = functionNode1.getTop();
        functionNode1.setParens((int) (byte) 1, (int) (short) 1);
        com.google.javascript.rhino.head.Node node6 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) functionNode1);
        functionNode1.setRequiresActivation();
        java.lang.String str8 = functionNode1.shortName();
        com.google.javascript.rhino.head.Node node10 = functionNode1.setType(14);
        java.lang.String str11 = functionNode1.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope12 = functionNode1.getParentScope();
        com.google.javascript.rhino.head.ast.AstNode astNode13 = functionNode1.getMemberExprNode();
        org.junit.Assert.assertNotNull(scriptNode2);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "FunctionNode" + "'", str8, "FunctionNode");
        org.junit.Assert.assertNotNull(node10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "$0" + "'", str11, "$0");
        org.junit.Assert.assertNull(scope12);
        org.junit.Assert.assertNull(astNode13);
    }

    @Test
    public void test09853() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09853");
        com.google.javascript.rhino.head.ast.Jump jump2 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode4 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int5 = scriptNode4.getEndLineno();
        int int6 = scriptNode4.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList7 = scriptNode4.getChildScopes();
        jump2.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode4);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode10 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int11 = functionNode10.getLp();
        functionNode10.setEncodedSource("");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode14 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int15 = functionNode14.getLp();
        functionNode14.setEncodedSource("");
        functionNode14.flattenSymbolTable(false);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode20 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int21 = functionNode20.getLp();
        com.google.javascript.rhino.head.Node node23 = new com.google.javascript.rhino.head.Node((-1), (com.google.javascript.rhino.head.Node) functionNode10, (com.google.javascript.rhino.head.Node) functionNode14, (com.google.javascript.rhino.head.Node) functionNode20, (int) '#');
        jump2.addChildrenToFront((com.google.javascript.rhino.head.Node) functionNode10);
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList25 = functionNode10.getStatements();
        functionNode10.setBaseLineno(16);
        java.lang.String str28 = functionNode10.toString();
        java.lang.String str29 = functionNode10.getEncodedSource();
        functionNode10.setFunctionIsGetter();
        functionNode10.setIsExpressionClosure(true);
        com.google.javascript.rhino.head.Node node35 = com.google.javascript.rhino.head.Node.newString((int) (byte) 0, "");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode36 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode37 = functionNode36.getTop();
        functionNode36.setParens((int) (byte) 1, (int) (short) 1);
        functionNode36.setEncodedSourceStart((-1));
        functionNode36.setParens(5, (int) (short) 100);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode47 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int48 = functionNode47.getLp();
        functionNode47.setEncodedSource("");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode51 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int52 = functionNode51.getLp();
        functionNode51.setEncodedSource("");
        functionNode51.flattenSymbolTable(false);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode57 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int58 = functionNode57.getLp();
        com.google.javascript.rhino.head.Node node60 = new com.google.javascript.rhino.head.Node((-1), (com.google.javascript.rhino.head.Node) functionNode47, (com.google.javascript.rhino.head.Node) functionNode51, (com.google.javascript.rhino.head.Node) functionNode57, (int) '#');
        com.google.javascript.rhino.head.ast.AstNode astNode61 = functionNode47.getBody();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode62 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int63 = functionNode62.getLp();
        functionNode62.setEncodedSource("");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode66 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int67 = functionNode66.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode68 = functionNode66.getTop();
        com.google.javascript.rhino.head.ast.Name name69 = null;
        functionNode66.setFunctionName(name69);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode71 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode72 = functionNode71.getTop();
        functionNode66.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode71);
        int int74 = functionNode71.getRp();
        int int75 = functionNode71.getFunctionType();
        functionNode62.addParam((com.google.javascript.rhino.head.ast.AstNode) functionNode71);
        com.google.javascript.rhino.head.ast.Scope scope77 = functionNode71.getEnclosingScope();
        functionNode47.setBody((com.google.javascript.rhino.head.ast.AstNode) functionNode71);
        functionNode71.setLp(26);
        functionNode36.target = functionNode71;
        java.lang.String str82 = node35.toStringTree((com.google.javascript.rhino.head.ast.ScriptNode) functionNode36);
        functionNode36.setFunctionIsSetter();
        functionNode10.target = functionNode36;
        functionNode36.setIsExpressionClosure(true);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNull(scopeList7);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertNotNull(astNodeList25);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "109" + "'", str28, "109");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, "");
        org.junit.Assert.assertNotNull(node35);
        org.junit.Assert.assertNotNull(scriptNode37);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + (-1) + "'", int58 == (-1));
        org.junit.Assert.assertNull(astNode61);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + (-1) + "'", int63 == (-1));
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + (-1) + "'", int67 == (-1));
        org.junit.Assert.assertNotNull(scriptNode68);
        org.junit.Assert.assertNotNull(scriptNode72);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + (-1) + "'", int74 == (-1));
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 0 + "'", int75 == 0);
        org.junit.Assert.assertNotNull(scope77);
        org.junit.Assert.assertNull(str82);
    }

    @Test
    public void test09854() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09854");
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope((-572453929), 17);
    }

    @Test
    public void test09855() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09855");
        com.google.javascript.rhino.head.Node node1 = com.google.javascript.rhino.head.Node.newString("                                    /null/                {\n                }\n");
        org.junit.Assert.assertNotNull(node1);
    }

    @Test
    public void test09856() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09856");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode0 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 10);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode3 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode4 = functionNode3.getTop();
        functionNode3.setParens((int) (byte) 1, (int) (short) 1);
        functionNode3.setEncodedSourceStart((-1));
        functionNode3.setFunctionIsGetter();
        scope2.addChildToFront((com.google.javascript.rhino.head.Node) functionNode3);
        functionNode0.setBody((com.google.javascript.rhino.head.ast.AstNode) functionNode3);
        com.google.javascript.rhino.head.ast.Jump jump15 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode17 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int18 = scriptNode17.getEndLineno();
        int int19 = scriptNode17.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList20 = scriptNode17.getChildScopes();
        jump15.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode17);
        boolean boolean22 = functionNode3.isParam((com.google.javascript.rhino.head.ast.AstNode) jump15);
        java.util.Map<com.google.javascript.rhino.head.Node, int[]> nodeMap23 = functionNode3.getLiveLocals();
        functionNode3.setFunctionIsSetter();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode26 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int27 = scriptNode26.getEndLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode29 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int30 = scriptNode29.getEndLineno();
        scriptNode26.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode29);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode32 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int33 = functionNode32.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode34 = functionNode32.getTop();
        boolean boolean35 = functionNode32.hasSideEffects();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode37 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int38 = scriptNode37.getEndLineno();
        int int39 = scriptNode37.getBaseLineno();
        com.google.javascript.rhino.head.ast.Jump jump42 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode44 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int45 = scriptNode44.getEndLineno();
        int int46 = scriptNode44.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList47 = scriptNode44.getChildScopes();
        jump42.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode44);
        java.lang.String str49 = scriptNode44.debugPrint();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode37, (com.google.javascript.rhino.head.ast.Scope) scriptNode44);
        com.google.javascript.rhino.head.ast.Scope scope51 = new com.google.javascript.rhino.head.ast.Scope();
        scriptNode44.target = scope51;
        functionNode32.addChildScope(scope51);
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode29, (com.google.javascript.rhino.head.ast.Scope) functionNode32);
        int int55 = functionNode32.getFunctionCount();
        java.lang.String str56 = functionNode32.shortName();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode57 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode58 = functionNode57.getTop();
        com.google.javascript.rhino.head.ast.Name name59 = null;
        functionNode57.setFunctionName(name59);
        int int61 = functionNode57.getLength();
        com.google.javascript.rhino.head.ast.Scope scope64 = new com.google.javascript.rhino.head.ast.Scope((int) '4');
        functionNode57.putProp(6, (java.lang.Object) scope64);
        java.lang.String str66 = functionNode57.getJsDoc();
        boolean boolean67 = functionNode32.isParam((com.google.javascript.rhino.head.ast.AstNode) functionNode57);
        boolean boolean68 = functionNode3.isParam((com.google.javascript.rhino.head.ast.AstNode) functionNode57);
        com.google.javascript.rhino.head.ast.AstNode astNode69 = functionNode57.getParent();
        // The following exception was thrown during execution in test generation
        try {
            int int70 = astNode69.getAbsolutePosition();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(scriptNode4);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNull(scopeList20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(nodeMap23);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertNotNull(scriptNode34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertNull(scopeList47);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str49, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "FunctionNode" + "'", str56, "FunctionNode");
        org.junit.Assert.assertNotNull(scriptNode58);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 1 + "'", int61 == 1);
        org.junit.Assert.assertNull(str66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNull(astNode69);
    }

    @Test
    public void test09857() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09857");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode0 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = functionNode0.getTop();
        functionNode0.setParens((int) (byte) 1, (int) (short) 1);
        functionNode0.setEncodedSourceStart((-1));
        boolean boolean7 = functionNode0.isGetter();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode10 = new com.google.javascript.rhino.head.ast.FunctionNode((int) (byte) 100);
        int int11 = functionNode10.getEncodedSourceStart();
        int int12 = functionNode10.getFunctionCount();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode13 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = functionNode13.getTop();
        functionNode13.setParens((int) (byte) 1, (int) (short) 1);
        int int18 = functionNode13.getRp();
        com.google.javascript.rhino.head.Node node20 = new com.google.javascript.rhino.head.Node(17, (com.google.javascript.rhino.head.Node) functionNode10, (com.google.javascript.rhino.head.Node) functionNode13, (int) (short) 0);
        com.google.javascript.rhino.head.ast.Symbol symbol22 = functionNode13.getSymbol("$0");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode23 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int24 = functionNode23.getLp();
        functionNode23.setEncodedSource("");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode27 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.Scope scope29 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 10);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode30 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode31 = functionNode30.getTop();
        functionNode30.setParens((int) (byte) 1, (int) (short) 1);
        functionNode30.setEncodedSourceStart((-1));
        functionNode30.setFunctionIsGetter();
        scope29.addChildToFront((com.google.javascript.rhino.head.Node) functionNode30);
        functionNode27.setBody((com.google.javascript.rhino.head.ast.AstNode) functionNode30);
        int int40 = functionNode23.addFunction(functionNode27);
        functionNode13.setBody((com.google.javascript.rhino.head.ast.AstNode) functionNode23);
        int int42 = functionNode23.getAbsolutePosition();
        int int43 = functionNode23.getLineno();
        com.google.javascript.rhino.head.ast.Scope scope44 = functionNode23.getParentScope();
        int int45 = functionNode0.addFunction(functionNode23);
        int int46 = functionNode0.getParamCount();
        org.junit.Assert.assertNotNull(scriptNode1);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(scriptNode14);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertNull(symbol22);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertNotNull(scriptNode31);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertNull(scope44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
    }

    @Test
    public void test09858() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09858");
        com.google.javascript.rhino.head.ast.Symbol symbol0 = new com.google.javascript.rhino.head.ast.Symbol();
        java.lang.String str1 = symbol0.getName();
        com.google.javascript.rhino.head.Node node2 = symbol0.getNode();
        symbol0.setIndex(1);
        symbol0.setIndex(109);
        symbol0.setIndex(16);
        com.google.javascript.rhino.head.ast.Scope scope9 = symbol0.getContainingTable();
        // The following exception was thrown during execution in test generation
        try {
            symbol0.setDeclType(4);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid declType: 4");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNull(scope9);
    }

    @Test
    public void test09859() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09859");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int3 = scriptNode2.getEndLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int6 = scriptNode5.getEndLineno();
        scriptNode2.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode5);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode8 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int9 = functionNode8.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = functionNode8.getTop();
        boolean boolean11 = functionNode8.hasSideEffects();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode13 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int14 = scriptNode13.getEndLineno();
        int int15 = scriptNode13.getBaseLineno();
        com.google.javascript.rhino.head.ast.Jump jump18 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode20 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int21 = scriptNode20.getEndLineno();
        int int22 = scriptNode20.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList23 = scriptNode20.getChildScopes();
        jump18.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode20);
        java.lang.String str25 = scriptNode20.debugPrint();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode13, (com.google.javascript.rhino.head.ast.Scope) scriptNode20);
        com.google.javascript.rhino.head.ast.Scope scope27 = new com.google.javascript.rhino.head.ast.Scope();
        scriptNode20.target = scope27;
        functionNode8.addChildScope(scope27);
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode5, (com.google.javascript.rhino.head.ast.Scope) functionNode8);
        boolean boolean31 = functionNode8.hasConsistentReturnUsage();
        functionNode8.setBounds((-817814412), (-3));
        com.google.javascript.rhino.head.Node node36 = new com.google.javascript.rhino.head.Node(109, (com.google.javascript.rhino.head.Node) functionNode8, (-330954035));
        functionNode8.setIsExpressionClosure(false);
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor39 = functionNode8.iterator();
        com.google.javascript.rhino.head.Node node41 = functionNode8.setType(817068741);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(scriptNode10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNull(scopeList23);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str25, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(nodeItor39);
        org.junit.Assert.assertNotNull(node41);
    }

    @Test
    public void test09860() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09860");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode1 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int2 = functionNode1.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode3 = functionNode1.getTop();
        com.google.javascript.rhino.head.ast.Name name4 = null;
        functionNode1.setFunctionName(name4);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode6 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode7 = functionNode6.getTop();
        functionNode1.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode6);
        com.google.javascript.rhino.head.ast.Scope scope11 = new com.google.javascript.rhino.head.ast.Scope((int) (short) -1, 0);
        functionNode1.replaceWith(scope11);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode13 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int14 = functionNode13.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode15 = functionNode13.getTop();
        com.google.javascript.rhino.head.ast.Name name16 = null;
        functionNode13.setFunctionName(name16);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode18 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode19 = functionNode18.getTop();
        functionNode13.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode18);
        int int21 = functionNode1.addFunction(functionNode13);
        int int22 = functionNode13.getLineno();
        int int23 = functionNode13.getFunctionType();
        functionNode13.setRp(7);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode26 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int27 = functionNode26.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode28 = functionNode26.getTop();
        com.google.javascript.rhino.head.Node node29 = functionNode26.getLastSibling();
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList30 = functionNode26.getParams();
        int int31 = functionNode26.getType();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator32 = functionNode26.new NodeIterator();
        functionNode13.addResumptionPoint((com.google.javascript.rhino.head.Node) functionNode26);
        java.lang.String str34 = functionNode13.getSourceName();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode35 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.AstNode astNode36 = functionNode35.getParent();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode37 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode38 = functionNode37.getTop();
        functionNode37.setParens((int) (byte) 1, (int) (short) 1);
        functionNode37.setEncodedSourceStart((-1));
        java.util.List<com.google.javascript.rhino.head.Node> nodeList44 = functionNode37.getResumptionPoints();
        com.google.javascript.rhino.head.ast.Scope scope46 = functionNode37.getDefiningScope("hi!");
        boolean boolean47 = functionNode37.isGetterOrSetter();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode48 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int49 = functionNode48.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode50 = functionNode48.getTop();
        com.google.javascript.rhino.head.ast.Name name51 = null;
        functionNode48.setFunctionName(name51);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode53 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode54 = functionNode53.getTop();
        functionNode48.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode53);
        int int56 = functionNode53.getRp();
        int int57 = functionNode53.getFunctionType();
        int int58 = functionNode37.addFunction(functionNode53);
        functionNode35.setTop((com.google.javascript.rhino.head.ast.ScriptNode) functionNode53);
        functionNode13.target = functionNode35;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode62 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int63 = scriptNode62.getEndLineno();
        int int64 = scriptNode62.getBaseLineno();
        com.google.javascript.rhino.head.ast.Jump jump67 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode69 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int70 = scriptNode69.getEndLineno();
        int int71 = scriptNode69.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList72 = scriptNode69.getChildScopes();
        jump67.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode69);
        java.lang.String str74 = scriptNode69.debugPrint();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode62, (com.google.javascript.rhino.head.ast.Scope) scriptNode69);
        int int76 = scriptNode69.getLineno();
        com.google.javascript.rhino.head.Node node77 = new com.google.javascript.rhino.head.Node(9, (com.google.javascript.rhino.head.Node) functionNode35, (com.google.javascript.rhino.head.Node) scriptNode69);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList78 = functionNode35.getSymbols();
        com.google.javascript.rhino.head.ast.Symbol symbol80 = functionNode35.getSymbol("                    ");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertNotNull(scriptNode3);
        org.junit.Assert.assertNotNull(scriptNode7);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNotNull(scriptNode15);
        org.junit.Assert.assertNotNull(scriptNode19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(scriptNode28);
        org.junit.Assert.assertNotNull(node29);
        org.junit.Assert.assertNotNull(astNodeList30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 109 + "'", int31 == 109);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNull(astNode36);
        org.junit.Assert.assertNotNull(scriptNode38);
        org.junit.Assert.assertNull(nodeList44);
        org.junit.Assert.assertNull(scope46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertNotNull(scriptNode50);
        org.junit.Assert.assertNotNull(scriptNode54);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1));
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 0 + "'", int57 == 0);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + (-1) + "'", int63 == (-1));
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + (-1) + "'", int64 == (-1));
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + (-1) + "'", int70 == (-1));
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + (-1) + "'", int71 == (-1));
        org.junit.Assert.assertNull(scopeList72);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str74, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + (-1) + "'", int76 == (-1));
        org.junit.Assert.assertNotNull(symbolList78);
        org.junit.Assert.assertNull(symbol80);
    }

    @Test
    public void test09861() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09861");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode0 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int1 = functionNode0.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = functionNode0.getTop();
        com.google.javascript.rhino.head.ast.Name name3 = null;
        functionNode0.setFunctionName(name3);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode5 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = functionNode5.getTop();
        functionNode0.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode5);
        int int8 = functionNode5.getRp();
        functionNode5.setParens(11, 2);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode13 = new com.google.javascript.rhino.head.ast.FunctionNode((-1));
        int int14 = functionNode5.addFunction(functionNode13);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode16 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int17 = scriptNode16.getEndLineno();
        int int18 = scriptNode16.getBaseLineno();
        scriptNode16.removeProp(0);
        scriptNode16.setEncodedSourceEnd(19);
        java.lang.String str23 = scriptNode16.toString();
        int[] intArray25 = new int[] { 26 };
        functionNode5.addLiveLocals((com.google.javascript.rhino.head.Node) scriptNode16, intArray25);
        int int27 = functionNode5.getRegexpCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot28 = functionNode5.getAstRoot();
        com.google.javascript.rhino.head.ast.RegExpLiteral regExpLiteral31 = new com.google.javascript.rhino.head.ast.RegExpLiteral(13, (int) (short) 1);
        java.lang.String str32 = regExpLiteral31.getValue();
        regExpLiteral31.setValue("                    109");
        // The following exception was thrown during execution in test generation
        try {
            astRoot28.setDefault((com.google.javascript.rhino.head.Node) regExpLiteral31);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-1) + "'", int1 == (-1));
        org.junit.Assert.assertNotNull(scriptNode2);
        org.junit.Assert.assertNotNull(scriptNode6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "136" + "'", str23, "136");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[26]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertNull(astRoot28);
        org.junit.Assert.assertNull(str32);
    }

    @Test
    public void test09862() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09862");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int2 = scriptNode1.getEndLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode4 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int5 = scriptNode4.getEndLineno();
        scriptNode1.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode4);
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator7 = scriptNode1.new NodeIterator();
        boolean boolean8 = nodeIterator7.hasNext();
        boolean boolean9 = nodeIterator7.hasNext();
        boolean boolean10 = nodeIterator7.hasNext();
        com.google.javascript.rhino.head.Node node11 = nodeIterator7.next();
        com.google.javascript.rhino.head.Node node12 = null;
        // The following exception was thrown during execution in test generation
        try {
            node11.addChildToFront(node12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(node11);
    }

    @Test
    public void test09863() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09863");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode0 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int1 = functionNode0.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = functionNode0.getTop();
        boolean boolean3 = functionNode0.hasSideEffects();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList4 = functionNode0.getSymbols();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = new com.google.javascript.rhino.head.ast.ScriptNode();
        int int6 = scriptNode5.getEncodedSourceEnd();
        java.lang.String str8 = scriptNode5.toSource((int) (byte) 10);
        scriptNode5.setEncodedSourceEnd((int) (short) -1);
        java.lang.String str11 = functionNode0.toStringTree(scriptNode5);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode13 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = functionNode13.getTop();
        java.lang.String str15 = scriptNode14.getJsDoc();
        com.google.javascript.rhino.head.Node node17 = scriptNode14.setType(0);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode18 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int19 = functionNode18.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode21 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        java.lang.String str22 = functionNode18.toStringTree(scriptNode21);
        com.google.javascript.rhino.head.ast.Scope scope24 = scriptNode21.getDefiningScope("");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode26 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int27 = scriptNode26.getEndLineno();
        int int28 = scriptNode26.getBaseLineno();
        com.google.javascript.rhino.head.Node node29 = new com.google.javascript.rhino.head.Node(25, node17, (com.google.javascript.rhino.head.Node) scriptNode21, (com.google.javascript.rhino.head.Node) scriptNode26);
        boolean boolean30 = scriptNode26.hasConsistentReturnUsage();
        java.lang.String str31 = scriptNode26.getNextTempName();
        java.lang.String str32 = scriptNode26.shortName();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode33 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int34 = functionNode33.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode35 = functionNode33.getTop();
        boolean boolean36 = functionNode33.hasSideEffects();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList37 = functionNode33.getSymbols();
        scriptNode26.setSymbols(symbolList37);
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator39 = scriptNode26.spliterator();
        scriptNode5.setParentScope((com.google.javascript.rhino.head.ast.Scope) scriptNode26);
        java.lang.String str41 = scriptNode26.toSource();
        java.lang.String str42 = scriptNode26.getSourceName();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-1) + "'", int1 == (-1));
        org.junit.Assert.assertNotNull(scriptNode2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(symbolList4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "                    {\n                    }\n" + "'", str8, "                    {\n                    }\n");
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(scriptNode14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(node17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNull(scope24);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "$0" + "'", str31, "$0");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "ScriptNode" + "'", str32, "ScriptNode");
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertNotNull(scriptNode35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(symbolList37);
        org.junit.Assert.assertNotNull(nodeSpliterator39);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "{\n}\n" + "'", str41, "{\n}\n");
        org.junit.Assert.assertNull(str42);
    }

    @Test
    public void test09864() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09864");
        com.google.javascript.rhino.head.ast.Jump jump4 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump4.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump8 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump4, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int11 = scriptNode10.getEndLineno();
        int int12 = scriptNode10.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList13 = scriptNode10.getChildScopes();
        com.google.javascript.rhino.head.Node node14 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump4, (com.google.javascript.rhino.head.Node) scriptNode10);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList15 = scriptNode10.getFunctions();
        functionNodeList15.clear();
        functionNodeList15.clear();
        com.google.javascript.rhino.head.ast.Jump jump22 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump22.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump26 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump22, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode28 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int29 = scriptNode28.getEndLineno();
        int int30 = scriptNode28.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList31 = scriptNode28.getChildScopes();
        com.google.javascript.rhino.head.Node node32 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump22, (com.google.javascript.rhino.head.Node) scriptNode28);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList33 = scriptNode28.getFunctions();
        java.util.Spliterator<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeSpliterator34 = functionNodeList33.spliterator();
        int int36 = functionNodeList33.indexOf((java.lang.Object) (byte) 10);
        boolean boolean37 = functionNodeList15.retainAll((java.util.Collection<com.google.javascript.rhino.head.ast.FunctionNode>) functionNodeList33);
        boolean boolean38 = functionNodeList15.isEmpty();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode40 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int41 = scriptNode40.getEndLineno();
        int int42 = scriptNode40.getBaseLineno();
        com.google.javascript.rhino.head.ast.Jump jump45 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode47 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int48 = scriptNode47.getEndLineno();
        int int49 = scriptNode47.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList50 = scriptNode47.getChildScopes();
        jump45.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode47);
        java.lang.String str52 = scriptNode47.debugPrint();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode40, (com.google.javascript.rhino.head.ast.Scope) scriptNode47);
        int int54 = scriptNode40.getBaseLineno();
        boolean boolean55 = functionNodeList15.equals((java.lang.Object) int54);
        java.util.Iterator<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeItor56 = functionNodeList15.iterator();
        functionNodeList15.clear();
        java.util.Spliterator<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeSpliterator58 = functionNodeList15.spliterator();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode59 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int60 = functionNode59.getLp();
        functionNode59.setLp((int) (short) 1);
        int int65 = functionNode59.getIntProp(4, 26);
        boolean boolean66 = functionNode59.hasChildren();
        java.lang.String str67 = functionNode59.getNextTempName();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode68 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode69 = functionNode68.getTop();
        com.google.javascript.rhino.head.ast.Name name70 = null;
        functionNode68.setFunctionName(name70);
        functionNode59.addChildScope((com.google.javascript.rhino.head.ast.Scope) functionNode68);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode73 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int74 = functionNode73.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode75 = functionNode73.getTop();
        boolean boolean76 = functionNode73.hasSideEffects();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode78 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int79 = scriptNode78.getEndLineno();
        int int80 = scriptNode78.getBaseLineno();
        com.google.javascript.rhino.head.ast.Jump jump83 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode85 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int86 = scriptNode85.getEndLineno();
        int int87 = scriptNode85.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList88 = scriptNode85.getChildScopes();
        jump83.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode85);
        java.lang.String str90 = scriptNode85.debugPrint();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode78, (com.google.javascript.rhino.head.ast.Scope) scriptNode85);
        com.google.javascript.rhino.head.ast.Scope scope92 = new com.google.javascript.rhino.head.ast.Scope();
        scriptNode85.target = scope92;
        functionNode73.addChildScope(scope92);
        boolean boolean95 = functionNode73.hasConsistentReturnUsage();
        functionNode59.addResumptionPoint((com.google.javascript.rhino.head.Node) functionNode73);
        java.lang.String str97 = functionNode73.getName();
        functionNode73.setRequiresActivation();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean99 = functionNodeList15.add(functionNode73);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNull(scopeList13);
        org.junit.Assert.assertNotNull(functionNodeList15);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertNull(scopeList31);
        org.junit.Assert.assertNotNull(functionNodeList33);
        org.junit.Assert.assertNotNull(functionNodeSpliterator34);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertNull(scopeList50);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str52, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(functionNodeItor56);
        org.junit.Assert.assertNotNull(functionNodeSpliterator58);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-1) + "'", int60 == (-1));
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 26 + "'", int65 == 26);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "$0" + "'", str67, "$0");
        org.junit.Assert.assertNotNull(scriptNode69);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + (-1) + "'", int74 == (-1));
        org.junit.Assert.assertNotNull(scriptNode75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + (-1) + "'", int79 == (-1));
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + (-1) + "'", int80 == (-1));
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + (-1) + "'", int86 == (-1));
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + (-1) + "'", int87 == (-1));
        org.junit.Assert.assertNull(scopeList88);
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str90, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + true + "'", boolean95 == true);
        org.junit.Assert.assertEquals("'" + str97 + "' != '" + "" + "'", str97, "");
    }

    @Test
    public void test09865() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09865");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        int int1 = scriptNode0.getEncodedSourceEnd();
        java.lang.String str3 = scriptNode0.toSource((int) (byte) 10);
        scriptNode0.setEncodedSourceEnd((int) (short) -1);
        com.google.javascript.rhino.head.ast.Jump jump8 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int11 = scriptNode10.getEndLineno();
        int int12 = scriptNode10.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList13 = scriptNode10.getChildScopes();
        jump8.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode10);
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor15 = scriptNode10.iterator();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode16 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int17 = functionNode16.getLp();
        functionNode16.setEncodedSource("");
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode10, (com.google.javascript.rhino.head.ast.Scope) functionNode16);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode21 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode22 = functionNode21.getTop();
        functionNode21.setParens((int) (byte) 1, (int) (short) 1);
        functionNode21.setEncodedSourceStart((-1));
        java.util.List<com.google.javascript.rhino.head.Node> nodeList28 = functionNode21.getResumptionPoints();
        com.google.javascript.rhino.head.ast.Scope scope30 = functionNode21.getDefiningScope("hi!");
        boolean boolean31 = functionNode21.isGetterOrSetter();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode32 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int33 = functionNode32.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode34 = functionNode32.getTop();
        com.google.javascript.rhino.head.ast.Name name35 = null;
        functionNode32.setFunctionName(name35);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode37 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode38 = functionNode37.getTop();
        functionNode32.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode37);
        int int40 = functionNode37.getRp();
        int int41 = functionNode37.getFunctionType();
        int int42 = functionNode21.addFunction(functionNode37);
        functionNode16.setCompilerData((java.lang.Object) functionNode37);
        functionNode16.setFunctionType(136);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode47 = new com.google.javascript.rhino.head.ast.FunctionNode(0);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode48 = functionNode47.getEnclosingFunction();
        com.google.javascript.rhino.head.Node node49 = functionNode47.target;
        functionNode47.setLineno((int) (byte) -1);
        functionNode16.setMemberExprNode((com.google.javascript.rhino.head.ast.AstNode) functionNode47);
        functionNode47.setBaseLineno(7);
        int int55 = functionNode47.getType();
        functionNode47.setLength(8);
        int int58 = functionNode47.getEndLineno();
        java.lang.String str59 = scriptNode0.toStringTree((com.google.javascript.rhino.head.ast.ScriptNode) functionNode47);
        com.google.javascript.rhino.head.Node node61 = functionNode47.setType((-802206969));
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-1) + "'", int1 == (-1));
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "                    {\n                    }\n" + "'", str3, "                    {\n                    }\n");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNull(scopeList13);
        org.junit.Assert.assertNotNull(nodeItor15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNotNull(scriptNode22);
        org.junit.Assert.assertNull(nodeList28);
        org.junit.Assert.assertNull(scope30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertNotNull(scriptNode34);
        org.junit.Assert.assertNotNull(scriptNode38);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertNull(functionNode48);
        org.junit.Assert.assertNull(node49);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 109 + "'", int55 == 109);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + (-1) + "'", int58 == (-1));
        org.junit.Assert.assertNull(str59);
        org.junit.Assert.assertNotNull(node61);
    }

    @Test
    public void test09866() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09866");
        com.google.javascript.rhino.head.ast.Name name1 = null;
        com.google.javascript.rhino.head.ast.FunctionNode functionNode2 = new com.google.javascript.rhino.head.ast.FunctionNode(17, name1);
        int int3 = functionNode2.getEncodedSourceEnd();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode4 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int5 = functionNode4.getLp();
        functionNode4.setEncodedSource("");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode8 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int9 = functionNode8.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = functionNode8.getTop();
        com.google.javascript.rhino.head.ast.Name name11 = null;
        functionNode8.setFunctionName(name11);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode13 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = functionNode13.getTop();
        functionNode8.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode13);
        int int16 = functionNode13.getRp();
        int int17 = functionNode13.getFunctionType();
        functionNode4.addParam((com.google.javascript.rhino.head.ast.AstNode) functionNode13);
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator19 = functionNode13.new NodeIterator();
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList20 = functionNode13.getStatements();
        com.google.javascript.rhino.head.ast.Jump jump23 = new com.google.javascript.rhino.head.ast.Jump((int) (short) 0);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode24 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int25 = functionNode24.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode26 = functionNode24.getTop();
        com.google.javascript.rhino.head.ast.Name name27 = null;
        functionNode24.setFunctionName(name27);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode29 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode30 = functionNode29.getTop();
        functionNode24.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode29);
        functionNode29.setIsExpressionClosure(true);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode35 = new com.google.javascript.rhino.head.ast.FunctionNode((int) (byte) 100);
        int int36 = functionNode29.addFunction(functionNode35);
        int int37 = jump23.compareTo((com.google.javascript.rhino.head.ast.AstNode) functionNode35);
        functionNode35.setEncodedSourceStart((int) '4');
        functionNode35.setLength(48);
        functionNode35.setFunctionType(19);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode45 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int46 = functionNode45.getLp();
        functionNode45.setEncodedSource("");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode49 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int50 = functionNode49.getLp();
        functionNode49.setEncodedSource("");
        functionNode49.flattenSymbolTable(false);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode55 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int56 = functionNode55.getLp();
        com.google.javascript.rhino.head.Node node58 = new com.google.javascript.rhino.head.Node((-1), (com.google.javascript.rhino.head.Node) functionNode45, (com.google.javascript.rhino.head.Node) functionNode49, (com.google.javascript.rhino.head.Node) functionNode55, (int) '#');
        boolean boolean59 = functionNode55.isGenerator();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode61 = new com.google.javascript.rhino.head.ast.FunctionNode((-1262414679));
        com.google.javascript.rhino.head.Token.CommentType commentType66 = com.google.javascript.rhino.head.Token.CommentType.HTML;
        com.google.javascript.rhino.head.ast.Comment comment68 = new com.google.javascript.rhino.head.ast.Comment(20, 1, commentType66, "109");
        java.lang.String str70 = comment68.toSource(19);
        java.lang.String str71 = comment68.getValue();
        com.google.javascript.rhino.head.Token.CommentType commentType72 = com.google.javascript.rhino.head.Token.CommentType.HTML;
        comment68.setCommentType(commentType72);
        com.google.javascript.rhino.head.ast.Comment comment75 = new com.google.javascript.rhino.head.ast.Comment(9, 6, commentType72, "                    ");
        functionNode61.setJsDocNode(comment75);
        com.google.javascript.rhino.head.Node node78 = new com.google.javascript.rhino.head.Node(25, (com.google.javascript.rhino.head.Node) functionNode35, (com.google.javascript.rhino.head.Node) functionNode55, (com.google.javascript.rhino.head.Node) functionNode61, (int) (short) 10);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList79 = functionNode55.getFunctions();
        java.util.Map<com.google.javascript.rhino.head.Node, int[]> nodeMap80 = functionNode55.getLiveLocals();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) functionNode13, (com.google.javascript.rhino.head.ast.Scope) functionNode55);
        functionNode2.replaceWith((com.google.javascript.rhino.head.ast.Scope) functionNode55);
        int int83 = functionNode55.getLineno();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(scriptNode10);
        org.junit.Assert.assertNotNull(scriptNode14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(astNodeList20);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNotNull(scriptNode26);
        org.junit.Assert.assertNotNull(scriptNode30);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1));
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + commentType66 + "' != '" + com.google.javascript.rhino.head.Token.CommentType.HTML + "'", commentType66.equals(com.google.javascript.rhino.head.Token.CommentType.HTML));
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "                                      109" + "'", str70, "                                      109");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "109" + "'", str71, "109");
        org.junit.Assert.assertTrue("'" + commentType72 + "' != '" + com.google.javascript.rhino.head.Token.CommentType.HTML + "'", commentType72.equals(com.google.javascript.rhino.head.Token.CommentType.HTML));
        org.junit.Assert.assertNotNull(functionNodeList79);
        org.junit.Assert.assertNull(nodeMap80);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + (-1) + "'", int83 == (-1));
    }

    @Test
    public void test09867() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09867");
        com.google.javascript.rhino.head.ast.Jump jump2 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode4 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int5 = scriptNode4.getEndLineno();
        int int6 = scriptNode4.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList7 = scriptNode4.getChildScopes();
        jump2.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode4);
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor9 = scriptNode4.iterator();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode10 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int11 = functionNode10.getLp();
        functionNode10.setEncodedSource("");
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode4, (com.google.javascript.rhino.head.ast.Scope) functionNode10);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode15 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode16 = functionNode15.getTop();
        functionNode15.setParens((int) (byte) 1, (int) (short) 1);
        functionNode15.setEncodedSourceStart((-1));
        java.util.List<com.google.javascript.rhino.head.Node> nodeList22 = functionNode15.getResumptionPoints();
        com.google.javascript.rhino.head.ast.Scope scope24 = functionNode15.getDefiningScope("hi!");
        boolean boolean25 = functionNode15.isGetterOrSetter();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode26 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int27 = functionNode26.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode28 = functionNode26.getTop();
        com.google.javascript.rhino.head.ast.Name name29 = null;
        functionNode26.setFunctionName(name29);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode31 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode32 = functionNode31.getTop();
        functionNode26.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode31);
        int int34 = functionNode31.getRp();
        int int35 = functionNode31.getFunctionType();
        int int36 = functionNode15.addFunction(functionNode31);
        functionNode10.setCompilerData((java.lang.Object) functionNode31);
        functionNode10.setFunctionType(136);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode41 = new com.google.javascript.rhino.head.ast.FunctionNode(0);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode42 = functionNode41.getEnclosingFunction();
        com.google.javascript.rhino.head.Node node43 = functionNode41.target;
        functionNode41.setLineno((int) (byte) -1);
        functionNode10.setMemberExprNode((com.google.javascript.rhino.head.ast.AstNode) functionNode41);
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.ast.Jump jump47 = functionNode41.getLoop();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNull(scopeList7);
        org.junit.Assert.assertNotNull(nodeItor9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(scriptNode16);
        org.junit.Assert.assertNull(nodeList22);
        org.junit.Assert.assertNull(scope24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(scriptNode28);
        org.junit.Assert.assertNotNull(scriptNode32);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertNull(functionNode42);
        org.junit.Assert.assertNull(node43);
    }

    @Test
    public void test09868() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09868");
        com.google.javascript.rhino.head.ast.Name name1 = null;
        com.google.javascript.rhino.head.ast.FunctionNode functionNode2 = new com.google.javascript.rhino.head.ast.FunctionNode((-727971506), name1);
    }

    @Test
    public void test09869() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09869");
        com.google.javascript.rhino.head.ast.RegExpLiteral regExpLiteral1 = new com.google.javascript.rhino.head.ast.RegExpLiteral((int) (short) 1);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode3 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode4 = functionNode3.getTop();
        functionNode3.setParens((int) (byte) 1, (int) (short) 1);
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor8 = functionNode3.iterator();
        regExpLiteral1.putProp(13, (java.lang.Object) functionNode3);
        functionNode3.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.AstNode astNode12 = functionNode3.getParent();
        com.google.javascript.rhino.head.ast.RegExpLiteral regExpLiteral14 = new com.google.javascript.rhino.head.ast.RegExpLiteral((-1262414679));
        functionNode3.addRegExp(regExpLiteral14);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode17 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int18 = scriptNode17.getEndLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode20 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int21 = scriptNode20.getEndLineno();
        scriptNode17.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode20);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode23 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int24 = functionNode23.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode25 = functionNode23.getTop();
        boolean boolean26 = functionNode23.hasSideEffects();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode28 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int29 = scriptNode28.getEndLineno();
        int int30 = scriptNode28.getBaseLineno();
        com.google.javascript.rhino.head.ast.Jump jump33 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode35 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int36 = scriptNode35.getEndLineno();
        int int37 = scriptNode35.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList38 = scriptNode35.getChildScopes();
        jump33.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode35);
        java.lang.String str40 = scriptNode35.debugPrint();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode28, (com.google.javascript.rhino.head.ast.Scope) scriptNode35);
        com.google.javascript.rhino.head.ast.Scope scope42 = new com.google.javascript.rhino.head.ast.Scope();
        scriptNode35.target = scope42;
        functionNode23.addChildScope(scope42);
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode20, (com.google.javascript.rhino.head.ast.Scope) functionNode23);
        int int46 = functionNode23.getFunctionCount();
        com.google.javascript.rhino.head.ast.Scope scope47 = functionNode23.getEnclosingScope();
        int int48 = functionNode23.getLp();
        int int49 = functionNode23.getType();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode51 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int52 = functionNode51.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode53 = functionNode51.getTop();
        boolean boolean54 = functionNode51.hasSideEffects();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList55 = functionNode51.getSymbols();
        functionNode51.setRp(5);
        functionNode51.setParens((int) '#', 24);
        com.google.javascript.rhino.head.ast.Jump jump62 = new com.google.javascript.rhino.head.ast.Jump(2, (com.google.javascript.rhino.head.Node) functionNode51, (int) 'a');
        com.google.javascript.rhino.head.ast.FunctionNode functionNode63 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int64 = functionNode63.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode65 = functionNode63.getTop();
        com.google.javascript.rhino.head.ast.Name name66 = null;
        functionNode63.setFunctionName(name66);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode68 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int69 = functionNode68.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode71 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        java.lang.String str72 = functionNode68.toStringTree(scriptNode71);
        functionNode68.setFunctionIsGetter();
        int int74 = functionNode63.addFunction(functionNode68);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList75 = functionNode63.getSymbols();
        functionNode51.setSymbols(symbolList75);
        functionNode23.setSymbols(symbolList75);
        functionNode3.setSymbols(symbolList75);
        org.junit.Assert.assertNotNull(scriptNode4);
        org.junit.Assert.assertNotNull(nodeItor8);
        org.junit.Assert.assertNull(astNode12);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertNotNull(scriptNode25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertNull(scopeList38);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str40, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertNull(scope47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 109 + "'", int49 == 109);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertNotNull(scriptNode53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(symbolList55);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + (-1) + "'", int64 == (-1));
        org.junit.Assert.assertNotNull(scriptNode65);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + (-1) + "'", int69 == (-1));
        org.junit.Assert.assertNull(str72);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 0 + "'", int74 == 0);
        org.junit.Assert.assertNotNull(symbolList75);
    }

    @Test
    public void test09870() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09870");
        com.google.javascript.rhino.head.ast.Jump jump4 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump4.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump8 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump4, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int11 = scriptNode10.getEndLineno();
        int int12 = scriptNode10.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList13 = scriptNode10.getChildScopes();
        com.google.javascript.rhino.head.Node node14 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump4, (com.google.javascript.rhino.head.Node) scriptNode10);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList15 = scriptNode10.getFunctions();
        boolean boolean16 = functionNodeList15.isEmpty();
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList19 = functionNodeList15.subList((int) (byte) 0, 0);
        com.google.javascript.rhino.head.ast.Jump jump23 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump23.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump27 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump23, 0);
        com.google.javascript.rhino.head.ast.Jump jump31 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump31.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump35 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump31, 0);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode36 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int37 = functionNode36.getLp();
        functionNode36.setEncodedSource("");
        functionNode36.flattenSymbolTable(false);
        jump23.addChildAfter((com.google.javascript.rhino.head.Node) jump31, (com.google.javascript.rhino.head.Node) functionNode36);
        boolean boolean43 = functionNodeList15.equals((java.lang.Object) jump31);
        int int46 = jump31.getIntProp((-330954035), 1590262715);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNull(scopeList13);
        org.junit.Assert.assertNotNull(functionNodeList15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(functionNodeList19);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 1590262715 + "'", int46 == 1590262715);
    }

    @Test
    public void test09871() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09871");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 10);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode2 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode3 = functionNode2.getTop();
        functionNode2.setParens((int) (byte) 1, (int) (short) 1);
        functionNode2.setEncodedSourceStart((-1));
        functionNode2.setFunctionIsGetter();
        scope1.addChildToFront((com.google.javascript.rhino.head.Node) functionNode2);
        functionNode2.setRp(19);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int15 = scriptNode14.getEndLineno();
        int int16 = scriptNode14.getBaseLineno();
        com.google.javascript.rhino.head.ast.Jump jump19 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode21 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int22 = scriptNode21.getEndLineno();
        int int23 = scriptNode21.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList24 = scriptNode21.getChildScopes();
        jump19.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode21);
        java.lang.String str26 = scriptNode21.debugPrint();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode14, (com.google.javascript.rhino.head.ast.Scope) scriptNode21);
        com.google.javascript.rhino.head.ast.Scope scope28 = new com.google.javascript.rhino.head.ast.Scope();
        scriptNode21.target = scope28;
        java.lang.String str30 = functionNode2.toStringTree(scriptNode21);
        java.lang.String str32 = scriptNode21.toSource((int) (short) 10);
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap33 = scriptNode21.getSymbolTable();
        int int34 = strMap33.size();
        com.google.javascript.rhino.head.ast.Jump jump39 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump39.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump43 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump39, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode45 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int46 = scriptNode45.getEndLineno();
        int int47 = scriptNode45.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList48 = scriptNode45.getChildScopes();
        com.google.javascript.rhino.head.Node node49 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump39, (com.google.javascript.rhino.head.Node) scriptNode45);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList50 = scriptNode45.getFunctions();
        functionNodeList50.clear();
        functionNodeList50.clear();
        com.google.javascript.rhino.head.ast.Jump jump57 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump57.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump61 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump57, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode63 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int64 = scriptNode63.getEndLineno();
        int int65 = scriptNode63.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList66 = scriptNode63.getChildScopes();
        com.google.javascript.rhino.head.Node node67 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump57, (com.google.javascript.rhino.head.Node) scriptNode63);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList68 = scriptNode63.getFunctions();
        java.util.Spliterator<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeSpliterator69 = functionNodeList68.spliterator();
        int int71 = functionNodeList68.indexOf((java.lang.Object) (byte) 10);
        boolean boolean72 = functionNodeList50.retainAll((java.util.Collection<com.google.javascript.rhino.head.ast.FunctionNode>) functionNodeList68);
        boolean boolean73 = strMap33.containsKey((java.lang.Object) functionNodeList50);
        boolean boolean75 = strMap33.containsKey((java.lang.Object) 1579347477);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode76 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int77 = functionNode76.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode79 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        java.lang.String str80 = functionNode76.toStringTree(scriptNode79);
        functionNode76.setFunctionIsGetter();
        com.google.javascript.rhino.head.ast.AstNode astNode82 = functionNode76.getBody();
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList83 = functionNode76.getParams();
        boolean boolean84 = strMap33.containsKey((java.lang.Object) astNodeList83);
        strMap33.clear();
        java.util.Collection<com.google.javascript.rhino.head.ast.Symbol> symbolCollection86 = strMap33.values();
        com.google.javascript.rhino.head.ast.Symbol symbol87 = new com.google.javascript.rhino.head.ast.Symbol();
        symbol87.setIndex(6);
        java.lang.String str90 = symbol87.getName();
        boolean boolean91 = strMap33.containsValue((java.lang.Object) str90);
        org.junit.Assert.assertNotNull(scriptNode3);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNull(scopeList24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str26, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "                    {\n                    }\n" + "'", str32, "                    {\n                    }\n");
        org.junit.Assert.assertNotNull(strMap33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertNull(scopeList48);
        org.junit.Assert.assertNotNull(functionNodeList50);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + (-1) + "'", int64 == (-1));
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + (-1) + "'", int65 == (-1));
        org.junit.Assert.assertNull(scopeList66);
        org.junit.Assert.assertNotNull(functionNodeList68);
        org.junit.Assert.assertNotNull(functionNodeSpliterator69);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + (-1) + "'", int71 == (-1));
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + (-1) + "'", int77 == (-1));
        org.junit.Assert.assertNull(str80);
        org.junit.Assert.assertNull(astNode82);
        org.junit.Assert.assertNotNull(astNodeList83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNotNull(symbolCollection86);
        org.junit.Assert.assertNull(str90);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
    }

    @Test
    public void test09872() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09872");
        com.google.javascript.rhino.head.ast.RegExpLiteral regExpLiteral5 = new com.google.javascript.rhino.head.ast.RegExpLiteral(12, 10);
        regExpLiteral5.putIntProp((int) (byte) 10, 109);
        com.google.javascript.rhino.head.Node node10 = new com.google.javascript.rhino.head.Node(35, (com.google.javascript.rhino.head.Node) regExpLiteral5, 25);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode11 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int12 = functionNode11.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode13 = functionNode11.getTop();
        boolean boolean14 = functionNode11.hasSideEffects();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList15 = functionNode11.getSymbols();
        functionNode11.setRp(5);
        com.google.javascript.rhino.head.ast.Jump jump19 = new com.google.javascript.rhino.head.ast.Jump((int) (short) 0);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode20 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int21 = functionNode20.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode22 = functionNode20.getTop();
        com.google.javascript.rhino.head.ast.Name name23 = null;
        functionNode20.setFunctionName(name23);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode25 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode26 = functionNode25.getTop();
        functionNode20.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode25);
        functionNode25.setIsExpressionClosure(true);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode31 = new com.google.javascript.rhino.head.ast.FunctionNode((int) (byte) 100);
        int int32 = functionNode25.addFunction(functionNode31);
        int int33 = jump19.compareTo((com.google.javascript.rhino.head.ast.AstNode) functionNode31);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode35 = new com.google.javascript.rhino.head.ast.FunctionNode(0);
        com.google.javascript.rhino.head.ast.Jump jump41 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump41.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump45 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump41, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode47 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int48 = scriptNode47.getEndLineno();
        int int49 = scriptNode47.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList50 = scriptNode47.getChildScopes();
        com.google.javascript.rhino.head.Node node51 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump41, (com.google.javascript.rhino.head.Node) scriptNode47);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList52 = scriptNode47.getFunctions();
        functionNodeList52.clear();
        com.google.javascript.rhino.head.ast.Jump jump58 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump58.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump62 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump58, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode64 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int65 = scriptNode64.getEndLineno();
        int int66 = scriptNode64.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList67 = scriptNode64.getChildScopes();
        com.google.javascript.rhino.head.Node node68 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump58, (com.google.javascript.rhino.head.Node) scriptNode64);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList69 = scriptNode64.getFunctions();
        boolean boolean70 = functionNodeList52.removeAll((java.util.Collection<com.google.javascript.rhino.head.ast.FunctionNode>) functionNodeList69);
        functionNode35.putProp(20, (java.lang.Object) functionNodeList52);
        int int72 = functionNode31.addFunction(functionNode35);
        boolean boolean73 = functionNode35.isGenerator();
        int int74 = functionNode11.addFunction(functionNode35);
        com.google.javascript.rhino.head.Node node76 = new com.google.javascript.rhino.head.Node(9, (com.google.javascript.rhino.head.Node) regExpLiteral5, (com.google.javascript.rhino.head.Node) functionNode11, (-18802601));
        com.google.javascript.rhino.head.ast.FunctionNode functionNode78 = new com.google.javascript.rhino.head.ast.FunctionNode(13);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode79 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode80 = functionNode79.getTop();
        functionNode79.setParens((int) (byte) 1, (int) (short) 1);
        functionNode78.addChildScope((com.google.javascript.rhino.head.ast.Scope) functionNode79);
        int int85 = functionNode79.getFunctionType();
        com.google.javascript.rhino.head.Node node87 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) functionNode11, (com.google.javascript.rhino.head.Node) functionNode79, 12802714);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str89 = functionNode79.getRegexpFlags(72494863);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(scriptNode13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(symbolList15);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertNotNull(scriptNode22);
        org.junit.Assert.assertNotNull(scriptNode26);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertNull(scopeList50);
        org.junit.Assert.assertNotNull(functionNodeList52);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + (-1) + "'", int65 == (-1));
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + (-1) + "'", int66 == (-1));
        org.junit.Assert.assertNull(scopeList67);
        org.junit.Assert.assertNotNull(functionNodeList69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 0 + "'", int72 == 0);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 0 + "'", int74 == 0);
        org.junit.Assert.assertNotNull(scriptNode80);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 0 + "'", int85 == 0);
    }

    @Test
    public void test09873() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09873");
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 10);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode3 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode4 = functionNode3.getTop();
        functionNode3.setParens((int) (byte) 1, (int) (short) 1);
        functionNode3.setEncodedSourceStart((-1));
        functionNode3.setFunctionIsGetter();
        scope2.addChildToFront((com.google.javascript.rhino.head.Node) functionNode3);
        com.google.javascript.rhino.head.Node node13 = new com.google.javascript.rhino.head.Node((int) (byte) 100, (com.google.javascript.rhino.head.Node) functionNode3, 19);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode14 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int15 = functionNode14.getLp();
        functionNode14.setEncodedSource("");
        functionNode14.flattenSymbolTable(false);
        java.lang.String str20 = functionNode14.getName();
        functionNode14.setFunctionIsGetter();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode22 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int23 = functionNode22.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode24 = functionNode22.getTop();
        com.google.javascript.rhino.head.Node node25 = functionNode22.getLastSibling();
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList26 = functionNode22.getParams();
        functionNode14.setParams(astNodeList26);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode28 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int29 = functionNode28.getLp();
        functionNode28.setLp((int) (short) 1);
        int int34 = functionNode28.getIntProp(4, 26);
        functionNode28.flattenSymbolTable(true);
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList37 = functionNode28.getParams();
        functionNode14.setParams(astNodeList37);
        functionNode14.setEndLineno(12);
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor41 = functionNode14.iterator();
        int int42 = functionNode14.getLineno();
        functionNode3.addChildToBack((com.google.javascript.rhino.head.Node) functionNode14);
        int int44 = functionNode14.getEncodedSourceStart();
        int int45 = functionNode14.getBaseLineno();
        int int46 = functionNode14.getRp();
        functionNode14.setEncodedSourceBounds((-330954035), (-133799382));
        com.google.javascript.rhino.head.ast.FunctionNode functionNode50 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int51 = functionNode50.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode52 = functionNode50.getTop();
        com.google.javascript.rhino.head.ast.Name name53 = null;
        functionNode50.setFunctionName(name53);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode55 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode56 = functionNode55.getTop();
        functionNode50.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode55);
        functionNode55.setIsExpressionClosure(true);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode61 = new com.google.javascript.rhino.head.ast.FunctionNode((int) (byte) 100);
        int int62 = functionNode55.addFunction(functionNode61);
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList63 = functionNode55.getStatements();
        int int64 = functionNode55.getLength();
        boolean boolean65 = functionNode14.isParam((com.google.javascript.rhino.head.ast.AstNode) functionNode55);
        org.junit.Assert.assertNotNull(scriptNode4);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNotNull(scriptNode24);
        org.junit.Assert.assertNotNull(node25);
        org.junit.Assert.assertNotNull(astNodeList26);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 26 + "'", int34 == 26);
        org.junit.Assert.assertNotNull(astNodeList37);
        org.junit.Assert.assertNotNull(nodeItor41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1));
        org.junit.Assert.assertNotNull(scriptNode52);
        org.junit.Assert.assertNotNull(scriptNode56);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 0 + "'", int62 == 0);
        org.junit.Assert.assertNotNull(astNodeList63);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 1 + "'", int64 == 1);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
    }

    @Test
    public void test09874() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09874");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode0 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 10);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode3 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode4 = functionNode3.getTop();
        functionNode3.setParens((int) (byte) 1, (int) (short) 1);
        functionNode3.setEncodedSourceStart((-1));
        functionNode3.setFunctionIsGetter();
        scope2.addChildToFront((com.google.javascript.rhino.head.Node) functionNode3);
        functionNode0.setBody((com.google.javascript.rhino.head.ast.AstNode) functionNode3);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode13 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = functionNode13.getTop();
        functionNode13.setParens((int) (byte) 1, (int) (short) 1);
        functionNode13.setEncodedSourceStart((-1));
        java.util.List<com.google.javascript.rhino.head.Node> nodeList20 = functionNode13.getResumptionPoints();
        int int21 = functionNode13.getLp();
        functionNode0.setBody((com.google.javascript.rhino.head.ast.AstNode) functionNode13);
        com.google.javascript.rhino.head.Node node23 = functionNode13.getNext();
        functionNode13.clearParentScope();
        boolean boolean25 = functionNode13.hasSideEffects();
        boolean boolean26 = functionNode13.requiresActivation();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode29 = new com.google.javascript.rhino.head.ast.FunctionNode(0);
        int int30 = functionNode29.getBaseLineno();
        boolean boolean31 = functionNode29.isGetter();
        com.google.javascript.rhino.head.ast.RegExpLiteral regExpLiteral33 = new com.google.javascript.rhino.head.ast.RegExpLiteral((int) (short) 1);
        regExpLiteral33.setFlags("-1\tSCRIPT -1 1\n");
        java.lang.String str36 = regExpLiteral33.getValue();
        regExpLiteral33.setFlags("52");
        functionNode29.addChildrenToFront((com.google.javascript.rhino.head.Node) regExpLiteral33);
        com.google.javascript.rhino.head.Node node40 = new com.google.javascript.rhino.head.Node(1, (com.google.javascript.rhino.head.Node) regExpLiteral33);
        java.lang.String str41 = regExpLiteral33.shortName();
        functionNode13.addRegExp(regExpLiteral33);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str44 = functionNode13.getParamOrVarName(24);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(scriptNode4);
        org.junit.Assert.assertNotNull(scriptNode14);
        org.junit.Assert.assertNull(nodeList20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertNull(node23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "RegExpLiteral" + "'", str41, "RegExpLiteral");
    }

    @Test
    public void test09875() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09875");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 10);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode2 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode3 = functionNode2.getTop();
        functionNode2.setParens((int) (byte) 1, (int) (short) 1);
        functionNode2.setEncodedSourceStart((-1));
        functionNode2.setFunctionIsGetter();
        scope1.addChildToFront((com.google.javascript.rhino.head.Node) functionNode2);
        functionNode2.setRp(19);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int15 = scriptNode14.getEndLineno();
        int int16 = scriptNode14.getBaseLineno();
        com.google.javascript.rhino.head.ast.Jump jump19 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode21 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int22 = scriptNode21.getEndLineno();
        int int23 = scriptNode21.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList24 = scriptNode21.getChildScopes();
        jump19.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode21);
        java.lang.String str26 = scriptNode21.debugPrint();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode14, (com.google.javascript.rhino.head.ast.Scope) scriptNode21);
        com.google.javascript.rhino.head.ast.Scope scope28 = new com.google.javascript.rhino.head.ast.Scope();
        scriptNode21.target = scope28;
        java.lang.String str30 = functionNode2.toStringTree(scriptNode21);
        java.lang.String str32 = scriptNode21.toSource((int) (short) 10);
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap33 = scriptNode21.getSymbolTable();
        int int34 = strMap33.size();
        com.google.javascript.rhino.head.ast.Jump jump39 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump39.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump43 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump39, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode45 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int46 = scriptNode45.getEndLineno();
        int int47 = scriptNode45.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList48 = scriptNode45.getChildScopes();
        com.google.javascript.rhino.head.Node node49 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump39, (com.google.javascript.rhino.head.Node) scriptNode45);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList50 = scriptNode45.getFunctions();
        functionNodeList50.clear();
        functionNodeList50.clear();
        com.google.javascript.rhino.head.ast.Jump jump57 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump57.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump61 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump57, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode63 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int64 = scriptNode63.getEndLineno();
        int int65 = scriptNode63.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList66 = scriptNode63.getChildScopes();
        com.google.javascript.rhino.head.Node node67 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump57, (com.google.javascript.rhino.head.Node) scriptNode63);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList68 = scriptNode63.getFunctions();
        java.util.Spliterator<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeSpliterator69 = functionNodeList68.spliterator();
        int int71 = functionNodeList68.indexOf((java.lang.Object) (byte) 10);
        boolean boolean72 = functionNodeList50.retainAll((java.util.Collection<com.google.javascript.rhino.head.ast.FunctionNode>) functionNodeList68);
        boolean boolean73 = strMap33.containsKey((java.lang.Object) functionNodeList50);
        java.util.Collection<com.google.javascript.rhino.head.ast.Symbol> symbolCollection74 = strMap33.values();
        com.google.javascript.rhino.head.Node node76 = com.google.javascript.rhino.head.Node.newNumber((double) '#');
        com.google.javascript.rhino.head.ast.Symbol symbol77 = strMap33.get((java.lang.Object) '#');
        java.util.Set<java.lang.String> strSet78 = strMap33.keySet();
        java.util.Set<java.lang.String> strSet79 = strMap33.keySet();
        java.util.Set<java.util.Map.Entry<java.lang.String, com.google.javascript.rhino.head.ast.Symbol>> strEntrySet80 = strMap33.entrySet();
        org.junit.Assert.assertNotNull(scriptNode3);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNull(scopeList24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str26, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "                    {\n                    }\n" + "'", str32, "                    {\n                    }\n");
        org.junit.Assert.assertNotNull(strMap33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertNull(scopeList48);
        org.junit.Assert.assertNotNull(functionNodeList50);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + (-1) + "'", int64 == (-1));
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + (-1) + "'", int65 == (-1));
        org.junit.Assert.assertNull(scopeList66);
        org.junit.Assert.assertNotNull(functionNodeList68);
        org.junit.Assert.assertNotNull(functionNodeSpliterator69);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + (-1) + "'", int71 == (-1));
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(symbolCollection74);
        org.junit.Assert.assertNotNull(node76);
        org.junit.Assert.assertNull(symbol77);
        org.junit.Assert.assertNotNull(strSet78);
        org.junit.Assert.assertNotNull(strSet79);
        org.junit.Assert.assertNotNull(strEntrySet80);
    }

    @Test
    public void test09876() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09876");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode1 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int2 = functionNode1.getLp();
        functionNode1.setEncodedSource("");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode5 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int6 = functionNode5.getLp();
        functionNode5.setEncodedSource("");
        functionNode5.flattenSymbolTable(false);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode11 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int12 = functionNode11.getLp();
        com.google.javascript.rhino.head.Node node14 = new com.google.javascript.rhino.head.Node((-1), (com.google.javascript.rhino.head.Node) functionNode1, (com.google.javascript.rhino.head.Node) functionNode5, (com.google.javascript.rhino.head.Node) functionNode11, (int) '#');
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList15 = functionNode1.getChildScopes();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode16 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int17 = functionNode16.getLp();
        functionNode16.setIsExpressionClosure(false);
        com.google.javascript.rhino.head.ast.Scope scope20 = functionNode16.getParentScope();
        int int21 = functionNode16.getFunctionType();
        functionNode1.replaceWith((com.google.javascript.rhino.head.ast.Scope) functionNode16);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode23 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int24 = functionNode23.getLp();
        functionNode23.setEncodedSource("");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode27 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.Scope scope29 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 10);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode30 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode31 = functionNode30.getTop();
        functionNode30.setParens((int) (byte) 1, (int) (short) 1);
        functionNode30.setEncodedSourceStart((-1));
        functionNode30.setFunctionIsGetter();
        scope29.addChildToFront((com.google.javascript.rhino.head.Node) functionNode30);
        functionNode27.setBody((com.google.javascript.rhino.head.ast.AstNode) functionNode30);
        int int40 = functionNode23.addFunction(functionNode27);
        java.lang.Object obj41 = functionNode27.getCompilerData();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode43 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int44 = scriptNode43.getEndLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode46 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int47 = scriptNode46.getEndLineno();
        scriptNode43.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode46);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode49 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int50 = functionNode49.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode51 = functionNode49.getTop();
        boolean boolean52 = functionNode49.hasSideEffects();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode54 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int55 = scriptNode54.getEndLineno();
        int int56 = scriptNode54.getBaseLineno();
        com.google.javascript.rhino.head.ast.Jump jump59 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode61 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int62 = scriptNode61.getEndLineno();
        int int63 = scriptNode61.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList64 = scriptNode61.getChildScopes();
        jump59.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode61);
        java.lang.String str66 = scriptNode61.debugPrint();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode54, (com.google.javascript.rhino.head.ast.Scope) scriptNode61);
        com.google.javascript.rhino.head.ast.Scope scope68 = new com.google.javascript.rhino.head.ast.Scope();
        scriptNode61.target = scope68;
        functionNode49.addChildScope(scope68);
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode46, (com.google.javascript.rhino.head.ast.Scope) functionNode49);
        int int72 = functionNode49.getFunctionCount();
        int int73 = functionNode49.getLineno();
        int int74 = functionNode49.getAbsolutePosition();
        java.lang.String str75 = functionNode27.toStringTree((com.google.javascript.rhino.head.ast.ScriptNode) functionNode49);
        int int76 = functionNode1.addFunction(functionNode27);
        int int77 = functionNode1.getEndLineno();
        functionNode1.setFunctionIsSetter();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNull(scopeList15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNull(scope20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertNotNull(scriptNode31);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertNull(obj41);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertNotNull(scriptNode51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1));
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1));
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + (-1) + "'", int62 == (-1));
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + (-1) + "'", int63 == (-1));
        org.junit.Assert.assertNull(scopeList64);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str66, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 0 + "'", int72 == 0);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + (-1) + "'", int73 == (-1));
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + (-1) + "'", int74 == (-1));
        org.junit.Assert.assertNull(str75);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 0 + "'", int76 == 0);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + (-1) + "'", int77 == (-1));
    }

    @Test
    public void test09877() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09877");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode0 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int1 = functionNode0.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = functionNode0.getTop();
        boolean boolean3 = functionNode0.hasSideEffects();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList4 = functionNode0.getSymbols();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = new com.google.javascript.rhino.head.ast.ScriptNode();
        int int6 = scriptNode5.getEncodedSourceEnd();
        java.lang.String str8 = scriptNode5.toSource((int) (byte) 10);
        scriptNode5.setEncodedSourceEnd((int) (short) -1);
        java.lang.String str11 = functionNode0.toStringTree(scriptNode5);
        functionNode0.setRequiresActivation();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode13 = functionNode0.getTop();
        boolean boolean14 = scriptNode13.hasSideEffects();
        scriptNode13.setEncodedSourceEnd(108998301);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-1) + "'", int1 == (-1));
        org.junit.Assert.assertNotNull(scriptNode2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(symbolList4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "                    {\n                    }\n" + "'", str8, "                    {\n                    }\n");
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(scriptNode13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
    }

    @Test
    public void test09878() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09878");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode1 = new com.google.javascript.rhino.head.ast.FunctionNode(0);
        int int2 = functionNode1.getBaseLineno();
        boolean boolean3 = functionNode1.isGetter();
        com.google.javascript.rhino.head.ast.RegExpLiteral regExpLiteral5 = new com.google.javascript.rhino.head.ast.RegExpLiteral((int) (short) 1);
        regExpLiteral5.setFlags("-1\tSCRIPT -1 1\n");
        java.lang.String str8 = regExpLiteral5.getValue();
        regExpLiteral5.setFlags("52");
        functionNode1.addChildrenToFront((com.google.javascript.rhino.head.Node) regExpLiteral5);
        boolean boolean12 = functionNode1.isGetterOrSetter();
        int int13 = functionNode1.getRegexpCount();
        com.google.javascript.rhino.head.ast.RegExpLiteral regExpLiteral16 = new com.google.javascript.rhino.head.ast.RegExpLiteral(12, 10);
        functionNode1.addRegExp(regExpLiteral16);
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator18 = functionNode1.spliterator();
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList19 = functionNode1.getParams();
        com.google.javascript.rhino.head.ast.Name name20 = functionNode1.getFunctionName();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(nodeSpliterator18);
        org.junit.Assert.assertNotNull(astNodeList19);
        org.junit.Assert.assertNull(name20);
    }

    @Test
    public void test09879() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09879");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode0 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int1 = functionNode0.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = functionNode0.getTop();
        com.google.javascript.rhino.head.ast.Name name3 = null;
        functionNode0.setFunctionName(name3);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode5 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = functionNode5.getTop();
        functionNode0.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode5);
        int int8 = functionNode5.getRp();
        java.lang.String str9 = functionNode5.getSourceName();
        functionNode5.setParens(14, (int) '#');
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList13 = functionNode5.getFunctions();
        // The following exception was thrown during execution in test generation
        try {
            boolean[] booleanArray14 = functionNode5.getParamAndVarConst();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-1) + "'", int1 == (-1));
        org.junit.Assert.assertNotNull(scriptNode2);
        org.junit.Assert.assertNotNull(scriptNode6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(functionNodeList13);
    }

    @Test
    public void test09880() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09880");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode0 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int1 = functionNode0.getLp();
        functionNode0.setEncodedSource("");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode4 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int5 = functionNode4.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = functionNode4.getTop();
        com.google.javascript.rhino.head.ast.Name name7 = null;
        functionNode4.setFunctionName(name7);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode9 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = functionNode9.getTop();
        functionNode4.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode9);
        int int12 = functionNode9.getRp();
        int int13 = functionNode9.getFunctionType();
        functionNode0.addParam((com.google.javascript.rhino.head.ast.AstNode) functionNode9);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode15 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int16 = functionNode15.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode17 = functionNode15.getTop();
        com.google.javascript.rhino.head.Node node18 = functionNode15.getLastSibling();
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList19 = functionNode15.getParams();
        functionNode0.setParams(astNodeList19);
        functionNode0.setIsExpressionClosure(true);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode23 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int24 = functionNode23.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode25 = functionNode23.getTop();
        com.google.javascript.rhino.head.ast.Name name26 = null;
        functionNode23.setFunctionName(name26);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode28 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode29 = functionNode28.getTop();
        functionNode23.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode28);
        int int31 = functionNode28.getRp();
        functionNode28.setParens(11, 2);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode36 = new com.google.javascript.rhino.head.ast.FunctionNode((-1));
        int int37 = functionNode28.addFunction(functionNode36);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode39 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int40 = scriptNode39.getEndLineno();
        int int41 = scriptNode39.getBaseLineno();
        scriptNode39.removeProp(0);
        scriptNode39.setEncodedSourceEnd(19);
        java.lang.String str46 = scriptNode39.toString();
        int[] intArray48 = new int[] { 26 };
        functionNode28.addLiveLocals((com.google.javascript.rhino.head.Node) scriptNode39, intArray48);
        com.google.javascript.rhino.head.Node node51 = scriptNode39.setType((int) (short) 0);
        java.lang.String str53 = scriptNode39.toSource(15);
        functionNode0.setMemberExprNode((com.google.javascript.rhino.head.ast.AstNode) scriptNode39);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode55 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int56 = functionNode55.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode57 = functionNode55.getTop();
        com.google.javascript.rhino.head.ast.Name name58 = null;
        functionNode55.setFunctionName(name58);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode60 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int61 = functionNode60.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode63 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        java.lang.String str64 = functionNode60.toStringTree(scriptNode63);
        functionNode60.setFunctionIsGetter();
        int int66 = functionNode55.addFunction(functionNode60);
        com.google.javascript.rhino.head.ast.Jump jump71 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump71.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump75 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump71, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode77 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int78 = scriptNode77.getEndLineno();
        int int79 = scriptNode77.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList80 = scriptNode77.getChildScopes();
        com.google.javascript.rhino.head.Node node81 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump71, (com.google.javascript.rhino.head.Node) scriptNode77);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList82 = scriptNode77.getFunctions();
        int int83 = scriptNode77.getPosition();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList84 = scriptNode77.getChildScopes();
        scriptNode77.flattenSymbolTable(false);
        functionNode55.setParentScope((com.google.javascript.rhino.head.ast.Scope) scriptNode77);
        scriptNode39.replaceWith((com.google.javascript.rhino.head.ast.Scope) scriptNode77);
        com.google.javascript.rhino.head.ast.Scope scope89 = null;
        scriptNode77.replaceWith(scope89);
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.ast.Jump jump91 = scriptNode77.getJumpStatement();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-1) + "'", int1 == (-1));
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(scriptNode6);
        org.junit.Assert.assertNotNull(scriptNode10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(scriptNode17);
        org.junit.Assert.assertNotNull(node18);
        org.junit.Assert.assertNotNull(astNodeList19);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertNotNull(scriptNode25);
        org.junit.Assert.assertNotNull(scriptNode29);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "136" + "'", str46, "136");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[26]");
        org.junit.Assert.assertNotNull(node51);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "                              {\n                              }\n" + "'", str53, "                              {\n                              }\n");
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1));
        org.junit.Assert.assertNotNull(scriptNode57);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + (-1) + "'", int61 == (-1));
        org.junit.Assert.assertNull(str64);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 0 + "'", int66 == 0);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + (-1) + "'", int78 == (-1));
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + (-1) + "'", int79 == (-1));
        org.junit.Assert.assertNull(scopeList80);
        org.junit.Assert.assertNotNull(functionNodeList82);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + (-1) + "'", int83 == (-1));
        org.junit.Assert.assertNull(scopeList84);
    }

    @Test
    public void test09881() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09881");
        com.google.javascript.rhino.head.ast.Jump jump5 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump5.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump9 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump5, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int12 = scriptNode11.getEndLineno();
        int int13 = scriptNode11.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList14 = scriptNode11.getChildScopes();
        com.google.javascript.rhino.head.Node node15 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump5, (com.google.javascript.rhino.head.Node) scriptNode11);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode17 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int18 = scriptNode17.getEndLineno();
        com.google.javascript.rhino.head.ast.RegExpLiteral regExpLiteral20 = new com.google.javascript.rhino.head.ast.RegExpLiteral((int) (short) 1);
        java.lang.String str22 = regExpLiteral20.toSource((int) (byte) 10);
        regExpLiteral20.setFlags("-1\tSCRIPT -1 1\n");
        regExpLiteral20.removeProp(8);
        com.google.javascript.rhino.head.Node node28 = new com.google.javascript.rhino.head.Node(10, node15, (com.google.javascript.rhino.head.Node) scriptNode17, (com.google.javascript.rhino.head.Node) regExpLiteral20, 3);
        regExpLiteral20.setFlags("$0");
        java.lang.String str32 = regExpLiteral20.toSource(4);
        java.lang.String str34 = regExpLiteral20.toSource((-952910496));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNull(scopeList14);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "                    /null/" + "'", str22, "                    /null/");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "        /null/$0" + "'", str32, "        /null/$0");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "/null/$0" + "'", str34, "/null/$0");
    }

    @Test
    public void test09882() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09882");
        com.google.javascript.rhino.head.ast.Jump jump3 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump3.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump7 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump3, 0);
        com.google.javascript.rhino.head.ast.Jump jump11 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump11.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump15 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump11, 0);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode16 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int17 = functionNode16.getLp();
        functionNode16.setEncodedSource("");
        functionNode16.flattenSymbolTable(false);
        jump3.addChildAfter((com.google.javascript.rhino.head.Node) jump11, (com.google.javascript.rhino.head.Node) functionNode16);
        com.google.javascript.rhino.head.Node node23 = functionNode16.target;
        boolean boolean24 = functionNode16.hasConsistentReturnUsage();
        com.google.javascript.rhino.head.ast.Name name25 = functionNode16.getFunctionName();
        com.google.javascript.rhino.head.ast.Name name26 = functionNode16.getFunctionName();
        functionNode16.setFunctionType(136);
        com.google.javascript.rhino.head.ast.RegExpLiteral regExpLiteral30 = new com.google.javascript.rhino.head.ast.RegExpLiteral((int) (short) 1);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode32 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode33 = functionNode32.getTop();
        functionNode32.setParens((int) (byte) 1, (int) (short) 1);
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor37 = functionNode32.iterator();
        regExpLiteral30.putProp(13, (java.lang.Object) functionNode32);
        functionNode16.addResumptionPoint((com.google.javascript.rhino.head.Node) regExpLiteral30);
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor40 = null;
        // The following exception was thrown during execution in test generation
        try {
            regExpLiteral30.visit(nodeVisitor40);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNull(node23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(name25);
        org.junit.Assert.assertNull(name26);
        org.junit.Assert.assertNotNull(scriptNode33);
        org.junit.Assert.assertNotNull(nodeItor37);
    }

    @Test
    public void test09883() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09883");
        com.google.javascript.rhino.head.ast.Jump jump1 = new com.google.javascript.rhino.head.ast.Jump((int) (short) 0);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode2 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int3 = functionNode2.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode4 = functionNode2.getTop();
        com.google.javascript.rhino.head.ast.Name name5 = null;
        functionNode2.setFunctionName(name5);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode7 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode8 = functionNode7.getTop();
        functionNode2.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode7);
        functionNode7.setIsExpressionClosure(true);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode13 = new com.google.javascript.rhino.head.ast.FunctionNode((int) (byte) 100);
        int int14 = functionNode7.addFunction(functionNode13);
        int int15 = jump1.compareTo((com.google.javascript.rhino.head.ast.AstNode) functionNode13);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode17 = new com.google.javascript.rhino.head.ast.FunctionNode(0);
        com.google.javascript.rhino.head.ast.Jump jump23 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump23.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump27 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump23, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode29 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int30 = scriptNode29.getEndLineno();
        int int31 = scriptNode29.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList32 = scriptNode29.getChildScopes();
        com.google.javascript.rhino.head.Node node33 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump23, (com.google.javascript.rhino.head.Node) scriptNode29);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList34 = scriptNode29.getFunctions();
        functionNodeList34.clear();
        com.google.javascript.rhino.head.ast.Jump jump40 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump40.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump44 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump40, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode46 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int47 = scriptNode46.getEndLineno();
        int int48 = scriptNode46.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList49 = scriptNode46.getChildScopes();
        com.google.javascript.rhino.head.Node node50 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump40, (com.google.javascript.rhino.head.Node) scriptNode46);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList51 = scriptNode46.getFunctions();
        boolean boolean52 = functionNodeList34.removeAll((java.util.Collection<com.google.javascript.rhino.head.ast.FunctionNode>) functionNodeList51);
        functionNode17.putProp(20, (java.lang.Object) functionNodeList34);
        int int54 = functionNode13.addFunction(functionNode17);
        boolean boolean55 = functionNode17.isGenerator();
        functionNode17.setIsExpressionClosure(true);
        com.google.javascript.rhino.head.Token.CommentType commentType62 = com.google.javascript.rhino.head.Token.CommentType.HTML;
        com.google.javascript.rhino.head.ast.Comment comment64 = new com.google.javascript.rhino.head.ast.Comment(20, 1, commentType62, "109");
        java.lang.String str66 = comment64.toSource(19);
        java.lang.String str67 = comment64.getValue();
        java.lang.String str68 = comment64.getValue();
        com.google.javascript.rhino.head.Token.CommentType commentType69 = com.google.javascript.rhino.head.Token.CommentType.LINE;
        comment64.setCommentType(commentType69);
        com.google.javascript.rhino.head.ast.Comment comment72 = new com.google.javascript.rhino.head.ast.Comment(1, 1, commentType69, "                    /null/");
        java.lang.String str73 = comment72.getValue();
        functionNode17.setJsDocNode(comment72);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str76 = functionNode17.getParamOrVarName(19);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(scriptNode4);
        org.junit.Assert.assertNotNull(scriptNode8);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNull(scopeList32);
        org.junit.Assert.assertNotNull(functionNodeList34);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
        org.junit.Assert.assertNull(scopeList49);
        org.junit.Assert.assertNotNull(functionNodeList51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + commentType62 + "' != '" + com.google.javascript.rhino.head.Token.CommentType.HTML + "'", commentType62.equals(com.google.javascript.rhino.head.Token.CommentType.HTML));
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "                                      109" + "'", str66, "                                      109");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "109" + "'", str67, "109");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "109" + "'", str68, "109");
        org.junit.Assert.assertTrue("'" + commentType69 + "' != '" + com.google.javascript.rhino.head.Token.CommentType.LINE + "'", commentType69.equals(com.google.javascript.rhino.head.Token.CommentType.LINE));
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "                    /null/" + "'", str73, "                    /null/");
    }

    @Test
    public void test09884() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09884");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode1 = new com.google.javascript.rhino.head.ast.FunctionNode((int) '4');
        com.google.javascript.rhino.head.Node node2 = functionNode1.getFirstChild();
        com.google.javascript.rhino.head.Node node3 = functionNode1.target;
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNull(node3);
    }

    @Test
    public void test09885() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09885");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode1 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = functionNode1.getTop();
        functionNode1.setParens((int) (byte) 1, (int) (short) 1);
        com.google.javascript.rhino.head.Node node6 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) functionNode1);
        functionNode1.setRequiresActivation();
        java.lang.String str8 = functionNode1.shortName();
        int int9 = functionNode1.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList10 = functionNode1.getFunctions();
        com.google.javascript.rhino.head.ast.Jump jump15 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump15.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump19 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump15, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode21 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int22 = scriptNode21.getEndLineno();
        int int23 = scriptNode21.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList24 = scriptNode21.getChildScopes();
        com.google.javascript.rhino.head.Node node25 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump15, (com.google.javascript.rhino.head.Node) scriptNode21);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList26 = scriptNode21.getFunctions();
        functionNodeList26.clear();
        functionNodeList26.clear();
        java.util.Iterator<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeItor29 = functionNodeList26.iterator();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode30 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int31 = functionNode30.getLp();
        functionNode30.setLp((int) (short) 1);
        int int36 = functionNode30.getIntProp(4, 26);
        functionNode30.flattenSymbolTable(true);
        boolean boolean39 = functionNodeList26.equals((java.lang.Object) functionNode30);
        boolean boolean40 = functionNodeList10.removeAll((java.util.Collection<com.google.javascript.rhino.head.ast.FunctionNode>) functionNodeList26);
        java.util.ListIterator<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeItor41 = functionNodeList26.listIterator();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode42 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int43 = functionNode42.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode45 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        java.lang.String str46 = functionNode42.toStringTree(scriptNode45);
        int int47 = scriptNode45.getRegexpCount();
        com.google.javascript.rhino.head.Node node48 = scriptNode45.getLastSibling();
        com.google.javascript.rhino.head.Node node49 = node48.getNext();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode51 = new com.google.javascript.rhino.head.ast.FunctionNode(13);
        node48.addChildrenToFront((com.google.javascript.rhino.head.Node) functionNode51);
        int int53 = functionNode51.getType();
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList54 = functionNode51.getFunctions();
        java.util.ListIterator<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeItor55 = functionNodeList54.listIterator();
        boolean boolean56 = functionNodeList26.containsAll((java.util.Collection<com.google.javascript.rhino.head.ast.FunctionNode>) functionNodeList54);
        java.util.Spliterator<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeSpliterator57 = functionNodeList54.spliterator();
        org.junit.Assert.assertNotNull(scriptNode2);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "FunctionNode" + "'", str8, "FunctionNode");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(functionNodeList10);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNull(scopeList24);
        org.junit.Assert.assertNotNull(functionNodeList26);
        org.junit.Assert.assertNotNull(functionNodeItor29);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 26 + "'", int36 == 26);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(functionNodeItor41);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertNotNull(node48);
        org.junit.Assert.assertNull(node49);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 109 + "'", int53 == 109);
        org.junit.Assert.assertNotNull(functionNodeList54);
        org.junit.Assert.assertNotNull(functionNodeItor55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(functionNodeSpliterator57);
    }

    @Test
    public void test09886() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09886");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode0 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = functionNode0.getTop();
        com.google.javascript.rhino.head.ast.Name name2 = null;
        functionNode0.setFunctionName(name2);
        int int4 = functionNode0.getLength();
        functionNode0.setFunctionType(19);
        com.google.javascript.rhino.head.Node node7 = functionNode0.getLastChild();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode9 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int10 = scriptNode9.getEndLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode12 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int13 = scriptNode12.getEndLineno();
        scriptNode9.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode12);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode15 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int16 = functionNode15.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode17 = functionNode15.getTop();
        boolean boolean18 = functionNode15.hasSideEffects();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode20 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int21 = scriptNode20.getEndLineno();
        int int22 = scriptNode20.getBaseLineno();
        com.google.javascript.rhino.head.ast.Jump jump25 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode27 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int28 = scriptNode27.getEndLineno();
        int int29 = scriptNode27.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList30 = scriptNode27.getChildScopes();
        jump25.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode27);
        java.lang.String str32 = scriptNode27.debugPrint();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode20, (com.google.javascript.rhino.head.ast.Scope) scriptNode27);
        com.google.javascript.rhino.head.ast.Scope scope34 = new com.google.javascript.rhino.head.ast.Scope();
        scriptNode27.target = scope34;
        functionNode15.addChildScope(scope34);
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode12, (com.google.javascript.rhino.head.ast.Scope) functionNode15);
        int int38 = functionNode15.getFunctionCount();
        java.lang.String str39 = functionNode15.shortName();
        int int40 = functionNode15.getParamCount();
        com.google.javascript.rhino.head.ast.Name name41 = null;
        functionNode15.setFunctionName(name41);
        functionNode0.setTop((com.google.javascript.rhino.head.ast.ScriptNode) functionNode15);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode44 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode45 = functionNode44.getTop();
        functionNode44.setParens((int) (byte) 1, (int) (short) 1);
        int int51 = functionNode44.getIntProp((int) (short) 100, (int) (byte) 10);
        functionNode0.addChildScope((com.google.javascript.rhino.head.ast.Scope) functionNode44);
        org.junit.Assert.assertNotNull(scriptNode1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 1 + "'", int4 == 1);
        org.junit.Assert.assertNull(node7);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(scriptNode17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertNull(scopeList30);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str32, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "FunctionNode" + "'", str39, "FunctionNode");
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertNotNull(scriptNode45);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 10 + "'", int51 == 10);
    }

    @Test
    public void test09887() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09887");
        com.google.javascript.rhino.head.ast.Name name1 = null;
        com.google.javascript.rhino.head.ast.FunctionNode functionNode2 = new com.google.javascript.rhino.head.ast.FunctionNode(17, name1);
        int int3 = functionNode2.getEncodedSourceEnd();
        boolean boolean4 = functionNode2.hasSideEffects();
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.ast.FunctionNode functionNode6 = functionNode2.getFunctionNode((-1288016238));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
    }

    @Test
    public void test09888() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09888");
        com.google.javascript.rhino.head.ast.Symbol symbol0 = new com.google.javascript.rhino.head.ast.Symbol();
        java.lang.String str1 = symbol0.getName();
        java.lang.String str2 = symbol0.toString();
        symbol0.setName("                    /null/-1\tSCRIPT -1 1\n");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode6 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int7 = functionNode6.getLp();
        functionNode6.setEncodedSource("");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode10 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int11 = functionNode10.getLp();
        functionNode10.setEncodedSource("");
        functionNode10.flattenSymbolTable(false);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode16 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int17 = functionNode16.getLp();
        com.google.javascript.rhino.head.Node node19 = new com.google.javascript.rhino.head.Node((-1), (com.google.javascript.rhino.head.Node) functionNode6, (com.google.javascript.rhino.head.Node) functionNode10, (com.google.javascript.rhino.head.Node) functionNode16, (int) '#');
        com.google.javascript.rhino.head.ast.AstNode astNode20 = functionNode6.getBody();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode21 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int22 = functionNode21.getLp();
        functionNode21.setEncodedSource("");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode25 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int26 = functionNode25.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode27 = functionNode25.getTop();
        com.google.javascript.rhino.head.ast.Name name28 = null;
        functionNode25.setFunctionName(name28);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode30 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode31 = functionNode30.getTop();
        functionNode25.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode30);
        int int33 = functionNode30.getRp();
        int int34 = functionNode30.getFunctionType();
        functionNode21.addParam((com.google.javascript.rhino.head.ast.AstNode) functionNode30);
        com.google.javascript.rhino.head.ast.Scope scope36 = functionNode30.getEnclosingScope();
        functionNode6.setBody((com.google.javascript.rhino.head.ast.AstNode) functionNode30);
        symbol0.setContainingTable((com.google.javascript.rhino.head.ast.Scope) functionNode30);
        com.google.javascript.rhino.head.ast.Scope scope39 = functionNode30.getParentScope();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList40 = functionNode30.getSymbols();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode43 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int44 = scriptNode43.getEndLineno();
        int int45 = scriptNode43.getBaseLineno();
        com.google.javascript.rhino.head.ast.Jump jump48 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode50 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int51 = scriptNode50.getEndLineno();
        int int52 = scriptNode50.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList53 = scriptNode50.getChildScopes();
        jump48.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode50);
        java.lang.String str55 = scriptNode50.debugPrint();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode43, (com.google.javascript.rhino.head.ast.Scope) scriptNode50);
        com.google.javascript.rhino.head.ast.AstNode astNode57 = scriptNode43.getParent();
        scriptNode43.setSourceName("                    /null/");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode60 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.Scope scope62 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 10);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode63 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode64 = functionNode63.getTop();
        functionNode63.setParens((int) (byte) 1, (int) (short) 1);
        functionNode63.setEncodedSourceStart((-1));
        functionNode63.setFunctionIsGetter();
        scope62.addChildToFront((com.google.javascript.rhino.head.Node) functionNode63);
        functionNode60.setBody((com.google.javascript.rhino.head.ast.AstNode) functionNode63);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode73 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode74 = functionNode73.getTop();
        functionNode73.setParens((int) (byte) 1, (int) (short) 1);
        functionNode73.setEncodedSourceStart((-1));
        java.util.List<com.google.javascript.rhino.head.Node> nodeList80 = functionNode73.getResumptionPoints();
        int int81 = functionNode73.getLp();
        functionNode60.setBody((com.google.javascript.rhino.head.ast.AstNode) functionNode73);
        com.google.javascript.rhino.head.Node node83 = functionNode73.getNext();
        scriptNode43.addChildScope((com.google.javascript.rhino.head.ast.Scope) functionNode73);
        com.google.javascript.rhino.head.ast.Jump jump86 = new com.google.javascript.rhino.head.ast.Jump(13, (com.google.javascript.rhino.head.Node) functionNode73, 22);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode87 = functionNode73.getEnclosingFunction();
        functionNode30.addChildToBack((com.google.javascript.rhino.head.Node) functionNode73);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "Symbol (EOF) name=null" + "'", str2, "Symbol (EOF) name=null");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNull(astNode20);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNotNull(scriptNode27);
        org.junit.Assert.assertNotNull(scriptNode31);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertNotNull(scope36);
        org.junit.Assert.assertNull(scope39);
        org.junit.Assert.assertNotNull(symbolList40);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1));
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertNull(scopeList53);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str55, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertNull(astNode57);
        org.junit.Assert.assertNotNull(scriptNode64);
        org.junit.Assert.assertNotNull(scriptNode74);
        org.junit.Assert.assertNull(nodeList80);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 1 + "'", int81 == 1);
        org.junit.Assert.assertNull(node83);
        org.junit.Assert.assertNotNull(functionNode87);
    }

    @Test
    public void test09889() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09889");
        com.google.javascript.rhino.head.Token.CommentType commentType2 = com.google.javascript.rhino.head.Token.CommentType.HTML;
        com.google.javascript.rhino.head.ast.Comment comment4 = new com.google.javascript.rhino.head.ast.Comment(20, 1, commentType2, "109");
        java.lang.String str6 = comment4.toSource((int) (byte) 10);
        java.lang.String str7 = comment4.getValue();
        java.lang.String str8 = comment4.getValue();
        java.lang.String str10 = comment4.toSource(16);
        java.lang.Class<?> wildcardClass11 = comment4.getClass();
        org.junit.Assert.assertTrue("'" + commentType2 + "' != '" + com.google.javascript.rhino.head.Token.CommentType.HTML + "'", commentType2.equals(com.google.javascript.rhino.head.Token.CommentType.HTML));
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "                    109" + "'", str6, "                    109");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "109" + "'", str7, "109");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "109" + "'", str8, "109");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "                                109" + "'", str10, "                                109");
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test09890() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09890");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode0 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int1 = functionNode0.getLp();
        functionNode0.setEncodedSource("");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode4 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int5 = functionNode4.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = functionNode4.getTop();
        com.google.javascript.rhino.head.ast.Name name7 = null;
        functionNode4.setFunctionName(name7);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode9 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = functionNode9.getTop();
        functionNode4.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode9);
        int int12 = functionNode9.getRp();
        int int13 = functionNode9.getFunctionType();
        functionNode0.addParam((com.google.javascript.rhino.head.ast.AstNode) functionNode9);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode15 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int16 = functionNode15.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode17 = functionNode15.getTop();
        com.google.javascript.rhino.head.Node node18 = functionNode15.getLastSibling();
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList19 = functionNode15.getParams();
        functionNode0.setParams(astNodeList19);
        functionNode0.setIsExpressionClosure(true);
        int int25 = functionNode0.getIntProp(6, 4);
        java.lang.String str26 = functionNode0.toString();
        functionNode0.setIsGenerator();
        functionNode0.setIsExpressionClosure(false);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-1) + "'", int1 == (-1));
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(scriptNode6);
        org.junit.Assert.assertNotNull(scriptNode10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(scriptNode17);
        org.junit.Assert.assertNotNull(node18);
        org.junit.Assert.assertNotNull(astNodeList19);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 4 + "'", int25 == 4);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "109" + "'", str26, "109");
    }

    @Test
    public void test09891() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09891");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode1 = new com.google.javascript.rhino.head.ast.FunctionNode(0);
        com.google.javascript.rhino.head.ast.Jump jump7 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump7.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump11 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump7, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode13 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int14 = scriptNode13.getEndLineno();
        int int15 = scriptNode13.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList16 = scriptNode13.getChildScopes();
        com.google.javascript.rhino.head.Node node17 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump7, (com.google.javascript.rhino.head.Node) scriptNode13);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList18 = scriptNode13.getFunctions();
        functionNodeList18.clear();
        com.google.javascript.rhino.head.ast.Jump jump24 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump24.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump28 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump24, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode30 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int31 = scriptNode30.getEndLineno();
        int int32 = scriptNode30.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList33 = scriptNode30.getChildScopes();
        com.google.javascript.rhino.head.Node node34 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump24, (com.google.javascript.rhino.head.Node) scriptNode30);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList35 = scriptNode30.getFunctions();
        boolean boolean36 = functionNodeList18.removeAll((java.util.Collection<com.google.javascript.rhino.head.ast.FunctionNode>) functionNodeList35);
        functionNode1.putProp(20, (java.lang.Object) functionNodeList18);
        com.google.javascript.rhino.head.ast.Symbol symbol38 = new com.google.javascript.rhino.head.ast.Symbol();
        java.lang.String str39 = symbol38.getDeclTypeName();
        com.google.javascript.rhino.head.ast.Scope scope40 = symbol38.getContainingTable();
        symbol38.setName("                          ");
        boolean boolean43 = functionNodeList18.remove((java.lang.Object) symbol38);
        com.google.javascript.rhino.head.ast.Scope scope44 = symbol38.getContainingTable();
        com.google.javascript.rhino.head.Node node45 = symbol38.getNode();
        symbol38.setName("                        /null/");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNull(scopeList16);
        org.junit.Assert.assertNotNull(functionNodeList18);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNull(scopeList33);
        org.junit.Assert.assertNotNull(functionNodeList35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "EOF" + "'", str39, "EOF");
        org.junit.Assert.assertNull(scope40);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNull(scope44);
        org.junit.Assert.assertNull(node45);
    }

    @Test
    public void test09892() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09892");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode0 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 10);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode3 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode4 = functionNode3.getTop();
        functionNode3.setParens((int) (byte) 1, (int) (short) 1);
        functionNode3.setEncodedSourceStart((-1));
        functionNode3.setFunctionIsGetter();
        scope2.addChildToFront((com.google.javascript.rhino.head.Node) functionNode3);
        functionNode0.setBody((com.google.javascript.rhino.head.ast.AstNode) functionNode3);
        functionNode0.setFunctionIsSetter();
        boolean boolean14 = functionNode0.isExpressionClosure();
        functionNode0.putIntProp(7, (int) (byte) 0);
        functionNode0.setPosition(21);
        functionNode0.setIsGenerator();
        java.lang.String str21 = functionNode0.toString();
        // The following exception was thrown during execution in test generation
        try {
            functionNode0.resetTargets();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(scriptNode4);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "109" + "'", str21, "109");
    }

    @Test
    public void test09893() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09893");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode1 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = functionNode1.getTop();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode4 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int5 = functionNode4.getLp();
        functionNode4.setEncodedSource("");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode8 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int9 = functionNode8.getLp();
        functionNode8.setEncodedSource("");
        functionNode8.flattenSymbolTable(false);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode14 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int15 = functionNode14.getLp();
        com.google.javascript.rhino.head.Node node17 = new com.google.javascript.rhino.head.Node((-1), (com.google.javascript.rhino.head.Node) functionNode4, (com.google.javascript.rhino.head.Node) functionNode8, (com.google.javascript.rhino.head.Node) functionNode14, (int) '#');
        com.google.javascript.rhino.head.ast.AstNode astNode18 = functionNode4.getBody();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode19 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int20 = functionNode19.getLp();
        functionNode19.setEncodedSource("");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode23 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int24 = functionNode23.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode25 = functionNode23.getTop();
        com.google.javascript.rhino.head.ast.Name name26 = null;
        functionNode23.setFunctionName(name26);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode28 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode29 = functionNode28.getTop();
        functionNode23.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode28);
        int int31 = functionNode28.getRp();
        int int32 = functionNode28.getFunctionType();
        functionNode19.addParam((com.google.javascript.rhino.head.ast.AstNode) functionNode28);
        com.google.javascript.rhino.head.ast.Scope scope34 = functionNode28.getEnclosingScope();
        functionNode4.setBody((com.google.javascript.rhino.head.ast.AstNode) functionNode28);
        int int36 = functionNode1.addFunction(functionNode4);
        java.util.List<com.google.javascript.rhino.head.Node> nodeList37 = functionNode1.getResumptionPoints();
        functionNode1.setLineno(14);
        com.google.javascript.rhino.head.Node node41 = new com.google.javascript.rhino.head.Node(109, (com.google.javascript.rhino.head.Node) functionNode1, 830992929);
        com.google.javascript.rhino.head.ast.AstNode astNode42 = functionNode1.getBody();
        java.lang.String str43 = functionNode1.getEncodedSource();
        org.junit.Assert.assertNotNull(scriptNode2);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNull(astNode18);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertNotNull(scriptNode25);
        org.junit.Assert.assertNotNull(scriptNode29);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNotNull(scope34);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertNull(nodeList37);
        org.junit.Assert.assertNull(astNode42);
        org.junit.Assert.assertNull(str43);
    }

    @Test
    public void test09894() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09894");
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 10);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode3 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode4 = functionNode3.getTop();
        functionNode3.setParens((int) (byte) 1, (int) (short) 1);
        functionNode3.setEncodedSourceStart((-1));
        functionNode3.setFunctionIsGetter();
        scope2.addChildToFront((com.google.javascript.rhino.head.Node) functionNode3);
        com.google.javascript.rhino.head.Node node13 = new com.google.javascript.rhino.head.Node((int) (byte) 100, (com.google.javascript.rhino.head.Node) functionNode3, 19);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode14 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int15 = functionNode14.getLp();
        functionNode14.setEncodedSource("");
        functionNode14.flattenSymbolTable(false);
        java.lang.String str20 = functionNode14.getName();
        functionNode14.setFunctionIsGetter();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode22 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int23 = functionNode22.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode24 = functionNode22.getTop();
        com.google.javascript.rhino.head.Node node25 = functionNode22.getLastSibling();
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList26 = functionNode22.getParams();
        functionNode14.setParams(astNodeList26);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode28 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int29 = functionNode28.getLp();
        functionNode28.setLp((int) (short) 1);
        int int34 = functionNode28.getIntProp(4, 26);
        functionNode28.flattenSymbolTable(true);
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList37 = functionNode28.getParams();
        functionNode14.setParams(astNodeList37);
        functionNode14.setEndLineno(12);
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor41 = functionNode14.iterator();
        int int42 = functionNode14.getLineno();
        functionNode3.addChildToBack((com.google.javascript.rhino.head.Node) functionNode14);
        int int44 = functionNode14.getEncodedSourceStart();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator45 = functionNode14.new NodeIterator();
        functionNode14.setParens(0, (-14761645));
        functionNode14.setIsGenerator();
        org.junit.Assert.assertNotNull(scriptNode4);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNotNull(scriptNode24);
        org.junit.Assert.assertNotNull(node25);
        org.junit.Assert.assertNotNull(astNodeList26);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 26 + "'", int34 == 26);
        org.junit.Assert.assertNotNull(astNodeList37);
        org.junit.Assert.assertNotNull(nodeItor41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
    }

    @Test
    public void test09895() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09895");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode0 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int1 = functionNode0.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode3 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        java.lang.String str4 = functionNode0.toStringTree(scriptNode3);
        java.lang.String str5 = functionNode0.shortName();
        boolean boolean6 = functionNode0.isGetter();
        com.google.javascript.rhino.head.ast.Scope scope8 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 10);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode9 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = functionNode9.getTop();
        functionNode9.setParens((int) (byte) 1, (int) (short) 1);
        functionNode9.setEncodedSourceStart((-1));
        functionNode9.setFunctionIsGetter();
        scope8.addChildToFront((com.google.javascript.rhino.head.Node) functionNode9);
        functionNode9.setRp(19);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode21 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int22 = scriptNode21.getEndLineno();
        int int23 = scriptNode21.getBaseLineno();
        com.google.javascript.rhino.head.ast.Jump jump26 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode28 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int29 = scriptNode28.getEndLineno();
        int int30 = scriptNode28.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList31 = scriptNode28.getChildScopes();
        jump26.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode28);
        java.lang.String str33 = scriptNode28.debugPrint();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode21, (com.google.javascript.rhino.head.ast.Scope) scriptNode28);
        com.google.javascript.rhino.head.ast.Scope scope35 = new com.google.javascript.rhino.head.ast.Scope();
        scriptNode28.target = scope35;
        java.lang.String str37 = functionNode9.toStringTree(scriptNode28);
        java.lang.String str39 = scriptNode28.toSource((int) (short) 10);
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap40 = scriptNode28.getSymbolTable();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode42 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int43 = scriptNode42.getEndLineno();
        int int44 = scriptNode42.getBaseLineno();
        scriptNode42.removeProp(0);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList47 = scriptNode42.getSymbols();
        boolean boolean48 = strMap40.containsValue((java.lang.Object) symbolList47);
        com.google.javascript.rhino.head.ast.Symbol symbol50 = new com.google.javascript.rhino.head.ast.Symbol();
        java.lang.String str51 = symbol50.getDeclTypeName();
        com.google.javascript.rhino.head.ast.Scope scope52 = symbol50.getContainingTable();
        symbol50.setName("                                      109");
        com.google.javascript.rhino.head.Node node55 = symbol50.getNode();
        com.google.javascript.rhino.head.ast.Symbol symbol56 = new com.google.javascript.rhino.head.ast.Symbol();
        com.google.javascript.rhino.head.Node node57 = symbol56.getNode();
        symbol56.setIndex(4);
        java.lang.String str60 = symbol56.getDeclTypeName();
        java.lang.String str61 = symbol56.toString();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode62 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int63 = functionNode62.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode64 = functionNode62.getTop();
        boolean boolean65 = functionNode62.hasSideEffects();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode67 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int68 = scriptNode67.getEndLineno();
        int int69 = scriptNode67.getBaseLineno();
        com.google.javascript.rhino.head.ast.Jump jump72 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode74 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int75 = scriptNode74.getEndLineno();
        int int76 = scriptNode74.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList77 = scriptNode74.getChildScopes();
        jump72.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode74);
        java.lang.String str79 = scriptNode74.debugPrint();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode67, (com.google.javascript.rhino.head.ast.Scope) scriptNode74);
        com.google.javascript.rhino.head.ast.Scope scope81 = new com.google.javascript.rhino.head.ast.Scope();
        scriptNode74.target = scope81;
        functionNode62.addChildScope(scope81);
        boolean boolean84 = functionNode62.isGetter();
        symbol56.setNode((com.google.javascript.rhino.head.Node) functionNode62);
        boolean boolean86 = strMap40.replace("{\n}\n", symbol50, symbol56);
        java.util.Set<java.util.Map.Entry<java.lang.String, com.google.javascript.rhino.head.ast.Symbol>> strEntrySet87 = strMap40.entrySet();
        int int88 = strMap40.size();
        functionNode0.setSymbolTable(strMap40);
        functionNode0.clearParentScope();
        boolean boolean91 = functionNode0.requiresActivation();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-1) + "'", int1 == (-1));
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "FunctionNode" + "'", str5, "FunctionNode");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(scriptNode10);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertNull(scopeList31);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str33, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "                    {\n                    }\n" + "'", str39, "                    {\n                    }\n");
        org.junit.Assert.assertNotNull(strMap40);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertNotNull(symbolList47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "EOF" + "'", str51, "EOF");
        org.junit.Assert.assertNull(scope52);
        org.junit.Assert.assertNull(node55);
        org.junit.Assert.assertNull(node57);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "EOF" + "'", str60, "EOF");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "Symbol (EOF) name=null" + "'", str61, "Symbol (EOF) name=null");
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + (-1) + "'", int63 == (-1));
        org.junit.Assert.assertNotNull(scriptNode64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + (-1) + "'", int68 == (-1));
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + (-1) + "'", int69 == (-1));
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + (-1) + "'", int75 == (-1));
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + (-1) + "'", int76 == (-1));
        org.junit.Assert.assertNull(scopeList77);
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str79, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertNotNull(strEntrySet87);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + 0 + "'", int88 == 0);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
    }

    @Test
    public void test09896() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09896");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode1 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = functionNode1.getTop();
        functionNode1.setParens((int) (byte) 1, (int) (short) 1);
        int int6 = functionNode1.getRp();
        com.google.javascript.rhino.head.Node node9 = com.google.javascript.rhino.head.Node.newString((int) (byte) 100, "");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode10 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int11 = functionNode10.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode13 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        java.lang.String str14 = functionNode10.toStringTree(scriptNode13);
        com.google.javascript.rhino.head.ast.Scope scope16 = scriptNode13.getDefiningScope("");
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList17 = scriptNode13.getSymbols();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode19 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int20 = scriptNode19.getEndLineno();
        int int21 = scriptNode19.getBaseLineno();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode13, (com.google.javascript.rhino.head.ast.Scope) scriptNode19);
        java.lang.String str23 = scriptNode19.getEncodedSource();
        com.google.javascript.rhino.head.Node node25 = new com.google.javascript.rhino.head.Node(136, (com.google.javascript.rhino.head.Node) functionNode1, node9, (com.google.javascript.rhino.head.Node) scriptNode19, (int) (short) 0);
        com.google.javascript.rhino.head.ast.Comment comment26 = scriptNode19.getJsDocNode();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap27 = scriptNode19.getSymbolTable();
        com.google.javascript.rhino.head.ast.Jump jump32 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump32.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump36 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump32, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode38 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int39 = scriptNode38.getEndLineno();
        int int40 = scriptNode38.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList41 = scriptNode38.getChildScopes();
        com.google.javascript.rhino.head.Node node42 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump32, (com.google.javascript.rhino.head.Node) scriptNode38);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList43 = scriptNode38.getFunctions();
        int int44 = functionNodeList43.size();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator45 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        functionNodeList43.sort((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator45);
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator47 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.Jump jump52 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump52.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump56 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump52, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode58 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int59 = scriptNode58.getEndLineno();
        int int60 = scriptNode58.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList61 = scriptNode58.getChildScopes();
        com.google.javascript.rhino.head.Node node62 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump52, (com.google.javascript.rhino.head.Node) scriptNode58);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList63 = scriptNode58.getFunctions();
        int int64 = functionNodeList63.size();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator65 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        functionNodeList63.sort((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator65);
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator67 = positionComparator65.reversed();
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator68 = astNodeComparator67.reversed();
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator69 = positionComparator47.thenComparing(astNodeComparator67);
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator70 = positionComparator45.thenComparing(astNodeComparator69);
        com.google.javascript.rhino.head.ast.Jump jump75 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump75.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump79 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump75, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode81 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int82 = scriptNode81.getEndLineno();
        int int83 = scriptNode81.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList84 = scriptNode81.getChildScopes();
        com.google.javascript.rhino.head.Node node85 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump75, (com.google.javascript.rhino.head.Node) scriptNode81);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList86 = scriptNode81.getFunctions();
        int int87 = functionNodeList86.size();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator88 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        functionNodeList86.sort((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator88);
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator90 = astNodeComparator70.thenComparing((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator88);
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator91 = positionComparator88.reversed();
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator92 = astNodeComparator91.reversed();
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator93 = astNodeComparator91.reversed();
        com.google.javascript.rhino.head.ast.Symbol symbol94 = strMap27.remove((java.lang.Object) astNodeComparator93);
        org.junit.Assert.assertNotNull(scriptNode2);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertNotNull(node9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(scope16);
        org.junit.Assert.assertNotNull(symbolList17);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNull(comment26);
        org.junit.Assert.assertNotNull(strMap27);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertNull(scopeList41);
        org.junit.Assert.assertNotNull(functionNodeList43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-1) + "'", int59 == (-1));
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-1) + "'", int60 == (-1));
        org.junit.Assert.assertNull(scopeList61);
        org.junit.Assert.assertNotNull(functionNodeList63);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 0 + "'", int64 == 0);
        org.junit.Assert.assertNotNull(astNodeComparator67);
        org.junit.Assert.assertNotNull(astNodeComparator68);
        org.junit.Assert.assertNotNull(astNodeComparator69);
        org.junit.Assert.assertNotNull(astNodeComparator70);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + (-1) + "'", int82 == (-1));
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + (-1) + "'", int83 == (-1));
        org.junit.Assert.assertNull(scopeList84);
        org.junit.Assert.assertNotNull(functionNodeList86);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 0 + "'", int87 == 0);
        org.junit.Assert.assertNotNull(astNodeComparator90);
        org.junit.Assert.assertNotNull(astNodeComparator91);
        org.junit.Assert.assertNotNull(astNodeComparator92);
        org.junit.Assert.assertNotNull(astNodeComparator93);
        org.junit.Assert.assertNull(symbol94);
    }

    @Test
    public void test09897() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09897");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode2 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int3 = functionNode2.getLp();
        functionNode2.setEncodedSource("");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode6 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int7 = functionNode6.getLp();
        functionNode6.setEncodedSource("");
        functionNode6.flattenSymbolTable(false);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode12 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int13 = functionNode12.getLp();
        com.google.javascript.rhino.head.Node node15 = new com.google.javascript.rhino.head.Node((-1), (com.google.javascript.rhino.head.Node) functionNode2, (com.google.javascript.rhino.head.Node) functionNode6, (com.google.javascript.rhino.head.Node) functionNode12, (int) '#');
        com.google.javascript.rhino.head.ast.Comment comment16 = functionNode12.getJsDocNode();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode17 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.Scope scope19 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 10);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode20 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode21 = functionNode20.getTop();
        functionNode20.setParens((int) (byte) 1, (int) (short) 1);
        functionNode20.setEncodedSourceStart((-1));
        functionNode20.setFunctionIsGetter();
        scope19.addChildToFront((com.google.javascript.rhino.head.Node) functionNode20);
        functionNode17.setBody((com.google.javascript.rhino.head.ast.AstNode) functionNode20);
        boolean boolean30 = functionNode12.isParam((com.google.javascript.rhino.head.ast.AstNode) functionNode17);
        com.google.javascript.rhino.head.ast.Jump jump31 = new com.google.javascript.rhino.head.ast.Jump(8, (com.google.javascript.rhino.head.Node) functionNode12);
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator32 = jump31.new NodeIterator();
        com.google.javascript.rhino.head.Node node33 = jump31.getLastSibling();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNull(comment16);
        org.junit.Assert.assertNotNull(scriptNode21);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(node33);
    }

    @Test
    public void test09898() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09898");
        com.google.javascript.rhino.head.ast.Jump jump4 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump4.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump8 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump4, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int11 = scriptNode10.getEndLineno();
        int int12 = scriptNode10.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList13 = scriptNode10.getChildScopes();
        com.google.javascript.rhino.head.Node node14 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump4, (com.google.javascript.rhino.head.Node) scriptNode10);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList15 = scriptNode10.getFunctions();
        int int16 = functionNodeList15.size();
        functionNodeList15.clear();
        int int19 = functionNodeList15.indexOf((java.lang.Object) 10L);
        com.google.javascript.rhino.head.ast.Jump jump24 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump24.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump28 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump24, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode30 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int31 = scriptNode30.getEndLineno();
        int int32 = scriptNode30.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList33 = scriptNode30.getChildScopes();
        com.google.javascript.rhino.head.Node node34 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump24, (com.google.javascript.rhino.head.Node) scriptNode30);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList35 = scriptNode30.getFunctions();
        functionNodeList35.clear();
        int int38 = functionNodeList35.lastIndexOf((java.lang.Object) (-1L));
        com.google.javascript.rhino.head.ast.Jump jump43 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump43.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump47 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump43, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode49 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int50 = scriptNode49.getEndLineno();
        int int51 = scriptNode49.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList52 = scriptNode49.getChildScopes();
        com.google.javascript.rhino.head.Node node53 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump43, (com.google.javascript.rhino.head.Node) scriptNode49);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList54 = scriptNode49.getFunctions();
        functionNodeList54.clear();
        int int57 = functionNodeList54.lastIndexOf((java.lang.Object) (-1L));
        boolean boolean58 = functionNodeList35.removeAll((java.util.Collection<com.google.javascript.rhino.head.ast.FunctionNode>) functionNodeList54);
        boolean boolean59 = functionNodeList15.contains((java.lang.Object) boolean58);
        boolean boolean61 = functionNodeList15.contains((java.lang.Object) 20);
        java.util.Spliterator<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeSpliterator62 = functionNodeList15.spliterator();
        boolean boolean63 = functionNodeList15.isEmpty();
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNull(scopeList13);
        org.junit.Assert.assertNotNull(functionNodeList15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNull(scopeList33);
        org.junit.Assert.assertNotNull(functionNodeList35);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1));
        org.junit.Assert.assertNull(scopeList52);
        org.junit.Assert.assertNotNull(functionNodeList54);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(functionNodeSpliterator62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
    }

    @Test
    public void test09899() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09899");
        com.google.javascript.rhino.head.ast.RegExpLiteral regExpLiteral1 = new com.google.javascript.rhino.head.ast.RegExpLiteral((-22));
        regExpLiteral1.setValue("                          EOF");
        java.lang.String str4 = regExpLiteral1.toString();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode6 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int7 = functionNode6.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode8 = functionNode6.getTop();
        boolean boolean9 = functionNode6.hasSideEffects();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int12 = scriptNode11.getEndLineno();
        int int13 = scriptNode11.getBaseLineno();
        com.google.javascript.rhino.head.ast.Jump jump16 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode18 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int19 = scriptNode18.getEndLineno();
        int int20 = scriptNode18.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList21 = scriptNode18.getChildScopes();
        jump16.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode18);
        java.lang.String str23 = scriptNode18.debugPrint();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode11, (com.google.javascript.rhino.head.ast.Scope) scriptNode18);
        com.google.javascript.rhino.head.ast.Scope scope25 = new com.google.javascript.rhino.head.ast.Scope();
        scriptNode18.target = scope25;
        functionNode6.addChildScope(scope25);
        boolean boolean28 = functionNode6.hasConsistentReturnUsage();
        java.lang.String str29 = functionNode6.getNextTempName();
        com.google.javascript.rhino.head.ast.Jump jump30 = new com.google.javascript.rhino.head.ast.Jump((int) (short) -1, (com.google.javascript.rhino.head.Node) functionNode6);
        java.lang.String str31 = regExpLiteral1.toStringTree((com.google.javascript.rhino.head.ast.ScriptNode) functionNode6);
        java.util.List<com.google.javascript.rhino.head.Node> nodeList32 = functionNode6.getResumptionPoints();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "48" + "'", str4, "48");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(scriptNode8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertNull(scopeList21);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str23, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "$0" + "'", str29, "$0");
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNull(nodeList32);
    }

    @Test
    public void test09900() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09900");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode0 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int1 = functionNode0.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = functionNode0.getTop();
        boolean boolean3 = functionNode0.hasSideEffects();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int6 = scriptNode5.getEndLineno();
        int int7 = scriptNode5.getBaseLineno();
        com.google.javascript.rhino.head.ast.Jump jump10 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode12 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int13 = scriptNode12.getEndLineno();
        int int14 = scriptNode12.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList15 = scriptNode12.getChildScopes();
        jump10.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode12);
        java.lang.String str17 = scriptNode12.debugPrint();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode5, (com.google.javascript.rhino.head.ast.Scope) scriptNode12);
        com.google.javascript.rhino.head.ast.Scope scope19 = new com.google.javascript.rhino.head.ast.Scope();
        scriptNode12.target = scope19;
        functionNode0.addChildScope(scope19);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode22 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int23 = functionNode22.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode24 = functionNode22.getTop();
        com.google.javascript.rhino.head.ast.Name name25 = null;
        functionNode22.setFunctionName(name25);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode27 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode28 = functionNode27.getTop();
        functionNode22.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode27);
        com.google.javascript.rhino.head.ast.Scope scope32 = new com.google.javascript.rhino.head.ast.Scope((int) (short) -1, 0);
        functionNode22.replaceWith(scope32);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode34 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int35 = functionNode34.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode36 = functionNode34.getTop();
        com.google.javascript.rhino.head.ast.Name name37 = null;
        functionNode34.setFunctionName(name37);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode39 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode40 = functionNode39.getTop();
        functionNode34.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode39);
        int int42 = functionNode22.addFunction(functionNode34);
        int int43 = functionNode0.addFunction(functionNode34);
        functionNode34.removeProp((-802206969));
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-1) + "'", int1 == (-1));
        org.junit.Assert.assertNotNull(scriptNode2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNull(scopeList15);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str17, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNotNull(scriptNode24);
        org.junit.Assert.assertNotNull(scriptNode28);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertNotNull(scriptNode36);
        org.junit.Assert.assertNotNull(scriptNode40);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
    }

    @Test
    public void test09901() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09901");
        com.google.javascript.rhino.head.ast.Symbol symbol0 = new com.google.javascript.rhino.head.ast.Symbol();
        com.google.javascript.rhino.head.Node node1 = symbol0.getNode();
        com.google.javascript.rhino.head.Node node2 = symbol0.getNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode4 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int5 = scriptNode4.getEndLineno();
        int int6 = scriptNode4.getBaseLineno();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode7 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int8 = functionNode7.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        java.lang.String str11 = functionNode7.toStringTree(scriptNode10);
        functionNode7.setFunctionIsGetter();
        com.google.javascript.rhino.head.ast.AstNode astNode13 = functionNode7.getBody();
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList14 = functionNode7.getParams();
        scriptNode4.replaceWith((com.google.javascript.rhino.head.ast.Scope) functionNode7);
        symbol0.setNode((com.google.javascript.rhino.head.Node) functionNode7);
        java.lang.String str17 = symbol0.getName();
        com.google.javascript.rhino.head.ast.Scope scope18 = symbol0.getContainingTable();
        com.google.javascript.rhino.head.Node node19 = symbol0.getNode();
        com.google.javascript.rhino.head.Node node20 = symbol0.getNode();
        java.lang.String str21 = symbol0.toString();
        org.junit.Assert.assertNull(node1);
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(astNode13);
        org.junit.Assert.assertNotNull(astNodeList14);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(scope18);
        org.junit.Assert.assertNotNull(node19);
        org.junit.Assert.assertNotNull(node20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Symbol (EOF) name=null line=-1" + "'", str21, "Symbol (EOF) name=null line=-1");
    }

    @Test
    public void test09902() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09902");
        com.google.javascript.rhino.head.ast.Jump jump1 = new com.google.javascript.rhino.head.ast.Jump((-440310255));
        com.google.javascript.rhino.head.ast.FunctionNode functionNode3 = new com.google.javascript.rhino.head.ast.FunctionNode(18);
        jump1.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode3);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int7 = scriptNode6.getEndLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode9 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int10 = scriptNode9.getEndLineno();
        scriptNode6.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode9);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode12 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int13 = functionNode12.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = functionNode12.getTop();
        boolean boolean15 = functionNode12.hasSideEffects();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode17 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int18 = scriptNode17.getEndLineno();
        int int19 = scriptNode17.getBaseLineno();
        com.google.javascript.rhino.head.ast.Jump jump22 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode24 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int25 = scriptNode24.getEndLineno();
        int int26 = scriptNode24.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList27 = scriptNode24.getChildScopes();
        jump22.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode24);
        java.lang.String str29 = scriptNode24.debugPrint();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode17, (com.google.javascript.rhino.head.ast.Scope) scriptNode24);
        com.google.javascript.rhino.head.ast.Scope scope31 = new com.google.javascript.rhino.head.ast.Scope();
        scriptNode24.target = scope31;
        functionNode12.addChildScope(scope31);
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode9, (com.google.javascript.rhino.head.ast.Scope) functionNode12);
        int int35 = functionNode12.getFunctionCount();
        java.lang.String str36 = functionNode12.shortName();
        int int37 = functionNode12.getParamCount();
        functionNode12.setPosition(23);
        java.lang.String str40 = functionNode3.toStringTree((com.google.javascript.rhino.head.ast.ScriptNode) functionNode12);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(scriptNode14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNull(scopeList27);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str29, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "FunctionNode" + "'", str36, "FunctionNode");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertNull(str40);
    }

    @Test
    public void test09903() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09903");
        com.google.javascript.rhino.head.ast.Jump jump4 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump4.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump8 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump4, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int11 = scriptNode10.getEndLineno();
        int int12 = scriptNode10.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList13 = scriptNode10.getChildScopes();
        com.google.javascript.rhino.head.Node node14 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump4, (com.google.javascript.rhino.head.Node) scriptNode10);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList15 = scriptNode10.getFunctions();
        functionNodeList15.clear();
        functionNodeList15.clear();
        java.util.Iterator<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeItor18 = functionNodeList15.iterator();
        com.google.javascript.rhino.head.ast.Jump jump23 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump23.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump27 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump23, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode29 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int30 = scriptNode29.getEndLineno();
        int int31 = scriptNode29.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList32 = scriptNode29.getChildScopes();
        com.google.javascript.rhino.head.Node node33 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump23, (com.google.javascript.rhino.head.Node) scriptNode29);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList34 = scriptNode29.getFunctions();
        int int35 = functionNodeList34.size();
        com.google.javascript.rhino.head.ast.Jump jump41 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump41.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump45 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump41, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode47 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int48 = scriptNode47.getEndLineno();
        int int49 = scriptNode47.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList50 = scriptNode47.getChildScopes();
        com.google.javascript.rhino.head.Node node51 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump41, (com.google.javascript.rhino.head.Node) scriptNode47);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList52 = scriptNode47.getFunctions();
        functionNodeList52.clear();
        com.google.javascript.rhino.head.ast.Jump jump58 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump58.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump62 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump58, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode64 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int65 = scriptNode64.getEndLineno();
        int int66 = scriptNode64.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList67 = scriptNode64.getChildScopes();
        com.google.javascript.rhino.head.Node node68 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump58, (com.google.javascript.rhino.head.Node) scriptNode64);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList69 = scriptNode64.getFunctions();
        boolean boolean70 = functionNodeList52.removeAll((java.util.Collection<com.google.javascript.rhino.head.ast.FunctionNode>) functionNodeList69);
        boolean boolean71 = functionNodeList34.addAll(0, (java.util.Collection<com.google.javascript.rhino.head.ast.FunctionNode>) functionNodeList52);
        com.google.javascript.rhino.head.ast.Jump jump76 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump76.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump80 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump76, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode82 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int83 = scriptNode82.getEndLineno();
        int int84 = scriptNode82.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList85 = scriptNode82.getChildScopes();
        com.google.javascript.rhino.head.Node node86 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump76, (com.google.javascript.rhino.head.Node) scriptNode82);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList87 = scriptNode82.getFunctions();
        int int88 = functionNodeList87.size();
        functionNodeList87.clear();
        int int91 = functionNodeList87.indexOf((java.lang.Object) 10L);
        java.util.Iterator<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeItor92 = functionNodeList87.iterator();
        boolean boolean93 = functionNodeList34.retainAll((java.util.Collection<com.google.javascript.rhino.head.ast.FunctionNode>) functionNodeList87);
        boolean boolean94 = functionNodeList15.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.FunctionNode>) functionNodeList87);
        java.util.stream.Stream<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeStream95 = functionNodeList15.stream();
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.ast.FunctionNode functionNode97 = functionNodeList15.get(19);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 19");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNull(scopeList13);
        org.junit.Assert.assertNotNull(functionNodeList15);
        org.junit.Assert.assertNotNull(functionNodeItor18);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNull(scopeList32);
        org.junit.Assert.assertNotNull(functionNodeList34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertNull(scopeList50);
        org.junit.Assert.assertNotNull(functionNodeList52);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + (-1) + "'", int65 == (-1));
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + (-1) + "'", int66 == (-1));
        org.junit.Assert.assertNull(scopeList67);
        org.junit.Assert.assertNotNull(functionNodeList69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + (-1) + "'", int83 == (-1));
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + (-1) + "'", int84 == (-1));
        org.junit.Assert.assertNull(scopeList85);
        org.junit.Assert.assertNotNull(functionNodeList87);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + 0 + "'", int88 == 0);
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + (-1) + "'", int91 == (-1));
        org.junit.Assert.assertNotNull(functionNodeItor92);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertNotNull(functionNodeStream95);
    }

    @Test
    public void test09904() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09904");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode1 = new com.google.javascript.rhino.head.ast.FunctionNode(0);
        com.google.javascript.rhino.head.ast.Jump jump7 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump7.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump11 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump7, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode13 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int14 = scriptNode13.getEndLineno();
        int int15 = scriptNode13.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList16 = scriptNode13.getChildScopes();
        com.google.javascript.rhino.head.Node node17 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump7, (com.google.javascript.rhino.head.Node) scriptNode13);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList18 = scriptNode13.getFunctions();
        functionNodeList18.clear();
        com.google.javascript.rhino.head.ast.Jump jump24 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump24.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump28 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump24, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode30 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int31 = scriptNode30.getEndLineno();
        int int32 = scriptNode30.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList33 = scriptNode30.getChildScopes();
        com.google.javascript.rhino.head.Node node34 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump24, (com.google.javascript.rhino.head.Node) scriptNode30);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList35 = scriptNode30.getFunctions();
        boolean boolean36 = functionNodeList18.removeAll((java.util.Collection<com.google.javascript.rhino.head.ast.FunctionNode>) functionNodeList35);
        functionNode1.putProp(20, (java.lang.Object) functionNodeList18);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode38 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int39 = functionNode38.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode41 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        java.lang.String str42 = functionNode38.toStringTree(scriptNode41);
        int int43 = functionNode1.addFunction(functionNode38);
        com.google.javascript.rhino.head.Node node44 = functionNode1.getLastSibling();
        boolean boolean45 = functionNode1.requiresActivation();
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNull(scopeList16);
        org.junit.Assert.assertNotNull(functionNodeList18);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNull(scopeList33);
        org.junit.Assert.assertNotNull(functionNodeList35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertNotNull(node44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
    }

    @Test
    public void test09905() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09905");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int2 = scriptNode1.getEndLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode4 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int5 = scriptNode4.getEndLineno();
        scriptNode1.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode4);
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator7 = scriptNode1.new NodeIterator();
        com.google.javascript.rhino.head.Node node8 = nodeIterator7.next();
        boolean boolean9 = nodeIterator7.hasNext();
        boolean boolean10 = nodeIterator7.hasNext();
        nodeIterator7.remove();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(node8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test09906() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09906");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int2 = scriptNode1.getEndLineno();
        int int3 = scriptNode1.getBaseLineno();
        com.google.javascript.rhino.head.Node node4 = scriptNode1.getNext();
        com.google.javascript.rhino.head.Node node5 = scriptNode1.getFirstChild();
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList6 = scriptNode1.getFunctions();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode7 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int8 = functionNode7.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode9 = functionNode7.getTop();
        com.google.javascript.rhino.head.ast.Name name10 = null;
        functionNode7.setFunctionName(name10);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode12 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int13 = functionNode12.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode15 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        java.lang.String str16 = functionNode12.toStringTree(scriptNode15);
        functionNode12.setFunctionIsGetter();
        int int18 = functionNode7.addFunction(functionNode12);
        boolean boolean19 = functionNode12.hasSideEffects();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode20 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int21 = functionNode20.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode22 = functionNode20.getTop();
        functionNode12.setBody((com.google.javascript.rhino.head.ast.AstNode) scriptNode22);
        java.lang.String str24 = functionNode12.getSourceName();
        scriptNode1.replaceWith((com.google.javascript.rhino.head.ast.Scope) functionNode12);
        int int26 = scriptNode1.getBaseLineno();
        scriptNode1.setEncodedSourceEnd(327364487);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode30 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int31 = functionNode30.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode32 = functionNode30.getTop();
        boolean boolean33 = functionNode30.hasSideEffects();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList34 = functionNode30.getSymbols();
        int int35 = functionNode30.getLength();
        boolean boolean36 = functionNode30.isGetterOrSetter();
        functionNode30.setIsExpressionClosure(true);
        com.google.javascript.rhino.head.ast.Jump jump41 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        com.google.javascript.rhino.head.ast.Scope scope43 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 10);
        jump41.addChildrenToBack((com.google.javascript.rhino.head.Node) scope43);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode45 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int46 = functionNode45.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode47 = functionNode45.getTop();
        com.google.javascript.rhino.head.ast.Name name48 = null;
        functionNode45.setFunctionName(name48);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode50 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode51 = functionNode50.getTop();
        functionNode45.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode50);
        com.google.javascript.rhino.head.ast.Scope scope55 = new com.google.javascript.rhino.head.ast.Scope((int) (short) -1, 0);
        functionNode45.replaceWith(scope55);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode57 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int58 = functionNode57.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode59 = functionNode57.getTop();
        com.google.javascript.rhino.head.ast.Name name60 = null;
        functionNode57.setFunctionName(name60);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode62 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode63 = functionNode62.getTop();
        functionNode57.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode62);
        int int65 = functionNode45.addFunction(functionNode57);
        int int66 = functionNode57.getLineno();
        int int67 = functionNode57.getFunctionType();
        functionNode57.setRelative((-1262414679));
        com.google.javascript.rhino.head.Node node70 = new com.google.javascript.rhino.head.Node(8, (com.google.javascript.rhino.head.Node) functionNode30, (com.google.javascript.rhino.head.Node) jump41, (com.google.javascript.rhino.head.Node) functionNode57);
        // The following exception was thrown during execution in test generation
        try {
            scriptNode1.setDefault((com.google.javascript.rhino.head.Node) functionNode57);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNull(node4);
        org.junit.Assert.assertNull(node5);
        org.junit.Assert.assertNotNull(functionNodeList6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(scriptNode9);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertNotNull(scriptNode22);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNotNull(scriptNode32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(symbolList34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 1 + "'", int35 == 1);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertNotNull(scriptNode47);
        org.junit.Assert.assertNotNull(scriptNode51);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + (-1) + "'", int58 == (-1));
        org.junit.Assert.assertNotNull(scriptNode59);
        org.junit.Assert.assertNotNull(scriptNode63);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 0 + "'", int65 == 0);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + (-1) + "'", int66 == (-1));
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 0 + "'", int67 == 0);
    }

    @Test
    public void test09907() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09907");
        com.google.javascript.rhino.head.ast.Jump jump4 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump4.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump8 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump4, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int11 = scriptNode10.getEndLineno();
        int int12 = scriptNode10.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList13 = scriptNode10.getChildScopes();
        com.google.javascript.rhino.head.Node node14 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump4, (com.google.javascript.rhino.head.Node) scriptNode10);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList15 = scriptNode10.getFunctions();
        int int16 = scriptNode10.getPosition();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList17 = scriptNode10.getChildScopes();
        java.lang.String str18 = scriptNode10.toSource();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode20 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int21 = functionNode20.getLp();
        functionNode20.setEncodedSource("");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode24 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int25 = functionNode24.getLp();
        functionNode24.setEncodedSource("");
        functionNode24.flattenSymbolTable(false);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode30 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int31 = functionNode30.getLp();
        com.google.javascript.rhino.head.Node node33 = new com.google.javascript.rhino.head.Node((-1), (com.google.javascript.rhino.head.Node) functionNode20, (com.google.javascript.rhino.head.Node) functionNode24, (com.google.javascript.rhino.head.Node) functionNode30, (int) '#');
        functionNode30.setEncodedSourceStart(25);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode37 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode38 = functionNode37.getTop();
        functionNode37.setParens((int) (byte) 1, (int) (short) 1);
        int int42 = functionNode37.getRp();
        com.google.javascript.rhino.head.Node node45 = com.google.javascript.rhino.head.Node.newString((int) (byte) 100, "");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode46 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int47 = functionNode46.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode49 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        java.lang.String str50 = functionNode46.toStringTree(scriptNode49);
        com.google.javascript.rhino.head.ast.Scope scope52 = scriptNode49.getDefiningScope("");
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList53 = scriptNode49.getSymbols();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode55 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int56 = scriptNode55.getEndLineno();
        int int57 = scriptNode55.getBaseLineno();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode49, (com.google.javascript.rhino.head.ast.Scope) scriptNode55);
        java.lang.String str59 = scriptNode55.getEncodedSource();
        com.google.javascript.rhino.head.Node node61 = new com.google.javascript.rhino.head.Node(136, (com.google.javascript.rhino.head.Node) functionNode37, node45, (com.google.javascript.rhino.head.Node) scriptNode55, (int) (short) 0);
        functionNode30.setParent((com.google.javascript.rhino.head.ast.AstNode) functionNode37);
        functionNode37.putIntProp((-13), 365513504);
        scriptNode10.addChildToBack((com.google.javascript.rhino.head.Node) functionNode37);
        int int67 = scriptNode10.getParamCount();
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNull(scopeList13);
        org.junit.Assert.assertNotNull(functionNodeList15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNull(scopeList17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "{\n}\n" + "'", str18, "{\n}\n");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNotNull(scriptNode38);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 1 + "'", int42 == 1);
        org.junit.Assert.assertNotNull(node45);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertNull(scope52);
        org.junit.Assert.assertNotNull(symbolList53);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1));
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
        org.junit.Assert.assertNull(str59);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 0 + "'", int67 == 0);
    }

    @Test
    public void test09908() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09908");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode1 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int2 = functionNode1.getLp();
        functionNode1.setEncodedSource("");
        functionNode1.flattenSymbolTable(false);
        java.lang.String str7 = functionNode1.getName();
        functionNode1.setFunctionIsGetter();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode9 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int10 = functionNode9.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = functionNode9.getTop();
        com.google.javascript.rhino.head.Node node12 = functionNode9.getLastSibling();
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList13 = functionNode9.getParams();
        functionNode1.setParams(astNodeList13);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode15 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int16 = functionNode15.getLp();
        functionNode15.setLp((int) (short) 1);
        int int21 = functionNode15.getIntProp(4, 26);
        functionNode15.flattenSymbolTable(true);
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList24 = functionNode15.getParams();
        functionNode1.setParams(astNodeList24);
        functionNode1.setEndLineno(12);
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor28 = functionNode1.iterator();
        int int29 = functionNode1.getLineno();
        int int30 = functionNode1.getLp();
        com.google.javascript.rhino.head.ast.Scope scope33 = new com.google.javascript.rhino.head.ast.Scope(109, (int) (short) -1);
        scope33.clearParentScope();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode38 = new com.google.javascript.rhino.head.ast.FunctionNode((int) (byte) 100);
        int int39 = functionNode38.getEncodedSourceStart();
        int int40 = functionNode38.getFunctionCount();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode41 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode42 = functionNode41.getTop();
        functionNode41.setParens((int) (byte) 1, (int) (short) 1);
        int int46 = functionNode41.getRp();
        com.google.javascript.rhino.head.Node node48 = new com.google.javascript.rhino.head.Node(17, (com.google.javascript.rhino.head.Node) functionNode38, (com.google.javascript.rhino.head.Node) functionNode41, (int) (short) 0);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode49 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode50 = functionNode49.getTop();
        functionNode49.setParens((int) (byte) 1, (int) (short) 1);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode54 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.Scope scope56 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 10);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode57 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode58 = functionNode57.getTop();
        functionNode57.setParens((int) (byte) 1, (int) (short) 1);
        functionNode57.setEncodedSourceStart((-1));
        functionNode57.setFunctionIsGetter();
        scope56.addChildToFront((com.google.javascript.rhino.head.Node) functionNode57);
        functionNode54.setBody((com.google.javascript.rhino.head.ast.AstNode) functionNode57);
        functionNode54.setFunctionIsSetter();
        int int68 = functionNode49.addFunction(functionNode54);
        functionNode49.setEncodedSourceStart(1);
        boolean boolean71 = functionNode49.isExpressionClosure();
        com.google.javascript.rhino.head.Node node72 = functionNode49.target;
        int int73 = functionNode49.getEncodedSourceStart();
        com.google.javascript.rhino.head.Node node75 = new com.google.javascript.rhino.head.Node(20, (com.google.javascript.rhino.head.Node) functionNode38, (com.google.javascript.rhino.head.Node) functionNode49, 109);
        com.google.javascript.rhino.head.Node node77 = new com.google.javascript.rhino.head.Node(35, (com.google.javascript.rhino.head.Node) functionNode1, (com.google.javascript.rhino.head.Node) scope33, (com.google.javascript.rhino.head.Node) functionNode38, 19);
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor78 = functionNode38.iterator();
        boolean boolean79 = nodeItor78.hasNext();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(scriptNode11);
        org.junit.Assert.assertNotNull(node12);
        org.junit.Assert.assertNotNull(astNodeList13);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 26 + "'", int21 == 26);
        org.junit.Assert.assertNotNull(astNodeList24);
        org.junit.Assert.assertNotNull(nodeItor28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertNotNull(scriptNode42);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 1 + "'", int46 == 1);
        org.junit.Assert.assertNotNull(scriptNode50);
        org.junit.Assert.assertNotNull(scriptNode58);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 0 + "'", int68 == 0);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNull(node72);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 1 + "'", int73 == 1);
        org.junit.Assert.assertNotNull(nodeItor78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
    }

    @Test
    public void test09909() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09909");
        com.google.javascript.rhino.head.ast.Jump jump2 = new com.google.javascript.rhino.head.ast.Jump((-146877426), 0);
        com.google.javascript.rhino.head.Node node5 = new com.google.javascript.rhino.head.Node(8, 19);
        jump2.addChildrenToFront(node5);
    }

    @Test
    public void test09910() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09910");
        com.google.javascript.rhino.head.ast.Jump jump4 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump4.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump8 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump4, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int11 = scriptNode10.getEndLineno();
        int int12 = scriptNode10.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList13 = scriptNode10.getChildScopes();
        com.google.javascript.rhino.head.Node node14 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump4, (com.google.javascript.rhino.head.Node) scriptNode10);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList15 = scriptNode10.getFunctions();
        functionNodeList15.clear();
        int int18 = functionNodeList15.lastIndexOf((java.lang.Object) (-1L));
        functionNodeList15.clear();
        com.google.javascript.rhino.head.ast.Jump jump24 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump24.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump28 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump24, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode30 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int31 = scriptNode30.getEndLineno();
        int int32 = scriptNode30.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList33 = scriptNode30.getChildScopes();
        com.google.javascript.rhino.head.Node node34 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump24, (com.google.javascript.rhino.head.Node) scriptNode30);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList35 = scriptNode30.getFunctions();
        int int36 = functionNodeList35.size();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator37 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        functionNodeList35.sort((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator37);
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator39 = positionComparator37.reversed();
        functionNodeList15.sort((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator37);
        com.google.javascript.rhino.head.ast.Symbol symbol41 = new com.google.javascript.rhino.head.ast.Symbol();
        java.lang.String str42 = symbol41.getName();
        com.google.javascript.rhino.head.Node node43 = symbol41.getNode();
        symbol41.setIndex(1);
        symbol41.setIndex(109);
        boolean boolean48 = functionNodeList15.equals((java.lang.Object) symbol41);
        java.util.Spliterator<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeSpliterator49 = functionNodeList15.spliterator();
        boolean boolean50 = functionNodeList15.isEmpty();
        com.google.javascript.rhino.head.ast.Jump jump53 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode55 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int56 = scriptNode55.getEndLineno();
        int int57 = scriptNode55.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList58 = scriptNode55.getChildScopes();
        jump53.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode55);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode61 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int62 = functionNode61.getLp();
        functionNode61.setEncodedSource("");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode65 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int66 = functionNode65.getLp();
        functionNode65.setEncodedSource("");
        functionNode65.flattenSymbolTable(false);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode71 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int72 = functionNode71.getLp();
        com.google.javascript.rhino.head.Node node74 = new com.google.javascript.rhino.head.Node((-1), (com.google.javascript.rhino.head.Node) functionNode61, (com.google.javascript.rhino.head.Node) functionNode65, (com.google.javascript.rhino.head.Node) functionNode71, (int) '#');
        jump53.addChildrenToFront((com.google.javascript.rhino.head.Node) functionNode61);
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList76 = functionNode61.getStatements();
        functionNode61.setBaseLineno(16);
        java.lang.String str79 = functionNode61.toString();
        java.lang.String str80 = functionNode61.getEncodedSource();
        functionNode61.setFunctionIsGetter();
        functionNode61.setIsExpressionClosure(true);
        boolean boolean84 = functionNodeList15.equals((java.lang.Object) functionNode61);
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.ast.FunctionNode functionNode86 = functionNodeList15.remove(1186675070);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNull(scopeList13);
        org.junit.Assert.assertNotNull(functionNodeList15);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNull(scopeList33);
        org.junit.Assert.assertNotNull(functionNodeList35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertNotNull(astNodeComparator39);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNull(node43);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(functionNodeSpliterator49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1));
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
        org.junit.Assert.assertNull(scopeList58);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + (-1) + "'", int62 == (-1));
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + (-1) + "'", int66 == (-1));
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + (-1) + "'", int72 == (-1));
        org.junit.Assert.assertNotNull(astNodeList76);
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "109" + "'", str79, "109");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "" + "'", str80, "");
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
    }

    @Test
    public void test09911() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09911");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode0 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int1 = functionNode0.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = functionNode0.getTop();
        boolean boolean3 = functionNode0.hasSideEffects();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int6 = scriptNode5.getEndLineno();
        int int7 = scriptNode5.getBaseLineno();
        com.google.javascript.rhino.head.ast.Jump jump10 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode12 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int13 = scriptNode12.getEndLineno();
        int int14 = scriptNode12.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList15 = scriptNode12.getChildScopes();
        jump10.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode12);
        java.lang.String str17 = scriptNode12.debugPrint();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode5, (com.google.javascript.rhino.head.ast.Scope) scriptNode12);
        com.google.javascript.rhino.head.ast.Scope scope19 = new com.google.javascript.rhino.head.ast.Scope();
        scriptNode12.target = scope19;
        functionNode0.addChildScope(scope19);
        boolean boolean22 = functionNode0.hasConsistentReturnUsage();
        boolean boolean23 = functionNode0.hasSideEffects();
        functionNode0.setLp((-1262414679));
        functionNode0.setBounds((-146877426), (-1));
        functionNode0.setRelative(819764875);
        com.google.javascript.rhino.head.Node node31 = functionNode0.target;
        functionNode0.clearParentScope();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode35 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int36 = scriptNode35.getEndLineno();
        int int37 = scriptNode35.getBaseLineno();
        com.google.javascript.rhino.head.ast.Jump jump40 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode42 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int43 = scriptNode42.getEndLineno();
        int int44 = scriptNode42.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList45 = scriptNode42.getChildScopes();
        jump40.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode42);
        java.lang.String str47 = scriptNode42.debugPrint();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode35, (com.google.javascript.rhino.head.ast.Scope) scriptNode42);
        com.google.javascript.rhino.head.ast.AstNode astNode49 = scriptNode35.getParent();
        scriptNode35.setSourceName("                    /null/");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode52 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.Scope scope54 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 10);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode55 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode56 = functionNode55.getTop();
        functionNode55.setParens((int) (byte) 1, (int) (short) 1);
        functionNode55.setEncodedSourceStart((-1));
        functionNode55.setFunctionIsGetter();
        scope54.addChildToFront((com.google.javascript.rhino.head.Node) functionNode55);
        functionNode52.setBody((com.google.javascript.rhino.head.ast.AstNode) functionNode55);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode65 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode66 = functionNode65.getTop();
        functionNode65.setParens((int) (byte) 1, (int) (short) 1);
        functionNode65.setEncodedSourceStart((-1));
        java.util.List<com.google.javascript.rhino.head.Node> nodeList72 = functionNode65.getResumptionPoints();
        int int73 = functionNode65.getLp();
        functionNode52.setBody((com.google.javascript.rhino.head.ast.AstNode) functionNode65);
        com.google.javascript.rhino.head.Node node75 = functionNode65.getNext();
        scriptNode35.addChildScope((com.google.javascript.rhino.head.ast.Scope) functionNode65);
        com.google.javascript.rhino.head.ast.Jump jump78 = new com.google.javascript.rhino.head.ast.Jump(13, (com.google.javascript.rhino.head.Node) functionNode65, 22);
        boolean boolean79 = functionNode65.isGenerator();
        boolean boolean80 = functionNode65.requiresActivation();
        // The following exception was thrown during execution in test generation
        try {
            functionNode0.setContinue((com.google.javascript.rhino.head.Node) functionNode65);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-1) + "'", int1 == (-1));
        org.junit.Assert.assertNotNull(scriptNode2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNull(scopeList15);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str17, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNull(node31);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertNull(scopeList45);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str47, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertNull(astNode49);
        org.junit.Assert.assertNotNull(scriptNode56);
        org.junit.Assert.assertNotNull(scriptNode66);
        org.junit.Assert.assertNull(nodeList72);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 1 + "'", int73 == 1);
        org.junit.Assert.assertNull(node75);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
    }

    @Test
    public void test09912() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09912");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode0 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int1 = functionNode0.getLp();
        functionNode0.setLineno(0);
        boolean boolean4 = functionNode0.requiresActivation();
        int int5 = functionNode0.getFunctionCount();
        int int6 = functionNode0.getEndLineno();
        boolean boolean7 = functionNode0.isGenerator();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-1) + "'", int1 == (-1));
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    public void test09913() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09913");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode0 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int1 = functionNode0.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = functionNode0.getTop();
        boolean boolean3 = functionNode0.hasSideEffects();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int6 = scriptNode5.getEndLineno();
        int int7 = scriptNode5.getBaseLineno();
        com.google.javascript.rhino.head.ast.Jump jump10 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode12 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int13 = scriptNode12.getEndLineno();
        int int14 = scriptNode12.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList15 = scriptNode12.getChildScopes();
        jump10.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode12);
        java.lang.String str17 = scriptNode12.debugPrint();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode5, (com.google.javascript.rhino.head.ast.Scope) scriptNode12);
        com.google.javascript.rhino.head.ast.Scope scope19 = new com.google.javascript.rhino.head.ast.Scope();
        scriptNode12.target = scope19;
        functionNode0.addChildScope(scope19);
        boolean boolean22 = functionNode0.hasConsistentReturnUsage();
        boolean boolean23 = functionNode0.hasSideEffects();
        functionNode0.setLp((-1262414679));
        functionNode0.setBounds((-146877426), (-1));
        com.google.javascript.rhino.head.Node node29 = functionNode0.target;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-1) + "'", int1 == (-1));
        org.junit.Assert.assertNotNull(scriptNode2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNull(scopeList15);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str17, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNull(node29);
    }

    @Test
    public void test09914() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09914");
        com.google.javascript.rhino.head.ast.Jump jump3 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump3.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump7 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump3, 0);
        com.google.javascript.rhino.head.ast.Jump jump11 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump11.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump15 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump11, 0);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode16 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int17 = functionNode16.getLp();
        functionNode16.setEncodedSource("");
        functionNode16.flattenSymbolTable(false);
        jump3.addChildAfter((com.google.javascript.rhino.head.Node) jump11, (com.google.javascript.rhino.head.Node) functionNode16);
        com.google.javascript.rhino.head.Node node23 = functionNode16.target;
        java.lang.Object obj24 = functionNode16.getCompilerData();
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNull(node23);
        org.junit.Assert.assertNull(obj24);
    }

    @Test
    public void test09915() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09915");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 10);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode2 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode3 = functionNode2.getTop();
        functionNode2.setParens((int) (byte) 1, (int) (short) 1);
        functionNode2.setEncodedSourceStart((-1));
        functionNode2.setFunctionIsGetter();
        scope1.addChildToFront((com.google.javascript.rhino.head.Node) functionNode2);
        functionNode2.setRp(19);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int15 = scriptNode14.getEndLineno();
        int int16 = scriptNode14.getBaseLineno();
        com.google.javascript.rhino.head.ast.Jump jump19 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode21 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int22 = scriptNode21.getEndLineno();
        int int23 = scriptNode21.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList24 = scriptNode21.getChildScopes();
        jump19.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode21);
        java.lang.String str26 = scriptNode21.debugPrint();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode14, (com.google.javascript.rhino.head.ast.Scope) scriptNode21);
        com.google.javascript.rhino.head.ast.Scope scope28 = new com.google.javascript.rhino.head.ast.Scope();
        scriptNode21.target = scope28;
        java.lang.String str30 = functionNode2.toStringTree(scriptNode21);
        java.lang.String str32 = scriptNode21.toSource((int) (short) 10);
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap33 = scriptNode21.getSymbolTable();
        int int34 = strMap33.size();
        com.google.javascript.rhino.head.ast.Jump jump39 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump39.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump43 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump39, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode45 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int46 = scriptNode45.getEndLineno();
        int int47 = scriptNode45.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList48 = scriptNode45.getChildScopes();
        com.google.javascript.rhino.head.Node node49 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump39, (com.google.javascript.rhino.head.Node) scriptNode45);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList50 = scriptNode45.getFunctions();
        functionNodeList50.clear();
        functionNodeList50.clear();
        com.google.javascript.rhino.head.ast.Jump jump57 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump57.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump61 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump57, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode63 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int64 = scriptNode63.getEndLineno();
        int int65 = scriptNode63.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList66 = scriptNode63.getChildScopes();
        com.google.javascript.rhino.head.Node node67 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump57, (com.google.javascript.rhino.head.Node) scriptNode63);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList68 = scriptNode63.getFunctions();
        java.util.Spliterator<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeSpliterator69 = functionNodeList68.spliterator();
        int int71 = functionNodeList68.indexOf((java.lang.Object) (byte) 10);
        boolean boolean72 = functionNodeList50.retainAll((java.util.Collection<com.google.javascript.rhino.head.ast.FunctionNode>) functionNodeList68);
        boolean boolean73 = strMap33.containsKey((java.lang.Object) functionNodeList50);
        java.util.Collection<com.google.javascript.rhino.head.ast.Symbol> symbolCollection74 = strMap33.values();
        com.google.javascript.rhino.head.Node node76 = com.google.javascript.rhino.head.Node.newNumber((double) '#');
        com.google.javascript.rhino.head.ast.Symbol symbol77 = strMap33.get((java.lang.Object) '#');
        com.google.javascript.rhino.head.ast.FunctionNode functionNode78 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int79 = functionNode78.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode80 = functionNode78.getTop();
        com.google.javascript.rhino.head.Node node81 = functionNode78.getLastSibling();
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList82 = functionNode78.getParams();
        com.google.javascript.rhino.head.ast.Symbol symbol83 = new com.google.javascript.rhino.head.ast.Symbol();
        int int84 = symbol83.getIndex();
        symbol83.setIndex(35);
        com.google.javascript.rhino.head.ast.Symbol symbol87 = strMap33.getOrDefault((java.lang.Object) functionNode78, symbol83);
        com.google.javascript.rhino.head.ast.Symbol symbol89 = new com.google.javascript.rhino.head.ast.Symbol();
        java.lang.String str90 = symbol89.getName();
        com.google.javascript.rhino.head.Node node91 = symbol89.getNode();
        java.lang.String str92 = symbol89.getDeclTypeName();
        com.google.javascript.rhino.head.ast.Scope scope93 = symbol89.getContainingTable();
        symbol89.setIndex(26);
        com.google.javascript.rhino.head.ast.Symbol symbol96 = strMap33.put("                                    /null/", symbol89);
        boolean boolean97 = strMap33.isEmpty();
        java.util.Set<java.lang.String> strSet98 = strMap33.keySet();
        strMap33.clear();
        org.junit.Assert.assertNotNull(scriptNode3);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNull(scopeList24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str26, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "                    {\n                    }\n" + "'", str32, "                    {\n                    }\n");
        org.junit.Assert.assertNotNull(strMap33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertNull(scopeList48);
        org.junit.Assert.assertNotNull(functionNodeList50);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + (-1) + "'", int64 == (-1));
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + (-1) + "'", int65 == (-1));
        org.junit.Assert.assertNull(scopeList66);
        org.junit.Assert.assertNotNull(functionNodeList68);
        org.junit.Assert.assertNotNull(functionNodeSpliterator69);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + (-1) + "'", int71 == (-1));
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(symbolCollection74);
        org.junit.Assert.assertNotNull(node76);
        org.junit.Assert.assertNull(symbol77);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + (-1) + "'", int79 == (-1));
        org.junit.Assert.assertNotNull(scriptNode80);
        org.junit.Assert.assertNotNull(node81);
        org.junit.Assert.assertNotNull(astNodeList82);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + (-1) + "'", int84 == (-1));
        org.junit.Assert.assertNotNull(symbol87);
        org.junit.Assert.assertNull(str90);
        org.junit.Assert.assertNull(node91);
        org.junit.Assert.assertEquals("'" + str92 + "' != '" + "EOF" + "'", str92, "EOF");
        org.junit.Assert.assertNull(scope93);
        org.junit.Assert.assertNull(symbol96);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + false + "'", boolean97 == false);
        org.junit.Assert.assertNotNull(strSet98);
    }

    @Test
    public void test09916() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09916");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str1 = com.google.javascript.rhino.head.ast.AstNode.operatorToString(796955);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid operator: 796955");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test09917() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09917");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode1 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int2 = functionNode1.getLp();
        functionNode1.setEncodedSource("");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode5 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int6 = functionNode5.getLp();
        functionNode5.setEncodedSource("");
        functionNode5.flattenSymbolTable(false);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode11 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int12 = functionNode11.getLp();
        com.google.javascript.rhino.head.Node node14 = new com.google.javascript.rhino.head.Node((-1), (com.google.javascript.rhino.head.Node) functionNode1, (com.google.javascript.rhino.head.Node) functionNode5, (com.google.javascript.rhino.head.Node) functionNode11, (int) '#');
        com.google.javascript.rhino.head.ast.Name name15 = null;
        functionNode5.setFunctionName(name15);
        int int17 = functionNode5.getLineno();
        functionNode5.setLineno((-148907469));
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
    }

    @Test
    public void test09918() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09918");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode0 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int1 = functionNode0.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = functionNode0.getTop();
        com.google.javascript.rhino.head.ast.AstNode astNode3 = functionNode0.getBody();
        com.google.javascript.rhino.head.ast.Scope scope4 = functionNode0.getParentScope();
        com.google.javascript.rhino.head.ast.Name name6 = null;
        com.google.javascript.rhino.head.ast.FunctionNode functionNode7 = new com.google.javascript.rhino.head.ast.FunctionNode((int) (byte) -1, name6);
        java.util.List<com.google.javascript.rhino.head.Node> nodeList8 = functionNode7.getResumptionPoints();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList9 = functionNode7.getSymbols();
        functionNode0.setSymbols(symbolList9);
        java.lang.String str11 = functionNode0.getJsDoc();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-1) + "'", int1 == (-1));
        org.junit.Assert.assertNotNull(scriptNode2);
        org.junit.Assert.assertNull(astNode3);
        org.junit.Assert.assertNull(scope4);
        org.junit.Assert.assertNull(nodeList8);
        org.junit.Assert.assertNotNull(symbolList9);
        org.junit.Assert.assertNull(str11);
    }

    @Test
    public void test09919() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09919");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode0 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int1 = functionNode0.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = functionNode0.getTop();
        com.google.javascript.rhino.head.ast.Name name3 = null;
        functionNode0.setFunctionName(name3);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode5 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = functionNode5.getTop();
        functionNode0.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode5);
        functionNode5.setIsExpressionClosure(true);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode11 = new com.google.javascript.rhino.head.ast.FunctionNode((int) (byte) 100);
        int int12 = functionNode5.addFunction(functionNode11);
        com.google.javascript.rhino.head.ast.Name name13 = null;
        functionNode5.setFunctionName(name13);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode16 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int17 = functionNode16.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode18 = functionNode16.getTop();
        com.google.javascript.rhino.head.ast.AstNode astNode19 = functionNode16.getBody();
        int int20 = functionNode16.getLength();
        functionNode5.putProp(100, (java.lang.Object) functionNode16);
        functionNode16.setRequiresActivation();
        int int23 = functionNode16.getRegexpCount();
        functionNode16.setIsGenerator();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-1) + "'", int1 == (-1));
        org.junit.Assert.assertNotNull(scriptNode2);
        org.junit.Assert.assertNotNull(scriptNode6);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNotNull(scriptNode18);
        org.junit.Assert.assertNull(astNode19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
    }

    @Test
    public void test09920() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09920");
        com.google.javascript.rhino.head.ast.Name name1 = null;
        com.google.javascript.rhino.head.ast.FunctionNode functionNode2 = new com.google.javascript.rhino.head.ast.FunctionNode(19, name1);
        java.lang.String str3 = functionNode2.getName();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
    }

    @Test
    public void test09921() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09921");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode0 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = functionNode0.getTop();
        int int2 = functionNode0.getRegexpCount();
        int int3 = functionNode0.getParamCount();
        boolean boolean4 = functionNode0.isGetter();
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor5 = null;
        // The following exception was thrown during execution in test generation
        try {
            functionNode0.visit(nodeVisitor5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(scriptNode1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    }

    @Test
    public void test09922() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09922");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode1 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int2 = functionNode1.getLp();
        functionNode1.setEncodedSource("");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode5 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int6 = functionNode5.getLp();
        functionNode5.setEncodedSource("");
        functionNode5.flattenSymbolTable(false);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode11 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int12 = functionNode11.getLp();
        com.google.javascript.rhino.head.Node node14 = new com.google.javascript.rhino.head.Node((-1), (com.google.javascript.rhino.head.Node) functionNode1, (com.google.javascript.rhino.head.Node) functionNode5, (com.google.javascript.rhino.head.Node) functionNode11, (int) '#');
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList15 = functionNode1.getChildScopes();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode17 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int18 = scriptNode17.getEndLineno();
        int int19 = scriptNode17.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList20 = scriptNode17.getChildScopes();
        functionNode1.setMemberExprNode((com.google.javascript.rhino.head.ast.AstNode) scriptNode17);
        functionNode1.setEncodedSourceEnd((int) (short) 100);
        functionNode1.setLp(1579347477);
        boolean boolean26 = functionNode1.hasChildren();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode27 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int28 = functionNode27.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode29 = functionNode27.getTop();
        com.google.javascript.rhino.head.ast.Name name30 = null;
        functionNode27.setFunctionName(name30);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode32 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode33 = functionNode32.getTop();
        functionNode27.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode32);
        int int35 = functionNode32.getRp();
        functionNode32.setParens(11, 2);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode39 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int40 = functionNode39.getLp();
        functionNode39.setEncodedSource("");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode43 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int44 = functionNode43.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode45 = functionNode43.getTop();
        com.google.javascript.rhino.head.ast.Name name46 = null;
        functionNode43.setFunctionName(name46);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode48 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode49 = functionNode48.getTop();
        functionNode43.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode48);
        int int51 = functionNode48.getRp();
        int int52 = functionNode48.getFunctionType();
        functionNode39.addParam((com.google.javascript.rhino.head.ast.AstNode) functionNode48);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode54 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int55 = functionNode54.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode56 = functionNode54.getTop();
        com.google.javascript.rhino.head.Node node57 = functionNode54.getLastSibling();
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList58 = functionNode54.getParams();
        functionNode39.setParams(astNodeList58);
        functionNode32.setParams(astNodeList58);
        com.google.javascript.rhino.head.ast.Scope scope62 = functionNode32.getDefiningScope("");
        functionNode32.setRp((int) (short) 100);
        int int65 = functionNode32.getPosition();
        functionNode1.addParam((com.google.javascript.rhino.head.ast.AstNode) functionNode32);
        functionNode32.setLp(17);
        functionNode32.setEncodedSourceStart((int) (short) 10);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNull(scopeList15);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNull(scopeList20);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNotNull(scriptNode29);
        org.junit.Assert.assertNotNull(scriptNode33);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertNotNull(scriptNode45);
        org.junit.Assert.assertNotNull(scriptNode49);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1));
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1));
        org.junit.Assert.assertNotNull(scriptNode56);
        org.junit.Assert.assertNotNull(node57);
        org.junit.Assert.assertNotNull(astNodeList58);
        org.junit.Assert.assertNull(scope62);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 0 + "'", int65 == 0);
    }

    @Test
    public void test09923() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09923");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode0 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int1 = functionNode0.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = functionNode0.getTop();
        com.google.javascript.rhino.head.ast.AstNode astNode3 = functionNode0.getBody();
        com.google.javascript.rhino.head.ast.Scope scope4 = functionNode0.getParentScope();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList5 = functionNode0.getSymbols();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode8 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int9 = functionNode8.getLp();
        functionNode8.setLp((int) (short) 1);
        int int14 = functionNode8.getIntProp(4, 26);
        com.google.javascript.rhino.head.ast.Jump jump15 = new com.google.javascript.rhino.head.ast.Jump(3, (com.google.javascript.rhino.head.Node) functionNode8);
        com.google.javascript.rhino.head.Node node16 = new com.google.javascript.rhino.head.Node((int) '4', (com.google.javascript.rhino.head.Node) functionNode8);
        functionNode8.setFunctionType(11);
        boolean boolean19 = functionNode8.hasChildren();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode20 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int21 = functionNode20.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode22 = functionNode20.getTop();
        com.google.javascript.rhino.head.ast.Name name23 = null;
        functionNode20.setFunctionName(name23);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode25 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.Scope scope27 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 10);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode28 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode29 = functionNode28.getTop();
        functionNode28.setParens((int) (byte) 1, (int) (short) 1);
        functionNode28.setEncodedSourceStart((-1));
        functionNode28.setFunctionIsGetter();
        scope27.addChildToFront((com.google.javascript.rhino.head.Node) functionNode28);
        functionNode25.setBody((com.google.javascript.rhino.head.ast.AstNode) functionNode28);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode38 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode39 = functionNode38.getTop();
        functionNode38.setParens((int) (byte) 1, (int) (short) 1);
        functionNode38.setEncodedSourceStart((-1));
        java.util.List<com.google.javascript.rhino.head.Node> nodeList45 = functionNode38.getResumptionPoints();
        int int46 = functionNode38.getLp();
        functionNode25.setBody((com.google.javascript.rhino.head.ast.AstNode) functionNode38);
        functionNode20.addParam((com.google.javascript.rhino.head.ast.AstNode) functionNode38);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode49 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int50 = functionNode49.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode51 = functionNode49.getTop();
        com.google.javascript.rhino.head.ast.Name name52 = null;
        functionNode49.setFunctionName(name52);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode54 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode55 = functionNode54.getTop();
        functionNode49.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode54);
        int int57 = functionNode54.getRp();
        int int58 = functionNode54.getFunctionType();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) functionNode38, (com.google.javascript.rhino.head.ast.Scope) functionNode54);
        functionNode8.setBody((com.google.javascript.rhino.head.ast.AstNode) functionNode54);
        functionNode8.setFunctionType(10);
        com.google.javascript.rhino.head.ast.Scope scope64 = functionNode8.getDefiningScope("                                                                                                                                                                                                  ");
        functionNode0.addChildrenToFront((com.google.javascript.rhino.head.Node) functionNode8);
        int int66 = functionNode0.getFunctionCount();
        boolean boolean67 = functionNode0.isGetterOrSetter();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-1) + "'", int1 == (-1));
        org.junit.Assert.assertNotNull(scriptNode2);
        org.junit.Assert.assertNull(astNode3);
        org.junit.Assert.assertNull(scope4);
        org.junit.Assert.assertNotNull(symbolList5);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 26 + "'", int14 == 26);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertNotNull(scriptNode22);
        org.junit.Assert.assertNotNull(scriptNode29);
        org.junit.Assert.assertNotNull(scriptNode39);
        org.junit.Assert.assertNull(nodeList45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 1 + "'", int46 == 1);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertNotNull(scriptNode51);
        org.junit.Assert.assertNotNull(scriptNode55);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertNull(scope64);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 0 + "'", int66 == 0);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
    }

    @Test
    public void test09924() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09924");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int2 = scriptNode1.getEndLineno();
        int int3 = scriptNode1.getBaseLineno();
        com.google.javascript.rhino.head.ast.Jump jump6 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode8 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int9 = scriptNode8.getEndLineno();
        int int10 = scriptNode8.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList11 = scriptNode8.getChildScopes();
        jump6.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode8);
        java.lang.String str13 = scriptNode8.debugPrint();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode1, (com.google.javascript.rhino.head.ast.Scope) scriptNode8);
        com.google.javascript.rhino.head.ast.Scope scope15 = new com.google.javascript.rhino.head.ast.Scope();
        scriptNode8.target = scope15;
        int int17 = scope15.getAbsolutePosition();
        com.google.javascript.rhino.head.ast.Jump jump21 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump21.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump25 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump21, 0);
        com.google.javascript.rhino.head.ast.Jump jump29 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump29.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump33 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump29, 0);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode34 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int35 = functionNode34.getLp();
        functionNode34.setEncodedSource("");
        functionNode34.flattenSymbolTable(false);
        jump21.addChildAfter((com.google.javascript.rhino.head.Node) jump29, (com.google.javascript.rhino.head.Node) functionNode34);
        com.google.javascript.rhino.head.Node node41 = functionNode34.target;
        boolean boolean42 = functionNode34.hasConsistentReturnUsage();
        com.google.javascript.rhino.head.ast.Name name43 = functionNode34.getFunctionName();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode44 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.Scope scope46 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 10);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode47 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode48 = functionNode47.getTop();
        functionNode47.setParens((int) (byte) 1, (int) (short) 1);
        functionNode47.setEncodedSourceStart((-1));
        functionNode47.setFunctionIsGetter();
        scope46.addChildToFront((com.google.javascript.rhino.head.Node) functionNode47);
        functionNode44.setBody((com.google.javascript.rhino.head.ast.AstNode) functionNode47);
        functionNode47.setRelative(0);
        functionNode34.setBody((com.google.javascript.rhino.head.ast.AstNode) functionNode47);
        functionNode34.setEncodedSourceStart((int) (byte) 0);
        com.google.javascript.rhino.head.ast.AstNode astNode62 = functionNode34.getBody();
        int int63 = functionNode34.getFunctionCount();
        boolean boolean64 = functionNode34.hasSideEffects();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode67 = new com.google.javascript.rhino.head.ast.FunctionNode((int) (byte) 100);
        int int68 = functionNode67.getEncodedSourceStart();
        int int69 = functionNode67.getFunctionCount();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode70 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode71 = functionNode70.getTop();
        functionNode70.setParens((int) (byte) 1, (int) (short) 1);
        int int75 = functionNode70.getRp();
        com.google.javascript.rhino.head.Node node77 = new com.google.javascript.rhino.head.Node(17, (com.google.javascript.rhino.head.Node) functionNode67, (com.google.javascript.rhino.head.Node) functionNode70, (int) (short) 0);
        com.google.javascript.rhino.head.ast.Symbol symbol79 = functionNode70.getSymbol("$0");
        functionNode34.addChildScope((com.google.javascript.rhino.head.ast.Scope) functionNode70);
        java.lang.String str81 = scope15.toStringTree((com.google.javascript.rhino.head.ast.ScriptNode) functionNode70);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNull(scopeList11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str13, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertNull(node41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNull(name43);
        org.junit.Assert.assertNotNull(scriptNode48);
        org.junit.Assert.assertNotNull(astNode62);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 0 + "'", int63 == 0);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + (-1) + "'", int68 == (-1));
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 0 + "'", int69 == 0);
        org.junit.Assert.assertNotNull(scriptNode71);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 1 + "'", int75 == 1);
        org.junit.Assert.assertNull(symbol79);
        org.junit.Assert.assertNull(str81);
    }

    @Test
    public void test09925() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09925");
        com.google.javascript.rhino.head.ast.Jump jump4 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump4.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump8 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump4, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int11 = scriptNode10.getEndLineno();
        int int12 = scriptNode10.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList13 = scriptNode10.getChildScopes();
        com.google.javascript.rhino.head.Node node14 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump4, (com.google.javascript.rhino.head.Node) scriptNode10);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList15 = scriptNode10.getFunctions();
        functionNodeList15.clear();
        com.google.javascript.rhino.head.ast.Jump jump21 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump21.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump25 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump21, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode27 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int28 = scriptNode27.getEndLineno();
        int int29 = scriptNode27.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList30 = scriptNode27.getChildScopes();
        com.google.javascript.rhino.head.Node node31 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump21, (com.google.javascript.rhino.head.Node) scriptNode27);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList32 = scriptNode27.getFunctions();
        boolean boolean33 = functionNodeList15.removeAll((java.util.Collection<com.google.javascript.rhino.head.ast.FunctionNode>) functionNodeList32);
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator34 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.Jump jump39 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump39.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump43 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump39, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode45 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int46 = scriptNode45.getEndLineno();
        int int47 = scriptNode45.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList48 = scriptNode45.getChildScopes();
        com.google.javascript.rhino.head.Node node49 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump39, (com.google.javascript.rhino.head.Node) scriptNode45);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList50 = scriptNode45.getFunctions();
        int int51 = functionNodeList50.size();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator52 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        functionNodeList50.sort((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator52);
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator54 = positionComparator52.reversed();
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator55 = astNodeComparator54.reversed();
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator56 = positionComparator34.thenComparing(astNodeComparator54);
        functionNodeList15.sort(astNodeComparator54);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode58 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode59 = functionNode58.getTop();
        com.google.javascript.rhino.head.ast.Name name60 = null;
        functionNode58.setFunctionName(name60);
        boolean boolean62 = functionNode58.requiresActivation();
        com.google.javascript.rhino.head.ast.Jump jump66 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump66.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump70 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump66, 0);
        com.google.javascript.rhino.head.ast.Jump jump74 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump74.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump78 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump74, 0);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode79 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int80 = functionNode79.getLp();
        functionNode79.setEncodedSource("");
        functionNode79.flattenSymbolTable(false);
        jump66.addChildAfter((com.google.javascript.rhino.head.Node) jump74, (com.google.javascript.rhino.head.Node) functionNode79);
        com.google.javascript.rhino.head.Node node86 = functionNode79.target;
        functionNode58.setBody((com.google.javascript.rhino.head.ast.AstNode) functionNode79);
        int int88 = functionNode79.getEncodedSourceStart();
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList89 = functionNode79.getFunctions();
        boolean boolean90 = functionNodeList15.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.FunctionNode>) functionNodeList89);
        java.util.ListIterator<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeItor91 = functionNodeList15.listIterator();
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.ast.FunctionNode functionNode93 = functionNodeList15.get((-1262414679));
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: -1262414679");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNull(scopeList13);
        org.junit.Assert.assertNotNull(functionNodeList15);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertNull(scopeList30);
        org.junit.Assert.assertNotNull(functionNodeList32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertNull(scopeList48);
        org.junit.Assert.assertNotNull(functionNodeList50);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertNotNull(astNodeComparator54);
        org.junit.Assert.assertNotNull(astNodeComparator55);
        org.junit.Assert.assertNotNull(astNodeComparator56);
        org.junit.Assert.assertNotNull(scriptNode59);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + (-1) + "'", int80 == (-1));
        org.junit.Assert.assertNull(node86);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + (-1) + "'", int88 == (-1));
        org.junit.Assert.assertNotNull(functionNodeList89);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertNotNull(functionNodeItor91);
    }

    @Test
    public void test09926() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09926");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode0 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int1 = functionNode0.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = functionNode0.getTop();
        com.google.javascript.rhino.head.ast.Name name3 = null;
        functionNode0.setFunctionName(name3);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode5 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int6 = functionNode5.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode8 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        java.lang.String str9 = functionNode5.toStringTree(scriptNode8);
        functionNode5.setFunctionIsGetter();
        int int11 = functionNode0.addFunction(functionNode5);
        boolean boolean12 = functionNode5.hasSideEffects();
        com.google.javascript.rhino.head.Node node13 = functionNode5.getLastChild();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode14 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int15 = functionNode14.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode17 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        java.lang.String str18 = functionNode14.toStringTree(scriptNode17);
        functionNode14.setFunctionIsGetter();
        com.google.javascript.rhino.head.ast.AstNode astNode20 = functionNode14.getBody();
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList21 = functionNode14.getParams();
        functionNode5.setParams(astNodeList21);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode24 = new com.google.javascript.rhino.head.ast.FunctionNode(0);
        boolean boolean25 = functionNode24.hasChildren();
        boolean boolean26 = functionNode24.isGenerator();
        functionNode5.setMemberExprNode((com.google.javascript.rhino.head.ast.AstNode) functionNode24);
        com.google.javascript.rhino.head.ast.AstNode astNode28 = functionNode5.getBody();
        functionNode5.setParens((-462033282), 22);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-1) + "'", int1 == (-1));
        org.junit.Assert.assertNotNull(scriptNode2);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNull(node13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(astNode20);
        org.junit.Assert.assertNotNull(astNodeList21);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNull(astNode28);
    }

    @Test
    public void test09927() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09927");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode0 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int1 = functionNode0.getLp();
        functionNode0.setEncodedSource("");
        functionNode0.flattenSymbolTable(false);
        boolean boolean6 = functionNode0.requiresActivation();
        java.lang.String str7 = functionNode0.getEncodedSource();
        com.google.javascript.rhino.head.Node node9 = functionNode0.setType(19);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode11 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode12 = functionNode11.getTop();
        java.lang.String str13 = scriptNode12.getJsDoc();
        com.google.javascript.rhino.head.Node node15 = scriptNode12.setType(0);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode16 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int17 = functionNode16.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode19 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        java.lang.String str20 = functionNode16.toStringTree(scriptNode19);
        com.google.javascript.rhino.head.ast.Scope scope22 = scriptNode19.getDefiningScope("");
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList23 = scriptNode19.getSymbols();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode25 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int26 = scriptNode25.getEndLineno();
        int int27 = scriptNode25.getBaseLineno();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode19, (com.google.javascript.rhino.head.ast.Scope) scriptNode25);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode30 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int31 = scriptNode30.getEndLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode33 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int34 = scriptNode33.getEndLineno();
        scriptNode30.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode33);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode36 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int37 = functionNode36.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode38 = functionNode36.getTop();
        boolean boolean39 = functionNode36.hasSideEffects();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode41 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int42 = scriptNode41.getEndLineno();
        int int43 = scriptNode41.getBaseLineno();
        com.google.javascript.rhino.head.ast.Jump jump46 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode48 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int49 = scriptNode48.getEndLineno();
        int int50 = scriptNode48.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList51 = scriptNode48.getChildScopes();
        jump46.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode48);
        java.lang.String str53 = scriptNode48.debugPrint();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode41, (com.google.javascript.rhino.head.ast.Scope) scriptNode48);
        com.google.javascript.rhino.head.ast.Scope scope55 = new com.google.javascript.rhino.head.ast.Scope();
        scriptNode48.target = scope55;
        functionNode36.addChildScope(scope55);
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode33, (com.google.javascript.rhino.head.ast.Scope) functionNode36);
        com.google.javascript.rhino.head.Node node59 = new com.google.javascript.rhino.head.Node(20, (com.google.javascript.rhino.head.Node) scriptNode12, (com.google.javascript.rhino.head.Node) scriptNode19, (com.google.javascript.rhino.head.Node) scriptNode33);
        boolean boolean60 = scriptNode12.hasSideEffects();
        com.google.javascript.rhino.head.Node node61 = scriptNode12.target;
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList62 = scriptNode12.getStatements();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList63 = scriptNode12.getSymbols();
        node9.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode12);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-1) + "'", int1 == (-1));
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertNotNull(node9);
        org.junit.Assert.assertNotNull(scriptNode12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(node15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNull(scope22);
        org.junit.Assert.assertNotNull(symbolList23);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertNotNull(scriptNode38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertNull(scopeList51);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str53, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNull(node61);
        org.junit.Assert.assertNotNull(astNodeList62);
        org.junit.Assert.assertNotNull(symbolList63);
    }

    @Test
    public void test09928() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09928");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 10);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode2 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode3 = functionNode2.getTop();
        functionNode2.setParens((int) (byte) 1, (int) (short) 1);
        functionNode2.setEncodedSourceStart((-1));
        functionNode2.setFunctionIsGetter();
        scope1.addChildToFront((com.google.javascript.rhino.head.Node) functionNode2);
        functionNode2.setRp(19);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int15 = scriptNode14.getEndLineno();
        int int16 = scriptNode14.getBaseLineno();
        com.google.javascript.rhino.head.ast.Jump jump19 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode21 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int22 = scriptNode21.getEndLineno();
        int int23 = scriptNode21.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList24 = scriptNode21.getChildScopes();
        jump19.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode21);
        java.lang.String str26 = scriptNode21.debugPrint();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode14, (com.google.javascript.rhino.head.ast.Scope) scriptNode21);
        com.google.javascript.rhino.head.ast.Scope scope28 = new com.google.javascript.rhino.head.ast.Scope();
        scriptNode21.target = scope28;
        java.lang.String str30 = functionNode2.toStringTree(scriptNode21);
        java.lang.String str32 = scriptNode21.toSource((int) (short) 10);
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap33 = scriptNode21.getSymbolTable();
        int int34 = strMap33.size();
        com.google.javascript.rhino.head.ast.Jump jump39 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump39.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump43 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump39, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode45 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int46 = scriptNode45.getEndLineno();
        int int47 = scriptNode45.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList48 = scriptNode45.getChildScopes();
        com.google.javascript.rhino.head.Node node49 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump39, (com.google.javascript.rhino.head.Node) scriptNode45);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList50 = scriptNode45.getFunctions();
        functionNodeList50.clear();
        functionNodeList50.clear();
        com.google.javascript.rhino.head.ast.Jump jump57 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump57.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump61 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump57, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode63 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int64 = scriptNode63.getEndLineno();
        int int65 = scriptNode63.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList66 = scriptNode63.getChildScopes();
        com.google.javascript.rhino.head.Node node67 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump57, (com.google.javascript.rhino.head.Node) scriptNode63);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList68 = scriptNode63.getFunctions();
        java.util.Spliterator<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeSpliterator69 = functionNodeList68.spliterator();
        int int71 = functionNodeList68.indexOf((java.lang.Object) (byte) 10);
        boolean boolean72 = functionNodeList50.retainAll((java.util.Collection<com.google.javascript.rhino.head.ast.FunctionNode>) functionNodeList68);
        boolean boolean73 = strMap33.containsKey((java.lang.Object) functionNodeList50);
        java.util.Collection<com.google.javascript.rhino.head.ast.Symbol> symbolCollection74 = strMap33.values();
        com.google.javascript.rhino.head.Node node76 = com.google.javascript.rhino.head.Node.newNumber((double) '#');
        com.google.javascript.rhino.head.ast.Symbol symbol77 = strMap33.get((java.lang.Object) '#');
        java.util.Collection<com.google.javascript.rhino.head.ast.Symbol> symbolCollection78 = strMap33.values();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode79 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int80 = functionNode79.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode81 = functionNode79.getTop();
        com.google.javascript.rhino.head.Node node82 = functionNode79.getLastSibling();
        com.google.javascript.rhino.head.ast.Symbol symbol83 = strMap33.get((java.lang.Object) node82);
        com.google.javascript.rhino.head.ast.Symbol symbol85 = new com.google.javascript.rhino.head.ast.Symbol();
        java.lang.String str86 = symbol85.getName();
        com.google.javascript.rhino.head.Node node87 = symbol85.getNode();
        com.google.javascript.rhino.head.ast.Jump jump89 = new com.google.javascript.rhino.head.ast.Jump((int) ' ');
        symbol85.setNode((com.google.javascript.rhino.head.Node) jump89);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode92 = new com.google.javascript.rhino.head.ast.FunctionNode(0);
        int int93 = functionNode92.getBaseLineno();
        functionNode92.setSourceName("                                                                                                                                                                                                        /null/");
        symbol85.setContainingTable((com.google.javascript.rhino.head.ast.Scope) functionNode92);
        com.google.javascript.rhino.head.ast.Symbol symbol97 = strMap33.replace("                                      ", symbol85);
        boolean boolean98 = strMap33.isEmpty();
        org.junit.Assert.assertNotNull(scriptNode3);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNull(scopeList24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str26, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "                    {\n                    }\n" + "'", str32, "                    {\n                    }\n");
        org.junit.Assert.assertNotNull(strMap33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertNull(scopeList48);
        org.junit.Assert.assertNotNull(functionNodeList50);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + (-1) + "'", int64 == (-1));
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + (-1) + "'", int65 == (-1));
        org.junit.Assert.assertNull(scopeList66);
        org.junit.Assert.assertNotNull(functionNodeList68);
        org.junit.Assert.assertNotNull(functionNodeSpliterator69);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + (-1) + "'", int71 == (-1));
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(symbolCollection74);
        org.junit.Assert.assertNotNull(node76);
        org.junit.Assert.assertNull(symbol77);
        org.junit.Assert.assertNotNull(symbolCollection78);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + (-1) + "'", int80 == (-1));
        org.junit.Assert.assertNotNull(scriptNode81);
        org.junit.Assert.assertNotNull(node82);
        org.junit.Assert.assertNull(symbol83);
        org.junit.Assert.assertNull(str86);
        org.junit.Assert.assertNull(node87);
        org.junit.Assert.assertTrue("'" + int93 + "' != '" + (-1) + "'", int93 == (-1));
        org.junit.Assert.assertNull(symbol97);
        org.junit.Assert.assertTrue("'" + boolean98 + "' != '" + true + "'", boolean98 == true);
    }

    @Test
    public void test09929() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09929");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode0 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int1 = functionNode0.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = functionNode0.getTop();
        boolean boolean3 = functionNode0.hasSideEffects();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList4 = functionNode0.getSymbols();
        functionNode0.setRp(5);
        com.google.javascript.rhino.head.ast.Scope scope7 = functionNode0.getEnclosingScope();
        functionNode0.setLineno(5);
        functionNode0.setIsExpressionClosure(false);
        com.google.javascript.rhino.head.ast.Scope scope12 = functionNode0.getParentScope();
        java.lang.String str13 = functionNode0.getNextTempName();
        java.util.List<com.google.javascript.rhino.head.Node> nodeList14 = functionNode0.getResumptionPoints();
        com.google.javascript.rhino.head.ast.Scope scope17 = new com.google.javascript.rhino.head.ast.Scope(6, 4);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode18 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode19 = functionNode18.getTop();
        functionNode18.setParens((int) (byte) 1, (int) (short) 1);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode23 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.Scope scope25 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 10);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode26 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode27 = functionNode26.getTop();
        functionNode26.setParens((int) (byte) 1, (int) (short) 1);
        functionNode26.setEncodedSourceStart((-1));
        functionNode26.setFunctionIsGetter();
        scope25.addChildToFront((com.google.javascript.rhino.head.Node) functionNode26);
        functionNode23.setBody((com.google.javascript.rhino.head.ast.AstNode) functionNode26);
        functionNode23.setFunctionIsSetter();
        int int37 = functionNode18.addFunction(functionNode23);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode38 = functionNode23.getTop();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap39 = scriptNode38.getSymbolTable();
        int int40 = scope17.compareTo((com.google.javascript.rhino.head.ast.AstNode) scriptNode38);
        int int41 = functionNode0.compareTo((com.google.javascript.rhino.head.ast.AstNode) scope17);
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor42 = null;
        // The following exception was thrown during execution in test generation
        try {
            functionNode0.visit(nodeVisitor42);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-1) + "'", int1 == (-1));
        org.junit.Assert.assertNotNull(scriptNode2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(symbolList4);
        org.junit.Assert.assertNull(scope7);
        org.junit.Assert.assertNull(scope12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "$0" + "'", str13, "$0");
        org.junit.Assert.assertNull(nodeList14);
        org.junit.Assert.assertNotNull(scriptNode19);
        org.junit.Assert.assertNotNull(scriptNode27);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertNotNull(scriptNode38);
        org.junit.Assert.assertNull(strMap39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 1 + "'", int40 == 1);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
    }

    @Test
    public void test09930() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09930");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((-1110578805));
        com.google.javascript.rhino.head.ast.FunctionNode functionNode2 = scope1.getEnclosingFunction();
        org.junit.Assert.assertNull(functionNode2);
    }

    @Test
    public void test09931() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09931");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode0 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 10);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode3 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode4 = functionNode3.getTop();
        functionNode3.setParens((int) (byte) 1, (int) (short) 1);
        functionNode3.setEncodedSourceStart((-1));
        functionNode3.setFunctionIsGetter();
        scope2.addChildToFront((com.google.javascript.rhino.head.Node) functionNode3);
        functionNode0.setBody((com.google.javascript.rhino.head.ast.AstNode) functionNode3);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode13 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = functionNode13.getTop();
        functionNode13.setParens((int) (byte) 1, (int) (short) 1);
        functionNode13.setEncodedSourceStart((-1));
        java.util.List<com.google.javascript.rhino.head.Node> nodeList20 = functionNode13.getResumptionPoints();
        int int21 = functionNode13.getLp();
        functionNode0.setBody((com.google.javascript.rhino.head.ast.AstNode) functionNode13);
        com.google.javascript.rhino.head.Node node23 = functionNode13.getNext();
        com.google.javascript.rhino.head.ast.Scope scope25 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 10);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode26 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode27 = functionNode26.getTop();
        functionNode26.setParens((int) (byte) 1, (int) (short) 1);
        functionNode26.setEncodedSourceStart((-1));
        functionNode26.setFunctionIsGetter();
        scope25.addChildToFront((com.google.javascript.rhino.head.Node) functionNode26);
        functionNode26.setRp(19);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode38 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int39 = scriptNode38.getEndLineno();
        int int40 = scriptNode38.getBaseLineno();
        com.google.javascript.rhino.head.ast.Jump jump43 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode45 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int46 = scriptNode45.getEndLineno();
        int int47 = scriptNode45.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList48 = scriptNode45.getChildScopes();
        jump43.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode45);
        java.lang.String str50 = scriptNode45.debugPrint();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode38, (com.google.javascript.rhino.head.ast.Scope) scriptNode45);
        com.google.javascript.rhino.head.ast.Scope scope52 = new com.google.javascript.rhino.head.ast.Scope();
        scriptNode45.target = scope52;
        java.lang.String str54 = functionNode26.toStringTree(scriptNode45);
        java.lang.String str56 = scriptNode45.toSource((int) (short) 10);
        boolean boolean57 = functionNode13.isParam((com.google.javascript.rhino.head.ast.AstNode) scriptNode45);
        com.google.javascript.rhino.head.ast.AstRoot astRoot58 = scriptNode45.getAstRoot();
        scriptNode45.setLineno(796955);
        java.lang.String str61 = scriptNode45.toString();
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor62 = null;
        // The following exception was thrown during execution in test generation
        try {
            scriptNode45.visit(nodeVisitor62);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(scriptNode4);
        org.junit.Assert.assertNotNull(scriptNode14);
        org.junit.Assert.assertNull(nodeList20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertNull(node23);
        org.junit.Assert.assertNotNull(scriptNode27);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertNull(scopeList48);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str50, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "                    {\n                    }\n" + "'", str56, "                    {\n                    }\n");
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNull(astRoot58);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "136" + "'", str61, "136");
    }

    @Test
    public void test09932() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09932");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode1 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int2 = functionNode1.getLp();
        functionNode1.setEncodedSource("");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode5 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int6 = functionNode5.getLp();
        functionNode5.setEncodedSource("");
        functionNode5.flattenSymbolTable(false);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode11 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int12 = functionNode11.getLp();
        com.google.javascript.rhino.head.Node node14 = new com.google.javascript.rhino.head.Node((-1), (com.google.javascript.rhino.head.Node) functionNode1, (com.google.javascript.rhino.head.Node) functionNode5, (com.google.javascript.rhino.head.Node) functionNode11, (int) '#');
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList15 = functionNode1.getChildScopes();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode17 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int18 = scriptNode17.getEndLineno();
        int int19 = scriptNode17.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList20 = scriptNode17.getChildScopes();
        functionNode1.setMemberExprNode((com.google.javascript.rhino.head.ast.AstNode) scriptNode17);
        functionNode1.setEncodedSourceEnd((int) (short) 100);
        java.lang.String str24 = functionNode1.getJsDoc();
        functionNode1.setEncodedSourceBounds((-1), (int) (short) -1);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList28 = functionNode1.getFunctions();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode29 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode30 = functionNode29.getTop();
        com.google.javascript.rhino.head.ast.AstRoot astRoot31 = functionNode29.getAstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode32 = functionNode29.getMemberExprNode();
        boolean boolean33 = functionNode29.isSetter();
        int int34 = functionNode29.getFunctionCount();
        com.google.javascript.rhino.head.ast.Symbol symbol35 = new com.google.javascript.rhino.head.ast.Symbol();
        java.lang.String str36 = symbol35.getDeclTypeName();
        com.google.javascript.rhino.head.ast.Scope scope37 = symbol35.getContainingTable();
        symbol35.setIndex(21);
        java.lang.String str40 = symbol35.getName();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode41 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int42 = functionNode41.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode43 = functionNode41.getTop();
        com.google.javascript.rhino.head.ast.Name name44 = null;
        functionNode41.setFunctionName(name44);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode46 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode47 = functionNode46.getTop();
        functionNode41.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode46);
        int int49 = functionNode46.getRp();
        int int50 = functionNode46.getFunctionType();
        boolean boolean51 = functionNode46.requiresActivation();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList52 = functionNode46.getChildScopes();
        functionNode46.setFunctionType(100);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode55 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int56 = functionNode55.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode57 = functionNode55.getTop();
        com.google.javascript.rhino.head.ast.Name name58 = null;
        functionNode55.setFunctionName(name58);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode60 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode61 = functionNode60.getTop();
        functionNode55.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode60);
        com.google.javascript.rhino.head.ast.Scope scope65 = new com.google.javascript.rhino.head.ast.Scope((int) (short) -1, 0);
        functionNode55.replaceWith(scope65);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode67 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int68 = functionNode67.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode69 = functionNode67.getTop();
        com.google.javascript.rhino.head.ast.Name name70 = null;
        functionNode67.setFunctionName(name70);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode72 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode73 = functionNode72.getTop();
        functionNode67.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode72);
        int int75 = functionNode55.addFunction(functionNode67);
        int int76 = functionNode67.getLineno();
        functionNode46.setParent((com.google.javascript.rhino.head.ast.AstNode) functionNode67);
        symbol35.setNode((com.google.javascript.rhino.head.Node) functionNode46);
        com.google.javascript.rhino.head.ast.Name name79 = null;
        functionNode46.setFunctionName(name79);
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList81 = functionNode46.getParams();
        int int82 = functionNode29.addFunction(functionNode46);
        int int83 = functionNodeList28.indexOf((java.lang.Object) int82);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNull(scopeList15);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNull(scopeList20);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(functionNodeList28);
        org.junit.Assert.assertNotNull(scriptNode30);
        org.junit.Assert.assertNull(astRoot31);
        org.junit.Assert.assertNull(astNode32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "EOF" + "'", str36, "EOF");
        org.junit.Assert.assertNull(scope37);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertNotNull(scriptNode43);
        org.junit.Assert.assertNotNull(scriptNode47);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNull(scopeList52);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1));
        org.junit.Assert.assertNotNull(scriptNode57);
        org.junit.Assert.assertNotNull(scriptNode61);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + (-1) + "'", int68 == (-1));
        org.junit.Assert.assertNotNull(scriptNode69);
        org.junit.Assert.assertNotNull(scriptNode73);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 0 + "'", int75 == 0);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + (-1) + "'", int76 == (-1));
        org.junit.Assert.assertNotNull(astNodeList81);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 0 + "'", int82 == 0);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + (-1) + "'", int83 == (-1));
    }

    @Test
    public void test09933() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09933");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode1 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int2 = functionNode1.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode3 = functionNode1.getTop();
        boolean boolean4 = functionNode1.hasSideEffects();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int7 = scriptNode6.getEndLineno();
        int int8 = scriptNode6.getBaseLineno();
        com.google.javascript.rhino.head.ast.Jump jump11 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode13 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int14 = scriptNode13.getEndLineno();
        int int15 = scriptNode13.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList16 = scriptNode13.getChildScopes();
        jump11.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode13);
        java.lang.String str18 = scriptNode13.debugPrint();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode6, (com.google.javascript.rhino.head.ast.Scope) scriptNode13);
        com.google.javascript.rhino.head.ast.Scope scope20 = new com.google.javascript.rhino.head.ast.Scope();
        scriptNode13.target = scope20;
        functionNode1.addChildScope(scope20);
        boolean boolean23 = functionNode1.hasConsistentReturnUsage();
        java.lang.String str24 = functionNode1.getNextTempName();
        com.google.javascript.rhino.head.ast.Jump jump25 = new com.google.javascript.rhino.head.ast.Jump((int) (short) -1, (com.google.javascript.rhino.head.Node) functionNode1);
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor26 = functionNode1.iterator();
        functionNode1.setFunctionIsSetter();
        java.lang.String str29 = functionNode1.makeIndent(20);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertNotNull(scriptNode3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNull(scopeList16);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str18, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "$0" + "'", str24, "$0");
        org.junit.Assert.assertNotNull(nodeItor26);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "                                        " + "'", str29, "                                        ");
    }

    @Test
    public void test09934() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09934");
        com.google.javascript.rhino.head.ast.RegExpLiteral regExpLiteral2 = new com.google.javascript.rhino.head.ast.RegExpLiteral((int) (short) 1);
        java.lang.String str4 = regExpLiteral2.toSource((int) (byte) 10);
        regExpLiteral2.setFlags("-1\tSCRIPT -1 1\n");
        java.lang.String str8 = regExpLiteral2.toSource((int) (short) -1);
        regExpLiteral2.setFlags("EOF");
        java.lang.String str12 = regExpLiteral2.makeIndent(10);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode14 = new com.google.javascript.rhino.head.ast.FunctionNode((-1));
        boolean boolean15 = functionNode14.isExpressionClosure();
        int int16 = regExpLiteral2.compareTo((com.google.javascript.rhino.head.ast.AstNode) functionNode14);
        com.google.javascript.rhino.head.ast.Jump jump18 = new com.google.javascript.rhino.head.ast.Jump(301837580, (com.google.javascript.rhino.head.Node) functionNode14, (-616130778));
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "                    /null/" + "'", str4, "                    /null/");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "/null/-1\tSCRIPT -1 1\n" + "'", str8, "/null/-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "                    " + "'", str12, "                    ");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
    }

    @Test
    public void test09935() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09935");
        com.google.javascript.rhino.head.ast.Jump jump5 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump5.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump9 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump5, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int12 = scriptNode11.getEndLineno();
        int int13 = scriptNode11.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList14 = scriptNode11.getChildScopes();
        com.google.javascript.rhino.head.Node node15 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump5, (com.google.javascript.rhino.head.Node) scriptNode11);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList16 = scriptNode11.getFunctions();
        int int17 = scriptNode11.getPosition();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList18 = scriptNode11.getChildScopes();
        int int19 = scriptNode11.getEncodedSourceEnd();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList20 = scriptNode11.getSymbols();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode21 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int22 = functionNode21.getLp();
        functionNode21.setEncodedSource("");
        functionNode21.flattenSymbolTable(false);
        com.google.javascript.rhino.head.ast.RegExpLiteral regExpLiteral28 = new com.google.javascript.rhino.head.ast.RegExpLiteral((int) (short) 1);
        java.lang.String str30 = regExpLiteral28.toSource((int) (byte) 10);
        regExpLiteral28.setFlags("-1\tSCRIPT -1 1\n");
        regExpLiteral28.removeProp(8);
        java.lang.String str35 = regExpLiteral28.getValue();
        com.google.javascript.rhino.head.Node node36 = new com.google.javascript.rhino.head.Node(7, (com.google.javascript.rhino.head.Node) scriptNode11, (com.google.javascript.rhino.head.Node) functionNode21, (com.google.javascript.rhino.head.Node) regExpLiteral28);
        functionNode21.flattenSymbolTable(false);
        int int39 = functionNode21.getParamAndVarCount();
        functionNode21.removeProp(851648702);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNull(scopeList14);
        org.junit.Assert.assertNotNull(functionNodeList16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNull(scopeList18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(symbolList20);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "                    /null/" + "'", str30, "                    /null/");
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
    }

    @Test
    public void test09936() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09936");
        com.google.javascript.rhino.head.ast.Symbol symbol0 = new com.google.javascript.rhino.head.ast.Symbol();
        symbol0.setIndex(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode4 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int5 = scriptNode4.getEndLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode7 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int8 = scriptNode7.getEndLineno();
        scriptNode4.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode7);
        com.google.javascript.rhino.head.ast.Comment comment10 = null;
        scriptNode4.setJsDocNode(comment10);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList12 = scriptNode4.getSymbols();
        symbol0.setContainingTable((com.google.javascript.rhino.head.ast.Scope) scriptNode4);
        com.google.javascript.rhino.head.ast.Scope scope14 = symbol0.getContainingTable();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode15 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int16 = functionNode15.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode18 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        java.lang.String str19 = functionNode15.toStringTree(scriptNode18);
        com.google.javascript.rhino.head.ast.Scope scope21 = scriptNode18.getDefiningScope("");
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList22 = scriptNode18.getSymbols();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode24 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int25 = scriptNode24.getEndLineno();
        int int26 = scriptNode24.getBaseLineno();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode18, (com.google.javascript.rhino.head.ast.Scope) scriptNode24);
        symbol0.setContainingTable((com.google.javascript.rhino.head.ast.Scope) scriptNode24);
        java.lang.String str29 = symbol0.getDeclTypeName();
        java.lang.String str30 = symbol0.getDeclTypeName();
        symbol0.setIndex(1590262715);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(symbolList12);
        org.junit.Assert.assertNotNull(scope14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNull(scope21);
        org.junit.Assert.assertNotNull(symbolList22);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "EOF" + "'", str29, "EOF");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "EOF" + "'", str30, "EOF");
    }

    @Test
    public void test09937() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09937");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 10);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode2 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode3 = functionNode2.getTop();
        functionNode2.setParens((int) (byte) 1, (int) (short) 1);
        functionNode2.setEncodedSourceStart((-1));
        functionNode2.setFunctionIsGetter();
        scope1.addChildToFront((com.google.javascript.rhino.head.Node) functionNode2);
        functionNode2.setRp(19);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int15 = scriptNode14.getEndLineno();
        int int16 = scriptNode14.getBaseLineno();
        com.google.javascript.rhino.head.ast.Jump jump19 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode21 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int22 = scriptNode21.getEndLineno();
        int int23 = scriptNode21.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList24 = scriptNode21.getChildScopes();
        jump19.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode21);
        java.lang.String str26 = scriptNode21.debugPrint();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode14, (com.google.javascript.rhino.head.ast.Scope) scriptNode21);
        com.google.javascript.rhino.head.ast.Scope scope28 = new com.google.javascript.rhino.head.ast.Scope();
        scriptNode21.target = scope28;
        java.lang.String str30 = functionNode2.toStringTree(scriptNode21);
        java.lang.String str32 = scriptNode21.toSource((int) (short) 10);
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap33 = scriptNode21.getSymbolTable();
        int int34 = strMap33.size();
        java.lang.Object obj35 = null;
        java.lang.Object obj36 = null;
        boolean boolean37 = strMap33.remove(obj35, obj36);
        com.google.javascript.rhino.head.ast.Jump jump41 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump41.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump45 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump41, 0);
        com.google.javascript.rhino.head.ast.Jump jump49 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump49.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump53 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump49, 0);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode54 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int55 = functionNode54.getLp();
        functionNode54.setEncodedSource("");
        functionNode54.flattenSymbolTable(false);
        jump41.addChildAfter((com.google.javascript.rhino.head.Node) jump49, (com.google.javascript.rhino.head.Node) functionNode54);
        com.google.javascript.rhino.head.Node node61 = functionNode54.target;
        boolean boolean62 = functionNode54.hasConsistentReturnUsage();
        com.google.javascript.rhino.head.ast.Name name63 = functionNode54.getFunctionName();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode64 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.Scope scope66 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 10);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode67 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode68 = functionNode67.getTop();
        functionNode67.setParens((int) (byte) 1, (int) (short) 1);
        functionNode67.setEncodedSourceStart((-1));
        functionNode67.setFunctionIsGetter();
        scope66.addChildToFront((com.google.javascript.rhino.head.Node) functionNode67);
        functionNode64.setBody((com.google.javascript.rhino.head.ast.AstNode) functionNode67);
        functionNode67.setRelative(0);
        functionNode54.setBody((com.google.javascript.rhino.head.ast.AstNode) functionNode67);
        functionNode54.setEncodedSourceStart((int) (byte) 0);
        boolean boolean82 = functionNode54.isGetter();
        com.google.javascript.rhino.head.ast.Symbol symbol83 = new com.google.javascript.rhino.head.ast.Symbol();
        com.google.javascript.rhino.head.Node node84 = symbol83.getNode();
        symbol83.setIndex(4);
        com.google.javascript.rhino.head.ast.Symbol symbol87 = strMap33.getOrDefault((java.lang.Object) boolean82, symbol83);
        java.lang.String str88 = symbol87.toString();
        org.junit.Assert.assertNotNull(scriptNode3);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNull(scopeList24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str26, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "                    {\n                    }\n" + "'", str32, "                    {\n                    }\n");
        org.junit.Assert.assertNotNull(strMap33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1));
        org.junit.Assert.assertNull(node61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNull(name63);
        org.junit.Assert.assertNotNull(scriptNode68);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNull(node84);
        org.junit.Assert.assertNotNull(symbol87);
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "Symbol (EOF) name=null" + "'", str88, "Symbol (EOF) name=null");
    }

    @Test
    public void test09938() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09938");
        com.google.javascript.rhino.head.ast.Symbol symbol0 = new com.google.javascript.rhino.head.ast.Symbol();
        java.lang.String str1 = symbol0.getName();
        com.google.javascript.rhino.head.ast.Jump jump6 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump6.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump10 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump6, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode12 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int13 = scriptNode12.getEndLineno();
        int int14 = scriptNode12.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList15 = scriptNode12.getChildScopes();
        com.google.javascript.rhino.head.Node node16 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump6, (com.google.javascript.rhino.head.Node) scriptNode12);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList17 = scriptNode12.getChildScopes();
        symbol0.setContainingTable((com.google.javascript.rhino.head.ast.Scope) scriptNode12);
        com.google.javascript.rhino.head.ast.Scope scope19 = symbol0.getContainingTable();
        java.lang.String str20 = symbol0.getDeclTypeName();
        symbol0.setIndex(161);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNull(scopeList15);
        org.junit.Assert.assertNull(scopeList17);
        org.junit.Assert.assertNotNull(scope19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "EOF" + "'", str20, "EOF");
    }

    @Test
    public void test09939() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09939");
        com.google.javascript.rhino.head.ast.Jump jump4 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump4.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump8 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump4, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int11 = scriptNode10.getEndLineno();
        int int12 = scriptNode10.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList13 = scriptNode10.getChildScopes();
        com.google.javascript.rhino.head.Node node14 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump4, (com.google.javascript.rhino.head.Node) scriptNode10);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList15 = scriptNode10.getFunctions();
        int int16 = functionNodeList15.size();
        com.google.javascript.rhino.head.ast.Symbol symbol17 = new com.google.javascript.rhino.head.ast.Symbol();
        com.google.javascript.rhino.head.Node node18 = symbol17.getNode();
        symbol17.setIndex(4);
        java.lang.String str21 = symbol17.getDeclTypeName();
        int int22 = functionNodeList15.lastIndexOf((java.lang.Object) str21);
        int int23 = functionNodeList15.size();
        com.google.javascript.rhino.head.Token.CommentType commentType26 = com.google.javascript.rhino.head.Token.CommentType.HTML;
        com.google.javascript.rhino.head.ast.Comment comment28 = new com.google.javascript.rhino.head.ast.Comment(20, 1, commentType26, "109");
        java.lang.String str30 = comment28.toSource(19);
        com.google.javascript.rhino.head.Token.CommentType commentType31 = comment28.getCommentType();
        int int32 = comment28.getLineno();
        boolean boolean33 = functionNodeList15.remove((java.lang.Object) comment28);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode35 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int36 = functionNode35.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode37 = functionNode35.getTop();
        boolean boolean38 = functionNode35.hasSideEffects();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode40 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int41 = scriptNode40.getEndLineno();
        int int42 = scriptNode40.getBaseLineno();
        com.google.javascript.rhino.head.ast.Jump jump45 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode47 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int48 = scriptNode47.getEndLineno();
        int int49 = scriptNode47.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList50 = scriptNode47.getChildScopes();
        jump45.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode47);
        java.lang.String str52 = scriptNode47.debugPrint();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode40, (com.google.javascript.rhino.head.ast.Scope) scriptNode47);
        com.google.javascript.rhino.head.ast.Scope scope54 = new com.google.javascript.rhino.head.ast.Scope();
        scriptNode47.target = scope54;
        functionNode35.addChildScope(scope54);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode57 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int58 = functionNode57.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode59 = functionNode57.getTop();
        com.google.javascript.rhino.head.ast.Name name60 = null;
        functionNode57.setFunctionName(name60);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode62 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode63 = functionNode62.getTop();
        functionNode57.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode62);
        com.google.javascript.rhino.head.ast.Scope scope67 = new com.google.javascript.rhino.head.ast.Scope((int) (short) -1, 0);
        functionNode57.replaceWith(scope67);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode69 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int70 = functionNode69.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode71 = functionNode69.getTop();
        com.google.javascript.rhino.head.ast.Name name72 = null;
        functionNode69.setFunctionName(name72);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode74 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode75 = functionNode74.getTop();
        functionNode69.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode74);
        int int77 = functionNode57.addFunction(functionNode69);
        int int78 = functionNode35.addFunction(functionNode69);
        functionNode69.putIntProp(22, 2);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode82 = functionNode69.getTop();
        com.google.javascript.rhino.head.ast.Symbol symbol84 = scriptNode82.getSymbol("20\tCOMMENT 20 1\n");
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList85 = scriptNode82.getFunctions();
        java.lang.Object[] objArray86 = functionNodeList85.toArray();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean87 = functionNodeList15.addAll(48, (java.util.Collection<com.google.javascript.rhino.head.ast.FunctionNode>) functionNodeList85);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 48, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNull(scopeList13);
        org.junit.Assert.assertNotNull(functionNodeList15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNull(node18);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "EOF" + "'", str21, "EOF");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertTrue("'" + commentType26 + "' != '" + com.google.javascript.rhino.head.Token.CommentType.HTML + "'", commentType26.equals(com.google.javascript.rhino.head.Token.CommentType.HTML));
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "                                      109" + "'", str30, "                                      109");
        org.junit.Assert.assertTrue("'" + commentType31 + "' != '" + com.google.javascript.rhino.head.Token.CommentType.HTML + "'", commentType31.equals(com.google.javascript.rhino.head.Token.CommentType.HTML));
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNotNull(scriptNode37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertNull(scopeList50);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str52, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + (-1) + "'", int58 == (-1));
        org.junit.Assert.assertNotNull(scriptNode59);
        org.junit.Assert.assertNotNull(scriptNode63);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + (-1) + "'", int70 == (-1));
        org.junit.Assert.assertNotNull(scriptNode71);
        org.junit.Assert.assertNotNull(scriptNode75);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 0 + "'", int77 == 0);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 0 + "'", int78 == 0);
        org.junit.Assert.assertNotNull(scriptNode82);
        org.junit.Assert.assertNull(symbol84);
        org.junit.Assert.assertNotNull(functionNodeList85);
        org.junit.Assert.assertNotNull(objArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray86), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray86), "[]");
    }

    @Test
    public void test09940() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09940");
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope((int) (byte) -1, (-18802601));
    }

    @Test
    public void test09941() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09941");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode1 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int2 = functionNode1.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode3 = functionNode1.getTop();
        com.google.javascript.rhino.head.ast.Name name4 = null;
        functionNode1.setFunctionName(name4);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode6 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode7 = functionNode6.getTop();
        functionNode1.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode6);
        functionNode6.setIsExpressionClosure(true);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode12 = new com.google.javascript.rhino.head.ast.FunctionNode((int) (byte) 100);
        int int13 = functionNode6.addFunction(functionNode12);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode15 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode16 = functionNode15.getTop();
        java.lang.String str17 = scriptNode16.getJsDoc();
        com.google.javascript.rhino.head.Node node19 = scriptNode16.setType(0);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode20 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int21 = functionNode20.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode23 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        java.lang.String str24 = functionNode20.toStringTree(scriptNode23);
        com.google.javascript.rhino.head.ast.Scope scope26 = scriptNode23.getDefiningScope("");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode28 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int29 = scriptNode28.getEndLineno();
        int int30 = scriptNode28.getBaseLineno();
        com.google.javascript.rhino.head.Node node31 = new com.google.javascript.rhino.head.Node(25, node19, (com.google.javascript.rhino.head.Node) scriptNode23, (com.google.javascript.rhino.head.Node) scriptNode28);
        int int32 = functionNode12.compareTo((com.google.javascript.rhino.head.ast.AstNode) scriptNode23);
        com.google.javascript.rhino.head.ast.RegExpLiteral regExpLiteral34 = new com.google.javascript.rhino.head.ast.RegExpLiteral((int) (short) 1);
        regExpLiteral34.setFlags("-1\tSCRIPT -1 1\n");
        regExpLiteral34.setFlags("/null/-1\tSCRIPT -1 1\n");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode39 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int40 = functionNode39.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode41 = functionNode39.getTop();
        com.google.javascript.rhino.head.ast.Name name42 = null;
        functionNode39.setFunctionName(name42);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode44 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode45 = functionNode44.getTop();
        functionNode39.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode44);
        int int47 = functionNode44.getRp();
        int int48 = functionNode44.getFunctionType();
        boolean boolean49 = functionNode44.requiresActivation();
        com.google.javascript.rhino.head.Node node50 = new com.google.javascript.rhino.head.Node(26, (com.google.javascript.rhino.head.Node) scriptNode23, (com.google.javascript.rhino.head.Node) regExpLiteral34, (com.google.javascript.rhino.head.Node) functionNode44);
        com.google.javascript.rhino.head.ast.Name name51 = null;
        functionNode44.setFunctionName(name51);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList53 = functionNode44.getFunctions();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode55 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int56 = scriptNode55.getEndLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode58 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int59 = scriptNode58.getEndLineno();
        scriptNode55.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode58);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode61 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int62 = functionNode61.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode63 = functionNode61.getTop();
        boolean boolean64 = functionNode61.hasSideEffects();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode66 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int67 = scriptNode66.getEndLineno();
        int int68 = scriptNode66.getBaseLineno();
        com.google.javascript.rhino.head.ast.Jump jump71 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode73 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int74 = scriptNode73.getEndLineno();
        int int75 = scriptNode73.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList76 = scriptNode73.getChildScopes();
        jump71.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode73);
        java.lang.String str78 = scriptNode73.debugPrint();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode66, (com.google.javascript.rhino.head.ast.Scope) scriptNode73);
        com.google.javascript.rhino.head.ast.Scope scope80 = new com.google.javascript.rhino.head.ast.Scope();
        scriptNode73.target = scope80;
        functionNode61.addChildScope(scope80);
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode58, (com.google.javascript.rhino.head.ast.Scope) functionNode61);
        int int84 = functionNode61.getFunctionCount();
        int int85 = functionNode61.getLineno();
        int int86 = functionNode61.getAbsolutePosition();
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList87 = functionNode61.getFunctions();
        boolean boolean88 = functionNodeList53.containsAll((java.util.Collection<com.google.javascript.rhino.head.ast.FunctionNode>) functionNodeList87);
        java.util.function.UnaryOperator<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeUnaryOperator89 = null;
        // The following exception was thrown during execution in test generation
        try {
            functionNodeList87.replaceAll(functionNodeUnaryOperator89);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertNotNull(scriptNode3);
        org.junit.Assert.assertNotNull(scriptNode7);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(scriptNode16);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(node19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(scope26);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1 + "'", int32 == 1);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertNotNull(scriptNode41);
        org.junit.Assert.assertNotNull(scriptNode45);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(functionNodeList53);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1));
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-1) + "'", int59 == (-1));
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + (-1) + "'", int62 == (-1));
        org.junit.Assert.assertNotNull(scriptNode63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + (-1) + "'", int67 == (-1));
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + (-1) + "'", int68 == (-1));
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + (-1) + "'", int74 == (-1));
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + (-1) + "'", int75 == (-1));
        org.junit.Assert.assertNull(scopeList76);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str78, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 0 + "'", int84 == 0);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + (-1) + "'", int85 == (-1));
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + (-1) + "'", int86 == (-1));
        org.junit.Assert.assertNotNull(functionNodeList87);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
    }

    @Test
    public void test09942() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09942");
        com.google.javascript.rhino.head.ast.Symbol symbol0 = new com.google.javascript.rhino.head.ast.Symbol();
        com.google.javascript.rhino.head.Node node1 = symbol0.getNode();
        symbol0.setIndex(4);
        com.google.javascript.rhino.head.ast.Scope scope4 = symbol0.getContainingTable();
        int int5 = symbol0.getDeclType();
        com.google.javascript.rhino.head.Node node6 = symbol0.getNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode8 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int9 = scriptNode8.getEndLineno();
        int int10 = scriptNode8.getBaseLineno();
        com.google.javascript.rhino.head.ast.Jump jump13 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode15 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int16 = scriptNode15.getEndLineno();
        int int17 = scriptNode15.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList18 = scriptNode15.getChildScopes();
        jump13.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode15);
        java.lang.String str20 = scriptNode15.debugPrint();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode8, (com.google.javascript.rhino.head.ast.Scope) scriptNode15);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode22 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int23 = functionNode22.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode24 = functionNode22.getTop();
        com.google.javascript.rhino.head.ast.Name name25 = null;
        functionNode22.setFunctionName(name25);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode27 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int28 = functionNode27.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode30 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        java.lang.String str31 = functionNode27.toStringTree(scriptNode30);
        functionNode27.setFunctionIsGetter();
        int int33 = functionNode22.addFunction(functionNode27);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList34 = functionNode22.getSymbols();
        scriptNode15.setSymbols(symbolList34);
        scriptNode15.clearParentScope();
        int int37 = scriptNode15.getBaseLineno();
        symbol0.setContainingTable((com.google.javascript.rhino.head.ast.Scope) scriptNode15);
        java.lang.String str39 = symbol0.toString();
        org.junit.Assert.assertNull(node1);
        org.junit.Assert.assertNull(scope4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNull(node6);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNull(scopeList18);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str20, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNotNull(scriptNode24);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNotNull(symbolList34);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "Symbol (EOF) name=null" + "'", str39, "Symbol (EOF) name=null");
    }

    @Test
    public void test09943() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09943");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 10);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode2 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode3 = functionNode2.getTop();
        functionNode2.setParens((int) (byte) 1, (int) (short) 1);
        functionNode2.setEncodedSourceStart((-1));
        functionNode2.setFunctionIsGetter();
        scope1.addChildToFront((com.google.javascript.rhino.head.Node) functionNode2);
        functionNode2.setRp(19);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int15 = scriptNode14.getEndLineno();
        int int16 = scriptNode14.getBaseLineno();
        com.google.javascript.rhino.head.ast.Jump jump19 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode21 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int22 = scriptNode21.getEndLineno();
        int int23 = scriptNode21.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList24 = scriptNode21.getChildScopes();
        jump19.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode21);
        java.lang.String str26 = scriptNode21.debugPrint();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode14, (com.google.javascript.rhino.head.ast.Scope) scriptNode21);
        com.google.javascript.rhino.head.ast.Scope scope28 = new com.google.javascript.rhino.head.ast.Scope();
        scriptNode21.target = scope28;
        java.lang.String str30 = functionNode2.toStringTree(scriptNode21);
        java.lang.String str32 = scriptNode21.toSource((int) (short) 10);
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap33 = scriptNode21.getSymbolTable();
        int int34 = strMap33.size();
        com.google.javascript.rhino.head.ast.Jump jump39 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump39.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump43 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump39, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode45 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int46 = scriptNode45.getEndLineno();
        int int47 = scriptNode45.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList48 = scriptNode45.getChildScopes();
        com.google.javascript.rhino.head.Node node49 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump39, (com.google.javascript.rhino.head.Node) scriptNode45);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList50 = scriptNode45.getFunctions();
        functionNodeList50.clear();
        functionNodeList50.clear();
        com.google.javascript.rhino.head.ast.Jump jump57 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump57.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump61 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump57, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode63 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int64 = scriptNode63.getEndLineno();
        int int65 = scriptNode63.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList66 = scriptNode63.getChildScopes();
        com.google.javascript.rhino.head.Node node67 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump57, (com.google.javascript.rhino.head.Node) scriptNode63);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList68 = scriptNode63.getFunctions();
        java.util.Spliterator<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeSpliterator69 = functionNodeList68.spliterator();
        int int71 = functionNodeList68.indexOf((java.lang.Object) (byte) 10);
        boolean boolean72 = functionNodeList50.retainAll((java.util.Collection<com.google.javascript.rhino.head.ast.FunctionNode>) functionNodeList68);
        boolean boolean73 = strMap33.containsKey((java.lang.Object) functionNodeList50);
        java.util.Collection<com.google.javascript.rhino.head.ast.Symbol> symbolCollection74 = strMap33.values();
        com.google.javascript.rhino.head.Node node76 = com.google.javascript.rhino.head.Node.newNumber((double) '#');
        com.google.javascript.rhino.head.ast.Symbol symbol77 = strMap33.get((java.lang.Object) '#');
        com.google.javascript.rhino.head.ast.FunctionNode functionNode78 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int79 = functionNode78.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode80 = functionNode78.getTop();
        com.google.javascript.rhino.head.Node node81 = functionNode78.getLastSibling();
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList82 = functionNode78.getParams();
        com.google.javascript.rhino.head.ast.Symbol symbol83 = new com.google.javascript.rhino.head.ast.Symbol();
        int int84 = symbol83.getIndex();
        symbol83.setIndex(35);
        com.google.javascript.rhino.head.ast.Symbol symbol87 = strMap33.getOrDefault((java.lang.Object) functionNode78, symbol83);
        int int88 = functionNode78.getParamCount();
        java.lang.String str90 = functionNode78.makeIndent(0);
        org.junit.Assert.assertNotNull(scriptNode3);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNull(scopeList24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str26, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "                    {\n                    }\n" + "'", str32, "                    {\n                    }\n");
        org.junit.Assert.assertNotNull(strMap33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertNull(scopeList48);
        org.junit.Assert.assertNotNull(functionNodeList50);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + (-1) + "'", int64 == (-1));
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + (-1) + "'", int65 == (-1));
        org.junit.Assert.assertNull(scopeList66);
        org.junit.Assert.assertNotNull(functionNodeList68);
        org.junit.Assert.assertNotNull(functionNodeSpliterator69);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + (-1) + "'", int71 == (-1));
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(symbolCollection74);
        org.junit.Assert.assertNotNull(node76);
        org.junit.Assert.assertNull(symbol77);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + (-1) + "'", int79 == (-1));
        org.junit.Assert.assertNotNull(scriptNode80);
        org.junit.Assert.assertNotNull(node81);
        org.junit.Assert.assertNotNull(astNodeList82);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + (-1) + "'", int84 == (-1));
        org.junit.Assert.assertNotNull(symbol87);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + 0 + "'", int88 == 0);
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "" + "'", str90, "");
    }

    @Test
    public void test09944() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09944");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode2 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int3 = functionNode2.getLp();
        functionNode2.setEncodedSource("");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode6 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int7 = functionNode6.getLp();
        functionNode6.setEncodedSource("");
        functionNode6.flattenSymbolTable(false);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode12 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int13 = functionNode12.getLp();
        com.google.javascript.rhino.head.Node node15 = new com.google.javascript.rhino.head.Node((-1), (com.google.javascript.rhino.head.Node) functionNode2, (com.google.javascript.rhino.head.Node) functionNode6, (com.google.javascript.rhino.head.Node) functionNode12, (int) '#');
        com.google.javascript.rhino.head.ast.Comment comment16 = functionNode12.getJsDocNode();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode17 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.Scope scope19 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 10);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode20 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode21 = functionNode20.getTop();
        functionNode20.setParens((int) (byte) 1, (int) (short) 1);
        functionNode20.setEncodedSourceStart((-1));
        functionNode20.setFunctionIsGetter();
        scope19.addChildToFront((com.google.javascript.rhino.head.Node) functionNode20);
        functionNode17.setBody((com.google.javascript.rhino.head.ast.AstNode) functionNode20);
        boolean boolean30 = functionNode12.isParam((com.google.javascript.rhino.head.ast.AstNode) functionNode17);
        int int31 = functionNode12.getFunctionCount();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode32 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int33 = functionNode32.getLp();
        functionNode32.setEncodedSource("");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode36 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int37 = functionNode36.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode38 = functionNode36.getTop();
        com.google.javascript.rhino.head.ast.Name name39 = null;
        functionNode36.setFunctionName(name39);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode41 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode42 = functionNode41.getTop();
        functionNode36.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode41);
        int int44 = functionNode41.getRp();
        int int45 = functionNode41.getFunctionType();
        functionNode32.addParam((com.google.javascript.rhino.head.ast.AstNode) functionNode41);
        com.google.javascript.rhino.head.Node node47 = functionNode32.getLastSibling();
        com.google.javascript.rhino.head.Node node48 = new com.google.javascript.rhino.head.Node((int) (byte) 10, (com.google.javascript.rhino.head.Node) functionNode12, (com.google.javascript.rhino.head.Node) functionNode32);
        com.google.javascript.rhino.head.Node node49 = functionNode32.getLastSibling();
        com.google.javascript.rhino.head.ast.Symbol symbol51 = functionNode32.getSymbol("/null//null/-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNull(comment16);
        org.junit.Assert.assertNotNull(scriptNode21);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertNotNull(scriptNode38);
        org.junit.Assert.assertNotNull(scriptNode42);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertNotNull(node47);
        org.junit.Assert.assertNotNull(node49);
        org.junit.Assert.assertNull(symbol51);
    }

    @Test
    public void test09945() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09945");
        com.google.javascript.rhino.head.ast.Jump jump4 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump4.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump8 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump4, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int11 = scriptNode10.getEndLineno();
        int int12 = scriptNode10.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList13 = scriptNode10.getChildScopes();
        com.google.javascript.rhino.head.Node node14 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump4, (com.google.javascript.rhino.head.Node) scriptNode10);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList15 = scriptNode10.getFunctions();
        functionNodeList15.clear();
        com.google.javascript.rhino.head.ast.Jump jump21 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump21.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump25 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump21, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode27 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int28 = scriptNode27.getEndLineno();
        int int29 = scriptNode27.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList30 = scriptNode27.getChildScopes();
        com.google.javascript.rhino.head.Node node31 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump21, (com.google.javascript.rhino.head.Node) scriptNode27);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList32 = scriptNode27.getFunctions();
        functionNodeList32.clear();
        boolean boolean34 = functionNodeList15.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.FunctionNode>) functionNodeList32);
        java.util.ListIterator<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeItor36 = functionNodeList32.listIterator(0);
        boolean boolean37 = functionNodeList32.isEmpty();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode38 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode39 = functionNode38.getTop();
        functionNode38.setParens((int) (byte) 1, (int) (short) 1);
        functionNode38.setEncodedSourceStart((-1));
        java.util.List<com.google.javascript.rhino.head.Node> nodeList45 = functionNode38.getResumptionPoints();
        com.google.javascript.rhino.head.ast.Scope scope47 = functionNode38.getDefiningScope("hi!");
        boolean boolean48 = functionNode38.isGetterOrSetter();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode50 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int51 = scriptNode50.getEndLineno();
        com.google.javascript.rhino.head.ast.Symbol symbol53 = scriptNode50.getSymbol("hi!");
        scriptNode50.putIntProp(3, 0);
        functionNode38.addResumptionPoint((com.google.javascript.rhino.head.Node) scriptNode50);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode59 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode60 = functionNode59.getTop();
        functionNode59.setParens((int) (byte) 1, (int) (short) 1);
        com.google.javascript.rhino.head.Node node64 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) functionNode59);
        int int65 = functionNode59.getEncodedSourceEnd();
        com.google.javascript.rhino.head.ast.Jump jump70 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump70.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump74 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump70, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode76 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int77 = scriptNode76.getEndLineno();
        int int78 = scriptNode76.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList79 = scriptNode76.getChildScopes();
        com.google.javascript.rhino.head.Node node80 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump70, (com.google.javascript.rhino.head.Node) scriptNode76);
        java.lang.String str81 = scriptNode76.getSourceName();
        functionNode59.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode76);
        functionNode38.setCompilerData((java.lang.Object) scriptNode76);
        int int84 = functionNode38.getEndLineno();
        com.google.javascript.rhino.head.Node node85 = functionNode38.getFirstChild();
        functionNode38.setFunctionType((int) '#');
        boolean boolean88 = functionNodeList32.equals((java.lang.Object) '#');
        java.util.ListIterator<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeItor89 = functionNodeList32.listIterator();
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNull(scopeList13);
        org.junit.Assert.assertNotNull(functionNodeList15);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertNull(scopeList30);
        org.junit.Assert.assertNotNull(functionNodeList32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(functionNodeItor36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(scriptNode39);
        org.junit.Assert.assertNull(nodeList45);
        org.junit.Assert.assertNull(scope47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1));
        org.junit.Assert.assertNull(symbol53);
        org.junit.Assert.assertNotNull(scriptNode60);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + (-1) + "'", int65 == (-1));
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + (-1) + "'", int77 == (-1));
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + (-1) + "'", int78 == (-1));
        org.junit.Assert.assertNull(scopeList79);
        org.junit.Assert.assertNull(str81);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + (-1) + "'", int84 == (-1));
        org.junit.Assert.assertNull(node85);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertNotNull(functionNodeItor89);
    }

    @Test
    public void test09946() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09946");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode0 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int1 = functionNode0.getLp();
        functionNode0.setEncodedSource("");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode4 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.Scope scope6 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 10);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode7 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode8 = functionNode7.getTop();
        functionNode7.setParens((int) (byte) 1, (int) (short) 1);
        functionNode7.setEncodedSourceStart((-1));
        functionNode7.setFunctionIsGetter();
        scope6.addChildToFront((com.google.javascript.rhino.head.Node) functionNode7);
        functionNode4.setBody((com.google.javascript.rhino.head.ast.AstNode) functionNode7);
        int int17 = functionNode0.addFunction(functionNode4);
        java.lang.String str18 = functionNode0.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode20 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int21 = scriptNode20.getEndLineno();
        int int22 = scriptNode20.getBaseLineno();
        com.google.javascript.rhino.head.ast.Jump jump25 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode27 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int28 = scriptNode27.getEndLineno();
        int int29 = scriptNode27.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList30 = scriptNode27.getChildScopes();
        jump25.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode27);
        java.lang.String str32 = scriptNode27.debugPrint();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode20, (com.google.javascript.rhino.head.ast.Scope) scriptNode27);
        com.google.javascript.rhino.head.ast.AstNode astNode34 = scriptNode20.getParent();
        int int35 = scriptNode20.getType();
        com.google.javascript.rhino.head.ast.Symbol symbol37 = scriptNode20.getSymbol("109");
        scriptNode20.flattenSymbolTable(true);
        functionNode0.addChildScope((com.google.javascript.rhino.head.ast.Scope) scriptNode20);
        boolean boolean41 = functionNode0.requiresActivation();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-1) + "'", int1 == (-1));
        org.junit.Assert.assertNotNull(scriptNode8);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "109" + "'", str18, "109");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertNull(scopeList30);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str32, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertNull(astNode34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 136 + "'", int35 == 136);
        org.junit.Assert.assertNull(symbol37);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
    }

    @Test
    public void test09947() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09947");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode0 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int1 = functionNode0.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = functionNode0.getTop();
        com.google.javascript.rhino.head.ast.Name name3 = null;
        functionNode0.setFunctionName(name3);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode5 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = functionNode5.getTop();
        functionNode0.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode5);
        functionNode5.setIsExpressionClosure(true);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode11 = new com.google.javascript.rhino.head.ast.FunctionNode((int) (byte) 100);
        int int12 = functionNode5.addFunction(functionNode11);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode14 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode15 = functionNode14.getTop();
        java.lang.String str16 = scriptNode15.getJsDoc();
        com.google.javascript.rhino.head.Node node18 = scriptNode15.setType(0);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode19 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int20 = functionNode19.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode22 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        java.lang.String str23 = functionNode19.toStringTree(scriptNode22);
        com.google.javascript.rhino.head.ast.Scope scope25 = scriptNode22.getDefiningScope("");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode27 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int28 = scriptNode27.getEndLineno();
        int int29 = scriptNode27.getBaseLineno();
        com.google.javascript.rhino.head.Node node30 = new com.google.javascript.rhino.head.Node(25, node18, (com.google.javascript.rhino.head.Node) scriptNode22, (com.google.javascript.rhino.head.Node) scriptNode27);
        int int31 = functionNode11.compareTo((com.google.javascript.rhino.head.ast.AstNode) scriptNode22);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode32 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int33 = functionNode32.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode34 = functionNode32.getTop();
        com.google.javascript.rhino.head.ast.Name name35 = null;
        functionNode32.setFunctionName(name35);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode37 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int38 = functionNode37.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode40 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        java.lang.String str41 = functionNode37.toStringTree(scriptNode40);
        functionNode37.setFunctionIsGetter();
        int int43 = functionNode32.addFunction(functionNode37);
        boolean boolean44 = functionNode37.hasSideEffects();
        scriptNode22.setParent((com.google.javascript.rhino.head.ast.AstNode) functionNode37);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode47 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode48 = functionNode47.getTop();
        functionNode47.setParens((int) (byte) 1, (int) (short) 1);
        com.google.javascript.rhino.head.Node node52 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) functionNode47);
        functionNode47.setRequiresActivation();
        java.lang.String str54 = functionNode47.shortName();
        int int55 = functionNode47.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList56 = functionNode47.getFunctions();
        scriptNode22.setTop((com.google.javascript.rhino.head.ast.ScriptNode) functionNode47);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode58 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int59 = functionNode58.getLp();
        java.util.Map<com.google.javascript.rhino.head.Node, int[]> nodeMap60 = functionNode58.getLiveLocals();
        functionNode47.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode58);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-1) + "'", int1 == (-1));
        org.junit.Assert.assertNotNull(scriptNode2);
        org.junit.Assert.assertNotNull(scriptNode6);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(scriptNode15);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(node18);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNull(scope25);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 1 + "'", int31 == 1);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertNotNull(scriptNode34);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(scriptNode48);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "FunctionNode" + "'", str54, "FunctionNode");
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1));
        org.junit.Assert.assertNotNull(functionNodeList56);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-1) + "'", int59 == (-1));
        org.junit.Assert.assertNull(nodeMap60);
    }

    @Test
    public void test09948() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09948");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode1 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int2 = functionNode1.getLp();
        functionNode1.setEncodedSource("");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode5 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int6 = functionNode5.getLp();
        functionNode5.setEncodedSource("");
        functionNode5.flattenSymbolTable(false);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode11 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int12 = functionNode11.getLp();
        com.google.javascript.rhino.head.Node node14 = new com.google.javascript.rhino.head.Node((-1), (com.google.javascript.rhino.head.Node) functionNode1, (com.google.javascript.rhino.head.Node) functionNode5, (com.google.javascript.rhino.head.Node) functionNode11, (int) '#');
        boolean boolean15 = functionNode11.isGenerator();
        int int16 = functionNode11.getFunctionType();
        com.google.javascript.rhino.head.Node node17 = functionNode11.getNext();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList18 = functionNode11.getSymbols();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode20 = new com.google.javascript.rhino.head.ast.FunctionNode(0);
        int int21 = functionNode20.getBaseLineno();
        functionNode20.setSourceName("                                                                                                                                                                                                        /null/");
        functionNode20.setRequiresActivation();
        com.google.javascript.rhino.head.Node node25 = functionNode20.target;
        int int26 = functionNode20.getLength();
        functionNode11.replaceWith((com.google.javascript.rhino.head.ast.Scope) functionNode20);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList28 = functionNode20.getChildScopes();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNull(node17);
        org.junit.Assert.assertNotNull(symbolList18);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertNull(node25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 1 + "'", int26 == 1);
        org.junit.Assert.assertNull(scopeList28);
    }

    @Test
    public void test09949() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09949");
        com.google.javascript.rhino.head.ast.Jump jump3 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump3.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump7 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump3, 0);
        com.google.javascript.rhino.head.ast.Jump jump11 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump11.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump15 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump11, 0);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode16 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int17 = functionNode16.getLp();
        functionNode16.setEncodedSource("");
        functionNode16.flattenSymbolTable(false);
        jump3.addChildAfter((com.google.javascript.rhino.head.Node) jump11, (com.google.javascript.rhino.head.Node) functionNode16);
        com.google.javascript.rhino.head.Node node23 = functionNode16.target;
        boolean boolean24 = functionNode16.hasConsistentReturnUsage();
        com.google.javascript.rhino.head.ast.Name name25 = functionNode16.getFunctionName();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode26 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.Scope scope28 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 10);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode29 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode30 = functionNode29.getTop();
        functionNode29.setParens((int) (byte) 1, (int) (short) 1);
        functionNode29.setEncodedSourceStart((-1));
        functionNode29.setFunctionIsGetter();
        scope28.addChildToFront((com.google.javascript.rhino.head.Node) functionNode29);
        functionNode26.setBody((com.google.javascript.rhino.head.ast.AstNode) functionNode29);
        functionNode29.setRelative(0);
        functionNode16.setBody((com.google.javascript.rhino.head.ast.AstNode) functionNode29);
        boolean boolean42 = functionNode16.isGenerator();
        com.google.javascript.rhino.head.ast.RegExpLiteral regExpLiteral44 = new com.google.javascript.rhino.head.ast.RegExpLiteral((int) (short) 1);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode46 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode47 = functionNode46.getTop();
        functionNode46.setParens((int) (byte) 1, (int) (short) 1);
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor51 = functionNode46.iterator();
        regExpLiteral44.putProp(13, (java.lang.Object) functionNode46);
        functionNode46.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.FunctionNode functionNode55 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int56 = functionNode55.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode57 = functionNode55.getTop();
        com.google.javascript.rhino.head.ast.Symbol symbol59 = functionNode55.getSymbol("                                    ");
        functionNode46.setBody((com.google.javascript.rhino.head.ast.AstNode) functionNode55);
        int int61 = functionNode16.addFunction(functionNode55);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNull(node23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(name25);
        org.junit.Assert.assertNotNull(scriptNode30);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(scriptNode47);
        org.junit.Assert.assertNotNull(nodeItor51);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1));
        org.junit.Assert.assertNotNull(scriptNode57);
        org.junit.Assert.assertNull(symbol59);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 0 + "'", int61 == 0);
    }

    @Test
    public void test09950() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09950");
        com.google.javascript.rhino.head.ast.Jump jump1 = new com.google.javascript.rhino.head.ast.Jump(100);
        com.google.javascript.rhino.head.ast.AstNode astNode2 = jump1.getParent();
        org.junit.Assert.assertNull(astNode2);
    }

    @Test
    public void test09951() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09951");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode0 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = functionNode0.getTop();
        com.google.javascript.rhino.head.ast.Name name2 = null;
        functionNode0.setFunctionName(name2);
        int int4 = functionNode0.getLength();
        com.google.javascript.rhino.head.ast.Scope scope7 = new com.google.javascript.rhino.head.ast.Scope((int) '4');
        functionNode0.putProp(6, (java.lang.Object) scope7);
        functionNode0.setEncodedSourceStart(9);
        com.google.javascript.rhino.head.ast.Scope scope11 = functionNode0.getParentScope();
        boolean boolean12 = functionNode0.isGetterOrSetter();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList13 = functionNode0.getSymbols();
        boolean boolean14 = functionNode0.isGetterOrSetter();
        java.lang.String str15 = functionNode0.getEncodedSource();
        org.junit.Assert.assertNotNull(scriptNode1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 1 + "'", int4 == 1);
        org.junit.Assert.assertNull(scope11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(symbolList13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(str15);
    }

    @Test
    public void test09952() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09952");
        com.google.javascript.rhino.head.Token.CommentType commentType2 = com.google.javascript.rhino.head.Token.CommentType.HTML;
        com.google.javascript.rhino.head.ast.Comment comment4 = new com.google.javascript.rhino.head.ast.Comment(20, (int) (short) -1, commentType2, "EOF");
        java.lang.String str5 = comment4.getValue();
        java.lang.String str7 = comment4.toSource(13);
        com.google.javascript.rhino.head.Node node9 = comment4.setType((int) (short) 1);
        com.google.javascript.rhino.head.Token.CommentType commentType14 = com.google.javascript.rhino.head.Token.CommentType.HTML;
        com.google.javascript.rhino.head.ast.Comment comment16 = new com.google.javascript.rhino.head.ast.Comment(20, 1, commentType14, "109");
        com.google.javascript.rhino.head.ast.Comment comment18 = new com.google.javascript.rhino.head.ast.Comment(136, 15, commentType14, "-1\tSCRIPT -1 1\n");
        comment4.setCommentType(commentType14);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str20 = comment4.getString();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: com.google.javascript.rhino.head.ast.Comment cannot be cast to com.google.javascript.rhino.head.ast.Name");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + commentType2 + "' != '" + com.google.javascript.rhino.head.Token.CommentType.HTML + "'", commentType2.equals(com.google.javascript.rhino.head.Token.CommentType.HTML));
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "EOF" + "'", str5, "EOF");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "                          EOF" + "'", str7, "                          EOF");
        org.junit.Assert.assertNotNull(node9);
        org.junit.Assert.assertTrue("'" + commentType14 + "' != '" + com.google.javascript.rhino.head.Token.CommentType.HTML + "'", commentType14.equals(com.google.javascript.rhino.head.Token.CommentType.HTML));
    }

    @Test
    public void test09953() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09953");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode0 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int1 = functionNode0.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = functionNode0.getTop();
        com.google.javascript.rhino.head.ast.Name name3 = null;
        functionNode0.setFunctionName(name3);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode5 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = functionNode5.getTop();
        functionNode0.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode5);
        int int8 = functionNode5.getRp();
        functionNode5.setParens(11, 2);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode13 = new com.google.javascript.rhino.head.ast.FunctionNode((-1));
        int int14 = functionNode5.addFunction(functionNode13);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode16 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int17 = scriptNode16.getEndLineno();
        int int18 = scriptNode16.getBaseLineno();
        scriptNode16.removeProp(0);
        scriptNode16.setEncodedSourceEnd(19);
        java.lang.String str23 = scriptNode16.toString();
        int[] intArray25 = new int[] { 26 };
        functionNode5.addLiveLocals((com.google.javascript.rhino.head.Node) scriptNode16, intArray25);
        com.google.javascript.rhino.head.Node node28 = scriptNode16.setType((int) (short) 0);
        int int29 = scriptNode16.getBaseLineno();
        scriptNode16.setRelative((-14761645));
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-1) + "'", int1 == (-1));
        org.junit.Assert.assertNotNull(scriptNode2);
        org.junit.Assert.assertNotNull(scriptNode6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "136" + "'", str23, "136");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[26]");
        org.junit.Assert.assertNotNull(node28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
    }

    @Test
    public void test09954() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09954");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode1 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int2 = functionNode1.getLp();
        functionNode1.setEncodedSource("");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode5 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int6 = functionNode5.getLp();
        functionNode5.setEncodedSource("");
        functionNode5.flattenSymbolTable(false);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode11 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int12 = functionNode11.getLp();
        com.google.javascript.rhino.head.Node node14 = new com.google.javascript.rhino.head.Node((-1), (com.google.javascript.rhino.head.Node) functionNode1, (com.google.javascript.rhino.head.Node) functionNode5, (com.google.javascript.rhino.head.Node) functionNode11, (int) '#');
        com.google.javascript.rhino.head.ast.Comment comment15 = functionNode11.getJsDocNode();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode16 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.Scope scope18 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 10);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode19 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode20 = functionNode19.getTop();
        functionNode19.setParens((int) (byte) 1, (int) (short) 1);
        functionNode19.setEncodedSourceStart((-1));
        functionNode19.setFunctionIsGetter();
        scope18.addChildToFront((com.google.javascript.rhino.head.Node) functionNode19);
        functionNode16.setBody((com.google.javascript.rhino.head.ast.AstNode) functionNode19);
        boolean boolean29 = functionNode11.isParam((com.google.javascript.rhino.head.ast.AstNode) functionNode16);
        int int30 = functionNode16.getLp();
        int int31 = functionNode16.getEncodedSourceEnd();
        boolean boolean32 = functionNode16.isGetterOrSetter();
        com.google.javascript.rhino.head.Node node36 = com.google.javascript.rhino.head.Node.newString("                {\n                }\n");
        com.google.javascript.rhino.head.ast.Jump jump39 = new com.google.javascript.rhino.head.ast.Jump(3, 13);
        com.google.javascript.rhino.head.Node node40 = new com.google.javascript.rhino.head.Node(136, node36, (com.google.javascript.rhino.head.Node) jump39);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode41 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int42 = functionNode41.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode43 = functionNode41.getTop();
        com.google.javascript.rhino.head.ast.Name name44 = null;
        functionNode41.setFunctionName(name44);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode46 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode47 = functionNode46.getTop();
        functionNode41.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode46);
        functionNode46.setEncodedSourceStart(6);
        com.google.javascript.rhino.head.Token.CommentType commentType53 = com.google.javascript.rhino.head.Token.CommentType.HTML;
        com.google.javascript.rhino.head.ast.Comment comment55 = new com.google.javascript.rhino.head.ast.Comment(20, 1, commentType53, "109");
        java.lang.String str57 = comment55.toSource(0);
        java.lang.String str58 = comment55.getValue();
        com.google.javascript.rhino.head.Node node60 = new com.google.javascript.rhino.head.Node(136, node40, (com.google.javascript.rhino.head.Node) functionNode46, (com.google.javascript.rhino.head.Node) comment55, 17);
        functionNode16.replaceWith((com.google.javascript.rhino.head.ast.Scope) functionNode46);
        com.google.javascript.rhino.head.ast.Scope scope62 = functionNode16.getParentScope();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNull(comment15);
        org.junit.Assert.assertNotNull(scriptNode20);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(node36);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertNotNull(scriptNode43);
        org.junit.Assert.assertNotNull(scriptNode47);
        org.junit.Assert.assertTrue("'" + commentType53 + "' != '" + com.google.javascript.rhino.head.Token.CommentType.HTML + "'", commentType53.equals(com.google.javascript.rhino.head.Token.CommentType.HTML));
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "109" + "'", str57, "109");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "109" + "'", str58, "109");
        org.junit.Assert.assertNull(scope62);
    }

    @Test
    public void test09955() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09955");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode1 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int2 = functionNode1.getLp();
        functionNode1.setEncodedSource("");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode5 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int6 = functionNode5.getLp();
        functionNode5.setEncodedSource("");
        functionNode5.flattenSymbolTable(false);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode11 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int12 = functionNode11.getLp();
        com.google.javascript.rhino.head.Node node14 = new com.google.javascript.rhino.head.Node((-1), (com.google.javascript.rhino.head.Node) functionNode1, (com.google.javascript.rhino.head.Node) functionNode5, (com.google.javascript.rhino.head.Node) functionNode11, (int) '#');
        com.google.javascript.rhino.head.ast.Jump jump17 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode19 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int20 = scriptNode19.getEndLineno();
        int int21 = scriptNode19.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList22 = scriptNode19.getChildScopes();
        jump17.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode19);
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor24 = scriptNode19.iterator();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode25 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int26 = functionNode25.getLp();
        functionNode25.setEncodedSource("");
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode19, (com.google.javascript.rhino.head.ast.Scope) functionNode25);
        com.google.javascript.rhino.head.ast.Jump jump34 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump34.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump38 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump34, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode40 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int41 = scriptNode40.getEndLineno();
        int int42 = scriptNode40.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList43 = scriptNode40.getChildScopes();
        com.google.javascript.rhino.head.Node node44 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump34, (com.google.javascript.rhino.head.Node) scriptNode40);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList45 = scriptNode40.getFunctions();
        functionNodeList45.clear();
        int int48 = functionNodeList45.lastIndexOf((java.lang.Object) (-1L));
        com.google.javascript.rhino.head.ast.Jump jump53 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump53.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump57 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump53, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode59 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int60 = scriptNode59.getEndLineno();
        int int61 = scriptNode59.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList62 = scriptNode59.getChildScopes();
        com.google.javascript.rhino.head.Node node63 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump53, (com.google.javascript.rhino.head.Node) scriptNode59);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList64 = scriptNode59.getFunctions();
        functionNodeList64.clear();
        int int67 = functionNodeList64.lastIndexOf((java.lang.Object) (-1L));
        boolean boolean68 = functionNodeList45.removeAll((java.util.Collection<com.google.javascript.rhino.head.ast.FunctionNode>) functionNodeList64);
        com.google.javascript.rhino.head.ast.Jump jump73 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump73.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump77 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump73, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode79 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int80 = scriptNode79.getEndLineno();
        int int81 = scriptNode79.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList82 = scriptNode79.getChildScopes();
        com.google.javascript.rhino.head.Node node83 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump73, (com.google.javascript.rhino.head.Node) scriptNode79);
        com.google.javascript.rhino.head.Node node85 = scriptNode79.setType(0);
        int int86 = functionNodeList64.lastIndexOf((java.lang.Object) scriptNode79);
        functionNode11.addChildAfter((com.google.javascript.rhino.head.Node) functionNode25, (com.google.javascript.rhino.head.Node) scriptNode79);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode89 = new com.google.javascript.rhino.head.ast.FunctionNode((int) (byte) 100);
        int int90 = functionNode89.getEncodedSourceStart();
        int int91 = functionNode89.getFunctionCount();
        functionNode25.addParam((com.google.javascript.rhino.head.ast.AstNode) functionNode89);
        int int93 = functionNode89.getRp();
        com.google.javascript.rhino.head.ast.Comment comment94 = functionNode89.getJsDocNode();
        com.google.javascript.rhino.head.ast.AstNode astNode95 = functionNode89.getBody();
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.ast.Scope scope96 = com.google.javascript.rhino.head.ast.Scope.splitScope((com.google.javascript.rhino.head.ast.Scope) functionNode89);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: com.google.javascript.rhino.head.ast.Scope cannot be cast to com.google.javascript.rhino.head.ast.ScriptNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertNull(scopeList22);
        org.junit.Assert.assertNotNull(nodeItor24);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertNull(scopeList43);
        org.junit.Assert.assertNotNull(functionNodeList45);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-1) + "'", int60 == (-1));
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + (-1) + "'", int61 == (-1));
        org.junit.Assert.assertNull(scopeList62);
        org.junit.Assert.assertNotNull(functionNodeList64);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + (-1) + "'", int67 == (-1));
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + (-1) + "'", int80 == (-1));
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + (-1) + "'", int81 == (-1));
        org.junit.Assert.assertNull(scopeList82);
        org.junit.Assert.assertNotNull(node85);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + (-1) + "'", int86 == (-1));
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + (-1) + "'", int90 == (-1));
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + 0 + "'", int91 == 0);
        org.junit.Assert.assertTrue("'" + int93 + "' != '" + (-1) + "'", int93 == (-1));
        org.junit.Assert.assertNull(comment94);
        org.junit.Assert.assertNull(astNode95);
    }

    @Test
    public void test09956() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09956");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode0 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int1 = functionNode0.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = functionNode0.getTop();
        boolean boolean3 = functionNode0.hasSideEffects();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList4 = functionNode0.getSymbols();
        functionNode0.setRp(5);
        functionNode0.setParens((int) '#', 24);
        int int10 = functionNode0.getEncodedSourceEnd();
        int int11 = functionNode0.getRp();
        int int12 = functionNode0.getEncodedSourceEnd();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode13 = functionNode0.getTop();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-1) + "'", int1 == (-1));
        org.junit.Assert.assertNotNull(scriptNode2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(symbolList4);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 24 + "'", int11 == 24);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(scriptNode13);
    }

    @Test
    public void test09957() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09957");
        com.google.javascript.rhino.head.Node node1 = new com.google.javascript.rhino.head.Node((int) (short) 10);
    }

    @Test
    public void test09958() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09958");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode2 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int3 = functionNode2.getLp();
        functionNode2.setLp((int) (short) 1);
        int int8 = functionNode2.getIntProp(4, 26);
        com.google.javascript.rhino.head.ast.Jump jump9 = new com.google.javascript.rhino.head.ast.Jump(3, (com.google.javascript.rhino.head.Node) functionNode2);
        com.google.javascript.rhino.head.Node node10 = new com.google.javascript.rhino.head.Node((int) '4', (com.google.javascript.rhino.head.Node) functionNode2);
        functionNode2.setRequiresActivation();
        com.google.javascript.rhino.head.Node node13 = functionNode2.setType(9);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode14 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int15 = functionNode14.getLp();
        com.google.javascript.rhino.head.ast.Scope scope17 = functionNode14.getDefiningScope("109");
        functionNode14.setIsGenerator();
        boolean boolean19 = functionNode14.isGetter();
        boolean boolean20 = functionNode14.isGenerator();
        functionNode2.setMemberExprNode((com.google.javascript.rhino.head.ast.AstNode) functionNode14);
        functionNode14.setEncodedSourceBounds(854392126, 22);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 26 + "'", int8 == 26);
        org.junit.Assert.assertNotNull(node13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNull(scope17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
    }

    @Test
    public void test09959() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09959");
        com.google.javascript.rhino.head.ast.Jump jump2 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode4 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int5 = scriptNode4.getEndLineno();
        int int6 = scriptNode4.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList7 = scriptNode4.getChildScopes();
        jump2.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode4);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode10 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int11 = functionNode10.getLp();
        functionNode10.setEncodedSource("");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode14 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int15 = functionNode14.getLp();
        functionNode14.setEncodedSource("");
        functionNode14.flattenSymbolTable(false);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode20 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int21 = functionNode20.getLp();
        com.google.javascript.rhino.head.Node node23 = new com.google.javascript.rhino.head.Node((-1), (com.google.javascript.rhino.head.Node) functionNode10, (com.google.javascript.rhino.head.Node) functionNode14, (com.google.javascript.rhino.head.Node) functionNode20, (int) '#');
        jump2.addChildrenToFront((com.google.javascript.rhino.head.Node) functionNode10);
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList25 = functionNode10.getStatements();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode26 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode27 = functionNode26.getTop();
        com.google.javascript.rhino.head.ast.AstRoot astRoot28 = functionNode26.getAstRoot();
        functionNode10.replaceWith((com.google.javascript.rhino.head.ast.Scope) functionNode26);
        functionNode10.setLineno(4);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList32 = functionNode10.getFunctions();
        com.google.javascript.rhino.head.ast.Symbol symbol33 = new com.google.javascript.rhino.head.ast.Symbol();
        com.google.javascript.rhino.head.Node node34 = symbol33.getNode();
        com.google.javascript.rhino.head.Node node35 = symbol33.getNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode37 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int38 = scriptNode37.getEndLineno();
        int int39 = scriptNode37.getBaseLineno();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode40 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int41 = functionNode40.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode43 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        java.lang.String str44 = functionNode40.toStringTree(scriptNode43);
        functionNode40.setFunctionIsGetter();
        com.google.javascript.rhino.head.ast.AstNode astNode46 = functionNode40.getBody();
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList47 = functionNode40.getParams();
        scriptNode37.replaceWith((com.google.javascript.rhino.head.ast.Scope) functionNode40);
        symbol33.setNode((com.google.javascript.rhino.head.Node) functionNode40);
        java.lang.String str50 = symbol33.getName();
        boolean boolean51 = functionNodeList32.remove((java.lang.Object) str50);
        com.google.javascript.rhino.head.ast.Jump jump56 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump56.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump60 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump56, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode62 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int63 = scriptNode62.getEndLineno();
        int int64 = scriptNode62.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList65 = scriptNode62.getChildScopes();
        com.google.javascript.rhino.head.Node node66 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump56, (com.google.javascript.rhino.head.Node) scriptNode62);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList67 = scriptNode62.getFunctions();
        java.util.Spliterator<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeSpliterator68 = functionNodeList67.spliterator();
        int int70 = functionNodeList67.indexOf((java.lang.Object) (byte) 10);
        functionNodeList67.clear();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode72 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode73 = functionNode72.getTop();
        functionNode72.setParens((int) (byte) 1, (int) (short) 1);
        int int77 = functionNode72.getRp();
        int int78 = functionNode72.getAbsolutePosition();
        com.google.javascript.rhino.head.ast.Scope scope79 = functionNode72.getEnclosingScope();
        boolean boolean80 = functionNodeList67.contains((java.lang.Object) functionNode72);
        boolean boolean81 = functionNodeList32.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.FunctionNode>) functionNodeList67);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNull(scopeList7);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertNotNull(astNodeList25);
        org.junit.Assert.assertNotNull(scriptNode27);
        org.junit.Assert.assertNull(astRoot28);
        org.junit.Assert.assertNotNull(functionNodeList32);
        org.junit.Assert.assertNull(node34);
        org.junit.Assert.assertNull(node35);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertNull(astNode46);
        org.junit.Assert.assertNotNull(astNodeList47);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + (-1) + "'", int63 == (-1));
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + (-1) + "'", int64 == (-1));
        org.junit.Assert.assertNull(scopeList65);
        org.junit.Assert.assertNotNull(functionNodeList67);
        org.junit.Assert.assertNotNull(functionNodeSpliterator68);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + (-1) + "'", int70 == (-1));
        org.junit.Assert.assertNotNull(scriptNode73);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 1 + "'", int77 == 1);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + (-1) + "'", int78 == (-1));
        org.junit.Assert.assertNull(scope79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
    }

    @Test
    public void test09960() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09960");
        com.google.javascript.rhino.head.ast.Jump jump2 = new com.google.javascript.rhino.head.ast.Jump((int) (short) 0);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode3 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int4 = functionNode3.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = functionNode3.getTop();
        com.google.javascript.rhino.head.ast.Name name6 = null;
        functionNode3.setFunctionName(name6);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode8 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode9 = functionNode8.getTop();
        functionNode3.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode8);
        functionNode8.setIsExpressionClosure(true);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode14 = new com.google.javascript.rhino.head.ast.FunctionNode((int) (byte) 100);
        int int15 = functionNode8.addFunction(functionNode14);
        int int16 = jump2.compareTo((com.google.javascript.rhino.head.ast.AstNode) functionNode14);
        functionNode14.setEncodedSourceStart((int) '4');
        functionNode14.setLength(48);
        functionNode14.setFunctionType(19);
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap23 = functionNode14.getSymbolTable();
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor24 = functionNode14.iterator();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode25 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int26 = functionNode25.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode27 = functionNode25.getTop();
        boolean boolean28 = functionNode25.hasSideEffects();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList29 = functionNode25.getSymbols();
        int int30 = functionNode25.getLength();
        boolean boolean31 = functionNode25.isGetterOrSetter();
        functionNode25.flattenSymbolTable(false);
        com.google.javascript.rhino.head.ast.RegExpLiteral regExpLiteral35 = new com.google.javascript.rhino.head.ast.RegExpLiteral((-1262414679));
        java.lang.String str36 = regExpLiteral35.getValue();
        functionNode25.target = regExpLiteral35;
        com.google.javascript.rhino.head.Node node38 = new com.google.javascript.rhino.head.Node((-3), (com.google.javascript.rhino.head.Node) functionNode14, (com.google.javascript.rhino.head.Node) regExpLiteral35);
        functionNode14.setSourceName("                          109");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode41 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode42 = functionNode41.getTop();
        functionNode41.setParens((int) (byte) 1, (int) (short) 1);
        int int46 = functionNode41.getRp();
        int int47 = functionNode41.getAbsolutePosition();
        com.google.javascript.rhino.head.ast.AstNode astNode48 = functionNode41.getMemberExprNode();
        functionNode41.setEncodedSource("-1\tSCRIPT -1 1\n");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode51 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int52 = functionNode51.getLp();
        functionNode51.setEncodedSource("");
        functionNode51.flattenSymbolTable(false);
        java.lang.String str57 = functionNode51.getName();
        functionNode51.setFunctionIsGetter();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode59 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int60 = functionNode59.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode61 = functionNode59.getTop();
        com.google.javascript.rhino.head.Node node62 = functionNode59.getLastSibling();
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList63 = functionNode59.getParams();
        functionNode51.setParams(astNodeList63);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode65 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int66 = functionNode65.getLp();
        functionNode65.setLp((int) (short) 1);
        int int71 = functionNode65.getIntProp(4, 26);
        functionNode65.flattenSymbolTable(true);
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList74 = functionNode65.getParams();
        functionNode51.setParams(astNodeList74);
        functionNode51.setEndLineno(12);
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor78 = functionNode51.iterator();
        int int79 = functionNode51.getLineno();
        com.google.javascript.rhino.head.Node node80 = functionNode51.getNext();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode81 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode82 = functionNode81.getTop();
        com.google.javascript.rhino.head.ast.Name name83 = null;
        functionNode81.setFunctionName(name83);
        int int85 = functionNode81.getLength();
        functionNode81.setFunctionIsSetter();
        boolean boolean87 = functionNode51.isParam((com.google.javascript.rhino.head.ast.AstNode) functionNode81);
        int int88 = functionNode41.addFunction(functionNode81);
        boolean boolean89 = functionNode14.isParam((com.google.javascript.rhino.head.ast.AstNode) functionNode41);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(scriptNode5);
        org.junit.Assert.assertNotNull(scriptNode9);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNull(strMap23);
        org.junit.Assert.assertNotNull(nodeItor24);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNotNull(scriptNode27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(symbolList29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 1 + "'", int30 == 1);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNotNull(scriptNode42);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 1 + "'", int46 == 1);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertNull(astNode48);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "" + "'", str57, "");
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-1) + "'", int60 == (-1));
        org.junit.Assert.assertNotNull(scriptNode61);
        org.junit.Assert.assertNotNull(node62);
        org.junit.Assert.assertNotNull(astNodeList63);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + (-1) + "'", int66 == (-1));
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 26 + "'", int71 == 26);
        org.junit.Assert.assertNotNull(astNodeList74);
        org.junit.Assert.assertNotNull(nodeItor78);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + (-1) + "'", int79 == (-1));
        org.junit.Assert.assertNull(node80);
        org.junit.Assert.assertNotNull(scriptNode82);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 1 + "'", int85 == 1);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + 0 + "'", int88 == 0);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
    }

    @Test
    public void test09961() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09961");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (byte) 10);
        java.lang.String str3 = scope1.toSource((int) (short) 0);
        scope1.setBounds(136, 12802714);
        int int7 = scope1.getLineno();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode8 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int9 = functionNode8.getLp();
        functionNode8.setEncodedSource("");
        functionNode8.flattenSymbolTable(false);
        java.lang.String str14 = functionNode8.getName();
        functionNode8.setFunctionIsGetter();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode16 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int17 = functionNode16.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode18 = functionNode16.getTop();
        com.google.javascript.rhino.head.Node node19 = functionNode16.getLastSibling();
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList20 = functionNode16.getParams();
        functionNode8.setParams(astNodeList20);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode22 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int23 = functionNode22.getLp();
        functionNode22.setLp((int) (short) 1);
        int int28 = functionNode22.getIntProp(4, 26);
        functionNode22.flattenSymbolTable(true);
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList31 = functionNode22.getParams();
        functionNode8.setParams(astNodeList31);
        int int33 = functionNode8.getEncodedSourceEnd();
        functionNode8.setBaseLineno(84791990);
        // The following exception was thrown during execution in test generation
        try {
            scope1.setDefault((com.google.javascript.rhino.head.Node) functionNode8);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "{\n}\n" + "'", str3, "{\n}\n");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNotNull(scriptNode18);
        org.junit.Assert.assertNotNull(node19);
        org.junit.Assert.assertNotNull(astNodeList20);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 26 + "'", int28 == 26);
        org.junit.Assert.assertNotNull(astNodeList31);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
    }

    @Test
    public void test09962() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09962");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode0 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = functionNode0.getTop();
        functionNode0.setParens((int) (byte) 1, (int) (short) 1);
        functionNode0.setEncodedSourceStart((-1));
        functionNode0.setParens(5, (int) (short) 100);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode11 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int12 = functionNode11.getLp();
        functionNode11.setEncodedSource("");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode15 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int16 = functionNode15.getLp();
        functionNode15.setEncodedSource("");
        functionNode15.flattenSymbolTable(false);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode21 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int22 = functionNode21.getLp();
        com.google.javascript.rhino.head.Node node24 = new com.google.javascript.rhino.head.Node((-1), (com.google.javascript.rhino.head.Node) functionNode11, (com.google.javascript.rhino.head.Node) functionNode15, (com.google.javascript.rhino.head.Node) functionNode21, (int) '#');
        com.google.javascript.rhino.head.ast.AstNode astNode25 = functionNode11.getBody();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode26 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int27 = functionNode26.getLp();
        functionNode26.setEncodedSource("");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode30 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int31 = functionNode30.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode32 = functionNode30.getTop();
        com.google.javascript.rhino.head.ast.Name name33 = null;
        functionNode30.setFunctionName(name33);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode35 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode36 = functionNode35.getTop();
        functionNode30.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode35);
        int int38 = functionNode35.getRp();
        int int39 = functionNode35.getFunctionType();
        functionNode26.addParam((com.google.javascript.rhino.head.ast.AstNode) functionNode35);
        com.google.javascript.rhino.head.ast.Scope scope41 = functionNode35.getEnclosingScope();
        functionNode11.setBody((com.google.javascript.rhino.head.ast.AstNode) functionNode35);
        functionNode35.setLp(26);
        functionNode0.target = functionNode35;
        functionNode0.setEncodedSourceEnd(0);
        boolean boolean48 = functionNode0.isSetter();
        boolean boolean49 = functionNode0.isGenerator();
        boolean boolean50 = functionNode0.requiresActivation();
        org.junit.Assert.assertNotNull(scriptNode1);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNull(astNode25);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNotNull(scriptNode32);
        org.junit.Assert.assertNotNull(scriptNode36);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNotNull(scope41);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
    }

    @Test
    public void test09963() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09963");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode1 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int2 = functionNode1.getLp();
        functionNode1.setEncodedSource("");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode5 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int6 = functionNode5.getLp();
        functionNode5.setEncodedSource("");
        functionNode5.flattenSymbolTable(false);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode11 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int12 = functionNode11.getLp();
        com.google.javascript.rhino.head.Node node14 = new com.google.javascript.rhino.head.Node((-1), (com.google.javascript.rhino.head.Node) functionNode1, (com.google.javascript.rhino.head.Node) functionNode5, (com.google.javascript.rhino.head.Node) functionNode11, (int) '#');
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList15 = functionNode1.getChildScopes();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode17 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int18 = scriptNode17.getEndLineno();
        int int19 = scriptNode17.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList20 = scriptNode17.getChildScopes();
        functionNode1.setMemberExprNode((com.google.javascript.rhino.head.ast.AstNode) scriptNode17);
        functionNode1.setEncodedSourceEnd((int) (short) 100);
        java.lang.String str24 = functionNode1.getJsDoc();
        functionNode1.setEncodedSourceBounds((-1), (int) (short) -1);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList28 = functionNode1.getFunctions();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode29 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int30 = functionNode29.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode31 = functionNode29.getTop();
        com.google.javascript.rhino.head.ast.Name name32 = null;
        functionNode29.setFunctionName(name32);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode34 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode35 = functionNode34.getTop();
        functionNode29.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode34);
        int int37 = functionNode34.getRp();
        int int38 = functionNode34.getFunctionType();
        boolean boolean39 = functionNode34.requiresActivation();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode40 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int41 = functionNode40.getLp();
        functionNode40.setIsExpressionClosure(false);
        com.google.javascript.rhino.head.ast.Scope scope44 = functionNode40.getParentScope();
        functionNode34.addResumptionPoint((com.google.javascript.rhino.head.Node) scope44);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode46 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int47 = functionNode46.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode48 = functionNode46.getTop();
        com.google.javascript.rhino.head.ast.Name name49 = null;
        functionNode46.setFunctionName(name49);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode51 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode52 = functionNode51.getTop();
        functionNode46.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode51);
        com.google.javascript.rhino.head.ast.Scope scope56 = new com.google.javascript.rhino.head.ast.Scope((int) (short) -1, 0);
        functionNode46.replaceWith(scope56);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode58 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int59 = functionNode58.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode60 = functionNode58.getTop();
        com.google.javascript.rhino.head.ast.Name name61 = null;
        functionNode58.setFunctionName(name61);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode63 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode64 = functionNode63.getTop();
        functionNode58.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode63);
        int int66 = functionNode46.addFunction(functionNode58);
        functionNode46.flattenSymbolTable(false);
        functionNode34.replaceWith((com.google.javascript.rhino.head.ast.Scope) functionNode46);
        com.google.javascript.rhino.head.Token.CommentType commentType72 = com.google.javascript.rhino.head.Token.CommentType.HTML;
        com.google.javascript.rhino.head.ast.Comment comment74 = new com.google.javascript.rhino.head.ast.Comment(20, 1, commentType72, "109");
        comment74.putIntProp(0, 1);
        functionNode46.setJsDocNode(comment74);
        java.lang.String str79 = functionNode46.getSourceName();
        int int80 = functionNode46.getFunctionType();
        int int81 = functionNodeList28.lastIndexOf((java.lang.Object) int80);
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.ast.FunctionNode functionNode83 = functionNodeList28.get(365513504);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 365513504");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNull(scopeList15);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNull(scopeList20);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(functionNodeList28);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertNotNull(scriptNode31);
        org.junit.Assert.assertNotNull(scriptNode35);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertNull(scope44);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertNotNull(scriptNode48);
        org.junit.Assert.assertNotNull(scriptNode52);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-1) + "'", int59 == (-1));
        org.junit.Assert.assertNotNull(scriptNode60);
        org.junit.Assert.assertNotNull(scriptNode64);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 0 + "'", int66 == 0);
        org.junit.Assert.assertTrue("'" + commentType72 + "' != '" + com.google.javascript.rhino.head.Token.CommentType.HTML + "'", commentType72.equals(com.google.javascript.rhino.head.Token.CommentType.HTML));
        org.junit.Assert.assertNull(str79);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 0 + "'", int80 == 0);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + (-1) + "'", int81 == (-1));
    }

    @Test
    public void test09964() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09964");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode0 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int1 = functionNode0.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode3 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        java.lang.String str4 = functionNode0.toStringTree(scriptNode3);
        scriptNode3.setBaseLineno(1724962859);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-1) + "'", int1 == (-1));
        org.junit.Assert.assertNull(str4);
    }

    @Test
    public void test09965() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09965");
        com.google.javascript.rhino.head.ast.Jump jump4 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump4.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump8 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump4, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int11 = scriptNode10.getEndLineno();
        int int12 = scriptNode10.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList13 = scriptNode10.getChildScopes();
        com.google.javascript.rhino.head.Node node14 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump4, (com.google.javascript.rhino.head.Node) scriptNode10);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList15 = scriptNode10.getFunctions();
        functionNodeList15.clear();
        functionNodeList15.clear();
        java.util.Iterator<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeItor18 = functionNodeList15.iterator();
        com.google.javascript.rhino.head.ast.RegExpLiteral regExpLiteral20 = new com.google.javascript.rhino.head.ast.RegExpLiteral((int) (short) 1);
        java.lang.String str22 = regExpLiteral20.toSource((int) (byte) 10);
        regExpLiteral20.setFlags("-1\tSCRIPT -1 1\n");
        regExpLiteral20.removeProp(8);
        java.lang.String str27 = regExpLiteral20.getValue();
        regExpLiteral20.setLineno(10);
        regExpLiteral20.removeChildren();
        boolean boolean31 = functionNodeList15.equals((java.lang.Object) regExpLiteral20);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode32 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int33 = functionNode32.getLp();
        functionNode32.setEncodedSource("");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode36 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.Scope scope38 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 10);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode39 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode40 = functionNode39.getTop();
        functionNode39.setParens((int) (byte) 1, (int) (short) 1);
        functionNode39.setEncodedSourceStart((-1));
        functionNode39.setFunctionIsGetter();
        scope38.addChildToFront((com.google.javascript.rhino.head.Node) functionNode39);
        functionNode36.setBody((com.google.javascript.rhino.head.ast.AstNode) functionNode39);
        int int49 = functionNode32.addFunction(functionNode36);
        com.google.javascript.rhino.head.ast.Symbol symbol51 = functionNode32.getSymbol("-1\tBLOCK -1 1\n");
        com.google.javascript.rhino.head.Node[] nodeArray52 = new com.google.javascript.rhino.head.Node[] { functionNode32 };
        com.google.javascript.rhino.head.Node[] nodeArray53 = functionNodeList15.toArray(nodeArray52);
        java.util.ListIterator<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeItor54 = functionNodeList15.listIterator();
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNull(scopeList13);
        org.junit.Assert.assertNotNull(functionNodeList15);
        org.junit.Assert.assertNotNull(functionNodeItor18);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "                    /null/" + "'", str22, "                    /null/");
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertNotNull(scriptNode40);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertNull(symbol51);
        org.junit.Assert.assertNotNull(nodeArray52);
        org.junit.Assert.assertNotNull(nodeArray53);
        org.junit.Assert.assertNotNull(functionNodeItor54);
    }

    @Test
    public void test09966() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09966");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode0 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = functionNode0.getTop();
        functionNode0.setParens((int) (byte) 1, (int) (short) 1);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode5 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.Scope scope7 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 10);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode8 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode9 = functionNode8.getTop();
        functionNode8.setParens((int) (byte) 1, (int) (short) 1);
        functionNode8.setEncodedSourceStart((-1));
        functionNode8.setFunctionIsGetter();
        scope7.addChildToFront((com.google.javascript.rhino.head.Node) functionNode8);
        functionNode5.setBody((com.google.javascript.rhino.head.ast.AstNode) functionNode8);
        functionNode5.setFunctionIsSetter();
        int int19 = functionNode0.addFunction(functionNode5);
        java.lang.String str20 = functionNode0.getNextTempName();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode22 = new com.google.javascript.rhino.head.ast.FunctionNode(0);
        int int23 = functionNode22.getBaseLineno();
        functionNode22.setSourceName("                                                                                                                                                                                                        /null/");
        functionNode22.setRequiresActivation();
        functionNode0.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode22);
        functionNode22.setEncodedSourceEnd((int) (byte) -1);
        int int30 = functionNode22.getLineno();
        // The following exception was thrown during execution in test generation
        try {
            functionNode22.labelId((-46469981));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(scriptNode1);
        org.junit.Assert.assertNotNull(scriptNode9);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "$0" + "'", str20, "$0");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
    }

    @Test
    public void test09967() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09967");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode1 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int2 = functionNode1.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode3 = functionNode1.getTop();
        boolean boolean4 = functionNode1.hasSideEffects();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList5 = functionNode1.getSymbols();
        functionNode1.setRp(5);
        com.google.javascript.rhino.head.ast.Scope scope8 = functionNode1.getEnclosingScope();
        functionNode1.setLineno((int) (short) -1);
        com.google.javascript.rhino.head.ast.Scope scope12 = functionNode1.getDefiningScope("                  ");
        boolean boolean13 = functionNode1.isSetter();
        com.google.javascript.rhino.head.ast.Jump jump15 = new com.google.javascript.rhino.head.ast.Jump(830992929, (com.google.javascript.rhino.head.Node) functionNode1, 21);
        functionNode1.clearParentScope();
        // The following exception was thrown during execution in test generation
        try {
            int int17 = functionNode1.labelId();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertNotNull(scriptNode3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(symbolList5);
        org.junit.Assert.assertNull(scope8);
        org.junit.Assert.assertNull(scope12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test09968() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09968");
        com.google.javascript.rhino.head.ast.Jump jump4 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump4.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump8 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump4, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int11 = scriptNode10.getEndLineno();
        int int12 = scriptNode10.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList13 = scriptNode10.getChildScopes();
        com.google.javascript.rhino.head.Node node14 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump4, (com.google.javascript.rhino.head.Node) scriptNode10);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList15 = scriptNode10.getFunctions();
        functionNodeList15.clear();
        com.google.javascript.rhino.head.ast.Jump jump21 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump21.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump25 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump21, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode27 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int28 = scriptNode27.getEndLineno();
        int int29 = scriptNode27.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList30 = scriptNode27.getChildScopes();
        com.google.javascript.rhino.head.Node node31 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump21, (com.google.javascript.rhino.head.Node) scriptNode27);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList32 = scriptNode27.getFunctions();
        boolean boolean33 = functionNodeList15.removeAll((java.util.Collection<com.google.javascript.rhino.head.ast.FunctionNode>) functionNodeList32);
        functionNodeList15.clear();
        java.util.stream.Stream<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeStream35 = functionNodeList15.parallelStream();
        com.google.javascript.rhino.head.ast.Jump jump41 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump41.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump45 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump41, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode47 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int48 = scriptNode47.getEndLineno();
        int int49 = scriptNode47.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList50 = scriptNode47.getChildScopes();
        com.google.javascript.rhino.head.Node node51 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump41, (com.google.javascript.rhino.head.Node) scriptNode47);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList52 = scriptNode47.getFunctions();
        int int53 = scriptNode47.getPosition();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList54 = scriptNode47.getChildScopes();
        int int55 = scriptNode47.getEncodedSourceEnd();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList56 = scriptNode47.getSymbols();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode57 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int58 = functionNode57.getLp();
        functionNode57.setEncodedSource("");
        functionNode57.flattenSymbolTable(false);
        com.google.javascript.rhino.head.ast.RegExpLiteral regExpLiteral64 = new com.google.javascript.rhino.head.ast.RegExpLiteral((int) (short) 1);
        java.lang.String str66 = regExpLiteral64.toSource((int) (byte) 10);
        regExpLiteral64.setFlags("-1\tSCRIPT -1 1\n");
        regExpLiteral64.removeProp(8);
        java.lang.String str71 = regExpLiteral64.getValue();
        com.google.javascript.rhino.head.Node node72 = new com.google.javascript.rhino.head.Node(7, (com.google.javascript.rhino.head.Node) scriptNode47, (com.google.javascript.rhino.head.Node) functionNode57, (com.google.javascript.rhino.head.Node) regExpLiteral64);
        int int73 = functionNodeList15.lastIndexOf((java.lang.Object) functionNode57);
        int int74 = functionNode57.getRp();
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList75 = functionNode57.getFunctions();
        int int76 = functionNode57.getLp();
        int int77 = functionNode57.getEndLineno();
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNull(scopeList13);
        org.junit.Assert.assertNotNull(functionNodeList15);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertNull(scopeList30);
        org.junit.Assert.assertNotNull(functionNodeList32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(functionNodeStream35);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertNull(scopeList50);
        org.junit.Assert.assertNotNull(functionNodeList52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
        org.junit.Assert.assertNull(scopeList54);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1));
        org.junit.Assert.assertNotNull(symbolList56);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + (-1) + "'", int58 == (-1));
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "                    /null/" + "'", str66, "                    /null/");
        org.junit.Assert.assertNull(str71);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + (-1) + "'", int73 == (-1));
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + (-1) + "'", int74 == (-1));
        org.junit.Assert.assertNotNull(functionNodeList75);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + (-1) + "'", int76 == (-1));
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + (-1) + "'", int77 == (-1));
    }

    @Test
    public void test09969() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09969");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode0 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int1 = functionNode0.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = functionNode0.getTop();
        boolean boolean3 = functionNode0.hasSideEffects();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode4 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int5 = functionNode4.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = functionNode4.getTop();
        com.google.javascript.rhino.head.ast.Name name7 = null;
        functionNode4.setFunctionName(name7);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode9 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = functionNode9.getTop();
        functionNode4.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode9);
        int int12 = functionNode9.getRp();
        functionNode9.setParens(11, 2);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode17 = new com.google.javascript.rhino.head.ast.FunctionNode((-1));
        int int18 = functionNode9.addFunction(functionNode17);
        functionNode0.setMemberExprNode((com.google.javascript.rhino.head.ast.AstNode) functionNode9);
        com.google.javascript.rhino.head.ast.Scope scope20 = functionNode9.getEnclosingScope();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator21 = scope20.new NodeIterator();
        // The following exception was thrown during execution in test generation
        try {
            nodeIterator21.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: next() has not been called");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-1) + "'", int1 == (-1));
        org.junit.Assert.assertNotNull(scriptNode2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(scriptNode6);
        org.junit.Assert.assertNotNull(scriptNode10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(scope20);
    }

    @Test
    public void test09970() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09970");
        com.google.javascript.rhino.head.ast.Symbol symbol0 = new com.google.javascript.rhino.head.ast.Symbol();
        com.google.javascript.rhino.head.Node node1 = symbol0.getNode();
        symbol0.setIndex(4);
        java.lang.String str4 = symbol0.getDeclTypeName();
        java.lang.String str5 = symbol0.toString();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode6 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int7 = functionNode6.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode8 = functionNode6.getTop();
        boolean boolean9 = functionNode6.hasSideEffects();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int12 = scriptNode11.getEndLineno();
        int int13 = scriptNode11.getBaseLineno();
        com.google.javascript.rhino.head.ast.Jump jump16 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode18 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int19 = scriptNode18.getEndLineno();
        int int20 = scriptNode18.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList21 = scriptNode18.getChildScopes();
        jump16.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode18);
        java.lang.String str23 = scriptNode18.debugPrint();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode11, (com.google.javascript.rhino.head.ast.Scope) scriptNode18);
        com.google.javascript.rhino.head.ast.Scope scope25 = new com.google.javascript.rhino.head.ast.Scope();
        scriptNode18.target = scope25;
        functionNode6.addChildScope(scope25);
        boolean boolean28 = functionNode6.isGetter();
        symbol0.setNode((com.google.javascript.rhino.head.Node) functionNode6);
        com.google.javascript.rhino.head.ast.Scope scope30 = symbol0.getContainingTable();
        org.junit.Assert.assertNull(node1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "EOF" + "'", str4, "EOF");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Symbol (EOF) name=null" + "'", str5, "Symbol (EOF) name=null");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(scriptNode8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertNull(scopeList21);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str23, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(scope30);
    }

    @Test
    public void test09971() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09971");
        com.google.javascript.rhino.head.ast.Jump jump2 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode4 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int5 = scriptNode4.getEndLineno();
        int int6 = scriptNode4.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList7 = scriptNode4.getChildScopes();
        jump2.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode4);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode10 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int11 = functionNode10.getLp();
        functionNode10.setEncodedSource("");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode14 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int15 = functionNode14.getLp();
        functionNode14.setEncodedSource("");
        functionNode14.flattenSymbolTable(false);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode20 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int21 = functionNode20.getLp();
        com.google.javascript.rhino.head.Node node23 = new com.google.javascript.rhino.head.Node((-1), (com.google.javascript.rhino.head.Node) functionNode10, (com.google.javascript.rhino.head.Node) functionNode14, (com.google.javascript.rhino.head.Node) functionNode20, (int) '#');
        jump2.addChildrenToFront((com.google.javascript.rhino.head.Node) functionNode10);
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList25 = functionNode10.getStatements();
        functionNode10.setBaseLineno(16);
        java.lang.String str28 = functionNode10.toString();
        java.lang.String str29 = functionNode10.getEncodedSource();
        boolean boolean30 = functionNode10.hasSideEffects();
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList31 = functionNode10.getParams();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode32 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int33 = functionNode32.getLp();
        functionNode32.setLineno(0);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode36 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int37 = functionNode36.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode38 = functionNode36.getTop();
        boolean boolean39 = functionNode36.hasSideEffects();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList40 = functionNode36.getSymbols();
        functionNode36.setRp(5);
        com.google.javascript.rhino.head.ast.Scope scope43 = functionNode36.getEnclosingScope();
        functionNode36.setLineno(5);
        functionNode32.setMemberExprNode((com.google.javascript.rhino.head.ast.AstNode) functionNode36);
        functionNode10.setCompilerData((java.lang.Object) functionNode32);
        functionNode10.setFunctionIsSetter();
        java.lang.String str49 = functionNode10.getEncodedSource();
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNull(scopeList7);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertNotNull(astNodeList25);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "109" + "'", str28, "109");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, "");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(astNodeList31);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertNotNull(scriptNode38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(symbolList40);
        org.junit.Assert.assertNull(scope43);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "" + "'", str49, "");
    }

    @Test
    public void test09972() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09972");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode0 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int1 = functionNode0.getLp();
        functionNode0.setIsExpressionClosure(false);
        com.google.javascript.rhino.head.ast.Jump jump8 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump8.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump12 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump8, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int15 = scriptNode14.getEndLineno();
        int int16 = scriptNode14.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList17 = scriptNode14.getChildScopes();
        com.google.javascript.rhino.head.Node node18 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump8, (com.google.javascript.rhino.head.Node) scriptNode14);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList19 = scriptNode14.getFunctions();
        int int20 = functionNodeList19.size();
        com.google.javascript.rhino.head.ast.Jump jump26 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump26.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump30 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump26, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode32 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int33 = scriptNode32.getEndLineno();
        int int34 = scriptNode32.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList35 = scriptNode32.getChildScopes();
        com.google.javascript.rhino.head.Node node36 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump26, (com.google.javascript.rhino.head.Node) scriptNode32);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList37 = scriptNode32.getFunctions();
        functionNodeList37.clear();
        com.google.javascript.rhino.head.ast.Jump jump43 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump43.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump47 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump43, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode49 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int50 = scriptNode49.getEndLineno();
        int int51 = scriptNode49.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList52 = scriptNode49.getChildScopes();
        com.google.javascript.rhino.head.Node node53 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump43, (com.google.javascript.rhino.head.Node) scriptNode49);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList54 = scriptNode49.getFunctions();
        boolean boolean55 = functionNodeList37.removeAll((java.util.Collection<com.google.javascript.rhino.head.ast.FunctionNode>) functionNodeList54);
        boolean boolean56 = functionNodeList19.addAll(0, (java.util.Collection<com.google.javascript.rhino.head.ast.FunctionNode>) functionNodeList37);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode58 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int59 = scriptNode58.getEndLineno();
        com.google.javascript.rhino.head.ast.Symbol symbol61 = scriptNode58.getSymbol("hi!");
        java.lang.String str62 = scriptNode58.getEncodedSource();
        boolean boolean63 = functionNodeList37.remove((java.lang.Object) scriptNode58);
        functionNode0.addChildScope((com.google.javascript.rhino.head.ast.Scope) scriptNode58);
        java.lang.String str66 = functionNode0.makeIndent((-446577320));
        com.google.javascript.rhino.head.ast.Jump jump69 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        com.google.javascript.rhino.head.ast.Scope scope71 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 10);
        jump69.addChildrenToBack((com.google.javascript.rhino.head.Node) scope71);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode73 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int74 = functionNode73.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode75 = functionNode73.getTop();
        com.google.javascript.rhino.head.ast.Name name76 = null;
        functionNode73.setFunctionName(name76);
        functionNode73.setIsGenerator();
        java.lang.String str79 = functionNode73.getEncodedSource();
        scope71.target = functionNode73;
        functionNode73.setFunctionIsSetter();
        com.google.javascript.rhino.head.ast.Symbol symbol83 = functionNode73.getSymbol("                    109");
        functionNode73.setEndLineno(10);
        int int86 = functionNode0.addFunction(functionNode73);
        functionNode73.setRequiresActivation();
        functionNode73.setParens(0, 992303883);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-1) + "'", int1 == (-1));
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNull(scopeList17);
        org.junit.Assert.assertNotNull(functionNodeList19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertNull(scopeList35);
        org.junit.Assert.assertNotNull(functionNodeList37);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1));
        org.junit.Assert.assertNull(scopeList52);
        org.junit.Assert.assertNotNull(functionNodeList54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-1) + "'", int59 == (-1));
        org.junit.Assert.assertNull(symbol61);
        org.junit.Assert.assertNull(str62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "" + "'", str66, "");
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + (-1) + "'", int74 == (-1));
        org.junit.Assert.assertNotNull(scriptNode75);
        org.junit.Assert.assertNull(str79);
        org.junit.Assert.assertNull(symbol83);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + 0 + "'", int86 == 0);
    }

    @Test
    public void test09973() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09973");
        com.google.javascript.rhino.head.ast.Name name1 = null;
        com.google.javascript.rhino.head.ast.FunctionNode functionNode2 = new com.google.javascript.rhino.head.ast.FunctionNode(17, name1);
        java.lang.Object obj3 = functionNode2.getCompilerData();
        com.google.javascript.rhino.head.Node node5 = functionNode2.setType((-446577320));
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.Node node6 = functionNode2.getContinue();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertNotNull(node5);
    }

    @Test
    public void test09974() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09974");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode0 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int1 = functionNode0.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = functionNode0.getTop();
        boolean boolean3 = functionNode0.hasSideEffects();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList4 = functionNode0.getSymbols();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = new com.google.javascript.rhino.head.ast.ScriptNode();
        int int6 = scriptNode5.getEncodedSourceEnd();
        java.lang.String str8 = scriptNode5.toSource((int) (byte) 10);
        scriptNode5.setEncodedSourceEnd((int) (short) -1);
        java.lang.String str11 = functionNode0.toStringTree(scriptNode5);
        functionNode0.setRequiresActivation();
        int int13 = functionNode0.depth();
        com.google.javascript.rhino.head.ast.Name name14 = functionNode0.getFunctionName();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode15 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int16 = functionNode15.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode17 = functionNode15.getTop();
        boolean boolean18 = functionNode15.hasSideEffects();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList19 = functionNode15.getSymbols();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode20 = new com.google.javascript.rhino.head.ast.ScriptNode();
        int int21 = scriptNode20.getEncodedSourceEnd();
        java.lang.String str23 = scriptNode20.toSource((int) (byte) 10);
        scriptNode20.setEncodedSourceEnd((int) (short) -1);
        java.lang.String str26 = functionNode15.toStringTree(scriptNode20);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode28 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode29 = functionNode28.getTop();
        java.lang.String str30 = scriptNode29.getJsDoc();
        com.google.javascript.rhino.head.Node node32 = scriptNode29.setType(0);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode33 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int34 = functionNode33.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode36 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        java.lang.String str37 = functionNode33.toStringTree(scriptNode36);
        com.google.javascript.rhino.head.ast.Scope scope39 = scriptNode36.getDefiningScope("");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode41 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int42 = scriptNode41.getEndLineno();
        int int43 = scriptNode41.getBaseLineno();
        com.google.javascript.rhino.head.Node node44 = new com.google.javascript.rhino.head.Node(25, node32, (com.google.javascript.rhino.head.Node) scriptNode36, (com.google.javascript.rhino.head.Node) scriptNode41);
        boolean boolean45 = scriptNode41.hasConsistentReturnUsage();
        java.lang.String str46 = scriptNode41.getNextTempName();
        java.lang.String str47 = scriptNode41.shortName();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode48 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int49 = functionNode48.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode50 = functionNode48.getTop();
        boolean boolean51 = functionNode48.hasSideEffects();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList52 = functionNode48.getSymbols();
        scriptNode41.setSymbols(symbolList52);
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator54 = scriptNode41.spliterator();
        scriptNode20.setParentScope((com.google.javascript.rhino.head.ast.Scope) scriptNode41);
        java.lang.String str56 = scriptNode41.toSource();
        // The following exception was thrown during execution in test generation
        try {
            functionNode0.setJumpStatement((com.google.javascript.rhino.head.ast.Jump) scriptNode41);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-1) + "'", int1 == (-1));
        org.junit.Assert.assertNotNull(scriptNode2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(symbolList4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "                    {\n                    }\n" + "'", str8, "                    {\n                    }\n");
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNull(name14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(scriptNode17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(symbolList19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "                    {\n                    }\n" + "'", str23, "                    {\n                    }\n");
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(scriptNode29);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNotNull(node32);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNull(scope39);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "$0" + "'", str46, "$0");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "ScriptNode" + "'", str47, "ScriptNode");
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertNotNull(scriptNode50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(symbolList52);
        org.junit.Assert.assertNotNull(nodeSpliterator54);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "{\n}\n" + "'", str56, "{\n}\n");
    }

    @Test
    public void test09975() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09975");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode0 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int1 = functionNode0.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = functionNode0.getTop();
        boolean boolean3 = functionNode0.hasSideEffects();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList4 = functionNode0.getSymbols();
        functionNode0.setRp(5);
        functionNode0.setParens((int) '#', 24);
        int int10 = functionNode0.getEncodedSourceEnd();
        functionNode0.setEncodedSourceBounds((-398329421), (-14761645));
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str14 = functionNode0.getString();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: com.google.javascript.rhino.head.ast.FunctionNode cannot be cast to com.google.javascript.rhino.head.ast.Name");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-1) + "'", int1 == (-1));
        org.junit.Assert.assertNotNull(scriptNode2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(symbolList4);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
    }

    @Test
    public void test09976() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09976");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode0 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int1 = functionNode0.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = functionNode0.getTop();
        com.google.javascript.rhino.head.ast.Name name3 = null;
        functionNode0.setFunctionName(name3);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode5 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = functionNode5.getTop();
        functionNode0.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode5);
        com.google.javascript.rhino.head.ast.Scope scope10 = new com.google.javascript.rhino.head.ast.Scope((int) (short) -1, 0);
        functionNode0.replaceWith(scope10);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode12 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int13 = functionNode12.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = functionNode12.getTop();
        com.google.javascript.rhino.head.ast.Name name15 = null;
        functionNode12.setFunctionName(name15);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode17 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode18 = functionNode17.getTop();
        functionNode12.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode17);
        int int20 = functionNode0.addFunction(functionNode12);
        functionNode0.flattenSymbolTable(false);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode23 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode24 = functionNode23.getTop();
        functionNode23.setParens((int) (byte) 1, (int) (short) 1);
        functionNode23.setEncodedSourceStart((-1));
        java.util.List<com.google.javascript.rhino.head.Node> nodeList30 = functionNode23.getResumptionPoints();
        com.google.javascript.rhino.head.ast.Scope scope32 = functionNode23.getDefiningScope("hi!");
        boolean boolean33 = functionNode23.isGetterOrSetter();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode34 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int35 = functionNode34.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode36 = functionNode34.getTop();
        com.google.javascript.rhino.head.ast.Name name37 = null;
        functionNode34.setFunctionName(name37);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode39 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode40 = functionNode39.getTop();
        functionNode34.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode39);
        int int42 = functionNode39.getRp();
        int int43 = functionNode39.getFunctionType();
        int int44 = functionNode23.addFunction(functionNode39);
        functionNode39.setRp((-1));
        functionNode0.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode39);
        com.google.javascript.rhino.head.ast.Name name48 = null;
        functionNode0.setFunctionName(name48);
        functionNode0.setSourceName("FunctionNode");
        com.google.javascript.rhino.head.Node node53 = com.google.javascript.rhino.head.Node.newString("FunctionNode");
        functionNode0.addChildToBack(node53);
        com.google.javascript.rhino.head.ast.Name name55 = null;
        functionNode0.setFunctionName(name55);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode59 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int60 = scriptNode59.getEndLineno();
        int int61 = scriptNode59.getBaseLineno();
        com.google.javascript.rhino.head.ast.Jump jump64 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode66 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int67 = scriptNode66.getEndLineno();
        int int68 = scriptNode66.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList69 = scriptNode66.getChildScopes();
        jump64.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode66);
        java.lang.String str71 = scriptNode66.debugPrint();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode59, (com.google.javascript.rhino.head.ast.Scope) scriptNode66);
        int int73 = scriptNode66.getLineno();
        boolean boolean74 = scriptNode66.hasSideEffects();
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor75 = scriptNode66.iterator();
        int int76 = scriptNode66.getEndLineno();
        com.google.javascript.rhino.head.ast.Jump jump78 = new com.google.javascript.rhino.head.ast.Jump(4, (com.google.javascript.rhino.head.Node) scriptNode66, (-148907469));
        functionNode0.setCompilerData((java.lang.Object) scriptNode66);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-1) + "'", int1 == (-1));
        org.junit.Assert.assertNotNull(scriptNode2);
        org.junit.Assert.assertNotNull(scriptNode6);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(scriptNode14);
        org.junit.Assert.assertNotNull(scriptNode18);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(scriptNode24);
        org.junit.Assert.assertNull(nodeList30);
        org.junit.Assert.assertNull(scope32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertNotNull(scriptNode36);
        org.junit.Assert.assertNotNull(scriptNode40);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertNotNull(node53);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-1) + "'", int60 == (-1));
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + (-1) + "'", int61 == (-1));
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + (-1) + "'", int67 == (-1));
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + (-1) + "'", int68 == (-1));
        org.junit.Assert.assertNull(scopeList69);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str71, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + (-1) + "'", int73 == (-1));
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(nodeItor75);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + (-1) + "'", int76 == (-1));
    }

    @Test
    public void test09977() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09977");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode0 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = functionNode0.getTop();
        int int2 = functionNode0.getRegexpCount();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode3 = functionNode0.getEnclosingFunction();
        functionNode0.setBaseLineno(0);
        com.google.javascript.rhino.head.ast.Name name7 = null;
        com.google.javascript.rhino.head.ast.FunctionNode functionNode8 = new com.google.javascript.rhino.head.ast.FunctionNode((int) (byte) -1, name7);
        java.util.List<com.google.javascript.rhino.head.Node> nodeList9 = functionNode8.getResumptionPoints();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList10 = functionNode8.getSymbols();
        int int11 = functionNode0.addFunction(functionNode8);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str12 = functionNode0.getString();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: com.google.javascript.rhino.head.ast.FunctionNode cannot be cast to com.google.javascript.rhino.head.ast.Name");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(scriptNode1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNull(functionNode3);
        org.junit.Assert.assertNull(nodeList9);
        org.junit.Assert.assertNotNull(symbolList10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
    }

    @Test
    public void test09978() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09978");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int2 = scriptNode1.getEndLineno();
        int int3 = scriptNode1.getBaseLineno();
        com.google.javascript.rhino.head.Node node4 = scriptNode1.getNext();
        scriptNode1.setLineno((-616130778));
        int int7 = scriptNode1.getEncodedSourceEnd();
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor8 = null;
        // The following exception was thrown during execution in test generation
        try {
            scriptNode1.visit(nodeVisitor8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNull(node4);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
    }

    @Test
    public void test09979() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09979");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 10);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode2 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode3 = functionNode2.getTop();
        functionNode2.setParens((int) (byte) 1, (int) (short) 1);
        functionNode2.setEncodedSourceStart((-1));
        functionNode2.setFunctionIsGetter();
        scope1.addChildToFront((com.google.javascript.rhino.head.Node) functionNode2);
        functionNode2.setRp(19);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int15 = scriptNode14.getEndLineno();
        int int16 = scriptNode14.getBaseLineno();
        com.google.javascript.rhino.head.ast.Jump jump19 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode21 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int22 = scriptNode21.getEndLineno();
        int int23 = scriptNode21.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList24 = scriptNode21.getChildScopes();
        jump19.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode21);
        java.lang.String str26 = scriptNode21.debugPrint();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode14, (com.google.javascript.rhino.head.ast.Scope) scriptNode21);
        com.google.javascript.rhino.head.ast.Scope scope28 = new com.google.javascript.rhino.head.ast.Scope();
        scriptNode21.target = scope28;
        java.lang.String str30 = functionNode2.toStringTree(scriptNode21);
        java.lang.String str32 = scriptNode21.toSource((int) (short) 10);
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap33 = scriptNode21.getSymbolTable();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode34 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int35 = functionNode34.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode36 = functionNode34.getTop();
        com.google.javascript.rhino.head.ast.Name name37 = null;
        functionNode34.setFunctionName(name37);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode39 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode40 = functionNode39.getTop();
        functionNode34.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode39);
        int int42 = functionNode39.getRp();
        java.lang.Object obj43 = functionNode39.getCompilerData();
        boolean boolean44 = strMap33.containsKey(obj43);
        com.google.javascript.rhino.head.ast.Symbol symbol46 = new com.google.javascript.rhino.head.ast.Symbol();
        symbol46.setIndex(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode50 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int51 = scriptNode50.getEndLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode53 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int54 = scriptNode53.getEndLineno();
        scriptNode50.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode53);
        com.google.javascript.rhino.head.ast.Comment comment56 = null;
        scriptNode50.setJsDocNode(comment56);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList58 = scriptNode50.getSymbols();
        symbol46.setContainingTable((com.google.javascript.rhino.head.ast.Scope) scriptNode50);
        com.google.javascript.rhino.head.ast.Symbol symbol60 = strMap33.putIfAbsent("{\n}\n", symbol46);
        java.util.Collection<com.google.javascript.rhino.head.ast.Symbol> symbolCollection61 = strMap33.values();
        strMap33.clear();
        com.google.javascript.rhino.head.ast.Symbol symbol64 = new com.google.javascript.rhino.head.ast.Symbol();
        java.lang.String str65 = symbol64.getName();
        com.google.javascript.rhino.head.Node node66 = symbol64.getNode();
        symbol64.setIndex(1);
        symbol64.setName("-1\tSCRIPT -1 1\n");
        com.google.javascript.rhino.head.ast.Scope scope71 = symbol64.getContainingTable();
        java.lang.String str72 = symbol64.toString();
        com.google.javascript.rhino.head.ast.Symbol symbol73 = strMap33.putIfAbsent("                                                                {\n                                                                }\n", symbol64);
        java.util.Set<java.lang.String> strSet74 = strMap33.keySet();
        org.junit.Assert.assertNotNull(scriptNode3);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNull(scopeList24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str26, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "                    {\n                    }\n" + "'", str32, "                    {\n                    }\n");
        org.junit.Assert.assertNotNull(strMap33);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertNotNull(scriptNode36);
        org.junit.Assert.assertNotNull(scriptNode40);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertNull(obj43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1));
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
        org.junit.Assert.assertNotNull(symbolList58);
        org.junit.Assert.assertNull(symbol60);
        org.junit.Assert.assertNotNull(symbolCollection61);
        org.junit.Assert.assertNull(str65);
        org.junit.Assert.assertNull(node66);
        org.junit.Assert.assertNull(scope71);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "Symbol (EOF) name=-1\tSCRIPT -1 1\n" + "'", str72, "Symbol (EOF) name=-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertNull(symbol73);
        org.junit.Assert.assertNotNull(strSet74);
    }

    @Test
    public void test09980() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09980");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode2 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int3 = functionNode2.getLp();
        functionNode2.setEncodedSource("");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode6 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int7 = functionNode6.getLp();
        functionNode6.setEncodedSource("");
        functionNode6.flattenSymbolTable(false);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode12 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int13 = functionNode12.getLp();
        com.google.javascript.rhino.head.Node node15 = new com.google.javascript.rhino.head.Node((-1), (com.google.javascript.rhino.head.Node) functionNode2, (com.google.javascript.rhino.head.Node) functionNode6, (com.google.javascript.rhino.head.Node) functionNode12, (int) '#');
        boolean boolean16 = functionNode12.isGenerator();
        int int17 = functionNode12.getFunctionType();
        com.google.javascript.rhino.head.Node node18 = functionNode12.getNext();
        functionNode12.setFunctionIsSetter();
        functionNode12.clearParentScope();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode21 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int22 = functionNode21.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode23 = functionNode21.getTop();
        com.google.javascript.rhino.head.ast.AstNode astNode24 = functionNode21.getBody();
        com.google.javascript.rhino.head.ast.Jump jump30 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump30.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump34 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump30, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode36 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int37 = scriptNode36.getEndLineno();
        int int38 = scriptNode36.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList39 = scriptNode36.getChildScopes();
        com.google.javascript.rhino.head.Node node40 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump30, (com.google.javascript.rhino.head.Node) scriptNode36);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList41 = scriptNode36.getChildScopes();
        com.google.javascript.rhino.head.ast.Jump jump42 = new com.google.javascript.rhino.head.ast.Jump(11, (com.google.javascript.rhino.head.Node) scriptNode36);
        functionNode21.setParent((com.google.javascript.rhino.head.ast.AstNode) scriptNode36);
        scriptNode36.setLength(20);
        functionNode12.addChildScope((com.google.javascript.rhino.head.ast.Scope) scriptNode36);
        com.google.javascript.rhino.head.ast.Scope scope49 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0, 23);
        com.google.javascript.rhino.head.Node node51 = scope49.setType((-14761645));
        com.google.javascript.rhino.head.ast.Jump jump55 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump55.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump59 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump55, 0);
        com.google.javascript.rhino.head.ast.Jump jump63 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump63.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump67 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump63, 0);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode68 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int69 = functionNode68.getLp();
        functionNode68.setEncodedSource("");
        functionNode68.flattenSymbolTable(false);
        jump55.addChildAfter((com.google.javascript.rhino.head.Node) jump63, (com.google.javascript.rhino.head.Node) functionNode68);
        com.google.javascript.rhino.head.Node node75 = functionNode68.target;
        boolean boolean76 = functionNode68.hasConsistentReturnUsage();
        com.google.javascript.rhino.head.ast.Name name77 = functionNode68.getFunctionName();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode78 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.Scope scope80 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 10);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode81 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode82 = functionNode81.getTop();
        functionNode81.setParens((int) (byte) 1, (int) (short) 1);
        functionNode81.setEncodedSourceStart((-1));
        functionNode81.setFunctionIsGetter();
        scope80.addChildToFront((com.google.javascript.rhino.head.Node) functionNode81);
        functionNode78.setBody((com.google.javascript.rhino.head.ast.AstNode) functionNode81);
        functionNode81.setRelative(0);
        functionNode68.setBody((com.google.javascript.rhino.head.ast.AstNode) functionNode81);
        com.google.javascript.rhino.head.Node node94 = new com.google.javascript.rhino.head.Node(9, (com.google.javascript.rhino.head.Node) functionNode12, node51, (com.google.javascript.rhino.head.Node) functionNode81);
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.ast.Jump jump95 = functionNode81.getLoop();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNull(node18);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNotNull(scriptNode23);
        org.junit.Assert.assertNull(astNode24);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNull(scopeList39);
        org.junit.Assert.assertNull(scopeList41);
        org.junit.Assert.assertNotNull(node51);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + (-1) + "'", int69 == (-1));
        org.junit.Assert.assertNull(node75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNull(name77);
        org.junit.Assert.assertNotNull(scriptNode82);
    }

    @Test
    public void test09981() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09981");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int3 = scriptNode2.getEndLineno();
        int int4 = scriptNode2.getBaseLineno();
        com.google.javascript.rhino.head.ast.Jump jump7 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode9 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int10 = scriptNode9.getEndLineno();
        int int11 = scriptNode9.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList12 = scriptNode9.getChildScopes();
        jump7.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode9);
        java.lang.String str14 = scriptNode9.debugPrint();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode2, (com.google.javascript.rhino.head.ast.Scope) scriptNode9);
        com.google.javascript.rhino.head.ast.AstNode astNode16 = scriptNode2.getParent();
        scriptNode2.setSourceName("                    /null/");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode19 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.Scope scope21 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 10);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode22 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode23 = functionNode22.getTop();
        functionNode22.setParens((int) (byte) 1, (int) (short) 1);
        functionNode22.setEncodedSourceStart((-1));
        functionNode22.setFunctionIsGetter();
        scope21.addChildToFront((com.google.javascript.rhino.head.Node) functionNode22);
        functionNode19.setBody((com.google.javascript.rhino.head.ast.AstNode) functionNode22);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode32 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode33 = functionNode32.getTop();
        functionNode32.setParens((int) (byte) 1, (int) (short) 1);
        functionNode32.setEncodedSourceStart((-1));
        java.util.List<com.google.javascript.rhino.head.Node> nodeList39 = functionNode32.getResumptionPoints();
        int int40 = functionNode32.getLp();
        functionNode19.setBody((com.google.javascript.rhino.head.ast.AstNode) functionNode32);
        com.google.javascript.rhino.head.Node node42 = functionNode32.getNext();
        scriptNode2.addChildScope((com.google.javascript.rhino.head.ast.Scope) functionNode32);
        com.google.javascript.rhino.head.ast.Jump jump45 = new com.google.javascript.rhino.head.ast.Jump(13, (com.google.javascript.rhino.head.Node) functionNode32, 22);
        com.google.javascript.rhino.head.Node node47 = jump45.setType((int) (short) 0);
        java.lang.String str48 = jump45.toString();
        // The following exception was thrown during execution in test generation
        try {
            jump45.setDouble((double) 1590262715);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: com.google.javascript.rhino.head.ast.Jump cannot be cast to com.google.javascript.rhino.head.ast.NumberLiteral");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNull(scopeList12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str14, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertNull(astNode16);
        org.junit.Assert.assertNotNull(scriptNode23);
        org.junit.Assert.assertNotNull(scriptNode33);
        org.junit.Assert.assertNull(nodeList39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 1 + "'", int40 == 1);
        org.junit.Assert.assertNull(node42);
        org.junit.Assert.assertNotNull(node47);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "0" + "'", str48, "0");
    }

    @Test
    public void test09982() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09982");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode0 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int1 = functionNode0.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = functionNode0.getTop();
        boolean boolean3 = functionNode0.hasSideEffects();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int6 = scriptNode5.getEndLineno();
        int int7 = scriptNode5.getBaseLineno();
        com.google.javascript.rhino.head.ast.Jump jump10 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode12 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int13 = scriptNode12.getEndLineno();
        int int14 = scriptNode12.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList15 = scriptNode12.getChildScopes();
        jump10.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode12);
        java.lang.String str17 = scriptNode12.debugPrint();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode5, (com.google.javascript.rhino.head.ast.Scope) scriptNode12);
        com.google.javascript.rhino.head.ast.Scope scope19 = new com.google.javascript.rhino.head.ast.Scope();
        scriptNode12.target = scope19;
        functionNode0.addChildScope(scope19);
        boolean boolean22 = functionNode0.hasConsistentReturnUsage();
        java.util.Map<com.google.javascript.rhino.head.Node, int[]> nodeMap23 = functionNode0.getLiveLocals();
        boolean boolean24 = functionNode0.isGetter();
        java.lang.Object obj26 = functionNode0.getProp((int) '#');
        com.google.javascript.rhino.head.Node node27 = functionNode0.getNext();
        com.google.javascript.rhino.head.ast.Scope scope29 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 10);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode30 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode31 = functionNode30.getTop();
        functionNode30.setParens((int) (byte) 1, (int) (short) 1);
        functionNode30.setEncodedSourceStart((-1));
        functionNode30.setFunctionIsGetter();
        scope29.addChildToFront((com.google.javascript.rhino.head.Node) functionNode30);
        functionNode30.setRp(19);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode42 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int43 = scriptNode42.getEndLineno();
        int int44 = scriptNode42.getBaseLineno();
        com.google.javascript.rhino.head.ast.Jump jump47 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode49 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int50 = scriptNode49.getEndLineno();
        int int51 = scriptNode49.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList52 = scriptNode49.getChildScopes();
        jump47.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode49);
        java.lang.String str54 = scriptNode49.debugPrint();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode42, (com.google.javascript.rhino.head.ast.Scope) scriptNode49);
        com.google.javascript.rhino.head.ast.Scope scope56 = new com.google.javascript.rhino.head.ast.Scope();
        scriptNode49.target = scope56;
        java.lang.String str58 = functionNode30.toStringTree(scriptNode49);
        java.lang.String str60 = scriptNode49.toSource((int) (short) 10);
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap61 = scriptNode49.getSymbolTable();
        int int62 = strMap61.size();
        functionNode0.setSymbolTable(strMap61);
        com.google.javascript.rhino.head.ast.Symbol symbol65 = functionNode0.getSymbol("              /null/");
        functionNode0.setParens(394394084, 136);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-1) + "'", int1 == (-1));
        org.junit.Assert.assertNotNull(scriptNode2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNull(scopeList15);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str17, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNull(nodeMap23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertNull(node27);
        org.junit.Assert.assertNotNull(scriptNode31);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1));
        org.junit.Assert.assertNull(scopeList52);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str54, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertNull(str58);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "                    {\n                    }\n" + "'", str60, "                    {\n                    }\n");
        org.junit.Assert.assertNotNull(strMap61);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 0 + "'", int62 == 0);
        org.junit.Assert.assertNull(symbol65);
    }

    @Test
    public void test09983() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09983");
        com.google.javascript.rhino.head.ast.Jump jump1 = new com.google.javascript.rhino.head.ast.Jump((int) (short) 0);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode2 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int3 = functionNode2.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode4 = functionNode2.getTop();
        com.google.javascript.rhino.head.ast.Name name5 = null;
        functionNode2.setFunctionName(name5);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode7 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode8 = functionNode7.getTop();
        functionNode2.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode7);
        functionNode7.setIsExpressionClosure(true);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode13 = new com.google.javascript.rhino.head.ast.FunctionNode((int) (byte) 100);
        int int14 = functionNode7.addFunction(functionNode13);
        int int15 = jump1.compareTo((com.google.javascript.rhino.head.ast.AstNode) functionNode13);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode17 = new com.google.javascript.rhino.head.ast.FunctionNode(0);
        com.google.javascript.rhino.head.ast.Jump jump23 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump23.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump27 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump23, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode29 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int30 = scriptNode29.getEndLineno();
        int int31 = scriptNode29.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList32 = scriptNode29.getChildScopes();
        com.google.javascript.rhino.head.Node node33 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump23, (com.google.javascript.rhino.head.Node) scriptNode29);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList34 = scriptNode29.getFunctions();
        functionNodeList34.clear();
        com.google.javascript.rhino.head.ast.Jump jump40 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump40.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump44 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump40, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode46 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int47 = scriptNode46.getEndLineno();
        int int48 = scriptNode46.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList49 = scriptNode46.getChildScopes();
        com.google.javascript.rhino.head.Node node50 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump40, (com.google.javascript.rhino.head.Node) scriptNode46);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList51 = scriptNode46.getFunctions();
        boolean boolean52 = functionNodeList34.removeAll((java.util.Collection<com.google.javascript.rhino.head.ast.FunctionNode>) functionNodeList51);
        functionNode17.putProp(20, (java.lang.Object) functionNodeList34);
        int int54 = functionNode13.addFunction(functionNode17);
        boolean boolean55 = functionNode17.isGenerator();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList56 = functionNode17.getChildScopes();
        int int57 = functionNode17.getPosition();
        com.google.javascript.rhino.head.ast.AstNode astNode58 = functionNode17.getBody();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode61 = new com.google.javascript.rhino.head.ast.FunctionNode(0);
        int int62 = functionNode61.getBaseLineno();
        boolean boolean63 = functionNode61.isGetter();
        com.google.javascript.rhino.head.ast.RegExpLiteral regExpLiteral65 = new com.google.javascript.rhino.head.ast.RegExpLiteral((int) (short) 1);
        regExpLiteral65.setFlags("-1\tSCRIPT -1 1\n");
        java.lang.String str68 = regExpLiteral65.getValue();
        regExpLiteral65.setFlags("52");
        functionNode61.addChildrenToFront((com.google.javascript.rhino.head.Node) regExpLiteral65);
        boolean boolean72 = functionNode61.isGetterOrSetter();
        com.google.javascript.rhino.head.ast.Jump jump75 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode77 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int78 = scriptNode77.getEndLineno();
        int int79 = scriptNode77.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList80 = scriptNode77.getChildScopes();
        jump75.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode77);
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor82 = scriptNode77.iterator();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode83 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int84 = functionNode83.getLp();
        functionNode83.setEncodedSource("");
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode77, (com.google.javascript.rhino.head.ast.Scope) functionNode83);
        com.google.javascript.rhino.head.Node node88 = new com.google.javascript.rhino.head.Node((int) (byte) 1, (com.google.javascript.rhino.head.Node) functionNode61, (com.google.javascript.rhino.head.Node) scriptNode77);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList89 = functionNode61.getChildScopes();
        // The following exception was thrown during execution in test generation
        try {
            astNode58.addChildToBack((com.google.javascript.rhino.head.Node) functionNode61);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(scriptNode4);
        org.junit.Assert.assertNotNull(scriptNode8);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNull(scopeList32);
        org.junit.Assert.assertNotNull(functionNodeList34);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
        org.junit.Assert.assertNull(scopeList49);
        org.junit.Assert.assertNotNull(functionNodeList51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNull(scopeList56);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 0 + "'", int57 == 0);
        org.junit.Assert.assertNull(astNode58);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + (-1) + "'", int62 == (-1));
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNull(str68);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + (-1) + "'", int78 == (-1));
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + (-1) + "'", int79 == (-1));
        org.junit.Assert.assertNull(scopeList80);
        org.junit.Assert.assertNotNull(nodeItor82);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + (-1) + "'", int84 == (-1));
        org.junit.Assert.assertNull(scopeList89);
    }

    @Test
    public void test09984() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09984");
        com.google.javascript.rhino.head.Node node1 = com.google.javascript.rhino.head.Node.newString("-22\tSCRIPT -22 1\n");
        org.junit.Assert.assertNotNull(node1);
    }

    @Test
    public void test09985() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09985");
        com.google.javascript.rhino.head.ast.Jump jump2 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode4 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int5 = scriptNode4.getEndLineno();
        int int6 = scriptNode4.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList7 = scriptNode4.getChildScopes();
        jump2.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode4);
        java.lang.String str9 = scriptNode4.debugPrint();
        boolean boolean10 = scriptNode4.hasSideEffects();
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList11 = scriptNode4.getFunctions();
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNull(scopeList7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str9, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(functionNodeList11);
    }

    @Test
    public void test09986() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09986");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode0 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int1 = functionNode0.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = functionNode0.getTop();
        boolean boolean3 = functionNode0.hasSideEffects();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int6 = scriptNode5.getEndLineno();
        int int7 = scriptNode5.getBaseLineno();
        com.google.javascript.rhino.head.ast.Jump jump10 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode12 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int13 = scriptNode12.getEndLineno();
        int int14 = scriptNode12.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList15 = scriptNode12.getChildScopes();
        jump10.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode12);
        java.lang.String str17 = scriptNode12.debugPrint();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode5, (com.google.javascript.rhino.head.ast.Scope) scriptNode12);
        com.google.javascript.rhino.head.ast.Scope scope19 = new com.google.javascript.rhino.head.ast.Scope();
        scriptNode12.target = scope19;
        functionNode0.addChildScope(scope19);
        boolean boolean22 = functionNode0.hasConsistentReturnUsage();
        java.lang.String str23 = functionNode0.getNextTempName();
        com.google.javascript.rhino.head.ast.RegExpLiteral regExpLiteral26 = new com.google.javascript.rhino.head.ast.RegExpLiteral((int) (short) 1);
        java.lang.String str28 = regExpLiteral26.toSource((int) (byte) 10);
        regExpLiteral26.setFlags("-1\tSCRIPT -1 1\n");
        java.lang.String str32 = regExpLiteral26.toSource(100);
        com.google.javascript.rhino.head.ast.Jump jump34 = new com.google.javascript.rhino.head.ast.Jump(109, (com.google.javascript.rhino.head.Node) regExpLiteral26, 6);
        int int35 = jump34.getLineno();
        // The following exception was thrown during execution in test generation
        try {
            functionNode0.setLoop(jump34);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-1) + "'", int1 == (-1));
        org.junit.Assert.assertNotNull(scriptNode2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNull(scopeList15);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str17, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "$0" + "'", str23, "$0");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "                    /null/" + "'", str28, "                    /null/");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "                                                                                                                                                                                                        /null/-1\tSCRIPT -1 1\n" + "'", str32, "                                                                                                                                                                                                        /null/-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 6 + "'", int35 == 6);
    }

    @Test
    public void test09987() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09987");
        com.google.javascript.rhino.head.ast.Jump jump2 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode4 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int5 = scriptNode4.getEndLineno();
        int int6 = scriptNode4.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList7 = scriptNode4.getChildScopes();
        jump2.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode4);
        java.lang.String str9 = scriptNode4.debugPrint();
        java.lang.String str10 = scriptNode4.getNextTempName();
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor11 = scriptNode4.iterator();
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNull(scopeList7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str9, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "$0" + "'", str10, "$0");
        org.junit.Assert.assertNotNull(nodeItor11);
    }

    @Test
    public void test09988() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09988");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode0 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int1 = functionNode0.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = functionNode0.getTop();
        com.google.javascript.rhino.head.ast.Name name3 = null;
        functionNode0.setFunctionName(name3);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode5 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = functionNode5.getTop();
        functionNode0.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode5);
        int int8 = functionNode5.getRp();
        int int9 = functionNode5.getFunctionType();
        boolean boolean10 = functionNode5.requiresActivation();
        boolean boolean11 = functionNode5.isGenerator();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator12 = functionNode5.new NodeIterator();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode13 = functionNode5.getTop();
        java.lang.Class<?> wildcardClass14 = functionNode5.getClass();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-1) + "'", int1 == (-1));
        org.junit.Assert.assertNotNull(scriptNode2);
        org.junit.Assert.assertNotNull(scriptNode6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(scriptNode13);
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test09989() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09989");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode0 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int1 = functionNode0.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = functionNode0.getTop();
        com.google.javascript.rhino.head.ast.Name name3 = null;
        functionNode0.setFunctionName(name3);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode5 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int6 = functionNode5.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode8 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        java.lang.String str9 = functionNode5.toStringTree(scriptNode8);
        functionNode5.setFunctionIsGetter();
        int int11 = functionNode0.addFunction(functionNode5);
        boolean boolean12 = functionNode5.hasSideEffects();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode13 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int14 = functionNode13.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode15 = functionNode13.getTop();
        functionNode5.setBody((com.google.javascript.rhino.head.ast.AstNode) scriptNode15);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode18 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int19 = scriptNode18.getEndLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode21 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int22 = scriptNode21.getEndLineno();
        scriptNode18.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode21);
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator24 = scriptNode18.new NodeIterator();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode15, (com.google.javascript.rhino.head.ast.Scope) scriptNode18);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList26 = scriptNode18.getFunctions();
        java.lang.Object obj27 = null;
        int int28 = functionNodeList26.lastIndexOf(obj27);
        java.lang.Object obj29 = null;
        int int30 = functionNodeList26.indexOf(obj29);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-1) + "'", int1 == (-1));
        org.junit.Assert.assertNotNull(scriptNode2);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNotNull(scriptNode15);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNotNull(functionNodeList26);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
    }

    @Test
    public void test09990() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09990");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode0 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int1 = functionNode0.getLp();
        functionNode0.setLp((int) (short) 1);
        int int6 = functionNode0.getIntProp(4, 26);
        functionNode0.setFunctionIsGetter();
        boolean boolean8 = functionNode0.isGetterOrSetter();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList9 = functionNode0.getSymbols();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str11 = functionNode0.getParamOrVarName(35);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-1) + "'", int1 == (-1));
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 26 + "'", int6 == 26);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(symbolList9);
    }

    @Test
    public void test09991() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09991");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode0 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int1 = functionNode0.getLp();
        functionNode0.setEncodedSource("");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode4 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.Scope scope6 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 10);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode7 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode8 = functionNode7.getTop();
        functionNode7.setParens((int) (byte) 1, (int) (short) 1);
        functionNode7.setEncodedSourceStart((-1));
        functionNode7.setFunctionIsGetter();
        scope6.addChildToFront((com.google.javascript.rhino.head.Node) functionNode7);
        functionNode4.setBody((com.google.javascript.rhino.head.ast.AstNode) functionNode7);
        int int17 = functionNode0.addFunction(functionNode4);
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList18 = functionNode4.getStatements();
        com.google.javascript.rhino.head.ast.AstNode astNode19 = functionNode4.getMemberExprNode();
        functionNode4.setRequiresActivation();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-1) + "'", int1 == (-1));
        org.junit.Assert.assertNotNull(scriptNode8);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(astNodeList18);
        org.junit.Assert.assertNull(astNode19);
    }

    @Test
    public void test09992() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09992");
        com.google.javascript.rhino.head.ast.Name name1 = null;
        com.google.javascript.rhino.head.ast.FunctionNode functionNode2 = new com.google.javascript.rhino.head.ast.FunctionNode(1, name1);
        boolean boolean3 = functionNode2.isGetterOrSetter();
        int int4 = functionNode2.getEncodedSourceEnd();
        boolean boolean5 = functionNode2.requiresActivation();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode8 = new com.google.javascript.rhino.head.ast.FunctionNode(0);
        int int9 = functionNode8.getBaseLineno();
        functionNode8.setSourceName("                                                                                                                                                                                                        /null/");
        functionNode8.setRequiresActivation();
        functionNode8.removeProp(0);
        functionNode2.putProp(9, (java.lang.Object) 0);
        com.google.javascript.rhino.head.ast.Symbol symbol17 = functionNode2.getSymbol("                                      ");
        int int18 = functionNode2.getPosition();
        com.google.javascript.rhino.head.ast.Symbol symbol20 = functionNode2.getSymbol("                                                                                                                                                                                                          /null/");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNull(symbol17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertNull(symbol20);
    }

    @Test
    public void test09993() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09993");
        com.google.javascript.rhino.head.ast.Jump jump3 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump3.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump7 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump3, 0);
        com.google.javascript.rhino.head.ast.Jump jump11 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump11.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump15 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump11, 0);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode16 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int17 = functionNode16.getLp();
        functionNode16.setEncodedSource("");
        functionNode16.flattenSymbolTable(false);
        jump3.addChildAfter((com.google.javascript.rhino.head.Node) jump11, (com.google.javascript.rhino.head.Node) functionNode16);
        int int23 = functionNode16.getPosition();
        java.util.Map<com.google.javascript.rhino.head.Node, int[]> nodeMap24 = functionNode16.getLiveLocals();
        com.google.javascript.rhino.head.ast.Scope scope25 = functionNode16.getEnclosingScope();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode26 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode27 = functionNode26.getTop();
        com.google.javascript.rhino.head.ast.Name name28 = null;
        functionNode26.setFunctionName(name28);
        boolean boolean30 = functionNode26.requiresActivation();
        com.google.javascript.rhino.head.ast.RegExpLiteral regExpLiteral32 = new com.google.javascript.rhino.head.ast.RegExpLiteral((int) (short) 1);
        java.lang.String str34 = regExpLiteral32.toSource((int) (byte) 10);
        regExpLiteral32.setFlags("-1\tSCRIPT -1 1\n");
        regExpLiteral32.removeProp(8);
        java.lang.String str39 = regExpLiteral32.getValue();
        regExpLiteral32.setLineno(10);
        regExpLiteral32.removeChildren();
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor43 = regExpLiteral32.iterator();
        functionNode26.addRegExp(regExpLiteral32);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode45 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int46 = functionNode45.getLp();
        functionNode45.setEncodedSource("");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode49 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.Scope scope51 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 10);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode52 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode53 = functionNode52.getTop();
        functionNode52.setParens((int) (byte) 1, (int) (short) 1);
        functionNode52.setEncodedSourceStart((-1));
        functionNode52.setFunctionIsGetter();
        scope51.addChildToFront((com.google.javascript.rhino.head.Node) functionNode52);
        functionNode49.setBody((com.google.javascript.rhino.head.ast.AstNode) functionNode52);
        int int62 = functionNode45.addFunction(functionNode49);
        functionNode26.addChildToBack((com.google.javascript.rhino.head.Node) functionNode45);
        int[] intArray68 = new int[] { 6, 2, 48, 25 };
        functionNode16.addLiveLocals((com.google.javascript.rhino.head.Node) functionNode45, intArray68);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode70 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int71 = functionNode70.getLp();
        functionNode70.setEncodedSource("");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode74 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int75 = functionNode74.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode76 = functionNode74.getTop();
        com.google.javascript.rhino.head.ast.Name name77 = null;
        functionNode74.setFunctionName(name77);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode79 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode80 = functionNode79.getTop();
        functionNode74.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode79);
        int int82 = functionNode79.getRp();
        int int83 = functionNode79.getFunctionType();
        functionNode70.addParam((com.google.javascript.rhino.head.ast.AstNode) functionNode79);
        boolean boolean85 = functionNode70.isGetterOrSetter();
        functionNode70.clearParentScope();
        int int87 = functionNode16.compareTo((com.google.javascript.rhino.head.ast.AstNode) functionNode70);
        com.google.javascript.rhino.head.ast.Name name88 = null;
        functionNode16.setFunctionName(name88);
        functionNode16.setIsGenerator();
        boolean boolean91 = functionNode16.isExpressionClosure();
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNull(nodeMap24);
        org.junit.Assert.assertNull(scope25);
        org.junit.Assert.assertNotNull(scriptNode27);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "                    /null/" + "'", str34, "                    /null/");
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNotNull(nodeItor43);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertNotNull(scriptNode53);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 0 + "'", int62 == 0);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[6, 2, 48, 25]");
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + (-1) + "'", int71 == (-1));
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + (-1) + "'", int75 == (-1));
        org.junit.Assert.assertNotNull(scriptNode76);
        org.junit.Assert.assertNotNull(scriptNode80);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + (-1) + "'", int82 == (-1));
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 0 + "'", int83 == 0);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
// flaky:         org.junit.Assert.assertTrue("'" + int87 + "' != '" + (-1201814309) + "'", int87 == (-1201814309));
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
    }

    @Test
    public void test09994() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09994");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode1 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = functionNode1.getTop();
        functionNode1.setParens((int) (byte) 1, (int) (short) 1);
        com.google.javascript.rhino.head.Node node6 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) functionNode1);
        int int7 = functionNode1.getEncodedSourceEnd();
        com.google.javascript.rhino.head.ast.Jump jump10 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode12 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int13 = scriptNode12.getEndLineno();
        int int14 = scriptNode12.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList15 = scriptNode12.getChildScopes();
        jump10.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode12);
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor17 = scriptNode12.iterator();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode18 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int19 = functionNode18.getLp();
        functionNode18.setEncodedSource("");
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode12, (com.google.javascript.rhino.head.ast.Scope) functionNode18);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode23 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode24 = functionNode23.getTop();
        functionNode23.setParens((int) (byte) 1, (int) (short) 1);
        functionNode23.setEncodedSourceStart((-1));
        java.util.List<com.google.javascript.rhino.head.Node> nodeList30 = functionNode23.getResumptionPoints();
        com.google.javascript.rhino.head.ast.Scope scope32 = functionNode23.getDefiningScope("hi!");
        boolean boolean33 = functionNode23.isGetterOrSetter();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode34 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int35 = functionNode34.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode36 = functionNode34.getTop();
        com.google.javascript.rhino.head.ast.Name name37 = null;
        functionNode34.setFunctionName(name37);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode39 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode40 = functionNode39.getTop();
        functionNode34.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode39);
        int int42 = functionNode39.getRp();
        int int43 = functionNode39.getFunctionType();
        int int44 = functionNode23.addFunction(functionNode39);
        functionNode18.setCompilerData((java.lang.Object) functionNode39);
        functionNode18.setFunctionType(136);
        int int48 = functionNode18.depth();
        functionNode18.setEncodedSourceBounds(109, (int) '4');
        functionNode1.setParentScope((com.google.javascript.rhino.head.ast.Scope) functionNode18);
        boolean boolean53 = functionNode1.isSetter();
        int int54 = functionNode1.getFunctionCount();
        org.junit.Assert.assertNotNull(scriptNode2);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNull(scopeList15);
        org.junit.Assert.assertNotNull(nodeItor17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(scriptNode24);
        org.junit.Assert.assertNull(nodeList30);
        org.junit.Assert.assertNull(scope32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertNotNull(scriptNode36);
        org.junit.Assert.assertNotNull(scriptNode40);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
    }

    @Test
    public void test09995() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09995");
        com.google.javascript.rhino.head.ast.Jump jump4 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump4.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump8 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump4, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int11 = scriptNode10.getEndLineno();
        int int12 = scriptNode10.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList13 = scriptNode10.getChildScopes();
        com.google.javascript.rhino.head.Node node14 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump4, (com.google.javascript.rhino.head.Node) scriptNode10);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList15 = scriptNode10.getFunctions();
        int int16 = functionNodeList15.size();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator17 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        functionNodeList15.sort((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator17);
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator19 = positionComparator17.reversed();
        com.google.javascript.rhino.head.ast.Jump jump23 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump23.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump27 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump23, 0);
        com.google.javascript.rhino.head.ast.Jump jump31 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump31.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump35 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump31, 0);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode36 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int37 = functionNode36.getLp();
        functionNode36.setEncodedSource("");
        functionNode36.flattenSymbolTable(false);
        jump23.addChildAfter((com.google.javascript.rhino.head.Node) jump31, (com.google.javascript.rhino.head.Node) functionNode36);
        int int43 = functionNode36.getPosition();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode45 = new com.google.javascript.rhino.head.ast.FunctionNode(0);
        boolean boolean46 = functionNode45.isExpressionClosure();
        int int47 = positionComparator17.compare((com.google.javascript.rhino.head.ast.AstNode) functionNode36, (com.google.javascript.rhino.head.ast.AstNode) functionNode45);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode48 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode49 = functionNode48.getTop();
        functionNode48.setParens((int) (byte) 1, (int) (short) 1);
        functionNode48.setEncodedSourceStart((-1));
        java.util.List<com.google.javascript.rhino.head.Node> nodeList55 = functionNode48.getResumptionPoints();
        com.google.javascript.rhino.head.ast.Scope scope57 = functionNode48.getDefiningScope("hi!");
        boolean boolean58 = functionNode48.isGetterOrSetter();
        com.google.javascript.rhino.head.ast.Scope scope60 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 10);
        int[] intArray67 = new int[] { 25, 17, (short) 0, 20, 19, (byte) 1 };
        functionNode48.addLiveLocals((com.google.javascript.rhino.head.Node) scope60, intArray67);
        com.google.javascript.rhino.head.Node node70 = functionNode48.setType(100);
        functionNode48.setIsGenerator();
        functionNode45.setCompilerData((java.lang.Object) functionNode48);
        functionNode48.clearParentScope();
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNull(scopeList13);
        org.junit.Assert.assertNotNull(functionNodeList15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(astNodeComparator19);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertNotNull(scriptNode49);
        org.junit.Assert.assertNull(nodeList55);
        org.junit.Assert.assertNull(scope57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[25, 17, 0, 20, 19, 1]");
        org.junit.Assert.assertNotNull(node70);
    }

    @Test
    public void test09996() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09996");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 10);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode2 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode3 = functionNode2.getTop();
        functionNode2.setParens((int) (byte) 1, (int) (short) 1);
        functionNode2.setEncodedSourceStart((-1));
        functionNode2.setFunctionIsGetter();
        scope1.addChildToFront((com.google.javascript.rhino.head.Node) functionNode2);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode11 = functionNode2.getEnclosingFunction();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode12 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode13 = functionNode12.getTop();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode15 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int16 = functionNode15.getLp();
        functionNode15.setEncodedSource("");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode19 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int20 = functionNode19.getLp();
        functionNode19.setEncodedSource("");
        functionNode19.flattenSymbolTable(false);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode25 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int26 = functionNode25.getLp();
        com.google.javascript.rhino.head.Node node28 = new com.google.javascript.rhino.head.Node((-1), (com.google.javascript.rhino.head.Node) functionNode15, (com.google.javascript.rhino.head.Node) functionNode19, (com.google.javascript.rhino.head.Node) functionNode25, (int) '#');
        com.google.javascript.rhino.head.ast.AstNode astNode29 = functionNode15.getBody();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode30 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int31 = functionNode30.getLp();
        functionNode30.setEncodedSource("");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode34 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int35 = functionNode34.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode36 = functionNode34.getTop();
        com.google.javascript.rhino.head.ast.Name name37 = null;
        functionNode34.setFunctionName(name37);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode39 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode40 = functionNode39.getTop();
        functionNode34.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode39);
        int int42 = functionNode39.getRp();
        int int43 = functionNode39.getFunctionType();
        functionNode30.addParam((com.google.javascript.rhino.head.ast.AstNode) functionNode39);
        com.google.javascript.rhino.head.ast.Scope scope45 = functionNode39.getEnclosingScope();
        functionNode15.setBody((com.google.javascript.rhino.head.ast.AstNode) functionNode39);
        int int47 = functionNode12.addFunction(functionNode15);
        java.util.List<com.google.javascript.rhino.head.Node> nodeList48 = functionNode12.getResumptionPoints();
        boolean boolean49 = functionNode12.hasSideEffects();
        functionNode2.addResumptionPoint((com.google.javascript.rhino.head.Node) functionNode12);
        int int51 = functionNode2.getLength();
        int int52 = functionNode2.getRp();
        functionNode2.setEncodedSource("+");
        java.lang.String str55 = functionNode2.getJsDoc();
        org.junit.Assert.assertNotNull(scriptNode3);
        org.junit.Assert.assertNull(functionNode11);
        org.junit.Assert.assertNotNull(scriptNode13);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNull(astNode29);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertNotNull(scriptNode36);
        org.junit.Assert.assertNotNull(scriptNode40);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertNotNull(scope45);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertNull(nodeList48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 1 + "'", int51 == 1);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 1 + "'", int52 == 1);
        org.junit.Assert.assertNull(str55);
    }

    @Test
    public void test09997() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09997");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 10);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode2 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode3 = functionNode2.getTop();
        functionNode2.setParens((int) (byte) 1, (int) (short) 1);
        functionNode2.setEncodedSourceStart((-1));
        functionNode2.setFunctionIsGetter();
        scope1.addChildToFront((com.google.javascript.rhino.head.Node) functionNode2);
        functionNode2.setRp(19);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int15 = scriptNode14.getEndLineno();
        int int16 = scriptNode14.getBaseLineno();
        com.google.javascript.rhino.head.ast.Jump jump19 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode21 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int22 = scriptNode21.getEndLineno();
        int int23 = scriptNode21.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList24 = scriptNode21.getChildScopes();
        jump19.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode21);
        java.lang.String str26 = scriptNode21.debugPrint();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode14, (com.google.javascript.rhino.head.ast.Scope) scriptNode21);
        com.google.javascript.rhino.head.ast.Scope scope28 = new com.google.javascript.rhino.head.ast.Scope();
        scriptNode21.target = scope28;
        java.lang.String str30 = functionNode2.toStringTree(scriptNode21);
        java.lang.String str32 = scriptNode21.toSource((int) (short) 10);
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap33 = scriptNode21.getSymbolTable();
        int int34 = strMap33.size();
        java.lang.Object obj35 = null;
        java.lang.Object obj36 = null;
        boolean boolean37 = strMap33.remove(obj35, obj36);
        com.google.javascript.rhino.head.ast.Symbol symbol39 = new com.google.javascript.rhino.head.ast.Symbol();
        java.lang.String str40 = symbol39.getName();
        com.google.javascript.rhino.head.Node node41 = symbol39.getNode();
        symbol39.setIndex(1);
        java.lang.String str44 = symbol39.getName();
        com.google.javascript.rhino.head.ast.Symbol symbol45 = null;
        boolean boolean46 = strMap33.replace("    109", symbol39, symbol45);
        com.google.javascript.rhino.head.ast.Symbol symbol47 = new com.google.javascript.rhino.head.ast.Symbol();
        com.google.javascript.rhino.head.Node node48 = symbol47.getNode();
        boolean boolean49 = strMap33.containsValue((java.lang.Object) symbol47);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode50 = new com.google.javascript.rhino.head.ast.FunctionNode();
        functionNode50.setFunctionIsGetter();
        functionNode50.setFunctionType(7);
        boolean boolean54 = strMap33.equals((java.lang.Object) 7);
        com.google.javascript.rhino.head.ast.Symbol symbol56 = new com.google.javascript.rhino.head.ast.Symbol();
        com.google.javascript.rhino.head.Node node57 = symbol56.getNode();
        com.google.javascript.rhino.head.Node node58 = symbol56.getNode();
        symbol56.setIndex((-330954035));
        com.google.javascript.rhino.head.ast.Symbol symbol61 = strMap33.replace("/null/EOF", symbol56);
        java.util.Set<java.lang.String> strSet62 = strMap33.keySet();
        org.junit.Assert.assertNotNull(scriptNode3);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNull(scopeList24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str26, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "                    {\n                    }\n" + "'", str32, "                    {\n                    }\n");
        org.junit.Assert.assertNotNull(strMap33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNull(node41);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNull(node48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNull(node57);
        org.junit.Assert.assertNull(node58);
        org.junit.Assert.assertNull(symbol61);
        org.junit.Assert.assertNotNull(strSet62);
    }

    @Test
    public void test09998() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09998");
        com.google.javascript.rhino.head.ast.Jump jump1 = new com.google.javascript.rhino.head.ast.Jump((-1288016238));
    }

    @Test
    public void test09999() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09999");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode0 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int1 = functionNode0.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = functionNode0.getTop();
        com.google.javascript.rhino.head.ast.Name name3 = null;
        functionNode0.setFunctionName(name3);
        functionNode0.setIsGenerator();
        java.lang.String str6 = functionNode0.getEncodedSource();
        functionNode0.setFunctionIsGetter();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-1) + "'", int1 == (-1));
        org.junit.Assert.assertNotNull(scriptNode2);
        org.junit.Assert.assertNull(str6);
    }

    @Test
    public void test10000() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test10000");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode2 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int3 = functionNode2.getLp();
        functionNode2.setLp((int) (short) 1);
        int int8 = functionNode2.getIntProp(4, 26);
        com.google.javascript.rhino.head.ast.Jump jump9 = new com.google.javascript.rhino.head.ast.Jump(3, (com.google.javascript.rhino.head.Node) functionNode2);
        com.google.javascript.rhino.head.Node node10 = new com.google.javascript.rhino.head.Node((int) '4', (com.google.javascript.rhino.head.Node) functionNode2);
        functionNode2.setRequiresActivation();
        com.google.javascript.rhino.head.Node node13 = functionNode2.setType(9);
        functionNode2.setFunctionIsGetter();
        boolean boolean15 = functionNode2.isSetter();
        int int16 = functionNode2.getRp();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode17 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int18 = functionNode17.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode19 = functionNode17.getTop();
        boolean boolean20 = functionNode17.hasSideEffects();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode22 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int23 = scriptNode22.getEndLineno();
        int int24 = scriptNode22.getBaseLineno();
        com.google.javascript.rhino.head.ast.Jump jump27 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode29 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int30 = scriptNode29.getEndLineno();
        int int31 = scriptNode29.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList32 = scriptNode29.getChildScopes();
        jump27.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode29);
        java.lang.String str34 = scriptNode29.debugPrint();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode22, (com.google.javascript.rhino.head.ast.Scope) scriptNode29);
        com.google.javascript.rhino.head.ast.Scope scope36 = new com.google.javascript.rhino.head.ast.Scope();
        scriptNode29.target = scope36;
        functionNode17.addChildScope(scope36);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode39 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int40 = functionNode39.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode41 = functionNode39.getTop();
        com.google.javascript.rhino.head.ast.Name name42 = null;
        functionNode39.setFunctionName(name42);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode44 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode45 = functionNode44.getTop();
        functionNode39.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode44);
        com.google.javascript.rhino.head.ast.Scope scope49 = new com.google.javascript.rhino.head.ast.Scope((int) (short) -1, 0);
        functionNode39.replaceWith(scope49);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode51 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int52 = functionNode51.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode53 = functionNode51.getTop();
        com.google.javascript.rhino.head.ast.Name name54 = null;
        functionNode51.setFunctionName(name54);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode56 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode57 = functionNode56.getTop();
        functionNode51.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode56);
        int int59 = functionNode39.addFunction(functionNode51);
        int int60 = functionNode17.addFunction(functionNode51);
        com.google.javascript.rhino.head.ast.RegExpLiteral regExpLiteral62 = new com.google.javascript.rhino.head.ast.RegExpLiteral((int) (short) 1);
        java.lang.String str64 = regExpLiteral62.toSource((int) (byte) 10);
        functionNode17.addRegExp(regExpLiteral62);
        regExpLiteral62.setFlags("                                            109");
        functionNode2.addRegExp(regExpLiteral62);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 26 + "'", int8 == 26);
        org.junit.Assert.assertNotNull(node13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNotNull(scriptNode19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNull(scopeList32);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str34, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertNotNull(scriptNode41);
        org.junit.Assert.assertNotNull(scriptNode45);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertNotNull(scriptNode53);
        org.junit.Assert.assertNotNull(scriptNode57);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 0 + "'", int60 == 0);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "                    /null/" + "'", str64, "                    /null/");
    }
}
