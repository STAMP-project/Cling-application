import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest20 {

    public static boolean debug = false;

    @Test
    public void test10001() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10001");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode0 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int1 = functionNode0.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode3 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        java.lang.String str4 = functionNode0.toStringTree(scriptNode3);
        com.google.javascript.rhino.head.ast.Scope scope6 = scriptNode3.getDefiningScope("");
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList7 = scriptNode3.getSymbols();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode9 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int10 = scriptNode9.getEndLineno();
        int int11 = scriptNode9.getBaseLineno();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode3, (com.google.javascript.rhino.head.ast.Scope) scriptNode9);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode13 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = functionNode13.getTop();
        functionNode13.setParens((int) (byte) 1, (int) (short) 1);
        functionNode13.setEncodedSourceStart((-1));
        java.util.List<com.google.javascript.rhino.head.Node> nodeList20 = functionNode13.getResumptionPoints();
        com.google.javascript.rhino.head.ast.Scope scope22 = functionNode13.getDefiningScope("hi!");
        boolean boolean23 = functionNode13.isGetterOrSetter();
        scriptNode9.setParent((com.google.javascript.rhino.head.ast.AstNode) functionNode13);
        functionNode13.setBounds(1186675070, 830992929);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-1) + "'", int1 == (-1));
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(scope6);
        org.junit.Assert.assertNotNull(symbolList7);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(scriptNode14);
        org.junit.Assert.assertNull(nodeList20);
        org.junit.Assert.assertNull(scope22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
    }

    @Test
    public void test10002() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10002");
        com.google.javascript.rhino.head.ast.Jump jump2 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode4 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int5 = scriptNode4.getEndLineno();
        int int6 = scriptNode4.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList7 = scriptNode4.getChildScopes();
        jump2.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode4);
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor9 = scriptNode4.iterator();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode10 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int11 = functionNode10.getLp();
        functionNode10.setEncodedSource("");
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode4, (com.google.javascript.rhino.head.ast.Scope) functionNode10);
        functionNode10.setLineno(32);
        int int17 = functionNode10.getEncodedSourceStart();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator18 = functionNode10.spliterator();
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNull(scopeList7);
        org.junit.Assert.assertNotNull(nodeItor9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNotNull(nodeSpliterator18);
    }

    @Test
    public void test10003() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10003");
        com.google.javascript.rhino.head.ast.Name name1 = null;
        com.google.javascript.rhino.head.ast.FunctionNode functionNode2 = new com.google.javascript.rhino.head.ast.FunctionNode(613356588, name1);
        int int3 = functionNode2.getLp();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
    }

    @Test
    public void test10004() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10004");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode0 = new com.google.javascript.rhino.head.ast.FunctionNode();
        functionNode0.setFunctionIsGetter();
        // The following exception was thrown during execution in test generation
        try {
            functionNode0.resetTargets();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
    }

    @Test
    public void test10005() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10005");
        com.google.javascript.rhino.head.Node node2 = com.google.javascript.rhino.head.Node.newString((int) (short) 100, "                                                                                                                                                                                                                          ");
        org.junit.Assert.assertNotNull(node2);
    }

    @Test
    public void test10006() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10006");
        com.google.javascript.rhino.head.ast.Jump jump4 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump4.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump8 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump4, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int11 = scriptNode10.getEndLineno();
        int int12 = scriptNode10.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList13 = scriptNode10.getChildScopes();
        com.google.javascript.rhino.head.Node node14 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump4, (com.google.javascript.rhino.head.Node) scriptNode10);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList15 = scriptNode10.getFunctions();
        functionNodeList15.clear();
        functionNodeList15.clear();
        java.util.Iterator<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeItor18 = functionNodeList15.iterator();
        java.util.stream.Stream<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeStream19 = functionNodeList15.parallelStream();
        boolean[] booleanArray20 = new boolean[] {};
        boolean[] booleanArray21 = new boolean[] {};
        boolean[] booleanArray22 = new boolean[] {};
        boolean[] booleanArray23 = new boolean[] {};
        boolean[] booleanArray24 = new boolean[] {};
        boolean[][] booleanArray25 = new boolean[][] { booleanArray20, booleanArray21, booleanArray22, booleanArray23, booleanArray24 };
        boolean[][] booleanArray26 = functionNodeList15.toArray(booleanArray25);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNull(scopeList13);
        org.junit.Assert.assertNotNull(functionNodeList15);
        org.junit.Assert.assertNotNull(functionNodeItor18);
        org.junit.Assert.assertNotNull(functionNodeStream19);
        org.junit.Assert.assertNotNull(booleanArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray20), "[]");
        org.junit.Assert.assertNotNull(booleanArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray21), "[]");
        org.junit.Assert.assertNotNull(booleanArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray22), "[]");
        org.junit.Assert.assertNotNull(booleanArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray23), "[]");
        org.junit.Assert.assertNotNull(booleanArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray24), "[]");
        org.junit.Assert.assertNotNull(booleanArray25);
        org.junit.Assert.assertNotNull(booleanArray26);
    }

    @Test
    public void test10007() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10007");
        com.google.javascript.rhino.head.ast.Jump jump1 = new com.google.javascript.rhino.head.ast.Jump((int) (short) 0);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode2 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int3 = functionNode2.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode4 = functionNode2.getTop();
        com.google.javascript.rhino.head.ast.Name name5 = null;
        functionNode2.setFunctionName(name5);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode7 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode8 = functionNode7.getTop();
        functionNode2.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode7);
        functionNode7.setIsExpressionClosure(true);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode13 = new com.google.javascript.rhino.head.ast.FunctionNode((int) (byte) 100);
        int int14 = functionNode7.addFunction(functionNode13);
        int int15 = jump1.compareTo((com.google.javascript.rhino.head.ast.AstNode) functionNode13);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode17 = new com.google.javascript.rhino.head.ast.FunctionNode(0);
        com.google.javascript.rhino.head.ast.Jump jump23 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump23.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump27 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump23, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode29 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int30 = scriptNode29.getEndLineno();
        int int31 = scriptNode29.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList32 = scriptNode29.getChildScopes();
        com.google.javascript.rhino.head.Node node33 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump23, (com.google.javascript.rhino.head.Node) scriptNode29);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList34 = scriptNode29.getFunctions();
        functionNodeList34.clear();
        com.google.javascript.rhino.head.ast.Jump jump40 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump40.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump44 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump40, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode46 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int47 = scriptNode46.getEndLineno();
        int int48 = scriptNode46.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList49 = scriptNode46.getChildScopes();
        com.google.javascript.rhino.head.Node node50 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump40, (com.google.javascript.rhino.head.Node) scriptNode46);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList51 = scriptNode46.getFunctions();
        boolean boolean52 = functionNodeList34.removeAll((java.util.Collection<com.google.javascript.rhino.head.ast.FunctionNode>) functionNodeList51);
        functionNode17.putProp(20, (java.lang.Object) functionNodeList34);
        int int54 = functionNode13.addFunction(functionNode17);
        functionNode13.setBounds((-3285918), 0);
        functionNode13.setIsExpressionClosure(true);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode61 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode62 = functionNode61.getTop();
        com.google.javascript.rhino.head.ast.Name name63 = null;
        functionNode61.setFunctionName(name63);
        boolean boolean65 = functionNode61.requiresActivation();
        com.google.javascript.rhino.head.ast.Jump jump69 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump69.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump73 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump69, 0);
        com.google.javascript.rhino.head.ast.Jump jump77 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump77.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump81 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump77, 0);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode82 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int83 = functionNode82.getLp();
        functionNode82.setEncodedSource("");
        functionNode82.flattenSymbolTable(false);
        jump69.addChildAfter((com.google.javascript.rhino.head.Node) jump77, (com.google.javascript.rhino.head.Node) functionNode82);
        com.google.javascript.rhino.head.Node node89 = functionNode82.target;
        functionNode61.setBody((com.google.javascript.rhino.head.ast.AstNode) functionNode82);
        com.google.javascript.rhino.head.Node node92 = new com.google.javascript.rhino.head.Node(10, (com.google.javascript.rhino.head.Node) functionNode82, 10);
        functionNode82.setFunctionIsSetter();
        functionNode82.setBaseLineno(11);
        com.google.javascript.rhino.head.Node node96 = functionNode82.getLastSibling();
        functionNode13.setMemberExprNode((com.google.javascript.rhino.head.ast.AstNode) functionNode82);
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor98 = null;
        // The following exception was thrown during execution in test generation
        try {
            functionNode13.visit(nodeVisitor98);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(scriptNode4);
        org.junit.Assert.assertNotNull(scriptNode8);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNull(scopeList32);
        org.junit.Assert.assertNotNull(functionNodeList34);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
        org.junit.Assert.assertNull(scopeList49);
        org.junit.Assert.assertNotNull(functionNodeList51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
        org.junit.Assert.assertNotNull(scriptNode62);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + (-1) + "'", int83 == (-1));
        org.junit.Assert.assertNull(node89);
        org.junit.Assert.assertNotNull(node96);
    }

    @Test
    public void test10008() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10008");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int2 = scriptNode1.getEndLineno();
        int int3 = scriptNode1.getBaseLineno();
        com.google.javascript.rhino.head.ast.Jump jump6 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode8 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int9 = scriptNode8.getEndLineno();
        int int10 = scriptNode8.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList11 = scriptNode8.getChildScopes();
        jump6.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode8);
        java.lang.String str13 = scriptNode8.debugPrint();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode1, (com.google.javascript.rhino.head.ast.Scope) scriptNode8);
        com.google.javascript.rhino.head.ast.AstNode astNode15 = scriptNode1.getParent();
        int int16 = scriptNode1.getBaseLineno();
        int int17 = scriptNode1.getBaseLineno();
        com.google.javascript.rhino.head.ast.RegExpLiteral regExpLiteral18 = new com.google.javascript.rhino.head.ast.RegExpLiteral();
        java.lang.String str19 = regExpLiteral18.getValue();
        scriptNode1.addRegExp(regExpLiteral18);
        int int21 = regExpLiteral18.getAbsolutePosition();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNull(scopeList11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str13, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertNull(astNode15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
    }

    @Test
    public void test10009() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10009");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode2 = new com.google.javascript.rhino.head.ast.FunctionNode((int) (byte) 100);
        int int3 = functionNode2.getEncodedSourceStart();
        int int4 = functionNode2.getFunctionCount();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode5 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = functionNode5.getTop();
        functionNode5.setParens((int) (byte) 1, (int) (short) 1);
        int int10 = functionNode5.getRp();
        com.google.javascript.rhino.head.Node node12 = new com.google.javascript.rhino.head.Node(17, (com.google.javascript.rhino.head.Node) functionNode2, (com.google.javascript.rhino.head.Node) functionNode5, (int) (short) 0);
        com.google.javascript.rhino.head.ast.Symbol symbol14 = functionNode5.getSymbol("$0");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode15 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int16 = functionNode15.getLp();
        functionNode15.setEncodedSource("");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode19 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.Scope scope21 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 10);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode22 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode23 = functionNode22.getTop();
        functionNode22.setParens((int) (byte) 1, (int) (short) 1);
        functionNode22.setEncodedSourceStart((-1));
        functionNode22.setFunctionIsGetter();
        scope21.addChildToFront((com.google.javascript.rhino.head.Node) functionNode22);
        functionNode19.setBody((com.google.javascript.rhino.head.ast.AstNode) functionNode22);
        int int32 = functionNode15.addFunction(functionNode19);
        functionNode5.setBody((com.google.javascript.rhino.head.ast.AstNode) functionNode15);
        functionNode5.setEncodedSourceBounds(14, (int) (short) 1);
        com.google.javascript.rhino.head.Token.CommentType commentType39 = null;
        com.google.javascript.rhino.head.ast.Comment comment41 = new com.google.javascript.rhino.head.ast.Comment(26, 20, commentType39, "  {\n  }\n");
        functionNode5.setJsDocNode(comment41);
        com.google.javascript.rhino.head.Node node43 = comment41.getFirstChild();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(scriptNode6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertNull(symbol14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(scriptNode23);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNull(node43);
    }

    @Test
    public void test10010() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10010");
        com.google.javascript.rhino.head.ast.Jump jump4 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump4.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump8 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump4, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int11 = scriptNode10.getEndLineno();
        int int12 = scriptNode10.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList13 = scriptNode10.getChildScopes();
        com.google.javascript.rhino.head.Node node14 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump4, (com.google.javascript.rhino.head.Node) scriptNode10);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList15 = scriptNode10.getFunctions();
        int int16 = scriptNode10.getPosition();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList17 = scriptNode10.getChildScopes();
        int int18 = scriptNode10.getEncodedSourceEnd();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList19 = scriptNode10.getSymbols();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator20 = scriptNode10.spliterator();
        scriptNode10.setBaseLineno(327364487);
        // The following exception was thrown during execution in test generation
        try {
            scriptNode10.setBaseLineno(1739894077);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNull(scopeList13);
        org.junit.Assert.assertNotNull(functionNodeList15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNull(scopeList17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNotNull(symbolList19);
        org.junit.Assert.assertNotNull(nodeSpliterator20);
    }

    @Test
    public void test10011() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10011");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode1 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int2 = functionNode1.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode3 = functionNode1.getTop();
        boolean boolean4 = functionNode1.hasSideEffects();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int7 = scriptNode6.getEndLineno();
        int int8 = scriptNode6.getBaseLineno();
        com.google.javascript.rhino.head.ast.Jump jump11 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode13 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int14 = scriptNode13.getEndLineno();
        int int15 = scriptNode13.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList16 = scriptNode13.getChildScopes();
        jump11.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode13);
        java.lang.String str18 = scriptNode13.debugPrint();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode6, (com.google.javascript.rhino.head.ast.Scope) scriptNode13);
        com.google.javascript.rhino.head.ast.Scope scope20 = new com.google.javascript.rhino.head.ast.Scope();
        scriptNode13.target = scope20;
        functionNode1.addChildScope(scope20);
        boolean boolean23 = functionNode1.hasConsistentReturnUsage();
        java.lang.String str24 = functionNode1.getNextTempName();
        com.google.javascript.rhino.head.ast.Jump jump25 = new com.google.javascript.rhino.head.ast.Jump((int) (short) -1, (com.google.javascript.rhino.head.Node) functionNode1);
        boolean boolean26 = functionNode1.isExpressionClosure();
        com.google.javascript.rhino.head.ast.Jump jump28 = new com.google.javascript.rhino.head.ast.Jump((int) (short) 0);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode29 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int30 = functionNode29.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode31 = functionNode29.getTop();
        com.google.javascript.rhino.head.ast.Name name32 = null;
        functionNode29.setFunctionName(name32);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode34 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode35 = functionNode34.getTop();
        functionNode29.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode34);
        functionNode34.setIsExpressionClosure(true);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode40 = new com.google.javascript.rhino.head.ast.FunctionNode((int) (byte) 100);
        int int41 = functionNode34.addFunction(functionNode40);
        int int42 = jump28.compareTo((com.google.javascript.rhino.head.ast.AstNode) functionNode40);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode44 = new com.google.javascript.rhino.head.ast.FunctionNode(0);
        com.google.javascript.rhino.head.ast.Jump jump50 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump50.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump54 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump50, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode56 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int57 = scriptNode56.getEndLineno();
        int int58 = scriptNode56.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList59 = scriptNode56.getChildScopes();
        com.google.javascript.rhino.head.Node node60 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump50, (com.google.javascript.rhino.head.Node) scriptNode56);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList61 = scriptNode56.getFunctions();
        functionNodeList61.clear();
        com.google.javascript.rhino.head.ast.Jump jump67 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump67.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump71 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump67, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode73 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int74 = scriptNode73.getEndLineno();
        int int75 = scriptNode73.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList76 = scriptNode73.getChildScopes();
        com.google.javascript.rhino.head.Node node77 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump67, (com.google.javascript.rhino.head.Node) scriptNode73);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList78 = scriptNode73.getFunctions();
        boolean boolean79 = functionNodeList61.removeAll((java.util.Collection<com.google.javascript.rhino.head.ast.FunctionNode>) functionNodeList78);
        functionNode44.putProp(20, (java.lang.Object) functionNodeList61);
        int int81 = functionNode40.addFunction(functionNode44);
        boolean boolean82 = functionNode44.isGenerator();
        functionNode1.setTop((com.google.javascript.rhino.head.ast.ScriptNode) functionNode44);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode84 = functionNode44.getTop();
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList85 = functionNode44.getStatements();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode86 = functionNode44.getTop();
        java.lang.String str87 = functionNode44.getName();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertNotNull(scriptNode3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNull(scopeList16);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str18, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "$0" + "'", str24, "$0");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertNotNull(scriptNode31);
        org.junit.Assert.assertNotNull(scriptNode35);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + (-1) + "'", int58 == (-1));
        org.junit.Assert.assertNull(scopeList59);
        org.junit.Assert.assertNotNull(functionNodeList61);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + (-1) + "'", int74 == (-1));
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + (-1) + "'", int75 == (-1));
        org.junit.Assert.assertNull(scopeList76);
        org.junit.Assert.assertNotNull(functionNodeList78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 0 + "'", int81 == 0);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(scriptNode84);
        org.junit.Assert.assertNotNull(astNodeList85);
        org.junit.Assert.assertNotNull(scriptNode86);
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "" + "'", str87, "");
    }

    @Test
    public void test10012() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10012");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 10);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode2 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode3 = functionNode2.getTop();
        functionNode2.setParens((int) (byte) 1, (int) (short) 1);
        functionNode2.setEncodedSourceStart((-1));
        functionNode2.setFunctionIsGetter();
        scope1.addChildToFront((com.google.javascript.rhino.head.Node) functionNode2);
        functionNode2.setRp(19);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int15 = scriptNode14.getEndLineno();
        int int16 = scriptNode14.getBaseLineno();
        com.google.javascript.rhino.head.ast.Jump jump19 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode21 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int22 = scriptNode21.getEndLineno();
        int int23 = scriptNode21.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList24 = scriptNode21.getChildScopes();
        jump19.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode21);
        java.lang.String str26 = scriptNode21.debugPrint();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode14, (com.google.javascript.rhino.head.ast.Scope) scriptNode21);
        com.google.javascript.rhino.head.ast.Scope scope28 = new com.google.javascript.rhino.head.ast.Scope();
        scriptNode21.target = scope28;
        java.lang.String str30 = functionNode2.toStringTree(scriptNode21);
        java.lang.String str32 = scriptNode21.toSource((int) (short) 10);
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap33 = scriptNode21.getSymbolTable();
        int int34 = strMap33.size();
        com.google.javascript.rhino.head.ast.Jump jump39 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump39.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump43 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump39, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode45 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int46 = scriptNode45.getEndLineno();
        int int47 = scriptNode45.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList48 = scriptNode45.getChildScopes();
        com.google.javascript.rhino.head.Node node49 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump39, (com.google.javascript.rhino.head.Node) scriptNode45);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList50 = scriptNode45.getFunctions();
        functionNodeList50.clear();
        functionNodeList50.clear();
        com.google.javascript.rhino.head.ast.Jump jump57 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump57.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump61 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump57, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode63 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int64 = scriptNode63.getEndLineno();
        int int65 = scriptNode63.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList66 = scriptNode63.getChildScopes();
        com.google.javascript.rhino.head.Node node67 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump57, (com.google.javascript.rhino.head.Node) scriptNode63);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList68 = scriptNode63.getFunctions();
        java.util.Spliterator<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeSpliterator69 = functionNodeList68.spliterator();
        int int71 = functionNodeList68.indexOf((java.lang.Object) (byte) 10);
        boolean boolean72 = functionNodeList50.retainAll((java.util.Collection<com.google.javascript.rhino.head.ast.FunctionNode>) functionNodeList68);
        boolean boolean73 = strMap33.containsKey((java.lang.Object) functionNodeList50);
        boolean boolean74 = strMap33.isEmpty();
        com.google.javascript.rhino.head.ast.Symbol symbol75 = new com.google.javascript.rhino.head.ast.Symbol();
        java.lang.String str76 = symbol75.getName();
        symbol75.setIndex((int) '#');
        boolean boolean79 = strMap33.containsKey((java.lang.Object) symbol75);
        java.util.Set<java.util.Map.Entry<java.lang.String, com.google.javascript.rhino.head.ast.Symbol>> strEntrySet80 = strMap33.entrySet();
        com.google.javascript.rhino.head.ast.RegExpLiteral regExpLiteral83 = new com.google.javascript.rhino.head.ast.RegExpLiteral((-1), 3);
        java.lang.String str84 = regExpLiteral83.getFlags();
        java.lang.String str86 = regExpLiteral83.toSource(16);
        com.google.javascript.rhino.head.ast.Symbol symbol87 = new com.google.javascript.rhino.head.ast.Symbol();
        java.lang.String str88 = symbol87.getDeclTypeName();
        int int89 = symbol87.getDeclType();
        com.google.javascript.rhino.head.ast.Scope scope90 = symbol87.getContainingTable();
        java.lang.String str91 = symbol87.getDeclTypeName();
        com.google.javascript.rhino.head.ast.Symbol symbol92 = strMap33.getOrDefault((java.lang.Object) 16, symbol87);
        com.google.javascript.rhino.head.ast.Scope scope93 = symbol92.getContainingTable();
        org.junit.Assert.assertNotNull(scriptNode3);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNull(scopeList24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str26, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "                    {\n                    }\n" + "'", str32, "                    {\n                    }\n");
        org.junit.Assert.assertNotNull(strMap33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertNull(scopeList48);
        org.junit.Assert.assertNotNull(functionNodeList50);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + (-1) + "'", int64 == (-1));
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + (-1) + "'", int65 == (-1));
        org.junit.Assert.assertNull(scopeList66);
        org.junit.Assert.assertNotNull(functionNodeList68);
        org.junit.Assert.assertNotNull(functionNodeSpliterator69);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + (-1) + "'", int71 == (-1));
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNull(str76);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(strEntrySet80);
        org.junit.Assert.assertNull(str84);
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "                                /null/" + "'", str86, "                                /null/");
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "EOF" + "'", str88, "EOF");
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + 0 + "'", int89 == 0);
        org.junit.Assert.assertNull(scope90);
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + "EOF" + "'", str91, "EOF");
        org.junit.Assert.assertNotNull(symbol92);
        org.junit.Assert.assertNull(scope93);
    }

    @Test
    public void test10013() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10013");
        com.google.javascript.rhino.head.ast.Jump jump1 = new com.google.javascript.rhino.head.ast.Jump((-1011771339));
    }

    @Test
    public void test10014() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10014");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 10);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode2 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode3 = functionNode2.getTop();
        functionNode2.setParens((int) (byte) 1, (int) (short) 1);
        functionNode2.setEncodedSourceStart((-1));
        functionNode2.setFunctionIsGetter();
        scope1.addChildToFront((com.google.javascript.rhino.head.Node) functionNode2);
        functionNode2.setRp(19);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int15 = scriptNode14.getEndLineno();
        int int16 = scriptNode14.getBaseLineno();
        com.google.javascript.rhino.head.ast.Jump jump19 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode21 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int22 = scriptNode21.getEndLineno();
        int int23 = scriptNode21.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList24 = scriptNode21.getChildScopes();
        jump19.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode21);
        java.lang.String str26 = scriptNode21.debugPrint();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode14, (com.google.javascript.rhino.head.ast.Scope) scriptNode21);
        com.google.javascript.rhino.head.ast.Scope scope28 = new com.google.javascript.rhino.head.ast.Scope();
        scriptNode21.target = scope28;
        java.lang.String str30 = functionNode2.toStringTree(scriptNode21);
        java.lang.String str32 = scriptNode21.toSource((int) (short) 10);
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap33 = scriptNode21.getSymbolTable();
        int int34 = strMap33.size();
        com.google.javascript.rhino.head.ast.Jump jump39 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump39.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump43 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump39, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode45 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int46 = scriptNode45.getEndLineno();
        int int47 = scriptNode45.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList48 = scriptNode45.getChildScopes();
        com.google.javascript.rhino.head.Node node49 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump39, (com.google.javascript.rhino.head.Node) scriptNode45);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList50 = scriptNode45.getFunctions();
        functionNodeList50.clear();
        functionNodeList50.clear();
        com.google.javascript.rhino.head.ast.Jump jump57 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump57.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump61 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump57, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode63 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int64 = scriptNode63.getEndLineno();
        int int65 = scriptNode63.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList66 = scriptNode63.getChildScopes();
        com.google.javascript.rhino.head.Node node67 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump57, (com.google.javascript.rhino.head.Node) scriptNode63);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList68 = scriptNode63.getFunctions();
        java.util.Spliterator<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeSpliterator69 = functionNodeList68.spliterator();
        int int71 = functionNodeList68.indexOf((java.lang.Object) (byte) 10);
        boolean boolean72 = functionNodeList50.retainAll((java.util.Collection<com.google.javascript.rhino.head.ast.FunctionNode>) functionNodeList68);
        boolean boolean73 = strMap33.containsKey((java.lang.Object) functionNodeList50);
        boolean boolean74 = strMap33.isEmpty();
        com.google.javascript.rhino.head.ast.Symbol symbol75 = new com.google.javascript.rhino.head.ast.Symbol();
        java.lang.String str76 = symbol75.getName();
        symbol75.setIndex((int) '#');
        boolean boolean79 = strMap33.containsKey((java.lang.Object) symbol75);
        java.util.Set<java.util.Map.Entry<java.lang.String, com.google.javascript.rhino.head.ast.Symbol>> strEntrySet80 = strMap33.entrySet();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode81 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int82 = functionNode81.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode83 = functionNode81.getTop();
        com.google.javascript.rhino.head.ast.Name name84 = null;
        functionNode81.setFunctionName(name84);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode86 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode87 = functionNode86.getTop();
        functionNode81.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode86);
        functionNode86.setIsExpressionClosure(true);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode92 = new com.google.javascript.rhino.head.ast.FunctionNode((int) (byte) 100);
        int int93 = functionNode86.addFunction(functionNode92);
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList94 = functionNode86.getStatements();
        boolean boolean95 = strMap33.containsValue((java.lang.Object) functionNode86);
        strMap33.clear();
        org.junit.Assert.assertNotNull(scriptNode3);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNull(scopeList24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str26, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "                    {\n                    }\n" + "'", str32, "                    {\n                    }\n");
        org.junit.Assert.assertNotNull(strMap33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertNull(scopeList48);
        org.junit.Assert.assertNotNull(functionNodeList50);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + (-1) + "'", int64 == (-1));
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + (-1) + "'", int65 == (-1));
        org.junit.Assert.assertNull(scopeList66);
        org.junit.Assert.assertNotNull(functionNodeList68);
        org.junit.Assert.assertNotNull(functionNodeSpliterator69);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + (-1) + "'", int71 == (-1));
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNull(str76);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(strEntrySet80);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + (-1) + "'", int82 == (-1));
        org.junit.Assert.assertNotNull(scriptNode83);
        org.junit.Assert.assertNotNull(scriptNode87);
        org.junit.Assert.assertTrue("'" + int93 + "' != '" + 0 + "'", int93 == 0);
        org.junit.Assert.assertNotNull(astNodeList94);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
    }

    @Test
    public void test10015() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10015");
        com.google.javascript.rhino.head.ast.Symbol symbol0 = new com.google.javascript.rhino.head.ast.Symbol();
        int int1 = symbol0.getIndex();
        symbol0.setIndex(35);
        com.google.javascript.rhino.head.ast.Scope scope4 = new com.google.javascript.rhino.head.ast.Scope();
        scope4.setBounds(0, 10);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode8 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode9 = functionNode8.getTop();
        int int10 = functionNode8.getRegexpCount();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode11 = functionNode8.getEnclosingFunction();
        java.lang.String str12 = scope4.toStringTree((com.google.javascript.rhino.head.ast.ScriptNode) functionNode8);
        com.google.javascript.rhino.head.ast.Symbol symbol14 = scope4.getSymbol("                                /null/");
        symbol0.setContainingTable(scope4);
        com.google.javascript.rhino.head.ast.Scope scope16 = symbol0.getContainingTable();
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList17 = scope16.getStatements();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-1) + "'", int1 == (-1));
        org.junit.Assert.assertNotNull(scriptNode9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNull(functionNode11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(symbol14);
        org.junit.Assert.assertNotNull(scope16);
        org.junit.Assert.assertNotNull(astNodeList17);
    }

    @Test
    public void test10016() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10016");
        com.google.javascript.rhino.head.ast.Jump jump4 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump4.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump8 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump4, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int11 = scriptNode10.getEndLineno();
        int int12 = scriptNode10.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList13 = scriptNode10.getChildScopes();
        com.google.javascript.rhino.head.Node node14 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump4, (com.google.javascript.rhino.head.Node) scriptNode10);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList15 = scriptNode10.getFunctions();
        int int16 = functionNodeList15.size();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator17 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        functionNodeList15.sort((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator17);
        java.util.ListIterator<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeItor19 = functionNodeList15.listIterator();
        int int20 = functionNodeList15.size();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode21 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int22 = functionNode21.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode23 = functionNode21.getTop();
        com.google.javascript.rhino.head.ast.Name name24 = null;
        functionNode21.setFunctionName(name24);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode26 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode27 = functionNode26.getTop();
        functionNode21.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode26);
        boolean boolean29 = functionNodeList15.remove((java.lang.Object) functionNode21);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode30 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int31 = functionNode30.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode32 = functionNode30.getTop();
        com.google.javascript.rhino.head.ast.Name name33 = null;
        functionNode30.setFunctionName(name33);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode35 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode36 = functionNode35.getTop();
        functionNode30.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode35);
        java.lang.String str38 = functionNode30.getNextTempName();
        java.lang.String str39 = functionNode30.getEncodedSource();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode41 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int42 = functionNode41.getLp();
        functionNode41.setEncodedSource("");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode45 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int46 = functionNode45.getLp();
        functionNode45.setEncodedSource("");
        functionNode45.flattenSymbolTable(false);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode51 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int52 = functionNode51.getLp();
        com.google.javascript.rhino.head.Node node54 = new com.google.javascript.rhino.head.Node((-1), (com.google.javascript.rhino.head.Node) functionNode41, (com.google.javascript.rhino.head.Node) functionNode45, (com.google.javascript.rhino.head.Node) functionNode51, (int) '#');
        com.google.javascript.rhino.head.ast.AstNode astNode55 = functionNode41.getBody();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode56 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int57 = functionNode56.getLp();
        functionNode56.setEncodedSource("");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode60 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int61 = functionNode60.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode62 = functionNode60.getTop();
        com.google.javascript.rhino.head.ast.Name name63 = null;
        functionNode60.setFunctionName(name63);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode65 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode66 = functionNode65.getTop();
        functionNode60.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode65);
        int int68 = functionNode65.getRp();
        int int69 = functionNode65.getFunctionType();
        functionNode56.addParam((com.google.javascript.rhino.head.ast.AstNode) functionNode65);
        com.google.javascript.rhino.head.ast.Scope scope71 = functionNode65.getEnclosingScope();
        functionNode41.setBody((com.google.javascript.rhino.head.ast.AstNode) functionNode65);
        functionNode65.setLp(26);
        functionNode30.addChildScope((com.google.javascript.rhino.head.ast.Scope) functionNode65);
        java.lang.String str76 = functionNode30.getName();
        functionNode21.addChildScope((com.google.javascript.rhino.head.ast.Scope) functionNode30);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNull(scopeList13);
        org.junit.Assert.assertNotNull(functionNodeList15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(functionNodeItor19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNotNull(scriptNode23);
        org.junit.Assert.assertNotNull(scriptNode27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNotNull(scriptNode32);
        org.junit.Assert.assertNotNull(scriptNode36);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "$0" + "'", str38, "$0");
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertNull(astNode55);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + (-1) + "'", int61 == (-1));
        org.junit.Assert.assertNotNull(scriptNode62);
        org.junit.Assert.assertNotNull(scriptNode66);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + (-1) + "'", int68 == (-1));
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 0 + "'", int69 == 0);
        org.junit.Assert.assertNotNull(scope71);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "" + "'", str76, "");
    }

    @Test
    public void test10017() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10017");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode2 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int3 = functionNode2.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode4 = functionNode2.getTop();
        com.google.javascript.rhino.head.ast.Name name5 = null;
        functionNode2.setFunctionName(name5);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode7 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode8 = functionNode7.getTop();
        functionNode2.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode7);
        com.google.javascript.rhino.head.ast.Jump jump11 = new com.google.javascript.rhino.head.ast.Jump(32);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode13 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int14 = scriptNode13.getEndLineno();
        com.google.javascript.rhino.head.Node node16 = scriptNode13.setType(8);
        int int17 = scriptNode13.getLineno();
        com.google.javascript.rhino.head.Node node18 = new com.google.javascript.rhino.head.Node(365513504, (com.google.javascript.rhino.head.Node) functionNode7, (com.google.javascript.rhino.head.Node) jump11, (com.google.javascript.rhino.head.Node) scriptNode13);
        functionNode7.setPosition((int) (byte) -1);
        com.google.javascript.rhino.head.Node node22 = new com.google.javascript.rhino.head.Node(3, (com.google.javascript.rhino.head.Node) functionNode7, 6);
        functionNode7.setEncodedSource("                    109");
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(scriptNode4);
        org.junit.Assert.assertNotNull(scriptNode8);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNotNull(node16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
    }

    @Test
    public void test10018() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10018");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode1 = new com.google.javascript.rhino.head.ast.FunctionNode(0);
        int int2 = functionNode1.getBaseLineno();
        boolean boolean3 = functionNode1.isGetter();
        com.google.javascript.rhino.head.ast.RegExpLiteral regExpLiteral5 = new com.google.javascript.rhino.head.ast.RegExpLiteral((int) (short) 1);
        regExpLiteral5.setFlags("-1\tSCRIPT -1 1\n");
        java.lang.String str8 = regExpLiteral5.getValue();
        regExpLiteral5.setFlags("52");
        functionNode1.addChildrenToFront((com.google.javascript.rhino.head.Node) regExpLiteral5);
        boolean boolean12 = functionNode1.isGetterOrSetter();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode13 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = functionNode13.getTop();
        int int15 = functionNode13.getRegexpCount();
        int int16 = functionNode13.getParamCount();
        com.google.javascript.rhino.head.ast.AstNode astNode17 = functionNode13.getBody();
        int int18 = functionNode1.addFunction(functionNode13);
        boolean boolean19 = functionNode13.hasChildren();
        functionNode13.setLp((int) 'a');
        int int22 = functionNode13.getLength();
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor23 = null;
        // The following exception was thrown during execution in test generation
        try {
            functionNode13.visit(nodeVisitor23);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(scriptNode14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNull(astNode17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
    }

    @Test
    public void test10019() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10019");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode0 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = functionNode0.getTop();
        com.google.javascript.rhino.head.ast.Name name2 = null;
        functionNode0.setFunctionName(name2);
        int int4 = functionNode0.getLength();
        com.google.javascript.rhino.head.ast.Scope scope7 = new com.google.javascript.rhino.head.ast.Scope((int) '4');
        functionNode0.putProp(6, (java.lang.Object) scope7);
        functionNode0.setEncodedSourceStart(9);
        com.google.javascript.rhino.head.ast.Scope scope11 = functionNode0.getParentScope();
        boolean boolean12 = functionNode0.isGetterOrSetter();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList13 = functionNode0.getSymbols();
        boolean boolean14 = functionNode0.isGetterOrSetter();
        functionNode0.setRequiresActivation();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList16 = functionNode0.getChildScopes();
        boolean boolean17 = functionNode0.isGetter();
        org.junit.Assert.assertNotNull(scriptNode1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 1 + "'", int4 == 1);
        org.junit.Assert.assertNull(scope11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(symbolList13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(scopeList16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    }

    @Test
    public void test10020() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10020");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode0 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int1 = functionNode0.getLp();
        functionNode0.setEncodedSource("");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode4 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int5 = functionNode4.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = functionNode4.getTop();
        com.google.javascript.rhino.head.ast.Name name7 = null;
        functionNode4.setFunctionName(name7);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode9 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = functionNode9.getTop();
        functionNode4.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode9);
        int int12 = functionNode9.getRp();
        int int13 = functionNode9.getFunctionType();
        functionNode0.addParam((com.google.javascript.rhino.head.ast.AstNode) functionNode9);
        com.google.javascript.rhino.head.Node node15 = functionNode0.getLastSibling();
        com.google.javascript.rhino.head.Node node16 = functionNode0.getNext();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode18 = new com.google.javascript.rhino.head.ast.FunctionNode((-1));
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor19 = functionNode18.iterator();
        functionNode18.setEncodedSourceStart(15);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode22 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int23 = functionNode22.getLp();
        functionNode22.setEncodedSource("");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode26 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int27 = functionNode26.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode28 = functionNode26.getTop();
        com.google.javascript.rhino.head.ast.Name name29 = null;
        functionNode26.setFunctionName(name29);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode31 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode32 = functionNode31.getTop();
        functionNode26.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode31);
        int int34 = functionNode31.getRp();
        int int35 = functionNode31.getFunctionType();
        functionNode22.addParam((com.google.javascript.rhino.head.ast.AstNode) functionNode31);
        com.google.javascript.rhino.head.ast.Scope scope38 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 10);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode39 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode40 = functionNode39.getTop();
        functionNode39.setParens((int) (byte) 1, (int) (short) 1);
        functionNode39.setEncodedSourceStart((-1));
        functionNode39.setFunctionIsGetter();
        scope38.addChildToFront((com.google.javascript.rhino.head.Node) functionNode39);
        functionNode39.setRp(19);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode51 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int52 = scriptNode51.getEndLineno();
        int int53 = scriptNode51.getBaseLineno();
        com.google.javascript.rhino.head.ast.Jump jump56 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode58 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int59 = scriptNode58.getEndLineno();
        int int60 = scriptNode58.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList61 = scriptNode58.getChildScopes();
        jump56.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode58);
        java.lang.String str63 = scriptNode58.debugPrint();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode51, (com.google.javascript.rhino.head.ast.Scope) scriptNode58);
        com.google.javascript.rhino.head.ast.Scope scope65 = new com.google.javascript.rhino.head.ast.Scope();
        scriptNode58.target = scope65;
        java.lang.String str67 = functionNode39.toStringTree(scriptNode58);
        java.lang.String str69 = scriptNode58.toSource((int) (short) 10);
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap70 = scriptNode58.getSymbolTable();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode72 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int73 = scriptNode72.getEndLineno();
        int int74 = scriptNode72.getBaseLineno();
        scriptNode72.removeProp(0);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList77 = scriptNode72.getSymbols();
        boolean boolean78 = strMap70.containsValue((java.lang.Object) symbolList77);
        functionNode22.setSymbols(symbolList77);
        functionNode22.setEncodedSourceStart(0);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode82 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int83 = functionNode82.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode84 = functionNode82.getTop();
        com.google.javascript.rhino.head.ast.Name name85 = null;
        functionNode82.setFunctionName(name85);
        functionNode18.addChildBefore((com.google.javascript.rhino.head.Node) functionNode22, (com.google.javascript.rhino.head.Node) name85);
        functionNode22.setFunctionType(18);
        functionNode22.setIsExpressionClosure(true);
        int int92 = functionNode0.compareTo((com.google.javascript.rhino.head.ast.AstNode) functionNode22);
        int int93 = functionNode0.getFunctionCount();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-1) + "'", int1 == (-1));
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(scriptNode6);
        org.junit.Assert.assertNotNull(scriptNode10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(node15);
        org.junit.Assert.assertNull(node16);
        org.junit.Assert.assertNotNull(nodeItor19);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(scriptNode28);
        org.junit.Assert.assertNotNull(scriptNode32);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertNotNull(scriptNode40);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-1) + "'", int59 == (-1));
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-1) + "'", int60 == (-1));
        org.junit.Assert.assertNull(scopeList61);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str63, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertNull(str67);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "                    {\n                    }\n" + "'", str69, "                    {\n                    }\n");
        org.junit.Assert.assertNotNull(strMap70);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + (-1) + "'", int73 == (-1));
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + (-1) + "'", int74 == (-1));
        org.junit.Assert.assertNotNull(symbolList77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + (-1) + "'", int83 == (-1));
        org.junit.Assert.assertNotNull(scriptNode84);
// flaky:         org.junit.Assert.assertTrue("'" + int92 + "' != '" + 652386645 + "'", int92 == 652386645);
        org.junit.Assert.assertTrue("'" + int93 + "' != '" + 0 + "'", int93 == 0);
    }

    @Test
    public void test10021() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10021");
        com.google.javascript.rhino.head.ast.Symbol symbol0 = new com.google.javascript.rhino.head.ast.Symbol();
        com.google.javascript.rhino.head.ast.Jump jump5 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump5.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump9 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump5, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int12 = scriptNode11.getEndLineno();
        int int13 = scriptNode11.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList14 = scriptNode11.getChildScopes();
        com.google.javascript.rhino.head.Node node15 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump5, (com.google.javascript.rhino.head.Node) scriptNode11);
        symbol0.setContainingTable((com.google.javascript.rhino.head.ast.Scope) scriptNode11);
        symbol0.setName("                                /null/");
        com.google.javascript.rhino.head.Node node19 = symbol0.getNode();
        int int20 = symbol0.getDeclType();
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNull(scopeList14);
        org.junit.Assert.assertNull(node19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
    }

    @Test
    public void test10022() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10022");
        com.google.javascript.rhino.head.ast.Jump jump2 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode4 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int5 = scriptNode4.getEndLineno();
        int int6 = scriptNode4.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList7 = scriptNode4.getChildScopes();
        jump2.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode4);
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator9 = scriptNode4.spliterator();
        java.lang.String str10 = scriptNode4.getNextTempName();
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList11 = scriptNode4.getStatements();
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.Node node12 = scriptNode4.getFinally();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNull(scopeList7);
        org.junit.Assert.assertNotNull(nodeSpliterator9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "$0" + "'", str10, "$0");
        org.junit.Assert.assertNotNull(astNodeList11);
    }

    @Test
    public void test10023() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10023");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode0 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int1 = functionNode0.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode3 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        java.lang.String str4 = functionNode0.toStringTree(scriptNode3);
        java.lang.String str5 = functionNode0.getName();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode6 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int7 = functionNode6.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode8 = functionNode6.getTop();
        boolean boolean9 = functionNode6.hasSideEffects();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList10 = functionNode6.getSymbols();
        functionNode6.setRp(5);
        functionNode6.setParens((int) '#', 24);
        int int16 = functionNode6.getParamCount();
        com.google.javascript.rhino.head.ast.Jump jump19 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        com.google.javascript.rhino.head.ast.Scope scope21 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 10);
        jump19.addChildrenToBack((com.google.javascript.rhino.head.Node) scope21);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode23 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int24 = functionNode23.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode25 = functionNode23.getTop();
        com.google.javascript.rhino.head.ast.Name name26 = null;
        functionNode23.setFunctionName(name26);
        functionNode23.setIsGenerator();
        java.lang.String str29 = functionNode23.getEncodedSource();
        scope21.target = functionNode23;
        functionNode6.setMemberExprNode((com.google.javascript.rhino.head.ast.AstNode) functionNode23);
        functionNode23.setLp(35);
        int int34 = functionNode23.getEncodedSourceEnd();
        functionNode0.setTop((com.google.javascript.rhino.head.ast.ScriptNode) functionNode23);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-1) + "'", int1 == (-1));
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(scriptNode8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(symbolList10);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertNotNull(scriptNode25);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
    }

    @Test
    public void test10024() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10024");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((-978015535));
    }

    @Test
    public void test10025() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10025");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode1 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int2 = functionNode1.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode3 = functionNode1.getTop();
        com.google.javascript.rhino.head.Node node4 = new com.google.javascript.rhino.head.Node((-1), (com.google.javascript.rhino.head.Node) functionNode1);
        boolean boolean5 = functionNode1.isGenerator();
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList6 = functionNode1.getParams();
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor7 = functionNode1.iterator();
        java.lang.String str8 = functionNode1.getNextTempName();
        com.google.javascript.rhino.head.ast.Name name9 = functionNode1.getFunctionName();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertNotNull(scriptNode3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(astNodeList6);
        org.junit.Assert.assertNotNull(nodeItor7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "$0" + "'", str8, "$0");
        org.junit.Assert.assertNull(name9);
    }

    @Test
    public void test10026() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10026");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int2 = scriptNode1.getEndLineno();
        int int3 = scriptNode1.getBaseLineno();
        com.google.javascript.rhino.head.ast.Jump jump6 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode8 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int9 = scriptNode8.getEndLineno();
        int int10 = scriptNode8.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList11 = scriptNode8.getChildScopes();
        jump6.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode8);
        java.lang.String str13 = scriptNode8.debugPrint();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode1, (com.google.javascript.rhino.head.ast.Scope) scriptNode8);
        com.google.javascript.rhino.head.Node node15 = scriptNode1.getFirstChild();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator16 = scriptNode1.new NodeIterator();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode18 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int19 = functionNode18.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode20 = functionNode18.getTop();
        com.google.javascript.rhino.head.ast.Name name21 = null;
        functionNode18.setFunctionName(name21);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode23 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode24 = functionNode23.getTop();
        functionNode18.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode23);
        com.google.javascript.rhino.head.ast.Scope scope28 = new com.google.javascript.rhino.head.ast.Scope((int) (short) -1, 0);
        functionNode18.replaceWith(scope28);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode30 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int31 = functionNode30.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode32 = functionNode30.getTop();
        com.google.javascript.rhino.head.ast.Name name33 = null;
        functionNode30.setFunctionName(name33);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode35 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode36 = functionNode35.getTop();
        functionNode30.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode35);
        int int38 = functionNode18.addFunction(functionNode30);
        com.google.javascript.rhino.head.ast.RegExpLiteral regExpLiteral41 = new com.google.javascript.rhino.head.ast.RegExpLiteral((int) (short) 1);
        java.lang.String str43 = regExpLiteral41.toSource((int) (byte) 10);
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator44 = regExpLiteral41.new NodeIterator();
        java.lang.String str46 = regExpLiteral41.toSource(100);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode47 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int48 = functionNode47.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode49 = functionNode47.getTop();
        com.google.javascript.rhino.head.ast.Name name50 = null;
        functionNode47.setFunctionName(name50);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode52 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode53 = functionNode52.getTop();
        functionNode47.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode52);
        java.lang.String str55 = functionNode47.getNextTempName();
        com.google.javascript.rhino.head.Node node57 = new com.google.javascript.rhino.head.Node(350469479, (com.google.javascript.rhino.head.Node) regExpLiteral41, (com.google.javascript.rhino.head.Node) functionNode47, 7);
        com.google.javascript.rhino.head.Node node58 = new com.google.javascript.rhino.head.Node(19, (com.google.javascript.rhino.head.Node) functionNode30, (com.google.javascript.rhino.head.Node) functionNode47);
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor59 = node58.iterator();
        boolean boolean60 = node58.hasSideEffects();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode62 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int63 = scriptNode62.getEndLineno();
        int int64 = scriptNode62.getBaseLineno();
        com.google.javascript.rhino.head.ast.Jump jump67 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode69 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int70 = scriptNode69.getEndLineno();
        int int71 = scriptNode69.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList72 = scriptNode69.getChildScopes();
        jump67.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode69);
        java.lang.String str74 = scriptNode69.debugPrint();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode62, (com.google.javascript.rhino.head.ast.Scope) scriptNode69);
        com.google.javascript.rhino.head.ast.AstNode astNode76 = scriptNode62.getParent();
        int int77 = scriptNode62.getType();
        com.google.javascript.rhino.head.ast.Symbol symbol79 = scriptNode62.getSymbol("109");
        java.lang.String str80 = scriptNode62.toSource();
        int int81 = scriptNode62.getEncodedSourceEnd();
        int int82 = scriptNode62.getFunctionCount();
        // The following exception was thrown during execution in test generation
        try {
            scriptNode1.replaceChildAfter(node58, (com.google.javascript.rhino.head.Node) scriptNode62);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNull(scopeList11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str13, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertNull(node15);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(scriptNode20);
        org.junit.Assert.assertNotNull(scriptNode24);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNotNull(scriptNode32);
        org.junit.Assert.assertNotNull(scriptNode36);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "                    /null/" + "'", str43, "                    /null/");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "                                                                                                                                                                                                        /null/" + "'", str46, "                                                                                                                                                                                                        /null/");
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
        org.junit.Assert.assertNotNull(scriptNode49);
        org.junit.Assert.assertNotNull(scriptNode53);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "$0" + "'", str55, "$0");
        org.junit.Assert.assertNotNull(nodeItor59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + (-1) + "'", int63 == (-1));
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + (-1) + "'", int64 == (-1));
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + (-1) + "'", int70 == (-1));
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + (-1) + "'", int71 == (-1));
        org.junit.Assert.assertNull(scopeList72);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str74, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertNull(astNode76);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 136 + "'", int77 == 136);
        org.junit.Assert.assertNull(symbol79);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "{\n}\n" + "'", str80, "{\n}\n");
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + (-1) + "'", int81 == (-1));
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 0 + "'", int82 == 0);
    }

    @Test
    public void test10027() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10027");
        com.google.javascript.rhino.head.ast.Name name1 = null;
        com.google.javascript.rhino.head.ast.FunctionNode functionNode2 = new com.google.javascript.rhino.head.ast.FunctionNode(4, name1);
        com.google.javascript.rhino.head.ast.Jump jump7 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump7.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump11 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump7, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode13 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int14 = scriptNode13.getEndLineno();
        int int15 = scriptNode13.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList16 = scriptNode13.getChildScopes();
        com.google.javascript.rhino.head.Node node17 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump7, (com.google.javascript.rhino.head.Node) scriptNode13);
        com.google.javascript.rhino.head.Node node19 = scriptNode13.setType(0);
        functionNode2.setParentScope((com.google.javascript.rhino.head.ast.Scope) scriptNode13);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode22 = new com.google.javascript.rhino.head.ast.FunctionNode(26);
        functionNode22.setRp(48);
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.Node node25 = functionNode2.getChildBefore((com.google.javascript.rhino.head.Node) functionNode22);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNull(scopeList16);
        org.junit.Assert.assertNotNull(node19);
    }

    @Test
    public void test10028() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10028");
        com.google.javascript.rhino.head.Node node4 = com.google.javascript.rhino.head.Node.newString((-1110578805), "                                                                      /null/-1\tSCRIPT -1 1\n");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode5 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int6 = functionNode5.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode7 = functionNode5.getTop();
        com.google.javascript.rhino.head.ast.Name name8 = null;
        functionNode5.setFunctionName(name8);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode10 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.Scope scope12 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 10);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode13 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = functionNode13.getTop();
        functionNode13.setParens((int) (byte) 1, (int) (short) 1);
        functionNode13.setEncodedSourceStart((-1));
        functionNode13.setFunctionIsGetter();
        scope12.addChildToFront((com.google.javascript.rhino.head.Node) functionNode13);
        functionNode10.setBody((com.google.javascript.rhino.head.ast.AstNode) functionNode13);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode23 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode24 = functionNode23.getTop();
        functionNode23.setParens((int) (byte) 1, (int) (short) 1);
        functionNode23.setEncodedSourceStart((-1));
        java.util.List<com.google.javascript.rhino.head.Node> nodeList30 = functionNode23.getResumptionPoints();
        int int31 = functionNode23.getLp();
        functionNode10.setBody((com.google.javascript.rhino.head.ast.AstNode) functionNode23);
        functionNode5.addParam((com.google.javascript.rhino.head.ast.AstNode) functionNode23);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode34 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int35 = functionNode34.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode36 = functionNode34.getTop();
        com.google.javascript.rhino.head.ast.Name name37 = null;
        functionNode34.setFunctionName(name37);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode39 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode40 = functionNode39.getTop();
        functionNode34.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode39);
        int int42 = functionNode39.getRp();
        int int43 = functionNode39.getFunctionType();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) functionNode23, (com.google.javascript.rhino.head.ast.Scope) functionNode39);
        com.google.javascript.rhino.head.Node node45 = functionNode23.getLastSibling();
        com.google.javascript.rhino.head.Node node46 = new com.google.javascript.rhino.head.Node((int) (short) 100, node4, (com.google.javascript.rhino.head.Node) functionNode23);
        int int49 = functionNode23.getIntProp(771817347, (int) (byte) 1);
        com.google.javascript.rhino.head.ast.Jump jump51 = new com.google.javascript.rhino.head.ast.Jump(12, (com.google.javascript.rhino.head.Node) functionNode23, 691568742);
        org.junit.Assert.assertNotNull(node4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(scriptNode7);
        org.junit.Assert.assertNotNull(scriptNode14);
        org.junit.Assert.assertNotNull(scriptNode24);
        org.junit.Assert.assertNull(nodeList30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 1 + "'", int31 == 1);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertNotNull(scriptNode36);
        org.junit.Assert.assertNotNull(scriptNode40);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertNotNull(node45);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 1 + "'", int49 == 1);
    }

    @Test
    public void test10029() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10029");
        com.google.javascript.rhino.head.ast.Scope scope0 = new com.google.javascript.rhino.head.ast.Scope();
        scope0.setBounds(0, 10);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode4 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = functionNode4.getTop();
        int int6 = functionNode4.getRegexpCount();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode7 = functionNode4.getEnclosingFunction();
        java.lang.String str8 = scope0.toStringTree((com.google.javascript.rhino.head.ast.ScriptNode) functionNode4);
        java.lang.String str9 = functionNode4.shortName();
        java.util.Map<com.google.javascript.rhino.head.Node, int[]> nodeMap10 = functionNode4.getLiveLocals();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode12 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int13 = functionNode12.getLp();
        functionNode12.setEncodedSource("");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode16 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int17 = functionNode16.getLp();
        functionNode16.setEncodedSource("");
        functionNode16.flattenSymbolTable(false);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode22 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int23 = functionNode22.getLp();
        com.google.javascript.rhino.head.Node node25 = new com.google.javascript.rhino.head.Node((-1), (com.google.javascript.rhino.head.Node) functionNode12, (com.google.javascript.rhino.head.Node) functionNode16, (com.google.javascript.rhino.head.Node) functionNode22, (int) '#');
        boolean boolean26 = functionNode22.isGenerator();
        int int27 = functionNode22.getFunctionType();
        com.google.javascript.rhino.head.Node node28 = functionNode22.getFirstChild();
        int int29 = functionNode22.getEncodedSourceStart();
        com.google.javascript.rhino.head.ast.RegExpLiteral regExpLiteral31 = new com.google.javascript.rhino.head.ast.RegExpLiteral((int) (short) 1);
        java.lang.String str33 = regExpLiteral31.toSource((int) (byte) 10);
        regExpLiteral31.setFlags("-1\tSCRIPT -1 1\n");
        regExpLiteral31.removeProp(8);
        java.lang.String str38 = regExpLiteral31.getValue();
        regExpLiteral31.setFlags("<=");
        functionNode22.addResumptionPoint((com.google.javascript.rhino.head.Node) regExpLiteral31);
        functionNode4.addRegExp(regExpLiteral31);
        int int43 = functionNode4.getRp();
        org.junit.Assert.assertNotNull(scriptNode5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNull(functionNode7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "FunctionNode" + "'", str9, "FunctionNode");
        org.junit.Assert.assertNull(nodeMap10);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertNull(node28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "                    /null/" + "'", str33, "                    /null/");
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
    }

    @Test
    public void test10030() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10030");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int2 = scriptNode1.getEndLineno();
        int int3 = scriptNode1.getBaseLineno();
        com.google.javascript.rhino.head.ast.Scope scope4 = scriptNode1.getEnclosingScope();
        java.lang.String str6 = scriptNode1.toSource((-952910496));
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNull(scope4);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "{\n}\n" + "'", str6, "{\n}\n");
    }

    @Test
    public void test10031() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10031");
        com.google.javascript.rhino.head.ast.Jump jump2 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode4 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int5 = scriptNode4.getEndLineno();
        int int6 = scriptNode4.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList7 = scriptNode4.getChildScopes();
        jump2.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode4);
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor9 = scriptNode4.iterator();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode10 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int11 = functionNode10.getLp();
        functionNode10.setEncodedSource("");
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode4, (com.google.javascript.rhino.head.ast.Scope) functionNode10);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode15 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode16 = functionNode15.getTop();
        functionNode15.setParens((int) (byte) 1, (int) (short) 1);
        functionNode15.setEncodedSourceStart((-1));
        java.util.List<com.google.javascript.rhino.head.Node> nodeList22 = functionNode15.getResumptionPoints();
        com.google.javascript.rhino.head.ast.Scope scope24 = functionNode15.getDefiningScope("hi!");
        boolean boolean25 = functionNode15.isGetterOrSetter();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode26 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int27 = functionNode26.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode28 = functionNode26.getTop();
        com.google.javascript.rhino.head.ast.Name name29 = null;
        functionNode26.setFunctionName(name29);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode31 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode32 = functionNode31.getTop();
        functionNode26.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode31);
        int int34 = functionNode31.getRp();
        int int35 = functionNode31.getFunctionType();
        int int36 = functionNode15.addFunction(functionNode31);
        functionNode10.setCompilerData((java.lang.Object) functionNode31);
        functionNode10.setFunctionType(136);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode41 = new com.google.javascript.rhino.head.ast.FunctionNode(0);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode42 = functionNode41.getEnclosingFunction();
        com.google.javascript.rhino.head.Node node43 = functionNode41.target;
        functionNode41.setLineno((int) (byte) -1);
        functionNode10.setMemberExprNode((com.google.javascript.rhino.head.ast.AstNode) functionNode41);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode47 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode48 = functionNode47.getTop();
        functionNode47.setParens((int) (byte) 1, (int) (short) 1);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode52 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.Scope scope54 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 10);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode55 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode56 = functionNode55.getTop();
        functionNode55.setParens((int) (byte) 1, (int) (short) 1);
        functionNode55.setEncodedSourceStart((-1));
        functionNode55.setFunctionIsGetter();
        scope54.addChildToFront((com.google.javascript.rhino.head.Node) functionNode55);
        functionNode52.setBody((com.google.javascript.rhino.head.ast.AstNode) functionNode55);
        functionNode52.setFunctionIsSetter();
        int int66 = functionNode47.addFunction(functionNode52);
        java.lang.String str67 = functionNode47.getNextTempName();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode69 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int70 = scriptNode69.getEndLineno();
        int int71 = scriptNode69.getBaseLineno();
        scriptNode69.removeProp(0);
        scriptNode69.setEncodedSourceEnd(19);
        functionNode47.addParam((com.google.javascript.rhino.head.ast.AstNode) scriptNode69);
        functionNode10.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode47);
        boolean boolean78 = functionNode10.isExpressionClosure();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode79 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int80 = functionNode79.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode81 = functionNode79.getTop();
        com.google.javascript.rhino.head.Node node82 = functionNode79.getLastSibling();
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList83 = functionNode79.getParams();
        functionNode79.removeProp(2);
        functionNode79.setParens(14, 3);
        functionNode79.putIntProp(6, 9);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList92 = functionNode79.getFunctions();
        int int93 = functionNode79.getLp();
        java.lang.String str94 = functionNode79.shortName();
        int int95 = functionNode10.addFunction(functionNode79);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNull(scopeList7);
        org.junit.Assert.assertNotNull(nodeItor9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(scriptNode16);
        org.junit.Assert.assertNull(nodeList22);
        org.junit.Assert.assertNull(scope24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(scriptNode28);
        org.junit.Assert.assertNotNull(scriptNode32);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertNull(functionNode42);
        org.junit.Assert.assertNull(node43);
        org.junit.Assert.assertNotNull(scriptNode48);
        org.junit.Assert.assertNotNull(scriptNode56);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 0 + "'", int66 == 0);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "$0" + "'", str67, "$0");
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + (-1) + "'", int70 == (-1));
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + (-1) + "'", int71 == (-1));
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + (-1) + "'", int80 == (-1));
        org.junit.Assert.assertNotNull(scriptNode81);
        org.junit.Assert.assertNotNull(node82);
        org.junit.Assert.assertNotNull(astNodeList83);
        org.junit.Assert.assertNotNull(functionNodeList92);
        org.junit.Assert.assertTrue("'" + int93 + "' != '" + 14 + "'", int93 == 14);
        org.junit.Assert.assertEquals("'" + str94 + "' != '" + "FunctionNode" + "'", str94, "FunctionNode");
        org.junit.Assert.assertTrue("'" + int95 + "' != '" + 0 + "'", int95 == 0);
    }

    @Test
    public void test10032() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10032");
        com.google.javascript.rhino.head.ast.Jump jump4 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump4.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump8 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump4, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int11 = scriptNode10.getEndLineno();
        int int12 = scriptNode10.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList13 = scriptNode10.getChildScopes();
        com.google.javascript.rhino.head.Node node14 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump4, (com.google.javascript.rhino.head.Node) scriptNode10);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList15 = scriptNode10.getFunctions();
        functionNodeList15.clear();
        com.google.javascript.rhino.head.ast.Jump jump21 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump21.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump25 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump21, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode27 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int28 = scriptNode27.getEndLineno();
        int int29 = scriptNode27.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList30 = scriptNode27.getChildScopes();
        com.google.javascript.rhino.head.Node node31 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump21, (com.google.javascript.rhino.head.Node) scriptNode27);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList32 = scriptNode27.getFunctions();
        functionNodeList32.clear();
        boolean boolean34 = functionNodeList15.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.FunctionNode>) functionNodeList32);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode35 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode36 = functionNode35.getTop();
        boolean boolean37 = functionNodeList15.contains((java.lang.Object) scriptNode36);
        com.google.javascript.rhino.head.ast.Jump jump42 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump42.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump46 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump42, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode48 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int49 = scriptNode48.getEndLineno();
        int int50 = scriptNode48.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList51 = scriptNode48.getChildScopes();
        com.google.javascript.rhino.head.Node node52 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump42, (com.google.javascript.rhino.head.Node) scriptNode48);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList53 = scriptNode48.getFunctions();
        java.util.Spliterator<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeSpliterator54 = functionNodeList53.spliterator();
        int int56 = functionNodeList53.indexOf((java.lang.Object) (byte) 10);
        boolean boolean57 = functionNodeList15.containsAll((java.util.Collection<com.google.javascript.rhino.head.ast.FunctionNode>) functionNodeList53);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode58 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int59 = functionNode58.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode60 = functionNode58.getTop();
        com.google.javascript.rhino.head.Node node61 = functionNode58.getLastSibling();
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList62 = functionNode58.getParams();
        boolean boolean63 = functionNodeList15.contains((java.lang.Object) astNodeList62);
        functionNodeList15.clear();
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNull(scopeList13);
        org.junit.Assert.assertNotNull(functionNodeList15);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertNull(scopeList30);
        org.junit.Assert.assertNotNull(functionNodeList32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(scriptNode36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertNull(scopeList51);
        org.junit.Assert.assertNotNull(functionNodeList53);
        org.junit.Assert.assertNotNull(functionNodeSpliterator54);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1));
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-1) + "'", int59 == (-1));
        org.junit.Assert.assertNotNull(scriptNode60);
        org.junit.Assert.assertNotNull(node61);
        org.junit.Assert.assertNotNull(astNodeList62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
    }

    @Test
    public void test10033() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10033");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode0 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int1 = functionNode0.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = functionNode0.getTop();
        com.google.javascript.rhino.head.ast.AstNode astNode3 = functionNode0.getBody();
        com.google.javascript.rhino.head.ast.Scope scope4 = functionNode0.getParentScope();
        com.google.javascript.rhino.head.ast.Jump jump10 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump10.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump14 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump10, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode16 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int17 = scriptNode16.getEndLineno();
        int int18 = scriptNode16.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList19 = scriptNode16.getChildScopes();
        com.google.javascript.rhino.head.Node node20 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump10, (com.google.javascript.rhino.head.Node) scriptNode16);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode22 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int23 = scriptNode22.getEndLineno();
        com.google.javascript.rhino.head.ast.RegExpLiteral regExpLiteral25 = new com.google.javascript.rhino.head.ast.RegExpLiteral((int) (short) 1);
        java.lang.String str27 = regExpLiteral25.toSource((int) (byte) 10);
        regExpLiteral25.setFlags("-1\tSCRIPT -1 1\n");
        regExpLiteral25.removeProp(8);
        com.google.javascript.rhino.head.Node node33 = new com.google.javascript.rhino.head.Node(10, node20, (com.google.javascript.rhino.head.Node) scriptNode22, (com.google.javascript.rhino.head.Node) regExpLiteral25, 3);
        java.lang.String str35 = regExpLiteral25.makeIndent((int) (short) 100);
        java.lang.String str37 = regExpLiteral25.toSource((int) (short) 10);
        functionNode0.addRegExp(regExpLiteral25);
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.ast.Jump jump39 = functionNode0.getLoop();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-1) + "'", int1 == (-1));
        org.junit.Assert.assertNotNull(scriptNode2);
        org.junit.Assert.assertNull(astNode3);
        org.junit.Assert.assertNull(scope4);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNull(scopeList19);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "                    /null/" + "'", str27, "                    /null/");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "                                                                                                                                                                                                        " + "'", str35, "                                                                                                                                                                                                        ");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "                    /null/-1\tSCRIPT -1 1\n" + "'", str37, "                    /null/-1\tSCRIPT -1 1\n");
    }

    @Test
    public void test10034() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10034");
        com.google.javascript.rhino.head.ast.Name name1 = null;
        com.google.javascript.rhino.head.ast.FunctionNode functionNode2 = new com.google.javascript.rhino.head.ast.FunctionNode(1, name1);
        boolean boolean3 = functionNode2.isGetterOrSetter();
        int int4 = functionNode2.getEncodedSourceEnd();
        boolean boolean5 = functionNode2.requiresActivation();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode8 = new com.google.javascript.rhino.head.ast.FunctionNode(0);
        int int9 = functionNode8.getBaseLineno();
        functionNode8.setSourceName("                                                                                                                                                                                                        /null/");
        functionNode8.setRequiresActivation();
        functionNode8.removeProp(0);
        functionNode2.putProp(9, (java.lang.Object) 0);
        com.google.javascript.rhino.head.ast.Symbol symbol17 = functionNode2.getSymbol("                                      ");
        int int18 = functionNode2.getPosition();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap19 = functionNode2.getSymbolTable();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNull(symbol17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertNull(strMap19);
    }

    @Test
    public void test10035() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10035");
        com.google.javascript.rhino.head.ast.Symbol symbol0 = new com.google.javascript.rhino.head.ast.Symbol();
        java.lang.String str1 = symbol0.getDeclTypeName();
        com.google.javascript.rhino.head.ast.Scope scope2 = symbol0.getContainingTable();
        int int3 = symbol0.getIndex();
        com.google.javascript.rhino.head.ast.RegExpLiteral regExpLiteral5 = new com.google.javascript.rhino.head.ast.RegExpLiteral((int) (short) 1);
        java.lang.String str7 = regExpLiteral5.toSource((int) (byte) 10);
        regExpLiteral5.setFlags("-1\tSCRIPT -1 1\n");
        java.lang.String str11 = regExpLiteral5.toSource((int) (short) -1);
        regExpLiteral5.setFlags("EOF");
        java.lang.String str15 = regExpLiteral5.makeIndent(10);
        regExpLiteral5.setValue("/null/EOF");
        symbol0.setNode((com.google.javascript.rhino.head.Node) regExpLiteral5);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "EOF" + "'", str1, "EOF");
        org.junit.Assert.assertNull(scope2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "                    /null/" + "'", str7, "                    /null/");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "/null/-1\tSCRIPT -1 1\n" + "'", str11, "/null/-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "                    " + "'", str15, "                    ");
    }

    @Test
    public void test10036() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10036");
        com.google.javascript.rhino.head.ast.Symbol symbol0 = new com.google.javascript.rhino.head.ast.Symbol();
        com.google.javascript.rhino.head.Node node1 = symbol0.getNode();
        symbol0.setIndex(4);
        com.google.javascript.rhino.head.ast.Scope scope4 = symbol0.getContainingTable();
        int int5 = symbol0.getDeclType();
        symbol0.setName("        /null/-1\tSCRIPT -1 1\n");
        com.google.javascript.rhino.head.ast.Scope scope8 = symbol0.getContainingTable();
        int int9 = symbol0.getDeclType();
        org.junit.Assert.assertNull(node1);
        org.junit.Assert.assertNull(scope4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNull(scope8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
    }

    @Test
    public void test10037() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10037");
        com.google.javascript.rhino.head.ast.Symbol symbol0 = new com.google.javascript.rhino.head.ast.Symbol();
        java.lang.String str1 = symbol0.getName();
        com.google.javascript.rhino.head.Node node2 = symbol0.getNode();
        java.lang.String str3 = symbol0.getDeclTypeName();
        com.google.javascript.rhino.head.Node node4 = symbol0.getNode();
        int int5 = symbol0.getIndex();
        com.google.javascript.rhino.head.Node node6 = null;
        symbol0.setNode(node6);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "EOF" + "'", str3, "EOF");
        org.junit.Assert.assertNull(node4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
    }

    @Test
    public void test10038() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10038");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode1 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int2 = functionNode1.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode3 = functionNode1.getTop();
        com.google.javascript.rhino.head.ast.Name name4 = null;
        functionNode1.setFunctionName(name4);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode6 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode7 = functionNode6.getTop();
        functionNode1.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode6);
        com.google.javascript.rhino.head.ast.Scope scope11 = new com.google.javascript.rhino.head.ast.Scope((int) (short) -1, 0);
        functionNode1.replaceWith(scope11);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode13 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int14 = functionNode13.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode15 = functionNode13.getTop();
        com.google.javascript.rhino.head.ast.Name name16 = null;
        functionNode13.setFunctionName(name16);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode18 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode19 = functionNode18.getTop();
        functionNode13.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode18);
        int int21 = functionNode1.addFunction(functionNode13);
        com.google.javascript.rhino.head.ast.RegExpLiteral regExpLiteral24 = new com.google.javascript.rhino.head.ast.RegExpLiteral((int) (short) 1);
        java.lang.String str26 = regExpLiteral24.toSource((int) (byte) 10);
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator27 = regExpLiteral24.new NodeIterator();
        java.lang.String str29 = regExpLiteral24.toSource(100);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode30 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int31 = functionNode30.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode32 = functionNode30.getTop();
        com.google.javascript.rhino.head.ast.Name name33 = null;
        functionNode30.setFunctionName(name33);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode35 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode36 = functionNode35.getTop();
        functionNode30.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode35);
        java.lang.String str38 = functionNode30.getNextTempName();
        com.google.javascript.rhino.head.Node node40 = new com.google.javascript.rhino.head.Node(350469479, (com.google.javascript.rhino.head.Node) regExpLiteral24, (com.google.javascript.rhino.head.Node) functionNode30, 7);
        com.google.javascript.rhino.head.Node node41 = new com.google.javascript.rhino.head.Node(19, (com.google.javascript.rhino.head.Node) functionNode13, (com.google.javascript.rhino.head.Node) functionNode30);
        int int42 = functionNode30.getRegexpCount();
        int int43 = functionNode30.getParamCount();
        functionNode30.setBaseLineno(3);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertNotNull(scriptNode3);
        org.junit.Assert.assertNotNull(scriptNode7);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNotNull(scriptNode15);
        org.junit.Assert.assertNotNull(scriptNode19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "                    /null/" + "'", str26, "                    /null/");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "                                                                                                                                                                                                        /null/" + "'", str29, "                                                                                                                                                                                                        /null/");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNotNull(scriptNode32);
        org.junit.Assert.assertNotNull(scriptNode36);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "$0" + "'", str38, "$0");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
    }

    @Test
    public void test10039() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10039");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int2 = scriptNode1.getEndLineno();
        int int3 = scriptNode1.getBaseLineno();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode4 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int5 = functionNode4.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode7 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        java.lang.String str8 = functionNode4.toStringTree(scriptNode7);
        functionNode4.setFunctionIsGetter();
        com.google.javascript.rhino.head.ast.AstNode astNode10 = functionNode4.getBody();
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList11 = functionNode4.getParams();
        scriptNode1.replaceWith((com.google.javascript.rhino.head.ast.Scope) functionNode4);
        int int13 = scriptNode1.getAbsolutePosition();
        com.google.javascript.rhino.head.ast.Jump jump19 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump19.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump23 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump19, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode25 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int26 = scriptNode25.getEndLineno();
        int int27 = scriptNode25.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList28 = scriptNode25.getChildScopes();
        com.google.javascript.rhino.head.Node node29 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump19, (com.google.javascript.rhino.head.Node) scriptNode25);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList30 = scriptNode25.getFunctions();
        int int31 = scriptNode25.getPosition();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList32 = scriptNode25.getChildScopes();
        int int33 = scriptNode25.getEncodedSourceEnd();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList34 = scriptNode25.getSymbols();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode35 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int36 = functionNode35.getLp();
        functionNode35.setEncodedSource("");
        functionNode35.flattenSymbolTable(false);
        com.google.javascript.rhino.head.ast.RegExpLiteral regExpLiteral42 = new com.google.javascript.rhino.head.ast.RegExpLiteral((int) (short) 1);
        java.lang.String str44 = regExpLiteral42.toSource((int) (byte) 10);
        regExpLiteral42.setFlags("-1\tSCRIPT -1 1\n");
        regExpLiteral42.removeProp(8);
        java.lang.String str49 = regExpLiteral42.getValue();
        com.google.javascript.rhino.head.Node node50 = new com.google.javascript.rhino.head.Node(7, (com.google.javascript.rhino.head.Node) scriptNode25, (com.google.javascript.rhino.head.Node) functionNode35, (com.google.javascript.rhino.head.Node) regExpLiteral42);
        functionNode35.flattenSymbolTable(false);
        com.google.javascript.rhino.head.ast.Scope scope55 = new com.google.javascript.rhino.head.ast.Scope(6, 4);
        java.lang.String str57 = scope55.toSource(8);
        functionNode35.setCompilerData((java.lang.Object) scope55);
        int int59 = scriptNode1.compareTo((com.google.javascript.rhino.head.ast.AstNode) functionNode35);
        functionNode35.setLp(97);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(astNode10);
        org.junit.Assert.assertNotNull(astNodeList11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNull(scopeList28);
        org.junit.Assert.assertNotNull(functionNodeList30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNull(scopeList32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertNotNull(symbolList34);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "                    /null/" + "'", str44, "                    /null/");
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "                {\n                }\n" + "'", str57, "                {\n                }\n");
// flaky:         org.junit.Assert.assertTrue("'" + int59 + "' != '" + 586615353 + "'", int59 == 586615353);
    }

    @Test
    public void test10040() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10040");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode0 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int1 = functionNode0.getLp();
        functionNode0.setEncodedSource("");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode4 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int5 = functionNode4.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = functionNode4.getTop();
        com.google.javascript.rhino.head.ast.Name name7 = null;
        functionNode4.setFunctionName(name7);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode9 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = functionNode9.getTop();
        functionNode4.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode9);
        int int12 = functionNode9.getRp();
        int int13 = functionNode9.getFunctionType();
        functionNode0.addParam((com.google.javascript.rhino.head.ast.AstNode) functionNode9);
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator15 = functionNode9.new NodeIterator();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList16 = functionNode9.getChildScopes();
        int int19 = functionNode9.getIntProp(108998301, (int) (short) -1);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-1) + "'", int1 == (-1));
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(scriptNode6);
        org.junit.Assert.assertNotNull(scriptNode10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNull(scopeList16);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
    }

    @Test
    public void test10041() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10041");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode0 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = functionNode0.getTop();
        functionNode0.setParens((int) (byte) 1, (int) (short) 1);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode5 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.Scope scope7 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 10);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode8 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode9 = functionNode8.getTop();
        functionNode8.setParens((int) (byte) 1, (int) (short) 1);
        functionNode8.setEncodedSourceStart((-1));
        functionNode8.setFunctionIsGetter();
        scope7.addChildToFront((com.google.javascript.rhino.head.Node) functionNode8);
        functionNode5.setBody((com.google.javascript.rhino.head.ast.AstNode) functionNode8);
        functionNode5.setFunctionIsSetter();
        int int19 = functionNode0.addFunction(functionNode5);
        java.lang.String str20 = functionNode0.getNextTempName();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode22 = new com.google.javascript.rhino.head.ast.FunctionNode(0);
        int int23 = functionNode22.getBaseLineno();
        functionNode22.setSourceName("                                                                                                                                                                                                        /null/");
        functionNode22.setRequiresActivation();
        functionNode0.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode22);
        com.google.javascript.rhino.head.ast.Jump jump30 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        com.google.javascript.rhino.head.ast.Scope scope32 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 10);
        jump30.addChildrenToBack((com.google.javascript.rhino.head.Node) scope32);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode34 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int35 = functionNode34.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode36 = functionNode34.getTop();
        com.google.javascript.rhino.head.ast.Name name37 = null;
        functionNode34.setFunctionName(name37);
        functionNode34.setIsGenerator();
        java.lang.String str40 = functionNode34.getEncodedSource();
        scope32.target = functionNode34;
        functionNode34.setFunctionIsSetter();
        com.google.javascript.rhino.head.ast.Symbol symbol44 = functionNode34.getSymbol("                    109");
        functionNode34.setEndLineno(10);
        functionNode22.addParam((com.google.javascript.rhino.head.ast.AstNode) functionNode34);
        com.google.javascript.rhino.head.ast.Scope scope48 = functionNode34.getEnclosingScope();
        // The following exception was thrown during execution in test generation
        try {
            functionNode34.setEndLineno(24);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(scriptNode1);
        org.junit.Assert.assertNotNull(scriptNode9);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "$0" + "'", str20, "$0");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertNotNull(scriptNode36);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNull(symbol44);
        org.junit.Assert.assertNotNull(scope48);
    }

    @Test
    public void test10042() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10042");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 10);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode2 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode3 = functionNode2.getTop();
        functionNode2.setParens((int) (byte) 1, (int) (short) 1);
        functionNode2.setEncodedSourceStart((-1));
        functionNode2.setFunctionIsGetter();
        scope1.addChildToFront((com.google.javascript.rhino.head.Node) functionNode2);
        functionNode2.setRp(19);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int15 = scriptNode14.getEndLineno();
        int int16 = scriptNode14.getBaseLineno();
        com.google.javascript.rhino.head.ast.Jump jump19 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode21 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int22 = scriptNode21.getEndLineno();
        int int23 = scriptNode21.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList24 = scriptNode21.getChildScopes();
        jump19.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode21);
        java.lang.String str26 = scriptNode21.debugPrint();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode14, (com.google.javascript.rhino.head.ast.Scope) scriptNode21);
        com.google.javascript.rhino.head.ast.Scope scope28 = new com.google.javascript.rhino.head.ast.Scope();
        scriptNode21.target = scope28;
        java.lang.String str30 = functionNode2.toStringTree(scriptNode21);
        java.lang.String str32 = scriptNode21.toSource((int) (short) 10);
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap33 = scriptNode21.getSymbolTable();
        int int34 = strMap33.size();
        com.google.javascript.rhino.head.ast.Jump jump39 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump39.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump43 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump39, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode45 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int46 = scriptNode45.getEndLineno();
        int int47 = scriptNode45.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList48 = scriptNode45.getChildScopes();
        com.google.javascript.rhino.head.Node node49 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump39, (com.google.javascript.rhino.head.Node) scriptNode45);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList50 = scriptNode45.getFunctions();
        functionNodeList50.clear();
        functionNodeList50.clear();
        com.google.javascript.rhino.head.ast.Jump jump57 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump57.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump61 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump57, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode63 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int64 = scriptNode63.getEndLineno();
        int int65 = scriptNode63.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList66 = scriptNode63.getChildScopes();
        com.google.javascript.rhino.head.Node node67 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump57, (com.google.javascript.rhino.head.Node) scriptNode63);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList68 = scriptNode63.getFunctions();
        java.util.Spliterator<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeSpliterator69 = functionNodeList68.spliterator();
        int int71 = functionNodeList68.indexOf((java.lang.Object) (byte) 10);
        boolean boolean72 = functionNodeList50.retainAll((java.util.Collection<com.google.javascript.rhino.head.ast.FunctionNode>) functionNodeList68);
        boolean boolean73 = strMap33.containsKey((java.lang.Object) functionNodeList50);
        java.util.Collection<com.google.javascript.rhino.head.ast.Symbol> symbolCollection74 = strMap33.values();
        com.google.javascript.rhino.head.Node node76 = com.google.javascript.rhino.head.Node.newNumber((double) '#');
        com.google.javascript.rhino.head.ast.Symbol symbol77 = strMap33.get((java.lang.Object) '#');
        com.google.javascript.rhino.head.ast.FunctionNode functionNode78 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int79 = functionNode78.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode80 = functionNode78.getTop();
        com.google.javascript.rhino.head.Node node81 = functionNode78.getLastSibling();
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList82 = functionNode78.getParams();
        com.google.javascript.rhino.head.ast.Symbol symbol83 = new com.google.javascript.rhino.head.ast.Symbol();
        int int84 = symbol83.getIndex();
        symbol83.setIndex(35);
        com.google.javascript.rhino.head.ast.Symbol symbol87 = strMap33.getOrDefault((java.lang.Object) functionNode78, symbol83);
        com.google.javascript.rhino.head.ast.Symbol symbol89 = new com.google.javascript.rhino.head.ast.Symbol();
        java.lang.String str90 = symbol89.getName();
        com.google.javascript.rhino.head.Node node91 = symbol89.getNode();
        java.lang.String str92 = symbol89.getDeclTypeName();
        com.google.javascript.rhino.head.ast.Scope scope93 = symbol89.getContainingTable();
        symbol89.setIndex(26);
        com.google.javascript.rhino.head.ast.Symbol symbol96 = strMap33.put("                                    /null/", symbol89);
        int int97 = symbol89.getIndex();
        org.junit.Assert.assertNotNull(scriptNode3);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNull(scopeList24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str26, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "                    {\n                    }\n" + "'", str32, "                    {\n                    }\n");
        org.junit.Assert.assertNotNull(strMap33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertNull(scopeList48);
        org.junit.Assert.assertNotNull(functionNodeList50);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + (-1) + "'", int64 == (-1));
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + (-1) + "'", int65 == (-1));
        org.junit.Assert.assertNull(scopeList66);
        org.junit.Assert.assertNotNull(functionNodeList68);
        org.junit.Assert.assertNotNull(functionNodeSpliterator69);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + (-1) + "'", int71 == (-1));
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(symbolCollection74);
        org.junit.Assert.assertNotNull(node76);
        org.junit.Assert.assertNull(symbol77);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + (-1) + "'", int79 == (-1));
        org.junit.Assert.assertNotNull(scriptNode80);
        org.junit.Assert.assertNotNull(node81);
        org.junit.Assert.assertNotNull(astNodeList82);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + (-1) + "'", int84 == (-1));
        org.junit.Assert.assertNotNull(symbol87);
        org.junit.Assert.assertNull(str90);
        org.junit.Assert.assertNull(node91);
        org.junit.Assert.assertEquals("'" + str92 + "' != '" + "EOF" + "'", str92, "EOF");
        org.junit.Assert.assertNull(scope93);
        org.junit.Assert.assertNull(symbol96);
        org.junit.Assert.assertTrue("'" + int97 + "' != '" + 26 + "'", int97 == 26);
    }

    @Test
    public void test10043() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10043");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode0 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int1 = functionNode0.getLp();
        functionNode0.setLp((int) (short) 1);
        int int6 = functionNode0.getIntProp(4, 26);
        boolean boolean7 = functionNode0.hasChildren();
        java.lang.String str8 = functionNode0.getNextTempName();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode9 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = functionNode9.getTop();
        com.google.javascript.rhino.head.ast.Name name11 = null;
        functionNode9.setFunctionName(name11);
        functionNode0.addChildScope((com.google.javascript.rhino.head.ast.Scope) functionNode9);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode14 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int15 = functionNode14.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode16 = functionNode14.getTop();
        boolean boolean17 = functionNode14.hasSideEffects();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode19 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int20 = scriptNode19.getEndLineno();
        int int21 = scriptNode19.getBaseLineno();
        com.google.javascript.rhino.head.ast.Jump jump24 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode26 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int27 = scriptNode26.getEndLineno();
        int int28 = scriptNode26.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList29 = scriptNode26.getChildScopes();
        jump24.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode26);
        java.lang.String str31 = scriptNode26.debugPrint();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode19, (com.google.javascript.rhino.head.ast.Scope) scriptNode26);
        com.google.javascript.rhino.head.ast.Scope scope33 = new com.google.javascript.rhino.head.ast.Scope();
        scriptNode26.target = scope33;
        functionNode14.addChildScope(scope33);
        boolean boolean36 = functionNode14.hasConsistentReturnUsage();
        functionNode0.addResumptionPoint((com.google.javascript.rhino.head.Node) functionNode14);
        java.util.Map<com.google.javascript.rhino.head.Node, int[]> nodeMap38 = functionNode0.getLiveLocals();
        com.google.javascript.rhino.head.ast.Name name39 = functionNode0.getFunctionName();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-1) + "'", int1 == (-1));
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 26 + "'", int6 == 26);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "$0" + "'", str8, "$0");
        org.junit.Assert.assertNotNull(scriptNode10);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(scriptNode16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNull(scopeList29);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str31, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNull(nodeMap38);
        org.junit.Assert.assertNull(name39);
    }

    @Test
    public void test10044() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10044");
        com.google.javascript.rhino.head.ast.Jump jump1 = new com.google.javascript.rhino.head.ast.Jump((int) (short) 0);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode2 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int3 = functionNode2.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode4 = functionNode2.getTop();
        com.google.javascript.rhino.head.ast.Name name5 = null;
        functionNode2.setFunctionName(name5);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode7 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode8 = functionNode7.getTop();
        functionNode2.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode7);
        functionNode7.setIsExpressionClosure(true);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode13 = new com.google.javascript.rhino.head.ast.FunctionNode((int) (byte) 100);
        int int14 = functionNode7.addFunction(functionNode13);
        int int15 = jump1.compareTo((com.google.javascript.rhino.head.ast.AstNode) functionNode13);
        int int16 = functionNode13.getFunctionType();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str18 = functionNode13.toSource((-1110578805));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(scriptNode4);
        org.junit.Assert.assertNotNull(scriptNode8);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
    }

    @Test
    public void test10045() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10045");
        com.google.javascript.rhino.head.Token.CommentType commentType6 = com.google.javascript.rhino.head.Token.CommentType.HTML;
        com.google.javascript.rhino.head.ast.Comment comment8 = new com.google.javascript.rhino.head.ast.Comment(20, 1, commentType6, "109");
        com.google.javascript.rhino.head.ast.Comment comment10 = new com.google.javascript.rhino.head.ast.Comment(136, 15, commentType6, "-1\tSCRIPT -1 1\n");
        com.google.javascript.rhino.head.Token.CommentType commentType11 = com.google.javascript.rhino.head.Token.CommentType.JSDOC;
        comment10.setCommentType(commentType11);
        com.google.javascript.rhino.head.Token.CommentType commentType13 = comment10.getCommentType();
        com.google.javascript.rhino.head.ast.Comment comment15 = new com.google.javascript.rhino.head.ast.Comment((-22), 1023344933, commentType13, "                                109");
        org.junit.Assert.assertTrue("'" + commentType6 + "' != '" + com.google.javascript.rhino.head.Token.CommentType.HTML + "'", commentType6.equals(com.google.javascript.rhino.head.Token.CommentType.HTML));
        org.junit.Assert.assertTrue("'" + commentType11 + "' != '" + com.google.javascript.rhino.head.Token.CommentType.JSDOC + "'", commentType11.equals(com.google.javascript.rhino.head.Token.CommentType.JSDOC));
        org.junit.Assert.assertTrue("'" + commentType13 + "' != '" + com.google.javascript.rhino.head.Token.CommentType.JSDOC + "'", commentType13.equals(com.google.javascript.rhino.head.Token.CommentType.JSDOC));
    }

    @Test
    public void test10046() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10046");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode0 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int1 = functionNode0.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = functionNode0.getTop();
        com.google.javascript.rhino.head.ast.Name name3 = null;
        functionNode0.setFunctionName(name3);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode5 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = functionNode5.getTop();
        functionNode0.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode5);
        java.lang.String str8 = functionNode0.getNextTempName();
        java.lang.String str9 = functionNode0.getEncodedSource();
        functionNode0.setIsGenerator();
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList11 = functionNode0.getFunctions();
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList12 = functionNode0.getFunctions();
        int int13 = functionNode0.getParamCount();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-1) + "'", int1 == (-1));
        org.junit.Assert.assertNotNull(scriptNode2);
        org.junit.Assert.assertNotNull(scriptNode6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "$0" + "'", str8, "$0");
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(functionNodeList11);
        org.junit.Assert.assertNotNull(functionNodeList12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
    }

    @Test
    public void test10047() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10047");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode0 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int1 = functionNode0.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode3 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        java.lang.String str4 = functionNode0.toStringTree(scriptNode3);
        java.lang.String str5 = functionNode0.shortName();
        boolean boolean6 = functionNode0.isGetter();
        com.google.javascript.rhino.head.ast.Scope scope8 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 10);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode9 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = functionNode9.getTop();
        functionNode9.setParens((int) (byte) 1, (int) (short) 1);
        functionNode9.setEncodedSourceStart((-1));
        functionNode9.setFunctionIsGetter();
        scope8.addChildToFront((com.google.javascript.rhino.head.Node) functionNode9);
        functionNode9.setRp(19);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode21 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int22 = scriptNode21.getEndLineno();
        int int23 = scriptNode21.getBaseLineno();
        com.google.javascript.rhino.head.ast.Jump jump26 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode28 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int29 = scriptNode28.getEndLineno();
        int int30 = scriptNode28.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList31 = scriptNode28.getChildScopes();
        jump26.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode28);
        java.lang.String str33 = scriptNode28.debugPrint();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode21, (com.google.javascript.rhino.head.ast.Scope) scriptNode28);
        com.google.javascript.rhino.head.ast.Scope scope35 = new com.google.javascript.rhino.head.ast.Scope();
        scriptNode28.target = scope35;
        java.lang.String str37 = functionNode9.toStringTree(scriptNode28);
        java.lang.String str39 = scriptNode28.toSource((int) (short) 10);
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap40 = scriptNode28.getSymbolTable();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode42 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int43 = scriptNode42.getEndLineno();
        int int44 = scriptNode42.getBaseLineno();
        scriptNode42.removeProp(0);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList47 = scriptNode42.getSymbols();
        boolean boolean48 = strMap40.containsValue((java.lang.Object) symbolList47);
        com.google.javascript.rhino.head.ast.Symbol symbol50 = new com.google.javascript.rhino.head.ast.Symbol();
        java.lang.String str51 = symbol50.getDeclTypeName();
        com.google.javascript.rhino.head.ast.Scope scope52 = symbol50.getContainingTable();
        symbol50.setName("                                      109");
        com.google.javascript.rhino.head.Node node55 = symbol50.getNode();
        com.google.javascript.rhino.head.ast.Symbol symbol56 = new com.google.javascript.rhino.head.ast.Symbol();
        com.google.javascript.rhino.head.Node node57 = symbol56.getNode();
        symbol56.setIndex(4);
        java.lang.String str60 = symbol56.getDeclTypeName();
        java.lang.String str61 = symbol56.toString();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode62 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int63 = functionNode62.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode64 = functionNode62.getTop();
        boolean boolean65 = functionNode62.hasSideEffects();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode67 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int68 = scriptNode67.getEndLineno();
        int int69 = scriptNode67.getBaseLineno();
        com.google.javascript.rhino.head.ast.Jump jump72 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode74 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int75 = scriptNode74.getEndLineno();
        int int76 = scriptNode74.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList77 = scriptNode74.getChildScopes();
        jump72.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode74);
        java.lang.String str79 = scriptNode74.debugPrint();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode67, (com.google.javascript.rhino.head.ast.Scope) scriptNode74);
        com.google.javascript.rhino.head.ast.Scope scope81 = new com.google.javascript.rhino.head.ast.Scope();
        scriptNode74.target = scope81;
        functionNode62.addChildScope(scope81);
        boolean boolean84 = functionNode62.isGetter();
        symbol56.setNode((com.google.javascript.rhino.head.Node) functionNode62);
        boolean boolean86 = strMap40.replace("{\n}\n", symbol50, symbol56);
        java.util.Set<java.util.Map.Entry<java.lang.String, com.google.javascript.rhino.head.ast.Symbol>> strEntrySet87 = strMap40.entrySet();
        int int88 = strMap40.size();
        functionNode0.setSymbolTable(strMap40);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList90 = functionNode0.getSymbols();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-1) + "'", int1 == (-1));
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "FunctionNode" + "'", str5, "FunctionNode");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(scriptNode10);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertNull(scopeList31);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str33, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "                    {\n                    }\n" + "'", str39, "                    {\n                    }\n");
        org.junit.Assert.assertNotNull(strMap40);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertNotNull(symbolList47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "EOF" + "'", str51, "EOF");
        org.junit.Assert.assertNull(scope52);
        org.junit.Assert.assertNull(node55);
        org.junit.Assert.assertNull(node57);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "EOF" + "'", str60, "EOF");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "Symbol (EOF) name=null" + "'", str61, "Symbol (EOF) name=null");
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + (-1) + "'", int63 == (-1));
        org.junit.Assert.assertNotNull(scriptNode64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + (-1) + "'", int68 == (-1));
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + (-1) + "'", int69 == (-1));
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + (-1) + "'", int75 == (-1));
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + (-1) + "'", int76 == (-1));
        org.junit.Assert.assertNull(scopeList77);
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str79, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertNotNull(strEntrySet87);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + 0 + "'", int88 == 0);
        org.junit.Assert.assertNotNull(symbolList90);
    }

    @Test
    public void test10048() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10048");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode1 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = functionNode1.getTop();
        com.google.javascript.rhino.head.ast.Name name3 = null;
        functionNode1.setFunctionName(name3);
        boolean boolean5 = functionNode1.requiresActivation();
        com.google.javascript.rhino.head.ast.Jump jump9 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump9.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump13 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump9, 0);
        com.google.javascript.rhino.head.ast.Jump jump17 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump17.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump21 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump17, 0);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode22 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int23 = functionNode22.getLp();
        functionNode22.setEncodedSource("");
        functionNode22.flattenSymbolTable(false);
        jump9.addChildAfter((com.google.javascript.rhino.head.Node) jump17, (com.google.javascript.rhino.head.Node) functionNode22);
        com.google.javascript.rhino.head.Node node29 = functionNode22.target;
        functionNode1.setBody((com.google.javascript.rhino.head.ast.AstNode) functionNode22);
        com.google.javascript.rhino.head.Node node32 = new com.google.javascript.rhino.head.Node(10, (com.google.javascript.rhino.head.Node) functionNode22, 10);
        java.lang.String str33 = functionNode22.getEncodedSource();
        // The following exception was thrown during execution in test generation
        try {
            functionNode22.setBaseLineno((-532790313));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(scriptNode2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNull(node29);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "" + "'", str33, "");
    }

    @Test
    public void test10049() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10049");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode0 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 10);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode3 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode4 = functionNode3.getTop();
        functionNode3.setParens((int) (byte) 1, (int) (short) 1);
        functionNode3.setEncodedSourceStart((-1));
        functionNode3.setFunctionIsGetter();
        scope2.addChildToFront((com.google.javascript.rhino.head.Node) functionNode3);
        functionNode0.setBody((com.google.javascript.rhino.head.ast.AstNode) functionNode3);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode13 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = functionNode13.getTop();
        functionNode13.setParens((int) (byte) 1, (int) (short) 1);
        functionNode13.setEncodedSourceStart((-1));
        java.util.List<com.google.javascript.rhino.head.Node> nodeList20 = functionNode13.getResumptionPoints();
        int int21 = functionNode13.getLp();
        functionNode0.setBody((com.google.javascript.rhino.head.ast.AstNode) functionNode13);
        int int23 = functionNode0.getLineno();
        com.google.javascript.rhino.head.ast.Scope scope24 = functionNode0.getParentScope();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator25 = functionNode0.new NodeIterator();
        org.junit.Assert.assertNotNull(scriptNode4);
        org.junit.Assert.assertNotNull(scriptNode14);
        org.junit.Assert.assertNull(nodeList20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNull(scope24);
    }

    @Test
    public void test10050() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10050");
        com.google.javascript.rhino.head.ast.Jump jump4 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump4.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump8 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump4, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int11 = scriptNode10.getEndLineno();
        int int12 = scriptNode10.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList13 = scriptNode10.getChildScopes();
        com.google.javascript.rhino.head.Node node14 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump4, (com.google.javascript.rhino.head.Node) scriptNode10);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList15 = scriptNode10.getFunctions();
        functionNodeList15.clear();
        functionNodeList15.clear();
        java.util.Iterator<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeItor18 = functionNodeList15.iterator();
        com.google.javascript.rhino.head.ast.RegExpLiteral regExpLiteral20 = new com.google.javascript.rhino.head.ast.RegExpLiteral((int) (short) 1);
        java.lang.String str22 = regExpLiteral20.toSource((int) (byte) 10);
        regExpLiteral20.setFlags("-1\tSCRIPT -1 1\n");
        regExpLiteral20.removeProp(8);
        java.lang.String str27 = regExpLiteral20.getValue();
        regExpLiteral20.setLineno(10);
        regExpLiteral20.removeChildren();
        boolean boolean31 = functionNodeList15.equals((java.lang.Object) regExpLiteral20);
        com.google.javascript.rhino.head.ast.Jump jump32 = new com.google.javascript.rhino.head.ast.Jump();
        boolean boolean33 = functionNodeList15.remove((java.lang.Object) jump32);
        int int34 = functionNodeList15.size();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode35 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int36 = functionNode35.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode37 = functionNode35.getTop();
        boolean boolean38 = functionNode35.hasSideEffects();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList39 = functionNode35.getSymbols();
        functionNode35.setRp(5);
        com.google.javascript.rhino.head.ast.Scope scope42 = functionNode35.getEnclosingScope();
        functionNode35.setLineno(5);
        functionNode35.setIsExpressionClosure(false);
        functionNode35.setEncodedSourceBounds(0, (-2));
        functionNode35.setLength(12);
        functionNode35.setRelative((-601958044));
        int int54 = functionNodeList15.indexOf((java.lang.Object) (-601958044));
        java.util.ListIterator<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeItor55 = functionNodeList15.listIterator();
        com.google.javascript.rhino.head.ast.Jump jump60 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump60.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump64 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump60, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode66 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int67 = scriptNode66.getEndLineno();
        int int68 = scriptNode66.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList69 = scriptNode66.getChildScopes();
        com.google.javascript.rhino.head.Node node70 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump60, (com.google.javascript.rhino.head.Node) scriptNode66);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList71 = scriptNode66.getFunctions();
        functionNodeList71.clear();
        com.google.javascript.rhino.head.ast.Jump jump77 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump77.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump81 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump77, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode83 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int84 = scriptNode83.getEndLineno();
        int int85 = scriptNode83.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList86 = scriptNode83.getChildScopes();
        com.google.javascript.rhino.head.Node node87 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump77, (com.google.javascript.rhino.head.Node) scriptNode83);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList88 = scriptNode83.getFunctions();
        boolean boolean89 = functionNodeList71.removeAll((java.util.Collection<com.google.javascript.rhino.head.ast.FunctionNode>) functionNodeList88);
        java.util.Spliterator<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeSpliterator90 = functionNodeList71.spliterator();
        boolean boolean91 = functionNodeList71.isEmpty();
        java.util.Spliterator<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeSpliterator92 = functionNodeList71.spliterator();
        functionNodeList71.clear();
        boolean boolean94 = functionNodeList15.containsAll((java.util.Collection<com.google.javascript.rhino.head.ast.FunctionNode>) functionNodeList71);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNull(scopeList13);
        org.junit.Assert.assertNotNull(functionNodeList15);
        org.junit.Assert.assertNotNull(functionNodeItor18);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "                    /null/" + "'", str22, "                    /null/");
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNotNull(scriptNode37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(symbolList39);
        org.junit.Assert.assertNull(scope42);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
        org.junit.Assert.assertNotNull(functionNodeItor55);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + (-1) + "'", int67 == (-1));
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + (-1) + "'", int68 == (-1));
        org.junit.Assert.assertNull(scopeList69);
        org.junit.Assert.assertNotNull(functionNodeList71);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + (-1) + "'", int84 == (-1));
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + (-1) + "'", int85 == (-1));
        org.junit.Assert.assertNull(scopeList86);
        org.junit.Assert.assertNotNull(functionNodeList88);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertNotNull(functionNodeSpliterator90);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
        org.junit.Assert.assertNotNull(functionNodeSpliterator92);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + true + "'", boolean94 == true);
    }

    @Test
    public void test10051() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10051");
        com.google.javascript.rhino.head.ast.Symbol symbol0 = new com.google.javascript.rhino.head.ast.Symbol();
        symbol0.setIndex(6);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode3 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int4 = functionNode3.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        java.lang.String str7 = functionNode3.toStringTree(scriptNode6);
        java.lang.String str8 = functionNode3.shortName();
        boolean boolean9 = functionNode3.isGetter();
        com.google.javascript.rhino.head.ast.Scope scope11 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 10);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode12 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode13 = functionNode12.getTop();
        functionNode12.setParens((int) (byte) 1, (int) (short) 1);
        functionNode12.setEncodedSourceStart((-1));
        functionNode12.setFunctionIsGetter();
        scope11.addChildToFront((com.google.javascript.rhino.head.Node) functionNode12);
        functionNode12.setRp(19);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode24 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int25 = scriptNode24.getEndLineno();
        int int26 = scriptNode24.getBaseLineno();
        com.google.javascript.rhino.head.ast.Jump jump29 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode31 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int32 = scriptNode31.getEndLineno();
        int int33 = scriptNode31.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList34 = scriptNode31.getChildScopes();
        jump29.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode31);
        java.lang.String str36 = scriptNode31.debugPrint();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode24, (com.google.javascript.rhino.head.ast.Scope) scriptNode31);
        com.google.javascript.rhino.head.ast.Scope scope38 = new com.google.javascript.rhino.head.ast.Scope();
        scriptNode31.target = scope38;
        java.lang.String str40 = functionNode12.toStringTree(scriptNode31);
        java.lang.String str42 = scriptNode31.toSource((int) (short) 10);
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap43 = scriptNode31.getSymbolTable();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode45 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int46 = scriptNode45.getEndLineno();
        int int47 = scriptNode45.getBaseLineno();
        scriptNode45.removeProp(0);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList50 = scriptNode45.getSymbols();
        boolean boolean51 = strMap43.containsValue((java.lang.Object) symbolList50);
        com.google.javascript.rhino.head.ast.Symbol symbol53 = new com.google.javascript.rhino.head.ast.Symbol();
        java.lang.String str54 = symbol53.getDeclTypeName();
        com.google.javascript.rhino.head.ast.Scope scope55 = symbol53.getContainingTable();
        symbol53.setName("                                      109");
        com.google.javascript.rhino.head.Node node58 = symbol53.getNode();
        com.google.javascript.rhino.head.ast.Symbol symbol59 = new com.google.javascript.rhino.head.ast.Symbol();
        com.google.javascript.rhino.head.Node node60 = symbol59.getNode();
        symbol59.setIndex(4);
        java.lang.String str63 = symbol59.getDeclTypeName();
        java.lang.String str64 = symbol59.toString();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode65 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int66 = functionNode65.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode67 = functionNode65.getTop();
        boolean boolean68 = functionNode65.hasSideEffects();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode70 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int71 = scriptNode70.getEndLineno();
        int int72 = scriptNode70.getBaseLineno();
        com.google.javascript.rhino.head.ast.Jump jump75 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode77 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int78 = scriptNode77.getEndLineno();
        int int79 = scriptNode77.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList80 = scriptNode77.getChildScopes();
        jump75.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode77);
        java.lang.String str82 = scriptNode77.debugPrint();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode70, (com.google.javascript.rhino.head.ast.Scope) scriptNode77);
        com.google.javascript.rhino.head.ast.Scope scope84 = new com.google.javascript.rhino.head.ast.Scope();
        scriptNode77.target = scope84;
        functionNode65.addChildScope(scope84);
        boolean boolean87 = functionNode65.isGetter();
        symbol59.setNode((com.google.javascript.rhino.head.Node) functionNode65);
        boolean boolean89 = strMap43.replace("{\n}\n", symbol53, symbol59);
        java.util.Set<java.util.Map.Entry<java.lang.String, com.google.javascript.rhino.head.ast.Symbol>> strEntrySet90 = strMap43.entrySet();
        int int91 = strMap43.size();
        functionNode3.setSymbolTable(strMap43);
        symbol0.setNode((com.google.javascript.rhino.head.Node) functionNode3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "FunctionNode" + "'", str8, "FunctionNode");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(scriptNode13);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertNull(scopeList34);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str36, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "                    {\n                    }\n" + "'", str42, "                    {\n                    }\n");
        org.junit.Assert.assertNotNull(strMap43);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertNotNull(symbolList50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "EOF" + "'", str54, "EOF");
        org.junit.Assert.assertNull(scope55);
        org.junit.Assert.assertNull(node58);
        org.junit.Assert.assertNull(node60);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "EOF" + "'", str63, "EOF");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "Symbol (EOF) name=null" + "'", str64, "Symbol (EOF) name=null");
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + (-1) + "'", int66 == (-1));
        org.junit.Assert.assertNotNull(scriptNode67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + (-1) + "'", int71 == (-1));
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + (-1) + "'", int72 == (-1));
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + (-1) + "'", int78 == (-1));
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + (-1) + "'", int79 == (-1));
        org.junit.Assert.assertNull(scopeList80);
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str82, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertNotNull(strEntrySet90);
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + 0 + "'", int91 == 0);
    }

    @Test
    public void test10052() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10052");
        com.google.javascript.rhino.head.Token.CommentType commentType2 = com.google.javascript.rhino.head.Token.CommentType.JSDOC;
        com.google.javascript.rhino.head.ast.Comment comment4 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 10, 20, commentType2, "                {\n                }\n");
        com.google.javascript.rhino.head.Token.CommentType commentType7 = com.google.javascript.rhino.head.Token.CommentType.HTML;
        com.google.javascript.rhino.head.ast.Comment comment9 = new com.google.javascript.rhino.head.ast.Comment(20, 1, commentType7, "109");
        java.lang.String str11 = comment9.toSource(19);
        java.lang.String str12 = comment9.getValue();
        java.lang.String str13 = comment9.getValue();
        com.google.javascript.rhino.head.Token.CommentType commentType14 = com.google.javascript.rhino.head.Token.CommentType.LINE;
        comment9.setCommentType(commentType14);
        comment4.setCommentType(commentType14);
        java.lang.String str18 = comment4.toSource(16);
        com.google.javascript.rhino.head.Token.CommentType commentType19 = comment4.getCommentType();
        com.google.javascript.rhino.head.Token.CommentType commentType26 = com.google.javascript.rhino.head.Token.CommentType.HTML;
        com.google.javascript.rhino.head.ast.Comment comment28 = new com.google.javascript.rhino.head.ast.Comment(20, 1, commentType26, "109");
        com.google.javascript.rhino.head.ast.Comment comment30 = new com.google.javascript.rhino.head.ast.Comment(20, 1579347477, commentType26, "$0");
        com.google.javascript.rhino.head.Token.CommentType commentType37 = com.google.javascript.rhino.head.Token.CommentType.HTML;
        com.google.javascript.rhino.head.ast.Comment comment39 = new com.google.javascript.rhino.head.ast.Comment(20, 1, commentType37, "109");
        com.google.javascript.rhino.head.ast.Comment comment41 = new com.google.javascript.rhino.head.ast.Comment(136, 15, commentType37, "-1\tSCRIPT -1 1\n");
        com.google.javascript.rhino.head.Token.CommentType commentType42 = com.google.javascript.rhino.head.Token.CommentType.JSDOC;
        comment41.setCommentType(commentType42);
        com.google.javascript.rhino.head.ast.Comment comment45 = new com.google.javascript.rhino.head.ast.Comment(7, (int) (byte) 0, commentType42, "  {\n  }\n");
        com.google.javascript.rhino.head.Token.CommentType commentType50 = com.google.javascript.rhino.head.Token.CommentType.HTML;
        com.google.javascript.rhino.head.ast.Comment comment52 = new com.google.javascript.rhino.head.ast.Comment(20, 1, commentType50, "109");
        com.google.javascript.rhino.head.ast.Comment comment54 = new com.google.javascript.rhino.head.ast.Comment(136, 15, commentType50, "-1\tSCRIPT -1 1\n");
        com.google.javascript.rhino.head.Token.CommentType commentType55 = com.google.javascript.rhino.head.Token.CommentType.JSDOC;
        comment54.setCommentType(commentType55);
        com.google.javascript.rhino.head.Token.CommentType commentType57 = com.google.javascript.rhino.head.Token.CommentType.JSDOC;
        comment54.setCommentType(commentType57);
        com.google.javascript.rhino.head.Token.CommentType commentType61 = com.google.javascript.rhino.head.Token.CommentType.HTML;
        com.google.javascript.rhino.head.ast.Comment comment63 = new com.google.javascript.rhino.head.ast.Comment(20, (int) (short) -1, commentType61, "EOF");
        comment54.setCommentType(commentType61);
        comment45.setCommentType(commentType61);
        com.google.javascript.rhino.head.Token.CommentType commentType66 = comment45.getCommentType();
        com.google.javascript.rhino.head.Token.CommentType commentType69 = com.google.javascript.rhino.head.Token.CommentType.LINE;
        com.google.javascript.rhino.head.ast.Comment comment71 = new com.google.javascript.rhino.head.ast.Comment((int) (short) 1, (int) (byte) 100, commentType69, "                                                                                                                                                                                                        ");
        comment45.setCommentType(commentType69);
        comment30.setCommentType(commentType69);
        com.google.javascript.rhino.head.ast.Comment comment75 = new com.google.javascript.rhino.head.ast.Comment((-860972433), (int) (byte) 10, commentType69, "40");
        java.lang.String str76 = comment75.getValue();
        com.google.javascript.rhino.head.Token.CommentType commentType79 = com.google.javascript.rhino.head.Token.CommentType.HTML;
        com.google.javascript.rhino.head.ast.Comment comment81 = new com.google.javascript.rhino.head.ast.Comment(20, (int) (short) -1, commentType79, "EOF");
        java.lang.String str82 = comment81.getValue();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode83 = comment81.getEnclosingFunction();
        com.google.javascript.rhino.head.Token.CommentType commentType84 = comment81.getCommentType();
        comment75.setCommentType(commentType84);
        comment4.setCommentType(commentType84);
        org.junit.Assert.assertTrue("'" + commentType2 + "' != '" + com.google.javascript.rhino.head.Token.CommentType.JSDOC + "'", commentType2.equals(com.google.javascript.rhino.head.Token.CommentType.JSDOC));
        org.junit.Assert.assertTrue("'" + commentType7 + "' != '" + com.google.javascript.rhino.head.Token.CommentType.HTML + "'", commentType7.equals(com.google.javascript.rhino.head.Token.CommentType.HTML));
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "                                      109" + "'", str11, "                                      109");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "109" + "'", str12, "109");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "109" + "'", str13, "109");
        org.junit.Assert.assertTrue("'" + commentType14 + "' != '" + com.google.javascript.rhino.head.Token.CommentType.LINE + "'", commentType14.equals(com.google.javascript.rhino.head.Token.CommentType.LINE));
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "                                                {\n                }\n" + "'", str18, "                                                {\n                }\n");
        org.junit.Assert.assertTrue("'" + commentType19 + "' != '" + com.google.javascript.rhino.head.Token.CommentType.LINE + "'", commentType19.equals(com.google.javascript.rhino.head.Token.CommentType.LINE));
        org.junit.Assert.assertTrue("'" + commentType26 + "' != '" + com.google.javascript.rhino.head.Token.CommentType.HTML + "'", commentType26.equals(com.google.javascript.rhino.head.Token.CommentType.HTML));
        org.junit.Assert.assertTrue("'" + commentType37 + "' != '" + com.google.javascript.rhino.head.Token.CommentType.HTML + "'", commentType37.equals(com.google.javascript.rhino.head.Token.CommentType.HTML));
        org.junit.Assert.assertTrue("'" + commentType42 + "' != '" + com.google.javascript.rhino.head.Token.CommentType.JSDOC + "'", commentType42.equals(com.google.javascript.rhino.head.Token.CommentType.JSDOC));
        org.junit.Assert.assertTrue("'" + commentType50 + "' != '" + com.google.javascript.rhino.head.Token.CommentType.HTML + "'", commentType50.equals(com.google.javascript.rhino.head.Token.CommentType.HTML));
        org.junit.Assert.assertTrue("'" + commentType55 + "' != '" + com.google.javascript.rhino.head.Token.CommentType.JSDOC + "'", commentType55.equals(com.google.javascript.rhino.head.Token.CommentType.JSDOC));
        org.junit.Assert.assertTrue("'" + commentType57 + "' != '" + com.google.javascript.rhino.head.Token.CommentType.JSDOC + "'", commentType57.equals(com.google.javascript.rhino.head.Token.CommentType.JSDOC));
        org.junit.Assert.assertTrue("'" + commentType61 + "' != '" + com.google.javascript.rhino.head.Token.CommentType.HTML + "'", commentType61.equals(com.google.javascript.rhino.head.Token.CommentType.HTML));
        org.junit.Assert.assertTrue("'" + commentType66 + "' != '" + com.google.javascript.rhino.head.Token.CommentType.HTML + "'", commentType66.equals(com.google.javascript.rhino.head.Token.CommentType.HTML));
        org.junit.Assert.assertTrue("'" + commentType69 + "' != '" + com.google.javascript.rhino.head.Token.CommentType.LINE + "'", commentType69.equals(com.google.javascript.rhino.head.Token.CommentType.LINE));
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "40" + "'", str76, "40");
        org.junit.Assert.assertTrue("'" + commentType79 + "' != '" + com.google.javascript.rhino.head.Token.CommentType.HTML + "'", commentType79.equals(com.google.javascript.rhino.head.Token.CommentType.HTML));
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "EOF" + "'", str82, "EOF");
        org.junit.Assert.assertNull(functionNode83);
        org.junit.Assert.assertTrue("'" + commentType84 + "' != '" + com.google.javascript.rhino.head.Token.CommentType.HTML + "'", commentType84.equals(com.google.javascript.rhino.head.Token.CommentType.HTML));
    }

    @Test
    public void test10053() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10053");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int2 = scriptNode1.getEndLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode4 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int5 = scriptNode4.getEndLineno();
        scriptNode1.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode4);
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator7 = scriptNode1.new NodeIterator();
        boolean boolean8 = nodeIterator7.hasNext();
        boolean boolean9 = nodeIterator7.hasNext();
        com.google.javascript.rhino.head.Node node10 = nodeIterator7.next();
        nodeIterator7.remove();
        nodeIterator7.remove();
        boolean boolean13 = nodeIterator7.hasNext();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(node10);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test10054() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10054");
        com.google.javascript.rhino.head.ast.RegExpLiteral regExpLiteral2 = new com.google.javascript.rhino.head.ast.RegExpLiteral(23, 349600310);
    }

    @Test
    public void test10055() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10055");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 10);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode2 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode3 = functionNode2.getTop();
        functionNode2.setParens((int) (byte) 1, (int) (short) 1);
        functionNode2.setEncodedSourceStart((-1));
        functionNode2.setFunctionIsGetter();
        scope1.addChildToFront((com.google.javascript.rhino.head.Node) functionNode2);
        functionNode2.setRp(19);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int15 = scriptNode14.getEndLineno();
        int int16 = scriptNode14.getBaseLineno();
        com.google.javascript.rhino.head.ast.Jump jump19 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode21 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int22 = scriptNode21.getEndLineno();
        int int23 = scriptNode21.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList24 = scriptNode21.getChildScopes();
        jump19.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode21);
        java.lang.String str26 = scriptNode21.debugPrint();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode14, (com.google.javascript.rhino.head.ast.Scope) scriptNode21);
        com.google.javascript.rhino.head.ast.Scope scope28 = new com.google.javascript.rhino.head.ast.Scope();
        scriptNode21.target = scope28;
        java.lang.String str30 = functionNode2.toStringTree(scriptNode21);
        java.lang.String str32 = scriptNode21.toSource((int) (short) 10);
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap33 = scriptNode21.getSymbolTable();
        java.util.Collection<com.google.javascript.rhino.head.ast.Symbol> symbolCollection34 = strMap33.values();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode35 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int36 = functionNode35.getLp();
        com.google.javascript.rhino.head.ast.Scope scope39 = new com.google.javascript.rhino.head.ast.Scope(15, (int) (byte) 0);
        com.google.javascript.rhino.head.ast.Symbol symbol41 = scope39.getSymbol("");
        com.google.javascript.rhino.head.ast.Name name43 = null;
        com.google.javascript.rhino.head.ast.FunctionNode functionNode44 = new com.google.javascript.rhino.head.ast.FunctionNode(1, name43);
        boolean boolean45 = functionNode44.isGetterOrSetter();
        int int46 = functionNode44.getEncodedSourceEnd();
        scope39.addChildrenToBack((com.google.javascript.rhino.head.Node) functionNode44);
        boolean boolean48 = strMap33.remove((java.lang.Object) int36, (java.lang.Object) functionNode44);
        java.util.Set<java.lang.String> strSet49 = strMap33.keySet();
        com.google.javascript.rhino.head.ast.Symbol symbol51 = new com.google.javascript.rhino.head.ast.Symbol();
        com.google.javascript.rhino.head.Node node52 = symbol51.getNode();
        int int53 = symbol51.getDeclType();
        java.lang.String str54 = symbol51.toString();
        int int55 = symbol51.getIndex();
        java.lang.String str56 = symbol51.getDeclTypeName();
        com.google.javascript.rhino.head.ast.Symbol symbol57 = strMap33.replace("1299931104\tSCRIPT 1299931104 1\n", symbol51);
        org.junit.Assert.assertNotNull(scriptNode3);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNull(scopeList24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str26, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "                    {\n                    }\n" + "'", str32, "                    {\n                    }\n");
        org.junit.Assert.assertNotNull(strMap33);
        org.junit.Assert.assertNotNull(symbolCollection34);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNull(symbol41);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(strSet49);
        org.junit.Assert.assertNull(node52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "Symbol (EOF) name=null" + "'", str54, "Symbol (EOF) name=null");
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1));
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "EOF" + "'", str56, "EOF");
        org.junit.Assert.assertNull(symbol57);
    }

    @Test
    public void test10056() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10056");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode1 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int2 = functionNode1.getLp();
        functionNode1.setEncodedSource("");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode5 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int6 = functionNode5.getLp();
        functionNode5.setEncodedSource("");
        functionNode5.flattenSymbolTable(false);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode11 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int12 = functionNode11.getLp();
        com.google.javascript.rhino.head.Node node14 = new com.google.javascript.rhino.head.Node((-1), (com.google.javascript.rhino.head.Node) functionNode1, (com.google.javascript.rhino.head.Node) functionNode5, (com.google.javascript.rhino.head.Node) functionNode11, (int) '#');
        com.google.javascript.rhino.head.ast.Comment comment15 = functionNode11.getJsDocNode();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode16 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.Scope scope18 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 10);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode19 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode20 = functionNode19.getTop();
        functionNode19.setParens((int) (byte) 1, (int) (short) 1);
        functionNode19.setEncodedSourceStart((-1));
        functionNode19.setFunctionIsGetter();
        scope18.addChildToFront((com.google.javascript.rhino.head.Node) functionNode19);
        functionNode16.setBody((com.google.javascript.rhino.head.ast.AstNode) functionNode19);
        boolean boolean29 = functionNode11.isParam((com.google.javascript.rhino.head.ast.AstNode) functionNode16);
        functionNode11.setFunctionType(13);
        functionNode11.setRp(19);
        boolean boolean34 = functionNode11.isGenerator();
        int int35 = functionNode11.getEndLineno();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNull(comment15);
        org.junit.Assert.assertNotNull(scriptNode20);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
    }

    @Test
    public void test10057() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10057");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode2 = new com.google.javascript.rhino.head.ast.FunctionNode(13);
        int int3 = functionNode2.getType();
        com.google.javascript.rhino.head.Node node4 = new com.google.javascript.rhino.head.Node(24, (com.google.javascript.rhino.head.Node) functionNode2);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int7 = scriptNode6.getEndLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode9 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int10 = scriptNode9.getEndLineno();
        scriptNode6.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode9);
        com.google.javascript.rhino.head.ast.Scope scope12 = scriptNode9.getParentScope();
        com.google.javascript.rhino.head.ast.Scope scope13 = new com.google.javascript.rhino.head.ast.Scope();
        scriptNode9.addChildrenToBack((com.google.javascript.rhino.head.Node) scope13);
        boolean boolean15 = scriptNode9.hasSideEffects();
        int int16 = functionNode2.compareTo((com.google.javascript.rhino.head.ast.AstNode) scriptNode9);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 109 + "'", int3 == 109);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNull(scope12);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
    }

    @Test
    public void test10058() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10058");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode1 = new com.google.javascript.rhino.head.ast.FunctionNode(16);
        functionNode1.setRp(12);
    }

    @Test
    public void test10059() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10059");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode0 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int1 = functionNode0.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = functionNode0.getTop();
        com.google.javascript.rhino.head.ast.Name name3 = null;
        functionNode0.setFunctionName(name3);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode5 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = functionNode5.getTop();
        functionNode0.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode5);
        functionNode5.setIsExpressionClosure(true);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode11 = new com.google.javascript.rhino.head.ast.FunctionNode((int) (byte) 100);
        int int12 = functionNode5.addFunction(functionNode11);
        com.google.javascript.rhino.head.ast.Name name13 = null;
        functionNode5.setFunctionName(name13);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode16 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int17 = functionNode16.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode18 = functionNode16.getTop();
        com.google.javascript.rhino.head.ast.AstNode astNode19 = functionNode16.getBody();
        int int20 = functionNode16.getLength();
        functionNode5.putProp(100, (java.lang.Object) functionNode16);
        functionNode16.setLength((-592978996));
        com.google.javascript.rhino.head.ast.FunctionNode functionNode24 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int25 = functionNode24.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode26 = functionNode24.getTop();
        boolean boolean27 = functionNode24.hasSideEffects();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode29 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int30 = scriptNode29.getEndLineno();
        int int31 = scriptNode29.getBaseLineno();
        com.google.javascript.rhino.head.ast.Jump jump34 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode36 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int37 = scriptNode36.getEndLineno();
        int int38 = scriptNode36.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList39 = scriptNode36.getChildScopes();
        jump34.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode36);
        java.lang.String str41 = scriptNode36.debugPrint();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode29, (com.google.javascript.rhino.head.ast.Scope) scriptNode36);
        com.google.javascript.rhino.head.ast.Scope scope43 = new com.google.javascript.rhino.head.ast.Scope();
        scriptNode36.target = scope43;
        functionNode24.addChildScope(scope43);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode46 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int47 = functionNode46.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode48 = functionNode46.getTop();
        com.google.javascript.rhino.head.ast.Name name49 = null;
        functionNode46.setFunctionName(name49);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode51 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode52 = functionNode51.getTop();
        functionNode46.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode51);
        com.google.javascript.rhino.head.ast.Scope scope56 = new com.google.javascript.rhino.head.ast.Scope((int) (short) -1, 0);
        functionNode46.replaceWith(scope56);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode58 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int59 = functionNode58.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode60 = functionNode58.getTop();
        com.google.javascript.rhino.head.ast.Name name61 = null;
        functionNode58.setFunctionName(name61);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode63 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode64 = functionNode63.getTop();
        functionNode58.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode63);
        int int66 = functionNode46.addFunction(functionNode58);
        int int67 = functionNode24.addFunction(functionNode58);
        com.google.javascript.rhino.head.ast.RegExpLiteral regExpLiteral69 = new com.google.javascript.rhino.head.ast.RegExpLiteral((int) (short) 1);
        java.lang.String str71 = regExpLiteral69.toSource((int) (byte) 10);
        functionNode24.addRegExp(regExpLiteral69);
        boolean boolean73 = functionNode24.hasSideEffects();
        java.lang.Object obj75 = functionNode24.getProp(101);
        functionNode16.addChildToFront((com.google.javascript.rhino.head.Node) functionNode24);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-1) + "'", int1 == (-1));
        org.junit.Assert.assertNotNull(scriptNode2);
        org.junit.Assert.assertNotNull(scriptNode6);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNotNull(scriptNode18);
        org.junit.Assert.assertNull(astNode19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNotNull(scriptNode26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNull(scopeList39);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str41, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertNotNull(scriptNode48);
        org.junit.Assert.assertNotNull(scriptNode52);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-1) + "'", int59 == (-1));
        org.junit.Assert.assertNotNull(scriptNode60);
        org.junit.Assert.assertNotNull(scriptNode64);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 0 + "'", int66 == 0);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 0 + "'", int67 == 0);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "                    /null/" + "'", str71, "                    /null/");
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNull(obj75);
    }

    @Test
    public void test10060() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10060");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode0 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int1 = functionNode0.getLp();
        functionNode0.setEncodedSource("");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode4 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int5 = functionNode4.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = functionNode4.getTop();
        com.google.javascript.rhino.head.ast.Name name7 = null;
        functionNode4.setFunctionName(name7);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode9 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = functionNode9.getTop();
        functionNode4.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode9);
        int int12 = functionNode9.getRp();
        int int13 = functionNode9.getFunctionType();
        functionNode0.addParam((com.google.javascript.rhino.head.ast.AstNode) functionNode9);
        com.google.javascript.rhino.head.ast.Name name15 = functionNode0.getFunctionName();
        java.util.List<com.google.javascript.rhino.head.Node> nodeList16 = functionNode0.getResumptionPoints();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode17 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int18 = functionNode17.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode19 = functionNode17.getTop();
        com.google.javascript.rhino.head.ast.Jump jump25 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump25.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump29 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump25, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode31 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int32 = scriptNode31.getEndLineno();
        int int33 = scriptNode31.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList34 = scriptNode31.getChildScopes();
        com.google.javascript.rhino.head.Node node35 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump25, (com.google.javascript.rhino.head.Node) scriptNode31);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode37 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int38 = scriptNode37.getEndLineno();
        com.google.javascript.rhino.head.ast.RegExpLiteral regExpLiteral40 = new com.google.javascript.rhino.head.ast.RegExpLiteral((int) (short) 1);
        java.lang.String str42 = regExpLiteral40.toSource((int) (byte) 10);
        regExpLiteral40.setFlags("-1\tSCRIPT -1 1\n");
        regExpLiteral40.removeProp(8);
        com.google.javascript.rhino.head.Node node48 = new com.google.javascript.rhino.head.Node(10, node35, (com.google.javascript.rhino.head.Node) scriptNode37, (com.google.javascript.rhino.head.Node) regExpLiteral40, 3);
        java.lang.String str50 = regExpLiteral40.makeIndent((int) (short) 100);
        int int51 = regExpLiteral40.getType();
        functionNode17.setMemberExprNode((com.google.javascript.rhino.head.ast.AstNode) regExpLiteral40);
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList53 = functionNode17.getParams();
        functionNode0.setParams(astNodeList53);
        boolean boolean55 = functionNode0.isGetterOrSetter();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-1) + "'", int1 == (-1));
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(scriptNode6);
        org.junit.Assert.assertNotNull(scriptNode10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNull(name15);
        org.junit.Assert.assertNull(nodeList16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNotNull(scriptNode19);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertNull(scopeList34);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "                    /null/" + "'", str42, "                    /null/");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "                                                                                                                                                                                                        " + "'", str50, "                                                                                                                                                                                                        ");
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 48 + "'", int51 == 48);
        org.junit.Assert.assertNotNull(astNodeList53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
    }

    @Test
    public void test10061() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10061");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode0 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int1 = functionNode0.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = functionNode0.getTop();
        com.google.javascript.rhino.head.Node node3 = functionNode0.getLastSibling();
        com.google.javascript.rhino.head.ast.AstNode astNode4 = functionNode0.getMemberExprNode();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode5 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int6 = functionNode5.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode7 = functionNode5.getTop();
        com.google.javascript.rhino.head.ast.Name name8 = null;
        functionNode5.setFunctionName(name8);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode10 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = functionNode10.getTop();
        functionNode5.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode10);
        functionNode10.setIsExpressionClosure(true);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode16 = new com.google.javascript.rhino.head.ast.FunctionNode((int) (byte) 100);
        int int17 = functionNode10.addFunction(functionNode16);
        int int18 = functionNode0.addFunction(functionNode10);
        functionNode0.setLp(5);
        functionNode0.setEncodedSourceStart((-146877426));
        com.google.javascript.rhino.head.ast.FunctionNode functionNode23 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int24 = functionNode23.getLp();
        functionNode23.setEncodedSource("");
        functionNode23.flattenSymbolTable(false);
        java.lang.String str29 = functionNode23.getName();
        com.google.javascript.rhino.head.Node node30 = functionNode23.target;
        functionNode0.setTop((com.google.javascript.rhino.head.ast.ScriptNode) functionNode23);
        com.google.javascript.rhino.head.ast.AstNode astNode32 = functionNode23.getBody();
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.ast.Jump jump33 = functionNode23.getJumpStatement();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-1) + "'", int1 == (-1));
        org.junit.Assert.assertNotNull(scriptNode2);
        org.junit.Assert.assertNotNull(node3);
        org.junit.Assert.assertNull(astNode4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(scriptNode7);
        org.junit.Assert.assertNotNull(scriptNode11);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, "");
        org.junit.Assert.assertNull(node30);
        org.junit.Assert.assertNull(astNode32);
    }

    @Test
    public void test10062() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10062");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode0 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int1 = functionNode0.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = functionNode0.getTop();
        com.google.javascript.rhino.head.ast.AstNode astNode3 = functionNode0.getBody();
        com.google.javascript.rhino.head.ast.Scope scope4 = functionNode0.getParentScope();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode5 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int6 = functionNode5.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode7 = functionNode5.getTop();
        com.google.javascript.rhino.head.ast.Jump jump13 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump13.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump17 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump13, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode19 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int20 = scriptNode19.getEndLineno();
        int int21 = scriptNode19.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList22 = scriptNode19.getChildScopes();
        com.google.javascript.rhino.head.Node node23 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump13, (com.google.javascript.rhino.head.Node) scriptNode19);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode25 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int26 = scriptNode25.getEndLineno();
        com.google.javascript.rhino.head.ast.RegExpLiteral regExpLiteral28 = new com.google.javascript.rhino.head.ast.RegExpLiteral((int) (short) 1);
        java.lang.String str30 = regExpLiteral28.toSource((int) (byte) 10);
        regExpLiteral28.setFlags("-1\tSCRIPT -1 1\n");
        regExpLiteral28.removeProp(8);
        com.google.javascript.rhino.head.Node node36 = new com.google.javascript.rhino.head.Node(10, node23, (com.google.javascript.rhino.head.Node) scriptNode25, (com.google.javascript.rhino.head.Node) regExpLiteral28, 3);
        java.lang.String str38 = regExpLiteral28.makeIndent((int) (short) 100);
        int int39 = regExpLiteral28.getType();
        functionNode5.setMemberExprNode((com.google.javascript.rhino.head.ast.AstNode) regExpLiteral28);
        java.lang.String str41 = functionNode0.toStringTree((com.google.javascript.rhino.head.ast.ScriptNode) functionNode5);
        // The following exception was thrown during execution in test generation
        try {
            int int42 = functionNode0.getParamAndVarCount();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-1) + "'", int1 == (-1));
        org.junit.Assert.assertNotNull(scriptNode2);
        org.junit.Assert.assertNull(astNode3);
        org.junit.Assert.assertNull(scope4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(scriptNode7);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertNull(scopeList22);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "                    /null/" + "'", str30, "                    /null/");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "                                                                                                                                                                                                        " + "'", str38, "                                                                                                                                                                                                        ");
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 48 + "'", int39 == 48);
        org.junit.Assert.assertNull(str41);
    }

    @Test
    public void test10063() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10063");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode1 = new com.google.javascript.rhino.head.ast.FunctionNode(0);
        int int2 = functionNode1.getBaseLineno();
        boolean boolean3 = functionNode1.isGetter();
        com.google.javascript.rhino.head.ast.RegExpLiteral regExpLiteral5 = new com.google.javascript.rhino.head.ast.RegExpLiteral((int) (short) 1);
        regExpLiteral5.setFlags("-1\tSCRIPT -1 1\n");
        java.lang.String str8 = regExpLiteral5.getValue();
        regExpLiteral5.setFlags("52");
        functionNode1.addChildrenToFront((com.google.javascript.rhino.head.Node) regExpLiteral5);
        boolean boolean12 = functionNode1.isGetterOrSetter();
        int int13 = functionNode1.getRegexpCount();
        java.lang.String str14 = functionNode1.toString();
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList15 = functionNode1.getFunctions();
        int int16 = functionNode1.getParamCount();
        int int17 = functionNode1.getLength();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "109" + "'", str14, "109");
        org.junit.Assert.assertNotNull(functionNodeList15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
    }

    @Test
    public void test10064() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10064");
        com.google.javascript.rhino.head.ast.Jump jump2 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        com.google.javascript.rhino.head.ast.Scope scope4 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 10);
        jump2.addChildrenToBack((com.google.javascript.rhino.head.Node) scope4);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode6 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int7 = functionNode6.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode8 = functionNode6.getTop();
        com.google.javascript.rhino.head.ast.Name name9 = null;
        functionNode6.setFunctionName(name9);
        functionNode6.setIsGenerator();
        java.lang.String str12 = functionNode6.getEncodedSource();
        scope4.target = functionNode6;
        com.google.javascript.rhino.head.Node node14 = scope4.target;
        com.google.javascript.rhino.head.ast.Scope scope16 = scope4.getDefiningScope("-440310255");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str17 = scope16.toString();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(scriptNode8);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(node14);
        org.junit.Assert.assertNull(scope16);
    }

    @Test
    public void test10065() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10065");
        com.google.javascript.rhino.head.ast.Jump jump5 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump5.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump9 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump5, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int12 = scriptNode11.getEndLineno();
        int int13 = scriptNode11.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList14 = scriptNode11.getChildScopes();
        com.google.javascript.rhino.head.Node node15 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump5, (com.google.javascript.rhino.head.Node) scriptNode11);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode17 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int18 = scriptNode17.getEndLineno();
        com.google.javascript.rhino.head.ast.RegExpLiteral regExpLiteral20 = new com.google.javascript.rhino.head.ast.RegExpLiteral((int) (short) 1);
        java.lang.String str22 = regExpLiteral20.toSource((int) (byte) 10);
        regExpLiteral20.setFlags("-1\tSCRIPT -1 1\n");
        regExpLiteral20.removeProp(8);
        com.google.javascript.rhino.head.Node node28 = new com.google.javascript.rhino.head.Node(10, node15, (com.google.javascript.rhino.head.Node) scriptNode17, (com.google.javascript.rhino.head.Node) regExpLiteral20, 3);
        java.lang.String str30 = regExpLiteral20.makeIndent((int) (short) 100);
        int int31 = regExpLiteral20.getType();
        int int32 = regExpLiteral20.getLineno();
        java.lang.String str34 = regExpLiteral20.toSource(0);
        java.lang.String str35 = regExpLiteral20.getFlags();
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNull(scopeList14);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "                    /null/" + "'", str22, "                    /null/");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "                                                                                                                                                                                                        " + "'", str30, "                                                                                                                                                                                                        ");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 48 + "'", int31 == 48);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "/null/-1\tSCRIPT -1 1\n" + "'", str34, "/null/-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str35, "-1\tSCRIPT -1 1\n");
    }

    @Test
    public void test10066() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10066");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode0 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = functionNode0.getTop();
        functionNode0.setParens((int) (byte) 1, (int) (short) 1);
        functionNode0.setEncodedSourceStart((-1));
        java.util.List<com.google.javascript.rhino.head.Node> nodeList7 = functionNode0.getResumptionPoints();
        com.google.javascript.rhino.head.ast.Scope scope9 = functionNode0.getDefiningScope("hi!");
        boolean boolean10 = functionNode0.isGetterOrSetter();
        functionNode0.setSourceName("                                                                                                                                                                                                        /null/");
        com.google.javascript.rhino.head.ast.Scope scope14 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 10);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode15 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode16 = functionNode15.getTop();
        functionNode15.setParens((int) (byte) 1, (int) (short) 1);
        functionNode15.setEncodedSourceStart((-1));
        functionNode15.setFunctionIsGetter();
        scope14.addChildToFront((com.google.javascript.rhino.head.Node) functionNode15);
        functionNode15.setRp(19);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode27 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int28 = scriptNode27.getEndLineno();
        int int29 = scriptNode27.getBaseLineno();
        com.google.javascript.rhino.head.ast.Jump jump32 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode34 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int35 = scriptNode34.getEndLineno();
        int int36 = scriptNode34.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList37 = scriptNode34.getChildScopes();
        jump32.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode34);
        java.lang.String str39 = scriptNode34.debugPrint();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode27, (com.google.javascript.rhino.head.ast.Scope) scriptNode34);
        com.google.javascript.rhino.head.ast.Scope scope41 = new com.google.javascript.rhino.head.ast.Scope();
        scriptNode34.target = scope41;
        java.lang.String str43 = functionNode15.toStringTree(scriptNode34);
        java.lang.String str45 = scriptNode34.toSource((int) (short) 10);
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap46 = scriptNode34.getSymbolTable();
        int int47 = strMap46.size();
        java.util.Collection<com.google.javascript.rhino.head.ast.Symbol> symbolCollection48 = strMap46.values();
        java.util.Collection<com.google.javascript.rhino.head.ast.Symbol> symbolCollection49 = strMap46.values();
        java.util.Set<java.util.Map.Entry<java.lang.String, com.google.javascript.rhino.head.ast.Symbol>> strEntrySet50 = strMap46.entrySet();
        int int51 = strMap46.size();
        functionNode0.setSymbolTable(strMap46);
        org.junit.Assert.assertNotNull(scriptNode1);
        org.junit.Assert.assertNull(nodeList7);
        org.junit.Assert.assertNull(scope9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(scriptNode16);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNull(scopeList37);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str39, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "                    {\n                    }\n" + "'", str45, "                    {\n                    }\n");
        org.junit.Assert.assertNotNull(strMap46);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertNotNull(symbolCollection48);
        org.junit.Assert.assertNotNull(symbolCollection49);
        org.junit.Assert.assertNotNull(strEntrySet50);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
    }

    @Test
    public void test10067() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10067");
        com.google.javascript.rhino.head.ast.Name name1 = null;
        com.google.javascript.rhino.head.ast.FunctionNode functionNode2 = new com.google.javascript.rhino.head.ast.FunctionNode(1, name1);
        boolean boolean3 = functionNode2.isGetterOrSetter();
        int int4 = functionNode2.getEncodedSourceEnd();
        boolean boolean5 = functionNode2.requiresActivation();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode6 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int7 = functionNode6.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode8 = functionNode6.getTop();
        com.google.javascript.rhino.head.ast.Name name9 = null;
        functionNode6.setFunctionName(name9);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode11 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode12 = functionNode11.getTop();
        functionNode6.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode11);
        functionNode11.setIsExpressionClosure(true);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode17 = new com.google.javascript.rhino.head.ast.FunctionNode((int) (byte) 100);
        int int18 = functionNode11.addFunction(functionNode17);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode20 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int21 = functionNode20.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode22 = functionNode20.getTop();
        com.google.javascript.rhino.head.ast.Name name23 = null;
        functionNode20.setFunctionName(name23);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode25 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode26 = functionNode25.getTop();
        functionNode20.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode25);
        functionNode25.setIsExpressionClosure(true);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode31 = new com.google.javascript.rhino.head.ast.FunctionNode((int) (byte) 100);
        int int32 = functionNode25.addFunction(functionNode31);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode34 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode35 = functionNode34.getTop();
        java.lang.String str36 = scriptNode35.getJsDoc();
        com.google.javascript.rhino.head.Node node38 = scriptNode35.setType(0);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode39 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int40 = functionNode39.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode42 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        java.lang.String str43 = functionNode39.toStringTree(scriptNode42);
        com.google.javascript.rhino.head.ast.Scope scope45 = scriptNode42.getDefiningScope("");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode47 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int48 = scriptNode47.getEndLineno();
        int int49 = scriptNode47.getBaseLineno();
        com.google.javascript.rhino.head.Node node50 = new com.google.javascript.rhino.head.Node(25, node38, (com.google.javascript.rhino.head.Node) scriptNode42, (com.google.javascript.rhino.head.Node) scriptNode47);
        int int51 = functionNode31.compareTo((com.google.javascript.rhino.head.ast.AstNode) scriptNode42);
        com.google.javascript.rhino.head.ast.RegExpLiteral regExpLiteral53 = new com.google.javascript.rhino.head.ast.RegExpLiteral((int) (short) 1);
        regExpLiteral53.setFlags("-1\tSCRIPT -1 1\n");
        regExpLiteral53.setFlags("/null/-1\tSCRIPT -1 1\n");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode58 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int59 = functionNode58.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode60 = functionNode58.getTop();
        com.google.javascript.rhino.head.ast.Name name61 = null;
        functionNode58.setFunctionName(name61);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode63 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode64 = functionNode63.getTop();
        functionNode58.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode63);
        int int66 = functionNode63.getRp();
        int int67 = functionNode63.getFunctionType();
        boolean boolean68 = functionNode63.requiresActivation();
        com.google.javascript.rhino.head.Node node69 = new com.google.javascript.rhino.head.Node(26, (com.google.javascript.rhino.head.Node) scriptNode42, (com.google.javascript.rhino.head.Node) regExpLiteral53, (com.google.javascript.rhino.head.Node) functionNode63);
        functionNode11.addParam((com.google.javascript.rhino.head.ast.AstNode) functionNode63);
        functionNode2.addChildToFront((com.google.javascript.rhino.head.Node) functionNode63);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode73 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int74 = functionNode73.getLp();
        functionNode73.setEncodedSource("");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode77 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int78 = functionNode77.getLp();
        functionNode77.setEncodedSource("");
        functionNode77.flattenSymbolTable(false);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode83 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int84 = functionNode83.getLp();
        com.google.javascript.rhino.head.Node node86 = new com.google.javascript.rhino.head.Node((-1), (com.google.javascript.rhino.head.Node) functionNode73, (com.google.javascript.rhino.head.Node) functionNode77, (com.google.javascript.rhino.head.Node) functionNode83, (int) '#');
        com.google.javascript.rhino.head.ast.AstNode astNode87 = functionNode73.getBody();
        // The following exception was thrown during execution in test generation
        try {
            functionNode2.removeChild((com.google.javascript.rhino.head.Node) functionNode73);
            org.junit.Assert.fail("Expected exception of type java.lang.RuntimeException; message: node is not a child");
        } catch (java.lang.RuntimeException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(scriptNode8);
        org.junit.Assert.assertNotNull(scriptNode12);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertNotNull(scriptNode22);
        org.junit.Assert.assertNotNull(scriptNode26);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNotNull(scriptNode35);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNotNull(node38);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertNull(scope45);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 1 + "'", int51 == 1);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-1) + "'", int59 == (-1));
        org.junit.Assert.assertNotNull(scriptNode60);
        org.junit.Assert.assertNotNull(scriptNode64);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + (-1) + "'", int66 == (-1));
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 0 + "'", int67 == 0);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + (-1) + "'", int74 == (-1));
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + (-1) + "'", int78 == (-1));
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + (-1) + "'", int84 == (-1));
        org.junit.Assert.assertNull(astNode87);
    }

    @Test
    public void test10068() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10068");
        com.google.javascript.rhino.head.ast.Jump jump3 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump3.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump7 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump3, 0);
        com.google.javascript.rhino.head.ast.Jump jump11 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump11.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump15 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump11, 0);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode16 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int17 = functionNode16.getLp();
        functionNode16.setEncodedSource("");
        functionNode16.flattenSymbolTable(false);
        jump3.addChildAfter((com.google.javascript.rhino.head.Node) jump11, (com.google.javascript.rhino.head.Node) functionNode16);
        int int23 = functionNode16.getLength();
        com.google.javascript.rhino.head.Node node25 = functionNode16.setType(21);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode26 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode27 = functionNode26.getTop();
        com.google.javascript.rhino.head.ast.Name name28 = null;
        functionNode26.setFunctionName(name28);
        int int30 = functionNode26.getLength();
        functionNode26.setFunctionType(19);
        functionNode16.addParam((com.google.javascript.rhino.head.ast.AstNode) functionNode26);
        functionNode16.removeProp((int) (short) 10);
        com.google.javascript.rhino.head.ast.AstRoot astRoot36 = functionNode16.getAstRoot();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap37 = functionNode16.getSymbolTable();
        int int38 = functionNode16.getParamAndVarCount();
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertNotNull(node25);
        org.junit.Assert.assertNotNull(scriptNode27);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 1 + "'", int30 == 1);
        org.junit.Assert.assertNull(astRoot36);
        org.junit.Assert.assertNull(strMap37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
    }

    @Test
    public void test10069() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10069");
        com.google.javascript.rhino.head.ast.Symbol symbol0 = new com.google.javascript.rhino.head.ast.Symbol();
        java.lang.String str1 = symbol0.getName();
        java.lang.String str2 = symbol0.toString();
        symbol0.setName("                    /null/-1\tSCRIPT -1 1\n");
        int int5 = symbol0.getDeclType();
        symbol0.setIndex(4);
        // The following exception was thrown during execution in test generation
        try {
            symbol0.setDeclType((-909587137));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid declType: -909587137");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "Symbol (EOF) name=null" + "'", str2, "Symbol (EOF) name=null");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
    }

    @Test
    public void test10070() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10070");
        com.google.javascript.rhino.head.ast.Symbol symbol0 = new com.google.javascript.rhino.head.ast.Symbol();
        java.lang.String str1 = symbol0.getName();
        com.google.javascript.rhino.head.Node node2 = symbol0.getNode();
        java.lang.String str3 = symbol0.toString();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode4 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int5 = functionNode4.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode7 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        java.lang.String str8 = functionNode4.toStringTree(scriptNode7);
        functionNode4.setFunctionIsGetter();
        com.google.javascript.rhino.head.ast.AstNode astNode10 = functionNode4.getBody();
        functionNode4.setParens(21, (int) '#');
        int int14 = functionNode4.getLineno();
        functionNode4.setRp(9);
        symbol0.setContainingTable((com.google.javascript.rhino.head.ast.Scope) functionNode4);
        symbol0.setName("        /null/$0");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Symbol (EOF) name=null" + "'", str3, "Symbol (EOF) name=null");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(astNode10);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
    }

    @Test
    public void test10071() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10071");
        com.google.javascript.rhino.head.Node node2 = com.google.javascript.rhino.head.Node.newString((int) (byte) -1, "/                    {\n                      {\n                      }\n                    }\n//null/-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertNotNull(node2);
    }

    @Test
    public void test10072() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10072");
        com.google.javascript.rhino.head.ast.Jump jump5 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump5.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump9 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump5, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int12 = scriptNode11.getEndLineno();
        int int13 = scriptNode11.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList14 = scriptNode11.getChildScopes();
        com.google.javascript.rhino.head.Node node15 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump5, (com.google.javascript.rhino.head.Node) scriptNode11);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList16 = scriptNode11.getFunctions();
        int int17 = scriptNode11.getPosition();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList18 = scriptNode11.getChildScopes();
        int int19 = scriptNode11.getEncodedSourceEnd();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList20 = scriptNode11.getSymbols();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode21 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int22 = functionNode21.getLp();
        functionNode21.setEncodedSource("");
        functionNode21.flattenSymbolTable(false);
        com.google.javascript.rhino.head.ast.RegExpLiteral regExpLiteral28 = new com.google.javascript.rhino.head.ast.RegExpLiteral((int) (short) 1);
        java.lang.String str30 = regExpLiteral28.toSource((int) (byte) 10);
        regExpLiteral28.setFlags("-1\tSCRIPT -1 1\n");
        regExpLiteral28.removeProp(8);
        java.lang.String str35 = regExpLiteral28.getValue();
        com.google.javascript.rhino.head.Node node36 = new com.google.javascript.rhino.head.Node(7, (com.google.javascript.rhino.head.Node) scriptNode11, (com.google.javascript.rhino.head.Node) functionNode21, (com.google.javascript.rhino.head.Node) regExpLiteral28);
        functionNode21.flattenSymbolTable(false);
        int int39 = functionNode21.getParamAndVarCount();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode42 = new com.google.javascript.rhino.head.ast.FunctionNode(0);
        int int43 = functionNode42.getBaseLineno();
        boolean boolean44 = functionNode42.isGetter();
        com.google.javascript.rhino.head.ast.RegExpLiteral regExpLiteral46 = new com.google.javascript.rhino.head.ast.RegExpLiteral((int) (short) 1);
        regExpLiteral46.setFlags("-1\tSCRIPT -1 1\n");
        java.lang.String str49 = regExpLiteral46.getValue();
        regExpLiteral46.setFlags("52");
        functionNode42.addChildrenToFront((com.google.javascript.rhino.head.Node) regExpLiteral46);
        boolean boolean53 = functionNode42.isGetterOrSetter();
        com.google.javascript.rhino.head.ast.Jump jump56 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode58 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int59 = scriptNode58.getEndLineno();
        int int60 = scriptNode58.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList61 = scriptNode58.getChildScopes();
        jump56.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode58);
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor63 = scriptNode58.iterator();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode64 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int65 = functionNode64.getLp();
        functionNode64.setEncodedSource("");
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode58, (com.google.javascript.rhino.head.ast.Scope) functionNode64);
        com.google.javascript.rhino.head.Node node69 = new com.google.javascript.rhino.head.Node((int) (byte) 1, (com.google.javascript.rhino.head.Node) functionNode42, (com.google.javascript.rhino.head.Node) scriptNode58);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList70 = functionNode42.getChildScopes();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode71 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int72 = functionNode71.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode73 = functionNode71.getTop();
        com.google.javascript.rhino.head.ast.Name name74 = null;
        functionNode71.setFunctionName(name74);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode76 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode77 = functionNode76.getTop();
        functionNode71.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode76);
        int int79 = functionNode76.getRp();
        java.lang.String str80 = functionNode76.getSourceName();
        functionNode76.setParens(14, (int) '#');
        int int84 = functionNode42.addFunction(functionNode76);
        functionNode21.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode76);
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor86 = functionNode21.iterator();
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNull(scopeList14);
        org.junit.Assert.assertNotNull(functionNodeList16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNull(scopeList18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(symbolList20);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "                    /null/" + "'", str30, "                    /null/");
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-1) + "'", int59 == (-1));
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-1) + "'", int60 == (-1));
        org.junit.Assert.assertNull(scopeList61);
        org.junit.Assert.assertNotNull(nodeItor63);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + (-1) + "'", int65 == (-1));
        org.junit.Assert.assertNull(scopeList70);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + (-1) + "'", int72 == (-1));
        org.junit.Assert.assertNotNull(scriptNode73);
        org.junit.Assert.assertNotNull(scriptNode77);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + (-1) + "'", int79 == (-1));
        org.junit.Assert.assertNull(str80);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 0 + "'", int84 == 0);
        org.junit.Assert.assertNotNull(nodeItor86);
    }

    @Test
    public void test10073() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10073");
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator0 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.Jump jump5 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump5.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump9 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump5, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int12 = scriptNode11.getEndLineno();
        int int13 = scriptNode11.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList14 = scriptNode11.getChildScopes();
        com.google.javascript.rhino.head.Node node15 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump5, (com.google.javascript.rhino.head.Node) scriptNode11);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList16 = scriptNode11.getFunctions();
        int int17 = scriptNode11.getPosition();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList18 = scriptNode11.getChildScopes();
        java.lang.String str19 = scriptNode11.getSourceName();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode21 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int22 = functionNode21.getLp();
        functionNode21.setEncodedSource("");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode25 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int26 = functionNode25.getLp();
        functionNode25.setEncodedSource("");
        functionNode25.flattenSymbolTable(false);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode31 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int32 = functionNode31.getLp();
        com.google.javascript.rhino.head.Node node34 = new com.google.javascript.rhino.head.Node((-1), (com.google.javascript.rhino.head.Node) functionNode21, (com.google.javascript.rhino.head.Node) functionNode25, (com.google.javascript.rhino.head.Node) functionNode31, (int) '#');
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap35 = functionNode25.getSymbolTable();
        com.google.javascript.rhino.head.ast.Jump jump39 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump39.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump43 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump39, 0);
        com.google.javascript.rhino.head.ast.Jump jump47 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump47.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump51 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump47, 0);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode52 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int53 = functionNode52.getLp();
        functionNode52.setEncodedSource("");
        functionNode52.flattenSymbolTable(false);
        jump39.addChildAfter((com.google.javascript.rhino.head.Node) jump47, (com.google.javascript.rhino.head.Node) functionNode52);
        functionNode25.setMemberExprNode((com.google.javascript.rhino.head.ast.AstNode) functionNode52);
        int int60 = positionComparator0.compare((com.google.javascript.rhino.head.ast.AstNode) scriptNode11, (com.google.javascript.rhino.head.ast.AstNode) functionNode25);
        functionNode25.setFunctionType(4);
        boolean boolean63 = functionNode25.isGenerator();
        functionNode25.setParens(4, 17);
        boolean boolean67 = functionNode25.hasSideEffects();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode69 = new com.google.javascript.rhino.head.ast.FunctionNode(0);
        int int70 = functionNode69.getBaseLineno();
        boolean boolean71 = functionNode69.isGetter();
        com.google.javascript.rhino.head.ast.RegExpLiteral regExpLiteral73 = new com.google.javascript.rhino.head.ast.RegExpLiteral((int) (short) 1);
        regExpLiteral73.setFlags("-1\tSCRIPT -1 1\n");
        java.lang.String str76 = regExpLiteral73.getValue();
        regExpLiteral73.setFlags("52");
        functionNode69.addChildrenToFront((com.google.javascript.rhino.head.Node) regExpLiteral73);
        boolean boolean80 = functionNode69.isGetterOrSetter();
        int int81 = functionNode69.getRegexpCount();
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList82 = functionNode69.getParams();
        functionNode25.setMemberExprNode((com.google.javascript.rhino.head.ast.AstNode) functionNode69);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNull(scopeList14);
        org.junit.Assert.assertNotNull(functionNodeList16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNull(scopeList18);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNull(strMap35);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 0 + "'", int60 == 0);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + (-1) + "'", int70 == (-1));
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNull(str76);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 0 + "'", int81 == 0);
        org.junit.Assert.assertNotNull(astNodeList82);
    }

    @Test
    public void test10074() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10074");
        com.google.javascript.rhino.head.ast.Jump jump2 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode4 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int5 = scriptNode4.getEndLineno();
        int int6 = scriptNode4.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList7 = scriptNode4.getChildScopes();
        jump2.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode4);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode10 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int11 = functionNode10.getLp();
        functionNode10.setEncodedSource("");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode14 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int15 = functionNode14.getLp();
        functionNode14.setEncodedSource("");
        functionNode14.flattenSymbolTable(false);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode20 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int21 = functionNode20.getLp();
        com.google.javascript.rhino.head.Node node23 = new com.google.javascript.rhino.head.Node((-1), (com.google.javascript.rhino.head.Node) functionNode10, (com.google.javascript.rhino.head.Node) functionNode14, (com.google.javascript.rhino.head.Node) functionNode20, (int) '#');
        jump2.addChildrenToFront((com.google.javascript.rhino.head.Node) functionNode10);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode25 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int26 = functionNode25.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode27 = functionNode25.getTop();
        com.google.javascript.rhino.head.ast.Name name28 = null;
        functionNode25.setFunctionName(name28);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode30 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode31 = functionNode30.getTop();
        functionNode25.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode30);
        functionNode30.setIsExpressionClosure(true);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode36 = new com.google.javascript.rhino.head.ast.FunctionNode((int) (byte) 100);
        int int37 = functionNode30.addFunction(functionNode36);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode39 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode40 = functionNode39.getTop();
        java.lang.String str41 = scriptNode40.getJsDoc();
        com.google.javascript.rhino.head.Node node43 = scriptNode40.setType(0);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode44 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int45 = functionNode44.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode47 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        java.lang.String str48 = functionNode44.toStringTree(scriptNode47);
        com.google.javascript.rhino.head.ast.Scope scope50 = scriptNode47.getDefiningScope("");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode52 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int53 = scriptNode52.getEndLineno();
        int int54 = scriptNode52.getBaseLineno();
        com.google.javascript.rhino.head.Node node55 = new com.google.javascript.rhino.head.Node(25, node43, (com.google.javascript.rhino.head.Node) scriptNode47, (com.google.javascript.rhino.head.Node) scriptNode52);
        int int56 = functionNode36.compareTo((com.google.javascript.rhino.head.ast.AstNode) scriptNode47);
        functionNode10.addChildScope((com.google.javascript.rhino.head.ast.Scope) scriptNode47);
        java.lang.String str59 = scriptNode47.toSource(0);
        com.google.javascript.rhino.head.ast.Scope scope61 = new com.google.javascript.rhino.head.ast.Scope((int) (byte) -1);
        int int62 = scope61.getLineno();
        // The following exception was thrown during execution in test generation
        try {
            scriptNode47.setLoop((com.google.javascript.rhino.head.ast.Jump) scope61);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNull(scopeList7);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNotNull(scriptNode27);
        org.junit.Assert.assertNotNull(scriptNode31);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertNotNull(scriptNode40);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNotNull(node43);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertNull(scope50);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 1 + "'", int56 == 1);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "{\n}\n" + "'", str59, "{\n}\n");
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + (-1) + "'", int62 == (-1));
    }

    @Test
    public void test10075() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10075");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode3 = new com.google.javascript.rhino.head.ast.FunctionNode((int) (byte) 100);
        int int4 = functionNode3.getEncodedSourceStart();
        int int5 = functionNode3.getFunctionCount();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode6 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode7 = functionNode6.getTop();
        functionNode6.setParens((int) (byte) 1, (int) (short) 1);
        int int11 = functionNode6.getRp();
        com.google.javascript.rhino.head.Node node13 = new com.google.javascript.rhino.head.Node(17, (com.google.javascript.rhino.head.Node) functionNode3, (com.google.javascript.rhino.head.Node) functionNode6, (int) (short) 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode15 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int16 = scriptNode15.getEndLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode18 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int19 = scriptNode18.getEndLineno();
        scriptNode15.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode18);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode21 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int22 = functionNode21.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode23 = functionNode21.getTop();
        boolean boolean24 = functionNode21.hasSideEffects();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode26 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int27 = scriptNode26.getEndLineno();
        int int28 = scriptNode26.getBaseLineno();
        com.google.javascript.rhino.head.ast.Jump jump31 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode33 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int34 = scriptNode33.getEndLineno();
        int int35 = scriptNode33.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList36 = scriptNode33.getChildScopes();
        jump31.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode33);
        java.lang.String str38 = scriptNode33.debugPrint();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode26, (com.google.javascript.rhino.head.ast.Scope) scriptNode33);
        com.google.javascript.rhino.head.ast.Scope scope40 = new com.google.javascript.rhino.head.ast.Scope();
        scriptNode33.target = scope40;
        functionNode21.addChildScope(scope40);
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode18, (com.google.javascript.rhino.head.ast.Scope) functionNode21);
        com.google.javascript.rhino.head.Node node45 = new com.google.javascript.rhino.head.Node(8, (com.google.javascript.rhino.head.Node) functionNode3, (com.google.javascript.rhino.head.Node) scriptNode18, (int) 'a');
        java.lang.String str46 = functionNode3.getSourceName();
        functionNode3.setEncodedSourceStart((-1));
        com.google.javascript.rhino.head.ast.AstNode astNode49 = functionNode3.getParent();
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList50 = functionNode3.getFunctions();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode51 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int52 = functionNode51.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode53 = functionNode51.getTop();
        com.google.javascript.rhino.head.ast.Name name54 = null;
        functionNode51.setFunctionName(name54);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode56 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.Scope scope58 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 10);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode59 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode60 = functionNode59.getTop();
        functionNode59.setParens((int) (byte) 1, (int) (short) 1);
        functionNode59.setEncodedSourceStart((-1));
        functionNode59.setFunctionIsGetter();
        scope58.addChildToFront((com.google.javascript.rhino.head.Node) functionNode59);
        functionNode56.setBody((com.google.javascript.rhino.head.ast.AstNode) functionNode59);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode69 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode70 = functionNode69.getTop();
        functionNode69.setParens((int) (byte) 1, (int) (short) 1);
        functionNode69.setEncodedSourceStart((-1));
        java.util.List<com.google.javascript.rhino.head.Node> nodeList76 = functionNode69.getResumptionPoints();
        int int77 = functionNode69.getLp();
        functionNode56.setBody((com.google.javascript.rhino.head.ast.AstNode) functionNode69);
        functionNode51.addParam((com.google.javascript.rhino.head.ast.AstNode) functionNode69);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode80 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int81 = functionNode80.getLp();
        functionNode80.setEncodedSource("");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode84 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int85 = functionNode84.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode86 = functionNode84.getTop();
        com.google.javascript.rhino.head.ast.Name name87 = null;
        functionNode84.setFunctionName(name87);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode89 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode90 = functionNode89.getTop();
        functionNode84.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode89);
        int int92 = functionNode89.getRp();
        int int93 = functionNode89.getFunctionType();
        functionNode80.addParam((com.google.javascript.rhino.head.ast.AstNode) functionNode89);
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator95 = functionNode89.new NodeIterator();
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList96 = functionNode89.getStatements();
        functionNode51.setParams(astNodeList96);
        int int98 = functionNodeList50.lastIndexOf((java.lang.Object) astNodeList96);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(scriptNode7);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNotNull(scriptNode23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertNull(scopeList36);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str38, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertNull(astNode49);
        org.junit.Assert.assertNotNull(functionNodeList50);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertNotNull(scriptNode53);
        org.junit.Assert.assertNotNull(scriptNode60);
        org.junit.Assert.assertNotNull(scriptNode70);
        org.junit.Assert.assertNull(nodeList76);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 1 + "'", int77 == 1);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + (-1) + "'", int81 == (-1));
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + (-1) + "'", int85 == (-1));
        org.junit.Assert.assertNotNull(scriptNode86);
        org.junit.Assert.assertNotNull(scriptNode90);
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + (-1) + "'", int92 == (-1));
        org.junit.Assert.assertTrue("'" + int93 + "' != '" + 0 + "'", int93 == 0);
        org.junit.Assert.assertNotNull(astNodeList96);
        org.junit.Assert.assertTrue("'" + int98 + "' != '" + (-1) + "'", int98 == (-1));
    }

    @Test
    public void test10076() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10076");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int2 = scriptNode1.getEndLineno();
        com.google.javascript.rhino.head.ast.Scope scope3 = scriptNode1.getParentScope();
        com.google.javascript.rhino.head.Node node4 = scriptNode1.target;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertNull(scope3);
        org.junit.Assert.assertNull(node4);
    }

    @Test
    public void test10077() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10077");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode0 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int1 = functionNode0.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = functionNode0.getTop();
        com.google.javascript.rhino.head.ast.Name name3 = null;
        functionNode0.setFunctionName(name3);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode5 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = functionNode5.getTop();
        functionNode0.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode5);
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList8 = functionNode0.getParams();
        functionNode0.setRequiresActivation();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = new com.google.javascript.rhino.head.ast.ScriptNode();
        int int11 = scriptNode10.getEncodedSourceEnd();
        functionNode0.addResumptionPoint((com.google.javascript.rhino.head.Node) scriptNode10);
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator13 = functionNode0.new NodeIterator();
        functionNode0.setEncodedSourceEnd((-13));
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-1) + "'", int1 == (-1));
        org.junit.Assert.assertNotNull(scriptNode2);
        org.junit.Assert.assertNotNull(scriptNode6);
        org.junit.Assert.assertNotNull(astNodeList8);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
    }

    @Test
    public void test10078() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10078");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 10);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode2 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode3 = functionNode2.getTop();
        functionNode2.setParens((int) (byte) 1, (int) (short) 1);
        functionNode2.setEncodedSourceStart((-1));
        functionNode2.setFunctionIsGetter();
        scope1.addChildToFront((com.google.javascript.rhino.head.Node) functionNode2);
        functionNode2.setRp(19);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int15 = scriptNode14.getEndLineno();
        int int16 = scriptNode14.getBaseLineno();
        com.google.javascript.rhino.head.ast.Jump jump19 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode21 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int22 = scriptNode21.getEndLineno();
        int int23 = scriptNode21.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList24 = scriptNode21.getChildScopes();
        jump19.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode21);
        java.lang.String str26 = scriptNode21.debugPrint();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode14, (com.google.javascript.rhino.head.ast.Scope) scriptNode21);
        com.google.javascript.rhino.head.ast.Scope scope28 = new com.google.javascript.rhino.head.ast.Scope();
        scriptNode21.target = scope28;
        java.lang.String str30 = functionNode2.toStringTree(scriptNode21);
        java.lang.String str32 = scriptNode21.toSource((int) (short) 10);
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap33 = scriptNode21.getSymbolTable();
        int int34 = strMap33.size();
        strMap33.clear();
        com.google.javascript.rhino.head.ast.Symbol symbol37 = null;
        com.google.javascript.rhino.head.ast.Symbol symbol38 = strMap33.replace("Symbol (EOF) name=null", symbol37);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode40 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int41 = scriptNode40.getEndLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode43 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int44 = scriptNode43.getEndLineno();
        scriptNode40.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode43);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode46 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int47 = functionNode46.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode48 = functionNode46.getTop();
        boolean boolean49 = functionNode46.hasSideEffects();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode51 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int52 = scriptNode51.getEndLineno();
        int int53 = scriptNode51.getBaseLineno();
        com.google.javascript.rhino.head.ast.Jump jump56 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode58 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int59 = scriptNode58.getEndLineno();
        int int60 = scriptNode58.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList61 = scriptNode58.getChildScopes();
        jump56.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode58);
        java.lang.String str63 = scriptNode58.debugPrint();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode51, (com.google.javascript.rhino.head.ast.Scope) scriptNode58);
        com.google.javascript.rhino.head.ast.Scope scope65 = new com.google.javascript.rhino.head.ast.Scope();
        scriptNode58.target = scope65;
        functionNode46.addChildScope(scope65);
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode43, (com.google.javascript.rhino.head.ast.Scope) functionNode46);
        int int69 = functionNode46.getFunctionCount();
        int int70 = functionNode46.getEncodedSourceEnd();
        com.google.javascript.rhino.head.ast.AstRoot astRoot71 = functionNode46.getAstRoot();
        functionNode46.setParens(10, 17);
        com.google.javascript.rhino.head.ast.Symbol symbol75 = strMap33.get((java.lang.Object) functionNode46);
        com.google.javascript.rhino.head.ast.Symbol symbol76 = new com.google.javascript.rhino.head.ast.Symbol();
        java.lang.String str77 = symbol76.getDeclTypeName();
        int int78 = symbol76.getDeclType();
        com.google.javascript.rhino.head.ast.Scope scope79 = symbol76.getContainingTable();
        com.google.javascript.rhino.head.Node node80 = symbol76.getNode();
        boolean boolean81 = strMap33.containsValue((java.lang.Object) symbol76);
        // The following exception was thrown during execution in test generation
        try {
            symbol76.setDeclType((-603955719));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid declType: -603955719");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(scriptNode3);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNull(scopeList24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str26, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "                    {\n                    }\n" + "'", str32, "                    {\n                    }\n");
        org.junit.Assert.assertNotNull(strMap33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertNull(symbol38);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertNotNull(scriptNode48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-1) + "'", int59 == (-1));
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-1) + "'", int60 == (-1));
        org.junit.Assert.assertNull(scopeList61);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str63, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 0 + "'", int69 == 0);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + (-1) + "'", int70 == (-1));
        org.junit.Assert.assertNull(astRoot71);
        org.junit.Assert.assertNull(symbol75);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "EOF" + "'", str77, "EOF");
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 0 + "'", int78 == 0);
        org.junit.Assert.assertNull(scope79);
        org.junit.Assert.assertNull(node80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
    }

    @Test
    public void test10079() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10079");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode0 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 10);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode3 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode4 = functionNode3.getTop();
        functionNode3.setParens((int) (byte) 1, (int) (short) 1);
        functionNode3.setEncodedSourceStart((-1));
        functionNode3.setFunctionIsGetter();
        scope2.addChildToFront((com.google.javascript.rhino.head.Node) functionNode3);
        functionNode0.setBody((com.google.javascript.rhino.head.ast.AstNode) functionNode3);
        functionNode0.setRequiresActivation();
        boolean boolean14 = functionNode0.isExpressionClosure();
        functionNode0.setSourceName("hi!");
        functionNode0.setBaseLineno((int) '#');
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor19 = null;
        // The following exception was thrown during execution in test generation
        try {
            functionNode0.visit(nodeVisitor19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(scriptNode4);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test10080() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10080");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode0 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int1 = functionNode0.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = functionNode0.getTop();
        boolean boolean3 = functionNode0.hasSideEffects();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList4 = functionNode0.getSymbols();
        functionNode0.setRp(5);
        com.google.javascript.rhino.head.ast.Jump jump8 = new com.google.javascript.rhino.head.ast.Jump((int) (short) 0);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode9 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int10 = functionNode9.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = functionNode9.getTop();
        com.google.javascript.rhino.head.ast.Name name12 = null;
        functionNode9.setFunctionName(name12);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode14 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode15 = functionNode14.getTop();
        functionNode9.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode14);
        functionNode14.setIsExpressionClosure(true);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode20 = new com.google.javascript.rhino.head.ast.FunctionNode((int) (byte) 100);
        int int21 = functionNode14.addFunction(functionNode20);
        int int22 = jump8.compareTo((com.google.javascript.rhino.head.ast.AstNode) functionNode20);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode24 = new com.google.javascript.rhino.head.ast.FunctionNode(0);
        com.google.javascript.rhino.head.ast.Jump jump30 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump30.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump34 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump30, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode36 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int37 = scriptNode36.getEndLineno();
        int int38 = scriptNode36.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList39 = scriptNode36.getChildScopes();
        com.google.javascript.rhino.head.Node node40 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump30, (com.google.javascript.rhino.head.Node) scriptNode36);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList41 = scriptNode36.getFunctions();
        functionNodeList41.clear();
        com.google.javascript.rhino.head.ast.Jump jump47 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump47.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump51 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump47, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode53 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int54 = scriptNode53.getEndLineno();
        int int55 = scriptNode53.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList56 = scriptNode53.getChildScopes();
        com.google.javascript.rhino.head.Node node57 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump47, (com.google.javascript.rhino.head.Node) scriptNode53);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList58 = scriptNode53.getFunctions();
        boolean boolean59 = functionNodeList41.removeAll((java.util.Collection<com.google.javascript.rhino.head.ast.FunctionNode>) functionNodeList58);
        functionNode24.putProp(20, (java.lang.Object) functionNodeList41);
        int int61 = functionNode20.addFunction(functionNode24);
        boolean boolean62 = functionNode24.isGenerator();
        int int63 = functionNode0.addFunction(functionNode24);
        functionNode0.setBaseLineno(10);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode66 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode67 = functionNode66.getTop();
        functionNode66.setParens((int) (byte) 1, (int) (short) 1);
        functionNode66.setEncodedSourceStart((-1));
        functionNode66.setIsGenerator();
        com.google.javascript.rhino.head.ast.Name name74 = functionNode66.getFunctionName();
        com.google.javascript.rhino.head.Node node75 = null;
        functionNode0.addChildBefore((com.google.javascript.rhino.head.Node) functionNode66, node75);
        functionNode66.setBounds((-817814412), (int) (byte) 100);
        com.google.javascript.rhino.head.ast.Name name80 = functionNode66.getFunctionName();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode82 = new com.google.javascript.rhino.head.ast.FunctionNode((-18802601));
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList83 = functionNode82.getSymbols();
        functionNode66.setSymbols(symbolList83);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-1) + "'", int1 == (-1));
        org.junit.Assert.assertNotNull(scriptNode2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(symbolList4);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(scriptNode11);
        org.junit.Assert.assertNotNull(scriptNode15);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNull(scopeList39);
        org.junit.Assert.assertNotNull(functionNodeList41);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1));
        org.junit.Assert.assertNull(scopeList56);
        org.junit.Assert.assertNotNull(functionNodeList58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 0 + "'", int61 == 0);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 0 + "'", int63 == 0);
        org.junit.Assert.assertNotNull(scriptNode67);
        org.junit.Assert.assertNull(name74);
        org.junit.Assert.assertNull(name80);
        org.junit.Assert.assertNotNull(symbolList83);
    }

    @Test
    public void test10081() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10081");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode1 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = functionNode1.getTop();
        functionNode1.setParens((int) (byte) 1, (int) (short) 1);
        com.google.javascript.rhino.head.Node node6 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) functionNode1);
        functionNode1.setRequiresActivation();
        java.lang.String str8 = functionNode1.shortName();
        int int9 = functionNode1.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList10 = functionNode1.getFunctions();
        com.google.javascript.rhino.head.ast.Jump jump15 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump15.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump19 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump15, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode21 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int22 = scriptNode21.getEndLineno();
        int int23 = scriptNode21.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList24 = scriptNode21.getChildScopes();
        com.google.javascript.rhino.head.Node node25 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump15, (com.google.javascript.rhino.head.Node) scriptNode21);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList26 = scriptNode21.getFunctions();
        functionNodeList26.clear();
        functionNodeList26.clear();
        java.util.Iterator<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeItor29 = functionNodeList26.iterator();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode30 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int31 = functionNode30.getLp();
        functionNode30.setLp((int) (short) 1);
        int int36 = functionNode30.getIntProp(4, 26);
        functionNode30.flattenSymbolTable(true);
        boolean boolean39 = functionNodeList26.equals((java.lang.Object) functionNode30);
        boolean boolean40 = functionNodeList10.removeAll((java.util.Collection<com.google.javascript.rhino.head.ast.FunctionNode>) functionNodeList26);
        java.util.Iterator<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeItor41 = functionNodeList10.iterator();
        int int42 = functionNodeList10.size();
        org.junit.Assert.assertNotNull(scriptNode2);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "FunctionNode" + "'", str8, "FunctionNode");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(functionNodeList10);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNull(scopeList24);
        org.junit.Assert.assertNotNull(functionNodeList26);
        org.junit.Assert.assertNotNull(functionNodeItor29);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 26 + "'", int36 == 26);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(functionNodeItor41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
    }

    @Test
    public void test10082() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10082");
        com.google.javascript.rhino.head.ast.Name name1 = null;
        com.google.javascript.rhino.head.ast.FunctionNode functionNode2 = new com.google.javascript.rhino.head.ast.FunctionNode(4, name1);
        com.google.javascript.rhino.head.ast.Jump jump7 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump7.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump11 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump7, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode13 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int14 = scriptNode13.getEndLineno();
        int int15 = scriptNode13.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList16 = scriptNode13.getChildScopes();
        com.google.javascript.rhino.head.Node node17 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump7, (com.google.javascript.rhino.head.Node) scriptNode13);
        com.google.javascript.rhino.head.Node node19 = scriptNode13.setType(0);
        functionNode2.setParentScope((com.google.javascript.rhino.head.ast.Scope) scriptNode13);
        scriptNode13.setLineno(0);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNull(scopeList16);
        org.junit.Assert.assertNotNull(node19);
    }

    @Test
    public void test10083() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10083");
        java.lang.String str1 = com.google.javascript.rhino.head.ast.AstNode.operatorToString(12);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "==" + "'", str1, "==");
    }

    @Test
    public void test10084() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10084");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int2 = scriptNode1.getEndLineno();
        int int3 = scriptNode1.getBaseLineno();
        com.google.javascript.rhino.head.ast.Jump jump6 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode8 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int9 = scriptNode8.getEndLineno();
        int int10 = scriptNode8.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList11 = scriptNode8.getChildScopes();
        jump6.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode8);
        java.lang.String str13 = scriptNode8.debugPrint();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode1, (com.google.javascript.rhino.head.ast.Scope) scriptNode8);
        com.google.javascript.rhino.head.ast.AstNode astNode15 = scriptNode1.getParent();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList16 = scriptNode1.getSymbols();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNull(scopeList11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str13, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertNull(astNode15);
        org.junit.Assert.assertNotNull(symbolList16);
    }

    @Test
    public void test10085() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10085");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode0 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int1 = functionNode0.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = functionNode0.getTop();
        com.google.javascript.rhino.head.ast.Name name3 = null;
        functionNode0.setFunctionName(name3);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode5 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int6 = functionNode5.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode8 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        java.lang.String str9 = functionNode5.toStringTree(scriptNode8);
        functionNode5.setFunctionIsGetter();
        int int11 = functionNode0.addFunction(functionNode5);
        boolean boolean12 = functionNode5.hasSideEffects();
        com.google.javascript.rhino.head.Node node13 = functionNode5.getLastChild();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode14 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int15 = functionNode14.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode17 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        java.lang.String str18 = functionNode14.toStringTree(scriptNode17);
        functionNode14.setFunctionIsGetter();
        com.google.javascript.rhino.head.ast.AstNode astNode20 = functionNode14.getBody();
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList21 = functionNode14.getParams();
        functionNode5.setParams(astNodeList21);
        int int23 = functionNode5.getLineno();
        int int24 = functionNode5.getFunctionCount();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-1) + "'", int1 == (-1));
        org.junit.Assert.assertNotNull(scriptNode2);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNull(node13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(astNode20);
        org.junit.Assert.assertNotNull(astNodeList21);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
    }

    @Test
    public void test10086() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10086");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode0 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int1 = functionNode0.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode3 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        java.lang.String str4 = functionNode0.toStringTree(scriptNode3);
        functionNode0.setFunctionIsGetter();
        com.google.javascript.rhino.head.ast.AstNode astNode6 = functionNode0.getBody();
        functionNode0.setParens(21, (int) '#');
        int int10 = functionNode0.getLp();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode11 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int12 = functionNode11.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        java.lang.String str15 = functionNode11.toStringTree(scriptNode14);
        functionNode0.setBody((com.google.javascript.rhino.head.ast.AstNode) scriptNode14);
        java.lang.String str17 = scriptNode14.toString();
        com.google.javascript.rhino.head.Node node18 = scriptNode14.getFirstChild();
        java.lang.String str20 = scriptNode14.makeIndent((int) (byte) 1);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-1) + "'", int1 == (-1));
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(astNode6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 21 + "'", int10 == 21);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "136" + "'", str17, "136");
        org.junit.Assert.assertNull(node18);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "  " + "'", str20, "  ");
    }

    @Test
    public void test10087() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10087");
        com.google.javascript.rhino.head.Token.CommentType commentType5 = com.google.javascript.rhino.head.Token.CommentType.HTML;
        com.google.javascript.rhino.head.ast.Comment comment7 = new com.google.javascript.rhino.head.ast.Comment(20, 1, commentType5, "109");
        java.lang.String str9 = comment7.toSource(19);
        java.lang.String str10 = comment7.getValue();
        java.lang.String str11 = comment7.getValue();
        com.google.javascript.rhino.head.Token.CommentType commentType12 = com.google.javascript.rhino.head.Token.CommentType.LINE;
        comment7.setCommentType(commentType12);
        com.google.javascript.rhino.head.ast.Comment comment15 = new com.google.javascript.rhino.head.ast.Comment(1, 1, commentType12, "                    /null/");
        java.lang.String str16 = comment15.getValue();
        java.lang.String str18 = comment15.toSource(8);
        com.google.javascript.rhino.head.ast.Jump jump20 = new com.google.javascript.rhino.head.ast.Jump((int) (byte) 100, (com.google.javascript.rhino.head.Node) comment15, (int) (short) 10);
        java.lang.String str21 = comment15.getValue();
        java.lang.String str22 = comment15.getValue();
        com.google.javascript.rhino.head.Node node23 = comment15.getLastChild();
        com.google.javascript.rhino.head.Token.CommentType commentType30 = com.google.javascript.rhino.head.Token.CommentType.HTML;
        com.google.javascript.rhino.head.ast.Comment comment32 = new com.google.javascript.rhino.head.ast.Comment(20, 1, commentType30, "109");
        com.google.javascript.rhino.head.ast.Comment comment34 = new com.google.javascript.rhino.head.ast.Comment(20, 1579347477, commentType30, "$0");
        com.google.javascript.rhino.head.Token.CommentType commentType41 = com.google.javascript.rhino.head.Token.CommentType.HTML;
        com.google.javascript.rhino.head.ast.Comment comment43 = new com.google.javascript.rhino.head.ast.Comment(20, 1, commentType41, "109");
        com.google.javascript.rhino.head.ast.Comment comment45 = new com.google.javascript.rhino.head.ast.Comment(136, 15, commentType41, "-1\tSCRIPT -1 1\n");
        com.google.javascript.rhino.head.Token.CommentType commentType46 = com.google.javascript.rhino.head.Token.CommentType.JSDOC;
        comment45.setCommentType(commentType46);
        com.google.javascript.rhino.head.ast.Comment comment49 = new com.google.javascript.rhino.head.ast.Comment(7, (int) (byte) 0, commentType46, "  {\n  }\n");
        com.google.javascript.rhino.head.Token.CommentType commentType54 = com.google.javascript.rhino.head.Token.CommentType.HTML;
        com.google.javascript.rhino.head.ast.Comment comment56 = new com.google.javascript.rhino.head.ast.Comment(20, 1, commentType54, "109");
        com.google.javascript.rhino.head.ast.Comment comment58 = new com.google.javascript.rhino.head.ast.Comment(136, 15, commentType54, "-1\tSCRIPT -1 1\n");
        com.google.javascript.rhino.head.Token.CommentType commentType59 = com.google.javascript.rhino.head.Token.CommentType.JSDOC;
        comment58.setCommentType(commentType59);
        com.google.javascript.rhino.head.Token.CommentType commentType61 = com.google.javascript.rhino.head.Token.CommentType.JSDOC;
        comment58.setCommentType(commentType61);
        com.google.javascript.rhino.head.Token.CommentType commentType65 = com.google.javascript.rhino.head.Token.CommentType.HTML;
        com.google.javascript.rhino.head.ast.Comment comment67 = new com.google.javascript.rhino.head.ast.Comment(20, (int) (short) -1, commentType65, "EOF");
        comment58.setCommentType(commentType65);
        comment49.setCommentType(commentType65);
        com.google.javascript.rhino.head.Token.CommentType commentType70 = comment49.getCommentType();
        com.google.javascript.rhino.head.Token.CommentType commentType73 = com.google.javascript.rhino.head.Token.CommentType.LINE;
        com.google.javascript.rhino.head.ast.Comment comment75 = new com.google.javascript.rhino.head.ast.Comment((int) (short) 1, (int) (byte) 100, commentType73, "                                                                                                                                                                                                        ");
        comment49.setCommentType(commentType73);
        comment34.setCommentType(commentType73);
        com.google.javascript.rhino.head.ast.Comment comment79 = new com.google.javascript.rhino.head.ast.Comment((-860972433), (int) (byte) 10, commentType73, "40");
        java.lang.String str80 = comment79.getValue();
        com.google.javascript.rhino.head.Token.CommentType commentType83 = com.google.javascript.rhino.head.Token.CommentType.HTML;
        com.google.javascript.rhino.head.ast.Comment comment85 = new com.google.javascript.rhino.head.ast.Comment(20, (int) (short) -1, commentType83, "EOF");
        java.lang.String str86 = comment85.getValue();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode87 = comment85.getEnclosingFunction();
        com.google.javascript.rhino.head.Token.CommentType commentType88 = comment85.getCommentType();
        comment79.setCommentType(commentType88);
        com.google.javascript.rhino.head.Token.CommentType commentType90 = comment79.getCommentType();
        comment15.setCommentType(commentType90);
        org.junit.Assert.assertTrue("'" + commentType5 + "' != '" + com.google.javascript.rhino.head.Token.CommentType.HTML + "'", commentType5.equals(com.google.javascript.rhino.head.Token.CommentType.HTML));
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "                                      109" + "'", str9, "                                      109");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "109" + "'", str10, "109");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "109" + "'", str11, "109");
        org.junit.Assert.assertTrue("'" + commentType12 + "' != '" + com.google.javascript.rhino.head.Token.CommentType.LINE + "'", commentType12.equals(com.google.javascript.rhino.head.Token.CommentType.LINE));
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "                    /null/" + "'", str16, "                    /null/");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "                                    /null/" + "'", str18, "                                    /null/");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "                    /null/" + "'", str21, "                    /null/");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "                    /null/" + "'", str22, "                    /null/");
        org.junit.Assert.assertNull(node23);
        org.junit.Assert.assertTrue("'" + commentType30 + "' != '" + com.google.javascript.rhino.head.Token.CommentType.HTML + "'", commentType30.equals(com.google.javascript.rhino.head.Token.CommentType.HTML));
        org.junit.Assert.assertTrue("'" + commentType41 + "' != '" + com.google.javascript.rhino.head.Token.CommentType.HTML + "'", commentType41.equals(com.google.javascript.rhino.head.Token.CommentType.HTML));
        org.junit.Assert.assertTrue("'" + commentType46 + "' != '" + com.google.javascript.rhino.head.Token.CommentType.JSDOC + "'", commentType46.equals(com.google.javascript.rhino.head.Token.CommentType.JSDOC));
        org.junit.Assert.assertTrue("'" + commentType54 + "' != '" + com.google.javascript.rhino.head.Token.CommentType.HTML + "'", commentType54.equals(com.google.javascript.rhino.head.Token.CommentType.HTML));
        org.junit.Assert.assertTrue("'" + commentType59 + "' != '" + com.google.javascript.rhino.head.Token.CommentType.JSDOC + "'", commentType59.equals(com.google.javascript.rhino.head.Token.CommentType.JSDOC));
        org.junit.Assert.assertTrue("'" + commentType61 + "' != '" + com.google.javascript.rhino.head.Token.CommentType.JSDOC + "'", commentType61.equals(com.google.javascript.rhino.head.Token.CommentType.JSDOC));
        org.junit.Assert.assertTrue("'" + commentType65 + "' != '" + com.google.javascript.rhino.head.Token.CommentType.HTML + "'", commentType65.equals(com.google.javascript.rhino.head.Token.CommentType.HTML));
        org.junit.Assert.assertTrue("'" + commentType70 + "' != '" + com.google.javascript.rhino.head.Token.CommentType.HTML + "'", commentType70.equals(com.google.javascript.rhino.head.Token.CommentType.HTML));
        org.junit.Assert.assertTrue("'" + commentType73 + "' != '" + com.google.javascript.rhino.head.Token.CommentType.LINE + "'", commentType73.equals(com.google.javascript.rhino.head.Token.CommentType.LINE));
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "40" + "'", str80, "40");
        org.junit.Assert.assertTrue("'" + commentType83 + "' != '" + com.google.javascript.rhino.head.Token.CommentType.HTML + "'", commentType83.equals(com.google.javascript.rhino.head.Token.CommentType.HTML));
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "EOF" + "'", str86, "EOF");
        org.junit.Assert.assertNull(functionNode87);
        org.junit.Assert.assertTrue("'" + commentType88 + "' != '" + com.google.javascript.rhino.head.Token.CommentType.HTML + "'", commentType88.equals(com.google.javascript.rhino.head.Token.CommentType.HTML));
        org.junit.Assert.assertTrue("'" + commentType90 + "' != '" + com.google.javascript.rhino.head.Token.CommentType.HTML + "'", commentType90.equals(com.google.javascript.rhino.head.Token.CommentType.HTML));
    }

    @Test
    public void test10088() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10088");
        com.google.javascript.rhino.head.ast.Jump jump2 = new com.google.javascript.rhino.head.ast.Jump((int) (short) 0);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode3 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int4 = functionNode3.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = functionNode3.getTop();
        com.google.javascript.rhino.head.ast.Name name6 = null;
        functionNode3.setFunctionName(name6);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode8 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode9 = functionNode8.getTop();
        functionNode3.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode8);
        functionNode8.setIsExpressionClosure(true);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode14 = new com.google.javascript.rhino.head.ast.FunctionNode((int) (byte) 100);
        int int15 = functionNode8.addFunction(functionNode14);
        int int16 = jump2.compareTo((com.google.javascript.rhino.head.ast.AstNode) functionNode14);
        functionNode14.setEncodedSourceStart((int) '4');
        functionNode14.setLength(48);
        functionNode14.setFunctionType(19);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode24 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int25 = functionNode24.getLp();
        functionNode24.setEncodedSource("");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode28 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int29 = functionNode28.getLp();
        functionNode28.setEncodedSource("");
        functionNode28.flattenSymbolTable(false);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode34 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int35 = functionNode34.getLp();
        com.google.javascript.rhino.head.Node node37 = new com.google.javascript.rhino.head.Node((-1), (com.google.javascript.rhino.head.Node) functionNode24, (com.google.javascript.rhino.head.Node) functionNode28, (com.google.javascript.rhino.head.Node) functionNode34, (int) '#');
        boolean boolean38 = functionNode34.isGenerator();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode40 = new com.google.javascript.rhino.head.ast.FunctionNode((-1262414679));
        com.google.javascript.rhino.head.Token.CommentType commentType45 = com.google.javascript.rhino.head.Token.CommentType.HTML;
        com.google.javascript.rhino.head.ast.Comment comment47 = new com.google.javascript.rhino.head.ast.Comment(20, 1, commentType45, "109");
        java.lang.String str49 = comment47.toSource(19);
        java.lang.String str50 = comment47.getValue();
        com.google.javascript.rhino.head.Token.CommentType commentType51 = com.google.javascript.rhino.head.Token.CommentType.HTML;
        comment47.setCommentType(commentType51);
        com.google.javascript.rhino.head.ast.Comment comment54 = new com.google.javascript.rhino.head.ast.Comment(9, 6, commentType51, "                    ");
        functionNode40.setJsDocNode(comment54);
        com.google.javascript.rhino.head.Node node57 = new com.google.javascript.rhino.head.Node(25, (com.google.javascript.rhino.head.Node) functionNode14, (com.google.javascript.rhino.head.Node) functionNode34, (com.google.javascript.rhino.head.Node) functionNode40, (int) (short) 10);
        functionNode14.setSourceName("                                            {\n                                            }\n");
        int int60 = functionNode14.getRegexpCount();
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(scriptNode5);
        org.junit.Assert.assertNotNull(scriptNode9);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + commentType45 + "' != '" + com.google.javascript.rhino.head.Token.CommentType.HTML + "'", commentType45.equals(com.google.javascript.rhino.head.Token.CommentType.HTML));
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "                                      109" + "'", str49, "                                      109");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "109" + "'", str50, "109");
        org.junit.Assert.assertTrue("'" + commentType51 + "' != '" + com.google.javascript.rhino.head.Token.CommentType.HTML + "'", commentType51.equals(com.google.javascript.rhino.head.Token.CommentType.HTML));
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 0 + "'", int60 == 0);
    }

    @Test
    public void test10089() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10089");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode0 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = functionNode0.getTop();
        com.google.javascript.rhino.head.ast.Name name2 = null;
        functionNode0.setFunctionName(name2);
        int int4 = functionNode0.getLength();
        functionNode0.setFunctionIsSetter();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator6 = functionNode0.new NodeIterator();
        boolean boolean7 = nodeIterator6.hasNext();
        // The following exception was thrown during execution in test generation
        try {
            nodeIterator6.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: next() has not been called");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(scriptNode1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 1 + "'", int4 == 1);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    public void test10090() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10090");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode0 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = functionNode0.getTop();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode3 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int4 = functionNode3.getLp();
        functionNode3.setEncodedSource("");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode7 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int8 = functionNode7.getLp();
        functionNode7.setEncodedSource("");
        functionNode7.flattenSymbolTable(false);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode13 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int14 = functionNode13.getLp();
        com.google.javascript.rhino.head.Node node16 = new com.google.javascript.rhino.head.Node((-1), (com.google.javascript.rhino.head.Node) functionNode3, (com.google.javascript.rhino.head.Node) functionNode7, (com.google.javascript.rhino.head.Node) functionNode13, (int) '#');
        com.google.javascript.rhino.head.ast.AstNode astNode17 = functionNode3.getBody();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode18 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int19 = functionNode18.getLp();
        functionNode18.setEncodedSource("");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode22 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int23 = functionNode22.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode24 = functionNode22.getTop();
        com.google.javascript.rhino.head.ast.Name name25 = null;
        functionNode22.setFunctionName(name25);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode27 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode28 = functionNode27.getTop();
        functionNode22.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode27);
        int int30 = functionNode27.getRp();
        int int31 = functionNode27.getFunctionType();
        functionNode18.addParam((com.google.javascript.rhino.head.ast.AstNode) functionNode27);
        com.google.javascript.rhino.head.ast.Scope scope33 = functionNode27.getEnclosingScope();
        functionNode3.setBody((com.google.javascript.rhino.head.ast.AstNode) functionNode27);
        int int35 = functionNode0.addFunction(functionNode3);
        functionNode0.setEncodedSourceEnd(350469479);
        com.google.javascript.rhino.head.ast.Scope scope39 = new com.google.javascript.rhino.head.ast.Scope((int) (byte) -1);
        functionNode0.addChild((com.google.javascript.rhino.head.ast.AstNode) scope39);
        int int41 = functionNode0.getLength();
        int int42 = functionNode0.getLineno();
        functionNode0.flattenSymbolTable(true);
        org.junit.Assert.assertNotNull(scriptNode1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNull(astNode17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNotNull(scriptNode24);
        org.junit.Assert.assertNotNull(scriptNode28);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNotNull(scope33);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 1 + "'", int41 == 1);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
    }

    @Test
    public void test10091() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10091");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode0 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = functionNode0.getTop();
        functionNode0.setParens((int) (byte) 1, (int) (short) 1);
        int int7 = functionNode0.getIntProp((int) (short) 100, (int) (byte) 10);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode8 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int9 = functionNode8.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = functionNode8.getTop();
        boolean boolean11 = functionNode8.hasSideEffects();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode13 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int14 = scriptNode13.getEndLineno();
        int int15 = scriptNode13.getBaseLineno();
        com.google.javascript.rhino.head.ast.Jump jump18 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode20 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int21 = scriptNode20.getEndLineno();
        int int22 = scriptNode20.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList23 = scriptNode20.getChildScopes();
        jump18.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode20);
        java.lang.String str25 = scriptNode20.debugPrint();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode13, (com.google.javascript.rhino.head.ast.Scope) scriptNode20);
        com.google.javascript.rhino.head.ast.Scope scope27 = new com.google.javascript.rhino.head.ast.Scope();
        scriptNode20.target = scope27;
        functionNode8.addChildScope(scope27);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode30 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int31 = functionNode30.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode32 = functionNode30.getTop();
        com.google.javascript.rhino.head.ast.Name name33 = null;
        functionNode30.setFunctionName(name33);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode35 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode36 = functionNode35.getTop();
        functionNode30.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode35);
        com.google.javascript.rhino.head.ast.Scope scope40 = new com.google.javascript.rhino.head.ast.Scope((int) (short) -1, 0);
        functionNode30.replaceWith(scope40);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode42 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int43 = functionNode42.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode44 = functionNode42.getTop();
        com.google.javascript.rhino.head.ast.Name name45 = null;
        functionNode42.setFunctionName(name45);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode47 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode48 = functionNode47.getTop();
        functionNode42.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode47);
        int int50 = functionNode30.addFunction(functionNode42);
        int int51 = functionNode8.addFunction(functionNode42);
        functionNode0.addChildScope((com.google.javascript.rhino.head.ast.Scope) functionNode42);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode53 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int54 = functionNode53.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode55 = functionNode53.getTop();
        boolean boolean56 = functionNode53.hasSideEffects();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList57 = functionNode53.getSymbols();
        int int58 = functionNode53.getLength();
        boolean boolean59 = functionNode53.isGetterOrSetter();
        functionNode0.addResumptionPoint((com.google.javascript.rhino.head.Node) functionNode53);
        int int61 = functionNode53.getEncodedSourceEnd();
        functionNode53.setPosition(1685771249);
        org.junit.Assert.assertNotNull(scriptNode1);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 10 + "'", int7 == 10);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(scriptNode10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNull(scopeList23);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str25, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNotNull(scriptNode32);
        org.junit.Assert.assertNotNull(scriptNode36);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertNotNull(scriptNode44);
        org.junit.Assert.assertNotNull(scriptNode48);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
        org.junit.Assert.assertNotNull(scriptNode55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(symbolList57);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 1 + "'", int58 == 1);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + (-1) + "'", int61 == (-1));
    }

    @Test
    public void test10092() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10092");
        com.google.javascript.rhino.head.Token.CommentType commentType4 = com.google.javascript.rhino.head.Token.CommentType.HTML;
        com.google.javascript.rhino.head.ast.Comment comment6 = new com.google.javascript.rhino.head.ast.Comment(20, 1, commentType4, "109");
        com.google.javascript.rhino.head.ast.Comment comment8 = new com.google.javascript.rhino.head.ast.Comment(11, 35, commentType4, "                    109");
        com.google.javascript.rhino.head.Token.CommentType commentType9 = comment8.getCommentType();
        int int10 = comment8.getType();
        java.lang.String str12 = comment8.toSource((-817814412));
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor13 = null;
        // The following exception was thrown during execution in test generation
        try {
            comment8.visit(nodeVisitor13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + commentType4 + "' != '" + com.google.javascript.rhino.head.Token.CommentType.HTML + "'", commentType4.equals(com.google.javascript.rhino.head.Token.CommentType.HTML));
        org.junit.Assert.assertTrue("'" + commentType9 + "' != '" + com.google.javascript.rhino.head.Token.CommentType.HTML + "'", commentType9.equals(com.google.javascript.rhino.head.Token.CommentType.HTML));
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 161 + "'", int10 == 161);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "                    109" + "'", str12, "                    109");
    }

    @Test
    public void test10093() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10093");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 10);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode2 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode3 = functionNode2.getTop();
        functionNode2.setParens((int) (byte) 1, (int) (short) 1);
        functionNode2.setEncodedSourceStart((-1));
        functionNode2.setFunctionIsGetter();
        scope1.addChildToFront((com.google.javascript.rhino.head.Node) functionNode2);
        functionNode2.setRp(19);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int15 = scriptNode14.getEndLineno();
        int int16 = scriptNode14.getBaseLineno();
        com.google.javascript.rhino.head.ast.Jump jump19 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode21 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int22 = scriptNode21.getEndLineno();
        int int23 = scriptNode21.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList24 = scriptNode21.getChildScopes();
        jump19.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode21);
        java.lang.String str26 = scriptNode21.debugPrint();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode14, (com.google.javascript.rhino.head.ast.Scope) scriptNode21);
        com.google.javascript.rhino.head.ast.Scope scope28 = new com.google.javascript.rhino.head.ast.Scope();
        scriptNode21.target = scope28;
        java.lang.String str30 = functionNode2.toStringTree(scriptNode21);
        java.lang.String str32 = scriptNode21.toSource((int) (short) 10);
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap33 = scriptNode21.getSymbolTable();
        java.util.Collection<com.google.javascript.rhino.head.ast.Symbol> symbolCollection34 = strMap33.values();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode35 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int36 = functionNode35.getLp();
        com.google.javascript.rhino.head.ast.Scope scope39 = new com.google.javascript.rhino.head.ast.Scope(15, (int) (byte) 0);
        com.google.javascript.rhino.head.ast.Symbol symbol41 = scope39.getSymbol("");
        com.google.javascript.rhino.head.ast.Name name43 = null;
        com.google.javascript.rhino.head.ast.FunctionNode functionNode44 = new com.google.javascript.rhino.head.ast.FunctionNode(1, name43);
        boolean boolean45 = functionNode44.isGetterOrSetter();
        int int46 = functionNode44.getEncodedSourceEnd();
        scope39.addChildrenToBack((com.google.javascript.rhino.head.Node) functionNode44);
        boolean boolean48 = strMap33.remove((java.lang.Object) int36, (java.lang.Object) functionNode44);
        strMap33.clear();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode51 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int52 = functionNode51.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode53 = functionNode51.getTop();
        boolean boolean54 = functionNode51.hasSideEffects();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode56 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int57 = scriptNode56.getEndLineno();
        int int58 = scriptNode56.getBaseLineno();
        com.google.javascript.rhino.head.ast.Jump jump61 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode63 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int64 = scriptNode63.getEndLineno();
        int int65 = scriptNode63.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList66 = scriptNode63.getChildScopes();
        jump61.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode63);
        java.lang.String str68 = scriptNode63.debugPrint();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode56, (com.google.javascript.rhino.head.ast.Scope) scriptNode63);
        com.google.javascript.rhino.head.ast.Scope scope70 = new com.google.javascript.rhino.head.ast.Scope();
        scriptNode63.target = scope70;
        functionNode51.addChildScope(scope70);
        boolean boolean73 = functionNode51.hasConsistentReturnUsage();
        java.lang.String str74 = functionNode51.getNextTempName();
        com.google.javascript.rhino.head.ast.Jump jump75 = new com.google.javascript.rhino.head.ast.Jump((int) (short) -1, (com.google.javascript.rhino.head.Node) functionNode51);
        boolean boolean76 = functionNode51.isExpressionClosure();
        functionNode51.putIntProp(1, 0);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode80 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int81 = functionNode80.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode82 = functionNode80.getTop();
        com.google.javascript.rhino.head.ast.Name name83 = null;
        functionNode80.setFunctionName(name83);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode85 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode86 = functionNode85.getTop();
        functionNode80.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode85);
        int int88 = functionNode85.getRp();
        functionNode85.setParens(11, 2);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode93 = new com.google.javascript.rhino.head.ast.FunctionNode((-1));
        int int94 = functionNode85.addFunction(functionNode93);
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) functionNode51, (com.google.javascript.rhino.head.ast.Scope) functionNode93);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode96 = functionNode51.getTop();
        com.google.javascript.rhino.head.ast.Symbol symbol97 = strMap33.remove((java.lang.Object) scriptNode96);
        int int98 = scriptNode96.getAbsolutePosition();
        int int99 = scriptNode96.getFunctionCount();
        org.junit.Assert.assertNotNull(scriptNode3);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNull(scopeList24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str26, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "                    {\n                    }\n" + "'", str32, "                    {\n                    }\n");
        org.junit.Assert.assertNotNull(strMap33);
        org.junit.Assert.assertNotNull(symbolCollection34);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNull(symbol41);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertNotNull(scriptNode53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + (-1) + "'", int58 == (-1));
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + (-1) + "'", int64 == (-1));
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + (-1) + "'", int65 == (-1));
        org.junit.Assert.assertNull(scopeList66);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str68, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "$0" + "'", str74, "$0");
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + (-1) + "'", int81 == (-1));
        org.junit.Assert.assertNotNull(scriptNode82);
        org.junit.Assert.assertNotNull(scriptNode86);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + (-1) + "'", int88 == (-1));
        org.junit.Assert.assertTrue("'" + int94 + "' != '" + 0 + "'", int94 == 0);
        org.junit.Assert.assertNotNull(scriptNode96);
        org.junit.Assert.assertNull(symbol97);
        org.junit.Assert.assertTrue("'" + int98 + "' != '" + (-1) + "'", int98 == (-1));
        org.junit.Assert.assertTrue("'" + int99 + "' != '" + 0 + "'", int99 == 0);
    }

    @Test
    public void test10094() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10094");
        com.google.javascript.rhino.head.ast.Jump jump5 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump5.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump9 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump5, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int12 = scriptNode11.getEndLineno();
        int int13 = scriptNode11.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList14 = scriptNode11.getChildScopes();
        com.google.javascript.rhino.head.Node node15 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump5, (com.google.javascript.rhino.head.Node) scriptNode11);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode17 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int18 = scriptNode17.getEndLineno();
        com.google.javascript.rhino.head.ast.RegExpLiteral regExpLiteral20 = new com.google.javascript.rhino.head.ast.RegExpLiteral((int) (short) 1);
        java.lang.String str22 = regExpLiteral20.toSource((int) (byte) 10);
        regExpLiteral20.setFlags("-1\tSCRIPT -1 1\n");
        regExpLiteral20.removeProp(8);
        com.google.javascript.rhino.head.Node node28 = new com.google.javascript.rhino.head.Node(10, node15, (com.google.javascript.rhino.head.Node) scriptNode17, (com.google.javascript.rhino.head.Node) regExpLiteral20, 3);
        regExpLiteral20.setFlags("$0");
        regExpLiteral20.setFlags("          109");
        java.lang.String str33 = regExpLiteral20.getValue();
        java.lang.String str34 = regExpLiteral20.getValue();
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNull(scopeList14);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "                    /null/" + "'", str22, "                    /null/");
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNull(str34);
    }

    @Test
    public void test10095() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10095");
        com.google.javascript.rhino.head.ast.Scope scope3 = new com.google.javascript.rhino.head.ast.Scope((-13), 771817347);
        com.google.javascript.rhino.head.Node node4 = null;
        com.google.javascript.rhino.head.ast.FunctionNode functionNode5 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int6 = functionNode5.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode7 = functionNode5.getTop();
        com.google.javascript.rhino.head.ast.Name name8 = null;
        functionNode5.setFunctionName(name8);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode10 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = functionNode10.getTop();
        functionNode5.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode10);
        int int13 = functionNode10.getRp();
        java.lang.String str14 = functionNode10.getSourceName();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode15 = functionNode10.getEnclosingFunction();
        functionNode10.setFunctionIsSetter();
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.Node node17 = new com.google.javascript.rhino.head.Node((-148907469), (com.google.javascript.rhino.head.Node) scope3, node4, (com.google.javascript.rhino.head.Node) functionNode10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(scriptNode7);
        org.junit.Assert.assertNotNull(scriptNode11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(functionNode15);
    }

    @Test
    public void test10096() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10096");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode2 = new com.google.javascript.rhino.head.ast.FunctionNode(0);
        int int3 = functionNode2.getBaseLineno();
        boolean boolean4 = functionNode2.isGetter();
        com.google.javascript.rhino.head.ast.RegExpLiteral regExpLiteral6 = new com.google.javascript.rhino.head.ast.RegExpLiteral((int) (short) 1);
        regExpLiteral6.setFlags("-1\tSCRIPT -1 1\n");
        java.lang.String str9 = regExpLiteral6.getValue();
        regExpLiteral6.setFlags("52");
        functionNode2.addChildrenToFront((com.google.javascript.rhino.head.Node) regExpLiteral6);
        boolean boolean13 = functionNode2.isGetterOrSetter();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode14 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode15 = functionNode14.getTop();
        int int16 = functionNode14.getRegexpCount();
        int int17 = functionNode14.getParamCount();
        com.google.javascript.rhino.head.ast.AstNode astNode18 = functionNode14.getBody();
        int int19 = functionNode2.addFunction(functionNode14);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode20 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int21 = functionNode20.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode22 = functionNode20.getTop();
        boolean boolean23 = functionNode20.hasSideEffects();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList24 = functionNode20.getSymbols();
        int int25 = functionNode20.getLength();
        boolean boolean26 = functionNode20.isGetterOrSetter();
        functionNode14.addChildrenToFront((com.google.javascript.rhino.head.Node) functionNode20);
        functionNode20.removeChildren();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode30 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int31 = functionNode30.getLp();
        functionNode30.setEncodedSource("");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode34 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int35 = functionNode34.getLp();
        functionNode34.setEncodedSource("");
        functionNode34.flattenSymbolTable(false);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode40 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int41 = functionNode40.getLp();
        com.google.javascript.rhino.head.Node node43 = new com.google.javascript.rhino.head.Node((-1), (com.google.javascript.rhino.head.Node) functionNode30, (com.google.javascript.rhino.head.Node) functionNode34, (com.google.javascript.rhino.head.Node) functionNode40, (int) '#');
        com.google.javascript.rhino.head.ast.AstNode astNode44 = functionNode30.getBody();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode45 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int46 = functionNode45.getLp();
        functionNode45.setEncodedSource("");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode49 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int50 = functionNode49.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode51 = functionNode49.getTop();
        com.google.javascript.rhino.head.ast.Name name52 = null;
        functionNode49.setFunctionName(name52);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode54 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode55 = functionNode54.getTop();
        functionNode49.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode54);
        int int57 = functionNode54.getRp();
        int int58 = functionNode54.getFunctionType();
        functionNode45.addParam((com.google.javascript.rhino.head.ast.AstNode) functionNode54);
        com.google.javascript.rhino.head.ast.Scope scope60 = functionNode54.getEnclosingScope();
        functionNode30.setBody((com.google.javascript.rhino.head.ast.AstNode) functionNode54);
        int int62 = functionNode30.getType();
        com.google.javascript.rhino.head.Node node63 = functionNode30.getLastSibling();
        com.google.javascript.rhino.head.Node node64 = new com.google.javascript.rhino.head.Node((-822402397), (com.google.javascript.rhino.head.Node) functionNode20, (com.google.javascript.rhino.head.Node) functionNode30);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(scriptNode15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNull(astNode18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertNotNull(scriptNode22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(symbolList24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 1 + "'", int25 == 1);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertNull(astNode44);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertNotNull(scriptNode51);
        org.junit.Assert.assertNotNull(scriptNode55);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertNotNull(scope60);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 109 + "'", int62 == 109);
        org.junit.Assert.assertNotNull(node63);
    }

    @Test
    public void test10097() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10097");
        com.google.javascript.rhino.head.ast.Symbol symbol0 = new com.google.javascript.rhino.head.ast.Symbol();
        symbol0.setIndex(6);
        com.google.javascript.rhino.head.ast.Scope scope3 = symbol0.getContainingTable();
        symbol0.setName("                    /null/$0");
        java.lang.String str6 = symbol0.getName();
        int int7 = symbol0.getDeclType();
        org.junit.Assert.assertNull(scope3);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "                    /null/$0" + "'", str6, "                    /null/$0");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
    }

    @Test
    public void test10098() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10098");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode0 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = functionNode0.getTop();
        functionNode0.setParens((int) (byte) 1, (int) (short) 1);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode5 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.Scope scope7 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 10);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode8 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode9 = functionNode8.getTop();
        functionNode8.setParens((int) (byte) 1, (int) (short) 1);
        functionNode8.setEncodedSourceStart((-1));
        functionNode8.setFunctionIsGetter();
        scope7.addChildToFront((com.google.javascript.rhino.head.Node) functionNode8);
        functionNode5.setBody((com.google.javascript.rhino.head.ast.AstNode) functionNode8);
        functionNode5.setFunctionIsSetter();
        int int19 = functionNode0.addFunction(functionNode5);
        java.lang.String str20 = functionNode0.getNextTempName();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode22 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int23 = scriptNode22.getEndLineno();
        int int24 = scriptNode22.getBaseLineno();
        scriptNode22.removeProp(0);
        scriptNode22.setEncodedSourceEnd(19);
        functionNode0.addParam((com.google.javascript.rhino.head.ast.AstNode) scriptNode22);
        functionNode0.setEncodedSource("                {\n                }\n");
        functionNode0.setEncodedSourceBounds(23, 0);
        java.lang.Object obj35 = functionNode0.getCompilerData();
        org.junit.Assert.assertNotNull(scriptNode1);
        org.junit.Assert.assertNotNull(scriptNode9);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "$0" + "'", str20, "$0");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertNull(obj35);
    }

    @Test
    public void test10099() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10099");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 10);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode2 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode3 = functionNode2.getTop();
        functionNode2.setParens((int) (byte) 1, (int) (short) 1);
        functionNode2.setEncodedSourceStart((-1));
        functionNode2.setFunctionIsGetter();
        scope1.addChildToFront((com.google.javascript.rhino.head.Node) functionNode2);
        functionNode2.setRp(19);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int15 = scriptNode14.getEndLineno();
        int int16 = scriptNode14.getBaseLineno();
        com.google.javascript.rhino.head.ast.Jump jump19 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode21 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int22 = scriptNode21.getEndLineno();
        int int23 = scriptNode21.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList24 = scriptNode21.getChildScopes();
        jump19.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode21);
        java.lang.String str26 = scriptNode21.debugPrint();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode14, (com.google.javascript.rhino.head.ast.Scope) scriptNode21);
        com.google.javascript.rhino.head.ast.Scope scope28 = new com.google.javascript.rhino.head.ast.Scope();
        scriptNode21.target = scope28;
        java.lang.String str30 = functionNode2.toStringTree(scriptNode21);
        java.lang.String str32 = scriptNode21.toSource((int) (short) 10);
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap33 = scriptNode21.getSymbolTable();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode34 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int35 = functionNode34.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode36 = functionNode34.getTop();
        com.google.javascript.rhino.head.ast.Name name37 = null;
        functionNode34.setFunctionName(name37);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode39 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode40 = functionNode39.getTop();
        functionNode34.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode39);
        int int42 = functionNode39.getRp();
        java.lang.Object obj43 = functionNode39.getCompilerData();
        boolean boolean44 = strMap33.containsKey(obj43);
        com.google.javascript.rhino.head.ast.Symbol symbol46 = new com.google.javascript.rhino.head.ast.Symbol();
        symbol46.setIndex(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode50 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int51 = scriptNode50.getEndLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode53 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int54 = scriptNode53.getEndLineno();
        scriptNode50.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode53);
        com.google.javascript.rhino.head.ast.Comment comment56 = null;
        scriptNode50.setJsDocNode(comment56);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList58 = scriptNode50.getSymbols();
        symbol46.setContainingTable((com.google.javascript.rhino.head.ast.Scope) scriptNode50);
        com.google.javascript.rhino.head.ast.Symbol symbol60 = strMap33.putIfAbsent("{\n}\n", symbol46);
        int int61 = strMap33.size();
        com.google.javascript.rhino.head.ast.Name name63 = null;
        com.google.javascript.rhino.head.ast.FunctionNode functionNode64 = new com.google.javascript.rhino.head.ast.FunctionNode(17, name63);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode65 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int66 = functionNode65.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode68 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        java.lang.String str69 = functionNode65.toStringTree(scriptNode68);
        int int70 = scriptNode68.getRegexpCount();
        java.lang.Object obj71 = scriptNode68.getCompilerData();
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList72 = scriptNode68.getStatements();
        java.lang.String str73 = functionNode64.toStringTree(scriptNode68);
        scriptNode68.setEndLineno((int) (short) 10);
        boolean boolean76 = strMap33.containsKey((java.lang.Object) (short) 10);
        com.google.javascript.rhino.head.ast.Symbol symbol78 = new com.google.javascript.rhino.head.ast.Symbol();
        java.lang.String str79 = symbol78.getName();
        com.google.javascript.rhino.head.Node node80 = symbol78.getNode();
        java.lang.String str81 = symbol78.toString();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode82 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int83 = functionNode82.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode85 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        java.lang.String str86 = functionNode82.toStringTree(scriptNode85);
        functionNode82.setFunctionIsGetter();
        com.google.javascript.rhino.head.ast.AstNode astNode88 = functionNode82.getBody();
        functionNode82.setParens(21, (int) '#');
        int int92 = functionNode82.getLineno();
        functionNode82.setRp(9);
        symbol78.setContainingTable((com.google.javascript.rhino.head.ast.Scope) functionNode82);
        java.lang.String str96 = symbol78.getDeclTypeName();
        java.lang.String str97 = symbol78.toString();
        com.google.javascript.rhino.head.ast.Symbol symbol98 = strMap33.put("                                                                                                                                                                                                        /null/-1\tSCRIPT -1 1\n", symbol78);
        org.junit.Assert.assertNotNull(scriptNode3);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNull(scopeList24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str26, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "                    {\n                    }\n" + "'", str32, "                    {\n                    }\n");
        org.junit.Assert.assertNotNull(strMap33);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertNotNull(scriptNode36);
        org.junit.Assert.assertNotNull(scriptNode40);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertNull(obj43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1));
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
        org.junit.Assert.assertNotNull(symbolList58);
        org.junit.Assert.assertNull(symbol60);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 1 + "'", int61 == 1);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + (-1) + "'", int66 == (-1));
        org.junit.Assert.assertNull(str69);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 0 + "'", int70 == 0);
        org.junit.Assert.assertNull(obj71);
        org.junit.Assert.assertNotNull(astNodeList72);
        org.junit.Assert.assertNull(str73);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNull(str79);
        org.junit.Assert.assertNull(node80);
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "Symbol (EOF) name=null" + "'", str81, "Symbol (EOF) name=null");
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + (-1) + "'", int83 == (-1));
        org.junit.Assert.assertNull(str86);
        org.junit.Assert.assertNull(astNode88);
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + (-1) + "'", int92 == (-1));
        org.junit.Assert.assertEquals("'" + str96 + "' != '" + "EOF" + "'", str96, "EOF");
        org.junit.Assert.assertEquals("'" + str97 + "' != '" + "Symbol (EOF) name=null" + "'", str97, "Symbol (EOF) name=null");
        org.junit.Assert.assertNull(symbol98);
    }

    @Test
    public void test10100() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10100");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode2 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode3 = functionNode2.getTop();
        com.google.javascript.rhino.head.ast.Name name4 = null;
        functionNode2.setFunctionName(name4);
        boolean boolean6 = functionNode2.requiresActivation();
        com.google.javascript.rhino.head.ast.Jump jump10 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump10.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump14 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump10, 0);
        com.google.javascript.rhino.head.ast.Jump jump18 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump18.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump22 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump18, 0);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode23 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int24 = functionNode23.getLp();
        functionNode23.setEncodedSource("");
        functionNode23.flattenSymbolTable(false);
        jump10.addChildAfter((com.google.javascript.rhino.head.Node) jump18, (com.google.javascript.rhino.head.Node) functionNode23);
        com.google.javascript.rhino.head.Node node30 = functionNode23.target;
        functionNode2.setBody((com.google.javascript.rhino.head.ast.AstNode) functionNode23);
        com.google.javascript.rhino.head.Node node33 = new com.google.javascript.rhino.head.Node(10, (com.google.javascript.rhino.head.Node) functionNode23, 10);
        functionNode23.setFunctionIsSetter();
        functionNode23.setBaseLineno(11);
        com.google.javascript.rhino.head.ast.AstNode astNode37 = functionNode23.getParent();
        com.google.javascript.rhino.head.Node node39 = functionNode23.setType(1579347477);
        com.google.javascript.rhino.head.ast.Jump jump41 = new com.google.javascript.rhino.head.ast.Jump(1685771249, (com.google.javascript.rhino.head.Node) functionNode23, (-727971506));
        org.junit.Assert.assertNotNull(scriptNode3);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertNull(node30);
        org.junit.Assert.assertNotNull(astNode37);
        org.junit.Assert.assertNotNull(node39);
    }

    @Test
    public void test10101() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10101");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int2 = scriptNode1.getEndLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode4 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int5 = scriptNode4.getEndLineno();
        scriptNode1.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode4);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode7 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int8 = functionNode7.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode9 = functionNode7.getTop();
        boolean boolean10 = functionNode7.hasSideEffects();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode12 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int13 = scriptNode12.getEndLineno();
        int int14 = scriptNode12.getBaseLineno();
        com.google.javascript.rhino.head.ast.Jump jump17 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode19 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int20 = scriptNode19.getEndLineno();
        int int21 = scriptNode19.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList22 = scriptNode19.getChildScopes();
        jump17.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode19);
        java.lang.String str24 = scriptNode19.debugPrint();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode12, (com.google.javascript.rhino.head.ast.Scope) scriptNode19);
        com.google.javascript.rhino.head.ast.Scope scope26 = new com.google.javascript.rhino.head.ast.Scope();
        scriptNode19.target = scope26;
        functionNode7.addChildScope(scope26);
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode4, (com.google.javascript.rhino.head.ast.Scope) functionNode7);
        int int30 = functionNode7.getFunctionCount();
        int int31 = functionNode7.getLineno();
        int int32 = functionNode7.getAbsolutePosition();
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList33 = functionNode7.getFunctions();
        // The following exception was thrown during execution in test generation
        try {
            java.util.ListIterator<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeItor35 = functionNodeList33.listIterator(24);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 24, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(scriptNode9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertNull(scopeList22);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str24, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNotNull(functionNodeList33);
    }

    @Test
    public void test10102() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10102");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode0 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int1 = functionNode0.getLp();
        functionNode0.setLp((int) (short) 1);
        int int6 = functionNode0.getIntProp(4, 26);
        functionNode0.flattenSymbolTable(true);
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList9 = functionNode0.getParams();
        functionNode0.setFunctionIsSetter();
        functionNode0.setRp(13);
        com.google.javascript.rhino.head.ast.Scope scope13 = functionNode0.getParentScope();
        java.lang.String str15 = functionNode0.makeIndent(161);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-1) + "'", int1 == (-1));
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 26 + "'", int6 == 26);
        org.junit.Assert.assertNotNull(astNodeList9);
        org.junit.Assert.assertNull(scope13);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "                                                                                                                                                                                                                                                                                                                                  " + "'", str15, "                                                                                                                                                                                                                                                                                                                                  ");
    }

    @Test
    public void test10103() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10103");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode2 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int3 = functionNode2.getLp();
        functionNode2.setEncodedSource("");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode6 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int7 = functionNode6.getLp();
        functionNode6.setEncodedSource("");
        functionNode6.flattenSymbolTable(false);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode12 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int13 = functionNode12.getLp();
        com.google.javascript.rhino.head.Node node15 = new com.google.javascript.rhino.head.Node((-1), (com.google.javascript.rhino.head.Node) functionNode2, (com.google.javascript.rhino.head.Node) functionNode6, (com.google.javascript.rhino.head.Node) functionNode12, (int) '#');
        functionNode12.setEncodedSourceStart(25);
        boolean boolean18 = functionNode12.requiresActivation();
        java.lang.String str19 = functionNode12.getNextTempName();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode21 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode22 = functionNode21.getTop();
        functionNode21.setParens((int) (byte) 1, (int) (short) 1);
        int int26 = functionNode21.getRp();
        com.google.javascript.rhino.head.Node node29 = com.google.javascript.rhino.head.Node.newString((int) (byte) 100, "");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode30 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int31 = functionNode30.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode33 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        java.lang.String str34 = functionNode30.toStringTree(scriptNode33);
        com.google.javascript.rhino.head.ast.Scope scope36 = scriptNode33.getDefiningScope("");
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList37 = scriptNode33.getSymbols();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode39 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int40 = scriptNode39.getEndLineno();
        int int41 = scriptNode39.getBaseLineno();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode33, (com.google.javascript.rhino.head.ast.Scope) scriptNode39);
        java.lang.String str43 = scriptNode39.getEncodedSource();
        com.google.javascript.rhino.head.Node node45 = new com.google.javascript.rhino.head.Node(136, (com.google.javascript.rhino.head.Node) functionNode21, node29, (com.google.javascript.rhino.head.Node) scriptNode39, (int) (short) 0);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode46 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int47 = functionNode46.getLp();
        functionNode46.setEncodedSource("");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode50 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.Scope scope52 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 10);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode53 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode54 = functionNode53.getTop();
        functionNode53.setParens((int) (byte) 1, (int) (short) 1);
        functionNode53.setEncodedSourceStart((-1));
        functionNode53.setFunctionIsGetter();
        scope52.addChildToFront((com.google.javascript.rhino.head.Node) functionNode53);
        functionNode50.setBody((com.google.javascript.rhino.head.ast.AstNode) functionNode53);
        int int63 = functionNode46.addFunction(functionNode50);
        com.google.javascript.rhino.head.Node node65 = new com.google.javascript.rhino.head.Node((int) '4', (com.google.javascript.rhino.head.Node) functionNode12, (com.google.javascript.rhino.head.Node) scriptNode39, (com.google.javascript.rhino.head.Node) functionNode50, 3);
        java.lang.String str66 = functionNode50.getJsDoc();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode68 = new com.google.javascript.rhino.head.ast.FunctionNode((-1));
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode70 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int71 = scriptNode70.getEndLineno();
        int int72 = scriptNode70.getBaseLineno();
        com.google.javascript.rhino.head.ast.Jump jump75 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode77 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int78 = scriptNode77.getEndLineno();
        int int79 = scriptNode77.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList80 = scriptNode77.getChildScopes();
        jump75.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode77);
        java.lang.String str82 = scriptNode77.debugPrint();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode70, (com.google.javascript.rhino.head.ast.Scope) scriptNode77);
        int int84 = scriptNode70.getBaseLineno();
        com.google.javascript.rhino.head.ast.Jump jump87 = new com.google.javascript.rhino.head.ast.Jump(3, 13);
        functionNode68.addChildAfter((com.google.javascript.rhino.head.Node) scriptNode70, (com.google.javascript.rhino.head.Node) jump87);
        functionNode50.addChildScope((com.google.javascript.rhino.head.ast.Scope) functionNode68);
        int int90 = functionNode50.getRegexpCount();
        java.lang.Class<?> wildcardClass91 = functionNode50.getClass();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "$0" + "'", str19, "$0");
        org.junit.Assert.assertNotNull(scriptNode22);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 1 + "'", int26 == 1);
        org.junit.Assert.assertNotNull(node29);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNull(scope36);
        org.junit.Assert.assertNotNull(symbolList37);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertNotNull(scriptNode54);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 0 + "'", int63 == 0);
        org.junit.Assert.assertNull(str66);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + (-1) + "'", int71 == (-1));
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + (-1) + "'", int72 == (-1));
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + (-1) + "'", int78 == (-1));
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + (-1) + "'", int79 == (-1));
        org.junit.Assert.assertNull(scopeList80);
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str82, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + (-1) + "'", int84 == (-1));
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + 0 + "'", int90 == 0);
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test10104() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10104");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode0 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int1 = functionNode0.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = functionNode0.getTop();
        com.google.javascript.rhino.head.ast.Jump jump8 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump8.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump12 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump8, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int15 = scriptNode14.getEndLineno();
        int int16 = scriptNode14.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList17 = scriptNode14.getChildScopes();
        com.google.javascript.rhino.head.Node node18 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump8, (com.google.javascript.rhino.head.Node) scriptNode14);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode20 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int21 = scriptNode20.getEndLineno();
        com.google.javascript.rhino.head.ast.RegExpLiteral regExpLiteral23 = new com.google.javascript.rhino.head.ast.RegExpLiteral((int) (short) 1);
        java.lang.String str25 = regExpLiteral23.toSource((int) (byte) 10);
        regExpLiteral23.setFlags("-1\tSCRIPT -1 1\n");
        regExpLiteral23.removeProp(8);
        com.google.javascript.rhino.head.Node node31 = new com.google.javascript.rhino.head.Node(10, node18, (com.google.javascript.rhino.head.Node) scriptNode20, (com.google.javascript.rhino.head.Node) regExpLiteral23, 3);
        java.lang.String str33 = regExpLiteral23.makeIndent((int) (short) 100);
        int int34 = regExpLiteral23.getType();
        functionNode0.setMemberExprNode((com.google.javascript.rhino.head.ast.AstNode) regExpLiteral23);
        functionNode0.clearParentScope();
        com.google.javascript.rhino.head.ast.Symbol symbol37 = new com.google.javascript.rhino.head.ast.Symbol();
        symbol37.setIndex(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode41 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int42 = scriptNode41.getEndLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode44 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int45 = scriptNode44.getEndLineno();
        scriptNode41.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode44);
        com.google.javascript.rhino.head.ast.Comment comment47 = null;
        scriptNode41.setJsDocNode(comment47);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList49 = scriptNode41.getSymbols();
        symbol37.setContainingTable((com.google.javascript.rhino.head.ast.Scope) scriptNode41);
        int int51 = scriptNode41.getLineno();
        java.lang.String str52 = scriptNode41.debugPrint();
        int int53 = scriptNode41.depth();
        com.google.javascript.rhino.head.ast.Comment comment54 = scriptNode41.getJsDocNode();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode55 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int56 = functionNode55.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode57 = functionNode55.getTop();
        boolean boolean58 = functionNode55.hasSideEffects();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList59 = functionNode55.getSymbols();
        int int60 = functionNode55.getLength();
        int int61 = functionNode55.getRegexpCount();
        functionNode55.setRequiresActivation();
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList63 = functionNode55.getParams();
        int int64 = scriptNode41.addFunction(functionNode55);
        int int65 = functionNode0.compareTo((com.google.javascript.rhino.head.ast.AstNode) functionNode55);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-1) + "'", int1 == (-1));
        org.junit.Assert.assertNotNull(scriptNode2);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNull(scopeList17);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "                    /null/" + "'", str25, "                    /null/");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "                                                                                                                                                                                                        " + "'", str33, "                                                                                                                                                                                                        ");
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 48 + "'", int34 == 48);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
        org.junit.Assert.assertNotNull(symbolList49);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1));
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "-1\tSCRIPT -1 1\n-1\tSCRIPT -1 1\n" + "'", str52, "-1\tSCRIPT -1 1\n-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertNull(comment54);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1));
        org.junit.Assert.assertNotNull(scriptNode57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(symbolList59);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 1 + "'", int60 == 1);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 0 + "'", int61 == 0);
        org.junit.Assert.assertNotNull(astNodeList63);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 0 + "'", int64 == 0);
// flaky:         org.junit.Assert.assertTrue("'" + int65 + "' != '" + (-118308405) + "'", int65 == (-118308405));
    }

    @Test
    public void test10105() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10105");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode0 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int1 = functionNode0.getLp();
        functionNode0.setEncodedSource("");
        functionNode0.setLp(2);
        java.util.List<com.google.javascript.rhino.head.Node> nodeList6 = functionNode0.getResumptionPoints();
        // The following exception was thrown during execution in test generation
        try {
            int int7 = functionNode0.getParamAndVarCount();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-1) + "'", int1 == (-1));
        org.junit.Assert.assertNull(nodeList6);
    }

    @Test
    public void test10106() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10106");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 10);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode2 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode3 = functionNode2.getTop();
        functionNode2.setParens((int) (byte) 1, (int) (short) 1);
        functionNode2.setEncodedSourceStart((-1));
        functionNode2.setFunctionIsGetter();
        scope1.addChildToFront((com.google.javascript.rhino.head.Node) functionNode2);
        functionNode2.setRp(19);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int15 = scriptNode14.getEndLineno();
        int int16 = scriptNode14.getBaseLineno();
        com.google.javascript.rhino.head.ast.Jump jump19 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode21 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int22 = scriptNode21.getEndLineno();
        int int23 = scriptNode21.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList24 = scriptNode21.getChildScopes();
        jump19.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode21);
        java.lang.String str26 = scriptNode21.debugPrint();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode14, (com.google.javascript.rhino.head.ast.Scope) scriptNode21);
        com.google.javascript.rhino.head.ast.Scope scope28 = new com.google.javascript.rhino.head.ast.Scope();
        scriptNode21.target = scope28;
        java.lang.String str30 = functionNode2.toStringTree(scriptNode21);
        java.lang.String str32 = scriptNode21.toSource((int) (short) 10);
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap33 = scriptNode21.getSymbolTable();
        int int34 = strMap33.size();
        com.google.javascript.rhino.head.ast.Jump jump39 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump39.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump43 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump39, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode45 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int46 = scriptNode45.getEndLineno();
        int int47 = scriptNode45.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList48 = scriptNode45.getChildScopes();
        com.google.javascript.rhino.head.Node node49 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump39, (com.google.javascript.rhino.head.Node) scriptNode45);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList50 = scriptNode45.getFunctions();
        functionNodeList50.clear();
        functionNodeList50.clear();
        com.google.javascript.rhino.head.ast.Jump jump57 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump57.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump61 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump57, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode63 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int64 = scriptNode63.getEndLineno();
        int int65 = scriptNode63.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList66 = scriptNode63.getChildScopes();
        com.google.javascript.rhino.head.Node node67 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump57, (com.google.javascript.rhino.head.Node) scriptNode63);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList68 = scriptNode63.getFunctions();
        java.util.Spliterator<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeSpliterator69 = functionNodeList68.spliterator();
        int int71 = functionNodeList68.indexOf((java.lang.Object) (byte) 10);
        boolean boolean72 = functionNodeList50.retainAll((java.util.Collection<com.google.javascript.rhino.head.ast.FunctionNode>) functionNodeList68);
        boolean boolean73 = strMap33.containsKey((java.lang.Object) functionNodeList50);
        boolean boolean74 = strMap33.isEmpty();
        java.util.Set<java.lang.String> strSet75 = strMap33.keySet();
        boolean boolean77 = strMap33.equals((java.lang.Object) (byte) 0);
        java.util.Set<java.lang.String> strSet78 = strMap33.keySet();
        com.google.javascript.rhino.head.ast.Symbol symbol80 = new com.google.javascript.rhino.head.ast.Symbol();
        symbol80.setIndex(6);
        java.lang.String str83 = symbol80.getDeclTypeName();
        int int84 = symbol80.getDeclType();
        com.google.javascript.rhino.head.ast.Symbol symbol85 = strMap33.replace("/=", symbol80);
        int int86 = strMap33.size();
        org.junit.Assert.assertNotNull(scriptNode3);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNull(scopeList24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str26, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "                    {\n                    }\n" + "'", str32, "                    {\n                    }\n");
        org.junit.Assert.assertNotNull(strMap33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertNull(scopeList48);
        org.junit.Assert.assertNotNull(functionNodeList50);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + (-1) + "'", int64 == (-1));
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + (-1) + "'", int65 == (-1));
        org.junit.Assert.assertNull(scopeList66);
        org.junit.Assert.assertNotNull(functionNodeList68);
        org.junit.Assert.assertNotNull(functionNodeSpliterator69);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + (-1) + "'", int71 == (-1));
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(strSet75);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(strSet78);
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "EOF" + "'", str83, "EOF");
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 0 + "'", int84 == 0);
        org.junit.Assert.assertNull(symbol85);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + 0 + "'", int86 == 0);
    }

    @Test
    public void test10107() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10107");
        com.google.javascript.rhino.head.ast.Jump jump4 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump4.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump8 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump4, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int11 = scriptNode10.getEndLineno();
        int int12 = scriptNode10.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList13 = scriptNode10.getChildScopes();
        com.google.javascript.rhino.head.Node node14 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump4, (com.google.javascript.rhino.head.Node) scriptNode10);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList15 = scriptNode10.getFunctions();
        functionNodeList15.clear();
        functionNodeList15.clear();
        java.util.Iterator<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeItor18 = functionNodeList15.iterator();
        com.google.javascript.rhino.head.ast.Jump jump23 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump23.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump27 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump23, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode29 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int30 = scriptNode29.getEndLineno();
        int int31 = scriptNode29.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList32 = scriptNode29.getChildScopes();
        com.google.javascript.rhino.head.Node node33 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump23, (com.google.javascript.rhino.head.Node) scriptNode29);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList34 = scriptNode29.getFunctions();
        int int35 = functionNodeList34.size();
        com.google.javascript.rhino.head.ast.Jump jump41 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump41.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump45 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump41, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode47 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int48 = scriptNode47.getEndLineno();
        int int49 = scriptNode47.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList50 = scriptNode47.getChildScopes();
        com.google.javascript.rhino.head.Node node51 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump41, (com.google.javascript.rhino.head.Node) scriptNode47);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList52 = scriptNode47.getFunctions();
        functionNodeList52.clear();
        com.google.javascript.rhino.head.ast.Jump jump58 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump58.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump62 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump58, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode64 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int65 = scriptNode64.getEndLineno();
        int int66 = scriptNode64.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList67 = scriptNode64.getChildScopes();
        com.google.javascript.rhino.head.Node node68 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump58, (com.google.javascript.rhino.head.Node) scriptNode64);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList69 = scriptNode64.getFunctions();
        boolean boolean70 = functionNodeList52.removeAll((java.util.Collection<com.google.javascript.rhino.head.ast.FunctionNode>) functionNodeList69);
        boolean boolean71 = functionNodeList34.addAll(0, (java.util.Collection<com.google.javascript.rhino.head.ast.FunctionNode>) functionNodeList52);
        com.google.javascript.rhino.head.ast.Jump jump76 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump76.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump80 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump76, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode82 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int83 = scriptNode82.getEndLineno();
        int int84 = scriptNode82.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList85 = scriptNode82.getChildScopes();
        com.google.javascript.rhino.head.Node node86 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump76, (com.google.javascript.rhino.head.Node) scriptNode82);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList87 = scriptNode82.getFunctions();
        int int88 = functionNodeList87.size();
        functionNodeList87.clear();
        int int91 = functionNodeList87.indexOf((java.lang.Object) 10L);
        java.util.Iterator<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeItor92 = functionNodeList87.iterator();
        boolean boolean93 = functionNodeList34.retainAll((java.util.Collection<com.google.javascript.rhino.head.ast.FunctionNode>) functionNodeList87);
        boolean boolean94 = functionNodeList15.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.FunctionNode>) functionNodeList87);
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator95 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        functionNodeList87.sort((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator95);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNull(scopeList13);
        org.junit.Assert.assertNotNull(functionNodeList15);
        org.junit.Assert.assertNotNull(functionNodeItor18);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNull(scopeList32);
        org.junit.Assert.assertNotNull(functionNodeList34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertNull(scopeList50);
        org.junit.Assert.assertNotNull(functionNodeList52);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + (-1) + "'", int65 == (-1));
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + (-1) + "'", int66 == (-1));
        org.junit.Assert.assertNull(scopeList67);
        org.junit.Assert.assertNotNull(functionNodeList69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + (-1) + "'", int83 == (-1));
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + (-1) + "'", int84 == (-1));
        org.junit.Assert.assertNull(scopeList85);
        org.junit.Assert.assertNotNull(functionNodeList87);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + 0 + "'", int88 == 0);
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + (-1) + "'", int91 == (-1));
        org.junit.Assert.assertNotNull(functionNodeItor92);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
    }

    @Test
    public void test10108() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10108");
        com.google.javascript.rhino.head.Token.CommentType commentType4 = com.google.javascript.rhino.head.Token.CommentType.HTML;
        com.google.javascript.rhino.head.ast.Comment comment6 = new com.google.javascript.rhino.head.ast.Comment(20, 1, commentType4, "109");
        com.google.javascript.rhino.head.ast.Comment comment8 = new com.google.javascript.rhino.head.ast.Comment(136, 15, commentType4, "-1\tSCRIPT -1 1\n");
        com.google.javascript.rhino.head.Token.CommentType commentType9 = com.google.javascript.rhino.head.Token.CommentType.JSDOC;
        comment8.setCommentType(commentType9);
        com.google.javascript.rhino.head.Token.CommentType commentType11 = com.google.javascript.rhino.head.Token.CommentType.JSDOC;
        comment8.setCommentType(commentType11);
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator13 = comment8.new NodeIterator();
        boolean boolean14 = nodeIterator13.hasNext();
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.Node node15 = nodeIterator13.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + commentType4 + "' != '" + com.google.javascript.rhino.head.Token.CommentType.HTML + "'", commentType4.equals(com.google.javascript.rhino.head.Token.CommentType.HTML));
        org.junit.Assert.assertTrue("'" + commentType9 + "' != '" + com.google.javascript.rhino.head.Token.CommentType.JSDOC + "'", commentType9.equals(com.google.javascript.rhino.head.Token.CommentType.JSDOC));
        org.junit.Assert.assertTrue("'" + commentType11 + "' != '" + com.google.javascript.rhino.head.Token.CommentType.JSDOC + "'", commentType11.equals(com.google.javascript.rhino.head.Token.CommentType.JSDOC));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test10109() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10109");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode0 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int1 = functionNode0.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = functionNode0.getTop();
        com.google.javascript.rhino.head.ast.Name name3 = null;
        functionNode0.setFunctionName(name3);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode5 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = functionNode5.getTop();
        functionNode0.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode5);
        com.google.javascript.rhino.head.ast.Scope scope10 = new com.google.javascript.rhino.head.ast.Scope((int) (short) -1, 0);
        functionNode0.replaceWith(scope10);
        functionNode0.setBaseLineno((int) (short) 10);
        boolean boolean14 = functionNode0.isExpressionClosure();
        // The following exception was thrown during execution in test generation
        try {
            double double15 = functionNode0.getDouble();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: com.google.javascript.rhino.head.ast.FunctionNode cannot be cast to com.google.javascript.rhino.head.ast.NumberLiteral");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-1) + "'", int1 == (-1));
        org.junit.Assert.assertNotNull(scriptNode2);
        org.junit.Assert.assertNotNull(scriptNode6);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test10110() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10110");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode0 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 10);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode3 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode4 = functionNode3.getTop();
        functionNode3.setParens((int) (byte) 1, (int) (short) 1);
        functionNode3.setEncodedSourceStart((-1));
        functionNode3.setFunctionIsGetter();
        scope2.addChildToFront((com.google.javascript.rhino.head.Node) functionNode3);
        functionNode0.setBody((com.google.javascript.rhino.head.ast.AstNode) functionNode3);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode13 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = functionNode13.getTop();
        functionNode13.setParens((int) (byte) 1, (int) (short) 1);
        functionNode13.setEncodedSourceStart((-1));
        java.util.List<com.google.javascript.rhino.head.Node> nodeList20 = functionNode13.getResumptionPoints();
        int int21 = functionNode13.getLp();
        functionNode0.setBody((com.google.javascript.rhino.head.ast.AstNode) functionNode13);
        int int23 = functionNode13.getLineno();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode24 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.AstNode astNode25 = functionNode24.getParent();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode26 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode27 = functionNode26.getTop();
        functionNode26.setParens((int) (byte) 1, (int) (short) 1);
        functionNode26.setEncodedSourceStart((-1));
        java.util.List<com.google.javascript.rhino.head.Node> nodeList33 = functionNode26.getResumptionPoints();
        com.google.javascript.rhino.head.ast.Scope scope35 = functionNode26.getDefiningScope("hi!");
        boolean boolean36 = functionNode26.isGetterOrSetter();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode37 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int38 = functionNode37.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode39 = functionNode37.getTop();
        com.google.javascript.rhino.head.ast.Name name40 = null;
        functionNode37.setFunctionName(name40);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode42 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode43 = functionNode42.getTop();
        functionNode37.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode42);
        int int45 = functionNode42.getRp();
        int int46 = functionNode42.getFunctionType();
        int int47 = functionNode26.addFunction(functionNode42);
        functionNode24.setTop((com.google.javascript.rhino.head.ast.ScriptNode) functionNode42);
        java.util.Map<com.google.javascript.rhino.head.Node, int[]> nodeMap49 = functionNode42.getLiveLocals();
        boolean boolean50 = functionNode42.hasConsistentReturnUsage();
        int int51 = functionNode42.getAbsolutePosition();
        int int52 = functionNode42.getEncodedSourceEnd();
        int int53 = functionNode13.addFunction(functionNode42);
        org.junit.Assert.assertNotNull(scriptNode4);
        org.junit.Assert.assertNotNull(scriptNode14);
        org.junit.Assert.assertNull(nodeList20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNull(astNode25);
        org.junit.Assert.assertNotNull(scriptNode27);
        org.junit.Assert.assertNull(nodeList33);
        org.junit.Assert.assertNull(scope35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNotNull(scriptNode39);
        org.junit.Assert.assertNotNull(scriptNode43);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertNull(nodeMap49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1));
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
    }

    @Test
    public void test10111() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10111");
        com.google.javascript.rhino.head.ast.Jump jump3 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump3.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump7 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump3, 0);
        com.google.javascript.rhino.head.ast.Jump jump11 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump11.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump15 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump11, 0);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode16 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int17 = functionNode16.getLp();
        functionNode16.setEncodedSource("");
        functionNode16.flattenSymbolTable(false);
        jump3.addChildAfter((com.google.javascript.rhino.head.Node) jump11, (com.google.javascript.rhino.head.Node) functionNode16);
        com.google.javascript.rhino.head.Node node23 = functionNode16.target;
        boolean boolean24 = functionNode16.hasConsistentReturnUsage();
        com.google.javascript.rhino.head.ast.Name name25 = functionNode16.getFunctionName();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode26 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.Scope scope28 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 10);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode29 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode30 = functionNode29.getTop();
        functionNode29.setParens((int) (byte) 1, (int) (short) 1);
        functionNode29.setEncodedSourceStart((-1));
        functionNode29.setFunctionIsGetter();
        scope28.addChildToFront((com.google.javascript.rhino.head.Node) functionNode29);
        functionNode26.setBody((com.google.javascript.rhino.head.ast.AstNode) functionNode29);
        functionNode29.setRelative(0);
        functionNode16.setBody((com.google.javascript.rhino.head.ast.AstNode) functionNode29);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode43 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode44 = functionNode43.getTop();
        functionNode43.setParens((int) (byte) 1, (int) (short) 1);
        functionNode43.setEncodedSourceStart((-1));
        java.util.List<com.google.javascript.rhino.head.Node> nodeList50 = functionNode43.getResumptionPoints();
        com.google.javascript.rhino.head.ast.Scope scope52 = functionNode43.getDefiningScope("hi!");
        boolean boolean53 = functionNode43.isGetterOrSetter();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode54 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int55 = functionNode54.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode56 = functionNode54.getTop();
        com.google.javascript.rhino.head.ast.Name name57 = null;
        functionNode54.setFunctionName(name57);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode59 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode60 = functionNode59.getTop();
        functionNode54.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode59);
        int int62 = functionNode59.getRp();
        int int63 = functionNode59.getFunctionType();
        int int64 = functionNode43.addFunction(functionNode59);
        functionNode59.setRp((-1));
        com.google.javascript.rhino.head.Node node68 = new com.google.javascript.rhino.head.Node(4, (com.google.javascript.rhino.head.Node) functionNode59, (int) '#');
        functionNode29.setTop((com.google.javascript.rhino.head.ast.ScriptNode) functionNode59);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode70 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int71 = functionNode70.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode72 = functionNode70.getTop();
        com.google.javascript.rhino.head.ast.Name name73 = null;
        functionNode70.setFunctionName(name73);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode75 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode76 = functionNode75.getTop();
        functionNode70.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode75);
        int int78 = functionNode75.getRp();
        int int79 = functionNode75.getFunctionType();
        java.util.Map<com.google.javascript.rhino.head.Node, int[]> nodeMap80 = functionNode75.getLiveLocals();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode81 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode82 = functionNode81.getTop();
        com.google.javascript.rhino.head.ast.AstRoot astRoot83 = functionNode81.getAstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode84 = functionNode81.getMemberExprNode();
        boolean boolean85 = functionNode81.isSetter();
        functionNode75.addResumptionPoint((com.google.javascript.rhino.head.Node) functionNode81);
        // The following exception was thrown during execution in test generation
        try {
            functionNode59.setDefault((com.google.javascript.rhino.head.Node) functionNode81);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNull(node23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(name25);
        org.junit.Assert.assertNotNull(scriptNode30);
        org.junit.Assert.assertNotNull(scriptNode44);
        org.junit.Assert.assertNull(nodeList50);
        org.junit.Assert.assertNull(scope52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1));
        org.junit.Assert.assertNotNull(scriptNode56);
        org.junit.Assert.assertNotNull(scriptNode60);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + (-1) + "'", int62 == (-1));
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 0 + "'", int63 == 0);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 0 + "'", int64 == 0);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + (-1) + "'", int71 == (-1));
        org.junit.Assert.assertNotNull(scriptNode72);
        org.junit.Assert.assertNotNull(scriptNode76);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + (-1) + "'", int78 == (-1));
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 0 + "'", int79 == 0);
        org.junit.Assert.assertNull(nodeMap80);
        org.junit.Assert.assertNotNull(scriptNode82);
        org.junit.Assert.assertNull(astRoot83);
        org.junit.Assert.assertNull(astNode84);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
    }

    @Test
    public void test10112() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10112");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode0 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int1 = functionNode0.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = functionNode0.getTop();
        com.google.javascript.rhino.head.ast.Name name3 = null;
        functionNode0.setFunctionName(name3);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode5 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int6 = functionNode5.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode8 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        java.lang.String str9 = functionNode5.toStringTree(scriptNode8);
        functionNode5.setFunctionIsGetter();
        int int11 = functionNode0.addFunction(functionNode5);
        boolean boolean12 = functionNode5.hasSideEffects();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode13 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int14 = functionNode13.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode15 = functionNode13.getTop();
        functionNode5.setBody((com.google.javascript.rhino.head.ast.AstNode) scriptNode15);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode17 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode18 = functionNode17.getTop();
        int int19 = functionNode17.getRegexpCount();
        int int20 = functionNode17.getParamCount();
        int int21 = scriptNode15.compareTo((com.google.javascript.rhino.head.ast.AstNode) functionNode17);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String[] strArray22 = scriptNode15.getParamAndVarNames();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-1) + "'", int1 == (-1));
        org.junit.Assert.assertNotNull(scriptNode2);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNotNull(scriptNode15);
        org.junit.Assert.assertNotNull(scriptNode18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
// flaky:         org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-634880772) + "'", int21 == (-634880772));
    }

    @Test
    public void test10113() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10113");
        com.google.javascript.rhino.head.ast.Jump jump4 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump4.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump8 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump4, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int11 = scriptNode10.getEndLineno();
        int int12 = scriptNode10.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList13 = scriptNode10.getChildScopes();
        com.google.javascript.rhino.head.Node node14 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump4, (com.google.javascript.rhino.head.Node) scriptNode10);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList15 = scriptNode10.getFunctions();
        int int16 = functionNodeList15.size();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator17 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        functionNodeList15.sort((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator17);
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator19 = positionComparator17.reversed();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode20 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode21 = functionNode20.getTop();
        com.google.javascript.rhino.head.ast.Name name22 = null;
        functionNode20.setFunctionName(name22);
        boolean boolean24 = functionNode20.requiresActivation();
        com.google.javascript.rhino.head.ast.RegExpLiteral regExpLiteral26 = new com.google.javascript.rhino.head.ast.RegExpLiteral((int) (short) 1);
        java.lang.String str28 = regExpLiteral26.toSource((int) (byte) 10);
        regExpLiteral26.setFlags("-1\tSCRIPT -1 1\n");
        regExpLiteral26.removeProp(8);
        java.lang.String str33 = regExpLiteral26.getValue();
        regExpLiteral26.setLineno(10);
        regExpLiteral26.removeChildren();
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor37 = regExpLiteral26.iterator();
        functionNode20.addRegExp(regExpLiteral26);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode39 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int40 = functionNode39.getLp();
        functionNode39.setEncodedSource("");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode43 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.Scope scope45 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 10);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode46 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode47 = functionNode46.getTop();
        functionNode46.setParens((int) (byte) 1, (int) (short) 1);
        functionNode46.setEncodedSourceStart((-1));
        functionNode46.setFunctionIsGetter();
        scope45.addChildToFront((com.google.javascript.rhino.head.Node) functionNode46);
        functionNode43.setBody((com.google.javascript.rhino.head.ast.AstNode) functionNode46);
        int int56 = functionNode39.addFunction(functionNode43);
        functionNode20.addChildToBack((com.google.javascript.rhino.head.Node) functionNode39);
        com.google.javascript.rhino.head.ast.Jump jump61 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump61.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump65 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump61, 0);
        com.google.javascript.rhino.head.ast.Jump jump69 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump69.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump73 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump69, 0);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode74 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int75 = functionNode74.getLp();
        functionNode74.setEncodedSource("");
        functionNode74.flattenSymbolTable(false);
        jump61.addChildAfter((com.google.javascript.rhino.head.Node) jump69, (com.google.javascript.rhino.head.Node) functionNode74);
        com.google.javascript.rhino.head.Node node81 = functionNode74.target;
        int int82 = positionComparator17.compare((com.google.javascript.rhino.head.ast.AstNode) functionNode20, (com.google.javascript.rhino.head.ast.AstNode) functionNode74);
        int int83 = functionNode20.getLength();
        functionNode20.setFunctionIsSetter();
        functionNode20.setLp((-180877978));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNull(scopeList13);
        org.junit.Assert.assertNotNull(functionNodeList15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(astNodeComparator19);
        org.junit.Assert.assertNotNull(scriptNode21);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "                    /null/" + "'", str28, "                    /null/");
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNotNull(nodeItor37);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertNotNull(scriptNode47);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + (-1) + "'", int75 == (-1));
        org.junit.Assert.assertNull(node81);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 0 + "'", int82 == 0);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 1 + "'", int83 == 1);
    }

    @Test
    public void test10114() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10114");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode0 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = functionNode0.getTop();
        functionNode0.setParens((int) (byte) 1, (int) (short) 1);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode5 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.Scope scope7 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 10);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode8 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode9 = functionNode8.getTop();
        functionNode8.setParens((int) (byte) 1, (int) (short) 1);
        functionNode8.setEncodedSourceStart((-1));
        functionNode8.setFunctionIsGetter();
        scope7.addChildToFront((com.google.javascript.rhino.head.Node) functionNode8);
        functionNode5.setBody((com.google.javascript.rhino.head.ast.AstNode) functionNode8);
        functionNode5.setFunctionIsSetter();
        int int19 = functionNode0.addFunction(functionNode5);
        java.lang.String str20 = functionNode0.getNextTempName();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode22 = new com.google.javascript.rhino.head.ast.FunctionNode(0);
        int int23 = functionNode22.getBaseLineno();
        functionNode22.setSourceName("                                                                                                                                                                                                        /null/");
        functionNode22.setRequiresActivation();
        functionNode0.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode22);
        com.google.javascript.rhino.head.ast.Jump jump32 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump32.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump36 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump32, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode38 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int39 = scriptNode38.getEndLineno();
        int int40 = scriptNode38.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList41 = scriptNode38.getChildScopes();
        com.google.javascript.rhino.head.Node node42 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump32, (com.google.javascript.rhino.head.Node) scriptNode38);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList43 = scriptNode38.getFunctions();
        functionNodeList43.clear();
        functionNodeList43.clear();
        java.util.Iterator<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeItor46 = functionNodeList43.iterator();
        com.google.javascript.rhino.head.ast.RegExpLiteral regExpLiteral48 = new com.google.javascript.rhino.head.ast.RegExpLiteral((int) (short) 1);
        java.lang.String str50 = regExpLiteral48.toSource((int) (byte) 10);
        regExpLiteral48.setFlags("-1\tSCRIPT -1 1\n");
        regExpLiteral48.removeProp(8);
        java.lang.String str55 = regExpLiteral48.getValue();
        regExpLiteral48.setLineno(10);
        regExpLiteral48.removeChildren();
        boolean boolean59 = functionNodeList43.equals((java.lang.Object) regExpLiteral48);
        functionNode22.addRegExp(regExpLiteral48);
        com.google.javascript.rhino.head.Node node61 = regExpLiteral48.getLastSibling();
        regExpLiteral48.setValue("                    /null/-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertNotNull(scriptNode1);
        org.junit.Assert.assertNotNull(scriptNode9);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "$0" + "'", str20, "$0");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertNull(scopeList41);
        org.junit.Assert.assertNotNull(functionNodeList43);
        org.junit.Assert.assertNotNull(functionNodeItor46);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "                    /null/" + "'", str50, "                    /null/");
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(node61);
    }

    @Test
    public void test10115() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10115");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode1 = new com.google.javascript.rhino.head.ast.FunctionNode((-1));
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator2 = functionNode1.spliterator();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator3 = functionNode1.spliterator();
        com.google.javascript.rhino.head.ast.Scope scope4 = functionNode1.getEnclosingScope();
        org.junit.Assert.assertNotNull(nodeSpliterator2);
        org.junit.Assert.assertNotNull(nodeSpliterator3);
        org.junit.Assert.assertNull(scope4);
    }

    @Test
    public void test10116() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10116");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode0 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = functionNode0.getTop();
        functionNode0.setParens((int) (byte) 1, (int) (short) 1);
        functionNode0.setEncodedSourceStart((-1));
        java.util.List<com.google.javascript.rhino.head.Node> nodeList7 = functionNode0.getResumptionPoints();
        com.google.javascript.rhino.head.ast.Scope scope9 = functionNode0.getDefiningScope("hi!");
        boolean boolean10 = functionNode0.isGetterOrSetter();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode11 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int12 = functionNode11.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode13 = functionNode11.getTop();
        com.google.javascript.rhino.head.ast.Name name14 = null;
        functionNode11.setFunctionName(name14);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode16 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode17 = functionNode16.getTop();
        functionNode11.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode16);
        int int19 = functionNode16.getRp();
        int int20 = functionNode16.getFunctionType();
        int int21 = functionNode0.addFunction(functionNode16);
        com.google.javascript.rhino.head.ast.RegExpLiteral regExpLiteral23 = new com.google.javascript.rhino.head.ast.RegExpLiteral((int) (short) 1);
        java.lang.String str25 = regExpLiteral23.toSource((int) (byte) 10);
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator26 = regExpLiteral23.new NodeIterator();
        regExpLiteral23.setFlags("$0");
        int int29 = regExpLiteral23.getLineno();
        java.lang.String str31 = regExpLiteral23.toSource(6);
        functionNode16.setBody((com.google.javascript.rhino.head.ast.AstNode) regExpLiteral23);
        org.junit.Assert.assertNotNull(scriptNode1);
        org.junit.Assert.assertNull(nodeList7);
        org.junit.Assert.assertNull(scope9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(scriptNode13);
        org.junit.Assert.assertNotNull(scriptNode17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "                    /null/" + "'", str25, "                    /null/");
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "            /null/$0" + "'", str31, "            /null/$0");
    }

    @Test
    public void test10117() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10117");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode1 = new com.google.javascript.rhino.head.ast.FunctionNode((-1262414679));
        java.lang.String str2 = functionNode1.getEncodedSource();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode4 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int5 = functionNode4.getLp();
        functionNode4.setEncodedSource("");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode8 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int9 = functionNode8.getLp();
        functionNode8.setEncodedSource("");
        functionNode8.flattenSymbolTable(false);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode14 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int15 = functionNode14.getLp();
        com.google.javascript.rhino.head.Node node17 = new com.google.javascript.rhino.head.Node((-1), (com.google.javascript.rhino.head.Node) functionNode4, (com.google.javascript.rhino.head.Node) functionNode8, (com.google.javascript.rhino.head.Node) functionNode14, (int) '#');
        boolean boolean18 = functionNode14.isGenerator();
        int int19 = functionNode14.getFunctionType();
        boolean boolean20 = functionNode14.hasSideEffects();
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList21 = functionNode14.getStatements();
        functionNode1.setParams(astNodeList21);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(astNodeList21);
    }

    @Test
    public void test10118() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10118");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode0 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int1 = functionNode0.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = functionNode0.getTop();
        boolean boolean3 = functionNode0.hasSideEffects();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode4 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int5 = functionNode4.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = functionNode4.getTop();
        com.google.javascript.rhino.head.ast.Name name7 = null;
        functionNode4.setFunctionName(name7);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode9 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = functionNode9.getTop();
        functionNode4.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode9);
        int int12 = functionNode9.getRp();
        functionNode9.setParens(11, 2);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode17 = new com.google.javascript.rhino.head.ast.FunctionNode((-1));
        int int18 = functionNode9.addFunction(functionNode17);
        functionNode0.setMemberExprNode((com.google.javascript.rhino.head.ast.AstNode) functionNode9);
        java.lang.String str20 = functionNode9.getEncodedSource();
        com.google.javascript.rhino.head.ast.Scope scope21 = functionNode9.getEnclosingScope();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-1) + "'", int1 == (-1));
        org.junit.Assert.assertNotNull(scriptNode2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(scriptNode6);
        org.junit.Assert.assertNotNull(scriptNode10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(scope21);
    }

    @Test
    public void test10119() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10119");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int2 = scriptNode1.getEndLineno();
        com.google.javascript.rhino.head.ast.Symbol symbol4 = scriptNode1.getSymbol("hi!");
        java.lang.String str5 = scriptNode1.getEncodedSource();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode7 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int8 = functionNode7.getLp();
        functionNode7.setEncodedSource("");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode11 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int12 = functionNode11.getLp();
        functionNode11.setEncodedSource("");
        functionNode11.flattenSymbolTable(false);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode17 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int18 = functionNode17.getLp();
        com.google.javascript.rhino.head.Node node20 = new com.google.javascript.rhino.head.Node((-1), (com.google.javascript.rhino.head.Node) functionNode7, (com.google.javascript.rhino.head.Node) functionNode11, (com.google.javascript.rhino.head.Node) functionNode17, (int) '#');
        com.google.javascript.rhino.head.ast.AstNode astNode21 = functionNode7.getBody();
        java.lang.String str22 = functionNode7.getName();
        int int23 = scriptNode1.compareTo((com.google.javascript.rhino.head.ast.AstNode) functionNode7);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList24 = functionNode7.getFunctions();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertNull(symbol4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNull(astNode21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
// flaky:         org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-692668892) + "'", int23 == (-692668892));
        org.junit.Assert.assertNotNull(functionNodeList24);
    }

    @Test
    public void test10120() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10120");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode0 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int1 = functionNode0.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = functionNode0.getTop();
        com.google.javascript.rhino.head.ast.Name name3 = null;
        functionNode0.setFunctionName(name3);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode5 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = functionNode5.getTop();
        functionNode0.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode5);
        functionNode5.setIsExpressionClosure(true);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode11 = new com.google.javascript.rhino.head.ast.FunctionNode((int) (byte) 100);
        int int12 = functionNode5.addFunction(functionNode11);
        com.google.javascript.rhino.head.ast.Name name13 = null;
        functionNode5.setFunctionName(name13);
        com.google.javascript.rhino.head.Node node15 = functionNode5.getLastSibling();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList16 = functionNode5.getChildScopes();
        functionNode5.setRequiresActivation();
        functionNode5.setEncodedSourceBounds((-485845389), 200442009);
        functionNode5.setEncodedSourceEnd((-715688198));
        boolean boolean23 = functionNode5.isSetter();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-1) + "'", int1 == (-1));
        org.junit.Assert.assertNotNull(scriptNode2);
        org.junit.Assert.assertNotNull(scriptNode6);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(node15);
        org.junit.Assert.assertNull(scopeList16);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
    }

    @Test
    public void test10121() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10121");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode0 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = functionNode0.getTop();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode3 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int4 = functionNode3.getLp();
        functionNode3.setEncodedSource("");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode7 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int8 = functionNode7.getLp();
        functionNode7.setEncodedSource("");
        functionNode7.flattenSymbolTable(false);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode13 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int14 = functionNode13.getLp();
        com.google.javascript.rhino.head.Node node16 = new com.google.javascript.rhino.head.Node((-1), (com.google.javascript.rhino.head.Node) functionNode3, (com.google.javascript.rhino.head.Node) functionNode7, (com.google.javascript.rhino.head.Node) functionNode13, (int) '#');
        com.google.javascript.rhino.head.ast.AstNode astNode17 = functionNode3.getBody();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode18 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int19 = functionNode18.getLp();
        functionNode18.setEncodedSource("");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode22 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int23 = functionNode22.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode24 = functionNode22.getTop();
        com.google.javascript.rhino.head.ast.Name name25 = null;
        functionNode22.setFunctionName(name25);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode27 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode28 = functionNode27.getTop();
        functionNode22.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode27);
        int int30 = functionNode27.getRp();
        int int31 = functionNode27.getFunctionType();
        functionNode18.addParam((com.google.javascript.rhino.head.ast.AstNode) functionNode27);
        com.google.javascript.rhino.head.ast.Scope scope33 = functionNode27.getEnclosingScope();
        functionNode3.setBody((com.google.javascript.rhino.head.ast.AstNode) functionNode27);
        int int35 = functionNode0.addFunction(functionNode3);
        java.util.List<com.google.javascript.rhino.head.Node> nodeList36 = functionNode0.getResumptionPoints();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode37 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int38 = functionNode37.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode39 = functionNode37.getTop();
        com.google.javascript.rhino.head.ast.Name name40 = null;
        functionNode37.setFunctionName(name40);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode42 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode43 = functionNode42.getTop();
        functionNode37.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode42);
        functionNode42.setEncodedSourceStart(6);
        functionNode42.setRelative((-1));
        boolean boolean49 = functionNode0.isParam((com.google.javascript.rhino.head.ast.AstNode) functionNode42);
        com.google.javascript.rhino.head.ast.RegExpLiteral regExpLiteral50 = new com.google.javascript.rhino.head.ast.RegExpLiteral();
        functionNode0.addRegExp(regExpLiteral50);
        com.google.javascript.rhino.head.ast.RegExpLiteral regExpLiteral54 = new com.google.javascript.rhino.head.ast.RegExpLiteral(20, 23);
        functionNode0.addRegExp(regExpLiteral54);
        org.junit.Assert.assertNotNull(scriptNode1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNull(astNode17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNotNull(scriptNode24);
        org.junit.Assert.assertNotNull(scriptNode28);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNotNull(scope33);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertNull(nodeList36);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNotNull(scriptNode39);
        org.junit.Assert.assertNotNull(scriptNode43);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
    }

    @Test
    public void test10122() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10122");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode0 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int1 = functionNode0.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = functionNode0.getTop();
        com.google.javascript.rhino.head.ast.Name name3 = null;
        functionNode0.setFunctionName(name3);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode5 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = functionNode5.getTop();
        functionNode0.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode5);
        functionNode5.setIsExpressionClosure(true);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode11 = new com.google.javascript.rhino.head.ast.FunctionNode((int) (byte) 100);
        int int12 = functionNode5.addFunction(functionNode11);
        com.google.javascript.rhino.head.ast.Name name13 = null;
        functionNode5.setFunctionName(name13);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode16 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int17 = functionNode16.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode18 = functionNode16.getTop();
        com.google.javascript.rhino.head.ast.AstNode astNode19 = functionNode16.getBody();
        int int20 = functionNode16.getLength();
        functionNode5.putProp(100, (java.lang.Object) functionNode16);
        functionNode16.setRequiresActivation();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode23 = functionNode16.getTop();
        com.google.javascript.rhino.head.Node node24 = functionNode16.getLastSibling();
        com.google.javascript.rhino.head.ast.Name name25 = functionNode16.getFunctionName();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-1) + "'", int1 == (-1));
        org.junit.Assert.assertNotNull(scriptNode2);
        org.junit.Assert.assertNotNull(scriptNode6);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNotNull(scriptNode18);
        org.junit.Assert.assertNull(astNode19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertNotNull(scriptNode23);
        org.junit.Assert.assertNotNull(node24);
        org.junit.Assert.assertNull(name25);
    }

    @Test
    public void test10123() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10123");
        com.google.javascript.rhino.head.ast.Symbol symbol0 = new com.google.javascript.rhino.head.ast.Symbol();
        com.google.javascript.rhino.head.Node node1 = symbol0.getNode();
        com.google.javascript.rhino.head.Node node2 = symbol0.getNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode4 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int5 = scriptNode4.getEndLineno();
        int int6 = scriptNode4.getBaseLineno();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode7 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int8 = functionNode7.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        java.lang.String str11 = functionNode7.toStringTree(scriptNode10);
        functionNode7.setFunctionIsGetter();
        com.google.javascript.rhino.head.ast.AstNode astNode13 = functionNode7.getBody();
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList14 = functionNode7.getParams();
        scriptNode4.replaceWith((com.google.javascript.rhino.head.ast.Scope) functionNode7);
        symbol0.setNode((com.google.javascript.rhino.head.Node) functionNode7);
        java.lang.String str17 = symbol0.getName();
        com.google.javascript.rhino.head.ast.Scope scope18 = symbol0.getContainingTable();
        com.google.javascript.rhino.head.Node node19 = symbol0.getNode();
        java.lang.String str20 = symbol0.toString();
        org.junit.Assert.assertNull(node1);
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(astNode13);
        org.junit.Assert.assertNotNull(astNodeList14);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(scope18);
        org.junit.Assert.assertNotNull(node19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "Symbol (EOF) name=null line=-1" + "'", str20, "Symbol (EOF) name=null line=-1");
    }

    @Test
    public void test10124() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10124");
        com.google.javascript.rhino.head.ast.Symbol symbol0 = new com.google.javascript.rhino.head.ast.Symbol();
        java.lang.String str1 = symbol0.getDeclTypeName();
        com.google.javascript.rhino.head.ast.Scope scope2 = symbol0.getContainingTable();
        symbol0.setIndex(21);
        java.lang.String str5 = symbol0.getName();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode6 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int7 = functionNode6.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode8 = functionNode6.getTop();
        com.google.javascript.rhino.head.ast.Name name9 = null;
        functionNode6.setFunctionName(name9);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode11 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode12 = functionNode11.getTop();
        functionNode6.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode11);
        int int14 = functionNode11.getRp();
        java.lang.String str15 = functionNode11.getSourceName();
        functionNode11.setParens(14, (int) '#');
        com.google.javascript.rhino.head.ast.FunctionNode functionNode19 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode20 = functionNode19.getTop();
        int int21 = functionNode19.getRegexpCount();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode22 = functionNode19.getEnclosingFunction();
        functionNode19.setBaseLineno(0);
        functionNode11.setMemberExprNode((com.google.javascript.rhino.head.ast.AstNode) functionNode19);
        symbol0.setNode((com.google.javascript.rhino.head.Node) functionNode19);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode28 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int29 = scriptNode28.getEndLineno();
        java.lang.String str30 = scriptNode28.getNextTempName();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode31 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode32 = functionNode31.getTop();
        functionNode31.setParens((int) (byte) 1, (int) (short) 1);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode36 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.Scope scope38 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 10);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode39 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode40 = functionNode39.getTop();
        functionNode39.setParens((int) (byte) 1, (int) (short) 1);
        functionNode39.setEncodedSourceStart((-1));
        functionNode39.setFunctionIsGetter();
        scope38.addChildToFront((com.google.javascript.rhino.head.Node) functionNode39);
        functionNode36.setBody((com.google.javascript.rhino.head.ast.AstNode) functionNode39);
        functionNode36.setFunctionIsSetter();
        int int50 = functionNode31.addFunction(functionNode36);
        int int51 = scriptNode28.compareTo((com.google.javascript.rhino.head.ast.AstNode) functionNode31);
        int int52 = scriptNode28.getPosition();
        functionNode19.addParam((com.google.javascript.rhino.head.ast.AstNode) scriptNode28);
        int int54 = scriptNode28.getEndLineno();
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor55 = null;
        // The following exception was thrown during execution in test generation
        try {
            scriptNode28.visit(nodeVisitor55);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "EOF" + "'", str1, "EOF");
        org.junit.Assert.assertNull(scope2);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(scriptNode8);
        org.junit.Assert.assertNotNull(scriptNode12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(scriptNode20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNull(functionNode22);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "$0" + "'", str30, "$0");
        org.junit.Assert.assertNotNull(scriptNode32);
        org.junit.Assert.assertNotNull(scriptNode40);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
// flaky:         org.junit.Assert.assertTrue("'" + int51 + "' != '" + 240511410 + "'", int51 == 240511410);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
    }

    @Test
    public void test10125() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10125");
        com.google.javascript.rhino.head.ast.Symbol symbol0 = new com.google.javascript.rhino.head.ast.Symbol();
        java.lang.String str1 = symbol0.getDeclTypeName();
        com.google.javascript.rhino.head.ast.Scope scope2 = symbol0.getContainingTable();
        symbol0.setIndex(21);
        java.lang.String str5 = symbol0.getName();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode6 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int7 = functionNode6.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode8 = functionNode6.getTop();
        com.google.javascript.rhino.head.ast.Name name9 = null;
        functionNode6.setFunctionName(name9);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode11 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode12 = functionNode11.getTop();
        functionNode6.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode11);
        int int14 = functionNode11.getRp();
        java.lang.String str15 = functionNode11.getSourceName();
        functionNode11.setParens(14, (int) '#');
        com.google.javascript.rhino.head.ast.FunctionNode functionNode19 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode20 = functionNode19.getTop();
        int int21 = functionNode19.getRegexpCount();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode22 = functionNode19.getEnclosingFunction();
        functionNode19.setBaseLineno(0);
        functionNode11.setMemberExprNode((com.google.javascript.rhino.head.ast.AstNode) functionNode19);
        symbol0.setNode((com.google.javascript.rhino.head.Node) functionNode19);
        functionNode19.setLp((int) (byte) 0);
        int int29 = functionNode19.getPosition();
        boolean boolean30 = functionNode19.hasChildren();
        boolean boolean31 = functionNode19.hasConsistentReturnUsage();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str33 = functionNode19.toSource((int) (byte) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "EOF" + "'", str1, "EOF");
        org.junit.Assert.assertNull(scope2);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(scriptNode8);
        org.junit.Assert.assertNotNull(scriptNode12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(scriptNode20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNull(functionNode22);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
    }

    @Test
    public void test10126() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10126");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode1 = new com.google.javascript.rhino.head.ast.FunctionNode((-1));
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode3 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int4 = scriptNode3.getEndLineno();
        int int5 = scriptNode3.getBaseLineno();
        com.google.javascript.rhino.head.ast.Jump jump8 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int11 = scriptNode10.getEndLineno();
        int int12 = scriptNode10.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList13 = scriptNode10.getChildScopes();
        jump8.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode10);
        java.lang.String str15 = scriptNode10.debugPrint();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode3, (com.google.javascript.rhino.head.ast.Scope) scriptNode10);
        int int17 = scriptNode3.getBaseLineno();
        com.google.javascript.rhino.head.ast.Jump jump20 = new com.google.javascript.rhino.head.ast.Jump(3, 13);
        functionNode1.addChildAfter((com.google.javascript.rhino.head.Node) scriptNode3, (com.google.javascript.rhino.head.Node) jump20);
        scriptNode3.setEncodedSourceEnd(11);
        int int24 = scriptNode3.getEncodedSourceEnd();
        scriptNode3.flattenSymbolTable(false);
        scriptNode3.putIntProp(16, 23);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode30 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode31 = functionNode30.getTop();
        functionNode30.setParens((int) (byte) 1, (int) (short) 1);
        functionNode30.setEncodedSourceStart((-1));
        java.util.List<com.google.javascript.rhino.head.Node> nodeList37 = functionNode30.getResumptionPoints();
        int int38 = functionNode30.getLp();
        scriptNode3.addChildToFront((com.google.javascript.rhino.head.Node) functionNode30);
        // The following exception was thrown during execution in test generation
        try {
            int int40 = scriptNode3.labelId();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNull(scopeList13);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str15, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 11 + "'", int24 == 11);
        org.junit.Assert.assertNotNull(scriptNode31);
        org.junit.Assert.assertNull(nodeList37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 1 + "'", int38 == 1);
    }

    @Test
    public void test10127() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10127");
        com.google.javascript.rhino.head.ast.RegExpLiteral regExpLiteral3 = new com.google.javascript.rhino.head.ast.RegExpLiteral(2, 6);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode4 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int5 = functionNode4.getLp();
        functionNode4.setLp((int) (short) 1);
        int int10 = functionNode4.getIntProp(4, 26);
        boolean boolean11 = functionNode4.hasChildren();
        java.lang.String str12 = functionNode4.getNextTempName();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode13 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = functionNode13.getTop();
        com.google.javascript.rhino.head.ast.Name name15 = null;
        functionNode13.setFunctionName(name15);
        functionNode4.addChildScope((com.google.javascript.rhino.head.ast.Scope) functionNode13);
        com.google.javascript.rhino.head.ast.Name name18 = null;
        functionNode13.setFunctionName(name18);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode20 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode21 = functionNode20.getTop();
        functionNode20.setParens((int) (byte) 1, (int) (short) 1);
        functionNode20.setEncodedSourceStart((-1));
        java.util.List<com.google.javascript.rhino.head.Node> nodeList27 = functionNode20.getResumptionPoints();
        com.google.javascript.rhino.head.ast.Scope scope29 = functionNode20.getDefiningScope("hi!");
        boolean boolean30 = functionNode20.isGetterOrSetter();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode31 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int32 = functionNode31.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode33 = functionNode31.getTop();
        com.google.javascript.rhino.head.ast.Name name34 = null;
        functionNode31.setFunctionName(name34);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode36 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode37 = functionNode36.getTop();
        functionNode31.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode36);
        int int39 = functionNode36.getRp();
        int int40 = functionNode36.getFunctionType();
        int int41 = functionNode20.addFunction(functionNode36);
        java.lang.String str42 = functionNode20.getNextTempName();
        int int43 = functionNode13.addFunction(functionNode20);
        java.lang.String str44 = functionNode13.getName();
        com.google.javascript.rhino.head.Node node46 = new com.google.javascript.rhino.head.Node(17, (com.google.javascript.rhino.head.Node) regExpLiteral3, (com.google.javascript.rhino.head.Node) functionNode13, 15);
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor47 = functionNode13.iterator();
        com.google.javascript.rhino.head.Node node50 = new com.google.javascript.rhino.head.Node(830992929, 161);
        functionNode13.addChildToFront(node50);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 26 + "'", int10 == 26);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "$0" + "'", str12, "$0");
        org.junit.Assert.assertNotNull(scriptNode14);
        org.junit.Assert.assertNotNull(scriptNode21);
        org.junit.Assert.assertNull(nodeList27);
        org.junit.Assert.assertNull(scope29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNotNull(scriptNode33);
        org.junit.Assert.assertNotNull(scriptNode37);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "$0" + "'", str42, "$0");
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "" + "'", str44, "");
        org.junit.Assert.assertNotNull(nodeItor47);
    }

    @Test
    public void test10128() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10128");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode0 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = functionNode0.getTop();
        java.lang.String str2 = functionNode0.getName();
        functionNode0.flattenSymbolTable(true);
        functionNode0.setFunctionIsGetter();
        functionNode0.setLp(4);
        org.junit.Assert.assertNotNull(scriptNode1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "" + "'", str2, "");
    }

    @Test
    public void test10129() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10129");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int2 = scriptNode1.getEndLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode4 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int5 = scriptNode4.getEndLineno();
        scriptNode1.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode4);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode7 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int8 = functionNode7.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode9 = functionNode7.getTop();
        boolean boolean10 = functionNode7.hasSideEffects();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode12 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int13 = scriptNode12.getEndLineno();
        int int14 = scriptNode12.getBaseLineno();
        com.google.javascript.rhino.head.ast.Jump jump17 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode19 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int20 = scriptNode19.getEndLineno();
        int int21 = scriptNode19.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList22 = scriptNode19.getChildScopes();
        jump17.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode19);
        java.lang.String str24 = scriptNode19.debugPrint();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode12, (com.google.javascript.rhino.head.ast.Scope) scriptNode19);
        com.google.javascript.rhino.head.ast.Scope scope26 = new com.google.javascript.rhino.head.ast.Scope();
        scriptNode19.target = scope26;
        functionNode7.addChildScope(scope26);
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode4, (com.google.javascript.rhino.head.ast.Scope) functionNode7);
        boolean boolean30 = functionNode7.hasConsistentReturnUsage();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode31 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int32 = functionNode31.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode33 = functionNode31.getTop();
        com.google.javascript.rhino.head.ast.Name name34 = null;
        functionNode31.setFunctionName(name34);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode36 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode37 = functionNode36.getTop();
        functionNode31.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode36);
        com.google.javascript.rhino.head.ast.Scope scope41 = new com.google.javascript.rhino.head.ast.Scope((int) (short) -1, 0);
        functionNode31.replaceWith(scope41);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode45 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int46 = functionNode45.getLp();
        functionNode45.setEncodedSource("");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode49 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int50 = functionNode49.getLp();
        functionNode49.setEncodedSource("");
        functionNode49.flattenSymbolTable(false);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode55 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int56 = functionNode55.getLp();
        com.google.javascript.rhino.head.Node node58 = new com.google.javascript.rhino.head.Node((-1), (com.google.javascript.rhino.head.Node) functionNode45, (com.google.javascript.rhino.head.Node) functionNode49, (com.google.javascript.rhino.head.Node) functionNode55, (int) '#');
        com.google.javascript.rhino.head.ast.Comment comment59 = functionNode55.getJsDocNode();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode60 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.Scope scope62 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 10);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode63 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode64 = functionNode63.getTop();
        functionNode63.setParens((int) (byte) 1, (int) (short) 1);
        functionNode63.setEncodedSourceStart((-1));
        functionNode63.setFunctionIsGetter();
        scope62.addChildToFront((com.google.javascript.rhino.head.Node) functionNode63);
        functionNode60.setBody((com.google.javascript.rhino.head.ast.AstNode) functionNode63);
        boolean boolean73 = functionNode55.isParam((com.google.javascript.rhino.head.ast.AstNode) functionNode60);
        int int74 = functionNode55.getFunctionCount();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode75 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int76 = functionNode75.getLp();
        functionNode75.setEncodedSource("");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode79 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int80 = functionNode79.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode81 = functionNode79.getTop();
        com.google.javascript.rhino.head.ast.Name name82 = null;
        functionNode79.setFunctionName(name82);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode84 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode85 = functionNode84.getTop();
        functionNode79.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode84);
        int int87 = functionNode84.getRp();
        int int88 = functionNode84.getFunctionType();
        functionNode75.addParam((com.google.javascript.rhino.head.ast.AstNode) functionNode84);
        com.google.javascript.rhino.head.Node node90 = functionNode75.getLastSibling();
        com.google.javascript.rhino.head.Node node91 = new com.google.javascript.rhino.head.Node((int) (byte) 10, (com.google.javascript.rhino.head.Node) functionNode55, (com.google.javascript.rhino.head.Node) functionNode75);
        functionNode31.addResumptionPoint((com.google.javascript.rhino.head.Node) functionNode55);
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) functionNode7, (com.google.javascript.rhino.head.ast.Scope) functionNode31);
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator94 = functionNode31.new NodeIterator();
        boolean boolean95 = nodeIterator94.hasNext();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(scriptNode9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertNull(scopeList22);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str24, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNotNull(scriptNode33);
        org.junit.Assert.assertNotNull(scriptNode37);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1));
        org.junit.Assert.assertNull(comment59);
        org.junit.Assert.assertNotNull(scriptNode64);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 0 + "'", int74 == 0);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + (-1) + "'", int76 == (-1));
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + (-1) + "'", int80 == (-1));
        org.junit.Assert.assertNotNull(scriptNode81);
        org.junit.Assert.assertNotNull(scriptNode85);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + (-1) + "'", int87 == (-1));
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + 0 + "'", int88 == 0);
        org.junit.Assert.assertNotNull(node90);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + true + "'", boolean95 == true);
    }

    @Test
    public void test10130() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10130");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode0 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int1 = functionNode0.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = functionNode0.getTop();
        com.google.javascript.rhino.head.ast.Name name3 = null;
        functionNode0.setFunctionName(name3);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode5 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = functionNode5.getTop();
        functionNode0.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode5);
        com.google.javascript.rhino.head.ast.Scope scope10 = new com.google.javascript.rhino.head.ast.Scope((int) (short) -1, 0);
        functionNode0.replaceWith(scope10);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode14 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int15 = functionNode14.getLp();
        functionNode14.setEncodedSource("");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode18 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int19 = functionNode18.getLp();
        functionNode18.setEncodedSource("");
        functionNode18.flattenSymbolTable(false);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode24 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int25 = functionNode24.getLp();
        com.google.javascript.rhino.head.Node node27 = new com.google.javascript.rhino.head.Node((-1), (com.google.javascript.rhino.head.Node) functionNode14, (com.google.javascript.rhino.head.Node) functionNode18, (com.google.javascript.rhino.head.Node) functionNode24, (int) '#');
        com.google.javascript.rhino.head.ast.Comment comment28 = functionNode24.getJsDocNode();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode29 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.Scope scope31 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 10);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode32 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode33 = functionNode32.getTop();
        functionNode32.setParens((int) (byte) 1, (int) (short) 1);
        functionNode32.setEncodedSourceStart((-1));
        functionNode32.setFunctionIsGetter();
        scope31.addChildToFront((com.google.javascript.rhino.head.Node) functionNode32);
        functionNode29.setBody((com.google.javascript.rhino.head.ast.AstNode) functionNode32);
        boolean boolean42 = functionNode24.isParam((com.google.javascript.rhino.head.ast.AstNode) functionNode29);
        int int43 = functionNode24.getFunctionCount();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode44 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int45 = functionNode44.getLp();
        functionNode44.setEncodedSource("");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode48 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int49 = functionNode48.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode50 = functionNode48.getTop();
        com.google.javascript.rhino.head.ast.Name name51 = null;
        functionNode48.setFunctionName(name51);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode53 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode54 = functionNode53.getTop();
        functionNode48.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode53);
        int int56 = functionNode53.getRp();
        int int57 = functionNode53.getFunctionType();
        functionNode44.addParam((com.google.javascript.rhino.head.ast.AstNode) functionNode53);
        com.google.javascript.rhino.head.Node node59 = functionNode44.getLastSibling();
        com.google.javascript.rhino.head.Node node60 = new com.google.javascript.rhino.head.Node((int) (byte) 10, (com.google.javascript.rhino.head.Node) functionNode24, (com.google.javascript.rhino.head.Node) functionNode44);
        functionNode0.addResumptionPoint((com.google.javascript.rhino.head.Node) functionNode24);
        functionNode24.setBounds((int) '4', 19);
        boolean boolean65 = functionNode24.isGetterOrSetter();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-1) + "'", int1 == (-1));
        org.junit.Assert.assertNotNull(scriptNode2);
        org.junit.Assert.assertNotNull(scriptNode6);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNull(comment28);
        org.junit.Assert.assertNotNull(scriptNode33);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertNotNull(scriptNode50);
        org.junit.Assert.assertNotNull(scriptNode54);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1));
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 0 + "'", int57 == 0);
        org.junit.Assert.assertNotNull(node59);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
    }

    @Test
    public void test10131() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10131");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode0 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = functionNode0.getTop();
        com.google.javascript.rhino.head.Node node2 = scriptNode1.getFirstChild();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode4 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int5 = functionNode4.getLp();
        functionNode4.setEncodedSource("");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode8 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int9 = functionNode8.getLp();
        functionNode8.setEncodedSource("");
        functionNode8.flattenSymbolTable(false);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode14 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int15 = functionNode14.getLp();
        com.google.javascript.rhino.head.Node node17 = new com.google.javascript.rhino.head.Node((-1), (com.google.javascript.rhino.head.Node) functionNode4, (com.google.javascript.rhino.head.Node) functionNode8, (com.google.javascript.rhino.head.Node) functionNode14, (int) '#');
        boolean boolean18 = functionNode14.isGenerator();
        com.google.javascript.rhino.head.ast.Scope scope20 = new com.google.javascript.rhino.head.ast.Scope();
        scope20.setBounds(0, 10);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode24 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode25 = functionNode24.getTop();
        int int26 = functionNode24.getRegexpCount();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode27 = functionNode24.getEnclosingFunction();
        java.lang.String str28 = scope20.toStringTree((com.google.javascript.rhino.head.ast.ScriptNode) functionNode24);
        functionNode14.putProp(1, (java.lang.Object) functionNode24);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode30 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int31 = functionNode30.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode32 = functionNode30.getTop();
        com.google.javascript.rhino.head.ast.Name name33 = null;
        functionNode30.setFunctionName(name33);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode35 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode36 = functionNode35.getTop();
        functionNode30.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode35);
        functionNode35.setIsExpressionClosure(true);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode41 = new com.google.javascript.rhino.head.ast.FunctionNode((int) (byte) 100);
        int int42 = functionNode35.addFunction(functionNode41);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode44 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode45 = functionNode44.getTop();
        java.lang.String str46 = scriptNode45.getJsDoc();
        com.google.javascript.rhino.head.Node node48 = scriptNode45.setType(0);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode49 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int50 = functionNode49.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode52 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        java.lang.String str53 = functionNode49.toStringTree(scriptNode52);
        com.google.javascript.rhino.head.ast.Scope scope55 = scriptNode52.getDefiningScope("");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode57 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int58 = scriptNode57.getEndLineno();
        int int59 = scriptNode57.getBaseLineno();
        com.google.javascript.rhino.head.Node node60 = new com.google.javascript.rhino.head.Node(25, node48, (com.google.javascript.rhino.head.Node) scriptNode52, (com.google.javascript.rhino.head.Node) scriptNode57);
        int int61 = functionNode41.compareTo((com.google.javascript.rhino.head.ast.AstNode) scriptNode52);
        functionNode24.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode52);
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode1, (com.google.javascript.rhino.head.ast.Scope) scriptNode52);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList64 = scriptNode52.getFunctions();
        boolean boolean65 = functionNodeList64.isEmpty();
        java.lang.String[][][][][] strArray66 = new java.lang.String[][][][][] {};
        java.lang.String[][][][][] strArray67 = functionNodeList64.toArray(strArray66);
        org.junit.Assert.assertNotNull(scriptNode1);
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(scriptNode25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNull(functionNode27);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNotNull(scriptNode32);
        org.junit.Assert.assertNotNull(scriptNode36);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertNotNull(scriptNode45);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertNotNull(node48);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertNull(scope55);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + (-1) + "'", int58 == (-1));
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-1) + "'", int59 == (-1));
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 1 + "'", int61 == 1);
        org.junit.Assert.assertNotNull(functionNodeList64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(strArray66);
        org.junit.Assert.assertNotNull(strArray67);
    }

    @Test
    public void test10132() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10132");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode0 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int1 = functionNode0.getLp();
        functionNode0.setEncodedSource("");
        functionNode0.flattenSymbolTable(false);
        java.lang.String str6 = functionNode0.getName();
        functionNode0.setFunctionIsGetter();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode8 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int9 = functionNode8.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = functionNode8.getTop();
        com.google.javascript.rhino.head.Node node11 = functionNode8.getLastSibling();
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList12 = functionNode8.getParams();
        functionNode0.setParams(astNodeList12);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode14 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int15 = functionNode14.getLp();
        functionNode14.setLp((int) (short) 1);
        int int20 = functionNode14.getIntProp(4, 26);
        functionNode14.flattenSymbolTable(true);
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList23 = functionNode14.getParams();
        functionNode0.setParams(astNodeList23);
        functionNode0.setEndLineno(12);
        com.google.javascript.rhino.head.Token.CommentType commentType29 = com.google.javascript.rhino.head.Token.CommentType.HTML;
        com.google.javascript.rhino.head.ast.Comment comment31 = new com.google.javascript.rhino.head.ast.Comment(20, 1, commentType29, "109");
        java.lang.String str33 = comment31.toSource(0);
        java.lang.String str34 = comment31.getValue();
        functionNode0.setJsDocNode(comment31);
        functionNode0.setIsExpressionClosure(false);
        functionNode0.setBaseLineno(281549544);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-1) + "'", int1 == (-1));
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(scriptNode10);
        org.junit.Assert.assertNotNull(node11);
        org.junit.Assert.assertNotNull(astNodeList12);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 26 + "'", int20 == 26);
        org.junit.Assert.assertNotNull(astNodeList23);
        org.junit.Assert.assertTrue("'" + commentType29 + "' != '" + com.google.javascript.rhino.head.Token.CommentType.HTML + "'", commentType29.equals(com.google.javascript.rhino.head.Token.CommentType.HTML));
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "109" + "'", str33, "109");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "109" + "'", str34, "109");
    }

    @Test
    public void test10133() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10133");
        com.google.javascript.rhino.head.ast.Jump jump4 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump4.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump8 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump4, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int11 = scriptNode10.getEndLineno();
        int int12 = scriptNode10.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList13 = scriptNode10.getChildScopes();
        com.google.javascript.rhino.head.Node node14 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump4, (com.google.javascript.rhino.head.Node) scriptNode10);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList15 = scriptNode10.getFunctions();
        functionNodeList15.clear();
        com.google.javascript.rhino.head.ast.Jump jump21 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump21.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump25 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump21, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode27 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int28 = scriptNode27.getEndLineno();
        int int29 = scriptNode27.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList30 = scriptNode27.getChildScopes();
        com.google.javascript.rhino.head.Node node31 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump21, (com.google.javascript.rhino.head.Node) scriptNode27);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList32 = scriptNode27.getFunctions();
        functionNodeList32.clear();
        boolean boolean34 = functionNodeList15.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.FunctionNode>) functionNodeList32);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode35 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode36 = functionNode35.getTop();
        boolean boolean37 = functionNodeList15.contains((java.lang.Object) scriptNode36);
        com.google.javascript.rhino.head.ast.Jump jump42 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump42.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump46 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump42, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode48 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int49 = scriptNode48.getEndLineno();
        int int50 = scriptNode48.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList51 = scriptNode48.getChildScopes();
        com.google.javascript.rhino.head.Node node52 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump42, (com.google.javascript.rhino.head.Node) scriptNode48);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList53 = scriptNode48.getFunctions();
        java.util.Spliterator<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeSpliterator54 = functionNodeList53.spliterator();
        int int56 = functionNodeList53.indexOf((java.lang.Object) (byte) 10);
        boolean boolean57 = functionNodeList15.containsAll((java.util.Collection<com.google.javascript.rhino.head.ast.FunctionNode>) functionNodeList53);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode59 = new com.google.javascript.rhino.head.ast.ScriptNode(5);
        boolean boolean60 = functionNodeList53.remove((java.lang.Object) scriptNode59);
        java.util.stream.Stream<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeStream61 = functionNodeList53.stream();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode62 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int63 = functionNode62.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode64 = functionNode62.getTop();
        com.google.javascript.rhino.head.ast.AstNode astNode65 = functionNode62.getBody();
        int int66 = functionNode62.getLength();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap67 = null;
        functionNode62.setSymbolTable(strMap67);
        functionNode62.setIsGenerator();
        boolean boolean70 = functionNodeList53.contains((java.lang.Object) functionNode62);
        boolean boolean71 = functionNodeList53.isEmpty();
        java.lang.Object[] objArray72 = functionNodeList53.toArray();
        // The following exception was thrown during execution in test generation
        try {
            java.util.ListIterator<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeItor74 = functionNodeList53.listIterator((-822402397));
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: -822402397, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNull(scopeList13);
        org.junit.Assert.assertNotNull(functionNodeList15);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertNull(scopeList30);
        org.junit.Assert.assertNotNull(functionNodeList32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(scriptNode36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertNull(scopeList51);
        org.junit.Assert.assertNotNull(functionNodeList53);
        org.junit.Assert.assertNotNull(functionNodeSpliterator54);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1));
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(functionNodeStream61);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + (-1) + "'", int63 == (-1));
        org.junit.Assert.assertNotNull(scriptNode64);
        org.junit.Assert.assertNull(astNode65);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 1 + "'", int66 == 1);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(objArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray72), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray72), "[]");
    }

    @Test
    public void test10134() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10134");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode0 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = functionNode0.getTop();
        functionNode0.setParens((int) (byte) 1, (int) (short) 1);
        com.google.javascript.rhino.head.ast.AstNode astNode5 = null;
        functionNode0.setParent(astNode5);
        functionNode0.setLp((int) (byte) 1);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode9 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int10 = functionNode9.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = functionNode9.getTop();
        com.google.javascript.rhino.head.ast.Name name12 = null;
        functionNode9.setFunctionName(name12);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode14 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode15 = functionNode14.getTop();
        functionNode9.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode14);
        com.google.javascript.rhino.head.ast.Scope scope19 = new com.google.javascript.rhino.head.ast.Scope((int) (short) -1, 0);
        functionNode9.replaceWith(scope19);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode21 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int22 = functionNode21.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode23 = functionNode21.getTop();
        com.google.javascript.rhino.head.ast.Name name24 = null;
        functionNode21.setFunctionName(name24);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode26 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode27 = functionNode26.getTop();
        functionNode21.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode26);
        int int29 = functionNode9.addFunction(functionNode21);
        int int30 = functionNode21.getLineno();
        int int31 = functionNode21.getFunctionType();
        functionNode21.setRelative((-1262414679));
        com.google.javascript.rhino.head.ast.Jump jump37 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump37.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump41 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump37, 0);
        com.google.javascript.rhino.head.ast.Jump jump45 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump45.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump49 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump45, 0);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode50 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int51 = functionNode50.getLp();
        functionNode50.setEncodedSource("");
        functionNode50.flattenSymbolTable(false);
        jump37.addChildAfter((com.google.javascript.rhino.head.Node) jump45, (com.google.javascript.rhino.head.Node) functionNode50);
        functionNode21.addChild((com.google.javascript.rhino.head.ast.AstNode) jump37);
        boolean boolean58 = functionNode0.isParam((com.google.javascript.rhino.head.ast.AstNode) functionNode21);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode60 = new com.google.javascript.rhino.head.ast.FunctionNode(13);
        int int61 = functionNode60.getType();
        int int62 = functionNode60.getLp();
        com.google.javascript.rhino.head.ast.AstNode astNode63 = functionNode60.getMemberExprNode();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator64 = functionNode60.new NodeIterator();
        functionNode0.setBody((com.google.javascript.rhino.head.ast.AstNode) functionNode60);
        org.junit.Assert.assertNotNull(scriptNode1);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(scriptNode11);
        org.junit.Assert.assertNotNull(scriptNode15);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNotNull(scriptNode23);
        org.junit.Assert.assertNotNull(scriptNode27);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1));
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 109 + "'", int61 == 109);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + (-1) + "'", int62 == (-1));
        org.junit.Assert.assertNull(astNode63);
    }

    @Test
    public void test10135() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10135");
        com.google.javascript.rhino.head.ast.RegExpLiteral regExpLiteral1 = new com.google.javascript.rhino.head.ast.RegExpLiteral((int) (short) 1);
        java.lang.String str3 = regExpLiteral1.toSource((int) (byte) 10);
        regExpLiteral1.setFlags("-1\tSCRIPT -1 1\n");
        java.lang.String str7 = regExpLiteral1.toSource((int) (short) -1);
        regExpLiteral1.setFlags("EOF");
        java.lang.String str11 = regExpLiteral1.makeIndent(10);
        com.google.javascript.rhino.head.ast.Jump jump14 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode16 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int17 = scriptNode16.getEndLineno();
        int int18 = scriptNode16.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList19 = scriptNode16.getChildScopes();
        jump14.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode16);
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator21 = scriptNode16.spliterator();
        regExpLiteral1.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode16);
        int int23 = regExpLiteral1.getLength();
        java.lang.String str24 = regExpLiteral1.getValue();
        java.lang.Class<?> wildcardClass25 = regExpLiteral1.getClass();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "                    /null/" + "'", str3, "                    /null/");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "/null/-1\tSCRIPT -1 1\n" + "'", str7, "/null/-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "                    " + "'", str11, "                    ");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNull(scopeList19);
        org.junit.Assert.assertNotNull(nodeSpliterator21);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(wildcardClass25);
    }

    @Test
    public void test10136() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10136");
        com.google.javascript.rhino.head.ast.Jump jump5 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump5.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump9 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump5, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int12 = scriptNode11.getEndLineno();
        int int13 = scriptNode11.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList14 = scriptNode11.getChildScopes();
        com.google.javascript.rhino.head.Node node15 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump5, (com.google.javascript.rhino.head.Node) scriptNode11);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList16 = scriptNode11.getFunctions();
        int int17 = scriptNode11.getPosition();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList18 = scriptNode11.getChildScopes();
        int int19 = scriptNode11.getEncodedSourceEnd();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList20 = scriptNode11.getSymbols();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode21 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int22 = functionNode21.getLp();
        functionNode21.setEncodedSource("");
        functionNode21.flattenSymbolTable(false);
        com.google.javascript.rhino.head.ast.RegExpLiteral regExpLiteral28 = new com.google.javascript.rhino.head.ast.RegExpLiteral((int) (short) 1);
        java.lang.String str30 = regExpLiteral28.toSource((int) (byte) 10);
        regExpLiteral28.setFlags("-1\tSCRIPT -1 1\n");
        regExpLiteral28.removeProp(8);
        java.lang.String str35 = regExpLiteral28.getValue();
        com.google.javascript.rhino.head.Node node36 = new com.google.javascript.rhino.head.Node(7, (com.google.javascript.rhino.head.Node) scriptNode11, (com.google.javascript.rhino.head.Node) functionNode21, (com.google.javascript.rhino.head.Node) regExpLiteral28);
        com.google.javascript.rhino.head.Node node38 = functionNode21.setType(5);
        boolean boolean39 = functionNode21.requiresActivation();
        com.google.javascript.rhino.head.Node node40 = null;
        // The following exception was thrown during execution in test generation
        try {
            functionNode21.addChildrenToFront(node40);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNull(scopeList14);
        org.junit.Assert.assertNotNull(functionNodeList16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNull(scopeList18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(symbolList20);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "                    /null/" + "'", str30, "                    /null/");
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNotNull(node38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
    }

    @Test
    public void test10137() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10137");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode1 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int2 = functionNode1.getLp();
        functionNode1.setEncodedSource("");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode5 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int6 = functionNode5.getLp();
        functionNode5.setEncodedSource("");
        functionNode5.flattenSymbolTable(false);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode11 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int12 = functionNode11.getLp();
        com.google.javascript.rhino.head.Node node14 = new com.google.javascript.rhino.head.Node((-1), (com.google.javascript.rhino.head.Node) functionNode1, (com.google.javascript.rhino.head.Node) functionNode5, (com.google.javascript.rhino.head.Node) functionNode11, (int) '#');
        boolean boolean15 = functionNode11.isGenerator();
        com.google.javascript.rhino.head.ast.Scope scope17 = new com.google.javascript.rhino.head.ast.Scope();
        scope17.setBounds(0, 10);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode21 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode22 = functionNode21.getTop();
        int int23 = functionNode21.getRegexpCount();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode24 = functionNode21.getEnclosingFunction();
        java.lang.String str25 = scope17.toStringTree((com.google.javascript.rhino.head.ast.ScriptNode) functionNode21);
        functionNode11.putProp(1, (java.lang.Object) functionNode21);
        int int27 = functionNode21.getFunctionType();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode28 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int29 = functionNode28.getLp();
        functionNode28.setEncodedSource("");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode32 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.Scope scope34 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 10);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode35 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode36 = functionNode35.getTop();
        functionNode35.setParens((int) (byte) 1, (int) (short) 1);
        functionNode35.setEncodedSourceStart((-1));
        functionNode35.setFunctionIsGetter();
        scope34.addChildToFront((com.google.javascript.rhino.head.Node) functionNode35);
        functionNode32.setBody((com.google.javascript.rhino.head.ast.AstNode) functionNode35);
        int int45 = functionNode28.addFunction(functionNode32);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode46 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int47 = functionNode46.getLp();
        functionNode46.setEncodedSource("");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode50 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int51 = functionNode50.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode52 = functionNode50.getTop();
        com.google.javascript.rhino.head.ast.Name name53 = null;
        functionNode50.setFunctionName(name53);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode55 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode56 = functionNode55.getTop();
        functionNode50.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode55);
        int int58 = functionNode55.getRp();
        int int59 = functionNode55.getFunctionType();
        functionNode46.addParam((com.google.javascript.rhino.head.ast.AstNode) functionNode55);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode61 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int62 = functionNode61.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode63 = functionNode61.getTop();
        com.google.javascript.rhino.head.Node node64 = functionNode61.getLastSibling();
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList65 = functionNode61.getParams();
        functionNode46.setParams(astNodeList65);
        functionNode32.setParams(astNodeList65);
        com.google.javascript.rhino.head.ast.Comment comment68 = functionNode32.getJsDocNode();
        int int69 = functionNode32.getRp();
        functionNode32.setEncodedSourceBounds(97, (-1));
        functionNode21.setBody((com.google.javascript.rhino.head.ast.AstNode) functionNode32);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList74 = functionNode32.getFunctions();
        java.util.Spliterator<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeSpliterator75 = functionNodeList74.spliterator();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(scriptNode22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNull(functionNode24);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertNotNull(scriptNode36);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1));
        org.junit.Assert.assertNotNull(scriptNode52);
        org.junit.Assert.assertNotNull(scriptNode56);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + (-1) + "'", int58 == (-1));
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + (-1) + "'", int62 == (-1));
        org.junit.Assert.assertNotNull(scriptNode63);
        org.junit.Assert.assertNotNull(node64);
        org.junit.Assert.assertNotNull(astNodeList65);
        org.junit.Assert.assertNull(comment68);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + (-1) + "'", int69 == (-1));
        org.junit.Assert.assertNotNull(functionNodeList74);
        org.junit.Assert.assertNotNull(functionNodeSpliterator75);
    }

    @Test
    public void test10138() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10138");
        com.google.javascript.rhino.head.ast.Jump jump5 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump5.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump9 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump5, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int12 = scriptNode11.getEndLineno();
        int int13 = scriptNode11.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList14 = scriptNode11.getChildScopes();
        com.google.javascript.rhino.head.Node node15 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump5, (com.google.javascript.rhino.head.Node) scriptNode11);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode17 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int18 = scriptNode17.getEndLineno();
        com.google.javascript.rhino.head.ast.RegExpLiteral regExpLiteral20 = new com.google.javascript.rhino.head.ast.RegExpLiteral((int) (short) 1);
        java.lang.String str22 = regExpLiteral20.toSource((int) (byte) 10);
        regExpLiteral20.setFlags("-1\tSCRIPT -1 1\n");
        regExpLiteral20.removeProp(8);
        com.google.javascript.rhino.head.Node node28 = new com.google.javascript.rhino.head.Node(10, node15, (com.google.javascript.rhino.head.Node) scriptNode17, (com.google.javascript.rhino.head.Node) regExpLiteral20, 3);
        java.lang.String str30 = regExpLiteral20.makeIndent((int) (short) 100);
        regExpLiteral20.setValue("    109");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode34 = new com.google.javascript.rhino.head.ast.FunctionNode(0);
        com.google.javascript.rhino.head.ast.Jump jump40 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump40.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump44 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump40, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode46 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int47 = scriptNode46.getEndLineno();
        int int48 = scriptNode46.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList49 = scriptNode46.getChildScopes();
        com.google.javascript.rhino.head.Node node50 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump40, (com.google.javascript.rhino.head.Node) scriptNode46);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList51 = scriptNode46.getFunctions();
        functionNodeList51.clear();
        com.google.javascript.rhino.head.ast.Jump jump57 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump57.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump61 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump57, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode63 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int64 = scriptNode63.getEndLineno();
        int int65 = scriptNode63.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList66 = scriptNode63.getChildScopes();
        com.google.javascript.rhino.head.Node node67 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump57, (com.google.javascript.rhino.head.Node) scriptNode63);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList68 = scriptNode63.getFunctions();
        boolean boolean69 = functionNodeList51.removeAll((java.util.Collection<com.google.javascript.rhino.head.ast.FunctionNode>) functionNodeList68);
        functionNode34.putProp(20, (java.lang.Object) functionNodeList51);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode71 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int72 = functionNode71.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode74 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        java.lang.String str75 = functionNode71.toStringTree(scriptNode74);
        int int76 = functionNode34.addFunction(functionNode71);
        com.google.javascript.rhino.head.ast.Jump jump81 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump81.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump85 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump81, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode87 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int88 = scriptNode87.getEndLineno();
        int int89 = scriptNode87.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList90 = scriptNode87.getChildScopes();
        com.google.javascript.rhino.head.Node node91 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump81, (com.google.javascript.rhino.head.Node) scriptNode87);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList92 = scriptNode87.getFunctions();
        int int93 = scriptNode87.getPosition();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList94 = scriptNode87.getChildScopes();
        int int95 = scriptNode87.getEncodedSourceEnd();
        java.lang.String str96 = functionNode34.toStringTree(scriptNode87);
        regExpLiteral20.setParent((com.google.javascript.rhino.head.ast.AstNode) functionNode34);
        boolean boolean98 = functionNode34.isGenerator();
        int int99 = functionNode34.getEncodedSourceStart();
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNull(scopeList14);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "                    /null/" + "'", str22, "                    /null/");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "                                                                                                                                                                                                        " + "'", str30, "                                                                                                                                                                                                        ");
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
        org.junit.Assert.assertNull(scopeList49);
        org.junit.Assert.assertNotNull(functionNodeList51);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + (-1) + "'", int64 == (-1));
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + (-1) + "'", int65 == (-1));
        org.junit.Assert.assertNull(scopeList66);
        org.junit.Assert.assertNotNull(functionNodeList68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + (-1) + "'", int72 == (-1));
        org.junit.Assert.assertNull(str75);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 0 + "'", int76 == 0);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + (-1) + "'", int88 == (-1));
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + (-1) + "'", int89 == (-1));
        org.junit.Assert.assertNull(scopeList90);
        org.junit.Assert.assertNotNull(functionNodeList92);
        org.junit.Assert.assertTrue("'" + int93 + "' != '" + (-1) + "'", int93 == (-1));
        org.junit.Assert.assertNull(scopeList94);
        org.junit.Assert.assertTrue("'" + int95 + "' != '" + (-1) + "'", int95 == (-1));
        org.junit.Assert.assertNull(str96);
        org.junit.Assert.assertTrue("'" + boolean98 + "' != '" + false + "'", boolean98 == false);
        org.junit.Assert.assertTrue("'" + int99 + "' != '" + (-1) + "'", int99 == (-1));
    }

    @Test
    public void test10139() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10139");
        com.google.javascript.rhino.head.Token.CommentType commentType6 = com.google.javascript.rhino.head.Token.CommentType.HTML;
        com.google.javascript.rhino.head.ast.Comment comment8 = new com.google.javascript.rhino.head.ast.Comment(20, 1, commentType6, "109");
        com.google.javascript.rhino.head.ast.Comment comment10 = new com.google.javascript.rhino.head.ast.Comment(136, 15, commentType6, "-1\tSCRIPT -1 1\n");
        com.google.javascript.rhino.head.Token.CommentType commentType11 = com.google.javascript.rhino.head.Token.CommentType.JSDOC;
        comment10.setCommentType(commentType11);
        com.google.javascript.rhino.head.ast.Comment comment14 = new com.google.javascript.rhino.head.ast.Comment(7, (int) (byte) 0, commentType11, "  {\n  }\n");
        com.google.javascript.rhino.head.Node node15 = comment14.getNext();
        com.google.javascript.rhino.head.Token.CommentType commentType16 = comment14.getCommentType();
        org.junit.Assert.assertTrue("'" + commentType6 + "' != '" + com.google.javascript.rhino.head.Token.CommentType.HTML + "'", commentType6.equals(com.google.javascript.rhino.head.Token.CommentType.HTML));
        org.junit.Assert.assertTrue("'" + commentType11 + "' != '" + com.google.javascript.rhino.head.Token.CommentType.JSDOC + "'", commentType11.equals(com.google.javascript.rhino.head.Token.CommentType.JSDOC));
        org.junit.Assert.assertNull(node15);
        org.junit.Assert.assertTrue("'" + commentType16 + "' != '" + com.google.javascript.rhino.head.Token.CommentType.JSDOC + "'", commentType16.equals(com.google.javascript.rhino.head.Token.CommentType.JSDOC));
    }

    @Test
    public void test10140() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10140");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode1 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int2 = functionNode1.getLp();
        functionNode1.setEncodedSource("");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode5 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int6 = functionNode5.getLp();
        functionNode5.setEncodedSource("");
        functionNode5.flattenSymbolTable(false);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode11 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int12 = functionNode11.getLp();
        com.google.javascript.rhino.head.Node node14 = new com.google.javascript.rhino.head.Node((-1), (com.google.javascript.rhino.head.Node) functionNode1, (com.google.javascript.rhino.head.Node) functionNode5, (com.google.javascript.rhino.head.Node) functionNode11, (int) '#');
        boolean boolean15 = functionNode11.isGenerator();
        int int16 = functionNode11.getFunctionType();
        com.google.javascript.rhino.head.Node node17 = functionNode11.getFirstChild();
        int int18 = functionNode11.getEncodedSourceStart();
        boolean boolean19 = functionNode11.isGetterOrSetter();
        functionNode11.setFunctionIsGetter();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNull(node17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    }

    @Test
    public void test10141() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10141");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode0 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = functionNode0.getTop();
        functionNode0.setParens((int) (byte) 1, (int) (short) 1);
        int int7 = functionNode0.getIntProp((int) (short) 100, (int) (byte) 10);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode8 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int9 = functionNode8.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = functionNode8.getTop();
        boolean boolean11 = functionNode8.hasSideEffects();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode13 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int14 = scriptNode13.getEndLineno();
        int int15 = scriptNode13.getBaseLineno();
        com.google.javascript.rhino.head.ast.Jump jump18 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode20 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int21 = scriptNode20.getEndLineno();
        int int22 = scriptNode20.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList23 = scriptNode20.getChildScopes();
        jump18.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode20);
        java.lang.String str25 = scriptNode20.debugPrint();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode13, (com.google.javascript.rhino.head.ast.Scope) scriptNode20);
        com.google.javascript.rhino.head.ast.Scope scope27 = new com.google.javascript.rhino.head.ast.Scope();
        scriptNode20.target = scope27;
        functionNode8.addChildScope(scope27);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode30 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int31 = functionNode30.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode32 = functionNode30.getTop();
        com.google.javascript.rhino.head.ast.Name name33 = null;
        functionNode30.setFunctionName(name33);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode35 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode36 = functionNode35.getTop();
        functionNode30.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode35);
        com.google.javascript.rhino.head.ast.Scope scope40 = new com.google.javascript.rhino.head.ast.Scope((int) (short) -1, 0);
        functionNode30.replaceWith(scope40);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode42 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int43 = functionNode42.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode44 = functionNode42.getTop();
        com.google.javascript.rhino.head.ast.Name name45 = null;
        functionNode42.setFunctionName(name45);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode47 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode48 = functionNode47.getTop();
        functionNode42.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode47);
        int int50 = functionNode30.addFunction(functionNode42);
        int int51 = functionNode8.addFunction(functionNode42);
        functionNode0.addChildScope((com.google.javascript.rhino.head.ast.Scope) functionNode42);
        com.google.javascript.rhino.head.ast.Scope scope53 = com.google.javascript.rhino.head.ast.Scope.splitScope((com.google.javascript.rhino.head.ast.Scope) functionNode42);
        functionNode42.removeProp((-3285918));
        com.google.javascript.rhino.head.ast.Scope scope56 = com.google.javascript.rhino.head.ast.Scope.splitScope((com.google.javascript.rhino.head.ast.Scope) functionNode42);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String[] strArray57 = functionNode42.getParamAndVarNames();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(scriptNode1);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 10 + "'", int7 == 10);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(scriptNode10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNull(scopeList23);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str25, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNotNull(scriptNode32);
        org.junit.Assert.assertNotNull(scriptNode36);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertNotNull(scriptNode44);
        org.junit.Assert.assertNotNull(scriptNode48);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertNotNull(scope53);
        org.junit.Assert.assertNotNull(scope56);
    }

    @Test
    public void test10142() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10142");
        com.google.javascript.rhino.head.ast.Jump jump3 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump3.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump7 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump3, 0);
        com.google.javascript.rhino.head.ast.Jump jump11 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump11.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump15 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump11, 0);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode16 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int17 = functionNode16.getLp();
        functionNode16.setEncodedSource("");
        functionNode16.flattenSymbolTable(false);
        jump3.addChildAfter((com.google.javascript.rhino.head.Node) jump11, (com.google.javascript.rhino.head.Node) functionNode16);
        com.google.javascript.rhino.head.Node node23 = functionNode16.target;
        boolean boolean24 = functionNode16.hasConsistentReturnUsage();
        com.google.javascript.rhino.head.ast.Name name25 = functionNode16.getFunctionName();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode26 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.Scope scope28 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 10);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode29 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode30 = functionNode29.getTop();
        functionNode29.setParens((int) (byte) 1, (int) (short) 1);
        functionNode29.setEncodedSourceStart((-1));
        functionNode29.setFunctionIsGetter();
        scope28.addChildToFront((com.google.javascript.rhino.head.Node) functionNode29);
        functionNode26.setBody((com.google.javascript.rhino.head.ast.AstNode) functionNode29);
        functionNode29.setRelative(0);
        functionNode16.setBody((com.google.javascript.rhino.head.ast.AstNode) functionNode29);
        functionNode16.setEncodedSourceStart((int) (byte) 0);
        com.google.javascript.rhino.head.ast.AstNode astNode44 = functionNode16.getBody();
        com.google.javascript.rhino.head.ast.AstNode astNode45 = functionNode16.getParent();
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNull(node23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(name25);
        org.junit.Assert.assertNotNull(scriptNode30);
        org.junit.Assert.assertNotNull(astNode44);
        org.junit.Assert.assertNull(astNode45);
    }

    @Test
    public void test10143() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10143");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode0 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int1 = functionNode0.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = functionNode0.getTop();
        com.google.javascript.rhino.head.ast.Name name3 = null;
        functionNode0.setFunctionName(name3);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode5 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int6 = functionNode5.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode8 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        java.lang.String str9 = functionNode5.toStringTree(scriptNode8);
        functionNode5.setFunctionIsGetter();
        int int11 = functionNode0.addFunction(functionNode5);
        boolean boolean12 = functionNode5.hasSideEffects();
        com.google.javascript.rhino.head.Node node13 = functionNode5.getLastChild();
        int int14 = functionNode5.getRegexpCount();
        com.google.javascript.rhino.head.ast.Name name16 = null;
        com.google.javascript.rhino.head.ast.FunctionNode functionNode17 = new com.google.javascript.rhino.head.ast.FunctionNode(8, name16);
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) functionNode5, (com.google.javascript.rhino.head.ast.Scope) functionNode17);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str19 = functionNode5.debugPrint();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-1) + "'", int1 == (-1));
        org.junit.Assert.assertNotNull(scriptNode2);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNull(node13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
    }

    @Test
    public void test10144() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10144");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode0 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = functionNode0.getTop();
        com.google.javascript.rhino.head.ast.Name name2 = null;
        functionNode0.setFunctionName(name2);
        int int4 = functionNode0.getLength();
        com.google.javascript.rhino.head.ast.Scope scope7 = new com.google.javascript.rhino.head.ast.Scope((int) '4');
        functionNode0.putProp(6, (java.lang.Object) scope7);
        java.lang.String str9 = functionNode0.getName();
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor10 = null;
        // The following exception was thrown during execution in test generation
        try {
            functionNode0.visit(nodeVisitor10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(scriptNode1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 1 + "'", int4 == 1);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
    }

    @Test
    public void test10145() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10145");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode0 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = functionNode0.getTop();
        functionNode0.setParens((int) (byte) 1, (int) (short) 1);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode5 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.Scope scope7 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 10);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode8 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode9 = functionNode8.getTop();
        functionNode8.setParens((int) (byte) 1, (int) (short) 1);
        functionNode8.setEncodedSourceStart((-1));
        functionNode8.setFunctionIsGetter();
        scope7.addChildToFront((com.google.javascript.rhino.head.Node) functionNode8);
        functionNode5.setBody((com.google.javascript.rhino.head.ast.AstNode) functionNode8);
        functionNode5.setFunctionIsSetter();
        int int19 = functionNode0.addFunction(functionNode5);
        java.lang.String str20 = functionNode0.getNextTempName();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode22 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int23 = scriptNode22.getEndLineno();
        int int24 = scriptNode22.getBaseLineno();
        scriptNode22.removeProp(0);
        scriptNode22.setEncodedSourceEnd(19);
        functionNode0.addParam((com.google.javascript.rhino.head.ast.AstNode) scriptNode22);
        functionNode0.setEncodedSource("                {\n                }\n");
        functionNode0.setEncodedSourceBounds(23, 0);
        java.util.Map<com.google.javascript.rhino.head.Node, int[]> nodeMap35 = functionNode0.getLiveLocals();
        org.junit.Assert.assertNotNull(scriptNode1);
        org.junit.Assert.assertNotNull(scriptNode9);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "$0" + "'", str20, "$0");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertNull(nodeMap35);
    }

    @Test
    public void test10146() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10146");
        com.google.javascript.rhino.head.ast.Jump jump1 = new com.google.javascript.rhino.head.ast.Jump((int) (short) 0);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode2 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int3 = functionNode2.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode4 = functionNode2.getTop();
        com.google.javascript.rhino.head.ast.Name name5 = null;
        functionNode2.setFunctionName(name5);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode7 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode8 = functionNode7.getTop();
        functionNode2.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode7);
        functionNode7.setIsExpressionClosure(true);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode13 = new com.google.javascript.rhino.head.ast.FunctionNode((int) (byte) 100);
        int int14 = functionNode7.addFunction(functionNode13);
        int int15 = jump1.compareTo((com.google.javascript.rhino.head.ast.AstNode) functionNode13);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode17 = new com.google.javascript.rhino.head.ast.FunctionNode(0);
        com.google.javascript.rhino.head.ast.Jump jump23 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump23.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump27 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump23, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode29 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int30 = scriptNode29.getEndLineno();
        int int31 = scriptNode29.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList32 = scriptNode29.getChildScopes();
        com.google.javascript.rhino.head.Node node33 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump23, (com.google.javascript.rhino.head.Node) scriptNode29);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList34 = scriptNode29.getFunctions();
        functionNodeList34.clear();
        com.google.javascript.rhino.head.ast.Jump jump40 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump40.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump44 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump40, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode46 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int47 = scriptNode46.getEndLineno();
        int int48 = scriptNode46.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList49 = scriptNode46.getChildScopes();
        com.google.javascript.rhino.head.Node node50 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump40, (com.google.javascript.rhino.head.Node) scriptNode46);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList51 = scriptNode46.getFunctions();
        boolean boolean52 = functionNodeList34.removeAll((java.util.Collection<com.google.javascript.rhino.head.ast.FunctionNode>) functionNodeList51);
        functionNode17.putProp(20, (java.lang.Object) functionNodeList34);
        int int54 = functionNode13.addFunction(functionNode17);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode55 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int56 = functionNode55.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode57 = functionNode55.getTop();
        com.google.javascript.rhino.head.ast.AstNode astNode58 = functionNode55.getBody();
        com.google.javascript.rhino.head.ast.Jump jump64 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump64.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump68 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump64, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode70 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int71 = scriptNode70.getEndLineno();
        int int72 = scriptNode70.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList73 = scriptNode70.getChildScopes();
        com.google.javascript.rhino.head.Node node74 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump64, (com.google.javascript.rhino.head.Node) scriptNode70);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList75 = scriptNode70.getChildScopes();
        com.google.javascript.rhino.head.ast.Jump jump76 = new com.google.javascript.rhino.head.ast.Jump(11, (com.google.javascript.rhino.head.Node) scriptNode70);
        functionNode55.setParent((com.google.javascript.rhino.head.ast.AstNode) scriptNode70);
        functionNode13.setCompilerData((java.lang.Object) scriptNode70);
        com.google.javascript.rhino.head.ast.RegExpLiteral regExpLiteral80 = new com.google.javascript.rhino.head.ast.RegExpLiteral((int) (short) 1);
        regExpLiteral80.setFlags("-1\tSCRIPT -1 1\n");
        regExpLiteral80.setValue("hi!");
        java.lang.String str85 = regExpLiteral80.getValue();
        regExpLiteral80.removeProp(0);
        java.lang.String str89 = regExpLiteral80.toSource(11);
        functionNode13.addRegExp(regExpLiteral80);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(scriptNode4);
        org.junit.Assert.assertNotNull(scriptNode8);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNull(scopeList32);
        org.junit.Assert.assertNotNull(functionNodeList34);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
        org.junit.Assert.assertNull(scopeList49);
        org.junit.Assert.assertNotNull(functionNodeList51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1));
        org.junit.Assert.assertNotNull(scriptNode57);
        org.junit.Assert.assertNull(astNode58);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + (-1) + "'", int71 == (-1));
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + (-1) + "'", int72 == (-1));
        org.junit.Assert.assertNull(scopeList73);
        org.junit.Assert.assertNull(scopeList75);
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "hi!" + "'", str85, "hi!");
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "                      /hi!/-1\tSCRIPT -1 1\n" + "'", str89, "                      /hi!/-1\tSCRIPT -1 1\n");
    }

    @Test
    public void test10147() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10147");
        com.google.javascript.rhino.head.ast.RegExpLiteral regExpLiteral2 = new com.google.javascript.rhino.head.ast.RegExpLiteral(19, 0);
        java.lang.String str3 = regExpLiteral2.getFlags();
        // The following exception was thrown during execution in test generation
        try {
            int int4 = regExpLiteral2.labelId();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(str3);
    }

    @Test
    public void test10148() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10148");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode1 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = functionNode1.getTop();
        com.google.javascript.rhino.head.ast.Name name3 = null;
        functionNode1.setFunctionName(name3);
        boolean boolean5 = functionNode1.requiresActivation();
        com.google.javascript.rhino.head.ast.Jump jump9 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump9.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump13 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump9, 0);
        com.google.javascript.rhino.head.ast.Jump jump17 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump17.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump21 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump17, 0);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode22 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int23 = functionNode22.getLp();
        functionNode22.setEncodedSource("");
        functionNode22.flattenSymbolTable(false);
        jump9.addChildAfter((com.google.javascript.rhino.head.Node) jump17, (com.google.javascript.rhino.head.Node) functionNode22);
        com.google.javascript.rhino.head.Node node29 = functionNode22.target;
        functionNode1.setBody((com.google.javascript.rhino.head.ast.AstNode) functionNode22);
        com.google.javascript.rhino.head.Node node32 = new com.google.javascript.rhino.head.Node(10, (com.google.javascript.rhino.head.Node) functionNode22, 10);
        functionNode22.setFunctionIsSetter();
        int int34 = functionNode22.getBaseLineno();
        boolean boolean35 = functionNode22.isSetter();
        boolean boolean36 = functionNode22.hasSideEffects();
        org.junit.Assert.assertNotNull(scriptNode2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNull(node29);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
    }

    @Test
    public void test10149() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10149");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 10);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode2 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode3 = functionNode2.getTop();
        functionNode2.setParens((int) (byte) 1, (int) (short) 1);
        functionNode2.setEncodedSourceStart((-1));
        functionNode2.setFunctionIsGetter();
        scope1.addChildToFront((com.google.javascript.rhino.head.Node) functionNode2);
        functionNode2.setRp(19);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int15 = scriptNode14.getEndLineno();
        int int16 = scriptNode14.getBaseLineno();
        com.google.javascript.rhino.head.ast.Jump jump19 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode21 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int22 = scriptNode21.getEndLineno();
        int int23 = scriptNode21.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList24 = scriptNode21.getChildScopes();
        jump19.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode21);
        java.lang.String str26 = scriptNode21.debugPrint();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode14, (com.google.javascript.rhino.head.ast.Scope) scriptNode21);
        com.google.javascript.rhino.head.ast.Scope scope28 = new com.google.javascript.rhino.head.ast.Scope();
        scriptNode21.target = scope28;
        java.lang.String str30 = functionNode2.toStringTree(scriptNode21);
        java.lang.String str32 = scriptNode21.toSource((int) (short) 10);
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap33 = scriptNode21.getSymbolTable();
        int int34 = strMap33.size();
        strMap33.clear();
        com.google.javascript.rhino.head.ast.Symbol symbol37 = null;
        com.google.javascript.rhino.head.ast.Symbol symbol38 = strMap33.replace("Symbol (EOF) name=null", symbol37);
        com.google.javascript.rhino.head.ast.Symbol symbol40 = new com.google.javascript.rhino.head.ast.Symbol();
        java.lang.String str41 = symbol40.getDeclTypeName();
        com.google.javascript.rhino.head.ast.Scope scope42 = symbol40.getContainingTable();
        com.google.javascript.rhino.head.ast.Scope scope43 = symbol40.getContainingTable();
        com.google.javascript.rhino.head.ast.Symbol symbol44 = strMap33.putIfAbsent("/=", symbol40);
        com.google.javascript.rhino.head.ast.Jump jump46 = new com.google.javascript.rhino.head.ast.Jump((int) (short) 0);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode47 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int48 = functionNode47.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode49 = functionNode47.getTop();
        com.google.javascript.rhino.head.ast.Name name50 = null;
        functionNode47.setFunctionName(name50);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode52 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode53 = functionNode52.getTop();
        functionNode47.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode52);
        functionNode52.setIsExpressionClosure(true);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode58 = new com.google.javascript.rhino.head.ast.FunctionNode((int) (byte) 100);
        int int59 = functionNode52.addFunction(functionNode58);
        int int60 = jump46.compareTo((com.google.javascript.rhino.head.ast.AstNode) functionNode58);
        functionNode58.setEncodedSourceStart((int) '4');
        functionNode58.setLength(48);
        functionNode58.setFunctionType(19);
        boolean boolean67 = strMap33.equals((java.lang.Object) 19);
        com.google.javascript.rhino.head.ast.Symbol symbol69 = new com.google.javascript.rhino.head.ast.Symbol();
        java.lang.String str70 = symbol69.getName();
        com.google.javascript.rhino.head.Node node71 = symbol69.getNode();
        symbol69.setIndex(1);
        symbol69.setName("-1\tSCRIPT -1 1\n");
        com.google.javascript.rhino.head.ast.Symbol symbol76 = strMap33.replace("20\tCOMMENT 20 1\n", symbol69);
        strMap33.clear();
        com.google.javascript.rhino.head.ast.Symbol symbol79 = new com.google.javascript.rhino.head.ast.Symbol();
        java.lang.String str80 = symbol79.getName();
        symbol79.setIndex((int) '#');
        com.google.javascript.rhino.head.ast.Symbol symbol83 = strMap33.putIfAbsent("                                                                                                                                                                                                                                                                                Symbol (EOF) name=null line=-1", symbol79);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode84 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode85 = functionNode84.getTop();
        int int86 = functionNode84.getRegexpCount();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode87 = functionNode84.getEnclosingFunction();
        functionNode84.setBaseLineno(0);
        functionNode84.setParens((int) (short) 100, 394394084);
        boolean boolean93 = strMap33.containsKey((java.lang.Object) functionNode84);
        org.junit.Assert.assertNotNull(scriptNode3);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNull(scopeList24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str26, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "                    {\n                    }\n" + "'", str32, "                    {\n                    }\n");
        org.junit.Assert.assertNotNull(strMap33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertNull(symbol38);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "EOF" + "'", str41, "EOF");
        org.junit.Assert.assertNull(scope42);
        org.junit.Assert.assertNull(scope43);
        org.junit.Assert.assertNull(symbol44);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
        org.junit.Assert.assertNotNull(scriptNode49);
        org.junit.Assert.assertNotNull(scriptNode53);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-1) + "'", int60 == (-1));
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNull(str70);
        org.junit.Assert.assertNull(node71);
        org.junit.Assert.assertNull(symbol76);
        org.junit.Assert.assertNull(str80);
        org.junit.Assert.assertNull(symbol83);
        org.junit.Assert.assertNotNull(scriptNode85);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + 0 + "'", int86 == 0);
        org.junit.Assert.assertNull(functionNode87);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
    }

    @Test
    public void test10150() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10150");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode0 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int1 = functionNode0.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = functionNode0.getTop();
        com.google.javascript.rhino.head.ast.Name name3 = null;
        functionNode0.setFunctionName(name3);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode5 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = functionNode5.getTop();
        functionNode0.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode5);
        functionNode5.setIsExpressionClosure(true);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode11 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int12 = functionNode11.getLp();
        functionNode11.setEncodedSource("");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode15 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int16 = functionNode15.getLp();
        functionNode15.setEncodedSource("");
        functionNode15.flattenSymbolTable(false);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode21 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int22 = functionNode21.getLp();
        com.google.javascript.rhino.head.Node node24 = new com.google.javascript.rhino.head.Node((-1), (com.google.javascript.rhino.head.Node) functionNode11, (com.google.javascript.rhino.head.Node) functionNode15, (com.google.javascript.rhino.head.Node) functionNode21, (int) '#');
        com.google.javascript.rhino.head.ast.Comment comment25 = functionNode21.getJsDocNode();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode26 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.Scope scope28 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 10);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode29 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode30 = functionNode29.getTop();
        functionNode29.setParens((int) (byte) 1, (int) (short) 1);
        functionNode29.setEncodedSourceStart((-1));
        functionNode29.setFunctionIsGetter();
        scope28.addChildToFront((com.google.javascript.rhino.head.Node) functionNode29);
        functionNode26.setBody((com.google.javascript.rhino.head.ast.AstNode) functionNode29);
        boolean boolean39 = functionNode21.isParam((com.google.javascript.rhino.head.ast.AstNode) functionNode26);
        functionNode21.setFunctionType(13);
        functionNode21.setRp(19);
        boolean boolean44 = functionNode21.isGenerator();
        java.util.List<com.google.javascript.rhino.head.Node> nodeList45 = functionNode21.getResumptionPoints();
        com.google.javascript.rhino.head.ast.Symbol symbol47 = functionNode21.getSymbol("            {\n            }\n");
        functionNode5.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode21);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList49 = functionNode5.getSymbols();
        functionNode5.setEncodedSourceStart(774094395);
        boolean boolean52 = functionNode5.isGetterOrSetter();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-1) + "'", int1 == (-1));
        org.junit.Assert.assertNotNull(scriptNode2);
        org.junit.Assert.assertNotNull(scriptNode6);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNull(comment25);
        org.junit.Assert.assertNotNull(scriptNode30);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNull(nodeList45);
        org.junit.Assert.assertNull(symbol47);
        org.junit.Assert.assertNotNull(symbolList49);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
    }

    @Test
    public void test10151() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10151");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode1 = new com.google.javascript.rhino.head.ast.FunctionNode(0);
        com.google.javascript.rhino.head.ast.Jump jump7 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump7.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump11 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump7, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode13 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int14 = scriptNode13.getEndLineno();
        int int15 = scriptNode13.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList16 = scriptNode13.getChildScopes();
        com.google.javascript.rhino.head.Node node17 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump7, (com.google.javascript.rhino.head.Node) scriptNode13);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList18 = scriptNode13.getFunctions();
        functionNodeList18.clear();
        com.google.javascript.rhino.head.ast.Jump jump24 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump24.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump28 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump24, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode30 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int31 = scriptNode30.getEndLineno();
        int int32 = scriptNode30.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList33 = scriptNode30.getChildScopes();
        com.google.javascript.rhino.head.Node node34 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump24, (com.google.javascript.rhino.head.Node) scriptNode30);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList35 = scriptNode30.getFunctions();
        boolean boolean36 = functionNodeList18.removeAll((java.util.Collection<com.google.javascript.rhino.head.ast.FunctionNode>) functionNodeList35);
        functionNode1.putProp(20, (java.lang.Object) functionNodeList18);
        com.google.javascript.rhino.head.ast.Symbol symbol38 = new com.google.javascript.rhino.head.ast.Symbol();
        java.lang.String str39 = symbol38.getDeclTypeName();
        com.google.javascript.rhino.head.ast.Scope scope40 = symbol38.getContainingTable();
        symbol38.setName("                          ");
        boolean boolean43 = functionNodeList18.remove((java.lang.Object) symbol38);
        java.util.Iterator<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeItor44 = functionNodeList18.iterator();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode46 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int47 = functionNode46.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode48 = functionNode46.getTop();
        com.google.javascript.rhino.head.ast.Name name49 = null;
        functionNode46.setFunctionName(name49);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode51 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode52 = functionNode51.getTop();
        functionNode46.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode51);
        com.google.javascript.rhino.head.ast.Scope scope56 = new com.google.javascript.rhino.head.ast.Scope((int) (short) -1, 0);
        functionNode46.replaceWith(scope56);
        java.lang.String str59 = scope56.makeIndent(13);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode61 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        com.google.javascript.rhino.head.ast.Comment comment62 = scriptNode61.getJsDocNode();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode63 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int64 = functionNode63.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode65 = functionNode63.getTop();
        boolean boolean66 = functionNode63.hasSideEffects();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode68 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int69 = functionNode68.getLp();
        functionNode68.setEncodedSource("");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode72 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int73 = functionNode72.getLp();
        functionNode72.setEncodedSource("");
        functionNode72.flattenSymbolTable(false);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode78 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int79 = functionNode78.getLp();
        com.google.javascript.rhino.head.Node node81 = new com.google.javascript.rhino.head.Node((-1), (com.google.javascript.rhino.head.Node) functionNode68, (com.google.javascript.rhino.head.Node) functionNode72, (com.google.javascript.rhino.head.Node) functionNode78, (int) '#');
        boolean boolean82 = functionNode78.isGenerator();
        int int83 = functionNode78.getFunctionType();
        com.google.javascript.rhino.head.Node node84 = functionNode78.getNext();
        functionNode78.setFunctionIsSetter();
        functionNode78.clearParentScope();
        functionNode63.addResumptionPoint((com.google.javascript.rhino.head.Node) functionNode78);
        com.google.javascript.rhino.head.Node node89 = new com.google.javascript.rhino.head.Node(6, (com.google.javascript.rhino.head.Node) scope56, (com.google.javascript.rhino.head.Node) scriptNode61, (com.google.javascript.rhino.head.Node) functionNode78, 101);
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean90 = functionNodeList18.add(functionNode78);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNull(scopeList16);
        org.junit.Assert.assertNotNull(functionNodeList18);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNull(scopeList33);
        org.junit.Assert.assertNotNull(functionNodeList35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "EOF" + "'", str39, "EOF");
        org.junit.Assert.assertNull(scope40);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(functionNodeItor44);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertNotNull(scriptNode48);
        org.junit.Assert.assertNotNull(scriptNode52);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "                          " + "'", str59, "                          ");
        org.junit.Assert.assertNull(comment62);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + (-1) + "'", int64 == (-1));
        org.junit.Assert.assertNotNull(scriptNode65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + (-1) + "'", int69 == (-1));
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + (-1) + "'", int73 == (-1));
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + (-1) + "'", int79 == (-1));
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 0 + "'", int83 == 0);
        org.junit.Assert.assertNull(node84);
    }

    @Test
    public void test10152() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10152");
        com.google.javascript.rhino.head.ast.Name name1 = null;
        com.google.javascript.rhino.head.ast.FunctionNode functionNode2 = new com.google.javascript.rhino.head.ast.FunctionNode(4, name1);
        com.google.javascript.rhino.head.ast.Jump jump7 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump7.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump11 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump7, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode13 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int14 = scriptNode13.getEndLineno();
        int int15 = scriptNode13.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList16 = scriptNode13.getChildScopes();
        com.google.javascript.rhino.head.Node node17 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump7, (com.google.javascript.rhino.head.Node) scriptNode13);
        com.google.javascript.rhino.head.Node node19 = scriptNode13.setType(0);
        functionNode2.setParentScope((com.google.javascript.rhino.head.ast.Scope) scriptNode13);
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor21 = functionNode2.iterator();
        boolean boolean22 = functionNode2.isExpressionClosure();
        java.lang.Object obj23 = functionNode2.getCompilerData();
        // The following exception was thrown during execution in test generation
        try {
            functionNode2.setEndLineno((-1044852625));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNull(scopeList16);
        org.junit.Assert.assertNotNull(node19);
        org.junit.Assert.assertNotNull(nodeItor21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(obj23);
    }

    @Test
    public void test10153() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10153");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode0 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int1 = functionNode0.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = functionNode0.getTop();
        com.google.javascript.rhino.head.ast.Name name3 = null;
        functionNode0.setFunctionName(name3);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode5 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = functionNode5.getTop();
        functionNode0.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode5);
        java.lang.String str8 = functionNode0.getNextTempName();
        java.lang.String str9 = functionNode0.getEncodedSource();
        functionNode0.setIsGenerator();
        functionNode0.setBaseLineno(48);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode14 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int15 = functionNode14.getLp();
        functionNode14.setEncodedSource("");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode18 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int19 = functionNode18.getLp();
        functionNode18.setEncodedSource("");
        functionNode18.flattenSymbolTable(false);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode24 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int25 = functionNode24.getLp();
        com.google.javascript.rhino.head.Node node27 = new com.google.javascript.rhino.head.Node((-1), (com.google.javascript.rhino.head.Node) functionNode14, (com.google.javascript.rhino.head.Node) functionNode18, (com.google.javascript.rhino.head.Node) functionNode24, (int) '#');
        functionNode24.setEncodedSourceStart(25);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode31 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode32 = functionNode31.getTop();
        functionNode31.setParens((int) (byte) 1, (int) (short) 1);
        int int36 = functionNode31.getRp();
        com.google.javascript.rhino.head.Node node39 = com.google.javascript.rhino.head.Node.newString((int) (byte) 100, "");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode40 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int41 = functionNode40.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode43 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        java.lang.String str44 = functionNode40.toStringTree(scriptNode43);
        com.google.javascript.rhino.head.ast.Scope scope46 = scriptNode43.getDefiningScope("");
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList47 = scriptNode43.getSymbols();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode49 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int50 = scriptNode49.getEndLineno();
        int int51 = scriptNode49.getBaseLineno();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode43, (com.google.javascript.rhino.head.ast.Scope) scriptNode49);
        java.lang.String str53 = scriptNode49.getEncodedSource();
        com.google.javascript.rhino.head.Node node55 = new com.google.javascript.rhino.head.Node(136, (com.google.javascript.rhino.head.Node) functionNode31, node39, (com.google.javascript.rhino.head.Node) scriptNode49, (int) (short) 0);
        functionNode24.setParent((com.google.javascript.rhino.head.ast.AstNode) functionNode31);
        functionNode0.target = functionNode24;
        com.google.javascript.rhino.head.ast.FunctionNode functionNode58 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int59 = functionNode58.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode60 = functionNode58.getTop();
        boolean boolean61 = functionNode58.hasSideEffects();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode63 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int64 = scriptNode63.getEndLineno();
        int int65 = scriptNode63.getBaseLineno();
        com.google.javascript.rhino.head.ast.Jump jump68 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode70 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int71 = scriptNode70.getEndLineno();
        int int72 = scriptNode70.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList73 = scriptNode70.getChildScopes();
        jump68.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode70);
        java.lang.String str75 = scriptNode70.debugPrint();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode63, (com.google.javascript.rhino.head.ast.Scope) scriptNode70);
        com.google.javascript.rhino.head.ast.Scope scope77 = new com.google.javascript.rhino.head.ast.Scope();
        scriptNode70.target = scope77;
        functionNode58.addChildScope(scope77);
        int int80 = functionNode0.compareTo((com.google.javascript.rhino.head.ast.AstNode) scope77);
        functionNode0.setBounds((int) (byte) 10, 18);
        java.lang.String str84 = functionNode0.getJsDoc();
        com.google.javascript.rhino.head.ast.Name name85 = functionNode0.getFunctionName();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-1) + "'", int1 == (-1));
        org.junit.Assert.assertNotNull(scriptNode2);
        org.junit.Assert.assertNotNull(scriptNode6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "$0" + "'", str8, "$0");
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNotNull(scriptNode32);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 1 + "'", int36 == 1);
        org.junit.Assert.assertNotNull(node39);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertNull(scope46);
        org.junit.Assert.assertNotNull(symbolList47);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1));
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-1) + "'", int59 == (-1));
        org.junit.Assert.assertNotNull(scriptNode60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + (-1) + "'", int64 == (-1));
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + (-1) + "'", int65 == (-1));
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + (-1) + "'", int71 == (-1));
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + (-1) + "'", int72 == (-1));
        org.junit.Assert.assertNull(scopeList73);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str75, "-1\tSCRIPT -1 1\n");
// flaky:         org.junit.Assert.assertTrue("'" + int80 + "' != '" + (-1454130853) + "'", int80 == (-1454130853));
        org.junit.Assert.assertNull(str84);
        org.junit.Assert.assertNull(name85);
    }

    @Test
    public void test10154() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10154");
        com.google.javascript.rhino.head.ast.Jump jump6 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump6.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump10 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump6, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode12 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int13 = scriptNode12.getEndLineno();
        int int14 = scriptNode12.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList15 = scriptNode12.getChildScopes();
        com.google.javascript.rhino.head.Node node16 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump6, (com.google.javascript.rhino.head.Node) scriptNode12);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList17 = scriptNode12.getFunctions();
        int int18 = scriptNode12.getPosition();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList19 = scriptNode12.getChildScopes();
        int int20 = scriptNode12.getEncodedSourceEnd();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList21 = scriptNode12.getSymbols();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode22 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int23 = functionNode22.getLp();
        functionNode22.setEncodedSource("");
        functionNode22.flattenSymbolTable(false);
        com.google.javascript.rhino.head.ast.RegExpLiteral regExpLiteral29 = new com.google.javascript.rhino.head.ast.RegExpLiteral((int) (short) 1);
        java.lang.String str31 = regExpLiteral29.toSource((int) (byte) 10);
        regExpLiteral29.setFlags("-1\tSCRIPT -1 1\n");
        regExpLiteral29.removeProp(8);
        java.lang.String str36 = regExpLiteral29.getValue();
        com.google.javascript.rhino.head.Node node37 = new com.google.javascript.rhino.head.Node(7, (com.google.javascript.rhino.head.Node) scriptNode12, (com.google.javascript.rhino.head.Node) functionNode22, (com.google.javascript.rhino.head.Node) regExpLiteral29);
        functionNode22.flattenSymbolTable(false);
        com.google.javascript.rhino.head.ast.Jump jump40 = new com.google.javascript.rhino.head.ast.Jump(16, (com.google.javascript.rhino.head.Node) functionNode22);
        int int41 = functionNode22.getLp();
        int int42 = functionNode22.getFunctionType();
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList43 = functionNode22.getParams();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode44 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int45 = functionNode44.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode46 = functionNode44.getTop();
        com.google.javascript.rhino.head.ast.Name name47 = null;
        functionNode44.setFunctionName(name47);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode49 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int50 = functionNode49.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode52 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        java.lang.String str53 = functionNode49.toStringTree(scriptNode52);
        functionNode49.setFunctionIsGetter();
        int int55 = functionNode44.addFunction(functionNode49);
        com.google.javascript.rhino.head.ast.Jump jump60 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump60.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump64 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump60, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode66 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int67 = scriptNode66.getEndLineno();
        int int68 = scriptNode66.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList69 = scriptNode66.getChildScopes();
        com.google.javascript.rhino.head.Node node70 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump60, (com.google.javascript.rhino.head.Node) scriptNode66);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList71 = scriptNode66.getFunctions();
        int int72 = scriptNode66.getPosition();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList73 = scriptNode66.getChildScopes();
        scriptNode66.flattenSymbolTable(false);
        functionNode44.setParentScope((com.google.javascript.rhino.head.ast.Scope) scriptNode66);
        functionNode22.addChildScope((com.google.javascript.rhino.head.ast.Scope) scriptNode66);
        scriptNode66.setEncodedSourceEnd((int) '4');
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNull(scopeList15);
        org.junit.Assert.assertNotNull(functionNodeList17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNull(scopeList19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertNotNull(symbolList21);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "                    /null/" + "'", str31, "                    /null/");
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertNotNull(astNodeList43);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
        org.junit.Assert.assertNotNull(scriptNode46);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + (-1) + "'", int67 == (-1));
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + (-1) + "'", int68 == (-1));
        org.junit.Assert.assertNull(scopeList69);
        org.junit.Assert.assertNotNull(functionNodeList71);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + (-1) + "'", int72 == (-1));
        org.junit.Assert.assertNull(scopeList73);
    }

    @Test
    public void test10155() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10155");
        com.google.javascript.rhino.head.ast.RegExpLiteral regExpLiteral1 = new com.google.javascript.rhino.head.ast.RegExpLiteral((int) '4');
    }

    @Test
    public void test10156() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10156");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 10);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode2 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode3 = functionNode2.getTop();
        functionNode2.setParens((int) (byte) 1, (int) (short) 1);
        functionNode2.setEncodedSourceStart((-1));
        functionNode2.setFunctionIsGetter();
        scope1.addChildToFront((com.google.javascript.rhino.head.Node) functionNode2);
        functionNode2.setRp(19);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int15 = scriptNode14.getEndLineno();
        int int16 = scriptNode14.getBaseLineno();
        com.google.javascript.rhino.head.ast.Jump jump19 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode21 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int22 = scriptNode21.getEndLineno();
        int int23 = scriptNode21.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList24 = scriptNode21.getChildScopes();
        jump19.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode21);
        java.lang.String str26 = scriptNode21.debugPrint();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode14, (com.google.javascript.rhino.head.ast.Scope) scriptNode21);
        com.google.javascript.rhino.head.ast.Scope scope28 = new com.google.javascript.rhino.head.ast.Scope();
        scriptNode21.target = scope28;
        java.lang.String str30 = functionNode2.toStringTree(scriptNode21);
        java.lang.String str32 = scriptNode21.toSource((int) (short) 10);
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap33 = scriptNode21.getSymbolTable();
        int int34 = strMap33.size();
        java.util.Collection<com.google.javascript.rhino.head.ast.Symbol> symbolCollection35 = strMap33.values();
        java.util.Collection<com.google.javascript.rhino.head.ast.Symbol> symbolCollection36 = strMap33.values();
        java.util.Set<java.util.Map.Entry<java.lang.String, com.google.javascript.rhino.head.ast.Symbol>> strEntrySet37 = strMap33.entrySet();
        com.google.javascript.rhino.head.ast.Symbol symbol39 = new com.google.javascript.rhino.head.ast.Symbol();
        java.lang.String str40 = symbol39.getName();
        com.google.javascript.rhino.head.Node node41 = symbol39.getNode();
        symbol39.setIndex(1);
        com.google.javascript.rhino.head.ast.Scope scope44 = symbol39.getContainingTable();
        java.lang.String str45 = symbol39.getName();
        int int46 = symbol39.getDeclType();
        com.google.javascript.rhino.head.ast.Symbol symbol47 = strMap33.put("/null/", symbol39);
        java.util.Set<java.lang.String> strSet48 = strMap33.keySet();
        strMap33.clear();
        org.junit.Assert.assertNotNull(scriptNode3);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNull(scopeList24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str26, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "                    {\n                    }\n" + "'", str32, "                    {\n                    }\n");
        org.junit.Assert.assertNotNull(strMap33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertNotNull(symbolCollection35);
        org.junit.Assert.assertNotNull(symbolCollection36);
        org.junit.Assert.assertNotNull(strEntrySet37);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNull(node41);
        org.junit.Assert.assertNull(scope44);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertNull(symbol47);
        org.junit.Assert.assertNotNull(strSet48);
    }

    @Test
    public void test10157() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10157");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode0 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int1 = functionNode0.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = functionNode0.getTop();
        com.google.javascript.rhino.head.ast.Name name3 = null;
        functionNode0.setFunctionName(name3);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode5 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.Scope scope7 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 10);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode8 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode9 = functionNode8.getTop();
        functionNode8.setParens((int) (byte) 1, (int) (short) 1);
        functionNode8.setEncodedSourceStart((-1));
        functionNode8.setFunctionIsGetter();
        scope7.addChildToFront((com.google.javascript.rhino.head.Node) functionNode8);
        functionNode5.setBody((com.google.javascript.rhino.head.ast.AstNode) functionNode8);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode18 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode19 = functionNode18.getTop();
        functionNode18.setParens((int) (byte) 1, (int) (short) 1);
        functionNode18.setEncodedSourceStart((-1));
        java.util.List<com.google.javascript.rhino.head.Node> nodeList25 = functionNode18.getResumptionPoints();
        int int26 = functionNode18.getLp();
        functionNode5.setBody((com.google.javascript.rhino.head.ast.AstNode) functionNode18);
        functionNode0.addParam((com.google.javascript.rhino.head.ast.AstNode) functionNode18);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode29 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int30 = functionNode29.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode31 = functionNode29.getTop();
        com.google.javascript.rhino.head.ast.Name name32 = null;
        functionNode29.setFunctionName(name32);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode34 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode35 = functionNode34.getTop();
        functionNode29.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode34);
        int int37 = functionNode34.getRp();
        int int38 = functionNode34.getFunctionType();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) functionNode18, (com.google.javascript.rhino.head.ast.Scope) functionNode34);
        com.google.javascript.rhino.head.Node node40 = functionNode34.getLastChild();
        functionNode34.clearParentScope();
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList42 = functionNode34.getStatements();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-1) + "'", int1 == (-1));
        org.junit.Assert.assertNotNull(scriptNode2);
        org.junit.Assert.assertNotNull(scriptNode9);
        org.junit.Assert.assertNotNull(scriptNode19);
        org.junit.Assert.assertNull(nodeList25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 1 + "'", int26 == 1);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertNotNull(scriptNode31);
        org.junit.Assert.assertNotNull(scriptNode35);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertNull(node40);
        org.junit.Assert.assertNotNull(astNodeList42);
    }

    @Test
    public void test10158() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10158");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode2 = new com.google.javascript.rhino.head.ast.FunctionNode(19);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode3 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int4 = functionNode3.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = functionNode3.getTop();
        com.google.javascript.rhino.head.ast.Name name6 = null;
        functionNode3.setFunctionName(name6);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode8 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode9 = functionNode8.getTop();
        functionNode3.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode8);
        com.google.javascript.rhino.head.ast.Scope scope13 = new com.google.javascript.rhino.head.ast.Scope((int) (short) -1, 0);
        functionNode3.replaceWith(scope13);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode15 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int16 = functionNode15.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode17 = functionNode15.getTop();
        com.google.javascript.rhino.head.ast.Name name18 = null;
        functionNode15.setFunctionName(name18);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode20 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode21 = functionNode20.getTop();
        functionNode15.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode20);
        int int23 = functionNode3.addFunction(functionNode15);
        functionNode3.flattenSymbolTable(false);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode26 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode27 = functionNode26.getTop();
        functionNode26.setParens((int) (byte) 1, (int) (short) 1);
        functionNode26.setEncodedSourceStart((-1));
        java.util.List<com.google.javascript.rhino.head.Node> nodeList33 = functionNode26.getResumptionPoints();
        com.google.javascript.rhino.head.ast.Scope scope35 = functionNode26.getDefiningScope("hi!");
        boolean boolean36 = functionNode26.isGetterOrSetter();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode37 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int38 = functionNode37.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode39 = functionNode37.getTop();
        com.google.javascript.rhino.head.ast.Name name40 = null;
        functionNode37.setFunctionName(name40);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode42 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode43 = functionNode42.getTop();
        functionNode37.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode42);
        int int45 = functionNode42.getRp();
        int int46 = functionNode42.getFunctionType();
        int int47 = functionNode26.addFunction(functionNode42);
        functionNode42.setRp((-1));
        functionNode3.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode42);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode51 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode52 = functionNode51.getTop();
        int int53 = functionNode51.getRegexpCount();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode54 = functionNode51.getEnclosingFunction();
        functionNode51.setBaseLineno(0);
        functionNode3.setBody((com.google.javascript.rhino.head.ast.AstNode) functionNode51);
        com.google.javascript.rhino.head.ast.Jump jump60 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode62 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int63 = scriptNode62.getEndLineno();
        int int64 = scriptNode62.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList65 = scriptNode62.getChildScopes();
        jump60.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode62);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode68 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int69 = functionNode68.getLp();
        functionNode68.setEncodedSource("");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode72 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int73 = functionNode72.getLp();
        functionNode72.setEncodedSource("");
        functionNode72.flattenSymbolTable(false);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode78 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int79 = functionNode78.getLp();
        com.google.javascript.rhino.head.Node node81 = new com.google.javascript.rhino.head.Node((-1), (com.google.javascript.rhino.head.Node) functionNode68, (com.google.javascript.rhino.head.Node) functionNode72, (com.google.javascript.rhino.head.Node) functionNode78, (int) '#');
        jump60.addChildrenToFront((com.google.javascript.rhino.head.Node) functionNode68);
        jump60.setPosition(21);
        boolean boolean85 = jump60.hasSideEffects();
        com.google.javascript.rhino.head.Node node86 = new com.google.javascript.rhino.head.Node(21, (com.google.javascript.rhino.head.Node) functionNode2, (com.google.javascript.rhino.head.Node) functionNode3, (com.google.javascript.rhino.head.Node) jump60);
        boolean boolean87 = functionNode2.isGenerator();
        functionNode2.setFunctionType((int) (byte) 100);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(scriptNode5);
        org.junit.Assert.assertNotNull(scriptNode9);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(scriptNode17);
        org.junit.Assert.assertNotNull(scriptNode21);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(scriptNode27);
        org.junit.Assert.assertNull(nodeList33);
        org.junit.Assert.assertNull(scope35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNotNull(scriptNode39);
        org.junit.Assert.assertNotNull(scriptNode43);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertNotNull(scriptNode52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertNull(functionNode54);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + (-1) + "'", int63 == (-1));
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + (-1) + "'", int64 == (-1));
        org.junit.Assert.assertNull(scopeList65);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + (-1) + "'", int69 == (-1));
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + (-1) + "'", int73 == (-1));
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + (-1) + "'", int79 == (-1));
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
    }

    @Test
    public void test10159() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10159");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode0 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = functionNode0.getTop();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode3 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int4 = functionNode3.getLp();
        functionNode3.setEncodedSource("");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode7 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int8 = functionNode7.getLp();
        functionNode7.setEncodedSource("");
        functionNode7.flattenSymbolTable(false);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode13 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int14 = functionNode13.getLp();
        com.google.javascript.rhino.head.Node node16 = new com.google.javascript.rhino.head.Node((-1), (com.google.javascript.rhino.head.Node) functionNode3, (com.google.javascript.rhino.head.Node) functionNode7, (com.google.javascript.rhino.head.Node) functionNode13, (int) '#');
        com.google.javascript.rhino.head.ast.AstNode astNode17 = functionNode3.getBody();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode18 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int19 = functionNode18.getLp();
        functionNode18.setEncodedSource("");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode22 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int23 = functionNode22.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode24 = functionNode22.getTop();
        com.google.javascript.rhino.head.ast.Name name25 = null;
        functionNode22.setFunctionName(name25);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode27 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode28 = functionNode27.getTop();
        functionNode22.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode27);
        int int30 = functionNode27.getRp();
        int int31 = functionNode27.getFunctionType();
        functionNode18.addParam((com.google.javascript.rhino.head.ast.AstNode) functionNode27);
        com.google.javascript.rhino.head.ast.Scope scope33 = functionNode27.getEnclosingScope();
        functionNode3.setBody((com.google.javascript.rhino.head.ast.AstNode) functionNode27);
        int int35 = functionNode0.addFunction(functionNode3);
        java.util.List<com.google.javascript.rhino.head.Node> nodeList36 = functionNode0.getResumptionPoints();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode37 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int38 = functionNode37.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode39 = functionNode37.getTop();
        com.google.javascript.rhino.head.ast.Name name40 = null;
        functionNode37.setFunctionName(name40);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode42 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode43 = functionNode42.getTop();
        functionNode37.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode42);
        functionNode42.setEncodedSourceStart(6);
        functionNode42.setRelative((-1));
        boolean boolean49 = functionNode0.isParam((com.google.javascript.rhino.head.ast.AstNode) functionNode42);
        com.google.javascript.rhino.head.ast.AstNode astNode50 = functionNode0.getMemberExprNode();
        // The following exception was thrown during execution in test generation
        try {
            astNode50.setString("                    /null/-1\tSCRIPT -1 1\n");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(scriptNode1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNull(astNode17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNotNull(scriptNode24);
        org.junit.Assert.assertNotNull(scriptNode28);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNotNull(scope33);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertNull(nodeList36);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNotNull(scriptNode39);
        org.junit.Assert.assertNotNull(scriptNode43);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNull(astNode50);
    }

    @Test
    public void test10160() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10160");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode2 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int3 = functionNode2.getLp();
        functionNode2.setEncodedSource("");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode6 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int7 = functionNode6.getLp();
        functionNode6.setEncodedSource("");
        functionNode6.flattenSymbolTable(false);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode12 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int13 = functionNode12.getLp();
        com.google.javascript.rhino.head.Node node15 = new com.google.javascript.rhino.head.Node((-1), (com.google.javascript.rhino.head.Node) functionNode2, (com.google.javascript.rhino.head.Node) functionNode6, (com.google.javascript.rhino.head.Node) functionNode12, (int) '#');
        com.google.javascript.rhino.head.ast.Comment comment16 = functionNode12.getJsDocNode();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode17 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.Scope scope19 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 10);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode20 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode21 = functionNode20.getTop();
        functionNode20.setParens((int) (byte) 1, (int) (short) 1);
        functionNode20.setEncodedSourceStart((-1));
        functionNode20.setFunctionIsGetter();
        scope19.addChildToFront((com.google.javascript.rhino.head.Node) functionNode20);
        functionNode17.setBody((com.google.javascript.rhino.head.ast.AstNode) functionNode20);
        boolean boolean30 = functionNode12.isParam((com.google.javascript.rhino.head.ast.AstNode) functionNode17);
        com.google.javascript.rhino.head.ast.Jump jump31 = new com.google.javascript.rhino.head.ast.Jump(8, (com.google.javascript.rhino.head.Node) functionNode12);
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator32 = jump31.new NodeIterator();
        java.lang.String str33 = jump31.toString();
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.ast.Jump jump34 = jump31.getLoop();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNull(comment16);
        org.junit.Assert.assertNotNull(scriptNode21);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "8" + "'", str33, "8");
    }

    @Test
    public void test10161() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10161");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode1 = new com.google.javascript.rhino.head.ast.FunctionNode(0);
        int int2 = functionNode1.getBaseLineno();
        boolean boolean3 = functionNode1.isGetter();
        com.google.javascript.rhino.head.ast.RegExpLiteral regExpLiteral5 = new com.google.javascript.rhino.head.ast.RegExpLiteral((int) (short) 1);
        regExpLiteral5.setFlags("-1\tSCRIPT -1 1\n");
        java.lang.String str8 = regExpLiteral5.getValue();
        regExpLiteral5.setFlags("52");
        functionNode1.addChildrenToFront((com.google.javascript.rhino.head.Node) regExpLiteral5);
        boolean boolean12 = functionNode1.isGetterOrSetter();
        int int13 = functionNode1.getRegexpCount();
        com.google.javascript.rhino.head.ast.RegExpLiteral regExpLiteral16 = new com.google.javascript.rhino.head.ast.RegExpLiteral(12, 10);
        functionNode1.addRegExp(regExpLiteral16);
        functionNode1.setRequiresActivation();
        com.google.javascript.rhino.head.Node node19 = functionNode1.getFirstChild();
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.ast.Scope scope20 = functionNode1.getScope();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: com.google.javascript.rhino.head.ast.FunctionNode cannot be cast to com.google.javascript.rhino.head.ast.Name");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(node19);
    }

    @Test
    public void test10162() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10162");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode0 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 10);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode3 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode4 = functionNode3.getTop();
        functionNode3.setParens((int) (byte) 1, (int) (short) 1);
        functionNode3.setEncodedSourceStart((-1));
        functionNode3.setFunctionIsGetter();
        scope2.addChildToFront((com.google.javascript.rhino.head.Node) functionNode3);
        functionNode0.setBody((com.google.javascript.rhino.head.ast.AstNode) functionNode3);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode13 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = functionNode13.getTop();
        functionNode13.setParens((int) (byte) 1, (int) (short) 1);
        functionNode13.setEncodedSourceStart((-1));
        java.util.List<com.google.javascript.rhino.head.Node> nodeList20 = functionNode13.getResumptionPoints();
        int int21 = functionNode13.getLp();
        functionNode0.setBody((com.google.javascript.rhino.head.ast.AstNode) functionNode13);
        com.google.javascript.rhino.head.Node node23 = functionNode13.getNext();
        com.google.javascript.rhino.head.ast.Scope scope25 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 10);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode26 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode27 = functionNode26.getTop();
        functionNode26.setParens((int) (byte) 1, (int) (short) 1);
        functionNode26.setEncodedSourceStart((-1));
        functionNode26.setFunctionIsGetter();
        scope25.addChildToFront((com.google.javascript.rhino.head.Node) functionNode26);
        functionNode26.setRp(19);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode38 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int39 = scriptNode38.getEndLineno();
        int int40 = scriptNode38.getBaseLineno();
        com.google.javascript.rhino.head.ast.Jump jump43 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode45 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int46 = scriptNode45.getEndLineno();
        int int47 = scriptNode45.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList48 = scriptNode45.getChildScopes();
        jump43.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode45);
        java.lang.String str50 = scriptNode45.debugPrint();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode38, (com.google.javascript.rhino.head.ast.Scope) scriptNode45);
        com.google.javascript.rhino.head.ast.Scope scope52 = new com.google.javascript.rhino.head.ast.Scope();
        scriptNode45.target = scope52;
        java.lang.String str54 = functionNode26.toStringTree(scriptNode45);
        java.lang.String str56 = scriptNode45.toSource((int) (short) 10);
        boolean boolean57 = functionNode13.isParam((com.google.javascript.rhino.head.ast.AstNode) scriptNode45);
        com.google.javascript.rhino.head.ast.AstRoot astRoot58 = scriptNode45.getAstRoot();
        // The following exception was thrown during execution in test generation
        try {
            int int59 = astRoot58.getPosition();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(scriptNode4);
        org.junit.Assert.assertNotNull(scriptNode14);
        org.junit.Assert.assertNull(nodeList20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertNull(node23);
        org.junit.Assert.assertNotNull(scriptNode27);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertNull(scopeList48);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str50, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "                    {\n                    }\n" + "'", str56, "                    {\n                    }\n");
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNull(astRoot58);
    }

    @Test
    public void test10163() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10163");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 10);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode2 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode3 = functionNode2.getTop();
        functionNode2.setParens((int) (byte) 1, (int) (short) 1);
        functionNode2.setEncodedSourceStart((-1));
        functionNode2.setFunctionIsGetter();
        scope1.addChildToFront((com.google.javascript.rhino.head.Node) functionNode2);
        functionNode2.setRp(19);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int15 = scriptNode14.getEndLineno();
        int int16 = scriptNode14.getBaseLineno();
        com.google.javascript.rhino.head.ast.Jump jump19 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode21 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int22 = scriptNode21.getEndLineno();
        int int23 = scriptNode21.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList24 = scriptNode21.getChildScopes();
        jump19.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode21);
        java.lang.String str26 = scriptNode21.debugPrint();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode14, (com.google.javascript.rhino.head.ast.Scope) scriptNode21);
        com.google.javascript.rhino.head.ast.Scope scope28 = new com.google.javascript.rhino.head.ast.Scope();
        scriptNode21.target = scope28;
        java.lang.String str30 = functionNode2.toStringTree(scriptNode21);
        java.lang.String str32 = scriptNode21.toSource((int) (short) 10);
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap33 = scriptNode21.getSymbolTable();
        int int34 = strMap33.size();
        com.google.javascript.rhino.head.ast.Jump jump39 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump39.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump43 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump39, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode45 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int46 = scriptNode45.getEndLineno();
        int int47 = scriptNode45.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList48 = scriptNode45.getChildScopes();
        com.google.javascript.rhino.head.Node node49 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump39, (com.google.javascript.rhino.head.Node) scriptNode45);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList50 = scriptNode45.getFunctions();
        functionNodeList50.clear();
        functionNodeList50.clear();
        com.google.javascript.rhino.head.ast.Jump jump57 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump57.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump61 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump57, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode63 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int64 = scriptNode63.getEndLineno();
        int int65 = scriptNode63.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList66 = scriptNode63.getChildScopes();
        com.google.javascript.rhino.head.Node node67 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump57, (com.google.javascript.rhino.head.Node) scriptNode63);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList68 = scriptNode63.getFunctions();
        java.util.Spliterator<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeSpliterator69 = functionNodeList68.spliterator();
        int int71 = functionNodeList68.indexOf((java.lang.Object) (byte) 10);
        boolean boolean72 = functionNodeList50.retainAll((java.util.Collection<com.google.javascript.rhino.head.ast.FunctionNode>) functionNodeList68);
        boolean boolean73 = strMap33.containsKey((java.lang.Object) functionNodeList50);
        boolean boolean74 = strMap33.isEmpty();
        com.google.javascript.rhino.head.ast.Symbol symbol75 = new com.google.javascript.rhino.head.ast.Symbol();
        java.lang.String str76 = symbol75.getName();
        symbol75.setIndex((int) '#');
        boolean boolean79 = strMap33.containsKey((java.lang.Object) symbol75);
        java.util.Set<java.util.Map.Entry<java.lang.String, com.google.javascript.rhino.head.ast.Symbol>> strEntrySet80 = strMap33.entrySet();
        com.google.javascript.rhino.head.ast.RegExpLiteral regExpLiteral83 = new com.google.javascript.rhino.head.ast.RegExpLiteral((-1), 3);
        java.lang.String str84 = regExpLiteral83.getFlags();
        java.lang.String str86 = regExpLiteral83.toSource(16);
        com.google.javascript.rhino.head.ast.Symbol symbol87 = new com.google.javascript.rhino.head.ast.Symbol();
        java.lang.String str88 = symbol87.getDeclTypeName();
        int int89 = symbol87.getDeclType();
        com.google.javascript.rhino.head.ast.Scope scope90 = symbol87.getContainingTable();
        java.lang.String str91 = symbol87.getDeclTypeName();
        com.google.javascript.rhino.head.ast.Symbol symbol92 = strMap33.getOrDefault((java.lang.Object) 16, symbol87);
        java.lang.Class<?> wildcardClass93 = symbol92.getClass();
        org.junit.Assert.assertNotNull(scriptNode3);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNull(scopeList24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str26, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "                    {\n                    }\n" + "'", str32, "                    {\n                    }\n");
        org.junit.Assert.assertNotNull(strMap33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertNull(scopeList48);
        org.junit.Assert.assertNotNull(functionNodeList50);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + (-1) + "'", int64 == (-1));
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + (-1) + "'", int65 == (-1));
        org.junit.Assert.assertNull(scopeList66);
        org.junit.Assert.assertNotNull(functionNodeList68);
        org.junit.Assert.assertNotNull(functionNodeSpliterator69);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + (-1) + "'", int71 == (-1));
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNull(str76);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(strEntrySet80);
        org.junit.Assert.assertNull(str84);
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "                                /null/" + "'", str86, "                                /null/");
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "EOF" + "'", str88, "EOF");
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + 0 + "'", int89 == 0);
        org.junit.Assert.assertNull(scope90);
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + "EOF" + "'", str91, "EOF");
        org.junit.Assert.assertNotNull(symbol92);
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test10164() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10164");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode1 = new com.google.javascript.rhino.head.ast.FunctionNode((-1262414679));
        com.google.javascript.rhino.head.Token.CommentType commentType6 = com.google.javascript.rhino.head.Token.CommentType.HTML;
        com.google.javascript.rhino.head.ast.Comment comment8 = new com.google.javascript.rhino.head.ast.Comment(20, 1, commentType6, "109");
        java.lang.String str10 = comment8.toSource(19);
        java.lang.String str11 = comment8.getValue();
        com.google.javascript.rhino.head.Token.CommentType commentType12 = com.google.javascript.rhino.head.Token.CommentType.HTML;
        comment8.setCommentType(commentType12);
        com.google.javascript.rhino.head.ast.Comment comment15 = new com.google.javascript.rhino.head.ast.Comment(9, 6, commentType12, "                    ");
        functionNode1.setJsDocNode(comment15);
        com.google.javascript.rhino.head.Node node17 = comment15.getLastChild();
        java.lang.String str18 = comment15.getValue();
        java.lang.String str20 = comment15.toSource(13);
        comment15.setLineno((-148907469));
        org.junit.Assert.assertTrue("'" + commentType6 + "' != '" + com.google.javascript.rhino.head.Token.CommentType.HTML + "'", commentType6.equals(com.google.javascript.rhino.head.Token.CommentType.HTML));
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "                                      109" + "'", str10, "                                      109");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "109" + "'", str11, "109");
        org.junit.Assert.assertTrue("'" + commentType12 + "' != '" + com.google.javascript.rhino.head.Token.CommentType.HTML + "'", commentType12.equals(com.google.javascript.rhino.head.Token.CommentType.HTML));
        org.junit.Assert.assertNull(node17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "                    " + "'", str18, "                    ");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "                                              " + "'", str20, "                                              ");
    }

    @Test
    public void test10165() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10165");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode0 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int1 = functionNode0.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = functionNode0.getTop();
        com.google.javascript.rhino.head.ast.Name name3 = null;
        functionNode0.setFunctionName(name3);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode5 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = functionNode5.getTop();
        functionNode0.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode5);
        int int8 = functionNode5.getRp();
        int int9 = functionNode5.getFunctionType();
        boolean boolean10 = functionNode5.requiresActivation();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList11 = functionNode5.getChildScopes();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode13 = new com.google.javascript.rhino.head.ast.FunctionNode(26);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode15 = new com.google.javascript.rhino.head.ast.FunctionNode(5);
        int int16 = functionNode13.compareTo((com.google.javascript.rhino.head.ast.AstNode) functionNode15);
        functionNode13.setLp((int) (short) -1);
        functionNode5.addChildScope((com.google.javascript.rhino.head.ast.Scope) functionNode13);
        int int20 = functionNode5.getRegexpCount();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-1) + "'", int1 == (-1));
        org.junit.Assert.assertNotNull(scriptNode2);
        org.junit.Assert.assertNotNull(scriptNode6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(scopeList11);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
    }

    @Test
    public void test10166() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10166");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 10);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode2 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode3 = functionNode2.getTop();
        functionNode2.setParens((int) (byte) 1, (int) (short) 1);
        functionNode2.setEncodedSourceStart((-1));
        functionNode2.setFunctionIsGetter();
        scope1.addChildToFront((com.google.javascript.rhino.head.Node) functionNode2);
        functionNode2.setRp(19);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int15 = scriptNode14.getEndLineno();
        int int16 = scriptNode14.getBaseLineno();
        com.google.javascript.rhino.head.ast.Jump jump19 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode21 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int22 = scriptNode21.getEndLineno();
        int int23 = scriptNode21.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList24 = scriptNode21.getChildScopes();
        jump19.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode21);
        java.lang.String str26 = scriptNode21.debugPrint();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode14, (com.google.javascript.rhino.head.ast.Scope) scriptNode21);
        com.google.javascript.rhino.head.ast.Scope scope28 = new com.google.javascript.rhino.head.ast.Scope();
        scriptNode21.target = scope28;
        java.lang.String str30 = functionNode2.toStringTree(scriptNode21);
        java.lang.String str32 = scriptNode21.toSource((int) (short) 10);
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap33 = scriptNode21.getSymbolTable();
        int int34 = strMap33.size();
        com.google.javascript.rhino.head.ast.Scope scope36 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 10);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode37 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode38 = functionNode37.getTop();
        functionNode37.setParens((int) (byte) 1, (int) (short) 1);
        functionNode37.setEncodedSourceStart((-1));
        functionNode37.setFunctionIsGetter();
        scope36.addChildToFront((com.google.javascript.rhino.head.Node) functionNode37);
        functionNode37.setRp(19);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode49 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int50 = scriptNode49.getEndLineno();
        int int51 = scriptNode49.getBaseLineno();
        com.google.javascript.rhino.head.ast.Jump jump54 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode56 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int57 = scriptNode56.getEndLineno();
        int int58 = scriptNode56.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList59 = scriptNode56.getChildScopes();
        jump54.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode56);
        java.lang.String str61 = scriptNode56.debugPrint();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode49, (com.google.javascript.rhino.head.ast.Scope) scriptNode56);
        com.google.javascript.rhino.head.ast.Scope scope63 = new com.google.javascript.rhino.head.ast.Scope();
        scriptNode56.target = scope63;
        java.lang.String str65 = functionNode37.toStringTree(scriptNode56);
        java.lang.String str67 = scriptNode56.toSource((int) (short) 10);
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap68 = scriptNode56.getSymbolTable();
        strMap33.putAll(strMap68);
        com.google.javascript.rhino.head.ast.Symbol symbol71 = new com.google.javascript.rhino.head.ast.Symbol();
        java.lang.String str72 = symbol71.getName();
        com.google.javascript.rhino.head.Node node73 = symbol71.getNode();
        symbol71.setIndex(1);
        symbol71.setName("-1\tSCRIPT -1 1\n");
        com.google.javascript.rhino.head.ast.Symbol symbol78 = strMap68.put("$1", symbol71);
        com.google.javascript.rhino.head.ast.Symbol symbol79 = new com.google.javascript.rhino.head.ast.Symbol();
        com.google.javascript.rhino.head.ast.Jump jump84 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump84.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump88 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump84, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode90 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int91 = scriptNode90.getEndLineno();
        int int92 = scriptNode90.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList93 = scriptNode90.getChildScopes();
        com.google.javascript.rhino.head.Node node94 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump84, (com.google.javascript.rhino.head.Node) scriptNode90);
        symbol79.setContainingTable((com.google.javascript.rhino.head.ast.Scope) scriptNode90);
        java.lang.String str96 = symbol79.toString();
        int int97 = symbol79.getDeclType();
        com.google.javascript.rhino.head.ast.Symbol symbol98 = strMap68.get((java.lang.Object) symbol79);
        int int99 = strMap68.size();
        org.junit.Assert.assertNotNull(scriptNode3);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNull(scopeList24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str26, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "                    {\n                    }\n" + "'", str32, "                    {\n                    }\n");
        org.junit.Assert.assertNotNull(strMap33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertNotNull(scriptNode38);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1));
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + (-1) + "'", int58 == (-1));
        org.junit.Assert.assertNull(scopeList59);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str61, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertNull(str65);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "                    {\n                    }\n" + "'", str67, "                    {\n                    }\n");
        org.junit.Assert.assertNotNull(strMap68);
        org.junit.Assert.assertNull(str72);
        org.junit.Assert.assertNull(node73);
        org.junit.Assert.assertNull(symbol78);
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + (-1) + "'", int91 == (-1));
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + (-1) + "'", int92 == (-1));
        org.junit.Assert.assertNull(scopeList93);
        org.junit.Assert.assertEquals("'" + str96 + "' != '" + "Symbol (EOF) name=null" + "'", str96, "Symbol (EOF) name=null");
        org.junit.Assert.assertTrue("'" + int97 + "' != '" + 0 + "'", int97 == 0);
        org.junit.Assert.assertNull(symbol98);
        org.junit.Assert.assertTrue("'" + int99 + "' != '" + 1 + "'", int99 == 1);
    }

    @Test
    public void test10167() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10167");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode0 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int1 = functionNode0.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = functionNode0.getTop();
        boolean boolean3 = functionNode0.hasSideEffects();
        java.lang.String str4 = functionNode0.toString();
        functionNode0.setParens((int) (short) 10, 8);
        functionNode0.setRequiresActivation();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList9 = functionNode0.getChildScopes();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-1) + "'", int1 == (-1));
        org.junit.Assert.assertNotNull(scriptNode2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "109" + "'", str4, "109");
        org.junit.Assert.assertNull(scopeList9);
    }

    @Test
    public void test10168() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10168");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode0 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int1 = functionNode0.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = functionNode0.getTop();
        com.google.javascript.rhino.head.ast.Name name3 = null;
        functionNode0.setFunctionName(name3);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode5 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = functionNode5.getTop();
        functionNode0.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode5);
        int int8 = functionNode5.getRp();
        int int9 = functionNode5.getFunctionType();
        boolean boolean10 = functionNode5.requiresActivation();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList11 = functionNode5.getChildScopes();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode13 = new com.google.javascript.rhino.head.ast.FunctionNode(26);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode15 = new com.google.javascript.rhino.head.ast.FunctionNode(5);
        int int16 = functionNode13.compareTo((com.google.javascript.rhino.head.ast.AstNode) functionNode15);
        functionNode13.setLp((int) (short) -1);
        functionNode5.addChildScope((com.google.javascript.rhino.head.ast.Scope) functionNode13);
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor20 = null;
        // The following exception was thrown during execution in test generation
        try {
            functionNode5.visit(nodeVisitor20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-1) + "'", int1 == (-1));
        org.junit.Assert.assertNotNull(scriptNode2);
        org.junit.Assert.assertNotNull(scriptNode6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(scopeList11);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
    }

    @Test
    public void test10169() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10169");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode0 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int1 = functionNode0.getLp();
        functionNode0.setEncodedSource("");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode4 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int5 = functionNode4.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = functionNode4.getTop();
        com.google.javascript.rhino.head.ast.Name name7 = null;
        functionNode4.setFunctionName(name7);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode9 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = functionNode9.getTop();
        functionNode4.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode9);
        int int12 = functionNode9.getRp();
        int int13 = functionNode9.getFunctionType();
        functionNode0.addParam((com.google.javascript.rhino.head.ast.AstNode) functionNode9);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode15 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int16 = functionNode15.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode17 = functionNode15.getTop();
        com.google.javascript.rhino.head.Node node18 = functionNode15.getLastSibling();
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList19 = functionNode15.getParams();
        functionNode0.setParams(astNodeList19);
        functionNode0.setIsExpressionClosure(true);
        functionNode0.setEncodedSourceStart(7);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode25 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int26 = functionNode25.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode27 = functionNode25.getTop();
        com.google.javascript.rhino.head.ast.Name name28 = null;
        functionNode25.setFunctionName(name28);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode30 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode31 = functionNode30.getTop();
        functionNode25.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode30);
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList33 = functionNode25.getParams();
        functionNode25.setRequiresActivation();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode35 = new com.google.javascript.rhino.head.ast.ScriptNode();
        int int36 = scriptNode35.getEncodedSourceEnd();
        functionNode25.addResumptionPoint((com.google.javascript.rhino.head.Node) scriptNode35);
        functionNode0.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode35);
        com.google.javascript.rhino.head.ast.Name name39 = null;
        functionNode0.setFunctionName(name39);
        boolean boolean41 = functionNode0.hasSideEffects();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-1) + "'", int1 == (-1));
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(scriptNode6);
        org.junit.Assert.assertNotNull(scriptNode10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(scriptNode17);
        org.junit.Assert.assertNotNull(node18);
        org.junit.Assert.assertNotNull(astNodeList19);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNotNull(scriptNode27);
        org.junit.Assert.assertNotNull(scriptNode31);
        org.junit.Assert.assertNotNull(astNodeList33);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
    }

    @Test
    public void test10170() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10170");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 10);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode2 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode3 = functionNode2.getTop();
        functionNode2.setParens((int) (byte) 1, (int) (short) 1);
        functionNode2.setEncodedSourceStart((-1));
        functionNode2.setFunctionIsGetter();
        scope1.addChildToFront((com.google.javascript.rhino.head.Node) functionNode2);
        functionNode2.setRp(19);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int15 = scriptNode14.getEndLineno();
        int int16 = scriptNode14.getBaseLineno();
        com.google.javascript.rhino.head.ast.Jump jump19 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode21 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int22 = scriptNode21.getEndLineno();
        int int23 = scriptNode21.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList24 = scriptNode21.getChildScopes();
        jump19.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode21);
        java.lang.String str26 = scriptNode21.debugPrint();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode14, (com.google.javascript.rhino.head.ast.Scope) scriptNode21);
        com.google.javascript.rhino.head.ast.Scope scope28 = new com.google.javascript.rhino.head.ast.Scope();
        scriptNode21.target = scope28;
        java.lang.String str30 = functionNode2.toStringTree(scriptNode21);
        java.lang.String str32 = scriptNode21.toSource((int) (short) 10);
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap33 = scriptNode21.getSymbolTable();
        int int34 = strMap33.size();
        com.google.javascript.rhino.head.ast.Jump jump39 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump39.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump43 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump39, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode45 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int46 = scriptNode45.getEndLineno();
        int int47 = scriptNode45.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList48 = scriptNode45.getChildScopes();
        com.google.javascript.rhino.head.Node node49 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump39, (com.google.javascript.rhino.head.Node) scriptNode45);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList50 = scriptNode45.getFunctions();
        functionNodeList50.clear();
        functionNodeList50.clear();
        com.google.javascript.rhino.head.ast.Jump jump57 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump57.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump61 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump57, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode63 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int64 = scriptNode63.getEndLineno();
        int int65 = scriptNode63.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList66 = scriptNode63.getChildScopes();
        com.google.javascript.rhino.head.Node node67 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump57, (com.google.javascript.rhino.head.Node) scriptNode63);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList68 = scriptNode63.getFunctions();
        java.util.Spliterator<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeSpliterator69 = functionNodeList68.spliterator();
        int int71 = functionNodeList68.indexOf((java.lang.Object) (byte) 10);
        boolean boolean72 = functionNodeList50.retainAll((java.util.Collection<com.google.javascript.rhino.head.ast.FunctionNode>) functionNodeList68);
        boolean boolean73 = strMap33.containsKey((java.lang.Object) functionNodeList50);
        boolean boolean75 = strMap33.containsKey((java.lang.Object) 1579347477);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode76 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int77 = functionNode76.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode79 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        java.lang.String str80 = functionNode76.toStringTree(scriptNode79);
        functionNode76.setFunctionIsGetter();
        com.google.javascript.rhino.head.ast.AstNode astNode82 = functionNode76.getBody();
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList83 = functionNode76.getParams();
        boolean boolean84 = strMap33.containsKey((java.lang.Object) astNodeList83);
        com.google.javascript.rhino.head.ast.Symbol symbol86 = new com.google.javascript.rhino.head.ast.Symbol();
        java.lang.String str87 = symbol86.getDeclTypeName();
        com.google.javascript.rhino.head.ast.Scope scope88 = symbol86.getContainingTable();
        symbol86.setIndex(21);
        com.google.javascript.rhino.head.ast.Symbol symbol91 = strMap33.putIfAbsent("hi!", symbol86);
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.Node node92 = symbol91.getNode();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(scriptNode3);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNull(scopeList24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str26, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "                    {\n                    }\n" + "'", str32, "                    {\n                    }\n");
        org.junit.Assert.assertNotNull(strMap33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertNull(scopeList48);
        org.junit.Assert.assertNotNull(functionNodeList50);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + (-1) + "'", int64 == (-1));
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + (-1) + "'", int65 == (-1));
        org.junit.Assert.assertNull(scopeList66);
        org.junit.Assert.assertNotNull(functionNodeList68);
        org.junit.Assert.assertNotNull(functionNodeSpliterator69);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + (-1) + "'", int71 == (-1));
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + (-1) + "'", int77 == (-1));
        org.junit.Assert.assertNull(str80);
        org.junit.Assert.assertNull(astNode82);
        org.junit.Assert.assertNotNull(astNodeList83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "EOF" + "'", str87, "EOF");
        org.junit.Assert.assertNull(scope88);
        org.junit.Assert.assertNull(symbol91);
    }

    @Test
    public void test10171() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10171");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode0 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int1 = functionNode0.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = functionNode0.getTop();
        com.google.javascript.rhino.head.ast.Name name3 = null;
        functionNode0.setFunctionName(name3);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode5 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = functionNode5.getTop();
        functionNode0.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode5);
        int int8 = functionNode5.getRp();
        java.lang.String str9 = functionNode5.getSourceName();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode10 = functionNode5.getEnclosingFunction();
        functionNode5.removeChildren();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode12 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int13 = functionNode12.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode15 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        java.lang.String str16 = functionNode12.toStringTree(scriptNode15);
        functionNode12.setFunctionIsGetter();
        com.google.javascript.rhino.head.ast.AstNode astNode18 = functionNode12.getBody();
        functionNode12.setParens(21, (int) '#');
        int int22 = functionNode12.getLineno();
        functionNode12.setRp(9);
        int int25 = functionNode5.compareTo((com.google.javascript.rhino.head.ast.AstNode) functionNode12);
        functionNode12.setEncodedSource("/null/EOF");
        com.google.javascript.rhino.head.ast.Scope scope28 = functionNode12.getEnclosingScope();
        functionNode12.setIsExpressionClosure(false);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-1) + "'", int1 == (-1));
        org.junit.Assert.assertNotNull(scriptNode2);
        org.junit.Assert.assertNotNull(scriptNode6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(functionNode10);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNull(astNode18);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
// flaky:         org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-420950032) + "'", int25 == (-420950032));
        org.junit.Assert.assertNull(scope28);
    }

    @Test
    public void test10172() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10172");
        com.google.javascript.rhino.head.Token.CommentType commentType6 = com.google.javascript.rhino.head.Token.CommentType.HTML;
        com.google.javascript.rhino.head.ast.Comment comment8 = new com.google.javascript.rhino.head.ast.Comment(20, 1, commentType6, "109");
        com.google.javascript.rhino.head.ast.Comment comment10 = new com.google.javascript.rhino.head.ast.Comment(11, 35, commentType6, "                    109");
        com.google.javascript.rhino.head.Token.CommentType commentType11 = comment10.getCommentType();
        com.google.javascript.rhino.head.ast.Comment comment13 = new com.google.javascript.rhino.head.ast.Comment(100, (int) (byte) 10, commentType11, "      109");
        com.google.javascript.rhino.head.Token.CommentType commentType16 = com.google.javascript.rhino.head.Token.CommentType.HTML;
        com.google.javascript.rhino.head.ast.Comment comment18 = new com.google.javascript.rhino.head.ast.Comment(20, 1, commentType16, "109");
        java.lang.String str20 = comment18.toSource(19);
        java.lang.String str21 = comment18.getValue();
        com.google.javascript.rhino.head.Token.CommentType commentType22 = com.google.javascript.rhino.head.Token.CommentType.HTML;
        comment18.setCommentType(commentType22);
        com.google.javascript.rhino.head.Token.CommentType commentType30 = com.google.javascript.rhino.head.Token.CommentType.HTML;
        com.google.javascript.rhino.head.ast.Comment comment32 = new com.google.javascript.rhino.head.ast.Comment(20, 1, commentType30, "109");
        com.google.javascript.rhino.head.ast.Comment comment34 = new com.google.javascript.rhino.head.ast.Comment(136, 15, commentType30, "-1\tSCRIPT -1 1\n");
        com.google.javascript.rhino.head.Token.CommentType commentType35 = com.google.javascript.rhino.head.Token.CommentType.JSDOC;
        comment34.setCommentType(commentType35);
        com.google.javascript.rhino.head.Token.CommentType commentType37 = com.google.javascript.rhino.head.Token.CommentType.JSDOC;
        comment34.setCommentType(commentType37);
        com.google.javascript.rhino.head.ast.Comment comment40 = new com.google.javascript.rhino.head.ast.Comment((-1), 20, commentType37, "ScriptNode");
        comment18.setCommentType(commentType37);
        comment13.setCommentType(commentType37);
        java.lang.String str43 = comment13.getValue();
        org.junit.Assert.assertTrue("'" + commentType6 + "' != '" + com.google.javascript.rhino.head.Token.CommentType.HTML + "'", commentType6.equals(com.google.javascript.rhino.head.Token.CommentType.HTML));
        org.junit.Assert.assertTrue("'" + commentType11 + "' != '" + com.google.javascript.rhino.head.Token.CommentType.HTML + "'", commentType11.equals(com.google.javascript.rhino.head.Token.CommentType.HTML));
        org.junit.Assert.assertTrue("'" + commentType16 + "' != '" + com.google.javascript.rhino.head.Token.CommentType.HTML + "'", commentType16.equals(com.google.javascript.rhino.head.Token.CommentType.HTML));
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "                                      109" + "'", str20, "                                      109");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "109" + "'", str21, "109");
        org.junit.Assert.assertTrue("'" + commentType22 + "' != '" + com.google.javascript.rhino.head.Token.CommentType.HTML + "'", commentType22.equals(com.google.javascript.rhino.head.Token.CommentType.HTML));
        org.junit.Assert.assertTrue("'" + commentType30 + "' != '" + com.google.javascript.rhino.head.Token.CommentType.HTML + "'", commentType30.equals(com.google.javascript.rhino.head.Token.CommentType.HTML));
        org.junit.Assert.assertTrue("'" + commentType35 + "' != '" + com.google.javascript.rhino.head.Token.CommentType.JSDOC + "'", commentType35.equals(com.google.javascript.rhino.head.Token.CommentType.JSDOC));
        org.junit.Assert.assertTrue("'" + commentType37 + "' != '" + com.google.javascript.rhino.head.Token.CommentType.JSDOC + "'", commentType37.equals(com.google.javascript.rhino.head.Token.CommentType.JSDOC));
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "      109" + "'", str43, "      109");
    }

    @Test
    public void test10173() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10173");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode0 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int1 = functionNode0.getLp();
        functionNode0.setEncodedSource("");
        com.google.javascript.rhino.head.Node node4 = functionNode0.getLastChild();
        boolean boolean5 = functionNode0.isSetter();
        com.google.javascript.rhino.head.ast.AstNode astNode6 = functionNode0.getMemberExprNode();
        com.google.javascript.rhino.head.ast.Scope scope8 = functionNode0.getDefiningScope("                          /null/");
        int int9 = functionNode0.getEncodedSourceStart();
        int int10 = functionNode0.getLp();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-1) + "'", int1 == (-1));
        org.junit.Assert.assertNull(node4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(astNode6);
        org.junit.Assert.assertNull(scope8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
    }

    @Test
    public void test10174() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10174");
        com.google.javascript.rhino.head.ast.Name name1 = null;
        com.google.javascript.rhino.head.ast.FunctionNode functionNode2 = new com.google.javascript.rhino.head.ast.FunctionNode(350469479, name1);
        com.google.javascript.rhino.head.ast.Jump jump5 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode7 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int8 = scriptNode7.getEndLineno();
        int int9 = scriptNode7.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList10 = scriptNode7.getChildScopes();
        jump5.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode7);
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor12 = scriptNode7.iterator();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode13 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int14 = functionNode13.getLp();
        functionNode13.setEncodedSource("");
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode7, (com.google.javascript.rhino.head.ast.Scope) functionNode13);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode18 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode19 = functionNode18.getTop();
        functionNode18.setParens((int) (byte) 1, (int) (short) 1);
        functionNode18.setEncodedSourceStart((-1));
        java.util.List<com.google.javascript.rhino.head.Node> nodeList25 = functionNode18.getResumptionPoints();
        com.google.javascript.rhino.head.ast.Scope scope27 = functionNode18.getDefiningScope("hi!");
        boolean boolean28 = functionNode18.isGetterOrSetter();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode29 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int30 = functionNode29.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode31 = functionNode29.getTop();
        com.google.javascript.rhino.head.ast.Name name32 = null;
        functionNode29.setFunctionName(name32);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode34 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode35 = functionNode34.getTop();
        functionNode29.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode34);
        int int37 = functionNode34.getRp();
        int int38 = functionNode34.getFunctionType();
        int int39 = functionNode18.addFunction(functionNode34);
        functionNode13.setCompilerData((java.lang.Object) functionNode34);
        functionNode13.setFunctionType(136);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode44 = new com.google.javascript.rhino.head.ast.FunctionNode(0);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode45 = functionNode44.getEnclosingFunction();
        com.google.javascript.rhino.head.Node node46 = functionNode44.target;
        functionNode44.setLineno((int) (byte) -1);
        functionNode13.setMemberExprNode((com.google.javascript.rhino.head.ast.AstNode) functionNode44);
        functionNode2.addParam((com.google.javascript.rhino.head.ast.AstNode) functionNode44);
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList51 = functionNode44.getStatements();
        java.lang.Object obj52 = functionNode44.getCompilerData();
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNull(scopeList10);
        org.junit.Assert.assertNotNull(nodeItor12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNotNull(scriptNode19);
        org.junit.Assert.assertNull(nodeList25);
        org.junit.Assert.assertNull(scope27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertNotNull(scriptNode31);
        org.junit.Assert.assertNotNull(scriptNode35);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNull(functionNode45);
        org.junit.Assert.assertNull(node46);
        org.junit.Assert.assertNotNull(astNodeList51);
        org.junit.Assert.assertNull(obj52);
    }

    @Test
    public void test10175() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10175");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode0 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int1 = functionNode0.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = functionNode0.getTop();
        com.google.javascript.rhino.head.ast.Name name3 = null;
        functionNode0.setFunctionName(name3);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode5 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = functionNode5.getTop();
        functionNode0.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode5);
        com.google.javascript.rhino.head.ast.Scope scope10 = new com.google.javascript.rhino.head.ast.Scope((int) (short) -1, 0);
        functionNode0.replaceWith(scope10);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode12 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int13 = functionNode12.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = functionNode12.getTop();
        com.google.javascript.rhino.head.ast.Name name15 = null;
        functionNode12.setFunctionName(name15);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode17 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode18 = functionNode17.getTop();
        functionNode12.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode17);
        int int20 = functionNode0.addFunction(functionNode12);
        int int21 = functionNode12.getLineno();
        int int22 = functionNode12.getFunctionType();
        functionNode12.setRp(7);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode25 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int26 = functionNode25.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode27 = functionNode25.getTop();
        com.google.javascript.rhino.head.Node node28 = functionNode25.getLastSibling();
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList29 = functionNode25.getParams();
        int int30 = functionNode25.getType();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator31 = functionNode25.new NodeIterator();
        functionNode12.addResumptionPoint((com.google.javascript.rhino.head.Node) functionNode25);
        java.lang.String str33 = functionNode12.getSourceName();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode34 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.AstNode astNode35 = functionNode34.getParent();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode36 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode37 = functionNode36.getTop();
        functionNode36.setParens((int) (byte) 1, (int) (short) 1);
        functionNode36.setEncodedSourceStart((-1));
        java.util.List<com.google.javascript.rhino.head.Node> nodeList43 = functionNode36.getResumptionPoints();
        com.google.javascript.rhino.head.ast.Scope scope45 = functionNode36.getDefiningScope("hi!");
        boolean boolean46 = functionNode36.isGetterOrSetter();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode47 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int48 = functionNode47.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode49 = functionNode47.getTop();
        com.google.javascript.rhino.head.ast.Name name50 = null;
        functionNode47.setFunctionName(name50);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode52 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode53 = functionNode52.getTop();
        functionNode47.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode52);
        int int55 = functionNode52.getRp();
        int int56 = functionNode52.getFunctionType();
        int int57 = functionNode36.addFunction(functionNode52);
        functionNode34.setTop((com.google.javascript.rhino.head.ast.ScriptNode) functionNode52);
        functionNode12.target = functionNode34;
        functionNode34.setRequiresActivation();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode61 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode62 = functionNode61.getTop();
        functionNode61.setParens((int) (byte) 1, (int) (short) 1);
        functionNode61.setEncodedSourceStart((-1));
        java.util.List<com.google.javascript.rhino.head.Node> nodeList68 = functionNode61.getResumptionPoints();
        com.google.javascript.rhino.head.ast.Scope scope70 = functionNode61.getDefiningScope("hi!");
        boolean boolean71 = functionNode61.isGetterOrSetter();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode72 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int73 = functionNode72.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode74 = functionNode72.getTop();
        com.google.javascript.rhino.head.ast.Name name75 = null;
        functionNode72.setFunctionName(name75);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode77 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode78 = functionNode77.getTop();
        functionNode72.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode77);
        int int80 = functionNode77.getRp();
        int int81 = functionNode77.getFunctionType();
        int int82 = functionNode61.addFunction(functionNode77);
        functionNode61.setFunctionIsGetter();
        functionNode34.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode61);
        // The following exception was thrown during execution in test generation
        try {
            int int85 = functionNode61.labelId();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-1) + "'", int1 == (-1));
        org.junit.Assert.assertNotNull(scriptNode2);
        org.junit.Assert.assertNotNull(scriptNode6);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(scriptNode14);
        org.junit.Assert.assertNotNull(scriptNode18);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNotNull(scriptNode27);
        org.junit.Assert.assertNotNull(node28);
        org.junit.Assert.assertNotNull(astNodeList29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 109 + "'", int30 == 109);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNull(astNode35);
        org.junit.Assert.assertNotNull(scriptNode37);
        org.junit.Assert.assertNull(nodeList43);
        org.junit.Assert.assertNull(scope45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
        org.junit.Assert.assertNotNull(scriptNode49);
        org.junit.Assert.assertNotNull(scriptNode53);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1));
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 0 + "'", int57 == 0);
        org.junit.Assert.assertNotNull(scriptNode62);
        org.junit.Assert.assertNull(nodeList68);
        org.junit.Assert.assertNull(scope70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + (-1) + "'", int73 == (-1));
        org.junit.Assert.assertNotNull(scriptNode74);
        org.junit.Assert.assertNotNull(scriptNode78);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + (-1) + "'", int80 == (-1));
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 0 + "'", int81 == 0);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 0 + "'", int82 == 0);
    }

    @Test
    public void test10176() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10176");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 10);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode2 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode3 = functionNode2.getTop();
        functionNode2.setParens((int) (byte) 1, (int) (short) 1);
        functionNode2.setEncodedSourceStart((-1));
        functionNode2.setFunctionIsGetter();
        scope1.addChildToFront((com.google.javascript.rhino.head.Node) functionNode2);
        functionNode2.setRp(19);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int15 = scriptNode14.getEndLineno();
        int int16 = scriptNode14.getBaseLineno();
        com.google.javascript.rhino.head.ast.Jump jump19 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode21 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int22 = scriptNode21.getEndLineno();
        int int23 = scriptNode21.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList24 = scriptNode21.getChildScopes();
        jump19.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode21);
        java.lang.String str26 = scriptNode21.debugPrint();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode14, (com.google.javascript.rhino.head.ast.Scope) scriptNode21);
        com.google.javascript.rhino.head.ast.Scope scope28 = new com.google.javascript.rhino.head.ast.Scope();
        scriptNode21.target = scope28;
        java.lang.String str30 = functionNode2.toStringTree(scriptNode21);
        java.lang.String str32 = scriptNode21.toSource((int) (short) 10);
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap33 = scriptNode21.getSymbolTable();
        int int34 = strMap33.size();
        java.lang.Object obj35 = null;
        java.lang.Object obj36 = null;
        boolean boolean37 = strMap33.remove(obj35, obj36);
        com.google.javascript.rhino.head.ast.Symbol symbol39 = new com.google.javascript.rhino.head.ast.Symbol();
        java.lang.String str40 = symbol39.getDeclTypeName();
        int int41 = symbol39.getDeclType();
        com.google.javascript.rhino.head.ast.Symbol symbol42 = strMap33.putIfAbsent("                    /null/-1\tSCRIPT -1 1\n", symbol39);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode43 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int44 = functionNode43.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode45 = functionNode43.getTop();
        boolean boolean46 = functionNode43.hasSideEffects();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList47 = functionNode43.getSymbols();
        functionNode43.setRp(5);
        com.google.javascript.rhino.head.ast.Scope scope50 = functionNode43.getEnclosingScope();
        boolean boolean51 = functionNode43.isExpressionClosure();
        functionNode43.setEncodedSourceStart(7);
        boolean boolean54 = strMap33.containsKey((java.lang.Object) functionNode43);
        java.util.Set<java.util.Map.Entry<java.lang.String, com.google.javascript.rhino.head.ast.Symbol>> strEntrySet55 = strMap33.entrySet();
        java.util.Collection<com.google.javascript.rhino.head.ast.Symbol> symbolCollection56 = strMap33.values();
        boolean boolean57 = strMap33.isEmpty();
        org.junit.Assert.assertNotNull(scriptNode3);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNull(scopeList24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str26, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "                    {\n                    }\n" + "'", str32, "                    {\n                    }\n");
        org.junit.Assert.assertNotNull(strMap33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "EOF" + "'", str40, "EOF");
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertNull(symbol42);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertNotNull(scriptNode45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(symbolList47);
        org.junit.Assert.assertNull(scope50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(strEntrySet55);
        org.junit.Assert.assertNotNull(symbolCollection56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
    }

    @Test
    public void test10177() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10177");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode1 = new com.google.javascript.rhino.head.ast.FunctionNode(0);
        int int2 = functionNode1.getBaseLineno();
        functionNode1.setSourceName("                                                                                                                                                                                                        /null/");
        int int5 = functionNode1.getRegexpCount();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode6 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode7 = functionNode6.getTop();
        functionNode6.setParens((int) (byte) 1, (int) (short) 1);
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor11 = functionNode6.iterator();
        functionNode6.setLp(136);
        int int14 = functionNode6.getFunctionType();
        functionNode6.setFunctionIsGetter();
        boolean boolean16 = functionNode6.hasConsistentReturnUsage();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) functionNode1, (com.google.javascript.rhino.head.ast.Scope) functionNode6);
        boolean boolean18 = functionNode6.isGetter();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(scriptNode7);
        org.junit.Assert.assertNotNull(nodeItor11);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
    }

    @Test
    public void test10178() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10178");
        com.google.javascript.rhino.head.ast.RegExpLiteral regExpLiteral2 = new com.google.javascript.rhino.head.ast.RegExpLiteral(6, 26);
        java.lang.String str4 = regExpLiteral2.toSource(22);
        com.google.javascript.rhino.head.Token.CommentType commentType10 = com.google.javascript.rhino.head.Token.CommentType.HTML;
        com.google.javascript.rhino.head.ast.Comment comment12 = new com.google.javascript.rhino.head.ast.Comment(20, 1, commentType10, "109");
        java.lang.String str14 = comment12.toSource(19);
        java.lang.String str15 = comment12.getValue();
        java.lang.String str16 = comment12.getValue();
        com.google.javascript.rhino.head.Token.CommentType commentType17 = com.google.javascript.rhino.head.Token.CommentType.LINE;
        comment12.setCommentType(commentType17);
        com.google.javascript.rhino.head.ast.Comment comment20 = new com.google.javascript.rhino.head.ast.Comment(1, 1, commentType17, "                    /null/");
        java.lang.String str21 = comment20.getValue();
        java.lang.String str23 = comment20.toSource(8);
        com.google.javascript.rhino.head.ast.Jump jump25 = new com.google.javascript.rhino.head.ast.Jump((int) (byte) 100, (com.google.javascript.rhino.head.Node) comment20, (int) (short) 10);
        java.lang.String str26 = comment20.getValue();
        java.lang.String str27 = comment20.getValue();
        com.google.javascript.rhino.head.Node node29 = comment20.setType(0);
        com.google.javascript.rhino.head.Token.CommentType commentType30 = comment20.getCommentType();
        regExpLiteral2.addChild((com.google.javascript.rhino.head.ast.AstNode) comment20);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode32 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int33 = functionNode32.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode34 = functionNode32.getTop();
        com.google.javascript.rhino.head.ast.AstNode astNode35 = functionNode32.getBody();
        com.google.javascript.rhino.head.ast.Jump jump41 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump41.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump45 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump41, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode47 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int48 = scriptNode47.getEndLineno();
        int int49 = scriptNode47.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList50 = scriptNode47.getChildScopes();
        com.google.javascript.rhino.head.Node node51 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump41, (com.google.javascript.rhino.head.Node) scriptNode47);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList52 = scriptNode47.getChildScopes();
        com.google.javascript.rhino.head.ast.Jump jump53 = new com.google.javascript.rhino.head.ast.Jump(11, (com.google.javascript.rhino.head.Node) scriptNode47);
        functionNode32.setParent((com.google.javascript.rhino.head.ast.AstNode) scriptNode47);
        com.google.javascript.rhino.head.ast.AstNode astNode55 = functionNode32.getMemberExprNode();
        regExpLiteral2.addChildrenToFront((com.google.javascript.rhino.head.Node) functionNode32);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "                                            /null/" + "'", str4, "                                            /null/");
        org.junit.Assert.assertTrue("'" + commentType10 + "' != '" + com.google.javascript.rhino.head.Token.CommentType.HTML + "'", commentType10.equals(com.google.javascript.rhino.head.Token.CommentType.HTML));
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "                                      109" + "'", str14, "                                      109");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "109" + "'", str15, "109");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "109" + "'", str16, "109");
        org.junit.Assert.assertTrue("'" + commentType17 + "' != '" + com.google.javascript.rhino.head.Token.CommentType.LINE + "'", commentType17.equals(com.google.javascript.rhino.head.Token.CommentType.LINE));
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "                    /null/" + "'", str21, "                    /null/");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "                                    /null/" + "'", str23, "                                    /null/");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "                    /null/" + "'", str26, "                    /null/");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "                    /null/" + "'", str27, "                    /null/");
        org.junit.Assert.assertNotNull(node29);
        org.junit.Assert.assertTrue("'" + commentType30 + "' != '" + com.google.javascript.rhino.head.Token.CommentType.LINE + "'", commentType30.equals(com.google.javascript.rhino.head.Token.CommentType.LINE));
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertNotNull(scriptNode34);
        org.junit.Assert.assertNull(astNode35);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertNull(scopeList50);
        org.junit.Assert.assertNull(scopeList52);
        org.junit.Assert.assertNull(astNode55);
    }

    @Test
    public void test10179() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10179");
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator0 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.Jump jump5 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump5.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump9 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump5, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int12 = scriptNode11.getEndLineno();
        int int13 = scriptNode11.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList14 = scriptNode11.getChildScopes();
        com.google.javascript.rhino.head.Node node15 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump5, (com.google.javascript.rhino.head.Node) scriptNode11);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList16 = scriptNode11.getFunctions();
        int int17 = scriptNode11.getPosition();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList18 = scriptNode11.getChildScopes();
        java.lang.String str19 = scriptNode11.getSourceName();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode21 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int22 = functionNode21.getLp();
        functionNode21.setEncodedSource("");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode25 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int26 = functionNode25.getLp();
        functionNode25.setEncodedSource("");
        functionNode25.flattenSymbolTable(false);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode31 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int32 = functionNode31.getLp();
        com.google.javascript.rhino.head.Node node34 = new com.google.javascript.rhino.head.Node((-1), (com.google.javascript.rhino.head.Node) functionNode21, (com.google.javascript.rhino.head.Node) functionNode25, (com.google.javascript.rhino.head.Node) functionNode31, (int) '#');
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap35 = functionNode25.getSymbolTable();
        com.google.javascript.rhino.head.ast.Jump jump39 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump39.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump43 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump39, 0);
        com.google.javascript.rhino.head.ast.Jump jump47 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump47.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump51 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump47, 0);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode52 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int53 = functionNode52.getLp();
        functionNode52.setEncodedSource("");
        functionNode52.flattenSymbolTable(false);
        jump39.addChildAfter((com.google.javascript.rhino.head.Node) jump47, (com.google.javascript.rhino.head.Node) functionNode52);
        functionNode25.setMemberExprNode((com.google.javascript.rhino.head.ast.AstNode) functionNode52);
        int int60 = positionComparator0.compare((com.google.javascript.rhino.head.ast.AstNode) scriptNode11, (com.google.javascript.rhino.head.ast.AstNode) functionNode25);
        functionNode25.setFunctionType(4);
        boolean boolean63 = functionNode25.isGenerator();
        boolean boolean64 = functionNode25.isGenerator();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode65 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int66 = functionNode65.getLp();
        functionNode65.setEncodedSource("");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode69 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int70 = functionNode69.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode71 = functionNode69.getTop();
        com.google.javascript.rhino.head.ast.Name name72 = null;
        functionNode69.setFunctionName(name72);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode74 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode75 = functionNode74.getTop();
        functionNode69.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode74);
        int int77 = functionNode74.getRp();
        int int78 = functionNode74.getFunctionType();
        functionNode65.addParam((com.google.javascript.rhino.head.ast.AstNode) functionNode74);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode80 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int81 = functionNode80.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode82 = functionNode80.getTop();
        com.google.javascript.rhino.head.Node node83 = functionNode80.getLastSibling();
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList84 = functionNode80.getParams();
        functionNode65.setParams(astNodeList84);
        functionNode65.setIsExpressionClosure(true);
        int int90 = functionNode65.getIntProp(6, 4);
        java.lang.String str91 = functionNode65.toString();
        int int92 = functionNode25.addFunction(functionNode65);
        com.google.javascript.rhino.head.ast.AstNode astNode93 = functionNode25.getMemberExprNode();
        com.google.javascript.rhino.head.Node node95 = astNode93.setType(671469117);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNull(scopeList14);
        org.junit.Assert.assertNotNull(functionNodeList16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNull(scopeList18);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNull(strMap35);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 0 + "'", int60 == 0);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + (-1) + "'", int66 == (-1));
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + (-1) + "'", int70 == (-1));
        org.junit.Assert.assertNotNull(scriptNode71);
        org.junit.Assert.assertNotNull(scriptNode75);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + (-1) + "'", int77 == (-1));
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 0 + "'", int78 == 0);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + (-1) + "'", int81 == (-1));
        org.junit.Assert.assertNotNull(scriptNode82);
        org.junit.Assert.assertNotNull(node83);
        org.junit.Assert.assertNotNull(astNodeList84);
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + 4 + "'", int90 == 4);
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + "109" + "'", str91, "109");
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + 0 + "'", int92 == 0);
        org.junit.Assert.assertNotNull(astNode93);
        org.junit.Assert.assertNotNull(node95);
    }

    @Test
    public void test10180() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10180");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode0 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int1 = functionNode0.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = functionNode0.getTop();
        com.google.javascript.rhino.head.ast.AstNode astNode3 = functionNode0.getBody();
        int int4 = functionNode0.getLength();
        com.google.javascript.rhino.head.ast.Jump jump7 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode9 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int10 = scriptNode9.getEndLineno();
        int int11 = scriptNode9.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList12 = scriptNode9.getChildScopes();
        jump7.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode9);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode15 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int16 = functionNode15.getLp();
        functionNode15.setEncodedSource("");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode19 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int20 = functionNode19.getLp();
        functionNode19.setEncodedSource("");
        functionNode19.flattenSymbolTable(false);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode25 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int26 = functionNode25.getLp();
        com.google.javascript.rhino.head.Node node28 = new com.google.javascript.rhino.head.Node((-1), (com.google.javascript.rhino.head.Node) functionNode15, (com.google.javascript.rhino.head.Node) functionNode19, (com.google.javascript.rhino.head.Node) functionNode25, (int) '#');
        jump7.addChildrenToFront((com.google.javascript.rhino.head.Node) functionNode15);
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList30 = functionNode15.getStatements();
        functionNode0.setParams(astNodeList30);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode32 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int33 = functionNode32.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode34 = functionNode32.getTop();
        com.google.javascript.rhino.head.Node node35 = functionNode32.getLastSibling();
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList36 = functionNode32.getParams();
        functionNode0.setParams(astNodeList36);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode38 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode39 = functionNode38.getTop();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode41 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int42 = functionNode41.getLp();
        functionNode41.setEncodedSource("");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode45 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int46 = functionNode45.getLp();
        functionNode45.setEncodedSource("");
        functionNode45.flattenSymbolTable(false);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode51 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int52 = functionNode51.getLp();
        com.google.javascript.rhino.head.Node node54 = new com.google.javascript.rhino.head.Node((-1), (com.google.javascript.rhino.head.Node) functionNode41, (com.google.javascript.rhino.head.Node) functionNode45, (com.google.javascript.rhino.head.Node) functionNode51, (int) '#');
        com.google.javascript.rhino.head.ast.AstNode astNode55 = functionNode41.getBody();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode56 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int57 = functionNode56.getLp();
        functionNode56.setEncodedSource("");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode60 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int61 = functionNode60.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode62 = functionNode60.getTop();
        com.google.javascript.rhino.head.ast.Name name63 = null;
        functionNode60.setFunctionName(name63);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode65 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode66 = functionNode65.getTop();
        functionNode60.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode65);
        int int68 = functionNode65.getRp();
        int int69 = functionNode65.getFunctionType();
        functionNode56.addParam((com.google.javascript.rhino.head.ast.AstNode) functionNode65);
        com.google.javascript.rhino.head.ast.Scope scope71 = functionNode65.getEnclosingScope();
        functionNode41.setBody((com.google.javascript.rhino.head.ast.AstNode) functionNode65);
        int int73 = functionNode38.addFunction(functionNode41);
        java.util.List<com.google.javascript.rhino.head.Node> nodeList74 = functionNode38.getResumptionPoints();
        functionNode0.addParam((com.google.javascript.rhino.head.ast.AstNode) functionNode38);
        com.google.javascript.rhino.head.Node node76 = functionNode38.getNext();
        boolean boolean77 = functionNode38.isSetter();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList78 = functionNode38.getChildScopes();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-1) + "'", int1 == (-1));
        org.junit.Assert.assertNotNull(scriptNode2);
        org.junit.Assert.assertNull(astNode3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 1 + "'", int4 == 1);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNull(scopeList12);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNotNull(astNodeList30);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertNotNull(scriptNode34);
        org.junit.Assert.assertNotNull(node35);
        org.junit.Assert.assertNotNull(astNodeList36);
        org.junit.Assert.assertNotNull(scriptNode39);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertNull(astNode55);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + (-1) + "'", int61 == (-1));
        org.junit.Assert.assertNotNull(scriptNode62);
        org.junit.Assert.assertNotNull(scriptNode66);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + (-1) + "'", int68 == (-1));
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 0 + "'", int69 == 0);
        org.junit.Assert.assertNotNull(scope71);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 0 + "'", int73 == 0);
        org.junit.Assert.assertNull(nodeList74);
        org.junit.Assert.assertNull(node76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNull(scopeList78);
    }

    @Test
    public void test10181() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10181");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode0 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int1 = functionNode0.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = functionNode0.getTop();
        com.google.javascript.rhino.head.ast.Name name3 = null;
        functionNode0.setFunctionName(name3);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode5 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int6 = functionNode5.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode8 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        java.lang.String str9 = functionNode5.toStringTree(scriptNode8);
        functionNode5.setFunctionIsGetter();
        int int11 = functionNode0.addFunction(functionNode5);
        boolean boolean12 = functionNode5.hasSideEffects();
        com.google.javascript.rhino.head.Node node13 = functionNode5.getLastChild();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode14 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int15 = functionNode14.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode17 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        java.lang.String str18 = functionNode14.toStringTree(scriptNode17);
        functionNode14.setFunctionIsGetter();
        com.google.javascript.rhino.head.ast.AstNode astNode20 = functionNode14.getBody();
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList21 = functionNode14.getParams();
        functionNode5.setParams(astNodeList21);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode24 = new com.google.javascript.rhino.head.ast.FunctionNode(0);
        boolean boolean25 = functionNode24.hasChildren();
        boolean boolean26 = functionNode24.isGenerator();
        functionNode5.setMemberExprNode((com.google.javascript.rhino.head.ast.AstNode) functionNode24);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode28 = functionNode5.getTop();
        functionNode5.setRp((-180877978));
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-1) + "'", int1 == (-1));
        org.junit.Assert.assertNotNull(scriptNode2);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNull(node13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(astNode20);
        org.junit.Assert.assertNotNull(astNodeList21);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(scriptNode28);
    }

    @Test
    public void test10182() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10182");
        com.google.javascript.rhino.head.ast.Jump jump4 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump4.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump8 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump4, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int11 = scriptNode10.getEndLineno();
        int int12 = scriptNode10.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList13 = scriptNode10.getChildScopes();
        com.google.javascript.rhino.head.Node node14 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump4, (com.google.javascript.rhino.head.Node) scriptNode10);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList15 = scriptNode10.getFunctions();
        functionNodeList15.clear();
        functionNodeList15.clear();
        java.util.Iterator<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeItor18 = functionNodeList15.iterator();
        com.google.javascript.rhino.head.ast.RegExpLiteral regExpLiteral20 = new com.google.javascript.rhino.head.ast.RegExpLiteral((int) (short) 1);
        java.lang.String str22 = regExpLiteral20.toSource((int) (byte) 10);
        regExpLiteral20.setFlags("-1\tSCRIPT -1 1\n");
        regExpLiteral20.removeProp(8);
        java.lang.String str27 = regExpLiteral20.getValue();
        regExpLiteral20.setLineno(10);
        regExpLiteral20.removeChildren();
        boolean boolean31 = functionNodeList15.equals((java.lang.Object) regExpLiteral20);
        com.google.javascript.rhino.head.ast.Jump jump32 = new com.google.javascript.rhino.head.ast.Jump();
        boolean boolean33 = functionNodeList15.remove((java.lang.Object) jump32);
        int int34 = functionNodeList15.size();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode35 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int36 = functionNode35.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode37 = functionNode35.getTop();
        boolean boolean38 = functionNode35.hasSideEffects();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList39 = functionNode35.getSymbols();
        functionNode35.setRp(5);
        com.google.javascript.rhino.head.ast.Scope scope42 = functionNode35.getEnclosingScope();
        functionNode35.setLineno(5);
        functionNode35.setIsExpressionClosure(false);
        functionNode35.setEncodedSourceBounds(0, (-2));
        functionNode35.setLength(12);
        functionNode35.setRelative((-601958044));
        int int54 = functionNodeList15.indexOf((java.lang.Object) (-601958044));
        java.util.ListIterator<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeItor55 = functionNodeList15.listIterator();
        com.google.javascript.rhino.head.ast.Jump jump60 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump60.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump64 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump60, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode66 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int67 = scriptNode66.getEndLineno();
        int int68 = scriptNode66.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList69 = scriptNode66.getChildScopes();
        com.google.javascript.rhino.head.Node node70 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump60, (com.google.javascript.rhino.head.Node) scriptNode66);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList71 = scriptNode66.getFunctions();
        int int72 = functionNodeList71.size();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator73 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        functionNodeList71.sort((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator73);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode76 = new com.google.javascript.rhino.head.ast.FunctionNode(0);
        boolean boolean77 = functionNode76.hasChildren();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode78 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int79 = functionNode78.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode80 = functionNode78.getTop();
        com.google.javascript.rhino.head.ast.Name name81 = null;
        functionNode78.setFunctionName(name81);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode83 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int84 = functionNode83.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode86 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        java.lang.String str87 = functionNode83.toStringTree(scriptNode86);
        functionNode83.setFunctionIsGetter();
        int int89 = functionNode78.addFunction(functionNode83);
        boolean boolean90 = functionNode83.hasSideEffects();
        int int91 = functionNode83.getFunctionCount();
        int int92 = positionComparator73.compare((com.google.javascript.rhino.head.ast.AstNode) functionNode76, (com.google.javascript.rhino.head.ast.AstNode) functionNode83);
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator93 = positionComparator73.reversed();
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator94 = positionComparator73.reversed();
        functionNodeList15.sort(astNodeComparator94);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNull(scopeList13);
        org.junit.Assert.assertNotNull(functionNodeList15);
        org.junit.Assert.assertNotNull(functionNodeItor18);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "                    /null/" + "'", str22, "                    /null/");
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNotNull(scriptNode37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(symbolList39);
        org.junit.Assert.assertNull(scope42);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
        org.junit.Assert.assertNotNull(functionNodeItor55);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + (-1) + "'", int67 == (-1));
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + (-1) + "'", int68 == (-1));
        org.junit.Assert.assertNull(scopeList69);
        org.junit.Assert.assertNotNull(functionNodeList71);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 0 + "'", int72 == 0);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + (-1) + "'", int79 == (-1));
        org.junit.Assert.assertNotNull(scriptNode80);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + (-1) + "'", int84 == (-1));
        org.junit.Assert.assertNull(str87);
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + 0 + "'", int89 == 0);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + 0 + "'", int91 == 0);
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + 1 + "'", int92 == 1);
        org.junit.Assert.assertNotNull(astNodeComparator93);
        org.junit.Assert.assertNotNull(astNodeComparator94);
    }

    @Test
    public void test10183() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10183");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode0 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 10);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode3 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode4 = functionNode3.getTop();
        functionNode3.setParens((int) (byte) 1, (int) (short) 1);
        functionNode3.setEncodedSourceStart((-1));
        functionNode3.setFunctionIsGetter();
        scope2.addChildToFront((com.google.javascript.rhino.head.Node) functionNode3);
        functionNode0.setBody((com.google.javascript.rhino.head.ast.AstNode) functionNode3);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode13 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = functionNode13.getTop();
        functionNode13.setParens((int) (byte) 1, (int) (short) 1);
        functionNode13.setEncodedSourceStart((-1));
        java.util.List<com.google.javascript.rhino.head.Node> nodeList20 = functionNode13.getResumptionPoints();
        int int21 = functionNode13.getLp();
        functionNode0.setBody((com.google.javascript.rhino.head.ast.AstNode) functionNode13);
        int int23 = functionNode0.getLineno();
        functionNode0.setRelative((int) '#');
        functionNode0.setFunctionIsSetter();
        functionNode0.setParens((-616130778), 10);
        com.google.javascript.rhino.head.ast.Scope scope30 = functionNode0.getEnclosingScope();
        org.junit.Assert.assertNotNull(scriptNode4);
        org.junit.Assert.assertNotNull(scriptNode14);
        org.junit.Assert.assertNull(nodeList20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNull(scope30);
    }

    @Test
    public void test10184() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10184");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode1 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int2 = functionNode1.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode3 = functionNode1.getTop();
        com.google.javascript.rhino.head.ast.Name name4 = null;
        functionNode1.setFunctionName(name4);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode6 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode7 = functionNode6.getTop();
        functionNode1.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode6);
        int int9 = functionNode6.getRp();
        java.lang.String str10 = functionNode6.getSourceName();
        functionNode6.setParens(14, (int) '#');
        com.google.javascript.rhino.head.ast.FunctionNode functionNode14 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode15 = functionNode14.getTop();
        int int16 = functionNode14.getRegexpCount();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode17 = functionNode14.getEnclosingFunction();
        functionNode14.setBaseLineno(0);
        functionNode6.setMemberExprNode((com.google.javascript.rhino.head.ast.AstNode) functionNode14);
        com.google.javascript.rhino.head.Node node21 = new com.google.javascript.rhino.head.Node((int) (short) 100, (com.google.javascript.rhino.head.Node) functionNode14);
        com.google.javascript.rhino.head.ast.AstNode astNode22 = functionNode14.getBody();
        java.lang.String str23 = functionNode14.getNextTempName();
        java.lang.String str24 = functionNode14.getName();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertNotNull(scriptNode3);
        org.junit.Assert.assertNotNull(scriptNode7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(scriptNode15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNull(functionNode17);
        org.junit.Assert.assertNull(astNode22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "$0" + "'", str23, "$0");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
    }

    @Test
    public void test10185() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10185");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode0 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int1 = functionNode0.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode3 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        java.lang.String str4 = functionNode0.toStringTree(scriptNode3);
        int int5 = scriptNode3.getRegexpCount();
        java.lang.Object obj6 = scriptNode3.getCompilerData();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode8 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int9 = scriptNode8.getEndLineno();
        int int10 = scriptNode8.getBaseLineno();
        com.google.javascript.rhino.head.ast.Jump jump13 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode15 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int16 = scriptNode15.getEndLineno();
        int int17 = scriptNode15.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList18 = scriptNode15.getChildScopes();
        jump13.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode15);
        java.lang.String str20 = scriptNode15.debugPrint();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode8, (com.google.javascript.rhino.head.ast.Scope) scriptNode15);
        com.google.javascript.rhino.head.ast.Scope scope22 = new com.google.javascript.rhino.head.ast.Scope();
        scriptNode15.target = scope22;
        int int24 = scriptNode15.getEncodedSourceStart();
        java.lang.String str25 = scriptNode3.toStringTree(scriptNode15);
        com.google.javascript.rhino.head.Token.CommentType commentType28 = com.google.javascript.rhino.head.Token.CommentType.HTML;
        com.google.javascript.rhino.head.ast.Comment comment30 = new com.google.javascript.rhino.head.ast.Comment(20, 1, commentType28, "109");
        java.lang.String str32 = comment30.toSource(19);
        java.lang.String str33 = comment30.getValue();
        java.lang.String str35 = comment30.toSource(2);
        scriptNode15.setJsDocNode(comment30);
        int int37 = comment30.getPosition();
        java.lang.String str38 = comment30.getValue();
        com.google.javascript.rhino.head.ast.RegExpLiteral regExpLiteral41 = new com.google.javascript.rhino.head.ast.RegExpLiteral((int) '4', (int) (short) -1);
        com.google.javascript.rhino.head.ast.Scope scope43 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 10);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode44 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode45 = functionNode44.getTop();
        functionNode44.setParens((int) (byte) 1, (int) (short) 1);
        functionNode44.setEncodedSourceStart((-1));
        functionNode44.setFunctionIsGetter();
        scope43.addChildToFront((com.google.javascript.rhino.head.Node) functionNode44);
        functionNode44.setRp(19);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode56 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int57 = scriptNode56.getEndLineno();
        int int58 = scriptNode56.getBaseLineno();
        com.google.javascript.rhino.head.ast.Jump jump61 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode63 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int64 = scriptNode63.getEndLineno();
        int int65 = scriptNode63.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList66 = scriptNode63.getChildScopes();
        jump61.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode63);
        java.lang.String str68 = scriptNode63.debugPrint();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode56, (com.google.javascript.rhino.head.ast.Scope) scriptNode63);
        com.google.javascript.rhino.head.ast.Scope scope70 = new com.google.javascript.rhino.head.ast.Scope();
        scriptNode63.target = scope70;
        java.lang.String str72 = functionNode44.toStringTree(scriptNode63);
        boolean boolean73 = functionNode44.hasConsistentReturnUsage();
        com.google.javascript.rhino.head.ast.Jump jump76 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode78 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int79 = scriptNode78.getEndLineno();
        int int80 = scriptNode78.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList81 = scriptNode78.getChildScopes();
        jump76.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode78);
        java.lang.String str83 = scriptNode78.debugPrint();
        java.lang.Object obj85 = scriptNode78.getProp((-1));
        int int86 = scriptNode78.getAbsolutePosition();
        functionNode44.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode78);
        int int88 = regExpLiteral41.compareTo((com.google.javascript.rhino.head.ast.AstNode) functionNode44);
        comment30.addChildrenToFront((com.google.javascript.rhino.head.Node) functionNode44);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-1) + "'", int1 == (-1));
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNull(scopeList18);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str20, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertTrue("'" + commentType28 + "' != '" + com.google.javascript.rhino.head.Token.CommentType.HTML + "'", commentType28.equals(com.google.javascript.rhino.head.Token.CommentType.HTML));
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "                                      109" + "'", str32, "                                      109");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "109" + "'", str33, "109");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "    109" + "'", str35, "    109");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 20 + "'", int37 == 20);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "109" + "'", str38, "109");
        org.junit.Assert.assertNotNull(scriptNode45);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + (-1) + "'", int58 == (-1));
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + (-1) + "'", int64 == (-1));
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + (-1) + "'", int65 == (-1));
        org.junit.Assert.assertNull(scopeList66);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str68, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertNull(str72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + (-1) + "'", int79 == (-1));
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + (-1) + "'", int80 == (-1));
        org.junit.Assert.assertNull(scopeList81);
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str83, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertNull(obj85);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + (-1) + "'", int86 == (-1));
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + 1 + "'", int88 == 1);
    }

    @Test
    public void test10186() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10186");
        com.google.javascript.rhino.head.Token.CommentType commentType4 = com.google.javascript.rhino.head.Token.CommentType.HTML;
        com.google.javascript.rhino.head.ast.Comment comment6 = new com.google.javascript.rhino.head.ast.Comment(20, 1, commentType4, "109");
        com.google.javascript.rhino.head.ast.Comment comment8 = new com.google.javascript.rhino.head.ast.Comment(20, 1579347477, commentType4, "$0");
        com.google.javascript.rhino.head.Token.CommentType commentType13 = com.google.javascript.rhino.head.Token.CommentType.LINE;
        com.google.javascript.rhino.head.ast.Comment comment15 = new com.google.javascript.rhino.head.ast.Comment((int) (short) 1, (int) (byte) 100, commentType13, "                                                                                                                                                                                                        ");
        com.google.javascript.rhino.head.ast.Comment comment17 = new com.google.javascript.rhino.head.ast.Comment(12802714, 19, commentType13, "                    {\n                      {\n                      }\n                    }\n");
        comment8.setCommentType(commentType13);
        com.google.javascript.rhino.head.Token.CommentType commentType19 = comment8.getCommentType();
        org.junit.Assert.assertTrue("'" + commentType4 + "' != '" + com.google.javascript.rhino.head.Token.CommentType.HTML + "'", commentType4.equals(com.google.javascript.rhino.head.Token.CommentType.HTML));
        org.junit.Assert.assertTrue("'" + commentType13 + "' != '" + com.google.javascript.rhino.head.Token.CommentType.LINE + "'", commentType13.equals(com.google.javascript.rhino.head.Token.CommentType.LINE));
        org.junit.Assert.assertTrue("'" + commentType19 + "' != '" + com.google.javascript.rhino.head.Token.CommentType.LINE + "'", commentType19.equals(com.google.javascript.rhino.head.Token.CommentType.LINE));
    }

    @Test
    public void test10187() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10187");
        com.google.javascript.rhino.head.ast.Symbol symbol0 = new com.google.javascript.rhino.head.ast.Symbol();
        java.lang.String str1 = symbol0.getDeclTypeName();
        com.google.javascript.rhino.head.ast.Scope scope2 = symbol0.getContainingTable();
        symbol0.setIndex(21);
        java.lang.String str5 = symbol0.getName();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode6 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int7 = functionNode6.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode8 = functionNode6.getTop();
        com.google.javascript.rhino.head.ast.Name name9 = null;
        functionNode6.setFunctionName(name9);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode11 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode12 = functionNode11.getTop();
        functionNode6.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode11);
        int int14 = functionNode11.getRp();
        java.lang.String str15 = functionNode11.getSourceName();
        functionNode11.setParens(14, (int) '#');
        com.google.javascript.rhino.head.ast.FunctionNode functionNode19 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode20 = functionNode19.getTop();
        int int21 = functionNode19.getRegexpCount();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode22 = functionNode19.getEnclosingFunction();
        functionNode19.setBaseLineno(0);
        functionNode11.setMemberExprNode((com.google.javascript.rhino.head.ast.AstNode) functionNode19);
        symbol0.setNode((com.google.javascript.rhino.head.Node) functionNode19);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode28 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int29 = scriptNode28.getEndLineno();
        java.lang.String str30 = scriptNode28.getNextTempName();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode31 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode32 = functionNode31.getTop();
        functionNode31.setParens((int) (byte) 1, (int) (short) 1);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode36 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.Scope scope38 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 10);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode39 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode40 = functionNode39.getTop();
        functionNode39.setParens((int) (byte) 1, (int) (short) 1);
        functionNode39.setEncodedSourceStart((-1));
        functionNode39.setFunctionIsGetter();
        scope38.addChildToFront((com.google.javascript.rhino.head.Node) functionNode39);
        functionNode36.setBody((com.google.javascript.rhino.head.ast.AstNode) functionNode39);
        functionNode36.setFunctionIsSetter();
        int int50 = functionNode31.addFunction(functionNode36);
        int int51 = scriptNode28.compareTo((com.google.javascript.rhino.head.ast.AstNode) functionNode31);
        int int52 = scriptNode28.getPosition();
        functionNode19.addParam((com.google.javascript.rhino.head.ast.AstNode) scriptNode28);
        int int54 = functionNode19.getEncodedSourceStart();
        boolean boolean55 = functionNode19.isSetter();
        int int56 = functionNode19.depth();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "EOF" + "'", str1, "EOF");
        org.junit.Assert.assertNull(scope2);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(scriptNode8);
        org.junit.Assert.assertNotNull(scriptNode12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(scriptNode20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNull(functionNode22);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "$0" + "'", str30, "$0");
        org.junit.Assert.assertNotNull(scriptNode32);
        org.junit.Assert.assertNotNull(scriptNode40);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
// flaky:         org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1254606651) + "'", int51 == (-1254606651));
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 2 + "'", int56 == 2);
    }

    @Test
    public void test10188() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10188");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode0 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int1 = functionNode0.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode3 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        java.lang.String str4 = functionNode0.toStringTree(scriptNode3);
        int int5 = scriptNode3.getRegexpCount();
        com.google.javascript.rhino.head.Node node6 = scriptNode3.getLastSibling();
        com.google.javascript.rhino.head.Node node7 = node6.getNext();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode9 = new com.google.javascript.rhino.head.ast.FunctionNode(13);
        node6.addChildrenToFront((com.google.javascript.rhino.head.Node) functionNode9);
        int int11 = functionNode9.getType();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode13 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int14 = functionNode13.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode15 = functionNode13.getTop();
        boolean boolean16 = functionNode13.hasSideEffects();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode18 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int19 = scriptNode18.getEndLineno();
        int int20 = scriptNode18.getBaseLineno();
        com.google.javascript.rhino.head.ast.Jump jump23 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode25 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int26 = scriptNode25.getEndLineno();
        int int27 = scriptNode25.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList28 = scriptNode25.getChildScopes();
        jump23.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode25);
        java.lang.String str30 = scriptNode25.debugPrint();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode18, (com.google.javascript.rhino.head.ast.Scope) scriptNode25);
        com.google.javascript.rhino.head.ast.Scope scope32 = new com.google.javascript.rhino.head.ast.Scope();
        scriptNode25.target = scope32;
        functionNode13.addChildScope(scope32);
        boolean boolean35 = functionNode13.hasConsistentReturnUsage();
        java.lang.String str36 = functionNode13.getNextTempName();
        com.google.javascript.rhino.head.ast.Jump jump37 = new com.google.javascript.rhino.head.ast.Jump((int) (short) -1, (com.google.javascript.rhino.head.Node) functionNode13);
        boolean boolean38 = functionNode13.isExpressionClosure();
        functionNode13.putIntProp(1, 0);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode42 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int43 = functionNode42.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode44 = functionNode42.getTop();
        com.google.javascript.rhino.head.Node node45 = functionNode42.getLastSibling();
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList46 = functionNode42.getParams();
        functionNode13.target = functionNode42;
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) functionNode9, (com.google.javascript.rhino.head.ast.Scope) functionNode13);
        com.google.javascript.rhino.head.ast.Name name49 = functionNode9.getFunctionName();
        int int50 = functionNode9.getLineno();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-1) + "'", int1 == (-1));
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(node6);
        org.junit.Assert.assertNull(node7);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 109 + "'", int11 == 109);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNotNull(scriptNode15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNull(scopeList28);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str30, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "$0" + "'", str36, "$0");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertNotNull(scriptNode44);
        org.junit.Assert.assertNotNull(node45);
        org.junit.Assert.assertNotNull(astNodeList46);
        org.junit.Assert.assertNull(name49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
    }

    @Test
    public void test10189() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10189");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode0 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int1 = functionNode0.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = functionNode0.getTop();
        com.google.javascript.rhino.head.ast.Name name3 = null;
        functionNode0.setFunctionName(name3);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode5 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = functionNode5.getTop();
        functionNode0.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode5);
        int int8 = functionNode5.getRp();
        int int9 = functionNode5.getFunctionType();
        boolean boolean10 = functionNode5.requiresActivation();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList11 = functionNode5.getChildScopes();
        functionNode5.setFunctionType(100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = functionNode5.getTop();
        com.google.javascript.rhino.head.ast.Symbol symbol15 = new com.google.javascript.rhino.head.ast.Symbol();
        java.lang.String str16 = symbol15.getName();
        com.google.javascript.rhino.head.Node node17 = symbol15.getNode();
        com.google.javascript.rhino.head.ast.Jump jump19 = new com.google.javascript.rhino.head.ast.Jump((int) ' ');
        symbol15.setNode((com.google.javascript.rhino.head.Node) jump19);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode22 = new com.google.javascript.rhino.head.ast.FunctionNode(0);
        int int23 = functionNode22.getBaseLineno();
        functionNode22.setSourceName("                                                                                                                                                                                                        /null/");
        symbol15.setContainingTable((com.google.javascript.rhino.head.ast.Scope) functionNode22);
        int int27 = functionNode22.getLp();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) functionNode5, (com.google.javascript.rhino.head.ast.Scope) functionNode22);
        int int29 = functionNode5.getRegexpCount();
        functionNode5.setEndLineno(0);
        int int32 = functionNode5.getEncodedSourceEnd();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-1) + "'", int1 == (-1));
        org.junit.Assert.assertNotNull(scriptNode2);
        org.junit.Assert.assertNotNull(scriptNode6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(scopeList11);
        org.junit.Assert.assertNotNull(scriptNode14);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNull(node17);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
    }

    @Test
    public void test10190() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10190");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode1 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = functionNode1.getTop();
        functionNode1.setParens((int) (byte) 1, (int) (short) 1);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode6 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.Scope scope8 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 10);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode9 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = functionNode9.getTop();
        functionNode9.setParens((int) (byte) 1, (int) (short) 1);
        functionNode9.setEncodedSourceStart((-1));
        functionNode9.setFunctionIsGetter();
        scope8.addChildToFront((com.google.javascript.rhino.head.Node) functionNode9);
        functionNode6.setBody((com.google.javascript.rhino.head.ast.AstNode) functionNode9);
        functionNode6.setFunctionIsSetter();
        int int20 = functionNode1.addFunction(functionNode6);
        functionNode1.setEncodedSourceStart(1);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList23 = functionNode1.getChildScopes();
        com.google.javascript.rhino.head.ast.Jump jump25 = new com.google.javascript.rhino.head.ast.Jump(200442009, (com.google.javascript.rhino.head.Node) functionNode1, (int) (short) 10);
        boolean boolean26 = functionNode1.hasConsistentReturnUsage();
        int int27 = functionNode1.getRegexpCount();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator28 = functionNode1.new NodeIterator();
        int int29 = functionNode1.getEncodedSourceEnd();
        org.junit.Assert.assertNotNull(scriptNode2);
        org.junit.Assert.assertNotNull(scriptNode10);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNull(scopeList23);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
    }

    @Test
    public void test10191() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10191");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode1 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int2 = functionNode1.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode3 = functionNode1.getTop();
        boolean boolean4 = functionNode1.hasSideEffects();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int7 = scriptNode6.getEndLineno();
        int int8 = scriptNode6.getBaseLineno();
        com.google.javascript.rhino.head.ast.Jump jump11 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode13 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int14 = scriptNode13.getEndLineno();
        int int15 = scriptNode13.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList16 = scriptNode13.getChildScopes();
        jump11.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode13);
        java.lang.String str18 = scriptNode13.debugPrint();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode6, (com.google.javascript.rhino.head.ast.Scope) scriptNode13);
        com.google.javascript.rhino.head.ast.Scope scope20 = new com.google.javascript.rhino.head.ast.Scope();
        scriptNode13.target = scope20;
        functionNode1.addChildScope(scope20);
        boolean boolean23 = functionNode1.hasConsistentReturnUsage();
        java.lang.String str24 = functionNode1.getNextTempName();
        com.google.javascript.rhino.head.ast.Jump jump25 = new com.google.javascript.rhino.head.ast.Jump((int) (short) -1, (com.google.javascript.rhino.head.Node) functionNode1);
        boolean boolean26 = functionNode1.isGetter();
        int int27 = functionNode1.getEncodedSourceEnd();
        com.google.javascript.rhino.head.ast.RegExpLiteral regExpLiteral29 = new com.google.javascript.rhino.head.ast.RegExpLiteral((int) (short) 1);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode31 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode32 = functionNode31.getTop();
        functionNode31.setParens((int) (byte) 1, (int) (short) 1);
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor36 = functionNode31.iterator();
        regExpLiteral29.putProp(13, (java.lang.Object) functionNode31);
        functionNode31.removeProp((int) 'a');
        int int40 = functionNode31.getFunctionCount();
        functionNode1.setParent((com.google.javascript.rhino.head.ast.AstNode) functionNode31);
        java.lang.Object obj43 = functionNode1.getProp((int) 'a');
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertNotNull(scriptNode3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNull(scopeList16);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str18, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "$0" + "'", str24, "$0");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(scriptNode32);
        org.junit.Assert.assertNotNull(nodeItor36);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertNull(obj43);
    }

    @Test
    public void test10192() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10192");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str1 = com.google.javascript.rhino.head.ast.AstNode.operatorToString(830992929);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid operator: 830992929");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test10193() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10193");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 10);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode2 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode3 = functionNode2.getTop();
        functionNode2.setParens((int) (byte) 1, (int) (short) 1);
        functionNode2.setEncodedSourceStart((-1));
        functionNode2.setFunctionIsGetter();
        scope1.addChildToFront((com.google.javascript.rhino.head.Node) functionNode2);
        functionNode2.setRp(19);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int15 = scriptNode14.getEndLineno();
        int int16 = scriptNode14.getBaseLineno();
        com.google.javascript.rhino.head.ast.Jump jump19 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode21 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int22 = scriptNode21.getEndLineno();
        int int23 = scriptNode21.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList24 = scriptNode21.getChildScopes();
        jump19.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode21);
        java.lang.String str26 = scriptNode21.debugPrint();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode14, (com.google.javascript.rhino.head.ast.Scope) scriptNode21);
        com.google.javascript.rhino.head.ast.Scope scope28 = new com.google.javascript.rhino.head.ast.Scope();
        scriptNode21.target = scope28;
        java.lang.String str30 = functionNode2.toStringTree(scriptNode21);
        java.lang.String str32 = scriptNode21.toSource((int) (short) 10);
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap33 = scriptNode21.getSymbolTable();
        int int34 = strMap33.size();
        com.google.javascript.rhino.head.ast.Jump jump39 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump39.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump43 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump39, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode45 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int46 = scriptNode45.getEndLineno();
        int int47 = scriptNode45.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList48 = scriptNode45.getChildScopes();
        com.google.javascript.rhino.head.Node node49 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump39, (com.google.javascript.rhino.head.Node) scriptNode45);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList50 = scriptNode45.getFunctions();
        functionNodeList50.clear();
        functionNodeList50.clear();
        com.google.javascript.rhino.head.ast.Jump jump57 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump57.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump61 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump57, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode63 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int64 = scriptNode63.getEndLineno();
        int int65 = scriptNode63.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList66 = scriptNode63.getChildScopes();
        com.google.javascript.rhino.head.Node node67 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump57, (com.google.javascript.rhino.head.Node) scriptNode63);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList68 = scriptNode63.getFunctions();
        java.util.Spliterator<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeSpliterator69 = functionNodeList68.spliterator();
        int int71 = functionNodeList68.indexOf((java.lang.Object) (byte) 10);
        boolean boolean72 = functionNodeList50.retainAll((java.util.Collection<com.google.javascript.rhino.head.ast.FunctionNode>) functionNodeList68);
        boolean boolean73 = strMap33.containsKey((java.lang.Object) functionNodeList50);
        java.util.Collection<com.google.javascript.rhino.head.ast.Symbol> symbolCollection74 = strMap33.values();
        com.google.javascript.rhino.head.Node node76 = com.google.javascript.rhino.head.Node.newNumber((double) '#');
        com.google.javascript.rhino.head.ast.Symbol symbol77 = strMap33.get((java.lang.Object) '#');
        java.util.Collection<com.google.javascript.rhino.head.ast.Symbol> symbolCollection78 = strMap33.values();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode79 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int80 = functionNode79.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode81 = functionNode79.getTop();
        com.google.javascript.rhino.head.Node node82 = functionNode79.getLastSibling();
        com.google.javascript.rhino.head.ast.Symbol symbol83 = strMap33.get((java.lang.Object) node82);
        com.google.javascript.rhino.head.ast.Scope scope85 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 10);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode86 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode87 = functionNode86.getTop();
        functionNode86.setParens((int) (byte) 1, (int) (short) 1);
        functionNode86.setEncodedSourceStart((-1));
        functionNode86.setFunctionIsGetter();
        scope85.addChildToFront((com.google.javascript.rhino.head.Node) functionNode86);
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator95 = scope85.new NodeIterator();
        com.google.javascript.rhino.head.Node node96 = nodeIterator95.next();
        boolean boolean97 = strMap33.containsValue((java.lang.Object) nodeIterator95);
        nodeIterator95.remove();
        boolean boolean99 = nodeIterator95.hasNext();
        org.junit.Assert.assertNotNull(scriptNode3);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNull(scopeList24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str26, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "                    {\n                    }\n" + "'", str32, "                    {\n                    }\n");
        org.junit.Assert.assertNotNull(strMap33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertNull(scopeList48);
        org.junit.Assert.assertNotNull(functionNodeList50);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + (-1) + "'", int64 == (-1));
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + (-1) + "'", int65 == (-1));
        org.junit.Assert.assertNull(scopeList66);
        org.junit.Assert.assertNotNull(functionNodeList68);
        org.junit.Assert.assertNotNull(functionNodeSpliterator69);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + (-1) + "'", int71 == (-1));
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(symbolCollection74);
        org.junit.Assert.assertNotNull(node76);
        org.junit.Assert.assertNull(symbol77);
        org.junit.Assert.assertNotNull(symbolCollection78);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + (-1) + "'", int80 == (-1));
        org.junit.Assert.assertNotNull(scriptNode81);
        org.junit.Assert.assertNotNull(node82);
        org.junit.Assert.assertNull(symbol83);
        org.junit.Assert.assertNotNull(scriptNode87);
        org.junit.Assert.assertNotNull(node96);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + false + "'", boolean97 == false);
        org.junit.Assert.assertTrue("'" + boolean99 + "' != '" + false + "'", boolean99 == false);
    }

    @Test
    public void test10194() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10194");
        com.google.javascript.rhino.head.ast.RegExpLiteral regExpLiteral1 = new com.google.javascript.rhino.head.ast.RegExpLiteral(682903487);
    }

    @Test
    public void test10195() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10195");
        com.google.javascript.rhino.head.ast.RegExpLiteral regExpLiteral1 = new com.google.javascript.rhino.head.ast.RegExpLiteral((int) (short) 1);
        java.lang.String str3 = regExpLiteral1.toSource((int) (byte) 10);
        regExpLiteral1.setFlags("-1\tSCRIPT -1 1\n");
        java.lang.String str7 = regExpLiteral1.toSource((int) (short) -1);
        regExpLiteral1.setFlags("EOF");
        java.lang.String str11 = regExpLiteral1.makeIndent(10);
        regExpLiteral1.setValue("/null/EOF");
        regExpLiteral1.setRelative(24);
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor16 = regExpLiteral1.iterator();
        int int17 = regExpLiteral1.getType();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "                    /null/" + "'", str3, "                    /null/");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "/null/-1\tSCRIPT -1 1\n" + "'", str7, "/null/-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "                    " + "'", str11, "                    ");
        org.junit.Assert.assertNotNull(nodeItor16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 48 + "'", int17 == 48);
    }

    @Test
    public void test10196() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10196");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int2 = scriptNode1.getEndLineno();
        int int3 = scriptNode1.getBaseLineno();
        com.google.javascript.rhino.head.Node node4 = scriptNode1.getNext();
        com.google.javascript.rhino.head.Node node5 = scriptNode1.getFirstChild();
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList6 = scriptNode1.getFunctions();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode9 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        com.google.javascript.rhino.head.ast.Comment comment10 = scriptNode9.getJsDocNode();
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList11 = scriptNode9.getFunctions();
        boolean boolean12 = functionNodeList6.addAll(0, (java.util.Collection<com.google.javascript.rhino.head.ast.FunctionNode>) functionNodeList11);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode15 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int16 = functionNode15.getLp();
        functionNode15.setEncodedSource("");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode19 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int20 = functionNode19.getLp();
        functionNode19.setEncodedSource("");
        functionNode19.flattenSymbolTable(false);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode25 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int26 = functionNode25.getLp();
        com.google.javascript.rhino.head.Node node28 = new com.google.javascript.rhino.head.Node((-1), (com.google.javascript.rhino.head.Node) functionNode15, (com.google.javascript.rhino.head.Node) functionNode19, (com.google.javascript.rhino.head.Node) functionNode25, (int) '#');
        com.google.javascript.rhino.head.ast.Comment comment29 = functionNode25.getJsDocNode();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode30 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.Scope scope32 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 10);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode33 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode34 = functionNode33.getTop();
        functionNode33.setParens((int) (byte) 1, (int) (short) 1);
        functionNode33.setEncodedSourceStart((-1));
        functionNode33.setFunctionIsGetter();
        scope32.addChildToFront((com.google.javascript.rhino.head.Node) functionNode33);
        functionNode30.setBody((com.google.javascript.rhino.head.ast.AstNode) functionNode33);
        boolean boolean43 = functionNode25.isParam((com.google.javascript.rhino.head.ast.AstNode) functionNode30);
        com.google.javascript.rhino.head.ast.Jump jump44 = new com.google.javascript.rhino.head.ast.Jump(8, (com.google.javascript.rhino.head.Node) functionNode25);
        boolean boolean45 = functionNodeList6.contains((java.lang.Object) jump44);
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.Node node46 = jump44.getDefault();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNull(node4);
        org.junit.Assert.assertNull(node5);
        org.junit.Assert.assertNotNull(functionNodeList6);
        org.junit.Assert.assertNull(comment10);
        org.junit.Assert.assertNotNull(functionNodeList11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNull(comment29);
        org.junit.Assert.assertNotNull(scriptNode34);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
    }

    @Test
    public void test10197() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10197");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode2 = new com.google.javascript.rhino.head.ast.FunctionNode((int) (byte) 100);
        int int3 = functionNode2.getEncodedSourceStart();
        int int4 = functionNode2.getFunctionCount();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode5 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = functionNode5.getTop();
        functionNode5.setParens((int) (byte) 1, (int) (short) 1);
        int int10 = functionNode5.getRp();
        com.google.javascript.rhino.head.Node node12 = new com.google.javascript.rhino.head.Node(17, (com.google.javascript.rhino.head.Node) functionNode2, (com.google.javascript.rhino.head.Node) functionNode5, (int) (short) 0);
        com.google.javascript.rhino.head.ast.Jump jump18 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump18.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump22 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump18, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode24 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int25 = scriptNode24.getEndLineno();
        int int26 = scriptNode24.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList27 = scriptNode24.getChildScopes();
        com.google.javascript.rhino.head.Node node28 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump18, (com.google.javascript.rhino.head.Node) scriptNode24);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode30 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int31 = scriptNode30.getEndLineno();
        com.google.javascript.rhino.head.ast.RegExpLiteral regExpLiteral33 = new com.google.javascript.rhino.head.ast.RegExpLiteral((int) (short) 1);
        java.lang.String str35 = regExpLiteral33.toSource((int) (byte) 10);
        regExpLiteral33.setFlags("-1\tSCRIPT -1 1\n");
        regExpLiteral33.removeProp(8);
        com.google.javascript.rhino.head.Node node41 = new com.google.javascript.rhino.head.Node(10, node28, (com.google.javascript.rhino.head.Node) scriptNode30, (com.google.javascript.rhino.head.Node) regExpLiteral33, 3);
        java.lang.String str43 = regExpLiteral33.makeIndent((int) (short) 100);
        int int44 = regExpLiteral33.getType();
        boolean boolean45 = regExpLiteral33.hasSideEffects();
        java.lang.String str46 = regExpLiteral33.getFlags();
        int int47 = functionNode2.compareTo((com.google.javascript.rhino.head.ast.AstNode) regExpLiteral33);
        functionNode2.setBaseLineno((int) (short) 1);
        com.google.javascript.rhino.head.Node node50 = functionNode2.getFirstChild();
        functionNode2.setBounds((-1044852625), (-242022205));
        java.lang.String str54 = functionNode2.shortName();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(scriptNode6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNull(scopeList27);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "                    /null/" + "'", str35, "                    /null/");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "                                                                                                                                                                                                        " + "'", str43, "                                                                                                                                                                                                        ");
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 48 + "'", int44 == 48);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str46, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 1 + "'", int47 == 1);
        org.junit.Assert.assertNull(node50);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "FunctionNode" + "'", str54, "FunctionNode");
    }

    @Test
    public void test10198() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10198");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode0 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = functionNode0.getTop();
        java.lang.String str2 = scriptNode1.getJsDoc();
        com.google.javascript.rhino.head.ast.Symbol symbol4 = scriptNode1.getSymbol("                                                                      /null/                  ");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode6 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int7 = functionNode6.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode8 = functionNode6.getTop();
        com.google.javascript.rhino.head.ast.Name name9 = null;
        functionNode6.setFunctionName(name9);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode11 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode12 = functionNode11.getTop();
        functionNode6.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode11);
        com.google.javascript.rhino.head.ast.Scope scope16 = new com.google.javascript.rhino.head.ast.Scope((int) (short) -1, 0);
        functionNode6.replaceWith(scope16);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode18 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int19 = functionNode18.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode20 = functionNode18.getTop();
        com.google.javascript.rhino.head.ast.Name name21 = null;
        functionNode18.setFunctionName(name21);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode23 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode24 = functionNode23.getTop();
        functionNode18.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode23);
        int int26 = functionNode6.addFunction(functionNode18);
        int int27 = functionNode18.getLineno();
        com.google.javascript.rhino.head.Node node29 = new com.google.javascript.rhino.head.Node((int) (short) -1, (com.google.javascript.rhino.head.Node) functionNode18, (int) (short) -1);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList30 = functionNode18.getSymbols();
        scriptNode1.setSymbols(symbolList30);
        int int32 = scriptNode1.getType();
        org.junit.Assert.assertNotNull(scriptNode1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(symbol4);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(scriptNode8);
        org.junit.Assert.assertNotNull(scriptNode12);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(scriptNode20);
        org.junit.Assert.assertNotNull(scriptNode24);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(symbolList30);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 109 + "'", int32 == 109);
    }

    @Test
    public void test10199() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10199");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode0 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int1 = functionNode0.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = functionNode0.getTop();
        com.google.javascript.rhino.head.ast.AstNode astNode3 = functionNode0.getBody();
        com.google.javascript.rhino.head.ast.Scope scope4 = functionNode0.getParentScope();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode5 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int6 = functionNode5.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode7 = functionNode5.getTop();
        com.google.javascript.rhino.head.ast.Jump jump13 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump13.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump17 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump13, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode19 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int20 = scriptNode19.getEndLineno();
        int int21 = scriptNode19.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList22 = scriptNode19.getChildScopes();
        com.google.javascript.rhino.head.Node node23 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump13, (com.google.javascript.rhino.head.Node) scriptNode19);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode25 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int26 = scriptNode25.getEndLineno();
        com.google.javascript.rhino.head.ast.RegExpLiteral regExpLiteral28 = new com.google.javascript.rhino.head.ast.RegExpLiteral((int) (short) 1);
        java.lang.String str30 = regExpLiteral28.toSource((int) (byte) 10);
        regExpLiteral28.setFlags("-1\tSCRIPT -1 1\n");
        regExpLiteral28.removeProp(8);
        com.google.javascript.rhino.head.Node node36 = new com.google.javascript.rhino.head.Node(10, node23, (com.google.javascript.rhino.head.Node) scriptNode25, (com.google.javascript.rhino.head.Node) regExpLiteral28, 3);
        java.lang.String str38 = regExpLiteral28.makeIndent((int) (short) 100);
        int int39 = regExpLiteral28.getType();
        functionNode5.setMemberExprNode((com.google.javascript.rhino.head.ast.AstNode) regExpLiteral28);
        java.lang.String str41 = functionNode0.toStringTree((com.google.javascript.rhino.head.ast.ScriptNode) functionNode5);
        com.google.javascript.rhino.head.ast.Name name42 = null;
        functionNode5.setFunctionName(name42);
        java.lang.String str44 = functionNode5.shortName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot45 = functionNode5.getAstRoot();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-1) + "'", int1 == (-1));
        org.junit.Assert.assertNotNull(scriptNode2);
        org.junit.Assert.assertNull(astNode3);
        org.junit.Assert.assertNull(scope4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(scriptNode7);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertNull(scopeList22);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "                    /null/" + "'", str30, "                    /null/");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "                                                                                                                                                                                                        " + "'", str38, "                                                                                                                                                                                                        ");
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 48 + "'", int39 == 48);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "FunctionNode" + "'", str44, "FunctionNode");
        org.junit.Assert.assertNull(astRoot45);
    }

    @Test
    public void test10200() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10200");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode0 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = functionNode0.getTop();
        functionNode0.setParens((int) (byte) 1, (int) (short) 1);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode5 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.Scope scope7 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 10);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode8 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode9 = functionNode8.getTop();
        functionNode8.setParens((int) (byte) 1, (int) (short) 1);
        functionNode8.setEncodedSourceStart((-1));
        functionNode8.setFunctionIsGetter();
        scope7.addChildToFront((com.google.javascript.rhino.head.Node) functionNode8);
        functionNode5.setBody((com.google.javascript.rhino.head.ast.AstNode) functionNode8);
        functionNode5.setFunctionIsSetter();
        int int19 = functionNode0.addFunction(functionNode5);
        java.lang.String str20 = functionNode0.getNextTempName();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode22 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int23 = scriptNode22.getEndLineno();
        int int24 = scriptNode22.getBaseLineno();
        scriptNode22.removeProp(0);
        scriptNode22.setEncodedSourceEnd(19);
        functionNode0.addParam((com.google.javascript.rhino.head.ast.AstNode) scriptNode22);
        int int30 = functionNode0.getFunctionCount();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode33 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int34 = functionNode33.getLp();
        functionNode33.setLp((int) (short) 1);
        int int39 = functionNode33.getIntProp(4, 26);
        com.google.javascript.rhino.head.ast.Jump jump40 = new com.google.javascript.rhino.head.ast.Jump(3, (com.google.javascript.rhino.head.Node) functionNode33);
        jump40.removeProp((int) ' ');
        int int43 = jump40.getAbsolutePosition();
        com.google.javascript.rhino.head.ast.RegExpLiteral regExpLiteral47 = new com.google.javascript.rhino.head.ast.RegExpLiteral(35, 22);
        com.google.javascript.rhino.head.ast.Jump jump48 = new com.google.javascript.rhino.head.ast.Jump(6, (com.google.javascript.rhino.head.Node) regExpLiteral47);
        jump48.setRelative(21);
        com.google.javascript.rhino.head.Node node51 = jump48.getLastChild();
        com.google.javascript.rhino.head.Node node52 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) jump40, (com.google.javascript.rhino.head.Node) jump48);
        // The following exception was thrown during execution in test generation
        try {
            functionNode0.setLoop(jump48);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(scriptNode1);
        org.junit.Assert.assertNotNull(scriptNode9);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "$0" + "'", str20, "$0");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 1 + "'", int30 == 1);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 26 + "'", int39 == 26);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertNotNull(node51);
    }

    @Test
    public void test10201() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10201");
        com.google.javascript.rhino.head.ast.Jump jump2 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode4 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int5 = scriptNode4.getEndLineno();
        int int6 = scriptNode4.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList7 = scriptNode4.getChildScopes();
        jump2.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode4);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode10 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int11 = functionNode10.getLp();
        functionNode10.setEncodedSource("");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode14 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int15 = functionNode14.getLp();
        functionNode14.setEncodedSource("");
        functionNode14.flattenSymbolTable(false);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode20 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int21 = functionNode20.getLp();
        com.google.javascript.rhino.head.Node node23 = new com.google.javascript.rhino.head.Node((-1), (com.google.javascript.rhino.head.Node) functionNode10, (com.google.javascript.rhino.head.Node) functionNode14, (com.google.javascript.rhino.head.Node) functionNode20, (int) '#');
        jump2.addChildrenToFront((com.google.javascript.rhino.head.Node) functionNode10);
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList25 = functionNode10.getStatements();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode26 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode27 = functionNode26.getTop();
        com.google.javascript.rhino.head.ast.AstRoot astRoot28 = functionNode26.getAstRoot();
        functionNode10.replaceWith((com.google.javascript.rhino.head.ast.Scope) functionNode26);
        com.google.javascript.rhino.head.ast.Name name31 = null;
        com.google.javascript.rhino.head.ast.FunctionNode functionNode32 = new com.google.javascript.rhino.head.ast.FunctionNode((-1), name31);
        functionNode26.addChildrenToFront((com.google.javascript.rhino.head.Node) functionNode32);
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor34 = null;
        // The following exception was thrown during execution in test generation
        try {
            functionNode32.visit(nodeVisitor34);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNull(scopeList7);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertNotNull(astNodeList25);
        org.junit.Assert.assertNotNull(scriptNode27);
        org.junit.Assert.assertNull(astRoot28);
    }

    @Test
    public void test10202() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10202");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode0 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int1 = functionNode0.getLp();
        functionNode0.setEncodedSource("");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode4 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int5 = functionNode4.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = functionNode4.getTop();
        com.google.javascript.rhino.head.ast.Name name7 = null;
        functionNode4.setFunctionName(name7);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode9 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = functionNode9.getTop();
        functionNode4.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode9);
        int int12 = functionNode9.getRp();
        int int13 = functionNode9.getFunctionType();
        functionNode0.addParam((com.google.javascript.rhino.head.ast.AstNode) functionNode9);
        com.google.javascript.rhino.head.Node node15 = functionNode0.getLastSibling();
        com.google.javascript.rhino.head.Node node16 = functionNode0.getNext();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode18 = new com.google.javascript.rhino.head.ast.FunctionNode((-1));
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor19 = functionNode18.iterator();
        functionNode18.setEncodedSourceStart(15);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode22 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int23 = functionNode22.getLp();
        functionNode22.setEncodedSource("");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode26 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int27 = functionNode26.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode28 = functionNode26.getTop();
        com.google.javascript.rhino.head.ast.Name name29 = null;
        functionNode26.setFunctionName(name29);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode31 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode32 = functionNode31.getTop();
        functionNode26.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode31);
        int int34 = functionNode31.getRp();
        int int35 = functionNode31.getFunctionType();
        functionNode22.addParam((com.google.javascript.rhino.head.ast.AstNode) functionNode31);
        com.google.javascript.rhino.head.ast.Scope scope38 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 10);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode39 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode40 = functionNode39.getTop();
        functionNode39.setParens((int) (byte) 1, (int) (short) 1);
        functionNode39.setEncodedSourceStart((-1));
        functionNode39.setFunctionIsGetter();
        scope38.addChildToFront((com.google.javascript.rhino.head.Node) functionNode39);
        functionNode39.setRp(19);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode51 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int52 = scriptNode51.getEndLineno();
        int int53 = scriptNode51.getBaseLineno();
        com.google.javascript.rhino.head.ast.Jump jump56 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode58 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int59 = scriptNode58.getEndLineno();
        int int60 = scriptNode58.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList61 = scriptNode58.getChildScopes();
        jump56.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode58);
        java.lang.String str63 = scriptNode58.debugPrint();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode51, (com.google.javascript.rhino.head.ast.Scope) scriptNode58);
        com.google.javascript.rhino.head.ast.Scope scope65 = new com.google.javascript.rhino.head.ast.Scope();
        scriptNode58.target = scope65;
        java.lang.String str67 = functionNode39.toStringTree(scriptNode58);
        java.lang.String str69 = scriptNode58.toSource((int) (short) 10);
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap70 = scriptNode58.getSymbolTable();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode72 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int73 = scriptNode72.getEndLineno();
        int int74 = scriptNode72.getBaseLineno();
        scriptNode72.removeProp(0);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList77 = scriptNode72.getSymbols();
        boolean boolean78 = strMap70.containsValue((java.lang.Object) symbolList77);
        functionNode22.setSymbols(symbolList77);
        functionNode22.setEncodedSourceStart(0);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode82 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int83 = functionNode82.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode84 = functionNode82.getTop();
        com.google.javascript.rhino.head.ast.Name name85 = null;
        functionNode82.setFunctionName(name85);
        functionNode18.addChildBefore((com.google.javascript.rhino.head.Node) functionNode22, (com.google.javascript.rhino.head.Node) name85);
        functionNode22.setFunctionType(18);
        functionNode22.setIsExpressionClosure(true);
        int int92 = functionNode0.compareTo((com.google.javascript.rhino.head.ast.AstNode) functionNode22);
        com.google.javascript.rhino.head.ast.AstNode astNode93 = functionNode22.getMemberExprNode();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-1) + "'", int1 == (-1));
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(scriptNode6);
        org.junit.Assert.assertNotNull(scriptNode10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(node15);
        org.junit.Assert.assertNull(node16);
        org.junit.Assert.assertNotNull(nodeItor19);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(scriptNode28);
        org.junit.Assert.assertNotNull(scriptNode32);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertNotNull(scriptNode40);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-1) + "'", int59 == (-1));
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-1) + "'", int60 == (-1));
        org.junit.Assert.assertNull(scopeList61);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str63, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertNull(str67);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "                    {\n                    }\n" + "'", str69, "                    {\n                    }\n");
        org.junit.Assert.assertNotNull(strMap70);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + (-1) + "'", int73 == (-1));
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + (-1) + "'", int74 == (-1));
        org.junit.Assert.assertNotNull(symbolList77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + (-1) + "'", int83 == (-1));
        org.junit.Assert.assertNotNull(scriptNode84);
// flaky:         org.junit.Assert.assertTrue("'" + int92 + "' != '" + (-205555973) + "'", int92 == (-205555973));
        org.junit.Assert.assertNull(astNode93);
    }

    @Test
    public void test10203() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10203");
        com.google.javascript.rhino.head.ast.Jump jump4 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump4.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump8 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump4, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int11 = scriptNode10.getEndLineno();
        int int12 = scriptNode10.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList13 = scriptNode10.getChildScopes();
        com.google.javascript.rhino.head.Node node14 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump4, (com.google.javascript.rhino.head.Node) scriptNode10);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList15 = scriptNode10.getFunctions();
        functionNodeList15.clear();
        com.google.javascript.rhino.head.ast.Jump jump21 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump21.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump25 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump21, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode27 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int28 = scriptNode27.getEndLineno();
        int int29 = scriptNode27.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList30 = scriptNode27.getChildScopes();
        com.google.javascript.rhino.head.Node node31 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump21, (com.google.javascript.rhino.head.Node) scriptNode27);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList32 = scriptNode27.getFunctions();
        boolean boolean33 = functionNodeList15.removeAll((java.util.Collection<com.google.javascript.rhino.head.ast.FunctionNode>) functionNodeList32);
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator34 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.Jump jump39 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump39.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump43 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump39, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode45 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int46 = scriptNode45.getEndLineno();
        int int47 = scriptNode45.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList48 = scriptNode45.getChildScopes();
        com.google.javascript.rhino.head.Node node49 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump39, (com.google.javascript.rhino.head.Node) scriptNode45);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList50 = scriptNode45.getFunctions();
        int int51 = functionNodeList50.size();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator52 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        functionNodeList50.sort((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator52);
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator54 = positionComparator52.reversed();
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator55 = astNodeComparator54.reversed();
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator56 = positionComparator34.thenComparing(astNodeComparator54);
        functionNodeList15.sort(astNodeComparator54);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode58 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode59 = functionNode58.getTop();
        com.google.javascript.rhino.head.ast.Name name60 = null;
        functionNode58.setFunctionName(name60);
        boolean boolean62 = functionNode58.requiresActivation();
        com.google.javascript.rhino.head.ast.Jump jump66 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump66.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump70 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump66, 0);
        com.google.javascript.rhino.head.ast.Jump jump74 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump74.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump78 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump74, 0);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode79 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int80 = functionNode79.getLp();
        functionNode79.setEncodedSource("");
        functionNode79.flattenSymbolTable(false);
        jump66.addChildAfter((com.google.javascript.rhino.head.Node) jump74, (com.google.javascript.rhino.head.Node) functionNode79);
        com.google.javascript.rhino.head.Node node86 = functionNode79.target;
        functionNode58.setBody((com.google.javascript.rhino.head.ast.AstNode) functionNode79);
        int int88 = functionNode79.getEncodedSourceStart();
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList89 = functionNode79.getFunctions();
        boolean boolean90 = functionNodeList15.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.FunctionNode>) functionNodeList89);
        java.util.stream.Stream<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeStream91 = functionNodeList89.stream();
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.ast.FunctionNode functionNode93 = functionNodeList89.remove(48);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNull(scopeList13);
        org.junit.Assert.assertNotNull(functionNodeList15);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertNull(scopeList30);
        org.junit.Assert.assertNotNull(functionNodeList32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertNull(scopeList48);
        org.junit.Assert.assertNotNull(functionNodeList50);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertNotNull(astNodeComparator54);
        org.junit.Assert.assertNotNull(astNodeComparator55);
        org.junit.Assert.assertNotNull(astNodeComparator56);
        org.junit.Assert.assertNotNull(scriptNode59);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + (-1) + "'", int80 == (-1));
        org.junit.Assert.assertNull(node86);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + (-1) + "'", int88 == (-1));
        org.junit.Assert.assertNotNull(functionNodeList89);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertNotNull(functionNodeStream91);
    }

    @Test
    public void test10204() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10204");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode0 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = functionNode0.getTop();
        functionNode0.setParens((int) (byte) 1, (int) (short) 1);
        functionNode0.setEncodedSourceStart((-1));
        java.util.List<com.google.javascript.rhino.head.Node> nodeList7 = functionNode0.getResumptionPoints();
        com.google.javascript.rhino.head.ast.Scope scope9 = functionNode0.getDefiningScope("hi!");
        boolean boolean10 = functionNode0.isGetterOrSetter();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode11 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int12 = functionNode11.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode13 = functionNode11.getTop();
        com.google.javascript.rhino.head.ast.Name name14 = null;
        functionNode11.setFunctionName(name14);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode16 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode17 = functionNode16.getTop();
        functionNode11.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode16);
        int int19 = functionNode16.getRp();
        int int20 = functionNode16.getFunctionType();
        int int21 = functionNode0.addFunction(functionNode16);
        java.lang.String str22 = functionNode0.getNextTempName();
        com.google.javascript.rhino.head.ast.Jump jump27 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump27.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump31 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump27, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode33 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int34 = scriptNode33.getEndLineno();
        int int35 = scriptNode33.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList36 = scriptNode33.getChildScopes();
        com.google.javascript.rhino.head.Node node37 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump27, (com.google.javascript.rhino.head.Node) scriptNode33);
        java.lang.String str38 = scriptNode33.getSourceName();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode39 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int40 = functionNode39.getLp();
        functionNode39.setEncodedSource("");
        functionNode39.flattenSymbolTable(false);
        java.lang.String str45 = functionNode39.getName();
        functionNode39.setFunctionIsGetter();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode47 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int48 = functionNode47.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode49 = functionNode47.getTop();
        com.google.javascript.rhino.head.Node node50 = functionNode47.getLastSibling();
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList51 = functionNode47.getParams();
        functionNode39.setParams(astNodeList51);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode53 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int54 = functionNode53.getLp();
        functionNode53.setLp((int) (short) 1);
        int int59 = functionNode53.getIntProp(4, 26);
        functionNode53.flattenSymbolTable(true);
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList62 = functionNode53.getParams();
        functionNode39.setParams(astNodeList62);
        functionNode39.setEndLineno(12);
        scriptNode33.addChildToBack((com.google.javascript.rhino.head.Node) functionNode39);
        functionNode0.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode39);
        com.google.javascript.rhino.head.Node node68 = functionNode39.getFirstChild();
        java.util.List<com.google.javascript.rhino.head.Node> nodeList69 = functionNode39.getResumptionPoints();
        functionNode39.setIsGenerator();
        org.junit.Assert.assertNotNull(scriptNode1);
        org.junit.Assert.assertNull(nodeList7);
        org.junit.Assert.assertNull(scope9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(scriptNode13);
        org.junit.Assert.assertNotNull(scriptNode17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "$0" + "'", str22, "$0");
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertNull(scopeList36);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "" + "'", str45, "");
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
        org.junit.Assert.assertNotNull(scriptNode49);
        org.junit.Assert.assertNotNull(node50);
        org.junit.Assert.assertNotNull(astNodeList51);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 26 + "'", int59 == 26);
        org.junit.Assert.assertNotNull(astNodeList62);
        org.junit.Assert.assertNull(node68);
        org.junit.Assert.assertNull(nodeList69);
    }

    @Test
    public void test10205() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10205");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int2 = scriptNode1.getEndLineno();
        int int3 = scriptNode1.getBaseLineno();
        com.google.javascript.rhino.head.ast.Jump jump6 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode8 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int9 = scriptNode8.getEndLineno();
        int int10 = scriptNode8.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList11 = scriptNode8.getChildScopes();
        jump6.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode8);
        java.lang.String str13 = scriptNode8.debugPrint();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode1, (com.google.javascript.rhino.head.ast.Scope) scriptNode8);
        com.google.javascript.rhino.head.ast.AstNode astNode15 = scriptNode1.getParent();
        int int16 = scriptNode1.getType();
        com.google.javascript.rhino.head.ast.Symbol symbol18 = scriptNode1.getSymbol("109");
        java.lang.String str19 = scriptNode1.toSource();
        int int20 = scriptNode1.getEncodedSourceEnd();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode21 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode22 = functionNode21.getTop();
        functionNode21.setParens((int) (byte) 1, (int) (short) 1);
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor26 = functionNode21.iterator();
        functionNode21.setLp(136);
        int int29 = functionNode21.getFunctionType();
        scriptNode1.addChildrenToBack((com.google.javascript.rhino.head.Node) functionNode21);
        functionNode21.setParens(774094395, 32);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList34 = functionNode21.getSymbols();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode36 = new com.google.javascript.rhino.head.ast.FunctionNode(0);
        int int37 = functionNode36.getBaseLineno();
        boolean boolean38 = functionNode36.isGetter();
        com.google.javascript.rhino.head.ast.RegExpLiteral regExpLiteral40 = new com.google.javascript.rhino.head.ast.RegExpLiteral((int) (short) 1);
        regExpLiteral40.setFlags("-1\tSCRIPT -1 1\n");
        java.lang.String str43 = regExpLiteral40.getValue();
        regExpLiteral40.setFlags("52");
        functionNode36.addChildrenToFront((com.google.javascript.rhino.head.Node) regExpLiteral40);
        java.lang.String str47 = functionNode21.toStringTree((com.google.javascript.rhino.head.ast.ScriptNode) functionNode36);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNull(scopeList11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str13, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertNull(astNode15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 136 + "'", int16 == 136);
        org.junit.Assert.assertNull(symbol18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "{\n}\n" + "'", str19, "{\n}\n");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertNotNull(scriptNode22);
        org.junit.Assert.assertNotNull(nodeItor26);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNotNull(symbolList34);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertNull(str47);
    }

    @Test
    public void test10206() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10206");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode0 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int1 = functionNode0.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = functionNode0.getTop();
        boolean boolean3 = functionNode0.hasSideEffects();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int6 = scriptNode5.getEndLineno();
        int int7 = scriptNode5.getBaseLineno();
        com.google.javascript.rhino.head.ast.Jump jump10 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode12 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int13 = scriptNode12.getEndLineno();
        int int14 = scriptNode12.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList15 = scriptNode12.getChildScopes();
        jump10.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode12);
        java.lang.String str17 = scriptNode12.debugPrint();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode5, (com.google.javascript.rhino.head.ast.Scope) scriptNode12);
        com.google.javascript.rhino.head.ast.Scope scope19 = new com.google.javascript.rhino.head.ast.Scope();
        scriptNode12.target = scope19;
        functionNode0.addChildScope(scope19);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode22 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int23 = functionNode22.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode24 = functionNode22.getTop();
        com.google.javascript.rhino.head.ast.Name name25 = null;
        functionNode22.setFunctionName(name25);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode27 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode28 = functionNode27.getTop();
        functionNode22.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode27);
        com.google.javascript.rhino.head.ast.Scope scope32 = new com.google.javascript.rhino.head.ast.Scope((int) (short) -1, 0);
        functionNode22.replaceWith(scope32);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode34 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int35 = functionNode34.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode36 = functionNode34.getTop();
        com.google.javascript.rhino.head.ast.Name name37 = null;
        functionNode34.setFunctionName(name37);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode39 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode40 = functionNode39.getTop();
        functionNode34.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode39);
        int int42 = functionNode22.addFunction(functionNode34);
        int int43 = functionNode0.addFunction(functionNode34);
        com.google.javascript.rhino.head.ast.Name name44 = functionNode34.getFunctionName();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap45 = functionNode34.getSymbolTable();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode47 = new com.google.javascript.rhino.head.ast.FunctionNode((-1));
        boolean boolean48 = functionNode47.isExpressionClosure();
        functionNode34.target = functionNode47;
        java.lang.String str50 = functionNode34.getEncodedSource();
        com.google.javascript.rhino.head.Token.CommentType commentType53 = com.google.javascript.rhino.head.Token.CommentType.HTML;
        com.google.javascript.rhino.head.ast.Comment comment55 = new com.google.javascript.rhino.head.ast.Comment(20, (int) (short) -1, commentType53, "EOF");
        java.lang.String str56 = comment55.getValue();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode57 = comment55.getEnclosingFunction();
        com.google.javascript.rhino.head.Token.CommentType commentType58 = comment55.getCommentType();
        functionNode34.setJsDocNode(comment55);
        java.lang.String str60 = comment55.getValue();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-1) + "'", int1 == (-1));
        org.junit.Assert.assertNotNull(scriptNode2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNull(scopeList15);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str17, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNotNull(scriptNode24);
        org.junit.Assert.assertNotNull(scriptNode28);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertNotNull(scriptNode36);
        org.junit.Assert.assertNotNull(scriptNode40);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertNull(name44);
        org.junit.Assert.assertNull(strMap45);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertTrue("'" + commentType53 + "' != '" + com.google.javascript.rhino.head.Token.CommentType.HTML + "'", commentType53.equals(com.google.javascript.rhino.head.Token.CommentType.HTML));
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "EOF" + "'", str56, "EOF");
        org.junit.Assert.assertNull(functionNode57);
        org.junit.Assert.assertTrue("'" + commentType58 + "' != '" + com.google.javascript.rhino.head.Token.CommentType.HTML + "'", commentType58.equals(com.google.javascript.rhino.head.Token.CommentType.HTML));
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "EOF" + "'", str60, "EOF");
    }

    @Test
    public void test10207() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10207");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 10);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode2 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode3 = functionNode2.getTop();
        functionNode2.setParens((int) (byte) 1, (int) (short) 1);
        functionNode2.setEncodedSourceStart((-1));
        functionNode2.setFunctionIsGetter();
        scope1.addChildToFront((com.google.javascript.rhino.head.Node) functionNode2);
        functionNode2.setRp(19);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int15 = scriptNode14.getEndLineno();
        int int16 = scriptNode14.getBaseLineno();
        com.google.javascript.rhino.head.ast.Jump jump19 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode21 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int22 = scriptNode21.getEndLineno();
        int int23 = scriptNode21.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList24 = scriptNode21.getChildScopes();
        jump19.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode21);
        java.lang.String str26 = scriptNode21.debugPrint();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode14, (com.google.javascript.rhino.head.ast.Scope) scriptNode21);
        com.google.javascript.rhino.head.ast.Scope scope28 = new com.google.javascript.rhino.head.ast.Scope();
        scriptNode21.target = scope28;
        java.lang.String str30 = functionNode2.toStringTree(scriptNode21);
        java.lang.String str32 = scriptNode21.toSource((int) (short) 10);
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap33 = scriptNode21.getSymbolTable();
        int int34 = strMap33.size();
        com.google.javascript.rhino.head.ast.Jump jump39 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump39.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump43 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump39, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode45 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int46 = scriptNode45.getEndLineno();
        int int47 = scriptNode45.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList48 = scriptNode45.getChildScopes();
        com.google.javascript.rhino.head.Node node49 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump39, (com.google.javascript.rhino.head.Node) scriptNode45);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList50 = scriptNode45.getFunctions();
        functionNodeList50.clear();
        functionNodeList50.clear();
        com.google.javascript.rhino.head.ast.Jump jump57 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump57.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump61 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump57, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode63 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int64 = scriptNode63.getEndLineno();
        int int65 = scriptNode63.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList66 = scriptNode63.getChildScopes();
        com.google.javascript.rhino.head.Node node67 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump57, (com.google.javascript.rhino.head.Node) scriptNode63);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList68 = scriptNode63.getFunctions();
        java.util.Spliterator<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeSpliterator69 = functionNodeList68.spliterator();
        int int71 = functionNodeList68.indexOf((java.lang.Object) (byte) 10);
        boolean boolean72 = functionNodeList50.retainAll((java.util.Collection<com.google.javascript.rhino.head.ast.FunctionNode>) functionNodeList68);
        boolean boolean73 = strMap33.containsKey((java.lang.Object) functionNodeList50);
        java.util.Collection<com.google.javascript.rhino.head.ast.Symbol> symbolCollection74 = strMap33.values();
        com.google.javascript.rhino.head.Node node76 = com.google.javascript.rhino.head.Node.newNumber((double) '#');
        com.google.javascript.rhino.head.ast.Symbol symbol77 = strMap33.get((java.lang.Object) '#');
        int int78 = strMap33.size();
        strMap33.clear();
        boolean boolean80 = strMap33.isEmpty();
        com.google.javascript.rhino.head.ast.Symbol symbol82 = new com.google.javascript.rhino.head.ast.Symbol();
        com.google.javascript.rhino.head.Node node83 = symbol82.getNode();
        symbol82.setIndex(4);
        com.google.javascript.rhino.head.ast.Scope scope86 = symbol82.getContainingTable();
        int int87 = symbol82.getDeclType();
        int int88 = symbol82.getIndex();
        int int89 = symbol82.getDeclType();
        com.google.javascript.rhino.head.ast.Symbol symbol90 = strMap33.replace("          /null/", symbol82);
        java.lang.String str91 = symbol82.toString();
        int int92 = symbol82.getIndex();
        org.junit.Assert.assertNotNull(scriptNode3);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNull(scopeList24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str26, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "                    {\n                    }\n" + "'", str32, "                    {\n                    }\n");
        org.junit.Assert.assertNotNull(strMap33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertNull(scopeList48);
        org.junit.Assert.assertNotNull(functionNodeList50);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + (-1) + "'", int64 == (-1));
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + (-1) + "'", int65 == (-1));
        org.junit.Assert.assertNull(scopeList66);
        org.junit.Assert.assertNotNull(functionNodeList68);
        org.junit.Assert.assertNotNull(functionNodeSpliterator69);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + (-1) + "'", int71 == (-1));
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(symbolCollection74);
        org.junit.Assert.assertNotNull(node76);
        org.junit.Assert.assertNull(symbol77);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 0 + "'", int78 == 0);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNull(node83);
        org.junit.Assert.assertNull(scope86);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 0 + "'", int87 == 0);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + 4 + "'", int88 == 4);
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + 0 + "'", int89 == 0);
        org.junit.Assert.assertNull(symbol90);
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + "Symbol (EOF) name=null" + "'", str91, "Symbol (EOF) name=null");
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + 4 + "'", int92 == 4);
    }

    @Test
    public void test10208() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10208");
        com.google.javascript.rhino.head.ast.Jump jump7 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump7.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump11 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump7, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode13 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int14 = scriptNode13.getEndLineno();
        int int15 = scriptNode13.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList16 = scriptNode13.getChildScopes();
        com.google.javascript.rhino.head.Node node17 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump7, (com.google.javascript.rhino.head.Node) scriptNode13);
        boolean boolean18 = node17.hasConsistentReturnUsage();
        int int19 = node17.getType();
        com.google.javascript.rhino.head.ast.Jump jump20 = new com.google.javascript.rhino.head.ast.Jump(23, node17);
        com.google.javascript.rhino.head.Token.CommentType commentType25 = com.google.javascript.rhino.head.Token.CommentType.HTML;
        com.google.javascript.rhino.head.ast.Comment comment27 = new com.google.javascript.rhino.head.ast.Comment(20, 1, commentType25, "109");
        com.google.javascript.rhino.head.ast.Comment comment29 = new com.google.javascript.rhino.head.ast.Comment(136, 15, commentType25, "-1\tSCRIPT -1 1\n");
        com.google.javascript.rhino.head.Token.CommentType commentType34 = com.google.javascript.rhino.head.Token.CommentType.HTML;
        com.google.javascript.rhino.head.ast.Comment comment36 = new com.google.javascript.rhino.head.ast.Comment(20, 1, commentType34, "109");
        com.google.javascript.rhino.head.ast.Comment comment38 = new com.google.javascript.rhino.head.ast.Comment(11, 35, commentType34, "                    109");
        com.google.javascript.rhino.head.Token.CommentType commentType39 = comment38.getCommentType();
        comment29.setCommentType(commentType39);
        com.google.javascript.rhino.head.Node node42 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) jump20, (com.google.javascript.rhino.head.Node) comment29, 8);
        com.google.javascript.rhino.head.ast.RegExpLiteral regExpLiteral45 = new com.google.javascript.rhino.head.ast.RegExpLiteral(0, 6);
        regExpLiteral45.setValue("");
        java.lang.Object obj49 = regExpLiteral45.getProp(101);
        regExpLiteral45.setValue("                    ");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode53 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int54 = functionNode53.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode55 = functionNode53.getTop();
        com.google.javascript.rhino.head.ast.AstNode astNode56 = functionNode53.getBody();
        com.google.javascript.rhino.head.ast.Jump jump62 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump62.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump66 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump62, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode68 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int69 = scriptNode68.getEndLineno();
        int int70 = scriptNode68.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList71 = scriptNode68.getChildScopes();
        com.google.javascript.rhino.head.Node node72 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump62, (com.google.javascript.rhino.head.Node) scriptNode68);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList73 = scriptNode68.getChildScopes();
        com.google.javascript.rhino.head.ast.Jump jump74 = new com.google.javascript.rhino.head.ast.Jump(11, (com.google.javascript.rhino.head.Node) scriptNode68);
        functionNode53.setParent((com.google.javascript.rhino.head.ast.AstNode) scriptNode68);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList76 = functionNode53.getFunctions();
        com.google.javascript.rhino.head.Node node77 = new com.google.javascript.rhino.head.Node((int) (short) 10, (com.google.javascript.rhino.head.Node) functionNode53);
        com.google.javascript.rhino.head.Node node78 = new com.google.javascript.rhino.head.Node((-13), node42, (com.google.javascript.rhino.head.Node) regExpLiteral45, node77);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNull(scopeList16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertTrue("'" + commentType25 + "' != '" + com.google.javascript.rhino.head.Token.CommentType.HTML + "'", commentType25.equals(com.google.javascript.rhino.head.Token.CommentType.HTML));
        org.junit.Assert.assertTrue("'" + commentType34 + "' != '" + com.google.javascript.rhino.head.Token.CommentType.HTML + "'", commentType34.equals(com.google.javascript.rhino.head.Token.CommentType.HTML));
        org.junit.Assert.assertTrue("'" + commentType39 + "' != '" + com.google.javascript.rhino.head.Token.CommentType.HTML + "'", commentType39.equals(com.google.javascript.rhino.head.Token.CommentType.HTML));
        org.junit.Assert.assertNull(obj49);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
        org.junit.Assert.assertNotNull(scriptNode55);
        org.junit.Assert.assertNull(astNode56);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + (-1) + "'", int69 == (-1));
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + (-1) + "'", int70 == (-1));
        org.junit.Assert.assertNull(scopeList71);
        org.junit.Assert.assertNull(scopeList73);
        org.junit.Assert.assertNotNull(functionNodeList76);
    }

    @Test
    public void test10209() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10209");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int2 = scriptNode1.getEndLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode4 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int5 = scriptNode4.getEndLineno();
        scriptNode1.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode4);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode7 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int8 = functionNode7.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode9 = functionNode7.getTop();
        boolean boolean10 = functionNode7.hasSideEffects();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode12 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int13 = scriptNode12.getEndLineno();
        int int14 = scriptNode12.getBaseLineno();
        com.google.javascript.rhino.head.ast.Jump jump17 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode19 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int20 = scriptNode19.getEndLineno();
        int int21 = scriptNode19.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList22 = scriptNode19.getChildScopes();
        jump17.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode19);
        java.lang.String str24 = scriptNode19.debugPrint();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode12, (com.google.javascript.rhino.head.ast.Scope) scriptNode19);
        com.google.javascript.rhino.head.ast.Scope scope26 = new com.google.javascript.rhino.head.ast.Scope();
        scriptNode19.target = scope26;
        functionNode7.addChildScope(scope26);
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode4, (com.google.javascript.rhino.head.ast.Scope) functionNode7);
        int int30 = functionNode7.getFunctionCount();
        com.google.javascript.rhino.head.ast.Name name31 = null;
        functionNode7.setFunctionName(name31);
        int int35 = functionNode7.getIntProp(3, 0);
        functionNode7.setEndLineno(48);
        functionNode7.setEncodedSourceBounds(1579347477, 136);
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor41 = null;
        // The following exception was thrown during execution in test generation
        try {
            functionNode7.visit(nodeVisitor41);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(scriptNode9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertNull(scopeList22);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str24, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
    }

    @Test
    public void test10210() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10210");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode2 = new com.google.javascript.rhino.head.ast.FunctionNode((int) (byte) 100);
        int int3 = functionNode2.getEncodedSourceStart();
        int int4 = functionNode2.getFunctionCount();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode5 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = functionNode5.getTop();
        functionNode5.setParens((int) (byte) 1, (int) (short) 1);
        int int10 = functionNode5.getRp();
        com.google.javascript.rhino.head.Node node12 = new com.google.javascript.rhino.head.Node(17, (com.google.javascript.rhino.head.Node) functionNode2, (com.google.javascript.rhino.head.Node) functionNode5, (int) (short) 0);
        com.google.javascript.rhino.head.ast.Symbol symbol14 = functionNode5.getSymbol("$0");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode15 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int16 = functionNode15.getLp();
        functionNode15.setEncodedSource("");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode19 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.Scope scope21 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 10);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode22 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode23 = functionNode22.getTop();
        functionNode22.setParens((int) (byte) 1, (int) (short) 1);
        functionNode22.setEncodedSourceStart((-1));
        functionNode22.setFunctionIsGetter();
        scope21.addChildToFront((com.google.javascript.rhino.head.Node) functionNode22);
        functionNode19.setBody((com.google.javascript.rhino.head.ast.AstNode) functionNode22);
        int int32 = functionNode15.addFunction(functionNode19);
        functionNode5.setBody((com.google.javascript.rhino.head.ast.AstNode) functionNode15);
        int int34 = functionNode15.getFunctionCount();
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor35 = null;
        // The following exception was thrown during execution in test generation
        try {
            functionNode15.visit(nodeVisitor35);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(scriptNode6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertNull(symbol14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(scriptNode23);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 1 + "'", int34 == 1);
    }

    @Test
    public void test10211() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10211");
        com.google.javascript.rhino.head.ast.Symbol symbol0 = new com.google.javascript.rhino.head.ast.Symbol();
        java.lang.String str1 = symbol0.getName();
        com.google.javascript.rhino.head.Node node2 = symbol0.getNode();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode4 = new com.google.javascript.rhino.head.ast.FunctionNode((-1));
        symbol0.setNode((com.google.javascript.rhino.head.Node) functionNode4);
        java.lang.String str6 = symbol0.getDeclTypeName();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "EOF" + "'", str6, "EOF");
    }

    @Test
    public void test10212() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10212");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode2 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int3 = functionNode2.getLp();
        functionNode2.setLp((int) (short) 1);
        int int8 = functionNode2.getIntProp(4, 26);
        com.google.javascript.rhino.head.ast.Jump jump9 = new com.google.javascript.rhino.head.ast.Jump(3, (com.google.javascript.rhino.head.Node) functionNode2);
        com.google.javascript.rhino.head.Node node10 = new com.google.javascript.rhino.head.Node((int) '4', (com.google.javascript.rhino.head.Node) functionNode2);
        functionNode2.setRequiresActivation();
        com.google.javascript.rhino.head.Node node13 = functionNode2.setType(9);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode14 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int15 = functionNode14.getLp();
        com.google.javascript.rhino.head.ast.Scope scope17 = functionNode14.getDefiningScope("109");
        functionNode14.setIsGenerator();
        boolean boolean19 = functionNode14.isGetter();
        boolean boolean20 = functionNode14.isGenerator();
        functionNode2.setMemberExprNode((com.google.javascript.rhino.head.ast.AstNode) functionNode14);
        boolean boolean22 = functionNode2.hasSideEffects();
        int int23 = functionNode2.getRp();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 26 + "'", int8 == 26);
        org.junit.Assert.assertNotNull(node13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNull(scope17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
    }

    @Test
    public void test10213() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10213");
        com.google.javascript.rhino.head.ast.Jump jump4 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump4.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump8 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump4, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int11 = scriptNode10.getEndLineno();
        int int12 = scriptNode10.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList13 = scriptNode10.getChildScopes();
        com.google.javascript.rhino.head.Node node14 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump4, (com.google.javascript.rhino.head.Node) scriptNode10);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList15 = scriptNode10.getFunctions();
        int int16 = functionNodeList15.size();
        com.google.javascript.rhino.head.ast.Jump jump22 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump22.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump26 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump22, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode28 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int29 = scriptNode28.getEndLineno();
        int int30 = scriptNode28.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList31 = scriptNode28.getChildScopes();
        com.google.javascript.rhino.head.Node node32 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump22, (com.google.javascript.rhino.head.Node) scriptNode28);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList33 = scriptNode28.getFunctions();
        functionNodeList33.clear();
        com.google.javascript.rhino.head.ast.Jump jump39 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump39.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump43 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump39, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode45 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int46 = scriptNode45.getEndLineno();
        int int47 = scriptNode45.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList48 = scriptNode45.getChildScopes();
        com.google.javascript.rhino.head.Node node49 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump39, (com.google.javascript.rhino.head.Node) scriptNode45);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList50 = scriptNode45.getFunctions();
        boolean boolean51 = functionNodeList33.removeAll((java.util.Collection<com.google.javascript.rhino.head.ast.FunctionNode>) functionNodeList50);
        boolean boolean52 = functionNodeList15.addAll(0, (java.util.Collection<com.google.javascript.rhino.head.ast.FunctionNode>) functionNodeList33);
        int int53 = functionNodeList15.size();
        com.google.javascript.rhino.head.ast.Jump jump56 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump56.removeProp((int) 'a');
        com.google.javascript.rhino.head.Node node59 = jump56.getFirstChild();
        boolean boolean60 = functionNodeList15.remove((java.lang.Object) node59);
        functionNodeList15.clear();
        java.util.Spliterator<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeSpliterator62 = functionNodeList15.spliterator();
        java.lang.Object[] objArray63 = functionNodeList15.toArray();
        boolean boolean64 = functionNodeList15.isEmpty();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode66 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int67 = functionNode66.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode68 = functionNode66.getTop();
        boolean boolean69 = functionNode66.hasSideEffects();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList70 = functionNode66.getSymbols();
        functionNode66.setRp(5);
        com.google.javascript.rhino.head.ast.Scope scope73 = functionNode66.getEnclosingScope();
        boolean boolean74 = functionNode66.isExpressionClosure();
        com.google.javascript.rhino.head.ast.Name name75 = functionNode66.getFunctionName();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode77 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int78 = functionNode77.getLp();
        functionNode77.setEncodedSource("");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode81 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int82 = functionNode81.getLp();
        functionNode81.setEncodedSource("");
        functionNode81.flattenSymbolTable(false);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode87 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int88 = functionNode87.getLp();
        com.google.javascript.rhino.head.Node node90 = new com.google.javascript.rhino.head.Node((-1), (com.google.javascript.rhino.head.Node) functionNode77, (com.google.javascript.rhino.head.Node) functionNode81, (com.google.javascript.rhino.head.Node) functionNode87, (int) '#');
        com.google.javascript.rhino.head.ast.AstNode astNode91 = functionNode77.getBody();
        boolean boolean92 = functionNode66.isParam(astNode91);
        // The following exception was thrown during execution in test generation
        try {
            functionNodeList15.add(0, functionNode66);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNull(scopeList13);
        org.junit.Assert.assertNotNull(functionNodeList15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertNull(scopeList31);
        org.junit.Assert.assertNotNull(functionNodeList33);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertNull(scopeList48);
        org.junit.Assert.assertNotNull(functionNodeList50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertNull(node59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(functionNodeSpliterator62);
        org.junit.Assert.assertNotNull(objArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray63), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray63), "[]");
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + (-1) + "'", int67 == (-1));
        org.junit.Assert.assertNotNull(scriptNode68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(symbolList70);
        org.junit.Assert.assertNull(scope73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNull(name75);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + (-1) + "'", int78 == (-1));
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + (-1) + "'", int82 == (-1));
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + (-1) + "'", int88 == (-1));
        org.junit.Assert.assertNull(astNode91);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
    }

    @Test
    public void test10214() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10214");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 10);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode2 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode3 = functionNode2.getTop();
        functionNode2.setParens((int) (byte) 1, (int) (short) 1);
        functionNode2.setEncodedSourceStart((-1));
        functionNode2.setFunctionIsGetter();
        scope1.addChildToFront((com.google.javascript.rhino.head.Node) functionNode2);
        functionNode2.setRp(19);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int15 = scriptNode14.getEndLineno();
        int int16 = scriptNode14.getBaseLineno();
        com.google.javascript.rhino.head.ast.Jump jump19 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode21 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int22 = scriptNode21.getEndLineno();
        int int23 = scriptNode21.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList24 = scriptNode21.getChildScopes();
        jump19.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode21);
        java.lang.String str26 = scriptNode21.debugPrint();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode14, (com.google.javascript.rhino.head.ast.Scope) scriptNode21);
        com.google.javascript.rhino.head.ast.Scope scope28 = new com.google.javascript.rhino.head.ast.Scope();
        scriptNode21.target = scope28;
        java.lang.String str30 = functionNode2.toStringTree(scriptNode21);
        java.lang.String str32 = scriptNode21.toSource((int) (short) 10);
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap33 = scriptNode21.getSymbolTable();
        int int34 = strMap33.size();
        strMap33.clear();
        com.google.javascript.rhino.head.ast.Symbol symbol37 = null;
        com.google.javascript.rhino.head.ast.Symbol symbol38 = strMap33.replace("Symbol (EOF) name=null", symbol37);
        com.google.javascript.rhino.head.ast.Symbol symbol40 = new com.google.javascript.rhino.head.ast.Symbol();
        java.lang.String str41 = symbol40.getDeclTypeName();
        com.google.javascript.rhino.head.ast.Scope scope42 = symbol40.getContainingTable();
        com.google.javascript.rhino.head.ast.Scope scope43 = symbol40.getContainingTable();
        com.google.javascript.rhino.head.ast.Symbol symbol44 = strMap33.putIfAbsent("/=", symbol40);
        int int45 = strMap33.size();
        java.lang.Object obj46 = null;
        com.google.javascript.rhino.head.ast.Symbol symbol47 = strMap33.get(obj46);
        strMap33.clear();
        boolean boolean49 = strMap33.isEmpty();
        boolean boolean50 = strMap33.isEmpty();
        org.junit.Assert.assertNotNull(scriptNode3);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNull(scopeList24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str26, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "                    {\n                    }\n" + "'", str32, "                    {\n                    }\n");
        org.junit.Assert.assertNotNull(strMap33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertNull(symbol38);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "EOF" + "'", str41, "EOF");
        org.junit.Assert.assertNull(scope42);
        org.junit.Assert.assertNull(scope43);
        org.junit.Assert.assertNull(symbol44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 1 + "'", int45 == 1);
        org.junit.Assert.assertNull(symbol47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
    }

    @Test
    public void test10215() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10215");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode0 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int1 = functionNode0.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = functionNode0.getTop();
        boolean boolean3 = functionNode0.hasSideEffects();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int6 = scriptNode5.getEndLineno();
        int int7 = scriptNode5.getBaseLineno();
        com.google.javascript.rhino.head.ast.Jump jump10 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode12 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int13 = scriptNode12.getEndLineno();
        int int14 = scriptNode12.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList15 = scriptNode12.getChildScopes();
        jump10.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode12);
        java.lang.String str17 = scriptNode12.debugPrint();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode5, (com.google.javascript.rhino.head.ast.Scope) scriptNode12);
        com.google.javascript.rhino.head.ast.Scope scope19 = new com.google.javascript.rhino.head.ast.Scope();
        scriptNode12.target = scope19;
        functionNode0.addChildScope(scope19);
        boolean boolean22 = functionNode0.hasConsistentReturnUsage();
        java.util.Map<com.google.javascript.rhino.head.Node, int[]> nodeMap23 = functionNode0.getLiveLocals();
        com.google.javascript.rhino.head.Node node24 = functionNode0.getLastChild();
        java.lang.String str25 = functionNode0.getNextTempName();
        boolean boolean26 = functionNode0.requiresActivation();
        functionNode0.setEncodedSourceStart(32);
        com.google.javascript.rhino.head.ast.Comment comment29 = functionNode0.getJsDocNode();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-1) + "'", int1 == (-1));
        org.junit.Assert.assertNotNull(scriptNode2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNull(scopeList15);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str17, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNull(nodeMap23);
        org.junit.Assert.assertNull(node24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "$0" + "'", str25, "$0");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNull(comment29);
    }

    @Test
    public void test10216() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10216");
        com.google.javascript.rhino.head.ast.Jump jump4 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump4.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump8 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump4, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int11 = scriptNode10.getEndLineno();
        int int12 = scriptNode10.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList13 = scriptNode10.getChildScopes();
        com.google.javascript.rhino.head.Node node14 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump4, (com.google.javascript.rhino.head.Node) scriptNode10);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList15 = scriptNode10.getFunctions();
        int int16 = functionNodeList15.size();
        com.google.javascript.rhino.head.ast.Jump jump22 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump22.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump26 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump22, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode28 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int29 = scriptNode28.getEndLineno();
        int int30 = scriptNode28.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList31 = scriptNode28.getChildScopes();
        com.google.javascript.rhino.head.Node node32 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump22, (com.google.javascript.rhino.head.Node) scriptNode28);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList33 = scriptNode28.getFunctions();
        functionNodeList33.clear();
        com.google.javascript.rhino.head.ast.Jump jump39 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump39.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump43 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump39, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode45 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int46 = scriptNode45.getEndLineno();
        int int47 = scriptNode45.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList48 = scriptNode45.getChildScopes();
        com.google.javascript.rhino.head.Node node49 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump39, (com.google.javascript.rhino.head.Node) scriptNode45);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList50 = scriptNode45.getFunctions();
        boolean boolean51 = functionNodeList33.removeAll((java.util.Collection<com.google.javascript.rhino.head.ast.FunctionNode>) functionNodeList50);
        boolean boolean52 = functionNodeList15.addAll(0, (java.util.Collection<com.google.javascript.rhino.head.ast.FunctionNode>) functionNodeList33);
        int int53 = functionNodeList15.size();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode55 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int56 = scriptNode55.getEndLineno();
        int int57 = scriptNode55.getBaseLineno();
        com.google.javascript.rhino.head.Node node58 = scriptNode55.getNext();
        scriptNode55.setPosition((int) (byte) -1);
        boolean boolean61 = functionNodeList15.contains((java.lang.Object) (byte) -1);
        java.util.ListIterator<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeItor62 = functionNodeList15.listIterator();
        boolean boolean63 = functionNodeList15.isEmpty();
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNull(scopeList13);
        org.junit.Assert.assertNotNull(functionNodeList15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertNull(scopeList31);
        org.junit.Assert.assertNotNull(functionNodeList33);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertNull(scopeList48);
        org.junit.Assert.assertNotNull(functionNodeList50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1));
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
        org.junit.Assert.assertNull(node58);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(functionNodeItor62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
    }

    @Test
    public void test10217() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10217");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode2 = new com.google.javascript.rhino.head.ast.FunctionNode(0);
        int int3 = functionNode2.getBaseLineno();
        boolean boolean4 = functionNode2.isGetter();
        com.google.javascript.rhino.head.ast.RegExpLiteral regExpLiteral6 = new com.google.javascript.rhino.head.ast.RegExpLiteral((int) (short) 1);
        regExpLiteral6.setFlags("-1\tSCRIPT -1 1\n");
        java.lang.String str9 = regExpLiteral6.getValue();
        regExpLiteral6.setFlags("52");
        functionNode2.addChildrenToFront((com.google.javascript.rhino.head.Node) regExpLiteral6);
        boolean boolean13 = functionNode2.isGetterOrSetter();
        com.google.javascript.rhino.head.ast.Jump jump16 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode18 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int19 = scriptNode18.getEndLineno();
        int int20 = scriptNode18.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList21 = scriptNode18.getChildScopes();
        jump16.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode18);
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor23 = scriptNode18.iterator();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode24 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int25 = functionNode24.getLp();
        functionNode24.setEncodedSource("");
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode18, (com.google.javascript.rhino.head.ast.Scope) functionNode24);
        com.google.javascript.rhino.head.Node node29 = new com.google.javascript.rhino.head.Node((int) (byte) 1, (com.google.javascript.rhino.head.Node) functionNode2, (com.google.javascript.rhino.head.Node) scriptNode18);
        functionNode2.setFunctionIsSetter();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode31 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.AstNode astNode32 = functionNode31.getParent();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode33 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode34 = functionNode33.getTop();
        functionNode33.setParens((int) (byte) 1, (int) (short) 1);
        functionNode33.setEncodedSourceStart((-1));
        java.util.List<com.google.javascript.rhino.head.Node> nodeList40 = functionNode33.getResumptionPoints();
        com.google.javascript.rhino.head.ast.Scope scope42 = functionNode33.getDefiningScope("hi!");
        boolean boolean43 = functionNode33.isGetterOrSetter();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode44 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int45 = functionNode44.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode46 = functionNode44.getTop();
        com.google.javascript.rhino.head.ast.Name name47 = null;
        functionNode44.setFunctionName(name47);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode49 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode50 = functionNode49.getTop();
        functionNode44.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode49);
        int int52 = functionNode49.getRp();
        int int53 = functionNode49.getFunctionType();
        int int54 = functionNode33.addFunction(functionNode49);
        functionNode31.setTop((com.google.javascript.rhino.head.ast.ScriptNode) functionNode49);
        functionNode2.addChildrenToBack((com.google.javascript.rhino.head.Node) functionNode49);
        int int57 = functionNode49.getParamCount();
        int int58 = functionNode49.getFunctionType();
        java.lang.String str59 = functionNode49.shortName();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertNull(scopeList21);
        org.junit.Assert.assertNotNull(nodeItor23);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNull(astNode32);
        org.junit.Assert.assertNotNull(scriptNode34);
        org.junit.Assert.assertNull(nodeList40);
        org.junit.Assert.assertNull(scope42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
        org.junit.Assert.assertNotNull(scriptNode46);
        org.junit.Assert.assertNotNull(scriptNode50);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 0 + "'", int57 == 0);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "FunctionNode" + "'", str59, "FunctionNode");
    }

    @Test
    public void test10218() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10218");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode0 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int1 = functionNode0.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = functionNode0.getTop();
        com.google.javascript.rhino.head.ast.Name name3 = null;
        functionNode0.setFunctionName(name3);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode5 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = functionNode5.getTop();
        functionNode0.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode5);
        com.google.javascript.rhino.head.ast.Scope scope10 = new com.google.javascript.rhino.head.ast.Scope((int) (short) -1, 0);
        functionNode0.replaceWith(scope10);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode12 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int13 = functionNode12.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = functionNode12.getTop();
        com.google.javascript.rhino.head.ast.Name name15 = null;
        functionNode12.setFunctionName(name15);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode17 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode18 = functionNode17.getTop();
        functionNode12.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode17);
        int int20 = functionNode0.addFunction(functionNode12);
        int int21 = functionNode12.getLineno();
        functionNode12.setFunctionIsSetter();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str24 = functionNode12.getRegexpFlags((-601958044));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-1) + "'", int1 == (-1));
        org.junit.Assert.assertNotNull(scriptNode2);
        org.junit.Assert.assertNotNull(scriptNode6);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(scriptNode14);
        org.junit.Assert.assertNotNull(scriptNode18);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
    }

    @Test
    public void test10219() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10219");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode1 = new com.google.javascript.rhino.head.ast.FunctionNode(0);
        int int2 = functionNode1.getBaseLineno();
        boolean boolean3 = functionNode1.isGetter();
        com.google.javascript.rhino.head.ast.RegExpLiteral regExpLiteral5 = new com.google.javascript.rhino.head.ast.RegExpLiteral((int) (short) 1);
        regExpLiteral5.setFlags("-1\tSCRIPT -1 1\n");
        java.lang.String str8 = regExpLiteral5.getValue();
        regExpLiteral5.setFlags("52");
        functionNode1.addChildrenToFront((com.google.javascript.rhino.head.Node) regExpLiteral5);
        boolean boolean12 = functionNode1.isGetterOrSetter();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode13 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = functionNode13.getTop();
        int int15 = functionNode13.getRegexpCount();
        int int16 = functionNode13.getParamCount();
        com.google.javascript.rhino.head.ast.AstNode astNode17 = functionNode13.getBody();
        int int18 = functionNode1.addFunction(functionNode13);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode19 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int20 = functionNode19.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode21 = functionNode19.getTop();
        boolean boolean22 = functionNode19.hasSideEffects();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList23 = functionNode19.getSymbols();
        int int24 = functionNode19.getLength();
        boolean boolean25 = functionNode19.isGetterOrSetter();
        functionNode13.addChildrenToFront((com.google.javascript.rhino.head.Node) functionNode19);
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList27 = functionNode19.getParams();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(scriptNode14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNull(astNode17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertNotNull(scriptNode21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(symbolList23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(astNodeList27);
    }

    @Test
    public void test10220() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10220");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int2 = scriptNode1.getEndLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode4 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int5 = scriptNode4.getEndLineno();
        scriptNode1.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode4);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode7 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int8 = functionNode7.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode9 = functionNode7.getTop();
        boolean boolean10 = functionNode7.hasSideEffects();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode12 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int13 = scriptNode12.getEndLineno();
        int int14 = scriptNode12.getBaseLineno();
        com.google.javascript.rhino.head.ast.Jump jump17 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode19 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int20 = scriptNode19.getEndLineno();
        int int21 = scriptNode19.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList22 = scriptNode19.getChildScopes();
        jump17.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode19);
        java.lang.String str24 = scriptNode19.debugPrint();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode12, (com.google.javascript.rhino.head.ast.Scope) scriptNode19);
        com.google.javascript.rhino.head.ast.Scope scope26 = new com.google.javascript.rhino.head.ast.Scope();
        scriptNode19.target = scope26;
        functionNode7.addChildScope(scope26);
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode4, (com.google.javascript.rhino.head.ast.Scope) functionNode7);
        boolean boolean30 = functionNode7.hasConsistentReturnUsage();
        functionNode7.setBounds((-817814412), (-3));
        com.google.javascript.rhino.head.ast.FunctionNode functionNode34 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int35 = functionNode34.getLp();
        functionNode34.setEncodedSource("");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode38 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.Scope scope40 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 10);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode41 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode42 = functionNode41.getTop();
        functionNode41.setParens((int) (byte) 1, (int) (short) 1);
        functionNode41.setEncodedSourceStart((-1));
        functionNode41.setFunctionIsGetter();
        scope40.addChildToFront((com.google.javascript.rhino.head.Node) functionNode41);
        functionNode38.setBody((com.google.javascript.rhino.head.ast.AstNode) functionNode41);
        int int51 = functionNode34.addFunction(functionNode38);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode52 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int53 = functionNode52.getLp();
        functionNode52.setEncodedSource("");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode56 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int57 = functionNode56.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode58 = functionNode56.getTop();
        com.google.javascript.rhino.head.ast.Name name59 = null;
        functionNode56.setFunctionName(name59);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode61 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode62 = functionNode61.getTop();
        functionNode56.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode61);
        int int64 = functionNode61.getRp();
        int int65 = functionNode61.getFunctionType();
        functionNode52.addParam((com.google.javascript.rhino.head.ast.AstNode) functionNode61);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode67 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int68 = functionNode67.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode69 = functionNode67.getTop();
        com.google.javascript.rhino.head.Node node70 = functionNode67.getLastSibling();
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList71 = functionNode67.getParams();
        functionNode52.setParams(astNodeList71);
        functionNode38.setParams(astNodeList71);
        com.google.javascript.rhino.head.ast.Comment comment74 = functionNode38.getJsDocNode();
        int int75 = functionNode7.addFunction(functionNode38);
        com.google.javascript.rhino.head.Node node76 = functionNode38.target;
        functionNode38.setIsGenerator();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(scriptNode9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertNull(scopeList22);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str24, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertNotNull(scriptNode42);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
        org.junit.Assert.assertNotNull(scriptNode58);
        org.junit.Assert.assertNotNull(scriptNode62);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + (-1) + "'", int64 == (-1));
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 0 + "'", int65 == 0);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + (-1) + "'", int68 == (-1));
        org.junit.Assert.assertNotNull(scriptNode69);
        org.junit.Assert.assertNotNull(node70);
        org.junit.Assert.assertNotNull(astNodeList71);
        org.junit.Assert.assertNull(comment74);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 0 + "'", int75 == 0);
        org.junit.Assert.assertNull(node76);
    }

    @Test
    public void test10221() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10221");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        scriptNode1.setEncodedSourceEnd(109);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str5 = scriptNode1.getParamOrVarName(628528643);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
    }

    @Test
    public void test10222() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10222");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int3 = scriptNode2.getEndLineno();
        int int4 = scriptNode2.getBaseLineno();
        com.google.javascript.rhino.head.ast.Jump jump7 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode9 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int10 = scriptNode9.getEndLineno();
        int int11 = scriptNode9.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList12 = scriptNode9.getChildScopes();
        jump7.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode9);
        java.lang.String str14 = scriptNode9.debugPrint();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode2, (com.google.javascript.rhino.head.ast.Scope) scriptNode9);
        com.google.javascript.rhino.head.ast.AstNode astNode16 = scriptNode2.getParent();
        scriptNode2.setSourceName("                    /null/");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode19 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.Scope scope21 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 10);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode22 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode23 = functionNode22.getTop();
        functionNode22.setParens((int) (byte) 1, (int) (short) 1);
        functionNode22.setEncodedSourceStart((-1));
        functionNode22.setFunctionIsGetter();
        scope21.addChildToFront((com.google.javascript.rhino.head.Node) functionNode22);
        functionNode19.setBody((com.google.javascript.rhino.head.ast.AstNode) functionNode22);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode32 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode33 = functionNode32.getTop();
        functionNode32.setParens((int) (byte) 1, (int) (short) 1);
        functionNode32.setEncodedSourceStart((-1));
        java.util.List<com.google.javascript.rhino.head.Node> nodeList39 = functionNode32.getResumptionPoints();
        int int40 = functionNode32.getLp();
        functionNode19.setBody((com.google.javascript.rhino.head.ast.AstNode) functionNode32);
        com.google.javascript.rhino.head.Node node42 = functionNode32.getNext();
        scriptNode2.addChildScope((com.google.javascript.rhino.head.ast.Scope) functionNode32);
        com.google.javascript.rhino.head.ast.Jump jump45 = new com.google.javascript.rhino.head.ast.Jump(13, (com.google.javascript.rhino.head.Node) functionNode32, 22);
        com.google.javascript.rhino.head.Node node47 = jump45.setType((int) (short) 0);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode49 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int50 = functionNode49.getLp();
        functionNode49.setEncodedSource("");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode53 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int54 = functionNode53.getLp();
        functionNode53.setEncodedSource("");
        functionNode53.flattenSymbolTable(false);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode59 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int60 = functionNode59.getLp();
        com.google.javascript.rhino.head.Node node62 = new com.google.javascript.rhino.head.Node((-1), (com.google.javascript.rhino.head.Node) functionNode49, (com.google.javascript.rhino.head.Node) functionNode53, (com.google.javascript.rhino.head.Node) functionNode59, (int) '#');
        com.google.javascript.rhino.head.ast.AstNode astNode63 = functionNode49.getBody();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode64 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int65 = functionNode64.getLp();
        functionNode64.setEncodedSource("");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode68 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int69 = functionNode68.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode70 = functionNode68.getTop();
        com.google.javascript.rhino.head.ast.Name name71 = null;
        functionNode68.setFunctionName(name71);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode73 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode74 = functionNode73.getTop();
        functionNode68.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode73);
        int int76 = functionNode73.getRp();
        int int77 = functionNode73.getFunctionType();
        functionNode64.addParam((com.google.javascript.rhino.head.ast.AstNode) functionNode73);
        com.google.javascript.rhino.head.ast.Scope scope79 = functionNode73.getEnclosingScope();
        functionNode49.setBody((com.google.javascript.rhino.head.ast.AstNode) functionNode73);
        com.google.javascript.rhino.head.ast.AstNode astNode81 = functionNode73.getParent();
        node47.addChildToBack((com.google.javascript.rhino.head.Node) functionNode73);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNull(scopeList12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str14, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertNull(astNode16);
        org.junit.Assert.assertNotNull(scriptNode23);
        org.junit.Assert.assertNotNull(scriptNode33);
        org.junit.Assert.assertNull(nodeList39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 1 + "'", int40 == 1);
        org.junit.Assert.assertNull(node42);
        org.junit.Assert.assertNotNull(node47);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-1) + "'", int60 == (-1));
        org.junit.Assert.assertNull(astNode63);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + (-1) + "'", int65 == (-1));
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + (-1) + "'", int69 == (-1));
        org.junit.Assert.assertNotNull(scriptNode70);
        org.junit.Assert.assertNotNull(scriptNode74);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + (-1) + "'", int76 == (-1));
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 0 + "'", int77 == 0);
        org.junit.Assert.assertNotNull(scope79);
        org.junit.Assert.assertNotNull(astNode81);
    }

    @Test
    public void test10223() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10223");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int2 = scriptNode1.getEndLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode4 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int5 = scriptNode4.getEndLineno();
        scriptNode1.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode4);
        com.google.javascript.rhino.head.ast.Scope scope7 = scriptNode4.getParentScope();
        java.lang.String str9 = scriptNode4.toSource(10);
        int int10 = scriptNode4.getBaseLineno();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNull(scope7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "                    {\n                    }\n" + "'", str9, "                    {\n                    }\n");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
    }

    @Test
    public void test10224() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10224");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int2 = scriptNode1.getEndLineno();
        int int3 = scriptNode1.getBaseLineno();
        com.google.javascript.rhino.head.ast.Jump jump6 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode8 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int9 = scriptNode8.getEndLineno();
        int int10 = scriptNode8.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList11 = scriptNode8.getChildScopes();
        jump6.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode8);
        java.lang.String str13 = scriptNode8.debugPrint();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode1, (com.google.javascript.rhino.head.ast.Scope) scriptNode8);
        com.google.javascript.rhino.head.ast.Scope scope15 = new com.google.javascript.rhino.head.ast.Scope();
        scriptNode8.target = scope15;
        int int17 = scriptNode8.getEncodedSourceStart();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode19 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int20 = scriptNode19.getEndLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode22 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int23 = scriptNode22.getEndLineno();
        scriptNode19.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode22);
        com.google.javascript.rhino.head.ast.Comment comment25 = null;
        scriptNode19.setJsDocNode(comment25);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList27 = scriptNode19.getSymbols();
        scriptNode8.setSymbols(symbolList27);
        boolean boolean29 = scriptNode8.hasSideEffects();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNull(scopeList11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str13, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNotNull(symbolList27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
    }

    @Test
    public void test10225() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10225");
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope(830992929, 12);
        java.lang.String str3 = scope2.shortName();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Scope" + "'", str3, "Scope");
    }

    @Test
    public void test10226() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10226");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode0 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int1 = functionNode0.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = functionNode0.getTop();
        com.google.javascript.rhino.head.ast.Name name3 = null;
        functionNode0.setFunctionName(name3);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode5 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = functionNode5.getTop();
        functionNode0.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode5);
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList8 = functionNode0.getParams();
        functionNode0.setRequiresActivation();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = new com.google.javascript.rhino.head.ast.ScriptNode();
        int int11 = scriptNode10.getEncodedSourceEnd();
        functionNode0.addResumptionPoint((com.google.javascript.rhino.head.Node) scriptNode10);
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator13 = functionNode0.new NodeIterator();
        boolean boolean14 = nodeIterator13.hasNext();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-1) + "'", int1 == (-1));
        org.junit.Assert.assertNotNull(scriptNode2);
        org.junit.Assert.assertNotNull(scriptNode6);
        org.junit.Assert.assertNotNull(astNodeList8);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
    }

    @Test
    public void test10227() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10227");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 10);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode2 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode3 = functionNode2.getTop();
        functionNode2.setParens((int) (byte) 1, (int) (short) 1);
        functionNode2.setEncodedSourceStart((-1));
        functionNode2.setFunctionIsGetter();
        scope1.addChildToFront((com.google.javascript.rhino.head.Node) functionNode2);
        functionNode2.setRp(19);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int15 = scriptNode14.getEndLineno();
        int int16 = scriptNode14.getBaseLineno();
        com.google.javascript.rhino.head.ast.Jump jump19 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode21 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int22 = scriptNode21.getEndLineno();
        int int23 = scriptNode21.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList24 = scriptNode21.getChildScopes();
        jump19.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode21);
        java.lang.String str26 = scriptNode21.debugPrint();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode14, (com.google.javascript.rhino.head.ast.Scope) scriptNode21);
        com.google.javascript.rhino.head.ast.Scope scope28 = new com.google.javascript.rhino.head.ast.Scope();
        scriptNode21.target = scope28;
        java.lang.String str30 = functionNode2.toStringTree(scriptNode21);
        java.lang.String str32 = scriptNode21.toSource((int) (short) 10);
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap33 = scriptNode21.getSymbolTable();
        int int34 = strMap33.size();
        com.google.javascript.rhino.head.ast.Jump jump39 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump39.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump43 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump39, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode45 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int46 = scriptNode45.getEndLineno();
        int int47 = scriptNode45.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList48 = scriptNode45.getChildScopes();
        com.google.javascript.rhino.head.Node node49 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump39, (com.google.javascript.rhino.head.Node) scriptNode45);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList50 = scriptNode45.getFunctions();
        functionNodeList50.clear();
        functionNodeList50.clear();
        com.google.javascript.rhino.head.ast.Jump jump57 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump57.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump61 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump57, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode63 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int64 = scriptNode63.getEndLineno();
        int int65 = scriptNode63.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList66 = scriptNode63.getChildScopes();
        com.google.javascript.rhino.head.Node node67 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump57, (com.google.javascript.rhino.head.Node) scriptNode63);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList68 = scriptNode63.getFunctions();
        java.util.Spliterator<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeSpliterator69 = functionNodeList68.spliterator();
        int int71 = functionNodeList68.indexOf((java.lang.Object) (byte) 10);
        boolean boolean72 = functionNodeList50.retainAll((java.util.Collection<com.google.javascript.rhino.head.ast.FunctionNode>) functionNodeList68);
        boolean boolean73 = strMap33.containsKey((java.lang.Object) functionNodeList50);
        boolean boolean74 = strMap33.isEmpty();
        java.util.Set<java.lang.String> strSet75 = strMap33.keySet();
        boolean boolean77 = strMap33.equals((java.lang.Object) (byte) 0);
        java.util.Set<java.lang.String> strSet78 = strMap33.keySet();
        com.google.javascript.rhino.head.ast.Symbol symbol80 = new com.google.javascript.rhino.head.ast.Symbol();
        symbol80.setIndex(6);
        java.lang.String str83 = symbol80.getDeclTypeName();
        int int84 = symbol80.getDeclType();
        com.google.javascript.rhino.head.ast.Symbol symbol85 = strMap33.replace("/=", symbol80);
        java.util.Collection<com.google.javascript.rhino.head.ast.Symbol> symbolCollection86 = strMap33.values();
        com.google.javascript.rhino.head.ast.Symbol symbol88 = new com.google.javascript.rhino.head.ast.Symbol();
        java.lang.String str89 = symbol88.getName();
        com.google.javascript.rhino.head.Node node90 = symbol88.getNode();
        java.lang.String str91 = symbol88.getDeclTypeName();
        int int92 = symbol88.getIndex();
        com.google.javascript.rhino.head.ast.Symbol symbol93 = null;
        boolean boolean94 = strMap33.replace("                    {\n                      {\n                      }\n                    }\n", symbol88, symbol93);
        strMap33.clear();
        org.junit.Assert.assertNotNull(scriptNode3);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNull(scopeList24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str26, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "                    {\n                    }\n" + "'", str32, "                    {\n                    }\n");
        org.junit.Assert.assertNotNull(strMap33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertNull(scopeList48);
        org.junit.Assert.assertNotNull(functionNodeList50);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + (-1) + "'", int64 == (-1));
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + (-1) + "'", int65 == (-1));
        org.junit.Assert.assertNull(scopeList66);
        org.junit.Assert.assertNotNull(functionNodeList68);
        org.junit.Assert.assertNotNull(functionNodeSpliterator69);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + (-1) + "'", int71 == (-1));
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(strSet75);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(strSet78);
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "EOF" + "'", str83, "EOF");
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 0 + "'", int84 == 0);
        org.junit.Assert.assertNull(symbol85);
        org.junit.Assert.assertNotNull(symbolCollection86);
        org.junit.Assert.assertNull(str89);
        org.junit.Assert.assertNull(node90);
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + "EOF" + "'", str91, "EOF");
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + (-1) + "'", int92 == (-1));
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
    }

    @Test
    public void test10228() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10228");
        com.google.javascript.rhino.head.ast.Jump jump4 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump4.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump8 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump4, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int11 = scriptNode10.getEndLineno();
        int int12 = scriptNode10.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList13 = scriptNode10.getChildScopes();
        com.google.javascript.rhino.head.Node node14 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump4, (com.google.javascript.rhino.head.Node) scriptNode10);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList15 = scriptNode10.getFunctions();
        int int16 = functionNodeList15.size();
        functionNodeList15.clear();
        int int19 = functionNodeList15.indexOf((java.lang.Object) 10L);
        java.util.ListIterator<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeItor20 = functionNodeList15.listIterator();
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNull(scopeList13);
        org.junit.Assert.assertNotNull(functionNodeList15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(functionNodeItor20);
    }

    @Test
    public void test10229() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10229");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode0 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int1 = functionNode0.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = functionNode0.getTop();
        com.google.javascript.rhino.head.ast.Name name3 = null;
        functionNode0.setFunctionName(name3);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode5 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int6 = functionNode5.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode8 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        java.lang.String str9 = functionNode5.toStringTree(scriptNode8);
        functionNode5.setFunctionIsGetter();
        int int11 = functionNode0.addFunction(functionNode5);
        boolean boolean12 = functionNode5.hasSideEffects();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode13 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int14 = functionNode13.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode15 = functionNode13.getTop();
        functionNode5.setBody((com.google.javascript.rhino.head.ast.AstNode) scriptNode15);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode18 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int19 = scriptNode18.getEndLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode21 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int22 = scriptNode21.getEndLineno();
        scriptNode18.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode21);
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator24 = scriptNode18.new NodeIterator();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode15, (com.google.javascript.rhino.head.ast.Scope) scriptNode18);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList26 = scriptNode18.getFunctions();
        java.lang.Object obj27 = null;
        int int28 = functionNodeList26.lastIndexOf(obj27);
        java.util.function.UnaryOperator<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeUnaryOperator29 = null;
        // The following exception was thrown during execution in test generation
        try {
            functionNodeList26.replaceAll(functionNodeUnaryOperator29);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-1) + "'", int1 == (-1));
        org.junit.Assert.assertNotNull(scriptNode2);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNotNull(scriptNode15);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNotNull(functionNodeList26);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
    }

    @Test
    public void test10230() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10230");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode0 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = functionNode0.getTop();
        functionNode0.setParens((int) (byte) 1, (int) (short) 1);
        com.google.javascript.rhino.head.ast.AstNode astNode5 = null;
        functionNode0.setParent(astNode5);
        boolean boolean7 = functionNode0.isGetter();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator8 = functionNode0.spliterator();
        functionNode0.setParens((int) (byte) 10, 35);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode13 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int14 = functionNode13.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode15 = functionNode13.getTop();
        com.google.javascript.rhino.head.ast.Name name16 = null;
        functionNode13.setFunctionName(name16);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode18 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode19 = functionNode18.getTop();
        functionNode13.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode18);
        functionNode18.setIsExpressionClosure(true);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode24 = new com.google.javascript.rhino.head.ast.FunctionNode((int) (byte) 100);
        int int25 = functionNode18.addFunction(functionNode24);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode27 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode28 = functionNode27.getTop();
        java.lang.String str29 = scriptNode28.getJsDoc();
        com.google.javascript.rhino.head.Node node31 = scriptNode28.setType(0);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode32 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int33 = functionNode32.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode35 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        java.lang.String str36 = functionNode32.toStringTree(scriptNode35);
        com.google.javascript.rhino.head.ast.Scope scope38 = scriptNode35.getDefiningScope("");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode40 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int41 = scriptNode40.getEndLineno();
        int int42 = scriptNode40.getBaseLineno();
        com.google.javascript.rhino.head.Node node43 = new com.google.javascript.rhino.head.Node(25, node31, (com.google.javascript.rhino.head.Node) scriptNode35, (com.google.javascript.rhino.head.Node) scriptNode40);
        int int44 = functionNode24.compareTo((com.google.javascript.rhino.head.ast.AstNode) scriptNode35);
        com.google.javascript.rhino.head.ast.RegExpLiteral regExpLiteral46 = new com.google.javascript.rhino.head.ast.RegExpLiteral((int) (short) 1);
        regExpLiteral46.setFlags("-1\tSCRIPT -1 1\n");
        regExpLiteral46.setFlags("/null/-1\tSCRIPT -1 1\n");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode51 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int52 = functionNode51.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode53 = functionNode51.getTop();
        com.google.javascript.rhino.head.ast.Name name54 = null;
        functionNode51.setFunctionName(name54);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode56 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode57 = functionNode56.getTop();
        functionNode51.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode56);
        int int59 = functionNode56.getRp();
        int int60 = functionNode56.getFunctionType();
        boolean boolean61 = functionNode56.requiresActivation();
        com.google.javascript.rhino.head.Node node62 = new com.google.javascript.rhino.head.Node(26, (com.google.javascript.rhino.head.Node) scriptNode35, (com.google.javascript.rhino.head.Node) regExpLiteral46, (com.google.javascript.rhino.head.Node) functionNode56);
        com.google.javascript.rhino.head.Node node63 = scriptNode35.getLastSibling();
        int int64 = scriptNode35.getFunctionCount();
        // The following exception was thrown during execution in test generation
        try {
            functionNode0.setLoop((com.google.javascript.rhino.head.ast.Jump) scriptNode35);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(scriptNode1);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(nodeSpliterator8);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNotNull(scriptNode15);
        org.junit.Assert.assertNotNull(scriptNode19);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(scriptNode28);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNotNull(node31);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNull(scope38);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 1 + "'", int44 == 1);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertNotNull(scriptNode53);
        org.junit.Assert.assertNotNull(scriptNode57);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-1) + "'", int59 == (-1));
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 0 + "'", int60 == 0);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(node63);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 0 + "'", int64 == 0);
    }

    @Test
    public void test10231() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10231");
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope(26, (int) (byte) 100);
        int int3 = scope2.getPosition();
        com.google.javascript.rhino.head.Node node4 = scope2.getLastSibling();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 26 + "'", int3 == 26);
        org.junit.Assert.assertNotNull(node4);
    }

    @Test
    public void test10232() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10232");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode3 = new com.google.javascript.rhino.head.ast.FunctionNode((int) (byte) 100);
        int int4 = functionNode3.getEncodedSourceStart();
        int int5 = functionNode3.getFunctionCount();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode6 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode7 = functionNode6.getTop();
        functionNode6.setParens((int) (byte) 1, (int) (short) 1);
        int int11 = functionNode6.getRp();
        com.google.javascript.rhino.head.Node node13 = new com.google.javascript.rhino.head.Node(17, (com.google.javascript.rhino.head.Node) functionNode3, (com.google.javascript.rhino.head.Node) functionNode6, (int) (short) 0);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode14 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode15 = functionNode14.getTop();
        functionNode14.setParens((int) (byte) 1, (int) (short) 1);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode19 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.Scope scope21 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 10);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode22 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode23 = functionNode22.getTop();
        functionNode22.setParens((int) (byte) 1, (int) (short) 1);
        functionNode22.setEncodedSourceStart((-1));
        functionNode22.setFunctionIsGetter();
        scope21.addChildToFront((com.google.javascript.rhino.head.Node) functionNode22);
        functionNode19.setBody((com.google.javascript.rhino.head.ast.AstNode) functionNode22);
        functionNode19.setFunctionIsSetter();
        int int33 = functionNode14.addFunction(functionNode19);
        functionNode14.setEncodedSourceStart(1);
        boolean boolean36 = functionNode14.isExpressionClosure();
        com.google.javascript.rhino.head.Node node37 = functionNode14.target;
        int int38 = functionNode14.getEncodedSourceStart();
        com.google.javascript.rhino.head.Node node40 = new com.google.javascript.rhino.head.Node(20, (com.google.javascript.rhino.head.Node) functionNode3, (com.google.javascript.rhino.head.Node) functionNode14, 109);
        com.google.javascript.rhino.head.ast.Comment comment41 = functionNode14.getJsDocNode();
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(scriptNode7);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertNotNull(scriptNode15);
        org.junit.Assert.assertNotNull(scriptNode23);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNull(node37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 1 + "'", int38 == 1);
        org.junit.Assert.assertNull(comment41);
    }

    @Test
    public void test10233() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10233");
        com.google.javascript.rhino.head.ast.RegExpLiteral regExpLiteral3 = new com.google.javascript.rhino.head.ast.RegExpLiteral((int) '4', (int) (short) -1);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode4 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int5 = functionNode4.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = functionNode4.getTop();
        boolean boolean7 = functionNode4.hasSideEffects();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode8 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int9 = functionNode8.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = functionNode8.getTop();
        com.google.javascript.rhino.head.ast.Name name11 = null;
        functionNode8.setFunctionName(name11);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode13 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.Scope scope15 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 10);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode16 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode17 = functionNode16.getTop();
        functionNode16.setParens((int) (byte) 1, (int) (short) 1);
        functionNode16.setEncodedSourceStart((-1));
        functionNode16.setFunctionIsGetter();
        scope15.addChildToFront((com.google.javascript.rhino.head.Node) functionNode16);
        functionNode13.setBody((com.google.javascript.rhino.head.ast.AstNode) functionNode16);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode26 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode27 = functionNode26.getTop();
        functionNode26.setParens((int) (byte) 1, (int) (short) 1);
        functionNode26.setEncodedSourceStart((-1));
        java.util.List<com.google.javascript.rhino.head.Node> nodeList33 = functionNode26.getResumptionPoints();
        int int34 = functionNode26.getLp();
        functionNode13.setBody((com.google.javascript.rhino.head.ast.AstNode) functionNode26);
        functionNode8.addParam((com.google.javascript.rhino.head.ast.AstNode) functionNode26);
        com.google.javascript.rhino.head.Node node37 = new com.google.javascript.rhino.head.Node(10, (com.google.javascript.rhino.head.Node) regExpLiteral3, (com.google.javascript.rhino.head.Node) functionNode4, (com.google.javascript.rhino.head.Node) functionNode26);
        int int38 = functionNode26.getRp();
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(scriptNode6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(scriptNode10);
        org.junit.Assert.assertNotNull(scriptNode17);
        org.junit.Assert.assertNotNull(scriptNode27);
        org.junit.Assert.assertNull(nodeList33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 1 + "'", int34 == 1);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 1 + "'", int38 == 1);
    }

    @Test
    public void test10234() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10234");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode1 = new com.google.javascript.rhino.head.ast.FunctionNode(0);
        boolean boolean2 = functionNode1.hasChildren();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList3 = functionNode1.getChildScopes();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(scopeList3);
    }

    @Test
    public void test10235() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10235");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode1 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int2 = functionNode1.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode4 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        java.lang.String str5 = functionNode1.toStringTree(scriptNode4);
        functionNode1.setFunctionIsGetter();
        com.google.javascript.rhino.head.ast.AstNode astNode7 = functionNode1.getBody();
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList8 = functionNode1.getParams();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode10 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int11 = functionNode10.getLp();
        functionNode10.setEncodedSource("");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode14 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int15 = functionNode14.getLp();
        functionNode14.setEncodedSource("");
        functionNode14.flattenSymbolTable(false);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode20 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int21 = functionNode20.getLp();
        com.google.javascript.rhino.head.Node node23 = new com.google.javascript.rhino.head.Node((-1), (com.google.javascript.rhino.head.Node) functionNode10, (com.google.javascript.rhino.head.Node) functionNode14, (com.google.javascript.rhino.head.Node) functionNode20, (int) '#');
        com.google.javascript.rhino.head.ast.Jump jump26 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode28 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int29 = scriptNode28.getEndLineno();
        int int30 = scriptNode28.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList31 = scriptNode28.getChildScopes();
        jump26.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode28);
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor33 = scriptNode28.iterator();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode34 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int35 = functionNode34.getLp();
        functionNode34.setEncodedSource("");
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode28, (com.google.javascript.rhino.head.ast.Scope) functionNode34);
        com.google.javascript.rhino.head.ast.Jump jump43 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump43.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump47 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump43, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode49 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int50 = scriptNode49.getEndLineno();
        int int51 = scriptNode49.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList52 = scriptNode49.getChildScopes();
        com.google.javascript.rhino.head.Node node53 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump43, (com.google.javascript.rhino.head.Node) scriptNode49);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList54 = scriptNode49.getFunctions();
        functionNodeList54.clear();
        int int57 = functionNodeList54.lastIndexOf((java.lang.Object) (-1L));
        com.google.javascript.rhino.head.ast.Jump jump62 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump62.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump66 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump62, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode68 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int69 = scriptNode68.getEndLineno();
        int int70 = scriptNode68.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList71 = scriptNode68.getChildScopes();
        com.google.javascript.rhino.head.Node node72 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump62, (com.google.javascript.rhino.head.Node) scriptNode68);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList73 = scriptNode68.getFunctions();
        functionNodeList73.clear();
        int int76 = functionNodeList73.lastIndexOf((java.lang.Object) (-1L));
        boolean boolean77 = functionNodeList54.removeAll((java.util.Collection<com.google.javascript.rhino.head.ast.FunctionNode>) functionNodeList73);
        com.google.javascript.rhino.head.ast.Jump jump82 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump82.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump86 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump82, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode88 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int89 = scriptNode88.getEndLineno();
        int int90 = scriptNode88.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList91 = scriptNode88.getChildScopes();
        com.google.javascript.rhino.head.Node node92 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump82, (com.google.javascript.rhino.head.Node) scriptNode88);
        com.google.javascript.rhino.head.Node node94 = scriptNode88.setType(0);
        int int95 = functionNodeList73.lastIndexOf((java.lang.Object) scriptNode88);
        functionNode20.addChildAfter((com.google.javascript.rhino.head.Node) functionNode34, (com.google.javascript.rhino.head.Node) scriptNode88);
        int int97 = functionNode34.getRegexpCount();
        com.google.javascript.rhino.head.Node node98 = new com.google.javascript.rhino.head.Node((-18802601), (com.google.javascript.rhino.head.Node) functionNode1, (com.google.javascript.rhino.head.Node) functionNode34);
        // The following exception was thrown during execution in test generation
        try {
            double double99 = functionNode34.getDouble();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: com.google.javascript.rhino.head.ast.FunctionNode cannot be cast to com.google.javascript.rhino.head.ast.NumberLiteral");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(astNode7);
        org.junit.Assert.assertNotNull(astNodeList8);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertNull(scopeList31);
        org.junit.Assert.assertNotNull(nodeItor33);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1));
        org.junit.Assert.assertNull(scopeList52);
        org.junit.Assert.assertNotNull(functionNodeList54);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + (-1) + "'", int69 == (-1));
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + (-1) + "'", int70 == (-1));
        org.junit.Assert.assertNull(scopeList71);
        org.junit.Assert.assertNotNull(functionNodeList73);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + (-1) + "'", int76 == (-1));
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + (-1) + "'", int89 == (-1));
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + (-1) + "'", int90 == (-1));
        org.junit.Assert.assertNull(scopeList91);
        org.junit.Assert.assertNotNull(node94);
        org.junit.Assert.assertTrue("'" + int95 + "' != '" + (-1) + "'", int95 == (-1));
        org.junit.Assert.assertTrue("'" + int97 + "' != '" + 0 + "'", int97 == 0);
    }

    @Test
    public void test10236() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10236");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode1 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = functionNode1.getTop();
        functionNode1.setParens((int) (byte) 1, (int) (short) 1);
        int int6 = functionNode1.getRp();
        int int7 = functionNode1.getAbsolutePosition();
        com.google.javascript.rhino.head.ast.AstNode astNode8 = functionNode1.getMemberExprNode();
        int int9 = functionNode1.getBaseLineno();
        com.google.javascript.rhino.head.ast.Jump jump11 = new com.google.javascript.rhino.head.ast.Jump((-603955719), (com.google.javascript.rhino.head.Node) functionNode1, (-631440296));
        functionNode1.setIsGenerator();
        org.junit.Assert.assertNotNull(scriptNode2);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNull(astNode8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
    }

    @Test
    public void test10237() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10237");
        com.google.javascript.rhino.head.ast.Symbol symbol0 = new com.google.javascript.rhino.head.ast.Symbol();
        symbol0.setIndex(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode4 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int5 = scriptNode4.getEndLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode7 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int8 = scriptNode7.getEndLineno();
        scriptNode4.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode7);
        com.google.javascript.rhino.head.ast.Comment comment10 = null;
        scriptNode4.setJsDocNode(comment10);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList12 = scriptNode4.getSymbols();
        symbol0.setContainingTable((com.google.javascript.rhino.head.ast.Scope) scriptNode4);
        com.google.javascript.rhino.head.ast.Scope scope14 = symbol0.getContainingTable();
        java.lang.String str15 = symbol0.getName();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode16 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int17 = functionNode16.getLp();
        java.util.Map<com.google.javascript.rhino.head.Node, int[]> nodeMap18 = functionNode16.getLiveLocals();
        symbol0.setContainingTable((com.google.javascript.rhino.head.ast.Scope) functionNode16);
        int int20 = symbol0.getIndex();
        int int21 = symbol0.getIndex();
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(symbolList12);
        org.junit.Assert.assertNotNull(scope14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNull(nodeMap18);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 6 + "'", int20 == 6);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 6 + "'", int21 == 6);
    }

    @Test
    public void test10238() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10238");
        com.google.javascript.rhino.head.ast.Jump jump2 = new com.google.javascript.rhino.head.ast.Jump(586615353, (-242022205));
    }

    @Test
    public void test10239() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10239");
        com.google.javascript.rhino.head.ast.Symbol symbol0 = new com.google.javascript.rhino.head.ast.Symbol();
        java.lang.String str1 = symbol0.getDeclTypeName();
        com.google.javascript.rhino.head.ast.Scope scope2 = symbol0.getContainingTable();
        symbol0.setIndex(21);
        int int5 = symbol0.getIndex();
        int int6 = symbol0.getIndex();
        com.google.javascript.rhino.head.ast.Scope scope8 = new com.google.javascript.rhino.head.ast.Scope(24);
        symbol0.setNode((com.google.javascript.rhino.head.Node) scope8);
        int int10 = symbol0.getIndex();
        java.lang.String str11 = symbol0.getDeclTypeName();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "EOF" + "'", str1, "EOF");
        org.junit.Assert.assertNull(scope2);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 21 + "'", int5 == 21);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 21 + "'", int6 == 21);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 21 + "'", int10 == 21);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "EOF" + "'", str11, "EOF");
    }

    @Test
    public void test10240() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10240");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int2 = scriptNode1.getEndLineno();
        com.google.javascript.rhino.head.ast.Symbol symbol4 = scriptNode1.getSymbol("hi!");
        scriptNode1.putIntProp(3, 0);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode8 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int9 = functionNode8.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = functionNode8.getTop();
        com.google.javascript.rhino.head.ast.Name name11 = null;
        functionNode8.setFunctionName(name11);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode13 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = functionNode13.getTop();
        functionNode8.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode13);
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList16 = functionNode8.getParams();
        functionNode8.setRequiresActivation();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode18 = new com.google.javascript.rhino.head.ast.ScriptNode();
        int int19 = scriptNode18.getEncodedSourceEnd();
        functionNode8.addResumptionPoint((com.google.javascript.rhino.head.Node) scriptNode18);
        com.google.javascript.rhino.head.Token.CommentType commentType25 = com.google.javascript.rhino.head.Token.CommentType.HTML;
        com.google.javascript.rhino.head.ast.Comment comment27 = new com.google.javascript.rhino.head.ast.Comment(20, 1, commentType25, "109");
        com.google.javascript.rhino.head.ast.Comment comment29 = new com.google.javascript.rhino.head.ast.Comment(20, 1579347477, commentType25, "$0");
        scriptNode18.setJsDocNode(comment29);
        scriptNode1.setJsDocNode(comment29);
        com.google.javascript.rhino.head.Token.CommentType commentType32 = comment29.getCommentType();
        java.lang.String str33 = comment29.shortName();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertNull(symbol4);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(scriptNode10);
        org.junit.Assert.assertNotNull(scriptNode14);
        org.junit.Assert.assertNotNull(astNodeList16);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertTrue("'" + commentType25 + "' != '" + com.google.javascript.rhino.head.Token.CommentType.HTML + "'", commentType25.equals(com.google.javascript.rhino.head.Token.CommentType.HTML));
        org.junit.Assert.assertTrue("'" + commentType32 + "' != '" + com.google.javascript.rhino.head.Token.CommentType.HTML + "'", commentType32.equals(com.google.javascript.rhino.head.Token.CommentType.HTML));
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "Comment" + "'", str33, "Comment");
    }

    @Test
    public void test10241() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10241");
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.ast.Symbol symbol2 = new com.google.javascript.rhino.head.ast.Symbol((-601958044), "/=");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid declType: -601958044");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test10242() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10242");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode(35);
        scriptNode1.removeProp((int) (byte) 10);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList4 = scriptNode1.getFunctions();
        com.google.javascript.rhino.head.ast.Jump jump9 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump9.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump13 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump9, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode15 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int16 = scriptNode15.getEndLineno();
        int int17 = scriptNode15.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList18 = scriptNode15.getChildScopes();
        com.google.javascript.rhino.head.Node node19 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump9, (com.google.javascript.rhino.head.Node) scriptNode15);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList20 = scriptNode15.getFunctions();
        int int21 = functionNodeList20.size();
        functionNodeList20.clear();
        int int24 = functionNodeList20.indexOf((java.lang.Object) 10L);
        com.google.javascript.rhino.head.ast.Jump jump29 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump29.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump33 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump29, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode35 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int36 = scriptNode35.getEndLineno();
        int int37 = scriptNode35.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList38 = scriptNode35.getChildScopes();
        com.google.javascript.rhino.head.Node node39 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump29, (com.google.javascript.rhino.head.Node) scriptNode35);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList40 = scriptNode35.getFunctions();
        functionNodeList40.clear();
        int int43 = functionNodeList40.lastIndexOf((java.lang.Object) (-1L));
        com.google.javascript.rhino.head.ast.Jump jump48 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump48.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump52 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump48, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode54 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int55 = scriptNode54.getEndLineno();
        int int56 = scriptNode54.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList57 = scriptNode54.getChildScopes();
        com.google.javascript.rhino.head.Node node58 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump48, (com.google.javascript.rhino.head.Node) scriptNode54);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList59 = scriptNode54.getFunctions();
        functionNodeList59.clear();
        int int62 = functionNodeList59.lastIndexOf((java.lang.Object) (-1L));
        boolean boolean63 = functionNodeList40.removeAll((java.util.Collection<com.google.javascript.rhino.head.ast.FunctionNode>) functionNodeList59);
        boolean boolean64 = functionNodeList20.contains((java.lang.Object) boolean63);
        boolean boolean65 = functionNodeList4.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.FunctionNode>) functionNodeList20);
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator66 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.Jump jump71 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump71.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump75 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump71, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode77 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int78 = scriptNode77.getEndLineno();
        int int79 = scriptNode77.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList80 = scriptNode77.getChildScopes();
        com.google.javascript.rhino.head.Node node81 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump71, (com.google.javascript.rhino.head.Node) scriptNode77);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList82 = scriptNode77.getFunctions();
        int int83 = functionNodeList82.size();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator84 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        functionNodeList82.sort((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator84);
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator86 = positionComparator84.reversed();
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator87 = astNodeComparator86.reversed();
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator88 = positionComparator66.thenComparing(astNodeComparator86);
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator89 = positionComparator66.reversed();
        functionNodeList4.sort((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator66);
        org.junit.Assert.assertNotNull(functionNodeList4);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNull(scopeList18);
        org.junit.Assert.assertNotNull(functionNodeList20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertNull(scopeList38);
        org.junit.Assert.assertNotNull(functionNodeList40);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1));
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1));
        org.junit.Assert.assertNull(scopeList57);
        org.junit.Assert.assertNotNull(functionNodeList59);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + (-1) + "'", int62 == (-1));
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + (-1) + "'", int78 == (-1));
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + (-1) + "'", int79 == (-1));
        org.junit.Assert.assertNull(scopeList80);
        org.junit.Assert.assertNotNull(functionNodeList82);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 0 + "'", int83 == 0);
        org.junit.Assert.assertNotNull(astNodeComparator86);
        org.junit.Assert.assertNotNull(astNodeComparator87);
        org.junit.Assert.assertNotNull(astNodeComparator88);
        org.junit.Assert.assertNotNull(astNodeComparator89);
    }

    @Test
    public void test10243() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10243");
        com.google.javascript.rhino.head.Node node2 = new com.google.javascript.rhino.head.Node(671469117, (-802206969));
    }

    @Test
    public void test10244() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10244");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode(35);
        scriptNode1.removeProp((int) (byte) 10);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList4 = scriptNode1.getFunctions();
        com.google.javascript.rhino.head.ast.Jump jump9 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump9.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump13 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump9, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode15 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int16 = scriptNode15.getEndLineno();
        int int17 = scriptNode15.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList18 = scriptNode15.getChildScopes();
        com.google.javascript.rhino.head.Node node19 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump9, (com.google.javascript.rhino.head.Node) scriptNode15);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList20 = scriptNode15.getFunctions();
        int int21 = functionNodeList20.size();
        functionNodeList20.clear();
        int int24 = functionNodeList20.indexOf((java.lang.Object) 10L);
        com.google.javascript.rhino.head.ast.Jump jump29 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump29.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump33 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump29, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode35 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int36 = scriptNode35.getEndLineno();
        int int37 = scriptNode35.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList38 = scriptNode35.getChildScopes();
        com.google.javascript.rhino.head.Node node39 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump29, (com.google.javascript.rhino.head.Node) scriptNode35);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList40 = scriptNode35.getFunctions();
        functionNodeList40.clear();
        int int43 = functionNodeList40.lastIndexOf((java.lang.Object) (-1L));
        com.google.javascript.rhino.head.ast.Jump jump48 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump48.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump52 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump48, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode54 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int55 = scriptNode54.getEndLineno();
        int int56 = scriptNode54.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList57 = scriptNode54.getChildScopes();
        com.google.javascript.rhino.head.Node node58 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump48, (com.google.javascript.rhino.head.Node) scriptNode54);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList59 = scriptNode54.getFunctions();
        functionNodeList59.clear();
        int int62 = functionNodeList59.lastIndexOf((java.lang.Object) (-1L));
        boolean boolean63 = functionNodeList40.removeAll((java.util.Collection<com.google.javascript.rhino.head.ast.FunctionNode>) functionNodeList59);
        boolean boolean64 = functionNodeList20.contains((java.lang.Object) boolean63);
        boolean boolean65 = functionNodeList4.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.FunctionNode>) functionNodeList20);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode67 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int68 = functionNode67.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode69 = functionNode67.getTop();
        com.google.javascript.rhino.head.ast.Name name70 = null;
        functionNode67.setFunctionName(name70);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode72 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode73 = functionNode72.getTop();
        functionNode67.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode72);
        com.google.javascript.rhino.head.ast.Scope scope77 = new com.google.javascript.rhino.head.ast.Scope((int) (short) -1, 0);
        functionNode67.replaceWith(scope77);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode79 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int80 = functionNode79.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode81 = functionNode79.getTop();
        com.google.javascript.rhino.head.ast.Name name82 = null;
        functionNode79.setFunctionName(name82);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode84 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode85 = functionNode84.getTop();
        functionNode79.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode84);
        int int87 = functionNode67.addFunction(functionNode79);
        functionNode67.flattenSymbolTable(false);
        boolean boolean90 = functionNode67.isGenerator();
        boolean boolean91 = functionNode67.hasSideEffects();
        // The following exception was thrown during execution in test generation
        try {
            functionNodeList20.add(5, functionNode67);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(functionNodeList4);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNull(scopeList18);
        org.junit.Assert.assertNotNull(functionNodeList20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertNull(scopeList38);
        org.junit.Assert.assertNotNull(functionNodeList40);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1));
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1));
        org.junit.Assert.assertNull(scopeList57);
        org.junit.Assert.assertNotNull(functionNodeList59);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + (-1) + "'", int62 == (-1));
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + (-1) + "'", int68 == (-1));
        org.junit.Assert.assertNotNull(scriptNode69);
        org.junit.Assert.assertNotNull(scriptNode73);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + (-1) + "'", int80 == (-1));
        org.junit.Assert.assertNotNull(scriptNode81);
        org.junit.Assert.assertNotNull(scriptNode85);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 0 + "'", int87 == 0);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
    }

    @Test
    public void test10245() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10245");
        com.google.javascript.rhino.head.ast.Name name1 = null;
        com.google.javascript.rhino.head.ast.FunctionNode functionNode2 = new com.google.javascript.rhino.head.ast.FunctionNode(301837580, name1);
        com.google.javascript.rhino.head.Node node3 = functionNode2.target;
        int int4 = functionNode2.getLp();
        org.junit.Assert.assertNull(node3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
    }

    @Test
    public void test10246() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10246");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode1 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = functionNode1.getTop();
        com.google.javascript.rhino.head.ast.Name name3 = null;
        functionNode1.setFunctionName(name3);
        boolean boolean5 = functionNode1.requiresActivation();
        com.google.javascript.rhino.head.ast.Jump jump9 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump9.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump13 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump9, 0);
        com.google.javascript.rhino.head.ast.Jump jump17 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump17.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump21 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump17, 0);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode22 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int23 = functionNode22.getLp();
        functionNode22.setEncodedSource("");
        functionNode22.flattenSymbolTable(false);
        jump9.addChildAfter((com.google.javascript.rhino.head.Node) jump17, (com.google.javascript.rhino.head.Node) functionNode22);
        com.google.javascript.rhino.head.Node node29 = functionNode22.target;
        functionNode1.setBody((com.google.javascript.rhino.head.ast.AstNode) functionNode22);
        com.google.javascript.rhino.head.Node node32 = new com.google.javascript.rhino.head.Node(10, (com.google.javascript.rhino.head.Node) functionNode22, 10);
        functionNode22.setFunctionIsSetter();
        functionNode22.setBaseLineno(11);
        com.google.javascript.rhino.head.ast.AstNode astNode36 = functionNode22.getParent();
        functionNode22.setEndLineno(48);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str40 = functionNode22.toSource(10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(scriptNode2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNull(node29);
        org.junit.Assert.assertNotNull(astNode36);
    }

    @Test
    public void test10247() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10247");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode0 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = functionNode0.getTop();
        functionNode0.setParens((int) (byte) 1, (int) (short) 1);
        functionNode0.setEncodedSourceStart((-1));
        java.util.List<com.google.javascript.rhino.head.Node> nodeList7 = functionNode0.getResumptionPoints();
        com.google.javascript.rhino.head.ast.Scope scope9 = functionNode0.getDefiningScope("hi!");
        boolean boolean10 = functionNode0.isGetterOrSetter();
        com.google.javascript.rhino.head.ast.Scope scope12 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 10);
        int[] intArray19 = new int[] { 25, 17, (short) 0, 20, 19, (byte) 1 };
        functionNode0.addLiveLocals((com.google.javascript.rhino.head.Node) scope12, intArray19);
        com.google.javascript.rhino.head.Node node22 = functionNode0.setType(100);
        functionNode0.setIsGenerator();
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor24 = null;
        // The following exception was thrown during execution in test generation
        try {
            functionNode0.visit(nodeVisitor24);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(scriptNode1);
        org.junit.Assert.assertNull(nodeList7);
        org.junit.Assert.assertNull(scope9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[25, 17, 0, 20, 19, 1]");
        org.junit.Assert.assertNotNull(node22);
    }

    @Test
    public void test10248() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10248");
        com.google.javascript.rhino.head.ast.Jump jump1 = new com.google.javascript.rhino.head.ast.Jump((int) (short) 0);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode2 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int3 = functionNode2.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode4 = functionNode2.getTop();
        com.google.javascript.rhino.head.ast.Name name5 = null;
        functionNode2.setFunctionName(name5);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode7 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode8 = functionNode7.getTop();
        functionNode2.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode7);
        functionNode7.setIsExpressionClosure(true);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode13 = new com.google.javascript.rhino.head.ast.FunctionNode((int) (byte) 100);
        int int14 = functionNode7.addFunction(functionNode13);
        int int15 = jump1.compareTo((com.google.javascript.rhino.head.ast.AstNode) functionNode13);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode17 = new com.google.javascript.rhino.head.ast.FunctionNode(0);
        com.google.javascript.rhino.head.ast.Jump jump23 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump23.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump27 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump23, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode29 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int30 = scriptNode29.getEndLineno();
        int int31 = scriptNode29.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList32 = scriptNode29.getChildScopes();
        com.google.javascript.rhino.head.Node node33 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump23, (com.google.javascript.rhino.head.Node) scriptNode29);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList34 = scriptNode29.getFunctions();
        functionNodeList34.clear();
        com.google.javascript.rhino.head.ast.Jump jump40 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump40.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump44 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump40, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode46 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int47 = scriptNode46.getEndLineno();
        int int48 = scriptNode46.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList49 = scriptNode46.getChildScopes();
        com.google.javascript.rhino.head.Node node50 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump40, (com.google.javascript.rhino.head.Node) scriptNode46);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList51 = scriptNode46.getFunctions();
        boolean boolean52 = functionNodeList34.removeAll((java.util.Collection<com.google.javascript.rhino.head.ast.FunctionNode>) functionNodeList51);
        functionNode17.putProp(20, (java.lang.Object) functionNodeList34);
        int int54 = functionNode13.addFunction(functionNode17);
        boolean boolean55 = functionNode17.isGenerator();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode57 = new com.google.javascript.rhino.head.ast.FunctionNode(0);
        int int58 = functionNode57.getBaseLineno();
        boolean boolean59 = functionNode57.isGetter();
        com.google.javascript.rhino.head.ast.RegExpLiteral regExpLiteral61 = new com.google.javascript.rhino.head.ast.RegExpLiteral((int) (short) 1);
        regExpLiteral61.setFlags("-1\tSCRIPT -1 1\n");
        java.lang.String str64 = regExpLiteral61.getValue();
        regExpLiteral61.setFlags("52");
        functionNode57.addChildrenToFront((com.google.javascript.rhino.head.Node) regExpLiteral61);
        functionNode17.addRegExp(regExpLiteral61);
        java.lang.String str69 = functionNode17.shortName();
        int int70 = functionNode17.getRp();
        java.lang.Object obj72 = functionNode17.getProp((-952910496));
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(scriptNode4);
        org.junit.Assert.assertNotNull(scriptNode8);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNull(scopeList32);
        org.junit.Assert.assertNotNull(functionNodeList34);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
        org.junit.Assert.assertNull(scopeList49);
        org.junit.Assert.assertNotNull(functionNodeList51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + (-1) + "'", int58 == (-1));
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNull(str64);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "FunctionNode" + "'", str69, "FunctionNode");
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + (-1) + "'", int70 == (-1));
        org.junit.Assert.assertNull(obj72);
    }

    @Test
    public void test10249() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10249");
        com.google.javascript.rhino.head.Token.CommentType commentType7 = com.google.javascript.rhino.head.Token.CommentType.HTML;
        com.google.javascript.rhino.head.ast.Comment comment9 = new com.google.javascript.rhino.head.ast.Comment(20, 1, commentType7, "109");
        com.google.javascript.rhino.head.ast.Comment comment11 = new com.google.javascript.rhino.head.ast.Comment(136, 15, commentType7, "-1\tSCRIPT -1 1\n");
        com.google.javascript.rhino.head.ast.Comment comment13 = new com.google.javascript.rhino.head.ast.Comment(0, 17, commentType7, "$1");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode15 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int16 = scriptNode15.getEndLineno();
        int int17 = scriptNode15.getBaseLineno();
        com.google.javascript.rhino.head.ast.Jump jump20 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode22 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int23 = scriptNode22.getEndLineno();
        int int24 = scriptNode22.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList25 = scriptNode22.getChildScopes();
        jump20.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode22);
        java.lang.String str27 = scriptNode22.debugPrint();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode15, (com.google.javascript.rhino.head.ast.Scope) scriptNode22);
        com.google.javascript.rhino.head.ast.AstNode astNode29 = scriptNode15.getParent();
        int int30 = scriptNode15.getBaseLineno();
        int int31 = scriptNode15.getBaseLineno();
        com.google.javascript.rhino.head.Node node33 = new com.google.javascript.rhino.head.Node(20, (com.google.javascript.rhino.head.Node) comment13, (com.google.javascript.rhino.head.Node) scriptNode15, 23);
        com.google.javascript.rhino.head.Token.CommentType commentType34 = comment13.getCommentType();
        com.google.javascript.rhino.head.Token.CommentType commentType35 = null;
        comment13.setCommentType(commentType35);
        org.junit.Assert.assertTrue("'" + commentType7 + "' != '" + com.google.javascript.rhino.head.Token.CommentType.HTML + "'", commentType7.equals(com.google.javascript.rhino.head.Token.CommentType.HTML));
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertNull(scopeList25);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str27, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertNull(astNode29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertTrue("'" + commentType34 + "' != '" + com.google.javascript.rhino.head.Token.CommentType.HTML + "'", commentType34.equals(com.google.javascript.rhino.head.Token.CommentType.HTML));
    }

    @Test
    public void test10250() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10250");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode0 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int1 = functionNode0.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode3 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        java.lang.String str4 = functionNode0.toStringTree(scriptNode3);
        java.lang.String str5 = functionNode0.shortName();
        boolean boolean6 = functionNode0.isGetter();
        java.util.List<com.google.javascript.rhino.head.Node> nodeList7 = functionNode0.getResumptionPoints();
        com.google.javascript.rhino.head.ast.Jump jump11 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump11.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump15 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump11, 0);
        com.google.javascript.rhino.head.ast.Jump jump19 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump19.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump23 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump19, 0);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode24 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int25 = functionNode24.getLp();
        functionNode24.setEncodedSource("");
        functionNode24.flattenSymbolTable(false);
        jump11.addChildAfter((com.google.javascript.rhino.head.Node) jump19, (com.google.javascript.rhino.head.Node) functionNode24);
        com.google.javascript.rhino.head.Node node31 = functionNode24.target;
        boolean boolean32 = functionNode24.hasConsistentReturnUsage();
        com.google.javascript.rhino.head.ast.Name name33 = functionNode24.getFunctionName();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode34 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.Scope scope36 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 10);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode37 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode38 = functionNode37.getTop();
        functionNode37.setParens((int) (byte) 1, (int) (short) 1);
        functionNode37.setEncodedSourceStart((-1));
        functionNode37.setFunctionIsGetter();
        scope36.addChildToFront((com.google.javascript.rhino.head.Node) functionNode37);
        functionNode34.setBody((com.google.javascript.rhino.head.ast.AstNode) functionNode37);
        functionNode37.setRelative(0);
        functionNode24.setBody((com.google.javascript.rhino.head.ast.AstNode) functionNode37);
        functionNode24.setEncodedSourceStart((int) (byte) 0);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList52 = functionNode24.getFunctions();
        functionNode0.replaceWith((com.google.javascript.rhino.head.ast.Scope) functionNode24);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-1) + "'", int1 == (-1));
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "FunctionNode" + "'", str5, "FunctionNode");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(nodeList7);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNull(node31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNull(name33);
        org.junit.Assert.assertNotNull(scriptNode38);
        org.junit.Assert.assertNotNull(functionNodeList52);
    }

    @Test
    public void test10251() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10251");
        com.google.javascript.rhino.head.ast.Symbol symbol0 = new com.google.javascript.rhino.head.ast.Symbol();
        symbol0.setIndex(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode4 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int5 = scriptNode4.getEndLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode7 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int8 = scriptNode7.getEndLineno();
        scriptNode4.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode7);
        com.google.javascript.rhino.head.ast.Comment comment10 = null;
        scriptNode4.setJsDocNode(comment10);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList12 = scriptNode4.getSymbols();
        symbol0.setContainingTable((com.google.javascript.rhino.head.ast.Scope) scriptNode4);
        com.google.javascript.rhino.head.ast.Scope scope14 = symbol0.getContainingTable();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode15 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int16 = functionNode15.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode17 = functionNode15.getTop();
        com.google.javascript.rhino.head.Node node18 = functionNode15.getLastSibling();
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList19 = functionNode15.getParams();
        java.lang.String str20 = functionNode15.shortName();
        scope14.target = functionNode15;
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator22 = functionNode15.new NodeIterator();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator23 = functionNode15.new NodeIterator();
        boolean boolean24 = nodeIterator23.hasNext();
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(symbolList12);
        org.junit.Assert.assertNotNull(scope14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(scriptNode17);
        org.junit.Assert.assertNotNull(node18);
        org.junit.Assert.assertNotNull(astNodeList19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "FunctionNode" + "'", str20, "FunctionNode");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    }

    @Test
    public void test10252() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10252");
        java.lang.String str1 = com.google.javascript.rhino.head.ast.AstNode.operatorToString(17);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + ">=" + "'", str1, ">=");
    }

    @Test
    public void test10253() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10253");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode0 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int1 = functionNode0.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = functionNode0.getTop();
        com.google.javascript.rhino.head.ast.Name name3 = null;
        functionNode0.setFunctionName(name3);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode5 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int6 = functionNode5.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode8 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        java.lang.String str9 = functionNode5.toStringTree(scriptNode8);
        functionNode5.setFunctionIsGetter();
        int int11 = functionNode0.addFunction(functionNode5);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode13 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int14 = functionNode13.getLp();
        functionNode13.setEncodedSource("");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode17 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int18 = functionNode17.getLp();
        functionNode17.setEncodedSource("");
        functionNode17.flattenSymbolTable(false);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode23 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int24 = functionNode23.getLp();
        com.google.javascript.rhino.head.Node node26 = new com.google.javascript.rhino.head.Node((-1), (com.google.javascript.rhino.head.Node) functionNode13, (com.google.javascript.rhino.head.Node) functionNode17, (com.google.javascript.rhino.head.Node) functionNode23, (int) '#');
        boolean boolean27 = functionNode23.isGenerator();
        int int28 = functionNode23.getFunctionType();
        com.google.javascript.rhino.head.Node node29 = functionNode23.getFirstChild();
        int int30 = functionNode23.getEncodedSourceStart();
        boolean boolean31 = functionNode23.isGetterOrSetter();
        int int32 = functionNode0.addFunction(functionNode23);
        functionNode0.setBaseLineno(17);
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.ast.Scope scope35 = functionNode0.getScope();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: com.google.javascript.rhino.head.ast.FunctionNode cannot be cast to com.google.javascript.rhino.head.ast.Name");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-1) + "'", int1 == (-1));
        org.junit.Assert.assertNotNull(scriptNode2);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertNull(node29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1 + "'", int32 == 1);
    }

    @Test
    public void test10254() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10254");
        com.google.javascript.rhino.head.ast.Name name1 = null;
        com.google.javascript.rhino.head.ast.FunctionNode functionNode2 = new com.google.javascript.rhino.head.ast.FunctionNode(136, name1);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode4 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int5 = functionNode4.getLp();
        functionNode4.setEncodedSource("");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode8 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int9 = functionNode8.getLp();
        functionNode8.setEncodedSource("");
        functionNode8.flattenSymbolTable(false);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode14 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int15 = functionNode14.getLp();
        com.google.javascript.rhino.head.Node node17 = new com.google.javascript.rhino.head.Node((-1), (com.google.javascript.rhino.head.Node) functionNode4, (com.google.javascript.rhino.head.Node) functionNode8, (com.google.javascript.rhino.head.Node) functionNode14, (int) '#');
        boolean boolean18 = functionNode14.isGenerator();
        int int19 = functionNode14.getFunctionType();
        com.google.javascript.rhino.head.Node node20 = functionNode14.getNext();
        functionNode14.setFunctionIsSetter();
        functionNode14.clearParentScope();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode23 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int24 = functionNode23.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode25 = functionNode23.getTop();
        com.google.javascript.rhino.head.ast.AstNode astNode26 = functionNode23.getBody();
        com.google.javascript.rhino.head.ast.Jump jump32 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump32.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump36 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump32, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode38 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int39 = scriptNode38.getEndLineno();
        int int40 = scriptNode38.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList41 = scriptNode38.getChildScopes();
        com.google.javascript.rhino.head.Node node42 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump32, (com.google.javascript.rhino.head.Node) scriptNode38);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList43 = scriptNode38.getChildScopes();
        com.google.javascript.rhino.head.ast.Jump jump44 = new com.google.javascript.rhino.head.ast.Jump(11, (com.google.javascript.rhino.head.Node) scriptNode38);
        functionNode23.setParent((com.google.javascript.rhino.head.ast.AstNode) scriptNode38);
        scriptNode38.setLength(20);
        functionNode14.addChildScope((com.google.javascript.rhino.head.ast.Scope) scriptNode38);
        functionNode2.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode38);
        functionNode2.putIntProp(0, 796955);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode53 = functionNode2.getEnclosingFunction();
        // The following exception was thrown during execution in test generation
        try {
            functionNode53.setEncodedSourceEnd(21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNull(node20);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertNotNull(scriptNode25);
        org.junit.Assert.assertNull(astNode26);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertNull(scopeList41);
        org.junit.Assert.assertNull(scopeList43);
        org.junit.Assert.assertNull(functionNode53);
    }

    @Test
    public void test10255() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10255");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int2 = scriptNode1.getEndLineno();
        int int3 = scriptNode1.getBaseLineno();
        com.google.javascript.rhino.head.Node node4 = scriptNode1.getNext();
        com.google.javascript.rhino.head.Node node5 = scriptNode1.getFirstChild();
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList6 = scriptNode1.getFunctions();
        com.google.javascript.rhino.head.ast.Jump jump11 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump11.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump15 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump11, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode17 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int18 = scriptNode17.getEndLineno();
        int int19 = scriptNode17.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList20 = scriptNode17.getChildScopes();
        com.google.javascript.rhino.head.Node node21 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump11, (com.google.javascript.rhino.head.Node) scriptNode17);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList22 = scriptNode17.getFunctions();
        int int23 = functionNodeList22.size();
        functionNodeList22.clear();
        int int26 = functionNodeList22.indexOf((java.lang.Object) 10L);
        com.google.javascript.rhino.head.ast.Jump jump31 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump31.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump35 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump31, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode37 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int38 = scriptNode37.getEndLineno();
        int int39 = scriptNode37.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList40 = scriptNode37.getChildScopes();
        com.google.javascript.rhino.head.Node node41 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump31, (com.google.javascript.rhino.head.Node) scriptNode37);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList42 = scriptNode37.getFunctions();
        functionNodeList42.clear();
        functionNodeList42.clear();
        com.google.javascript.rhino.head.ast.Jump jump49 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump49.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump53 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump49, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode55 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int56 = scriptNode55.getEndLineno();
        int int57 = scriptNode55.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList58 = scriptNode55.getChildScopes();
        com.google.javascript.rhino.head.Node node59 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump49, (com.google.javascript.rhino.head.Node) scriptNode55);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList60 = scriptNode55.getFunctions();
        java.util.Spliterator<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeSpliterator61 = functionNodeList60.spliterator();
        int int63 = functionNodeList60.indexOf((java.lang.Object) (byte) 10);
        boolean boolean64 = functionNodeList42.retainAll((java.util.Collection<com.google.javascript.rhino.head.ast.FunctionNode>) functionNodeList60);
        boolean boolean65 = functionNodeList22.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.FunctionNode>) functionNodeList42);
        com.google.javascript.rhino.head.ast.Jump jump70 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump70.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump74 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump70, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode76 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int77 = scriptNode76.getEndLineno();
        int int78 = scriptNode76.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList79 = scriptNode76.getChildScopes();
        com.google.javascript.rhino.head.Node node80 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump70, (com.google.javascript.rhino.head.Node) scriptNode76);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList81 = scriptNode76.getFunctions();
        int int82 = functionNodeList81.size();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator83 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        functionNodeList81.sort((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator83);
        functionNodeList42.sort((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator83);
        boolean boolean86 = functionNodeList6.containsAll((java.util.Collection<com.google.javascript.rhino.head.ast.FunctionNode>) functionNodeList42);
        int int87 = functionNodeList42.size();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode89 = null;
        // The following exception was thrown during execution in test generation
        try {
            functionNodeList42.add((-22), functionNode89);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNull(node4);
        org.junit.Assert.assertNull(node5);
        org.junit.Assert.assertNotNull(functionNodeList6);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNull(scopeList20);
        org.junit.Assert.assertNotNull(functionNodeList22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertNull(scopeList40);
        org.junit.Assert.assertNotNull(functionNodeList42);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1));
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
        org.junit.Assert.assertNull(scopeList58);
        org.junit.Assert.assertNotNull(functionNodeList60);
        org.junit.Assert.assertNotNull(functionNodeSpliterator61);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + (-1) + "'", int63 == (-1));
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + (-1) + "'", int77 == (-1));
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + (-1) + "'", int78 == (-1));
        org.junit.Assert.assertNull(scopeList79);
        org.junit.Assert.assertNotNull(functionNodeList81);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 0 + "'", int82 == 0);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 0 + "'", int87 == 0);
    }

    @Test
    public void test10256() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10256");
        com.google.javascript.rhino.head.ast.Jump jump3 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump3.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump7 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump3, 0);
        com.google.javascript.rhino.head.ast.Jump jump11 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump11.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump15 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump11, 0);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode16 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int17 = functionNode16.getLp();
        functionNode16.setEncodedSource("");
        functionNode16.flattenSymbolTable(false);
        jump3.addChildAfter((com.google.javascript.rhino.head.Node) jump11, (com.google.javascript.rhino.head.Node) functionNode16);
        int int23 = functionNode16.getPosition();
        java.util.Map<com.google.javascript.rhino.head.Node, int[]> nodeMap24 = functionNode16.getLiveLocals();
        int int25 = functionNode16.getType();
        int int26 = functionNode16.getRp();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode29 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int30 = functionNode29.getLp();
        functionNode29.setLp((int) (short) 1);
        int int35 = functionNode29.getIntProp(4, 26);
        com.google.javascript.rhino.head.ast.Jump jump36 = new com.google.javascript.rhino.head.ast.Jump(3, (com.google.javascript.rhino.head.Node) functionNode29);
        com.google.javascript.rhino.head.Node node37 = new com.google.javascript.rhino.head.Node((int) '4', (com.google.javascript.rhino.head.Node) functionNode29);
        functionNode29.setFunctionType(11);
        boolean boolean40 = functionNode29.hasChildren();
        functionNode29.setParens((-1262414679), (int) '#');
        functionNode16.addParam((com.google.javascript.rhino.head.ast.AstNode) functionNode29);
        com.google.javascript.rhino.head.ast.Scope scope45 = functionNode29.getParentScope();
        com.google.javascript.rhino.head.ast.RegExpLiteral regExpLiteral48 = new com.google.javascript.rhino.head.ast.RegExpLiteral(20, 15);
        functionNode29.setMemberExprNode((com.google.javascript.rhino.head.ast.AstNode) regExpLiteral48);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNull(nodeMap24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 109 + "'", int25 == 109);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 26 + "'", int35 == 26);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNull(scope45);
    }

    @Test
    public void test10257() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10257");
        com.google.javascript.rhino.head.ast.Jump jump4 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump4.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump8 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump4, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int11 = scriptNode10.getEndLineno();
        int int12 = scriptNode10.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList13 = scriptNode10.getChildScopes();
        com.google.javascript.rhino.head.Node node14 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump4, (com.google.javascript.rhino.head.Node) scriptNode10);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList15 = scriptNode10.getFunctions();
        java.util.Spliterator<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeSpliterator16 = functionNodeList15.spliterator();
        int int18 = functionNodeList15.indexOf((java.lang.Object) (byte) 10);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode20 = new com.google.javascript.rhino.head.ast.FunctionNode(0);
        int int21 = functionNode20.getBaseLineno();
        functionNode20.setPosition((int) '#');
        com.google.javascript.rhino.head.ast.FunctionNode functionNode25 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode26 = functionNode25.getTop();
        java.lang.String str27 = scriptNode26.getJsDoc();
        com.google.javascript.rhino.head.Node node29 = scriptNode26.setType(0);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode30 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int31 = functionNode30.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode33 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        java.lang.String str34 = functionNode30.toStringTree(scriptNode33);
        com.google.javascript.rhino.head.ast.Scope scope36 = scriptNode33.getDefiningScope("");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode38 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int39 = scriptNode38.getEndLineno();
        int int40 = scriptNode38.getBaseLineno();
        com.google.javascript.rhino.head.Node node41 = new com.google.javascript.rhino.head.Node(25, node29, (com.google.javascript.rhino.head.Node) scriptNode33, (com.google.javascript.rhino.head.Node) scriptNode38);
        functionNode20.setTop(scriptNode33);
        com.google.javascript.rhino.head.ast.Name name43 = null;
        functionNode20.setFunctionName(name43);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode45 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int46 = functionNode45.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode47 = functionNode45.getTop();
        com.google.javascript.rhino.head.ast.Name name48 = null;
        functionNode45.setFunctionName(name48);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode50 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode51 = functionNode50.getTop();
        functionNode45.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode50);
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList53 = functionNode45.getParams();
        functionNode45.setRequiresActivation();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode55 = new com.google.javascript.rhino.head.ast.ScriptNode();
        int int56 = scriptNode55.getEncodedSourceEnd();
        functionNode45.addResumptionPoint((com.google.javascript.rhino.head.Node) scriptNode55);
        java.util.List<com.google.javascript.rhino.head.Node> nodeList58 = functionNode45.getResumptionPoints();
        functionNode20.setBody((com.google.javascript.rhino.head.ast.AstNode) functionNode45);
        boolean boolean60 = functionNodeList15.remove((java.lang.Object) functionNode20);
        java.util.stream.Stream<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeStream61 = functionNodeList15.stream();
        java.lang.Object obj62 = null;
        int int63 = functionNodeList15.indexOf(obj62);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ListIterator<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeItor65 = functionNodeList15.listIterator((-979800144));
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: -979800144, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNull(scopeList13);
        org.junit.Assert.assertNotNull(functionNodeList15);
        org.junit.Assert.assertNotNull(functionNodeSpliterator16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertNotNull(scriptNode26);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(node29);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNull(scope36);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertNotNull(scriptNode47);
        org.junit.Assert.assertNotNull(scriptNode51);
        org.junit.Assert.assertNotNull(astNodeList53);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1));
        org.junit.Assert.assertNotNull(nodeList58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(functionNodeStream61);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + (-1) + "'", int63 == (-1));
    }

    @Test
    public void test10258() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10258");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode0 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = functionNode0.getTop();
        functionNode0.setParens((int) (byte) 1, (int) (short) 1);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode5 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.Scope scope7 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 10);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode8 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode9 = functionNode8.getTop();
        functionNode8.setParens((int) (byte) 1, (int) (short) 1);
        functionNode8.setEncodedSourceStart((-1));
        functionNode8.setFunctionIsGetter();
        scope7.addChildToFront((com.google.javascript.rhino.head.Node) functionNode8);
        functionNode5.setBody((com.google.javascript.rhino.head.ast.AstNode) functionNode8);
        functionNode5.setFunctionIsSetter();
        int int19 = functionNode0.addFunction(functionNode5);
        java.lang.String str20 = functionNode0.getNextTempName();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode22 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int23 = scriptNode22.getEndLineno();
        int int24 = scriptNode22.getBaseLineno();
        scriptNode22.removeProp(0);
        scriptNode22.setEncodedSourceEnd(19);
        functionNode0.addParam((com.google.javascript.rhino.head.ast.AstNode) scriptNode22);
        com.google.javascript.rhino.head.ast.AstRoot astRoot30 = scriptNode22.getAstRoot();
        // The following exception was thrown during execution in test generation
        try {
            int int31 = astRoot30.getParamCount();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(scriptNode1);
        org.junit.Assert.assertNotNull(scriptNode9);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "$0" + "'", str20, "$0");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertNull(astRoot30);
    }

    @Test
    public void test10259() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10259");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode0 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int1 = functionNode0.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = functionNode0.getTop();
        boolean boolean3 = functionNode0.hasSideEffects();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList4 = functionNode0.getSymbols();
        functionNode0.setRp(5);
        com.google.javascript.rhino.head.ast.Scope scope7 = functionNode0.getEnclosingScope();
        int int8 = functionNode0.getRp();
        java.util.List<com.google.javascript.rhino.head.Node> nodeList9 = functionNode0.getResumptionPoints();
        boolean boolean10 = functionNode0.isGetterOrSetter();
        com.google.javascript.rhino.head.ast.AstNode astNode11 = functionNode0.getBody();
        functionNode0.setRp(109);
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList14 = functionNode0.getParams();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-1) + "'", int1 == (-1));
        org.junit.Assert.assertNotNull(scriptNode2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(symbolList4);
        org.junit.Assert.assertNull(scope7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 5 + "'", int8 == 5);
        org.junit.Assert.assertNull(nodeList9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(astNode11);
        org.junit.Assert.assertNotNull(astNodeList14);
    }

    @Test
    public void test10260() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10260");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode1 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int2 = functionNode1.getLp();
        functionNode1.setEncodedSource("");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode5 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int6 = functionNode5.getLp();
        functionNode5.setEncodedSource("");
        functionNode5.flattenSymbolTable(false);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode11 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int12 = functionNode11.getLp();
        com.google.javascript.rhino.head.Node node14 = new com.google.javascript.rhino.head.Node((-1), (com.google.javascript.rhino.head.Node) functionNode1, (com.google.javascript.rhino.head.Node) functionNode5, (com.google.javascript.rhino.head.Node) functionNode11, (int) '#');
        com.google.javascript.rhino.head.ast.Comment comment15 = functionNode11.getJsDocNode();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode16 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.Scope scope18 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 10);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode19 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode20 = functionNode19.getTop();
        functionNode19.setParens((int) (byte) 1, (int) (short) 1);
        functionNode19.setEncodedSourceStart((-1));
        functionNode19.setFunctionIsGetter();
        scope18.addChildToFront((com.google.javascript.rhino.head.Node) functionNode19);
        functionNode16.setBody((com.google.javascript.rhino.head.ast.AstNode) functionNode19);
        boolean boolean29 = functionNode11.isParam((com.google.javascript.rhino.head.ast.AstNode) functionNode16);
        int int30 = functionNode16.getLp();
        functionNode16.setRelative(136);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode33 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode34 = functionNode33.getTop();
        int int35 = functionNode33.getRegexpCount();
        int int36 = functionNode33.getLp();
        functionNode33.setParens((int) '#', 3);
        functionNode16.setCompilerData((java.lang.Object) functionNode33);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode41 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode42 = functionNode41.getTop();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode44 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int45 = functionNode44.getLp();
        functionNode44.setEncodedSource("");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode48 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int49 = functionNode48.getLp();
        functionNode48.setEncodedSource("");
        functionNode48.flattenSymbolTable(false);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode54 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int55 = functionNode54.getLp();
        com.google.javascript.rhino.head.Node node57 = new com.google.javascript.rhino.head.Node((-1), (com.google.javascript.rhino.head.Node) functionNode44, (com.google.javascript.rhino.head.Node) functionNode48, (com.google.javascript.rhino.head.Node) functionNode54, (int) '#');
        com.google.javascript.rhino.head.ast.AstNode astNode58 = functionNode44.getBody();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode59 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int60 = functionNode59.getLp();
        functionNode59.setEncodedSource("");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode63 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int64 = functionNode63.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode65 = functionNode63.getTop();
        com.google.javascript.rhino.head.ast.Name name66 = null;
        functionNode63.setFunctionName(name66);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode68 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode69 = functionNode68.getTop();
        functionNode63.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode68);
        int int71 = functionNode68.getRp();
        int int72 = functionNode68.getFunctionType();
        functionNode59.addParam((com.google.javascript.rhino.head.ast.AstNode) functionNode68);
        com.google.javascript.rhino.head.ast.Scope scope74 = functionNode68.getEnclosingScope();
        functionNode44.setBody((com.google.javascript.rhino.head.ast.AstNode) functionNode68);
        int int76 = functionNode41.addFunction(functionNode44);
        functionNode41.setEncodedSourceEnd(350469479);
        com.google.javascript.rhino.head.ast.Scope scope80 = new com.google.javascript.rhino.head.ast.Scope((int) (byte) -1);
        functionNode41.addChild((com.google.javascript.rhino.head.ast.AstNode) scope80);
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList82 = functionNode41.getParams();
        functionNode33.setParams(astNodeList82);
        com.google.javascript.rhino.head.Node node84 = functionNode33.getLastChild();
        functionNode33.setEncodedSource("40");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNull(comment15);
        org.junit.Assert.assertNotNull(scriptNode20);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertNotNull(scriptNode34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNotNull(scriptNode42);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1));
        org.junit.Assert.assertNull(astNode58);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-1) + "'", int60 == (-1));
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + (-1) + "'", int64 == (-1));
        org.junit.Assert.assertNotNull(scriptNode65);
        org.junit.Assert.assertNotNull(scriptNode69);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + (-1) + "'", int71 == (-1));
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 0 + "'", int72 == 0);
        org.junit.Assert.assertNotNull(scope74);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 0 + "'", int76 == 0);
        org.junit.Assert.assertNotNull(astNodeList82);
        org.junit.Assert.assertNull(node84);
    }

    @Test
    public void test10261() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10261");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 10);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode2 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode3 = functionNode2.getTop();
        functionNode2.setParens((int) (byte) 1, (int) (short) 1);
        functionNode2.setEncodedSourceStart((-1));
        functionNode2.setFunctionIsGetter();
        scope1.addChildToFront((com.google.javascript.rhino.head.Node) functionNode2);
        functionNode2.setRp(19);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int15 = scriptNode14.getEndLineno();
        int int16 = scriptNode14.getBaseLineno();
        com.google.javascript.rhino.head.ast.Jump jump19 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode21 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int22 = scriptNode21.getEndLineno();
        int int23 = scriptNode21.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList24 = scriptNode21.getChildScopes();
        jump19.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode21);
        java.lang.String str26 = scriptNode21.debugPrint();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode14, (com.google.javascript.rhino.head.ast.Scope) scriptNode21);
        com.google.javascript.rhino.head.ast.Scope scope28 = new com.google.javascript.rhino.head.ast.Scope();
        scriptNode21.target = scope28;
        java.lang.String str30 = functionNode2.toStringTree(scriptNode21);
        java.lang.String str32 = scriptNode21.toSource((int) (short) 10);
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap33 = scriptNode21.getSymbolTable();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode34 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int35 = functionNode34.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode36 = functionNode34.getTop();
        com.google.javascript.rhino.head.ast.Name name37 = null;
        functionNode34.setFunctionName(name37);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode39 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode40 = functionNode39.getTop();
        functionNode34.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode39);
        int int42 = functionNode39.getRp();
        java.lang.Object obj43 = functionNode39.getCompilerData();
        boolean boolean44 = strMap33.containsKey(obj43);
        com.google.javascript.rhino.head.ast.Symbol symbol46 = new com.google.javascript.rhino.head.ast.Symbol();
        com.google.javascript.rhino.head.Node node47 = symbol46.getNode();
        symbol46.setIndex(4);
        symbol46.setName("");
        com.google.javascript.rhino.head.ast.Symbol symbol52 = strMap33.replace("21", symbol46);
        strMap33.clear();
        org.junit.Assert.assertNotNull(scriptNode3);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNull(scopeList24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str26, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "                    {\n                    }\n" + "'", str32, "                    {\n                    }\n");
        org.junit.Assert.assertNotNull(strMap33);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertNotNull(scriptNode36);
        org.junit.Assert.assertNotNull(scriptNode40);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertNull(obj43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNull(node47);
        org.junit.Assert.assertNull(symbol52);
    }

    @Test
    public void test10262() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10262");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode0 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = functionNode0.getTop();
        java.lang.String str2 = functionNode0.getName();
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList3 = functionNode0.getFunctions();
        com.google.javascript.rhino.head.ast.Jump jump8 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump8.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump12 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump8, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int15 = scriptNode14.getEndLineno();
        int int16 = scriptNode14.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList17 = scriptNode14.getChildScopes();
        com.google.javascript.rhino.head.Node node18 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump8, (com.google.javascript.rhino.head.Node) scriptNode14);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList19 = scriptNode14.getFunctions();
        int int20 = functionNodeList19.size();
        com.google.javascript.rhino.head.ast.Jump jump26 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump26.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump30 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump26, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode32 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int33 = scriptNode32.getEndLineno();
        int int34 = scriptNode32.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList35 = scriptNode32.getChildScopes();
        com.google.javascript.rhino.head.Node node36 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump26, (com.google.javascript.rhino.head.Node) scriptNode32);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList37 = scriptNode32.getFunctions();
        functionNodeList37.clear();
        com.google.javascript.rhino.head.ast.Jump jump43 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump43.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump47 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump43, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode49 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int50 = scriptNode49.getEndLineno();
        int int51 = scriptNode49.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList52 = scriptNode49.getChildScopes();
        com.google.javascript.rhino.head.Node node53 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump43, (com.google.javascript.rhino.head.Node) scriptNode49);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList54 = scriptNode49.getFunctions();
        boolean boolean55 = functionNodeList37.removeAll((java.util.Collection<com.google.javascript.rhino.head.ast.FunctionNode>) functionNodeList54);
        boolean boolean56 = functionNodeList19.addAll(0, (java.util.Collection<com.google.javascript.rhino.head.ast.FunctionNode>) functionNodeList37);
        int int57 = functionNodeList19.size();
        boolean boolean58 = functionNodeList3.retainAll((java.util.Collection<com.google.javascript.rhino.head.ast.FunctionNode>) functionNodeList19);
        functionNodeList19.clear();
        org.junit.Assert.assertNotNull(scriptNode1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "" + "'", str2, "");
        org.junit.Assert.assertNotNull(functionNodeList3);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNull(scopeList17);
        org.junit.Assert.assertNotNull(functionNodeList19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertNull(scopeList35);
        org.junit.Assert.assertNotNull(functionNodeList37);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1));
        org.junit.Assert.assertNull(scopeList52);
        org.junit.Assert.assertNotNull(functionNodeList54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 0 + "'", int57 == 0);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
    }

    @Test
    public void test10263() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10263");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int2 = scriptNode1.getEndLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode4 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int5 = scriptNode4.getEndLineno();
        scriptNode1.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode4);
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator7 = scriptNode1.new NodeIterator();
        boolean boolean8 = nodeIterator7.hasNext();
        boolean boolean9 = nodeIterator7.hasNext();
        com.google.javascript.rhino.head.Node node10 = nodeIterator7.next();
        nodeIterator7.remove();
        nodeIterator7.remove();
        nodeIterator7.remove();
        boolean boolean14 = nodeIterator7.hasNext();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(node10);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test10264() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10264");
        com.google.javascript.rhino.head.ast.RegExpLiteral regExpLiteral3 = new com.google.javascript.rhino.head.ast.RegExpLiteral((-1), 3);
        java.lang.String str4 = regExpLiteral3.getJsDoc();
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor5 = regExpLiteral3.iterator();
        com.google.javascript.rhino.head.Token.CommentType commentType10 = com.google.javascript.rhino.head.Token.CommentType.HTML;
        com.google.javascript.rhino.head.ast.Comment comment12 = new com.google.javascript.rhino.head.ast.Comment(20, 1, commentType10, "109");
        com.google.javascript.rhino.head.ast.Comment comment14 = new com.google.javascript.rhino.head.ast.Comment(136, 15, commentType10, "-1\tSCRIPT -1 1\n");
        com.google.javascript.rhino.head.Token.CommentType commentType15 = com.google.javascript.rhino.head.Token.CommentType.JSDOC;
        comment14.setCommentType(commentType15);
        com.google.javascript.rhino.head.Token.CommentType commentType17 = com.google.javascript.rhino.head.Token.CommentType.JSDOC;
        comment14.setCommentType(commentType17);
        com.google.javascript.rhino.head.Token.CommentType commentType21 = com.google.javascript.rhino.head.Token.CommentType.HTML;
        com.google.javascript.rhino.head.ast.Comment comment23 = new com.google.javascript.rhino.head.ast.Comment(20, (int) (short) -1, commentType21, "EOF");
        comment14.setCommentType(commentType21);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode25 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode26 = functionNode25.getTop();
        com.google.javascript.rhino.head.ast.AstRoot astRoot27 = functionNode25.getAstRoot();
        com.google.javascript.rhino.head.ast.AstNode astNode28 = functionNode25.getMemberExprNode();
        boolean boolean29 = functionNode25.isSetter();
        int int30 = functionNode25.getFunctionCount();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode31 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int32 = functionNode31.getLp();
        functionNode31.setEncodedSource("");
        functionNode31.flattenSymbolTable(false);
        boolean boolean37 = functionNode31.requiresActivation();
        java.lang.String str38 = functionNode31.getEncodedSource();
        com.google.javascript.rhino.head.Node node40 = functionNode31.setType(19);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode41 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int42 = functionNode41.getLp();
        functionNode41.setEncodedSource("");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode45 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.Scope scope47 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 10);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode48 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode49 = functionNode48.getTop();
        functionNode48.setParens((int) (byte) 1, (int) (short) 1);
        functionNode48.setEncodedSourceStart((-1));
        functionNode48.setFunctionIsGetter();
        scope47.addChildToFront((com.google.javascript.rhino.head.Node) functionNode48);
        functionNode45.setBody((com.google.javascript.rhino.head.ast.AstNode) functionNode48);
        int int58 = functionNode41.addFunction(functionNode45);
        java.lang.Object obj59 = functionNode45.getCompilerData();
        boolean boolean60 = functionNode45.requiresActivation();
        functionNode25.addChildAfter(node40, (com.google.javascript.rhino.head.Node) functionNode45);
        comment14.addChildToFront((com.google.javascript.rhino.head.Node) functionNode25);
        com.google.javascript.rhino.head.Node node63 = new com.google.javascript.rhino.head.Node(14, (com.google.javascript.rhino.head.Node) regExpLiteral3, (com.google.javascript.rhino.head.Node) functionNode25);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode64 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int65 = functionNode64.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode66 = functionNode64.getTop();
        com.google.javascript.rhino.head.ast.Name name67 = null;
        functionNode64.setFunctionName(name67);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode69 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode70 = functionNode69.getTop();
        functionNode64.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode69);
        functionNode69.setIsExpressionClosure(true);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode75 = new com.google.javascript.rhino.head.ast.FunctionNode((int) (byte) 100);
        int int76 = functionNode69.addFunction(functionNode75);
        com.google.javascript.rhino.head.ast.Name name77 = null;
        functionNode69.setFunctionName(name77);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode80 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int81 = functionNode80.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode82 = functionNode80.getTop();
        com.google.javascript.rhino.head.ast.AstNode astNode83 = functionNode80.getBody();
        int int84 = functionNode80.getLength();
        functionNode69.putProp(100, (java.lang.Object) functionNode80);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode86 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int87 = functionNode86.getLp();
        functionNode86.setLp((int) (short) 1);
        int int92 = functionNode86.getIntProp(4, 26);
        functionNode86.flattenSymbolTable(true);
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList95 = functionNode86.getParams();
        functionNode80.setParams(astNodeList95);
        functionNode25.setParams(astNodeList95);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(nodeItor5);
        org.junit.Assert.assertTrue("'" + commentType10 + "' != '" + com.google.javascript.rhino.head.Token.CommentType.HTML + "'", commentType10.equals(com.google.javascript.rhino.head.Token.CommentType.HTML));
        org.junit.Assert.assertTrue("'" + commentType15 + "' != '" + com.google.javascript.rhino.head.Token.CommentType.JSDOC + "'", commentType15.equals(com.google.javascript.rhino.head.Token.CommentType.JSDOC));
        org.junit.Assert.assertTrue("'" + commentType17 + "' != '" + com.google.javascript.rhino.head.Token.CommentType.JSDOC + "'", commentType17.equals(com.google.javascript.rhino.head.Token.CommentType.JSDOC));
        org.junit.Assert.assertTrue("'" + commentType21 + "' != '" + com.google.javascript.rhino.head.Token.CommentType.HTML + "'", commentType21.equals(com.google.javascript.rhino.head.Token.CommentType.HTML));
        org.junit.Assert.assertNotNull(scriptNode26);
        org.junit.Assert.assertNull(astRoot27);
        org.junit.Assert.assertNull(astNode28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "" + "'", str38, "");
        org.junit.Assert.assertNotNull(node40);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertNotNull(scriptNode49);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertNull(obj59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + (-1) + "'", int65 == (-1));
        org.junit.Assert.assertNotNull(scriptNode66);
        org.junit.Assert.assertNotNull(scriptNode70);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 0 + "'", int76 == 0);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + (-1) + "'", int81 == (-1));
        org.junit.Assert.assertNotNull(scriptNode82);
        org.junit.Assert.assertNull(astNode83);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 1 + "'", int84 == 1);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + (-1) + "'", int87 == (-1));
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + 26 + "'", int92 == 26);
        org.junit.Assert.assertNotNull(astNodeList95);
    }

    @Test
    public void test10265() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10265");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode0 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int1 = functionNode0.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = functionNode0.getTop();
        com.google.javascript.rhino.head.ast.Name name3 = null;
        functionNode0.setFunctionName(name3);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode5 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int6 = functionNode5.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode8 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        java.lang.String str9 = functionNode5.toStringTree(scriptNode8);
        functionNode5.setFunctionIsGetter();
        int int11 = functionNode0.addFunction(functionNode5);
        boolean boolean12 = functionNode5.hasSideEffects();
        com.google.javascript.rhino.head.ast.Symbol symbol13 = new com.google.javascript.rhino.head.ast.Symbol();
        java.lang.String str14 = symbol13.getName();
        com.google.javascript.rhino.head.Node node15 = symbol13.getNode();
        java.lang.String str16 = symbol13.getDeclTypeName();
        java.lang.String str17 = symbol13.toString();
        com.google.javascript.rhino.head.ast.Jump jump22 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump22.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump26 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump22, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode28 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int29 = scriptNode28.getEndLineno();
        int int30 = scriptNode28.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList31 = scriptNode28.getChildScopes();
        com.google.javascript.rhino.head.Node node32 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump22, (com.google.javascript.rhino.head.Node) scriptNode28);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList33 = scriptNode28.getFunctions();
        int int34 = functionNodeList33.size();
        com.google.javascript.rhino.head.ast.Jump jump40 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump40.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump44 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump40, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode46 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int47 = scriptNode46.getEndLineno();
        int int48 = scriptNode46.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList49 = scriptNode46.getChildScopes();
        com.google.javascript.rhino.head.Node node50 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump40, (com.google.javascript.rhino.head.Node) scriptNode46);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList51 = scriptNode46.getFunctions();
        functionNodeList51.clear();
        com.google.javascript.rhino.head.ast.Jump jump57 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump57.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump61 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump57, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode63 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int64 = scriptNode63.getEndLineno();
        int int65 = scriptNode63.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList66 = scriptNode63.getChildScopes();
        com.google.javascript.rhino.head.Node node67 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump57, (com.google.javascript.rhino.head.Node) scriptNode63);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList68 = scriptNode63.getFunctions();
        boolean boolean69 = functionNodeList51.removeAll((java.util.Collection<com.google.javascript.rhino.head.ast.FunctionNode>) functionNodeList68);
        boolean boolean70 = functionNodeList33.addAll(0, (java.util.Collection<com.google.javascript.rhino.head.ast.FunctionNode>) functionNodeList51);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode72 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int73 = scriptNode72.getEndLineno();
        com.google.javascript.rhino.head.ast.Symbol symbol75 = scriptNode72.getSymbol("hi!");
        java.lang.String str76 = scriptNode72.getEncodedSource();
        boolean boolean77 = functionNodeList51.remove((java.lang.Object) scriptNode72);
        int int78 = scriptNode72.getFunctionCount();
        symbol13.setContainingTable((com.google.javascript.rhino.head.ast.Scope) scriptNode72);
        com.google.javascript.rhino.head.Node node80 = symbol13.getNode();
        com.google.javascript.rhino.head.Node node81 = symbol13.getNode();
        symbol13.setIndex((int) (byte) 0);
        com.google.javascript.rhino.head.Node node84 = symbol13.getNode();
        // The following exception was thrown during execution in test generation
        try {
            functionNode5.putSymbol(symbol13);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null symbol name");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-1) + "'", int1 == (-1));
        org.junit.Assert.assertNotNull(scriptNode2);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(node15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "EOF" + "'", str16, "EOF");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Symbol (EOF) name=null" + "'", str17, "Symbol (EOF) name=null");
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertNull(scopeList31);
        org.junit.Assert.assertNotNull(functionNodeList33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
        org.junit.Assert.assertNull(scopeList49);
        org.junit.Assert.assertNotNull(functionNodeList51);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + (-1) + "'", int64 == (-1));
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + (-1) + "'", int65 == (-1));
        org.junit.Assert.assertNull(scopeList66);
        org.junit.Assert.assertNotNull(functionNodeList68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + (-1) + "'", int73 == (-1));
        org.junit.Assert.assertNull(symbol75);
        org.junit.Assert.assertNull(str76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 0 + "'", int78 == 0);
        org.junit.Assert.assertNull(node80);
        org.junit.Assert.assertNull(node81);
        org.junit.Assert.assertNull(node84);
    }

    @Test
    public void test10266() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10266");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode1 = new com.google.javascript.rhino.head.ast.FunctionNode(0);
        int int2 = functionNode1.getBaseLineno();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode4 = new com.google.javascript.rhino.head.ast.FunctionNode((-1));
        functionNode1.setParentScope((com.google.javascript.rhino.head.ast.Scope) functionNode4);
        functionNode1.setRelative((-352611807));
        functionNode1.setIsGenerator();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
    }

    @Test
    public void test10267() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10267");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int2 = scriptNode1.getEndLineno();
        int int3 = scriptNode1.getBaseLineno();
        com.google.javascript.rhino.head.Node node4 = scriptNode1.getNext();
        com.google.javascript.rhino.head.Node node5 = scriptNode1.getFirstChild();
        java.lang.String str7 = scriptNode1.toSource(6);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode9 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int10 = functionNode9.getLp();
        functionNode9.setEncodedSource("");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode13 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int14 = functionNode13.getLp();
        functionNode13.setEncodedSource("");
        functionNode13.flattenSymbolTable(false);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode19 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int20 = functionNode19.getLp();
        com.google.javascript.rhino.head.Node node22 = new com.google.javascript.rhino.head.Node((-1), (com.google.javascript.rhino.head.Node) functionNode9, (com.google.javascript.rhino.head.Node) functionNode13, (com.google.javascript.rhino.head.Node) functionNode19, (int) '#');
        com.google.javascript.rhino.head.ast.AstNode astNode23 = functionNode9.getBody();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode24 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int25 = functionNode24.getLp();
        functionNode24.setEncodedSource("");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode28 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int29 = functionNode28.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode30 = functionNode28.getTop();
        com.google.javascript.rhino.head.ast.Name name31 = null;
        functionNode28.setFunctionName(name31);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode33 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode34 = functionNode33.getTop();
        functionNode28.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode33);
        int int36 = functionNode33.getRp();
        int int37 = functionNode33.getFunctionType();
        functionNode24.addParam((com.google.javascript.rhino.head.ast.AstNode) functionNode33);
        com.google.javascript.rhino.head.ast.Scope scope39 = functionNode33.getEnclosingScope();
        functionNode9.setBody((com.google.javascript.rhino.head.ast.AstNode) functionNode33);
        int int41 = functionNode9.getType();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode1, (com.google.javascript.rhino.head.ast.Scope) functionNode9);
        functionNode9.setRequiresActivation();
        functionNode9.setLp((-544960523));
        functionNode9.setEncodedSourceEnd(1237778423);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNull(node4);
        org.junit.Assert.assertNull(node5);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "            {\n            }\n" + "'", str7, "            {\n            }\n");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertNull(astNode23);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertNotNull(scriptNode30);
        org.junit.Assert.assertNotNull(scriptNode34);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertNotNull(scope39);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 109 + "'", int41 == 109);
    }

    @Test
    public void test10268() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10268");
        com.google.javascript.rhino.head.Node node2 = com.google.javascript.rhino.head.Node.newString((int) (short) 0, "/null/                              {\n                              }\n");
        org.junit.Assert.assertNotNull(node2);
    }

    @Test
    public void test10269() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10269");
        com.google.javascript.rhino.head.ast.Symbol symbol0 = new com.google.javascript.rhino.head.ast.Symbol();
        java.lang.String str1 = symbol0.getName();
        com.google.javascript.rhino.head.Node node2 = symbol0.getNode();
        java.lang.String str3 = symbol0.getDeclTypeName();
        java.lang.String str4 = symbol0.toString();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode5 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int6 = functionNode5.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode7 = functionNode5.getTop();
        boolean boolean8 = functionNode5.hasSideEffects();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int11 = scriptNode10.getEndLineno();
        int int12 = scriptNode10.getBaseLineno();
        com.google.javascript.rhino.head.ast.Jump jump15 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode17 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int18 = scriptNode17.getEndLineno();
        int int19 = scriptNode17.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList20 = scriptNode17.getChildScopes();
        jump15.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode17);
        java.lang.String str22 = scriptNode17.debugPrint();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode10, (com.google.javascript.rhino.head.ast.Scope) scriptNode17);
        com.google.javascript.rhino.head.ast.Scope scope24 = new com.google.javascript.rhino.head.ast.Scope();
        scriptNode17.target = scope24;
        functionNode5.addChildScope(scope24);
        boolean boolean27 = functionNode5.hasConsistentReturnUsage();
        java.lang.String str28 = functionNode5.getNextTempName();
        functionNode5.removeProp(5);
        symbol0.setContainingTable((com.google.javascript.rhino.head.ast.Scope) functionNode5);
        symbol0.setIndex(0);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode34 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode35 = functionNode34.getTop();
        java.lang.String str36 = scriptNode35.getJsDoc();
        com.google.javascript.rhino.head.Node node38 = scriptNode35.setType(0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode40 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int41 = scriptNode40.getEndLineno();
        int int42 = scriptNode40.getBaseLineno();
        com.google.javascript.rhino.head.ast.Jump jump45 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode47 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int48 = scriptNode47.getEndLineno();
        int int49 = scriptNode47.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList50 = scriptNode47.getChildScopes();
        jump45.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode47);
        java.lang.String str52 = scriptNode47.debugPrint();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode40, (com.google.javascript.rhino.head.ast.Scope) scriptNode47);
        com.google.javascript.rhino.head.ast.AstNode astNode54 = scriptNode40.getParent();
        int int55 = scriptNode40.getType();
        com.google.javascript.rhino.head.ast.Symbol symbol57 = scriptNode40.getSymbol("109");
        java.lang.String str58 = scriptNode40.toSource();
        int int59 = scriptNode40.getEncodedSourceEnd();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode60 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode61 = functionNode60.getTop();
        functionNode60.setParens((int) (byte) 1, (int) (short) 1);
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor65 = functionNode60.iterator();
        functionNode60.setLp(136);
        int int68 = functionNode60.getFunctionType();
        scriptNode40.addChildrenToBack((com.google.javascript.rhino.head.Node) functionNode60);
        functionNode60.setFunctionType(350469479);
        functionNode60.setSourceName("ScriptNode");
        scriptNode35.addChildScope((com.google.javascript.rhino.head.ast.Scope) functionNode60);
        symbol0.setNode((com.google.javascript.rhino.head.Node) scriptNode35);
        // The following exception was thrown during execution in test generation
        try {
            symbol0.setDeclType(24);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid declType: 24");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "EOF" + "'", str3, "EOF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Symbol (EOF) name=null" + "'", str4, "Symbol (EOF) name=null");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(scriptNode7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNull(scopeList20);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str22, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "$0" + "'", str28, "$0");
        org.junit.Assert.assertNotNull(scriptNode35);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNotNull(node38);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertNull(scopeList50);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str52, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertNull(astNode54);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 136 + "'", int55 == 136);
        org.junit.Assert.assertNull(symbol57);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "{\n}\n" + "'", str58, "{\n}\n");
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-1) + "'", int59 == (-1));
        org.junit.Assert.assertNotNull(scriptNode61);
        org.junit.Assert.assertNotNull(nodeItor65);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 0 + "'", int68 == 0);
    }

    @Test
    public void test10270() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10270");
        com.google.javascript.rhino.head.Node node2 = com.google.javascript.rhino.head.Node.newString((-2), "                                109");
        com.google.javascript.rhino.head.Node node4 = com.google.javascript.rhino.head.Node.newString("                                      109");
        java.lang.String str5 = node4.getJsDoc();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode6 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode7 = functionNode6.getTop();
        functionNode6.setParens((int) (byte) 1, (int) (short) 1);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode11 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.Scope scope13 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 10);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode14 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode15 = functionNode14.getTop();
        functionNode14.setParens((int) (byte) 1, (int) (short) 1);
        functionNode14.setEncodedSourceStart((-1));
        functionNode14.setFunctionIsGetter();
        scope13.addChildToFront((com.google.javascript.rhino.head.Node) functionNode14);
        functionNode11.setBody((com.google.javascript.rhino.head.ast.AstNode) functionNode14);
        functionNode11.setFunctionIsSetter();
        int int25 = functionNode6.addFunction(functionNode11);
        java.lang.String str26 = functionNode6.getNextTempName();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode28 = new com.google.javascript.rhino.head.ast.FunctionNode(0);
        int int29 = functionNode28.getBaseLineno();
        functionNode28.setSourceName("                                                                                                                                                                                                        /null/");
        functionNode28.setRequiresActivation();
        functionNode6.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode28);
        functionNode28.setEncodedSourceEnd((int) (byte) -1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode36 = functionNode28.getTop();
        com.google.javascript.rhino.head.ast.Scope scope39 = new com.google.javascript.rhino.head.ast.Scope(6, 4);
        scope39.setRelative((int) (byte) 0);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode42 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int43 = functionNode42.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode44 = functionNode42.getTop();
        com.google.javascript.rhino.head.ast.Name name45 = null;
        functionNode42.setFunctionName(name45);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode47 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.Scope scope49 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 10);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode50 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode51 = functionNode50.getTop();
        functionNode50.setParens((int) (byte) 1, (int) (short) 1);
        functionNode50.setEncodedSourceStart((-1));
        functionNode50.setFunctionIsGetter();
        scope49.addChildToFront((com.google.javascript.rhino.head.Node) functionNode50);
        functionNode47.setBody((com.google.javascript.rhino.head.ast.AstNode) functionNode50);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode60 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode61 = functionNode60.getTop();
        functionNode60.setParens((int) (byte) 1, (int) (short) 1);
        functionNode60.setEncodedSourceStart((-1));
        java.util.List<com.google.javascript.rhino.head.Node> nodeList67 = functionNode60.getResumptionPoints();
        int int68 = functionNode60.getLp();
        functionNode47.setBody((com.google.javascript.rhino.head.ast.AstNode) functionNode60);
        functionNode42.addParam((com.google.javascript.rhino.head.ast.AstNode) functionNode60);
        com.google.javascript.rhino.head.ast.Scope scope72 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 10);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode73 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode74 = functionNode73.getTop();
        functionNode73.setParens((int) (byte) 1, (int) (short) 1);
        functionNode73.setEncodedSourceStart((-1));
        functionNode73.setFunctionIsGetter();
        scope72.addChildToFront((com.google.javascript.rhino.head.Node) functionNode73);
        int[] intArray87 = new int[] { (byte) 10, 8, 0, 5, (byte) -1 };
        functionNode42.addLiveLocals((com.google.javascript.rhino.head.Node) scope72, intArray87);
        functionNode28.addLiveLocals((com.google.javascript.rhino.head.Node) scope39, intArray87);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList90 = functionNode28.getFunctions();
        functionNode28.setFunctionIsGetter();
        // The following exception was thrown during execution in test generation
        try {
            node2.addChildBefore(node4, (com.google.javascript.rhino.head.Node) functionNode28);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(node2);
        org.junit.Assert.assertNotNull(node4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(scriptNode7);
        org.junit.Assert.assertNotNull(scriptNode15);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "$0" + "'", str26, "$0");
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertNotNull(scriptNode36);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertNotNull(scriptNode44);
        org.junit.Assert.assertNotNull(scriptNode51);
        org.junit.Assert.assertNotNull(scriptNode61);
        org.junit.Assert.assertNull(nodeList67);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 1 + "'", int68 == 1);
        org.junit.Assert.assertNotNull(scriptNode74);
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[10, 8, 0, 5, -1]");
        org.junit.Assert.assertNotNull(functionNodeList90);
    }

    @Test
    public void test10271() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10271");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode1 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int2 = functionNode1.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode3 = functionNode1.getTop();
        boolean boolean4 = functionNode1.hasSideEffects();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int7 = scriptNode6.getEndLineno();
        int int8 = scriptNode6.getBaseLineno();
        com.google.javascript.rhino.head.ast.Jump jump11 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode13 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int14 = scriptNode13.getEndLineno();
        int int15 = scriptNode13.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList16 = scriptNode13.getChildScopes();
        jump11.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode13);
        java.lang.String str18 = scriptNode13.debugPrint();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode6, (com.google.javascript.rhino.head.ast.Scope) scriptNode13);
        com.google.javascript.rhino.head.ast.Scope scope20 = new com.google.javascript.rhino.head.ast.Scope();
        scriptNode13.target = scope20;
        functionNode1.addChildScope(scope20);
        boolean boolean23 = functionNode1.hasConsistentReturnUsage();
        java.lang.String str24 = functionNode1.getNextTempName();
        com.google.javascript.rhino.head.ast.Jump jump25 = new com.google.javascript.rhino.head.ast.Jump((int) (short) -1, (com.google.javascript.rhino.head.Node) functionNode1);
        boolean boolean26 = functionNode1.isExpressionClosure();
        functionNode1.putIntProp(1, 0);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode30 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int31 = functionNode30.getLp();
        functionNode30.setEncodedSource("");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode34 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int35 = functionNode34.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode36 = functionNode34.getTop();
        com.google.javascript.rhino.head.ast.Name name37 = null;
        functionNode34.setFunctionName(name37);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode39 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode40 = functionNode39.getTop();
        functionNode34.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode39);
        int int42 = functionNode39.getRp();
        int int43 = functionNode39.getFunctionType();
        functionNode30.addParam((com.google.javascript.rhino.head.ast.AstNode) functionNode39);
        com.google.javascript.rhino.head.ast.Scope scope45 = functionNode39.getEnclosingScope();
        com.google.javascript.rhino.head.ast.AstNode astNode46 = scope45.getParent();
        com.google.javascript.rhino.head.Node node47 = scope45.getLastSibling();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode48 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int49 = functionNode48.getLp();
        functionNode48.setIsExpressionClosure(false);
        int int52 = functionNode48.getLineno();
        functionNode1.addChildAfter(node47, (com.google.javascript.rhino.head.Node) functionNode48);
        int int54 = functionNode1.getBaseLineno();
        functionNode1.removeChildren();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode56 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.Scope scope58 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 10);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode59 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode60 = functionNode59.getTop();
        functionNode59.setParens((int) (byte) 1, (int) (short) 1);
        functionNode59.setEncodedSourceStart((-1));
        functionNode59.setFunctionIsGetter();
        scope58.addChildToFront((com.google.javascript.rhino.head.Node) functionNode59);
        functionNode56.setBody((com.google.javascript.rhino.head.ast.AstNode) functionNode59);
        functionNode56.setRequiresActivation();
        boolean boolean70 = functionNode56.isExpressionClosure();
        functionNode56.setBounds(26, 4);
        boolean boolean74 = functionNode1.isParam((com.google.javascript.rhino.head.ast.AstNode) functionNode56);
        com.google.javascript.rhino.head.ast.Comment comment75 = functionNode56.getJsDocNode();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode76 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int77 = functionNode76.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode78 = functionNode76.getTop();
        boolean boolean79 = functionNode76.hasSideEffects();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList80 = functionNode76.getSymbols();
        functionNode76.setRp(5);
        com.google.javascript.rhino.head.ast.Scope scope83 = functionNode76.getEnclosingScope();
        functionNode76.setLineno(5);
        functionNode76.setIsExpressionClosure(false);
        functionNode76.setEncodedSourceBounds(0, (-2));
        functionNode76.setLength(12);
        functionNode56.setTop((com.google.javascript.rhino.head.ast.ScriptNode) functionNode76);
        java.lang.Object obj95 = functionNode76.getProp(35);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertNotNull(scriptNode3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNull(scopeList16);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str18, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "$0" + "'", str24, "$0");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertNotNull(scriptNode36);
        org.junit.Assert.assertNotNull(scriptNode40);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertNotNull(scope45);
        org.junit.Assert.assertNull(astNode46);
        org.junit.Assert.assertNotNull(node47);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
        org.junit.Assert.assertNotNull(scriptNode60);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNull(comment75);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + (-1) + "'", int77 == (-1));
        org.junit.Assert.assertNotNull(scriptNode78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(symbolList80);
        org.junit.Assert.assertNull(scope83);
        org.junit.Assert.assertNull(obj95);
    }

    @Test
    public void test10272() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10272");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode0 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int1 = functionNode0.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = functionNode0.getTop();
        com.google.javascript.rhino.head.ast.Name name3 = null;
        functionNode0.setFunctionName(name3);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode5 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = functionNode5.getTop();
        functionNode0.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode5);
        int int8 = functionNode5.getRp();
        functionNode5.setParens(11, 2);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode13 = new com.google.javascript.rhino.head.ast.FunctionNode((-1));
        int int14 = functionNode5.addFunction(functionNode13);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode16 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int17 = scriptNode16.getEndLineno();
        int int18 = scriptNode16.getBaseLineno();
        scriptNode16.removeProp(0);
        scriptNode16.setEncodedSourceEnd(19);
        java.lang.String str23 = scriptNode16.toString();
        int[] intArray25 = new int[] { 26 };
        functionNode5.addLiveLocals((com.google.javascript.rhino.head.Node) scriptNode16, intArray25);
        com.google.javascript.rhino.head.ast.Name name27 = null;
        functionNode5.setFunctionName(name27);
        int int29 = functionNode5.getEncodedSourceStart();
        com.google.javascript.rhino.head.Token.CommentType commentType34 = com.google.javascript.rhino.head.Token.CommentType.HTML;
        com.google.javascript.rhino.head.ast.Comment comment36 = new com.google.javascript.rhino.head.ast.Comment(20, 1, commentType34, "109");
        com.google.javascript.rhino.head.ast.Comment comment38 = new com.google.javascript.rhino.head.ast.Comment(136, 15, commentType34, "-1\tSCRIPT -1 1\n");
        com.google.javascript.rhino.head.Token.CommentType commentType39 = com.google.javascript.rhino.head.Token.CommentType.JSDOC;
        comment38.setCommentType(commentType39);
        com.google.javascript.rhino.head.Token.CommentType commentType41 = com.google.javascript.rhino.head.Token.CommentType.JSDOC;
        comment38.setCommentType(commentType41);
        boolean boolean43 = comment38.hasConsistentReturnUsage();
        // The following exception was thrown during execution in test generation
        try {
            functionNode5.setFinally((com.google.javascript.rhino.head.Node) comment38);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-1) + "'", int1 == (-1));
        org.junit.Assert.assertNotNull(scriptNode2);
        org.junit.Assert.assertNotNull(scriptNode6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "136" + "'", str23, "136");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[26]");
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertTrue("'" + commentType34 + "' != '" + com.google.javascript.rhino.head.Token.CommentType.HTML + "'", commentType34.equals(com.google.javascript.rhino.head.Token.CommentType.HTML));
        org.junit.Assert.assertTrue("'" + commentType39 + "' != '" + com.google.javascript.rhino.head.Token.CommentType.JSDOC + "'", commentType39.equals(com.google.javascript.rhino.head.Token.CommentType.JSDOC));
        org.junit.Assert.assertTrue("'" + commentType41 + "' != '" + com.google.javascript.rhino.head.Token.CommentType.JSDOC + "'", commentType41.equals(com.google.javascript.rhino.head.Token.CommentType.JSDOC));
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
    }

    @Test
    public void test10273() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10273");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode0 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int1 = functionNode0.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = functionNode0.getTop();
        com.google.javascript.rhino.head.ast.Name name3 = null;
        functionNode0.setFunctionName(name3);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode5 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = functionNode5.getTop();
        functionNode0.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode5);
        functionNode5.setIsExpressionClosure(true);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode11 = new com.google.javascript.rhino.head.ast.FunctionNode((int) (byte) 100);
        int int12 = functionNode5.addFunction(functionNode11);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode14 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode15 = functionNode14.getTop();
        java.lang.String str16 = scriptNode15.getJsDoc();
        com.google.javascript.rhino.head.Node node18 = scriptNode15.setType(0);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode19 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int20 = functionNode19.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode22 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        java.lang.String str23 = functionNode19.toStringTree(scriptNode22);
        com.google.javascript.rhino.head.ast.Scope scope25 = scriptNode22.getDefiningScope("");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode27 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int28 = scriptNode27.getEndLineno();
        int int29 = scriptNode27.getBaseLineno();
        com.google.javascript.rhino.head.Node node30 = new com.google.javascript.rhino.head.Node(25, node18, (com.google.javascript.rhino.head.Node) scriptNode22, (com.google.javascript.rhino.head.Node) scriptNode27);
        int int31 = functionNode11.compareTo((com.google.javascript.rhino.head.ast.AstNode) scriptNode22);
        com.google.javascript.rhino.head.ast.Scope scope33 = functionNode11.getDefiningScope("109");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode34 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode35 = functionNode34.getTop();
        functionNode34.setParens((int) (byte) 1, (int) (short) 1);
        int int41 = functionNode34.getIntProp((int) (short) 100, (int) (byte) 10);
        functionNode11.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode34);
        java.lang.Object obj43 = functionNode11.getCompilerData();
        // The following exception was thrown during execution in test generation
        try {
            functionNode11.labelId((int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-1) + "'", int1 == (-1));
        org.junit.Assert.assertNotNull(scriptNode2);
        org.junit.Assert.assertNotNull(scriptNode6);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(scriptNode15);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(node18);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNull(scope25);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 1 + "'", int31 == 1);
        org.junit.Assert.assertNull(scope33);
        org.junit.Assert.assertNotNull(scriptNode35);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 10 + "'", int41 == 10);
        org.junit.Assert.assertNull(obj43);
    }

    @Test
    public void test10274() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10274");
        com.google.javascript.rhino.head.ast.Symbol symbol0 = new com.google.javascript.rhino.head.ast.Symbol();
        symbol0.setIndex(6);
        com.google.javascript.rhino.head.Node node5 = new com.google.javascript.rhino.head.Node(5, (-148907469));
        symbol0.setNode(node5);
    }

    @Test
    public void test10275() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10275");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int2 = scriptNode1.getEndLineno();
        int int3 = scriptNode1.getBaseLineno();
        com.google.javascript.rhino.head.ast.Jump jump6 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode8 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int9 = scriptNode8.getEndLineno();
        int int10 = scriptNode8.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList11 = scriptNode8.getChildScopes();
        jump6.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode8);
        java.lang.String str13 = scriptNode8.debugPrint();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode1, (com.google.javascript.rhino.head.ast.Scope) scriptNode8);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode15 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int16 = functionNode15.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode17 = functionNode15.getTop();
        com.google.javascript.rhino.head.ast.Name name18 = null;
        functionNode15.setFunctionName(name18);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode20 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int21 = functionNode20.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode23 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        java.lang.String str24 = functionNode20.toStringTree(scriptNode23);
        functionNode20.setFunctionIsGetter();
        int int26 = functionNode15.addFunction(functionNode20);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList27 = functionNode15.getSymbols();
        scriptNode8.setSymbols(symbolList27);
        scriptNode8.clearParentScope();
        int int30 = scriptNode8.getBaseLineno();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode32 = new com.google.javascript.rhino.head.ast.FunctionNode(13);
        int int33 = functionNode32.getType();
        scriptNode8.setTop((com.google.javascript.rhino.head.ast.ScriptNode) functionNode32);
        com.google.javascript.rhino.head.Token.CommentType commentType37 = com.google.javascript.rhino.head.Token.CommentType.HTML;
        com.google.javascript.rhino.head.ast.Comment comment39 = new com.google.javascript.rhino.head.ast.Comment(20, 1, commentType37, "109");
        java.lang.String str41 = comment39.toSource(19);
        java.lang.String str42 = comment39.getValue();
        java.lang.String str44 = comment39.toSource(2);
        boolean boolean45 = comment39.hasSideEffects();
        com.google.javascript.rhino.head.Token.CommentType commentType46 = com.google.javascript.rhino.head.Token.CommentType.JSDOC;
        comment39.setCommentType(commentType46);
        java.lang.String str48 = comment39.getValue();
        scriptNode8.addChildToFront((com.google.javascript.rhino.head.Node) comment39);
        comment39.removeChildren();
        java.lang.String str51 = comment39.getValue();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNull(scopeList11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str13, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(scriptNode17);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(symbolList27);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 109 + "'", int33 == 109);
        org.junit.Assert.assertTrue("'" + commentType37 + "' != '" + com.google.javascript.rhino.head.Token.CommentType.HTML + "'", commentType37.equals(com.google.javascript.rhino.head.Token.CommentType.HTML));
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "                                      109" + "'", str41, "                                      109");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "109" + "'", str42, "109");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "    109" + "'", str44, "    109");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + commentType46 + "' != '" + com.google.javascript.rhino.head.Token.CommentType.JSDOC + "'", commentType46.equals(com.google.javascript.rhino.head.Token.CommentType.JSDOC));
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "109" + "'", str48, "109");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "109" + "'", str51, "109");
    }

    @Test
    public void test10276() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10276");
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0, 23);
        com.google.javascript.rhino.head.Node node4 = scope2.setType((-14761645));
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str5 = scope2.getString();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: com.google.javascript.rhino.head.ast.Scope cannot be cast to com.google.javascript.rhino.head.ast.Name");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(node4);
    }

    @Test
    public void test10277() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10277");
        com.google.javascript.rhino.head.ast.Jump jump4 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump4.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump8 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump4, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int11 = scriptNode10.getEndLineno();
        int int12 = scriptNode10.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList13 = scriptNode10.getChildScopes();
        com.google.javascript.rhino.head.Node node14 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump4, (com.google.javascript.rhino.head.Node) scriptNode10);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList15 = scriptNode10.getFunctions();
        functionNodeList15.clear();
        functionNodeList15.clear();
        com.google.javascript.rhino.head.ast.Jump jump22 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump22.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump26 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump22, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode28 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int29 = scriptNode28.getEndLineno();
        int int30 = scriptNode28.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList31 = scriptNode28.getChildScopes();
        com.google.javascript.rhino.head.Node node32 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump22, (com.google.javascript.rhino.head.Node) scriptNode28);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList33 = scriptNode28.getFunctions();
        java.util.Spliterator<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeSpliterator34 = functionNodeList33.spliterator();
        int int36 = functionNodeList33.indexOf((java.lang.Object) (byte) 10);
        boolean boolean37 = functionNodeList15.retainAll((java.util.Collection<com.google.javascript.rhino.head.ast.FunctionNode>) functionNodeList33);
        boolean boolean38 = functionNodeList15.isEmpty();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode40 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int41 = scriptNode40.getEndLineno();
        int int42 = scriptNode40.getBaseLineno();
        com.google.javascript.rhino.head.ast.Jump jump45 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode47 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int48 = scriptNode47.getEndLineno();
        int int49 = scriptNode47.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList50 = scriptNode47.getChildScopes();
        jump45.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode47);
        java.lang.String str52 = scriptNode47.debugPrint();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode40, (com.google.javascript.rhino.head.ast.Scope) scriptNode47);
        int int54 = scriptNode40.getBaseLineno();
        boolean boolean55 = functionNodeList15.equals((java.lang.Object) int54);
        java.util.Iterator<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeItor56 = functionNodeList15.iterator();
        functionNodeList15.clear();
        java.util.Spliterator<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeSpliterator58 = functionNodeList15.spliterator();
        java.util.ListIterator<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeItor59 = functionNodeList15.listIterator();
        java.util.ListIterator<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeItor60 = functionNodeList15.listIterator();
        boolean boolean61 = functionNodeList15.isEmpty();
        java.util.ListIterator<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeItor62 = functionNodeList15.listIterator();
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNull(scopeList13);
        org.junit.Assert.assertNotNull(functionNodeList15);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertNull(scopeList31);
        org.junit.Assert.assertNotNull(functionNodeList33);
        org.junit.Assert.assertNotNull(functionNodeSpliterator34);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertNull(scopeList50);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str52, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(functionNodeItor56);
        org.junit.Assert.assertNotNull(functionNodeSpliterator58);
        org.junit.Assert.assertNotNull(functionNodeItor59);
        org.junit.Assert.assertNotNull(functionNodeItor60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(functionNodeItor62);
    }

    @Test
    public void test10278() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10278");
        com.google.javascript.rhino.head.ast.Symbol symbol0 = new com.google.javascript.rhino.head.ast.Symbol();
        java.lang.String str1 = symbol0.getName();
        java.lang.String str2 = symbol0.toString();
        java.lang.String str3 = symbol0.getDeclTypeName();
        symbol0.setName("FunctionNode");
        // The following exception was thrown during execution in test generation
        try {
            symbol0.setDeclType((-417574879));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid declType: -417574879");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "Symbol (EOF) name=null" + "'", str2, "Symbol (EOF) name=null");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "EOF" + "'", str3, "EOF");
    }

    @Test
    public void test10279() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10279");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode2 = new com.google.javascript.rhino.head.ast.FunctionNode((int) (byte) 100);
        int int3 = functionNode2.getEncodedSourceStart();
        int int4 = functionNode2.getFunctionCount();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode5 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = functionNode5.getTop();
        functionNode5.setParens((int) (byte) 1, (int) (short) 1);
        int int10 = functionNode5.getRp();
        com.google.javascript.rhino.head.Node node12 = new com.google.javascript.rhino.head.Node(17, (com.google.javascript.rhino.head.Node) functionNode2, (com.google.javascript.rhino.head.Node) functionNode5, (int) (short) 0);
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList13 = functionNode5.getStatements();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode14 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int15 = functionNode14.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode17 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        java.lang.String str18 = functionNode14.toStringTree(scriptNode17);
        int int19 = scriptNode17.getRegexpCount();
        java.lang.Object obj20 = scriptNode17.getCompilerData();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode22 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int23 = scriptNode22.getEndLineno();
        int int24 = scriptNode22.getBaseLineno();
        com.google.javascript.rhino.head.ast.Jump jump27 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode29 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int30 = scriptNode29.getEndLineno();
        int int31 = scriptNode29.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList32 = scriptNode29.getChildScopes();
        jump27.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode29);
        java.lang.String str34 = scriptNode29.debugPrint();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode22, (com.google.javascript.rhino.head.ast.Scope) scriptNode29);
        com.google.javascript.rhino.head.ast.Scope scope36 = new com.google.javascript.rhino.head.ast.Scope();
        scriptNode29.target = scope36;
        int int38 = scriptNode29.getEncodedSourceStart();
        java.lang.String str39 = scriptNode17.toStringTree(scriptNode29);
        functionNode5.setCompilerData((java.lang.Object) scriptNode29);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode41 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int42 = functionNode41.getLp();
        functionNode41.setEncodedSource("");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode45 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.Scope scope47 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 10);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode48 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode49 = functionNode48.getTop();
        functionNode48.setParens((int) (byte) 1, (int) (short) 1);
        functionNode48.setEncodedSourceStart((-1));
        functionNode48.setFunctionIsGetter();
        scope47.addChildToFront((com.google.javascript.rhino.head.Node) functionNode48);
        functionNode45.setBody((com.google.javascript.rhino.head.ast.AstNode) functionNode48);
        int int58 = functionNode41.addFunction(functionNode45);
        com.google.javascript.rhino.head.ast.Symbol symbol60 = functionNode41.getSymbol("-1\tBLOCK -1 1\n");
        scriptNode29.addChildToFront((com.google.javascript.rhino.head.Node) functionNode41);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList62 = functionNode41.getSymbols();
        functionNode41.setFunctionType(375417724);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(scriptNode6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertNotNull(astNodeList13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNull(scopeList32);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str34, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertNotNull(scriptNode49);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertNull(symbol60);
        org.junit.Assert.assertNotNull(symbolList62);
    }

    @Test
    public void test10280() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10280");
        com.google.javascript.rhino.head.ast.RegExpLiteral regExpLiteral1 = new com.google.javascript.rhino.head.ast.RegExpLiteral(14);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode2 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int3 = functionNode2.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        java.lang.String str6 = functionNode2.toStringTree(scriptNode5);
        functionNode2.setFunctionIsGetter();
        com.google.javascript.rhino.head.ast.AstNode astNode8 = functionNode2.getBody();
        functionNode2.setParens(21, (int) '#');
        int int12 = functionNode2.getLineno();
        functionNode2.setRp(9);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode15 = functionNode2.getTop();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode16 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int17 = functionNode16.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode18 = functionNode16.getTop();
        boolean boolean19 = functionNode16.hasSideEffects();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode21 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int22 = scriptNode21.getEndLineno();
        int int23 = scriptNode21.getBaseLineno();
        com.google.javascript.rhino.head.ast.Jump jump26 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode28 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int29 = scriptNode28.getEndLineno();
        int int30 = scriptNode28.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList31 = scriptNode28.getChildScopes();
        jump26.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode28);
        java.lang.String str33 = scriptNode28.debugPrint();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode21, (com.google.javascript.rhino.head.ast.Scope) scriptNode28);
        com.google.javascript.rhino.head.ast.Scope scope35 = new com.google.javascript.rhino.head.ast.Scope();
        scriptNode28.target = scope35;
        functionNode16.addChildScope(scope35);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode38 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int39 = functionNode38.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode40 = functionNode38.getTop();
        com.google.javascript.rhino.head.ast.Name name41 = null;
        functionNode38.setFunctionName(name41);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode43 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode44 = functionNode43.getTop();
        functionNode38.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode43);
        com.google.javascript.rhino.head.ast.Scope scope48 = new com.google.javascript.rhino.head.ast.Scope((int) (short) -1, 0);
        functionNode38.replaceWith(scope48);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode50 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int51 = functionNode50.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode52 = functionNode50.getTop();
        com.google.javascript.rhino.head.ast.Name name53 = null;
        functionNode50.setFunctionName(name53);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode55 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode56 = functionNode55.getTop();
        functionNode50.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode55);
        int int58 = functionNode38.addFunction(functionNode50);
        int int59 = functionNode16.addFunction(functionNode50);
        functionNode2.addResumptionPoint((com.google.javascript.rhino.head.Node) functionNode50);
        regExpLiteral1.setParent((com.google.javascript.rhino.head.ast.AstNode) functionNode50);
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator62 = regExpLiteral1.new NodeIterator();
        boolean boolean63 = nodeIterator62.hasNext();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(astNode8);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(scriptNode15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNotNull(scriptNode18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertNull(scopeList31);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str33, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertNotNull(scriptNode40);
        org.junit.Assert.assertNotNull(scriptNode44);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1));
        org.junit.Assert.assertNotNull(scriptNode52);
        org.junit.Assert.assertNotNull(scriptNode56);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
    }

    @Test
    public void test10281() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10281");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope(101);
        int int2 = scope1.getLineno();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
    }

    @Test
    public void test10282() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10282");
        com.google.javascript.rhino.head.ast.Jump jump4 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump4.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump8 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump4, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int11 = scriptNode10.getEndLineno();
        int int12 = scriptNode10.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList13 = scriptNode10.getChildScopes();
        com.google.javascript.rhino.head.Node node14 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump4, (com.google.javascript.rhino.head.Node) scriptNode10);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList15 = scriptNode10.getFunctions();
        functionNodeList15.clear();
        com.google.javascript.rhino.head.ast.Jump jump21 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump21.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump25 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump21, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode27 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int28 = scriptNode27.getEndLineno();
        int int29 = scriptNode27.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList30 = scriptNode27.getChildScopes();
        com.google.javascript.rhino.head.Node node31 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump21, (com.google.javascript.rhino.head.Node) scriptNode27);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList32 = scriptNode27.getFunctions();
        boolean boolean33 = functionNodeList15.removeAll((java.util.Collection<com.google.javascript.rhino.head.ast.FunctionNode>) functionNodeList32);
        functionNodeList15.clear();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode36 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode37 = functionNode36.getTop();
        functionNode36.setParens((int) (byte) 1, (int) (short) 1);
        int int41 = functionNode36.getRp();
        com.google.javascript.rhino.head.Node node44 = com.google.javascript.rhino.head.Node.newString((int) (byte) 100, "");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode45 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int46 = functionNode45.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode48 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        java.lang.String str49 = functionNode45.toStringTree(scriptNode48);
        com.google.javascript.rhino.head.ast.Scope scope51 = scriptNode48.getDefiningScope("");
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList52 = scriptNode48.getSymbols();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode54 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int55 = scriptNode54.getEndLineno();
        int int56 = scriptNode54.getBaseLineno();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode48, (com.google.javascript.rhino.head.ast.Scope) scriptNode54);
        java.lang.String str58 = scriptNode54.getEncodedSource();
        com.google.javascript.rhino.head.Node node60 = new com.google.javascript.rhino.head.Node(136, (com.google.javascript.rhino.head.Node) functionNode36, node44, (com.google.javascript.rhino.head.Node) scriptNode54, (int) (short) 0);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode61 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int62 = functionNode61.getLp();
        functionNode61.setLength(19);
        java.util.Map<com.google.javascript.rhino.head.Node, int[]> nodeMap65 = functionNode61.getLiveLocals();
        int int68 = functionNode61.getIntProp(628528643, (int) (short) 10);
        java.lang.String str69 = functionNode61.getSourceName();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode71 = new com.google.javascript.rhino.head.ast.FunctionNode((-1262414679));
        boolean boolean72 = functionNode71.isExpressionClosure();
        int int73 = functionNode61.addFunction(functionNode71);
        java.lang.String str74 = functionNode36.toStringTree((com.google.javascript.rhino.head.ast.ScriptNode) functionNode61);
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean75 = functionNodeList15.add(functionNode36);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNull(scopeList13);
        org.junit.Assert.assertNotNull(functionNodeList15);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertNull(scopeList30);
        org.junit.Assert.assertNotNull(functionNodeList32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(scriptNode37);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 1 + "'", int41 == 1);
        org.junit.Assert.assertNotNull(node44);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertNull(scope51);
        org.junit.Assert.assertNotNull(symbolList52);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1));
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1));
        org.junit.Assert.assertNull(str58);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + (-1) + "'", int62 == (-1));
        org.junit.Assert.assertNull(nodeMap65);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 10 + "'", int68 == 10);
        org.junit.Assert.assertNull(str69);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 0 + "'", int73 == 0);
        org.junit.Assert.assertNull(str74);
    }

    @Test
    public void test10283() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10283");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int2 = scriptNode1.getEndLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode4 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int5 = scriptNode4.getEndLineno();
        scriptNode1.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode4);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode7 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int8 = functionNode7.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode9 = functionNode7.getTop();
        boolean boolean10 = functionNode7.hasSideEffects();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode12 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int13 = scriptNode12.getEndLineno();
        int int14 = scriptNode12.getBaseLineno();
        com.google.javascript.rhino.head.ast.Jump jump17 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode19 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int20 = scriptNode19.getEndLineno();
        int int21 = scriptNode19.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList22 = scriptNode19.getChildScopes();
        jump17.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode19);
        java.lang.String str24 = scriptNode19.debugPrint();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode12, (com.google.javascript.rhino.head.ast.Scope) scriptNode19);
        com.google.javascript.rhino.head.ast.Scope scope26 = new com.google.javascript.rhino.head.ast.Scope();
        scriptNode19.target = scope26;
        functionNode7.addChildScope(scope26);
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode4, (com.google.javascript.rhino.head.ast.Scope) functionNode7);
        int int30 = functionNode7.getFunctionCount();
        com.google.javascript.rhino.head.ast.Scope scope31 = functionNode7.getEnclosingScope();
        int int32 = functionNode7.getLp();
        int int33 = functionNode7.getType();
        com.google.javascript.rhino.head.ast.Symbol symbol35 = functionNode7.getSymbol("/null/-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(scriptNode9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertNull(scopeList22);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str24, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNull(scope31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 109 + "'", int33 == 109);
        org.junit.Assert.assertNull(symbol35);
    }

    @Test
    public void test10284() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10284");
        com.google.javascript.rhino.head.ast.Symbol symbol0 = new com.google.javascript.rhino.head.ast.Symbol();
        java.lang.String str1 = symbol0.getName();
        com.google.javascript.rhino.head.ast.Jump jump6 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump6.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump10 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump6, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode12 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int13 = scriptNode12.getEndLineno();
        int int14 = scriptNode12.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList15 = scriptNode12.getChildScopes();
        com.google.javascript.rhino.head.Node node16 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump6, (com.google.javascript.rhino.head.Node) scriptNode12);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList17 = scriptNode12.getChildScopes();
        symbol0.setContainingTable((com.google.javascript.rhino.head.ast.Scope) scriptNode12);
        com.google.javascript.rhino.head.ast.Scope scope19 = symbol0.getContainingTable();
        com.google.javascript.rhino.head.Node node20 = symbol0.getNode();
        com.google.javascript.rhino.head.ast.Scope scope21 = symbol0.getContainingTable();
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.Node node22 = scope21.getFinally();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNull(scopeList15);
        org.junit.Assert.assertNull(scopeList17);
        org.junit.Assert.assertNotNull(scope19);
        org.junit.Assert.assertNull(node20);
        org.junit.Assert.assertNotNull(scope21);
    }

    @Test
    public void test10285() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10285");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode0 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int1 = functionNode0.getLp();
        functionNode0.setEncodedSource("");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode4 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int5 = functionNode4.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = functionNode4.getTop();
        com.google.javascript.rhino.head.ast.Name name7 = null;
        functionNode4.setFunctionName(name7);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode9 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = functionNode9.getTop();
        functionNode4.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode9);
        int int12 = functionNode9.getRp();
        int int13 = functionNode9.getFunctionType();
        functionNode0.addParam((com.google.javascript.rhino.head.ast.AstNode) functionNode9);
        int int15 = functionNode0.getEncodedSourceEnd();
        com.google.javascript.rhino.head.ast.Scope scope16 = functionNode0.getParentScope();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode18 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int19 = scriptNode18.getEndLineno();
        int int20 = scriptNode18.getBaseLineno();
        com.google.javascript.rhino.head.ast.Jump jump23 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode25 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int26 = scriptNode25.getEndLineno();
        int int27 = scriptNode25.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList28 = scriptNode25.getChildScopes();
        jump23.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode25);
        java.lang.String str30 = scriptNode25.debugPrint();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode18, (com.google.javascript.rhino.head.ast.Scope) scriptNode25);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode32 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int33 = functionNode32.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode34 = functionNode32.getTop();
        com.google.javascript.rhino.head.ast.Name name35 = null;
        functionNode32.setFunctionName(name35);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode37 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int38 = functionNode37.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode40 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        java.lang.String str41 = functionNode37.toStringTree(scriptNode40);
        functionNode37.setFunctionIsGetter();
        int int43 = functionNode32.addFunction(functionNode37);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList44 = functionNode32.getSymbols();
        scriptNode25.setSymbols(symbolList44);
        scriptNode25.clearParentScope();
        int int47 = scriptNode25.getBaseLineno();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode49 = new com.google.javascript.rhino.head.ast.FunctionNode(13);
        int int50 = functionNode49.getType();
        scriptNode25.setTop((com.google.javascript.rhino.head.ast.ScriptNode) functionNode49);
        com.google.javascript.rhino.head.Token.CommentType commentType54 = com.google.javascript.rhino.head.Token.CommentType.HTML;
        com.google.javascript.rhino.head.ast.Comment comment56 = new com.google.javascript.rhino.head.ast.Comment(20, 1, commentType54, "109");
        java.lang.String str58 = comment56.toSource(19);
        java.lang.String str59 = comment56.getValue();
        java.lang.String str61 = comment56.toSource(2);
        boolean boolean62 = comment56.hasSideEffects();
        com.google.javascript.rhino.head.Token.CommentType commentType63 = com.google.javascript.rhino.head.Token.CommentType.JSDOC;
        comment56.setCommentType(commentType63);
        java.lang.String str65 = comment56.getValue();
        scriptNode25.addChildToFront((com.google.javascript.rhino.head.Node) comment56);
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.ast.Scope.joinScopes(scope16, (com.google.javascript.rhino.head.ast.Scope) scriptNode25);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-1) + "'", int1 == (-1));
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(scriptNode6);
        org.junit.Assert.assertNotNull(scriptNode10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNull(scope16);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNull(scopeList28);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str30, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertNotNull(scriptNode34);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertNotNull(symbolList44);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 109 + "'", int50 == 109);
        org.junit.Assert.assertTrue("'" + commentType54 + "' != '" + com.google.javascript.rhino.head.Token.CommentType.HTML + "'", commentType54.equals(com.google.javascript.rhino.head.Token.CommentType.HTML));
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "                                      109" + "'", str58, "                                      109");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "109" + "'", str59, "109");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "    109" + "'", str61, "    109");
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + commentType63 + "' != '" + com.google.javascript.rhino.head.Token.CommentType.JSDOC + "'", commentType63.equals(com.google.javascript.rhino.head.Token.CommentType.JSDOC));
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "109" + "'", str65, "109");
    }

    @Test
    public void test10286() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10286");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int2 = scriptNode1.getEndLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode4 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int5 = scriptNode4.getEndLineno();
        scriptNode1.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode4);
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator7 = scriptNode1.new NodeIterator();
        com.google.javascript.rhino.head.Node node8 = nodeIterator7.next();
        boolean boolean9 = nodeIterator7.hasNext();
        nodeIterator7.remove();
        boolean boolean11 = nodeIterator7.hasNext();
        nodeIterator7.remove();
        nodeIterator7.remove();
        boolean boolean14 = nodeIterator7.hasNext();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(node8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test10287() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10287");
        com.google.javascript.rhino.head.ast.Symbol symbol0 = new com.google.javascript.rhino.head.ast.Symbol();
        java.lang.String str1 = symbol0.getDeclTypeName();
        com.google.javascript.rhino.head.ast.Jump jump3 = new com.google.javascript.rhino.head.ast.Jump((int) (short) 0);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode4 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int5 = functionNode4.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = functionNode4.getTop();
        com.google.javascript.rhino.head.ast.Name name7 = null;
        functionNode4.setFunctionName(name7);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode9 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = functionNode9.getTop();
        functionNode4.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode9);
        functionNode9.setIsExpressionClosure(true);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode15 = new com.google.javascript.rhino.head.ast.FunctionNode((int) (byte) 100);
        int int16 = functionNode9.addFunction(functionNode15);
        int int17 = jump3.compareTo((com.google.javascript.rhino.head.ast.AstNode) functionNode15);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode19 = new com.google.javascript.rhino.head.ast.FunctionNode(0);
        com.google.javascript.rhino.head.ast.Jump jump25 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump25.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump29 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump25, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode31 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int32 = scriptNode31.getEndLineno();
        int int33 = scriptNode31.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList34 = scriptNode31.getChildScopes();
        com.google.javascript.rhino.head.Node node35 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump25, (com.google.javascript.rhino.head.Node) scriptNode31);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList36 = scriptNode31.getFunctions();
        functionNodeList36.clear();
        com.google.javascript.rhino.head.ast.Jump jump42 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump42.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump46 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump42, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode48 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int49 = scriptNode48.getEndLineno();
        int int50 = scriptNode48.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList51 = scriptNode48.getChildScopes();
        com.google.javascript.rhino.head.Node node52 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump42, (com.google.javascript.rhino.head.Node) scriptNode48);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList53 = scriptNode48.getFunctions();
        boolean boolean54 = functionNodeList36.removeAll((java.util.Collection<com.google.javascript.rhino.head.ast.FunctionNode>) functionNodeList53);
        functionNode19.putProp(20, (java.lang.Object) functionNodeList36);
        int int56 = functionNode15.addFunction(functionNode19);
        boolean boolean57 = functionNode19.isGenerator();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList58 = functionNode19.getChildScopes();
        com.google.javascript.rhino.head.ast.AstNode astNode59 = functionNode19.getParent();
        boolean boolean60 = functionNode19.isGetter();
        symbol0.setNode((com.google.javascript.rhino.head.Node) functionNode19);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "EOF" + "'", str1, "EOF");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(scriptNode6);
        org.junit.Assert.assertNotNull(scriptNode10);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertNull(scopeList34);
        org.junit.Assert.assertNotNull(functionNodeList36);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertNull(scopeList51);
        org.junit.Assert.assertNotNull(functionNodeList53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNull(scopeList58);
        org.junit.Assert.assertNull(astNode59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
    }

    @Test
    public void test10288() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10288");
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.ast.Symbol symbol2 = new com.google.javascript.rhino.head.ast.Symbol(350469479, "            ");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid declType: 350469479");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test10289() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10289");
        com.google.javascript.rhino.head.Token.CommentType commentType2 = com.google.javascript.rhino.head.Token.CommentType.HTML;
        com.google.javascript.rhino.head.ast.Comment comment4 = new com.google.javascript.rhino.head.ast.Comment(20, 1, commentType2, "109");
        java.lang.String str6 = comment4.toSource((int) (byte) 10);
        java.lang.String str7 = comment4.getValue();
        boolean boolean8 = comment4.hasChildren();
        java.lang.String str9 = comment4.getValue();
        org.junit.Assert.assertTrue("'" + commentType2 + "' != '" + com.google.javascript.rhino.head.Token.CommentType.HTML + "'", commentType2.equals(com.google.javascript.rhino.head.Token.CommentType.HTML));
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "                    109" + "'", str6, "                    109");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "109" + "'", str7, "109");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "109" + "'", str9, "109");
    }

    @Test
    public void test10290() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10290");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode1 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int2 = functionNode1.getLp();
        functionNode1.setEncodedSource("");
        functionNode1.flattenSymbolTable(false);
        java.lang.String str7 = functionNode1.getName();
        functionNode1.setFunctionIsGetter();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode9 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int10 = functionNode9.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = functionNode9.getTop();
        boolean boolean12 = functionNode9.hasSideEffects();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList13 = functionNode9.getSymbols();
        functionNode9.setRp(5);
        com.google.javascript.rhino.head.ast.Scope scope16 = functionNode9.getEnclosingScope();
        functionNode9.setLineno(5);
        com.google.javascript.rhino.head.Node node20 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) functionNode1, (com.google.javascript.rhino.head.Node) functionNode9, 1);
        int int23 = node20.getIntProp(0, 1);
        java.lang.String str24 = node20.toString();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(scriptNode11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(symbolList13);
        org.junit.Assert.assertNull(scope16);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "0" + "'", str24, "0");
    }

    @Test
    public void test10291() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10291");
        com.google.javascript.rhino.head.ast.Jump jump2 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode4 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int5 = scriptNode4.getEndLineno();
        int int6 = scriptNode4.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList7 = scriptNode4.getChildScopes();
        jump2.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode4);
        java.lang.String str9 = scriptNode4.debugPrint();
        java.lang.Object obj11 = scriptNode4.getProp((-1));
        int int12 = scriptNode4.getAbsolutePosition();
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.Node node13 = scriptNode4.getContinue();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNull(scopeList7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str9, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
    }

    @Test
    public void test10292() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10292");
        com.google.javascript.rhino.head.ast.Jump jump5 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump5.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump9 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump5, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int12 = scriptNode11.getEndLineno();
        int int13 = scriptNode11.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList14 = scriptNode11.getChildScopes();
        com.google.javascript.rhino.head.Node node15 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump5, (com.google.javascript.rhino.head.Node) scriptNode11);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList16 = scriptNode11.getChildScopes();
        int int17 = scriptNode11.getEncodedSourceStart();
        com.google.javascript.rhino.head.Node node18 = scriptNode11.target;
        com.google.javascript.rhino.head.ast.FunctionNode functionNode19 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.Scope scope21 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 10);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode22 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode23 = functionNode22.getTop();
        functionNode22.setParens((int) (byte) 1, (int) (short) 1);
        functionNode22.setEncodedSourceStart((-1));
        functionNode22.setFunctionIsGetter();
        scope21.addChildToFront((com.google.javascript.rhino.head.Node) functionNode22);
        functionNode19.setBody((com.google.javascript.rhino.head.ast.AstNode) functionNode22);
        functionNode19.setFunctionIsSetter();
        boolean boolean33 = functionNode19.isExpressionClosure();
        functionNode19.putIntProp(7, (int) (byte) 0);
        functionNode19.setPosition(21);
        com.google.javascript.rhino.head.Node node39 = functionNode19.getLastChild();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode40 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode41 = functionNode40.getTop();
        functionNode40.setParens((int) (byte) 1, (int) (short) 1);
        functionNode40.setEncodedSourceStart((-1));
        functionNode40.setParens(5, (int) (short) 100);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode51 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int52 = functionNode51.getLp();
        functionNode51.setEncodedSource("");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode55 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int56 = functionNode55.getLp();
        functionNode55.setEncodedSource("");
        functionNode55.flattenSymbolTable(false);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode61 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int62 = functionNode61.getLp();
        com.google.javascript.rhino.head.Node node64 = new com.google.javascript.rhino.head.Node((-1), (com.google.javascript.rhino.head.Node) functionNode51, (com.google.javascript.rhino.head.Node) functionNode55, (com.google.javascript.rhino.head.Node) functionNode61, (int) '#');
        com.google.javascript.rhino.head.ast.AstNode astNode65 = functionNode51.getBody();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode66 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int67 = functionNode66.getLp();
        functionNode66.setEncodedSource("");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode70 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int71 = functionNode70.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode72 = functionNode70.getTop();
        com.google.javascript.rhino.head.ast.Name name73 = null;
        functionNode70.setFunctionName(name73);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode75 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode76 = functionNode75.getTop();
        functionNode70.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode75);
        int int78 = functionNode75.getRp();
        int int79 = functionNode75.getFunctionType();
        functionNode66.addParam((com.google.javascript.rhino.head.ast.AstNode) functionNode75);
        com.google.javascript.rhino.head.ast.Scope scope81 = functionNode75.getEnclosingScope();
        functionNode51.setBody((com.google.javascript.rhino.head.ast.AstNode) functionNode75);
        functionNode75.setLp(26);
        functionNode40.target = functionNode75;
        com.google.javascript.rhino.head.ast.Symbol symbol87 = functionNode75.getSymbol("136");
        com.google.javascript.rhino.head.ast.Jump jump90 = new com.google.javascript.rhino.head.ast.Jump((-1110578805), (-47132040));
        functionNode75.addParam((com.google.javascript.rhino.head.ast.AstNode) jump90);
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.Node node92 = new com.google.javascript.rhino.head.Node(682903487, node18, (com.google.javascript.rhino.head.Node) functionNode19, (com.google.javascript.rhino.head.Node) jump90);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNull(scopeList14);
        org.junit.Assert.assertNull(scopeList16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNull(node18);
        org.junit.Assert.assertNotNull(scriptNode23);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNull(node39);
        org.junit.Assert.assertNotNull(scriptNode41);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1));
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + (-1) + "'", int62 == (-1));
        org.junit.Assert.assertNull(astNode65);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + (-1) + "'", int67 == (-1));
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + (-1) + "'", int71 == (-1));
        org.junit.Assert.assertNotNull(scriptNode72);
        org.junit.Assert.assertNotNull(scriptNode76);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + (-1) + "'", int78 == (-1));
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 0 + "'", int79 == 0);
        org.junit.Assert.assertNotNull(scope81);
        org.junit.Assert.assertNull(symbol87);
    }

    @Test
    public void test10293() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10293");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 10);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode2 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode3 = functionNode2.getTop();
        functionNode2.setParens((int) (byte) 1, (int) (short) 1);
        functionNode2.setEncodedSourceStart((-1));
        functionNode2.setFunctionIsGetter();
        scope1.addChildToFront((com.google.javascript.rhino.head.Node) functionNode2);
        functionNode2.setRp(19);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int15 = scriptNode14.getEndLineno();
        int int16 = scriptNode14.getBaseLineno();
        com.google.javascript.rhino.head.ast.Jump jump19 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode21 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int22 = scriptNode21.getEndLineno();
        int int23 = scriptNode21.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList24 = scriptNode21.getChildScopes();
        jump19.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode21);
        java.lang.String str26 = scriptNode21.debugPrint();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode14, (com.google.javascript.rhino.head.ast.Scope) scriptNode21);
        com.google.javascript.rhino.head.ast.Scope scope28 = new com.google.javascript.rhino.head.ast.Scope();
        scriptNode21.target = scope28;
        java.lang.String str30 = functionNode2.toStringTree(scriptNode21);
        java.lang.String str32 = scriptNode21.toSource((int) (short) 10);
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap33 = scriptNode21.getSymbolTable();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode35 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode36 = functionNode35.getTop();
        functionNode35.setParens((int) (byte) 1, (int) (short) 1);
        com.google.javascript.rhino.head.Node node40 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) functionNode35);
        functionNode35.setRequiresActivation();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator42 = functionNode35.new NodeIterator();
        boolean boolean43 = strMap33.containsValue((java.lang.Object) nodeIterator42);
        java.util.Set<java.lang.String> strSet44 = strMap33.keySet();
        strMap33.clear();
        java.lang.Object obj46 = null;
        com.google.javascript.rhino.head.ast.Symbol symbol47 = new com.google.javascript.rhino.head.ast.Symbol();
        symbol47.setIndex(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode51 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int52 = scriptNode51.getEndLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode54 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int55 = scriptNode54.getEndLineno();
        scriptNode51.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode54);
        com.google.javascript.rhino.head.ast.Comment comment57 = null;
        scriptNode51.setJsDocNode(comment57);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList59 = scriptNode51.getSymbols();
        symbol47.setContainingTable((com.google.javascript.rhino.head.ast.Scope) scriptNode51);
        com.google.javascript.rhino.head.ast.Scope scope61 = symbol47.getContainingTable();
        java.lang.String str62 = symbol47.getName();
        java.lang.String str63 = symbol47.getName();
        com.google.javascript.rhino.head.Node node64 = symbol47.getNode();
        com.google.javascript.rhino.head.ast.Symbol symbol65 = strMap33.getOrDefault(obj46, symbol47);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode66 = new com.google.javascript.rhino.head.ast.ScriptNode();
        int int67 = scriptNode66.getEncodedSourceEnd();
        java.lang.String str69 = scriptNode66.toSource((int) (byte) 10);
        int int70 = scriptNode66.depth();
        boolean boolean71 = scriptNode66.hasChildren();
        boolean boolean72 = strMap33.equals((java.lang.Object) scriptNode66);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode73 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int74 = functionNode73.getLp();
        functionNode73.setEncodedSource("");
        functionNode73.flattenSymbolTable(false);
        java.lang.String str79 = functionNode73.getName();
        boolean boolean80 = functionNode73.hasConsistentReturnUsage();
        int int81 = functionNode73.getRp();
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor82 = functionNode73.iterator();
        boolean boolean83 = strMap33.containsValue((java.lang.Object) nodeItor82);
        org.junit.Assert.assertNotNull(scriptNode3);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNull(scopeList24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str26, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "                    {\n                    }\n" + "'", str32, "                    {\n                    }\n");
        org.junit.Assert.assertNotNull(strMap33);
        org.junit.Assert.assertNotNull(scriptNode36);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(strSet44);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1));
        org.junit.Assert.assertNotNull(symbolList59);
        org.junit.Assert.assertNotNull(scope61);
        org.junit.Assert.assertNull(str62);
        org.junit.Assert.assertNull(str63);
        org.junit.Assert.assertNull(node64);
        org.junit.Assert.assertNotNull(symbol65);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + (-1) + "'", int67 == (-1));
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "                    {\n                    }\n" + "'", str69, "                    {\n                    }\n");
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 0 + "'", int70 == 0);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + (-1) + "'", int74 == (-1));
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "" + "'", str79, "");
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + (-1) + "'", int81 == (-1));
        org.junit.Assert.assertNotNull(nodeItor82);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
    }

    @Test
    public void test10294() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10294");
        com.google.javascript.rhino.head.ast.Jump jump4 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump4.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump8 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump4, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int11 = scriptNode10.getEndLineno();
        int int12 = scriptNode10.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList13 = scriptNode10.getChildScopes();
        com.google.javascript.rhino.head.Node node14 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump4, (com.google.javascript.rhino.head.Node) scriptNode10);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList15 = scriptNode10.getFunctions();
        int int16 = functionNodeList15.size();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator17 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        functionNodeList15.sort((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator17);
        java.util.ListIterator<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeItor19 = functionNodeList15.listIterator();
        int int20 = functionNodeList15.size();
        com.google.javascript.rhino.head.ast.Jump jump25 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump25.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump29 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump25, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode31 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int32 = scriptNode31.getEndLineno();
        int int33 = scriptNode31.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList34 = scriptNode31.getChildScopes();
        com.google.javascript.rhino.head.Node node35 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump25, (com.google.javascript.rhino.head.Node) scriptNode31);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList36 = scriptNode31.getFunctions();
        int int37 = functionNodeList36.size();
        com.google.javascript.rhino.head.ast.Jump jump43 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump43.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump47 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump43, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode49 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int50 = scriptNode49.getEndLineno();
        int int51 = scriptNode49.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList52 = scriptNode49.getChildScopes();
        com.google.javascript.rhino.head.Node node53 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump43, (com.google.javascript.rhino.head.Node) scriptNode49);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList54 = scriptNode49.getFunctions();
        functionNodeList54.clear();
        com.google.javascript.rhino.head.ast.Jump jump60 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump60.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump64 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump60, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode66 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int67 = scriptNode66.getEndLineno();
        int int68 = scriptNode66.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList69 = scriptNode66.getChildScopes();
        com.google.javascript.rhino.head.Node node70 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump60, (com.google.javascript.rhino.head.Node) scriptNode66);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList71 = scriptNode66.getFunctions();
        boolean boolean72 = functionNodeList54.removeAll((java.util.Collection<com.google.javascript.rhino.head.ast.FunctionNode>) functionNodeList71);
        boolean boolean73 = functionNodeList36.addAll(0, (java.util.Collection<com.google.javascript.rhino.head.ast.FunctionNode>) functionNodeList54);
        int int74 = functionNodeList36.size();
        com.google.javascript.rhino.head.ast.Jump jump77 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump77.removeProp((int) 'a');
        com.google.javascript.rhino.head.Node node80 = jump77.getFirstChild();
        boolean boolean81 = functionNodeList36.remove((java.lang.Object) node80);
        functionNodeList36.clear();
        boolean boolean83 = functionNodeList15.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.FunctionNode>) functionNodeList36);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode85 = new com.google.javascript.rhino.head.ast.FunctionNode((int) (byte) 100);
        int int86 = functionNode85.getEncodedSourceStart();
        int int87 = functionNode85.getFunctionCount();
        boolean boolean88 = functionNode85.isGetter();
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList89 = functionNode85.getFunctions();
        boolean boolean90 = functionNodeList36.removeAll((java.util.Collection<com.google.javascript.rhino.head.ast.FunctionNode>) functionNodeList89);
        java.util.stream.Stream<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeStream91 = functionNodeList89.stream();
        java.util.function.UnaryOperator<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeUnaryOperator92 = null;
        // The following exception was thrown during execution in test generation
        try {
            functionNodeList89.replaceAll(functionNodeUnaryOperator92);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNull(scopeList13);
        org.junit.Assert.assertNotNull(functionNodeList15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(functionNodeItor19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertNull(scopeList34);
        org.junit.Assert.assertNotNull(functionNodeList36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1));
        org.junit.Assert.assertNull(scopeList52);
        org.junit.Assert.assertNotNull(functionNodeList54);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + (-1) + "'", int67 == (-1));
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + (-1) + "'", int68 == (-1));
        org.junit.Assert.assertNull(scopeList69);
        org.junit.Assert.assertNotNull(functionNodeList71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 0 + "'", int74 == 0);
        org.junit.Assert.assertNull(node80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + (-1) + "'", int86 == (-1));
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 0 + "'", int87 == 0);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertNotNull(functionNodeList89);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertNotNull(functionNodeStream91);
    }

    @Test
    public void test10295() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10295");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 10);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode2 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode3 = functionNode2.getTop();
        functionNode2.setParens((int) (byte) 1, (int) (short) 1);
        functionNode2.setEncodedSourceStart((-1));
        functionNode2.setFunctionIsGetter();
        scope1.addChildToFront((com.google.javascript.rhino.head.Node) functionNode2);
        functionNode2.setRp(19);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int15 = scriptNode14.getEndLineno();
        int int16 = scriptNode14.getBaseLineno();
        com.google.javascript.rhino.head.ast.Jump jump19 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode21 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int22 = scriptNode21.getEndLineno();
        int int23 = scriptNode21.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList24 = scriptNode21.getChildScopes();
        jump19.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode21);
        java.lang.String str26 = scriptNode21.debugPrint();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode14, (com.google.javascript.rhino.head.ast.Scope) scriptNode21);
        com.google.javascript.rhino.head.ast.Scope scope28 = new com.google.javascript.rhino.head.ast.Scope();
        scriptNode21.target = scope28;
        java.lang.String str30 = functionNode2.toStringTree(scriptNode21);
        java.lang.String str32 = scriptNode21.toSource((int) (short) 10);
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap33 = scriptNode21.getSymbolTable();
        java.util.Set<java.lang.String> strSet34 = strMap33.keySet();
        boolean boolean35 = strMap33.isEmpty();
        java.util.Set<java.lang.String> strSet36 = strMap33.keySet();
        com.google.javascript.rhino.head.ast.Jump jump40 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump40.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump44 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump40, 0);
        com.google.javascript.rhino.head.ast.Jump jump48 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump48.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump52 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump48, 0);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode53 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int54 = functionNode53.getLp();
        functionNode53.setEncodedSource("");
        functionNode53.flattenSymbolTable(false);
        jump40.addChildAfter((com.google.javascript.rhino.head.Node) jump48, (com.google.javascript.rhino.head.Node) functionNode53);
        com.google.javascript.rhino.head.Node node60 = functionNode53.target;
        boolean boolean61 = functionNode53.hasConsistentReturnUsage();
        com.google.javascript.rhino.head.ast.Name name62 = functionNode53.getFunctionName();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode63 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.Scope scope65 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 10);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode66 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode67 = functionNode66.getTop();
        functionNode66.setParens((int) (byte) 1, (int) (short) 1);
        functionNode66.setEncodedSourceStart((-1));
        functionNode66.setFunctionIsGetter();
        scope65.addChildToFront((com.google.javascript.rhino.head.Node) functionNode66);
        functionNode63.setBody((com.google.javascript.rhino.head.ast.AstNode) functionNode66);
        functionNode66.setRelative(0);
        functionNode53.setBody((com.google.javascript.rhino.head.ast.AstNode) functionNode66);
        functionNode53.setEncodedSourceStart((int) (byte) 0);
        com.google.javascript.rhino.head.ast.AstNode astNode81 = functionNode53.getBody();
        int int82 = functionNode53.getFunctionCount();
        boolean boolean83 = functionNode53.hasSideEffects();
        com.google.javascript.rhino.head.ast.Symbol symbol84 = strMap33.get((java.lang.Object) functionNode53);
        org.junit.Assert.assertNotNull(scriptNode3);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNull(scopeList24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str26, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "                    {\n                    }\n" + "'", str32, "                    {\n                    }\n");
        org.junit.Assert.assertNotNull(strMap33);
        org.junit.Assert.assertNotNull(strSet34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(strSet36);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
        org.junit.Assert.assertNull(node60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNull(name62);
        org.junit.Assert.assertNotNull(scriptNode67);
        org.junit.Assert.assertNotNull(astNode81);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 0 + "'", int82 == 0);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertNull(symbol84);
    }

    @Test
    public void test10296() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10296");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode0 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = functionNode0.getTop();
        functionNode0.setParens((int) (byte) 1, (int) (short) 1);
        functionNode0.setEncodedSourceStart((-1));
        java.util.List<com.google.javascript.rhino.head.Node> nodeList7 = functionNode0.getResumptionPoints();
        com.google.javascript.rhino.head.ast.Scope scope9 = functionNode0.getDefiningScope("hi!");
        boolean boolean10 = functionNode0.isGetterOrSetter();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode12 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int13 = scriptNode12.getEndLineno();
        com.google.javascript.rhino.head.ast.Symbol symbol15 = scriptNode12.getSymbol("hi!");
        scriptNode12.putIntProp(3, 0);
        functionNode0.addResumptionPoint((com.google.javascript.rhino.head.Node) scriptNode12);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode21 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode22 = functionNode21.getTop();
        functionNode21.setParens((int) (byte) 1, (int) (short) 1);
        com.google.javascript.rhino.head.Node node26 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) functionNode21);
        int int27 = functionNode21.getEncodedSourceEnd();
        com.google.javascript.rhino.head.ast.Jump jump32 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump32.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump36 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump32, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode38 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int39 = scriptNode38.getEndLineno();
        int int40 = scriptNode38.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList41 = scriptNode38.getChildScopes();
        com.google.javascript.rhino.head.Node node42 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump32, (com.google.javascript.rhino.head.Node) scriptNode38);
        java.lang.String str43 = scriptNode38.getSourceName();
        functionNode21.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode38);
        functionNode0.setCompilerData((java.lang.Object) scriptNode38);
        com.google.javascript.rhino.head.ast.Name name47 = null;
        com.google.javascript.rhino.head.ast.FunctionNode functionNode48 = new com.google.javascript.rhino.head.ast.FunctionNode((-14761645), name47);
        functionNode48.setBaseLineno(15);
        int int51 = functionNode0.addFunction(functionNode48);
        boolean boolean52 = functionNode0.isExpressionClosure();
        java.lang.String str53 = functionNode0.shortName();
        boolean boolean54 = functionNode0.isGetterOrSetter();
        org.junit.Assert.assertNotNull(scriptNode1);
        org.junit.Assert.assertNull(nodeList7);
        org.junit.Assert.assertNull(scope9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNull(symbol15);
        org.junit.Assert.assertNotNull(scriptNode22);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertNull(scopeList41);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "FunctionNode" + "'", str53, "FunctionNode");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
    }

    @Test
    public void test10297() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10297");
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator0 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.Jump jump5 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump5.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump9 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump5, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int12 = scriptNode11.getEndLineno();
        int int13 = scriptNode11.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList14 = scriptNode11.getChildScopes();
        com.google.javascript.rhino.head.Node node15 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump5, (com.google.javascript.rhino.head.Node) scriptNode11);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList16 = scriptNode11.getFunctions();
        int int17 = scriptNode11.getPosition();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList18 = scriptNode11.getChildScopes();
        java.lang.String str19 = scriptNode11.getSourceName();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode21 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int22 = functionNode21.getLp();
        functionNode21.setEncodedSource("");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode25 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int26 = functionNode25.getLp();
        functionNode25.setEncodedSource("");
        functionNode25.flattenSymbolTable(false);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode31 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int32 = functionNode31.getLp();
        com.google.javascript.rhino.head.Node node34 = new com.google.javascript.rhino.head.Node((-1), (com.google.javascript.rhino.head.Node) functionNode21, (com.google.javascript.rhino.head.Node) functionNode25, (com.google.javascript.rhino.head.Node) functionNode31, (int) '#');
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap35 = functionNode25.getSymbolTable();
        com.google.javascript.rhino.head.ast.Jump jump39 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump39.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump43 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump39, 0);
        com.google.javascript.rhino.head.ast.Jump jump47 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump47.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump51 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump47, 0);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode52 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int53 = functionNode52.getLp();
        functionNode52.setEncodedSource("");
        functionNode52.flattenSymbolTable(false);
        jump39.addChildAfter((com.google.javascript.rhino.head.Node) jump47, (com.google.javascript.rhino.head.Node) functionNode52);
        functionNode25.setMemberExprNode((com.google.javascript.rhino.head.ast.AstNode) functionNode52);
        int int60 = positionComparator0.compare((com.google.javascript.rhino.head.ast.AstNode) scriptNode11, (com.google.javascript.rhino.head.ast.AstNode) functionNode25);
        scriptNode11.setPosition(24);
        com.google.javascript.rhino.head.Token.CommentType commentType67 = com.google.javascript.rhino.head.Token.CommentType.HTML;
        com.google.javascript.rhino.head.ast.Comment comment69 = new com.google.javascript.rhino.head.ast.Comment(20, 1, commentType67, "109");
        java.lang.String str71 = comment69.toSource(19);
        java.lang.String str72 = comment69.getValue();
        java.lang.String str73 = comment69.getValue();
        com.google.javascript.rhino.head.Token.CommentType commentType74 = com.google.javascript.rhino.head.Token.CommentType.LINE;
        comment69.setCommentType(commentType74);
        com.google.javascript.rhino.head.ast.Comment comment77 = new com.google.javascript.rhino.head.ast.Comment(1, 1, commentType74, "                    /null/");
        java.lang.String str78 = comment77.getValue();
        com.google.javascript.rhino.head.Token.CommentType commentType79 = comment77.getCommentType();
        // The following exception was thrown during execution in test generation
        try {
            scriptNode11.setContinue((com.google.javascript.rhino.head.Node) comment77);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNull(scopeList14);
        org.junit.Assert.assertNotNull(functionNodeList16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNull(scopeList18);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNull(strMap35);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 0 + "'", int60 == 0);
        org.junit.Assert.assertTrue("'" + commentType67 + "' != '" + com.google.javascript.rhino.head.Token.CommentType.HTML + "'", commentType67.equals(com.google.javascript.rhino.head.Token.CommentType.HTML));
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "                                      109" + "'", str71, "                                      109");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "109" + "'", str72, "109");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "109" + "'", str73, "109");
        org.junit.Assert.assertTrue("'" + commentType74 + "' != '" + com.google.javascript.rhino.head.Token.CommentType.LINE + "'", commentType74.equals(com.google.javascript.rhino.head.Token.CommentType.LINE));
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "                    /null/" + "'", str78, "                    /null/");
        org.junit.Assert.assertTrue("'" + commentType79 + "' != '" + com.google.javascript.rhino.head.Token.CommentType.LINE + "'", commentType79.equals(com.google.javascript.rhino.head.Token.CommentType.LINE));
    }

    @Test
    public void test10298() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10298");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode3 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode4 = functionNode3.getTop();
        java.lang.String str5 = scriptNode4.getJsDoc();
        com.google.javascript.rhino.head.Node node7 = scriptNode4.setType(0);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode8 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int9 = functionNode8.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        java.lang.String str12 = functionNode8.toStringTree(scriptNode11);
        com.google.javascript.rhino.head.ast.Scope scope14 = scriptNode11.getDefiningScope("");
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList15 = scriptNode11.getSymbols();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode17 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int18 = scriptNode17.getEndLineno();
        int int19 = scriptNode17.getBaseLineno();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode11, (com.google.javascript.rhino.head.ast.Scope) scriptNode17);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode22 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int23 = scriptNode22.getEndLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode25 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int26 = scriptNode25.getEndLineno();
        scriptNode22.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode25);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode28 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int29 = functionNode28.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode30 = functionNode28.getTop();
        boolean boolean31 = functionNode28.hasSideEffects();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode33 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int34 = scriptNode33.getEndLineno();
        int int35 = scriptNode33.getBaseLineno();
        com.google.javascript.rhino.head.ast.Jump jump38 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode40 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int41 = scriptNode40.getEndLineno();
        int int42 = scriptNode40.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList43 = scriptNode40.getChildScopes();
        jump38.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode40);
        java.lang.String str45 = scriptNode40.debugPrint();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode33, (com.google.javascript.rhino.head.ast.Scope) scriptNode40);
        com.google.javascript.rhino.head.ast.Scope scope47 = new com.google.javascript.rhino.head.ast.Scope();
        scriptNode40.target = scope47;
        functionNode28.addChildScope(scope47);
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode25, (com.google.javascript.rhino.head.ast.Scope) functionNode28);
        com.google.javascript.rhino.head.Node node51 = new com.google.javascript.rhino.head.Node(20, (com.google.javascript.rhino.head.Node) scriptNode4, (com.google.javascript.rhino.head.Node) scriptNode11, (com.google.javascript.rhino.head.Node) scriptNode25);
        int int52 = scriptNode25.getEndLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode54 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int55 = scriptNode54.getEndLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode57 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int58 = scriptNode57.getEndLineno();
        scriptNode54.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode57);
        java.lang.String str60 = scriptNode54.getNextTempName();
        scriptNode25.replaceWith((com.google.javascript.rhino.head.ast.Scope) scriptNode54);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList62 = scriptNode25.getFunctions();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode64 = new com.google.javascript.rhino.head.ast.FunctionNode((-1262414679));
        com.google.javascript.rhino.head.Token.CommentType commentType69 = com.google.javascript.rhino.head.Token.CommentType.HTML;
        com.google.javascript.rhino.head.ast.Comment comment71 = new com.google.javascript.rhino.head.ast.Comment(20, 1, commentType69, "109");
        java.lang.String str73 = comment71.toSource(19);
        java.lang.String str74 = comment71.getValue();
        com.google.javascript.rhino.head.Token.CommentType commentType75 = com.google.javascript.rhino.head.Token.CommentType.HTML;
        comment71.setCommentType(commentType75);
        com.google.javascript.rhino.head.ast.Comment comment78 = new com.google.javascript.rhino.head.ast.Comment(9, 6, commentType75, "                    ");
        functionNode64.setJsDocNode(comment78);
        com.google.javascript.rhino.head.Token.CommentType commentType80 = comment78.getCommentType();
        int int81 = functionNodeList62.indexOf((java.lang.Object) commentType80);
        com.google.javascript.rhino.head.ast.Comment comment83 = new com.google.javascript.rhino.head.ast.Comment(18, (-793599801), commentType80, "<<");
        com.google.javascript.rhino.head.Node node84 = comment83.getFirstChild();
        org.junit.Assert.assertNotNull(scriptNode4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(node7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(scope14);
        org.junit.Assert.assertNotNull(symbolList15);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertNotNull(scriptNode30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertNull(scopeList43);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str45, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1));
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + (-1) + "'", int58 == (-1));
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "$0" + "'", str60, "$0");
        org.junit.Assert.assertNotNull(functionNodeList62);
        org.junit.Assert.assertTrue("'" + commentType69 + "' != '" + com.google.javascript.rhino.head.Token.CommentType.HTML + "'", commentType69.equals(com.google.javascript.rhino.head.Token.CommentType.HTML));
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "                                      109" + "'", str73, "                                      109");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "109" + "'", str74, "109");
        org.junit.Assert.assertTrue("'" + commentType75 + "' != '" + com.google.javascript.rhino.head.Token.CommentType.HTML + "'", commentType75.equals(com.google.javascript.rhino.head.Token.CommentType.HTML));
        org.junit.Assert.assertTrue("'" + commentType80 + "' != '" + com.google.javascript.rhino.head.Token.CommentType.HTML + "'", commentType80.equals(com.google.javascript.rhino.head.Token.CommentType.HTML));
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + (-1) + "'", int81 == (-1));
        org.junit.Assert.assertNull(node84);
    }

    @Test
    public void test10299() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10299");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode0 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int1 = functionNode0.getLp();
        functionNode0.setEncodedSource("");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode4 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int5 = functionNode4.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = functionNode4.getTop();
        com.google.javascript.rhino.head.ast.Name name7 = null;
        functionNode4.setFunctionName(name7);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode9 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = functionNode9.getTop();
        functionNode4.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode9);
        int int12 = functionNode9.getRp();
        int int13 = functionNode9.getFunctionType();
        functionNode0.addParam((com.google.javascript.rhino.head.ast.AstNode) functionNode9);
        com.google.javascript.rhino.head.ast.Scope scope15 = functionNode9.getEnclosingScope();
        int int16 = functionNode9.getLineno();
        boolean boolean17 = functionNode9.isExpressionClosure();
        int int18 = functionNode9.getAbsolutePosition();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str19 = functionNode9.getString();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: com.google.javascript.rhino.head.ast.FunctionNode cannot be cast to com.google.javascript.rhino.head.ast.Name");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-1) + "'", int1 == (-1));
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(scriptNode6);
        org.junit.Assert.assertNotNull(scriptNode10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(scope15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
    }

    @Test
    public void test10300() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10300");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode1 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int2 = functionNode1.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode3 = functionNode1.getTop();
        boolean boolean4 = functionNode1.hasSideEffects();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int7 = scriptNode6.getEndLineno();
        int int8 = scriptNode6.getBaseLineno();
        com.google.javascript.rhino.head.ast.Jump jump11 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode13 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int14 = scriptNode13.getEndLineno();
        int int15 = scriptNode13.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList16 = scriptNode13.getChildScopes();
        jump11.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode13);
        java.lang.String str18 = scriptNode13.debugPrint();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode6, (com.google.javascript.rhino.head.ast.Scope) scriptNode13);
        com.google.javascript.rhino.head.ast.Scope scope20 = new com.google.javascript.rhino.head.ast.Scope();
        scriptNode13.target = scope20;
        functionNode1.addChildScope(scope20);
        boolean boolean23 = functionNode1.hasConsistentReturnUsage();
        java.lang.String str24 = functionNode1.getNextTempName();
        com.google.javascript.rhino.head.ast.Jump jump25 = new com.google.javascript.rhino.head.ast.Jump((int) (short) -1, (com.google.javascript.rhino.head.Node) functionNode1);
        boolean boolean26 = functionNode1.isExpressionClosure();
        functionNode1.putIntProp(1, 0);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode30 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int31 = functionNode30.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode32 = functionNode30.getTop();
        com.google.javascript.rhino.head.Node node33 = functionNode30.getLastSibling();
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList34 = functionNode30.getParams();
        functionNode1.target = functionNode30;
        java.lang.String str36 = functionNode1.getEncodedSource();
        java.lang.String str37 = functionNode1.getName();
        com.google.javascript.rhino.head.ast.AstNode astNode38 = functionNode1.getParent();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertNotNull(scriptNode3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNull(scopeList16);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str18, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "$0" + "'", str24, "$0");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNotNull(scriptNode32);
        org.junit.Assert.assertNotNull(node33);
        org.junit.Assert.assertNotNull(astNodeList34);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "" + "'", str37, "");
        org.junit.Assert.assertNull(astNode38);
    }

    @Test
    public void test10301() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10301");
        com.google.javascript.rhino.head.ast.Symbol symbol0 = new com.google.javascript.rhino.head.ast.Symbol();
        int int1 = symbol0.getIndex();
        symbol0.setIndex(35);
        com.google.javascript.rhino.head.ast.Jump jump6 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump6.removeProp((int) 'a');
        com.google.javascript.rhino.head.Node node9 = jump6.getFirstChild();
        symbol0.setNode(node9);
        java.lang.String str11 = symbol0.getName();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode12 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int13 = functionNode12.getLp();
        functionNode12.setEncodedSource("");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode16 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int17 = functionNode16.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode18 = functionNode16.getTop();
        com.google.javascript.rhino.head.ast.Name name19 = null;
        functionNode16.setFunctionName(name19);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode21 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode22 = functionNode21.getTop();
        functionNode16.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode21);
        int int24 = functionNode21.getRp();
        int int25 = functionNode21.getFunctionType();
        functionNode12.addParam((com.google.javascript.rhino.head.ast.AstNode) functionNode21);
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator27 = functionNode21.new NodeIterator();
        int int28 = functionNode21.getLineno();
        com.google.javascript.rhino.head.ast.Jump jump34 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump34.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump38 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump34, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode40 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int41 = scriptNode40.getEndLineno();
        int int42 = scriptNode40.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList43 = scriptNode40.getChildScopes();
        com.google.javascript.rhino.head.Node node44 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump34, (com.google.javascript.rhino.head.Node) scriptNode40);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode46 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int47 = scriptNode46.getEndLineno();
        com.google.javascript.rhino.head.ast.RegExpLiteral regExpLiteral49 = new com.google.javascript.rhino.head.ast.RegExpLiteral((int) (short) 1);
        java.lang.String str51 = regExpLiteral49.toSource((int) (byte) 10);
        regExpLiteral49.setFlags("-1\tSCRIPT -1 1\n");
        regExpLiteral49.removeProp(8);
        com.google.javascript.rhino.head.Node node57 = new com.google.javascript.rhino.head.Node(10, node44, (com.google.javascript.rhino.head.Node) scriptNode46, (com.google.javascript.rhino.head.Node) regExpLiteral49, 3);
        com.google.javascript.rhino.head.ast.Jump jump60 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode62 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int63 = scriptNode62.getEndLineno();
        int int64 = scriptNode62.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList65 = scriptNode62.getChildScopes();
        jump60.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode62);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode68 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int69 = functionNode68.getLp();
        functionNode68.setEncodedSource("");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode72 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int73 = functionNode72.getLp();
        functionNode72.setEncodedSource("");
        functionNode72.flattenSymbolTable(false);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode78 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int79 = functionNode78.getLp();
        com.google.javascript.rhino.head.Node node81 = new com.google.javascript.rhino.head.Node((-1), (com.google.javascript.rhino.head.Node) functionNode68, (com.google.javascript.rhino.head.Node) functionNode72, (com.google.javascript.rhino.head.Node) functionNode78, (int) '#');
        jump60.addChildrenToFront((com.google.javascript.rhino.head.Node) functionNode68);
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList83 = functionNode68.getStatements();
        functionNode21.replaceChildAfter((com.google.javascript.rhino.head.Node) scriptNode46, (com.google.javascript.rhino.head.Node) functionNode68);
        functionNode68.setPosition((-860972433));
        symbol0.setContainingTable((com.google.javascript.rhino.head.ast.Scope) functionNode68);
        functionNode68.setRequiresActivation();
        java.lang.String str89 = functionNode68.getSourceName();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-1) + "'", int1 == (-1));
        org.junit.Assert.assertNull(node9);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNotNull(scriptNode18);
        org.junit.Assert.assertNotNull(scriptNode22);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertNull(scopeList43);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "                    /null/" + "'", str51, "                    /null/");
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + (-1) + "'", int63 == (-1));
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + (-1) + "'", int64 == (-1));
        org.junit.Assert.assertNull(scopeList65);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + (-1) + "'", int69 == (-1));
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + (-1) + "'", int73 == (-1));
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + (-1) + "'", int79 == (-1));
        org.junit.Assert.assertNotNull(astNodeList83);
        org.junit.Assert.assertNull(str89);
    }

    @Test
    public void test10302() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10302");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode0 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int1 = functionNode0.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = functionNode0.getTop();
        com.google.javascript.rhino.head.ast.Name name3 = null;
        functionNode0.setFunctionName(name3);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode5 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = functionNode5.getTop();
        functionNode0.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode5);
        com.google.javascript.rhino.head.ast.Scope scope10 = new com.google.javascript.rhino.head.ast.Scope((int) (short) -1, 0);
        functionNode0.replaceWith(scope10);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode12 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int13 = functionNode12.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = functionNode12.getTop();
        com.google.javascript.rhino.head.ast.Name name15 = null;
        functionNode12.setFunctionName(name15);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode17 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode18 = functionNode17.getTop();
        functionNode12.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode17);
        int int20 = functionNode0.addFunction(functionNode12);
        int int21 = functionNode12.getLineno();
        com.google.javascript.rhino.head.ast.Scope scope22 = functionNode12.getEnclosingScope();
        functionNode12.setParens(19, 9);
        boolean boolean26 = functionNode12.isSetter();
        int int27 = functionNode12.getLength();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-1) + "'", int1 == (-1));
        org.junit.Assert.assertNotNull(scriptNode2);
        org.junit.Assert.assertNotNull(scriptNode6);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(scriptNode14);
        org.junit.Assert.assertNotNull(scriptNode18);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertNull(scope22);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1 + "'", int27 == 1);
    }

    @Test
    public void test10303() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10303");
        com.google.javascript.rhino.head.ast.Jump jump2 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode4 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int5 = scriptNode4.getEndLineno();
        int int6 = scriptNode4.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList7 = scriptNode4.getChildScopes();
        jump2.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode4);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode10 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int11 = functionNode10.getLp();
        functionNode10.setEncodedSource("");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode14 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int15 = functionNode14.getLp();
        functionNode14.setEncodedSource("");
        functionNode14.flattenSymbolTable(false);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode20 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int21 = functionNode20.getLp();
        com.google.javascript.rhino.head.Node node23 = new com.google.javascript.rhino.head.Node((-1), (com.google.javascript.rhino.head.Node) functionNode10, (com.google.javascript.rhino.head.Node) functionNode14, (com.google.javascript.rhino.head.Node) functionNode20, (int) '#');
        jump2.addChildrenToFront((com.google.javascript.rhino.head.Node) functionNode10);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode25 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int26 = functionNode25.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode27 = functionNode25.getTop();
        com.google.javascript.rhino.head.ast.Name name28 = null;
        functionNode25.setFunctionName(name28);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode30 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode31 = functionNode30.getTop();
        functionNode25.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode30);
        functionNode30.setIsExpressionClosure(true);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode36 = new com.google.javascript.rhino.head.ast.FunctionNode((int) (byte) 100);
        int int37 = functionNode30.addFunction(functionNode36);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode39 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode40 = functionNode39.getTop();
        java.lang.String str41 = scriptNode40.getJsDoc();
        com.google.javascript.rhino.head.Node node43 = scriptNode40.setType(0);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode44 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int45 = functionNode44.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode47 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        java.lang.String str48 = functionNode44.toStringTree(scriptNode47);
        com.google.javascript.rhino.head.ast.Scope scope50 = scriptNode47.getDefiningScope("");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode52 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int53 = scriptNode52.getEndLineno();
        int int54 = scriptNode52.getBaseLineno();
        com.google.javascript.rhino.head.Node node55 = new com.google.javascript.rhino.head.Node(25, node43, (com.google.javascript.rhino.head.Node) scriptNode47, (com.google.javascript.rhino.head.Node) scriptNode52);
        int int56 = functionNode36.compareTo((com.google.javascript.rhino.head.ast.AstNode) scriptNode47);
        functionNode10.addChildScope((com.google.javascript.rhino.head.ast.Scope) scriptNode47);
        java.lang.String str59 = scriptNode47.toSource(0);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode60 = scriptNode47.getEnclosingFunction();
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.Node node61 = functionNode60.getLastChild();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNull(scopeList7);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNotNull(scriptNode27);
        org.junit.Assert.assertNotNull(scriptNode31);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertNotNull(scriptNode40);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNotNull(node43);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertNull(scope50);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 1 + "'", int56 == 1);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "{\n}\n" + "'", str59, "{\n}\n");
        org.junit.Assert.assertNull(functionNode60);
    }

    @Test
    public void test10304() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10304");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode0 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int1 = functionNode0.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = functionNode0.getTop();
        boolean boolean3 = functionNode0.hasSideEffects();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList4 = functionNode0.getSymbols();
        functionNode0.setRp(5);
        functionNode0.setParens((int) '#', 24);
        int int10 = functionNode0.getParamCount();
        functionNode0.setPosition(26);
        com.google.javascript.rhino.head.Node node13 = functionNode0.getLastSibling();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-1) + "'", int1 == (-1));
        org.junit.Assert.assertNotNull(scriptNode2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(symbolList4);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(node13);
    }

    @Test
    public void test10305() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10305");
        com.google.javascript.rhino.head.ast.Jump jump2 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode4 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int5 = scriptNode4.getEndLineno();
        int int6 = scriptNode4.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList7 = scriptNode4.getChildScopes();
        jump2.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode4);
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor9 = scriptNode4.iterator();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode10 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int11 = functionNode10.getLp();
        functionNode10.setEncodedSource("");
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode4, (com.google.javascript.rhino.head.ast.Scope) functionNode10);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode15 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode16 = functionNode15.getTop();
        functionNode15.setParens((int) (byte) 1, (int) (short) 1);
        functionNode15.setEncodedSourceStart((-1));
        java.util.List<com.google.javascript.rhino.head.Node> nodeList22 = functionNode15.getResumptionPoints();
        com.google.javascript.rhino.head.ast.Scope scope24 = functionNode15.getDefiningScope("hi!");
        boolean boolean25 = functionNode15.isGetterOrSetter();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode26 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int27 = functionNode26.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode28 = functionNode26.getTop();
        com.google.javascript.rhino.head.ast.Name name29 = null;
        functionNode26.setFunctionName(name29);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode31 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode32 = functionNode31.getTop();
        functionNode26.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode31);
        int int34 = functionNode31.getRp();
        int int35 = functionNode31.getFunctionType();
        int int36 = functionNode15.addFunction(functionNode31);
        functionNode10.setCompilerData((java.lang.Object) functionNode31);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode38 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int39 = functionNode38.getLp();
        functionNode38.setEncodedSource("");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode42 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.Scope scope44 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 10);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode45 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode46 = functionNode45.getTop();
        functionNode45.setParens((int) (byte) 1, (int) (short) 1);
        functionNode45.setEncodedSourceStart((-1));
        functionNode45.setFunctionIsGetter();
        scope44.addChildToFront((com.google.javascript.rhino.head.Node) functionNode45);
        functionNode42.setBody((com.google.javascript.rhino.head.ast.AstNode) functionNode45);
        int int55 = functionNode38.addFunction(functionNode42);
        int int56 = functionNode38.getEncodedSourceEnd();
        functionNode31.replaceWith((com.google.javascript.rhino.head.ast.Scope) functionNode38);
        int int60 = functionNode31.getIntProp((int) (byte) 10, 5);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode61 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode62 = functionNode61.getTop();
        int int63 = functionNode61.getRegexpCount();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode64 = functionNode61.getEnclosingFunction();
        functionNode31.addParam((com.google.javascript.rhino.head.ast.AstNode) functionNode61);
        int int66 = functionNode31.getLength();
        com.google.javascript.rhino.head.ast.Comment comment67 = functionNode31.getJsDocNode();
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNull(scopeList7);
        org.junit.Assert.assertNotNull(nodeItor9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(scriptNode16);
        org.junit.Assert.assertNull(nodeList22);
        org.junit.Assert.assertNull(scope24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(scriptNode28);
        org.junit.Assert.assertNotNull(scriptNode32);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertNotNull(scriptNode46);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1));
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 5 + "'", int60 == 5);
        org.junit.Assert.assertNotNull(scriptNode62);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 0 + "'", int63 == 0);
        org.junit.Assert.assertNull(functionNode64);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 1 + "'", int66 == 1);
        org.junit.Assert.assertNull(comment67);
    }

    @Test
    public void test10306() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10306");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode0 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int1 = functionNode0.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = functionNode0.getTop();
        com.google.javascript.rhino.head.Node node3 = functionNode0.getLastSibling();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode5 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int6 = functionNode5.getLp();
        functionNode5.setEncodedSource("");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode9 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int10 = functionNode9.getLp();
        functionNode9.setEncodedSource("");
        functionNode9.flattenSymbolTable(false);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode15 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int16 = functionNode15.getLp();
        com.google.javascript.rhino.head.Node node18 = new com.google.javascript.rhino.head.Node((-1), (com.google.javascript.rhino.head.Node) functionNode5, (com.google.javascript.rhino.head.Node) functionNode9, (com.google.javascript.rhino.head.Node) functionNode15, (int) '#');
        boolean boolean19 = functionNode15.isGenerator();
        int int20 = functionNode15.getFunctionType();
        boolean boolean21 = functionNode15.hasSideEffects();
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList22 = functionNode15.getStatements();
        boolean boolean23 = functionNode15.hasConsistentReturnUsage();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode25 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode26 = functionNode25.getTop();
        functionNode25.setParens((int) (byte) 1, (int) (short) 1);
        com.google.javascript.rhino.head.Node node30 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) functionNode25);
        functionNode25.setRequiresActivation();
        java.lang.String str32 = functionNode25.shortName();
        int int33 = functionNode25.getBaseLineno();
        functionNode25.setLength((int) '4');
        functionNode15.addChildrenToFront((com.google.javascript.rhino.head.Node) functionNode25);
        int int37 = functionNode0.addFunction(functionNode25);
        com.google.javascript.rhino.head.ast.AstNode astNode38 = functionNode25.getBody();
        functionNode25.setParens((-14761645), (-2));
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-1) + "'", int1 == (-1));
        org.junit.Assert.assertNotNull(scriptNode2);
        org.junit.Assert.assertNotNull(node3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(astNodeList22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(scriptNode26);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "FunctionNode" + "'", str32, "FunctionNode");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertNull(astNode38);
    }

    @Test
    public void test10307() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10307");
        com.google.javascript.rhino.head.Node node1 = com.google.javascript.rhino.head.Node.newNumber((double) (-1305759086));
        org.junit.Assert.assertNotNull(node1);
    }

    @Test
    public void test10308() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10308");
        com.google.javascript.rhino.head.ast.Jump jump5 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump5.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump9 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump5, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int12 = scriptNode11.getEndLineno();
        int int13 = scriptNode11.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList14 = scriptNode11.getChildScopes();
        com.google.javascript.rhino.head.Node node15 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump5, (com.google.javascript.rhino.head.Node) scriptNode11);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList16 = scriptNode11.getFunctions();
        int int17 = scriptNode11.getPosition();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList18 = scriptNode11.getChildScopes();
        int int19 = scriptNode11.getEncodedSourceEnd();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList20 = scriptNode11.getSymbols();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode21 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int22 = functionNode21.getLp();
        functionNode21.setEncodedSource("");
        functionNode21.flattenSymbolTable(false);
        com.google.javascript.rhino.head.ast.RegExpLiteral regExpLiteral28 = new com.google.javascript.rhino.head.ast.RegExpLiteral((int) (short) 1);
        java.lang.String str30 = regExpLiteral28.toSource((int) (byte) 10);
        regExpLiteral28.setFlags("-1\tSCRIPT -1 1\n");
        regExpLiteral28.removeProp(8);
        java.lang.String str35 = regExpLiteral28.getValue();
        com.google.javascript.rhino.head.Node node36 = new com.google.javascript.rhino.head.Node(7, (com.google.javascript.rhino.head.Node) scriptNode11, (com.google.javascript.rhino.head.Node) functionNode21, (com.google.javascript.rhino.head.Node) regExpLiteral28);
        com.google.javascript.rhino.head.ast.AstNode astNode37 = null;
        regExpLiteral28.setParent(astNode37);
        regExpLiteral28.setFlags("Symbol (EOF) name=<=");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str41 = regExpLiteral28.getString();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: com.google.javascript.rhino.head.ast.RegExpLiteral cannot be cast to com.google.javascript.rhino.head.ast.Name");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNull(scopeList14);
        org.junit.Assert.assertNotNull(functionNodeList16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNull(scopeList18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(symbolList20);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "                    /null/" + "'", str30, "                    /null/");
        org.junit.Assert.assertNull(str35);
    }

    @Test
    public void test10309() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10309");
        com.google.javascript.rhino.head.Token.CommentType commentType6 = com.google.javascript.rhino.head.Token.CommentType.HTML;
        com.google.javascript.rhino.head.ast.Comment comment8 = new com.google.javascript.rhino.head.ast.Comment(20, 1, commentType6, "109");
        com.google.javascript.rhino.head.ast.Comment comment10 = new com.google.javascript.rhino.head.ast.Comment(11, 35, commentType6, "                    109");
        com.google.javascript.rhino.head.ast.Comment comment12 = new com.google.javascript.rhino.head.ast.Comment((-462033282), 18, commentType6, "/null/                              {\n                              }\n");
        java.lang.String str14 = comment12.toSource((-1288016238));
        org.junit.Assert.assertTrue("'" + commentType6 + "' != '" + com.google.javascript.rhino.head.Token.CommentType.HTML + "'", commentType6.equals(com.google.javascript.rhino.head.Token.CommentType.HTML));
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "/null/                              {\n                              }\n" + "'", str14, "/null/                              {\n                              }\n");
    }

    @Test
    public void test10310() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10310");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode1 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int2 = functionNode1.getLp();
        functionNode1.setEncodedSource("");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode5 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int6 = functionNode5.getLp();
        functionNode5.setEncodedSource("");
        functionNode5.flattenSymbolTable(false);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode11 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int12 = functionNode11.getLp();
        com.google.javascript.rhino.head.Node node14 = new com.google.javascript.rhino.head.Node((-1), (com.google.javascript.rhino.head.Node) functionNode1, (com.google.javascript.rhino.head.Node) functionNode5, (com.google.javascript.rhino.head.Node) functionNode11, (int) '#');
        com.google.javascript.rhino.head.ast.Comment comment15 = functionNode11.getJsDocNode();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode16 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.Scope scope18 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 10);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode19 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode20 = functionNode19.getTop();
        functionNode19.setParens((int) (byte) 1, (int) (short) 1);
        functionNode19.setEncodedSourceStart((-1));
        functionNode19.setFunctionIsGetter();
        scope18.addChildToFront((com.google.javascript.rhino.head.Node) functionNode19);
        functionNode16.setBody((com.google.javascript.rhino.head.ast.AstNode) functionNode19);
        boolean boolean29 = functionNode11.isParam((com.google.javascript.rhino.head.ast.AstNode) functionNode16);
        functionNode11.setFunctionType(13);
        functionNode11.setRelative(18);
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap34 = functionNode11.getSymbolTable();
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor35 = null;
        // The following exception was thrown during execution in test generation
        try {
            functionNode11.visit(nodeVisitor35);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNull(comment15);
        org.junit.Assert.assertNotNull(scriptNode20);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNull(strMap34);
    }

    @Test
    public void test10311() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10311");
        com.google.javascript.rhino.head.ast.Symbol symbol0 = new com.google.javascript.rhino.head.ast.Symbol();
        com.google.javascript.rhino.head.Node node1 = symbol0.getNode();
        com.google.javascript.rhino.head.Node node2 = symbol0.getNode();
        java.lang.String str3 = symbol0.getDeclTypeName();
        com.google.javascript.rhino.head.Node node4 = symbol0.getNode();
        org.junit.Assert.assertNull(node1);
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "EOF" + "'", str3, "EOF");
        org.junit.Assert.assertNull(node4);
    }

    @Test
    public void test10312() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10312");
        com.google.javascript.rhino.head.ast.Name name1 = null;
        com.google.javascript.rhino.head.ast.FunctionNode functionNode2 = new com.google.javascript.rhino.head.ast.FunctionNode(17, name1);
        int int3 = functionNode2.getEncodedSourceEnd();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode4 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int5 = functionNode4.getLp();
        functionNode4.setEncodedSource("");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode8 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int9 = functionNode8.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = functionNode8.getTop();
        com.google.javascript.rhino.head.ast.Name name11 = null;
        functionNode8.setFunctionName(name11);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode13 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = functionNode13.getTop();
        functionNode8.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode13);
        int int16 = functionNode13.getRp();
        int int17 = functionNode13.getFunctionType();
        functionNode4.addParam((com.google.javascript.rhino.head.ast.AstNode) functionNode13);
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator19 = functionNode13.new NodeIterator();
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList20 = functionNode13.getStatements();
        com.google.javascript.rhino.head.ast.Jump jump23 = new com.google.javascript.rhino.head.ast.Jump((int) (short) 0);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode24 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int25 = functionNode24.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode26 = functionNode24.getTop();
        com.google.javascript.rhino.head.ast.Name name27 = null;
        functionNode24.setFunctionName(name27);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode29 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode30 = functionNode29.getTop();
        functionNode24.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode29);
        functionNode29.setIsExpressionClosure(true);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode35 = new com.google.javascript.rhino.head.ast.FunctionNode((int) (byte) 100);
        int int36 = functionNode29.addFunction(functionNode35);
        int int37 = jump23.compareTo((com.google.javascript.rhino.head.ast.AstNode) functionNode35);
        functionNode35.setEncodedSourceStart((int) '4');
        functionNode35.setLength(48);
        functionNode35.setFunctionType(19);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode45 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int46 = functionNode45.getLp();
        functionNode45.setEncodedSource("");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode49 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int50 = functionNode49.getLp();
        functionNode49.setEncodedSource("");
        functionNode49.flattenSymbolTable(false);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode55 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int56 = functionNode55.getLp();
        com.google.javascript.rhino.head.Node node58 = new com.google.javascript.rhino.head.Node((-1), (com.google.javascript.rhino.head.Node) functionNode45, (com.google.javascript.rhino.head.Node) functionNode49, (com.google.javascript.rhino.head.Node) functionNode55, (int) '#');
        boolean boolean59 = functionNode55.isGenerator();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode61 = new com.google.javascript.rhino.head.ast.FunctionNode((-1262414679));
        com.google.javascript.rhino.head.Token.CommentType commentType66 = com.google.javascript.rhino.head.Token.CommentType.HTML;
        com.google.javascript.rhino.head.ast.Comment comment68 = new com.google.javascript.rhino.head.ast.Comment(20, 1, commentType66, "109");
        java.lang.String str70 = comment68.toSource(19);
        java.lang.String str71 = comment68.getValue();
        com.google.javascript.rhino.head.Token.CommentType commentType72 = com.google.javascript.rhino.head.Token.CommentType.HTML;
        comment68.setCommentType(commentType72);
        com.google.javascript.rhino.head.ast.Comment comment75 = new com.google.javascript.rhino.head.ast.Comment(9, 6, commentType72, "                    ");
        functionNode61.setJsDocNode(comment75);
        com.google.javascript.rhino.head.Node node78 = new com.google.javascript.rhino.head.Node(25, (com.google.javascript.rhino.head.Node) functionNode35, (com.google.javascript.rhino.head.Node) functionNode55, (com.google.javascript.rhino.head.Node) functionNode61, (int) (short) 10);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList79 = functionNode55.getFunctions();
        java.util.Map<com.google.javascript.rhino.head.Node, int[]> nodeMap80 = functionNode55.getLiveLocals();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) functionNode13, (com.google.javascript.rhino.head.ast.Scope) functionNode55);
        functionNode2.replaceWith((com.google.javascript.rhino.head.ast.Scope) functionNode55);
        int int83 = functionNode55.getFunctionCount();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(scriptNode10);
        org.junit.Assert.assertNotNull(scriptNode14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(astNodeList20);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNotNull(scriptNode26);
        org.junit.Assert.assertNotNull(scriptNode30);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1));
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + commentType66 + "' != '" + com.google.javascript.rhino.head.Token.CommentType.HTML + "'", commentType66.equals(com.google.javascript.rhino.head.Token.CommentType.HTML));
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "                                      109" + "'", str70, "                                      109");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "109" + "'", str71, "109");
        org.junit.Assert.assertTrue("'" + commentType72 + "' != '" + com.google.javascript.rhino.head.Token.CommentType.HTML + "'", commentType72.equals(com.google.javascript.rhino.head.Token.CommentType.HTML));
        org.junit.Assert.assertNotNull(functionNodeList79);
        org.junit.Assert.assertNull(nodeMap80);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 0 + "'", int83 == 0);
    }

    @Test
    public void test10313() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10313");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode2 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int3 = functionNode2.getLp();
        functionNode2.setEncodedSource("");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode6 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int7 = functionNode6.getLp();
        functionNode6.setEncodedSource("");
        functionNode6.flattenSymbolTable(false);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode12 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int13 = functionNode12.getLp();
        com.google.javascript.rhino.head.Node node15 = new com.google.javascript.rhino.head.Node((-1), (com.google.javascript.rhino.head.Node) functionNode2, (com.google.javascript.rhino.head.Node) functionNode6, (com.google.javascript.rhino.head.Node) functionNode12, (int) '#');
        boolean boolean16 = functionNode12.isGenerator();
        com.google.javascript.rhino.head.ast.Scope scope18 = new com.google.javascript.rhino.head.ast.Scope();
        scope18.setBounds(0, 10);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode22 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode23 = functionNode22.getTop();
        int int24 = functionNode22.getRegexpCount();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode25 = functionNode22.getEnclosingFunction();
        java.lang.String str26 = scope18.toStringTree((com.google.javascript.rhino.head.ast.ScriptNode) functionNode22);
        functionNode12.putProp(1, (java.lang.Object) functionNode22);
        functionNode12.setParens(8, (int) (byte) 10);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode32 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int33 = scriptNode32.getEndLineno();
        int int34 = scriptNode32.getBaseLineno();
        com.google.javascript.rhino.head.Node node35 = scriptNode32.getNext();
        com.google.javascript.rhino.head.Node node36 = scriptNode32.getFirstChild();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode37 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int38 = functionNode37.getLp();
        functionNode37.setEncodedSource("");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode41 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.Scope scope43 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 10);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode44 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode45 = functionNode44.getTop();
        functionNode44.setParens((int) (byte) 1, (int) (short) 1);
        functionNode44.setEncodedSourceStart((-1));
        functionNode44.setFunctionIsGetter();
        scope43.addChildToFront((com.google.javascript.rhino.head.Node) functionNode44);
        functionNode41.setBody((com.google.javascript.rhino.head.ast.AstNode) functionNode44);
        int int54 = functionNode37.addFunction(functionNode41);
        java.lang.String str55 = functionNode37.toString();
        int int56 = scriptNode32.addFunction(functionNode37);
        com.google.javascript.rhino.head.Node node58 = new com.google.javascript.rhino.head.Node((int) (byte) 10, (com.google.javascript.rhino.head.Node) functionNode12, (com.google.javascript.rhino.head.Node) scriptNode32, 14);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode59 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode60 = functionNode59.getTop();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode62 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int63 = functionNode62.getLp();
        functionNode62.setEncodedSource("");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode66 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int67 = functionNode66.getLp();
        functionNode66.setEncodedSource("");
        functionNode66.flattenSymbolTable(false);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode72 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int73 = functionNode72.getLp();
        com.google.javascript.rhino.head.Node node75 = new com.google.javascript.rhino.head.Node((-1), (com.google.javascript.rhino.head.Node) functionNode62, (com.google.javascript.rhino.head.Node) functionNode66, (com.google.javascript.rhino.head.Node) functionNode72, (int) '#');
        com.google.javascript.rhino.head.ast.AstNode astNode76 = functionNode62.getBody();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode77 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int78 = functionNode77.getLp();
        functionNode77.setEncodedSource("");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode81 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int82 = functionNode81.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode83 = functionNode81.getTop();
        com.google.javascript.rhino.head.ast.Name name84 = null;
        functionNode81.setFunctionName(name84);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode86 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode87 = functionNode86.getTop();
        functionNode81.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode86);
        int int89 = functionNode86.getRp();
        int int90 = functionNode86.getFunctionType();
        functionNode77.addParam((com.google.javascript.rhino.head.ast.AstNode) functionNode86);
        com.google.javascript.rhino.head.ast.Scope scope92 = functionNode86.getEnclosingScope();
        functionNode62.setBody((com.google.javascript.rhino.head.ast.AstNode) functionNode86);
        int int94 = functionNode59.addFunction(functionNode62);
        scriptNode32.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode62);
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.Node node96 = functionNode62.getFinally();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(scriptNode23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNull(functionNode25);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertNull(node35);
        org.junit.Assert.assertNull(node36);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNotNull(scriptNode45);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "109" + "'", str55, "109");
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertNotNull(scriptNode60);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + (-1) + "'", int63 == (-1));
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + (-1) + "'", int67 == (-1));
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + (-1) + "'", int73 == (-1));
        org.junit.Assert.assertNull(astNode76);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + (-1) + "'", int78 == (-1));
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + (-1) + "'", int82 == (-1));
        org.junit.Assert.assertNotNull(scriptNode83);
        org.junit.Assert.assertNotNull(scriptNode87);
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + (-1) + "'", int89 == (-1));
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + 0 + "'", int90 == 0);
        org.junit.Assert.assertNotNull(scope92);
        org.junit.Assert.assertTrue("'" + int94 + "' != '" + 0 + "'", int94 == 0);
    }

    @Test
    public void test10314() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10314");
        java.lang.String str1 = com.google.javascript.rhino.head.ast.AstNode.operatorToString(9);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "|" + "'", str1, "|");
    }

    @Test
    public void test10315() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10315");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode1 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int2 = functionNode1.getLp();
        functionNode1.setEncodedSource("");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode5 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int6 = functionNode5.getLp();
        functionNode5.setEncodedSource("");
        functionNode5.flattenSymbolTable(false);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode11 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int12 = functionNode11.getLp();
        com.google.javascript.rhino.head.Node node14 = new com.google.javascript.rhino.head.Node((-1), (com.google.javascript.rhino.head.Node) functionNode1, (com.google.javascript.rhino.head.Node) functionNode5, (com.google.javascript.rhino.head.Node) functionNode11, (int) '#');
        functionNode11.setEncodedSourceStart(25);
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.Node node17 = functionNode11.getContinue();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
    }

    @Test
    public void test10316() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10316");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int2 = scriptNode1.getEndLineno();
        int int3 = scriptNode1.getBaseLineno();
        com.google.javascript.rhino.head.Node node4 = scriptNode1.getNext();
        com.google.javascript.rhino.head.Node node5 = scriptNode1.getFirstChild();
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList6 = scriptNode1.getFunctions();
        java.lang.String str8 = scriptNode1.toSource((int) (short) -1);
        com.google.javascript.rhino.head.ast.Symbol symbol10 = scriptNode1.getSymbol("        EOF");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNull(node4);
        org.junit.Assert.assertNull(node5);
        org.junit.Assert.assertNotNull(functionNodeList6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "{\n}\n" + "'", str8, "{\n}\n");
        org.junit.Assert.assertNull(symbol10);
    }

    @Test
    public void test10317() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10317");
        com.google.javascript.rhino.head.ast.Symbol symbol0 = new com.google.javascript.rhino.head.ast.Symbol();
        com.google.javascript.rhino.head.ast.Jump jump5 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump5.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump9 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump5, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int12 = scriptNode11.getEndLineno();
        int int13 = scriptNode11.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList14 = scriptNode11.getChildScopes();
        com.google.javascript.rhino.head.Node node15 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump5, (com.google.javascript.rhino.head.Node) scriptNode11);
        symbol0.setContainingTable((com.google.javascript.rhino.head.ast.Scope) scriptNode11);
        com.google.javascript.rhino.head.ast.Scope scope17 = symbol0.getContainingTable();
        symbol0.setName("                    /null/");
        java.lang.String str20 = symbol0.getName();
        java.lang.String str21 = symbol0.getDeclTypeName();
        int int22 = symbol0.getIndex();
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNull(scopeList14);
        org.junit.Assert.assertNotNull(scope17);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "                    /null/" + "'", str20, "                    /null/");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "EOF" + "'", str21, "EOF");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
    }

    @Test
    public void test10318() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10318");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode2 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int3 = functionNode2.getLp();
        functionNode2.setEncodedSource("");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode6 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int7 = functionNode6.getLp();
        functionNode6.setEncodedSource("");
        functionNode6.flattenSymbolTable(false);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode12 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int13 = functionNode12.getLp();
        com.google.javascript.rhino.head.Node node15 = new com.google.javascript.rhino.head.Node((-1), (com.google.javascript.rhino.head.Node) functionNode2, (com.google.javascript.rhino.head.Node) functionNode6, (com.google.javascript.rhino.head.Node) functionNode12, (int) '#');
        com.google.javascript.rhino.head.ast.AstNode astNode16 = functionNode2.getBody();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode17 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int18 = functionNode17.getLp();
        functionNode17.setEncodedSource("");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode21 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int22 = functionNode21.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode23 = functionNode21.getTop();
        com.google.javascript.rhino.head.ast.Name name24 = null;
        functionNode21.setFunctionName(name24);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode26 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode27 = functionNode26.getTop();
        functionNode21.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode26);
        int int29 = functionNode26.getRp();
        int int30 = functionNode26.getFunctionType();
        functionNode17.addParam((com.google.javascript.rhino.head.ast.AstNode) functionNode26);
        com.google.javascript.rhino.head.ast.Scope scope32 = functionNode26.getEnclosingScope();
        functionNode2.setBody((com.google.javascript.rhino.head.ast.AstNode) functionNode26);
        java.lang.Object obj35 = functionNode26.getProp(0);
        com.google.javascript.rhino.head.Node node37 = new com.google.javascript.rhino.head.Node((-854226344), (com.google.javascript.rhino.head.Node) functionNode26, 1423344554);
        com.google.javascript.rhino.head.ast.RegExpLiteral regExpLiteral40 = new com.google.javascript.rhino.head.ast.RegExpLiteral((-1), 3);
        java.lang.String str41 = regExpLiteral40.getJsDoc();
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor42 = regExpLiteral40.iterator();
        regExpLiteral40.setValue("109");
        functionNode26.setBody((com.google.javascript.rhino.head.ast.AstNode) regExpLiteral40);
        com.google.javascript.rhino.head.ast.RegExpLiteral regExpLiteral48 = new com.google.javascript.rhino.head.ast.RegExpLiteral((-1), 3);
        java.lang.String str49 = regExpLiteral48.getFlags();
        java.lang.String str50 = regExpLiteral48.getFlags();
        // The following exception was thrown during execution in test generation
        try {
            functionNode26.setContinue((com.google.javascript.rhino.head.Node) regExpLiteral48);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNull(astNode16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNotNull(scriptNode23);
        org.junit.Assert.assertNotNull(scriptNode27);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(scope32);
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNotNull(nodeItor42);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertNull(str50);
    }

    @Test
    public void test10319() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10319");
        com.google.javascript.rhino.head.ast.RegExpLiteral regExpLiteral2 = new com.google.javascript.rhino.head.ast.RegExpLiteral(1579347477, 0);
        com.google.javascript.rhino.head.ast.AstNode astNode3 = regExpLiteral2.getParent();
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor4 = null;
        // The following exception was thrown during execution in test generation
        try {
            regExpLiteral2.visit(nodeVisitor4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(astNode3);
    }

    @Test
    public void test10320() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10320");
        com.google.javascript.rhino.head.ast.Jump jump3 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump3.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump7 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump3, 0);
        com.google.javascript.rhino.head.ast.Jump jump11 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump11.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump15 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump11, 0);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode16 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int17 = functionNode16.getLp();
        functionNode16.setEncodedSource("");
        functionNode16.flattenSymbolTable(false);
        jump3.addChildAfter((com.google.javascript.rhino.head.Node) jump11, (com.google.javascript.rhino.head.Node) functionNode16);
        int int23 = functionNode16.getPosition();
        java.util.Map<com.google.javascript.rhino.head.Node, int[]> nodeMap24 = functionNode16.getLiveLocals();
        com.google.javascript.rhino.head.ast.Scope scope25 = functionNode16.getEnclosingScope();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode26 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode27 = functionNode26.getTop();
        com.google.javascript.rhino.head.ast.Name name28 = null;
        functionNode26.setFunctionName(name28);
        boolean boolean30 = functionNode26.requiresActivation();
        com.google.javascript.rhino.head.ast.RegExpLiteral regExpLiteral32 = new com.google.javascript.rhino.head.ast.RegExpLiteral((int) (short) 1);
        java.lang.String str34 = regExpLiteral32.toSource((int) (byte) 10);
        regExpLiteral32.setFlags("-1\tSCRIPT -1 1\n");
        regExpLiteral32.removeProp(8);
        java.lang.String str39 = regExpLiteral32.getValue();
        regExpLiteral32.setLineno(10);
        regExpLiteral32.removeChildren();
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor43 = regExpLiteral32.iterator();
        functionNode26.addRegExp(regExpLiteral32);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode45 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int46 = functionNode45.getLp();
        functionNode45.setEncodedSource("");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode49 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.Scope scope51 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 10);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode52 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode53 = functionNode52.getTop();
        functionNode52.setParens((int) (byte) 1, (int) (short) 1);
        functionNode52.setEncodedSourceStart((-1));
        functionNode52.setFunctionIsGetter();
        scope51.addChildToFront((com.google.javascript.rhino.head.Node) functionNode52);
        functionNode49.setBody((com.google.javascript.rhino.head.ast.AstNode) functionNode52);
        int int62 = functionNode45.addFunction(functionNode49);
        functionNode26.addChildToBack((com.google.javascript.rhino.head.Node) functionNode45);
        int[] intArray68 = new int[] { 6, 2, 48, 25 };
        functionNode16.addLiveLocals((com.google.javascript.rhino.head.Node) functionNode45, intArray68);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode70 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int71 = functionNode70.getLp();
        functionNode70.setEncodedSource("");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode74 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int75 = functionNode74.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode76 = functionNode74.getTop();
        com.google.javascript.rhino.head.ast.Name name77 = null;
        functionNode74.setFunctionName(name77);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode79 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode80 = functionNode79.getTop();
        functionNode74.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode79);
        int int82 = functionNode79.getRp();
        int int83 = functionNode79.getFunctionType();
        functionNode70.addParam((com.google.javascript.rhino.head.ast.AstNode) functionNode79);
        boolean boolean85 = functionNode70.isGetterOrSetter();
        functionNode70.clearParentScope();
        int int87 = functionNode16.compareTo((com.google.javascript.rhino.head.ast.AstNode) functionNode70);
        com.google.javascript.rhino.head.ast.Name name88 = null;
        functionNode16.setFunctionName(name88);
        functionNode16.setIsGenerator();
        java.util.List<com.google.javascript.rhino.head.Node> nodeList91 = functionNode16.getResumptionPoints();
        java.lang.String str92 = functionNode16.getEncodedSource();
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNull(nodeMap24);
        org.junit.Assert.assertNull(scope25);
        org.junit.Assert.assertNotNull(scriptNode27);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "                    /null/" + "'", str34, "                    /null/");
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNotNull(nodeItor43);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertNotNull(scriptNode53);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 0 + "'", int62 == 0);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[6, 2, 48, 25]");
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + (-1) + "'", int71 == (-1));
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + (-1) + "'", int75 == (-1));
        org.junit.Assert.assertNotNull(scriptNode76);
        org.junit.Assert.assertNotNull(scriptNode80);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + (-1) + "'", int82 == (-1));
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 0 + "'", int83 == 0);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
// flaky:         org.junit.Assert.assertTrue("'" + int87 + "' != '" + 1021415470 + "'", int87 == 1021415470);
        org.junit.Assert.assertNull(nodeList91);
        org.junit.Assert.assertEquals("'" + str92 + "' != '" + "" + "'", str92, "");
    }

    @Test
    public void test10321() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10321");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 10);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode2 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode3 = functionNode2.getTop();
        functionNode2.setParens((int) (byte) 1, (int) (short) 1);
        functionNode2.setEncodedSourceStart((-1));
        functionNode2.setFunctionIsGetter();
        scope1.addChildToFront((com.google.javascript.rhino.head.Node) functionNode2);
        functionNode2.setRp(19);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int15 = scriptNode14.getEndLineno();
        int int16 = scriptNode14.getBaseLineno();
        com.google.javascript.rhino.head.ast.Jump jump19 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode21 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int22 = scriptNode21.getEndLineno();
        int int23 = scriptNode21.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList24 = scriptNode21.getChildScopes();
        jump19.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode21);
        java.lang.String str26 = scriptNode21.debugPrint();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode14, (com.google.javascript.rhino.head.ast.Scope) scriptNode21);
        com.google.javascript.rhino.head.ast.Scope scope28 = new com.google.javascript.rhino.head.ast.Scope();
        scriptNode21.target = scope28;
        java.lang.String str30 = functionNode2.toStringTree(scriptNode21);
        java.lang.String str32 = scriptNode21.toSource((int) (short) 10);
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap33 = scriptNode21.getSymbolTable();
        int int34 = strMap33.size();
        strMap33.clear();
        com.google.javascript.rhino.head.ast.Symbol symbol37 = null;
        com.google.javascript.rhino.head.ast.Symbol symbol38 = strMap33.replace("Symbol (EOF) name=null", symbol37);
        boolean boolean39 = strMap33.isEmpty();
        org.junit.Assert.assertNotNull(scriptNode3);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNull(scopeList24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str26, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "                    {\n                    }\n" + "'", str32, "                    {\n                    }\n");
        org.junit.Assert.assertNotNull(strMap33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertNull(symbol38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
    }

    @Test
    public void test10322() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10322");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 10);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode2 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode3 = functionNode2.getTop();
        functionNode2.setParens((int) (byte) 1, (int) (short) 1);
        functionNode2.setEncodedSourceStart((-1));
        functionNode2.setFunctionIsGetter();
        scope1.addChildToFront((com.google.javascript.rhino.head.Node) functionNode2);
        functionNode2.setRp(19);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int15 = scriptNode14.getEndLineno();
        int int16 = scriptNode14.getBaseLineno();
        com.google.javascript.rhino.head.ast.Jump jump19 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode21 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int22 = scriptNode21.getEndLineno();
        int int23 = scriptNode21.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList24 = scriptNode21.getChildScopes();
        jump19.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode21);
        java.lang.String str26 = scriptNode21.debugPrint();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode14, (com.google.javascript.rhino.head.ast.Scope) scriptNode21);
        com.google.javascript.rhino.head.ast.Scope scope28 = new com.google.javascript.rhino.head.ast.Scope();
        scriptNode21.target = scope28;
        java.lang.String str30 = functionNode2.toStringTree(scriptNode21);
        java.lang.String str32 = scriptNode21.toSource((int) (short) 10);
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap33 = scriptNode21.getSymbolTable();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode35 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int36 = scriptNode35.getEndLineno();
        int int37 = scriptNode35.getBaseLineno();
        scriptNode35.removeProp(0);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList40 = scriptNode35.getSymbols();
        boolean boolean41 = strMap33.containsValue((java.lang.Object) symbolList40);
        com.google.javascript.rhino.head.ast.Symbol symbol43 = new com.google.javascript.rhino.head.ast.Symbol();
        java.lang.String str44 = symbol43.getDeclTypeName();
        com.google.javascript.rhino.head.ast.Scope scope45 = symbol43.getContainingTable();
        symbol43.setName("                                      109");
        com.google.javascript.rhino.head.Node node48 = symbol43.getNode();
        com.google.javascript.rhino.head.ast.Symbol symbol49 = new com.google.javascript.rhino.head.ast.Symbol();
        com.google.javascript.rhino.head.Node node50 = symbol49.getNode();
        symbol49.setIndex(4);
        java.lang.String str53 = symbol49.getDeclTypeName();
        java.lang.String str54 = symbol49.toString();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode55 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int56 = functionNode55.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode57 = functionNode55.getTop();
        boolean boolean58 = functionNode55.hasSideEffects();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode60 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int61 = scriptNode60.getEndLineno();
        int int62 = scriptNode60.getBaseLineno();
        com.google.javascript.rhino.head.ast.Jump jump65 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode67 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int68 = scriptNode67.getEndLineno();
        int int69 = scriptNode67.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList70 = scriptNode67.getChildScopes();
        jump65.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode67);
        java.lang.String str72 = scriptNode67.debugPrint();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode60, (com.google.javascript.rhino.head.ast.Scope) scriptNode67);
        com.google.javascript.rhino.head.ast.Scope scope74 = new com.google.javascript.rhino.head.ast.Scope();
        scriptNode67.target = scope74;
        functionNode55.addChildScope(scope74);
        boolean boolean77 = functionNode55.isGetter();
        symbol49.setNode((com.google.javascript.rhino.head.Node) functionNode55);
        boolean boolean79 = strMap33.replace("{\n}\n", symbol43, symbol49);
        java.util.Set<java.util.Map.Entry<java.lang.String, com.google.javascript.rhino.head.ast.Symbol>> strEntrySet80 = strMap33.entrySet();
        java.util.Collection<com.google.javascript.rhino.head.ast.Symbol> symbolCollection81 = strMap33.values();
        boolean boolean82 = strMap33.isEmpty();
        java.lang.Object obj83 = null;
        boolean boolean84 = strMap33.equals(obj83);
        boolean boolean85 = strMap33.isEmpty();
        org.junit.Assert.assertNotNull(scriptNode3);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNull(scopeList24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str26, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "                    {\n                    }\n" + "'", str32, "                    {\n                    }\n");
        org.junit.Assert.assertNotNull(strMap33);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertNotNull(symbolList40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "EOF" + "'", str44, "EOF");
        org.junit.Assert.assertNull(scope45);
        org.junit.Assert.assertNull(node48);
        org.junit.Assert.assertNull(node50);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "EOF" + "'", str53, "EOF");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "Symbol (EOF) name=null" + "'", str54, "Symbol (EOF) name=null");
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1));
        org.junit.Assert.assertNotNull(scriptNode57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + (-1) + "'", int61 == (-1));
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + (-1) + "'", int62 == (-1));
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + (-1) + "'", int68 == (-1));
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + (-1) + "'", int69 == (-1));
        org.junit.Assert.assertNull(scopeList70);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str72, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(strEntrySet80);
        org.junit.Assert.assertNotNull(symbolCollection81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
    }

    @Test
    public void test10323() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10323");
        com.google.javascript.rhino.head.ast.Jump jump4 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump4.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump8 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump4, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int11 = scriptNode10.getEndLineno();
        int int12 = scriptNode10.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList13 = scriptNode10.getChildScopes();
        com.google.javascript.rhino.head.Node node14 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump4, (com.google.javascript.rhino.head.Node) scriptNode10);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList15 = scriptNode10.getFunctions();
        int int16 = functionNodeList15.size();
        functionNodeList15.clear();
        int int19 = functionNodeList15.indexOf((java.lang.Object) 10L);
        java.util.Iterator<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeItor20 = functionNodeList15.iterator();
        java.util.stream.Stream<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeStream21 = functionNodeList15.stream();
        boolean boolean22 = functionNodeList15.isEmpty();
        int int24 = functionNodeList15.indexOf((java.lang.Object) "                                                                                                                                                                                                          /null/");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode25 = new com.google.javascript.rhino.head.ast.FunctionNode();
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList26 = functionNode25.getFunctions();
        java.util.stream.Stream<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeStream27 = functionNodeList26.parallelStream();
        java.lang.Object[] objArray28 = functionNodeList26.toArray();
        boolean boolean29 = functionNodeList15.retainAll((java.util.Collection<com.google.javascript.rhino.head.ast.FunctionNode>) functionNodeList26);
        boolean boolean31 = functionNodeList15.remove((java.lang.Object) 100L);
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList34 = functionNodeList15.subList(0, 8);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: toIndex = 8");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNull(scopeList13);
        org.junit.Assert.assertNotNull(functionNodeList15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(functionNodeItor20);
        org.junit.Assert.assertNotNull(functionNodeStream21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertNotNull(functionNodeList26);
        org.junit.Assert.assertNotNull(functionNodeStream27);
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray28), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray28), "[]");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
    }

    @Test
    public void test10324() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10324");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int2 = scriptNode1.getEndLineno();
        int int3 = scriptNode1.getBaseLineno();
        com.google.javascript.rhino.head.Node node4 = scriptNode1.getNext();
        com.google.javascript.rhino.head.Node node5 = scriptNode1.getFirstChild();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode6 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int7 = functionNode6.getLp();
        functionNode6.setEncodedSource("");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode10 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.Scope scope12 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 10);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode13 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = functionNode13.getTop();
        functionNode13.setParens((int) (byte) 1, (int) (short) 1);
        functionNode13.setEncodedSourceStart((-1));
        functionNode13.setFunctionIsGetter();
        scope12.addChildToFront((com.google.javascript.rhino.head.Node) functionNode13);
        functionNode10.setBody((com.google.javascript.rhino.head.ast.AstNode) functionNode13);
        int int23 = functionNode6.addFunction(functionNode10);
        java.lang.String str24 = functionNode6.toString();
        int int25 = scriptNode1.addFunction(functionNode6);
        java.lang.String str26 = scriptNode1.shortName();
        com.google.javascript.rhino.head.ast.Jump jump27 = null;
        // The following exception was thrown during execution in test generation
        try {
            scriptNode1.setJumpStatement(jump27);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNull(node4);
        org.junit.Assert.assertNull(node5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(scriptNode14);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "109" + "'", str24, "109");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "ScriptNode" + "'", str26, "ScriptNode");
    }

    @Test
    public void test10325() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10325");
        com.google.javascript.rhino.head.ast.Jump jump4 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump4.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump8 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump4, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int11 = scriptNode10.getEndLineno();
        int int12 = scriptNode10.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList13 = scriptNode10.getChildScopes();
        com.google.javascript.rhino.head.Node node14 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump4, (com.google.javascript.rhino.head.Node) scriptNode10);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList15 = scriptNode10.getFunctions();
        int int16 = functionNodeList15.size();
        com.google.javascript.rhino.head.ast.Jump jump22 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump22.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump26 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump22, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode28 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int29 = scriptNode28.getEndLineno();
        int int30 = scriptNode28.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList31 = scriptNode28.getChildScopes();
        com.google.javascript.rhino.head.Node node32 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump22, (com.google.javascript.rhino.head.Node) scriptNode28);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList33 = scriptNode28.getFunctions();
        functionNodeList33.clear();
        com.google.javascript.rhino.head.ast.Jump jump39 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump39.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump43 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump39, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode45 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int46 = scriptNode45.getEndLineno();
        int int47 = scriptNode45.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList48 = scriptNode45.getChildScopes();
        com.google.javascript.rhino.head.Node node49 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump39, (com.google.javascript.rhino.head.Node) scriptNode45);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList50 = scriptNode45.getFunctions();
        boolean boolean51 = functionNodeList33.removeAll((java.util.Collection<com.google.javascript.rhino.head.ast.FunctionNode>) functionNodeList50);
        boolean boolean52 = functionNodeList15.addAll(0, (java.util.Collection<com.google.javascript.rhino.head.ast.FunctionNode>) functionNodeList33);
        com.google.javascript.rhino.head.ast.Jump jump57 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump57.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump61 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump57, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode63 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int64 = scriptNode63.getEndLineno();
        int int65 = scriptNode63.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList66 = scriptNode63.getChildScopes();
        com.google.javascript.rhino.head.Node node67 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump57, (com.google.javascript.rhino.head.Node) scriptNode63);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList68 = scriptNode63.getFunctions();
        int int69 = functionNodeList68.size();
        functionNodeList68.clear();
        int int72 = functionNodeList68.indexOf((java.lang.Object) 10L);
        java.util.Iterator<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeItor73 = functionNodeList68.iterator();
        boolean boolean74 = functionNodeList15.retainAll((java.util.Collection<com.google.javascript.rhino.head.ast.FunctionNode>) functionNodeList68);
        com.google.javascript.rhino.head.ast.Jump jump79 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump79.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump83 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump79, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode85 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int86 = scriptNode85.getEndLineno();
        int int87 = scriptNode85.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList88 = scriptNode85.getChildScopes();
        com.google.javascript.rhino.head.Node node89 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump79, (com.google.javascript.rhino.head.Node) scriptNode85);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList90 = scriptNode85.getFunctions();
        int int91 = functionNodeList90.size();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator92 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        functionNodeList90.sort((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator92);
        boolean boolean94 = functionNodeList15.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.FunctionNode>) functionNodeList90);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNull(scopeList13);
        org.junit.Assert.assertNotNull(functionNodeList15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertNull(scopeList31);
        org.junit.Assert.assertNotNull(functionNodeList33);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertNull(scopeList48);
        org.junit.Assert.assertNotNull(functionNodeList50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + (-1) + "'", int64 == (-1));
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + (-1) + "'", int65 == (-1));
        org.junit.Assert.assertNull(scopeList66);
        org.junit.Assert.assertNotNull(functionNodeList68);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 0 + "'", int69 == 0);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + (-1) + "'", int72 == (-1));
        org.junit.Assert.assertNotNull(functionNodeItor73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + (-1) + "'", int86 == (-1));
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + (-1) + "'", int87 == (-1));
        org.junit.Assert.assertNull(scopeList88);
        org.junit.Assert.assertNotNull(functionNodeList90);
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + 0 + "'", int91 == 0);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
    }

    @Test
    public void test10326() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10326");
        com.google.javascript.rhino.head.Node node2 = com.google.javascript.rhino.head.Node.newString(301837580, "            /null/$0");
        org.junit.Assert.assertNotNull(node2);
    }

    @Test
    public void test10327() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10327");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode3 = new com.google.javascript.rhino.head.ast.FunctionNode(0);
        int int4 = functionNode3.getBaseLineno();
        boolean boolean5 = functionNode3.isGetter();
        com.google.javascript.rhino.head.ast.RegExpLiteral regExpLiteral7 = new com.google.javascript.rhino.head.ast.RegExpLiteral((int) (short) 1);
        regExpLiteral7.setFlags("-1\tSCRIPT -1 1\n");
        java.lang.String str10 = regExpLiteral7.getValue();
        regExpLiteral7.setFlags("52");
        functionNode3.addChildrenToFront((com.google.javascript.rhino.head.Node) regExpLiteral7);
        com.google.javascript.rhino.head.Node node14 = new com.google.javascript.rhino.head.Node(1, (com.google.javascript.rhino.head.Node) regExpLiteral7);
        com.google.javascript.rhino.head.Node node16 = regExpLiteral7.setType(26);
        com.google.javascript.rhino.head.ast.RegExpLiteral regExpLiteral19 = new com.google.javascript.rhino.head.ast.RegExpLiteral(48, 10);
        regExpLiteral7.addChild((com.google.javascript.rhino.head.ast.AstNode) regExpLiteral19);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode23 = new com.google.javascript.rhino.head.ast.FunctionNode(0);
        int int24 = functionNode23.getBaseLineno();
        boolean boolean25 = functionNode23.isGetter();
        com.google.javascript.rhino.head.ast.RegExpLiteral regExpLiteral27 = new com.google.javascript.rhino.head.ast.RegExpLiteral((int) (short) 1);
        regExpLiteral27.setFlags("-1\tSCRIPT -1 1\n");
        java.lang.String str30 = regExpLiteral27.getValue();
        regExpLiteral27.setFlags("52");
        functionNode23.addChildrenToFront((com.google.javascript.rhino.head.Node) regExpLiteral27);
        com.google.javascript.rhino.head.Node node34 = new com.google.javascript.rhino.head.Node(1, (com.google.javascript.rhino.head.Node) regExpLiteral27);
        com.google.javascript.rhino.head.Node node36 = regExpLiteral27.setType(26);
        com.google.javascript.rhino.head.Node node38 = new com.google.javascript.rhino.head.Node(136, (com.google.javascript.rhino.head.Node) regExpLiteral7, node36, (-3));
        com.google.javascript.rhino.head.Token.CommentType commentType41 = com.google.javascript.rhino.head.Token.CommentType.HTML;
        com.google.javascript.rhino.head.ast.Comment comment43 = new com.google.javascript.rhino.head.ast.Comment(20, 1, commentType41, "109");
        java.lang.String str45 = comment43.toSource(19);
        java.lang.String str46 = comment43.getValue();
        java.lang.String str47 = comment43.getValue();
        com.google.javascript.rhino.head.Token.CommentType commentType48 = com.google.javascript.rhino.head.Token.CommentType.BLOCK_COMMENT;
        comment43.setCommentType(commentType48);
        regExpLiteral7.setJsDocNode(comment43);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(node16);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNotNull(node36);
        org.junit.Assert.assertTrue("'" + commentType41 + "' != '" + com.google.javascript.rhino.head.Token.CommentType.HTML + "'", commentType41.equals(com.google.javascript.rhino.head.Token.CommentType.HTML));
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "                                      109" + "'", str45, "                                      109");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "109" + "'", str46, "109");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "109" + "'", str47, "109");
        org.junit.Assert.assertTrue("'" + commentType48 + "' != '" + com.google.javascript.rhino.head.Token.CommentType.BLOCK_COMMENT + "'", commentType48.equals(com.google.javascript.rhino.head.Token.CommentType.BLOCK_COMMENT));
    }

    @Test
    public void test10328() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10328");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode1 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = functionNode1.getTop();
        functionNode1.setParens((int) (byte) 1, (int) (short) 1);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode6 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.Scope scope8 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 10);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode9 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = functionNode9.getTop();
        functionNode9.setParens((int) (byte) 1, (int) (short) 1);
        functionNode9.setEncodedSourceStart((-1));
        functionNode9.setFunctionIsGetter();
        scope8.addChildToFront((com.google.javascript.rhino.head.Node) functionNode9);
        functionNode6.setBody((com.google.javascript.rhino.head.ast.AstNode) functionNode9);
        functionNode6.setFunctionIsSetter();
        int int20 = functionNode1.addFunction(functionNode6);
        functionNode1.setEncodedSourceStart(1);
        boolean boolean23 = functionNode1.isExpressionClosure();
        com.google.javascript.rhino.head.ast.Symbol symbol25 = functionNode1.getSymbol("  {\n  }\n");
        functionNode1.setFunctionIsSetter();
        functionNode1.setEncodedSource("8");
        com.google.javascript.rhino.head.Node node30 = functionNode1.setType(6);
        com.google.javascript.rhino.head.Node node32 = new com.google.javascript.rhino.head.Node(35, (com.google.javascript.rhino.head.Node) functionNode1, (int) (short) 100);
        functionNode1.clearParentScope();
        boolean boolean34 = functionNode1.hasSideEffects();
        int int35 = functionNode1.getFunctionType();
        org.junit.Assert.assertNotNull(scriptNode2);
        org.junit.Assert.assertNotNull(scriptNode10);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNull(symbol25);
        org.junit.Assert.assertNotNull(node30);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
    }

    @Test
    public void test10329() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10329");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode0 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int1 = functionNode0.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = functionNode0.getTop();
        com.google.javascript.rhino.head.ast.Name name3 = null;
        functionNode0.setFunctionName(name3);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode5 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int6 = functionNode5.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode8 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        java.lang.String str9 = functionNode5.toStringTree(scriptNode8);
        functionNode5.setFunctionIsGetter();
        int int11 = functionNode0.addFunction(functionNode5);
        boolean boolean12 = functionNode5.hasSideEffects();
        int int13 = functionNode5.getAbsolutePosition();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap14 = functionNode5.getSymbolTable();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode15 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode16 = functionNode15.getTop();
        functionNode15.setParens((int) (byte) 1, (int) (short) 1);
        functionNode15.setEncodedSourceStart((-1));
        functionNode15.setParens(5, (int) (short) 100);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode26 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int27 = functionNode26.getLp();
        functionNode26.setEncodedSource("");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode30 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int31 = functionNode30.getLp();
        functionNode30.setEncodedSource("");
        functionNode30.flattenSymbolTable(false);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode36 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int37 = functionNode36.getLp();
        com.google.javascript.rhino.head.Node node39 = new com.google.javascript.rhino.head.Node((-1), (com.google.javascript.rhino.head.Node) functionNode26, (com.google.javascript.rhino.head.Node) functionNode30, (com.google.javascript.rhino.head.Node) functionNode36, (int) '#');
        com.google.javascript.rhino.head.ast.AstNode astNode40 = functionNode26.getBody();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode41 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int42 = functionNode41.getLp();
        functionNode41.setEncodedSource("");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode45 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int46 = functionNode45.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode47 = functionNode45.getTop();
        com.google.javascript.rhino.head.ast.Name name48 = null;
        functionNode45.setFunctionName(name48);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode50 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode51 = functionNode50.getTop();
        functionNode45.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode50);
        int int53 = functionNode50.getRp();
        int int54 = functionNode50.getFunctionType();
        functionNode41.addParam((com.google.javascript.rhino.head.ast.AstNode) functionNode50);
        com.google.javascript.rhino.head.ast.Scope scope56 = functionNode50.getEnclosingScope();
        functionNode26.setBody((com.google.javascript.rhino.head.ast.AstNode) functionNode50);
        functionNode50.setLp(26);
        functionNode15.target = functionNode50;
        functionNode15.setEncodedSourceEnd(0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode64 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int65 = scriptNode64.getEndLineno();
        int int66 = scriptNode64.getBaseLineno();
        com.google.javascript.rhino.head.ast.Jump jump69 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode71 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int72 = scriptNode71.getEndLineno();
        int int73 = scriptNode71.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList74 = scriptNode71.getChildScopes();
        jump69.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode71);
        java.lang.String str76 = scriptNode71.debugPrint();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode64, (com.google.javascript.rhino.head.ast.Scope) scriptNode71);
        com.google.javascript.rhino.head.ast.Scope scope78 = new com.google.javascript.rhino.head.ast.Scope();
        scriptNode71.target = scope78;
        int int80 = scriptNode71.getEncodedSourceStart();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode82 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int83 = scriptNode82.getEndLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode85 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int86 = scriptNode85.getEndLineno();
        scriptNode82.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode85);
        com.google.javascript.rhino.head.ast.Comment comment88 = null;
        scriptNode82.setJsDocNode(comment88);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList90 = scriptNode82.getSymbols();
        scriptNode71.setSymbols(symbolList90);
        functionNode15.setSymbols(symbolList90);
        functionNode5.setSymbols(symbolList90);
        boolean boolean94 = functionNode5.isGetter();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList95 = functionNode5.getChildScopes();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-1) + "'", int1 == (-1));
        org.junit.Assert.assertNotNull(scriptNode2);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertNotNull(scriptNode16);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertNull(astNode40);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertNotNull(scriptNode47);
        org.junit.Assert.assertNotNull(scriptNode51);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
        org.junit.Assert.assertNotNull(scope56);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + (-1) + "'", int65 == (-1));
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + (-1) + "'", int66 == (-1));
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + (-1) + "'", int72 == (-1));
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + (-1) + "'", int73 == (-1));
        org.junit.Assert.assertNull(scopeList74);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str76, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + (-1) + "'", int80 == (-1));
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + (-1) + "'", int83 == (-1));
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + (-1) + "'", int86 == (-1));
        org.junit.Assert.assertNotNull(symbolList90);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + true + "'", boolean94 == true);
        org.junit.Assert.assertNull(scopeList95);
    }

    @Test
    public void test10330() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10330");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode0 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = functionNode0.getTop();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode3 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int4 = functionNode3.getLp();
        functionNode3.setEncodedSource("");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode7 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int8 = functionNode7.getLp();
        functionNode7.setEncodedSource("");
        functionNode7.flattenSymbolTable(false);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode13 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int14 = functionNode13.getLp();
        com.google.javascript.rhino.head.Node node16 = new com.google.javascript.rhino.head.Node((-1), (com.google.javascript.rhino.head.Node) functionNode3, (com.google.javascript.rhino.head.Node) functionNode7, (com.google.javascript.rhino.head.Node) functionNode13, (int) '#');
        com.google.javascript.rhino.head.ast.AstNode astNode17 = functionNode3.getBody();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode18 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int19 = functionNode18.getLp();
        functionNode18.setEncodedSource("");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode22 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int23 = functionNode22.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode24 = functionNode22.getTop();
        com.google.javascript.rhino.head.ast.Name name25 = null;
        functionNode22.setFunctionName(name25);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode27 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode28 = functionNode27.getTop();
        functionNode22.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode27);
        int int30 = functionNode27.getRp();
        int int31 = functionNode27.getFunctionType();
        functionNode18.addParam((com.google.javascript.rhino.head.ast.AstNode) functionNode27);
        com.google.javascript.rhino.head.ast.Scope scope33 = functionNode27.getEnclosingScope();
        functionNode3.setBody((com.google.javascript.rhino.head.ast.AstNode) functionNode27);
        int int35 = functionNode0.addFunction(functionNode3);
        com.google.javascript.rhino.head.Token.CommentType commentType38 = com.google.javascript.rhino.head.Token.CommentType.HTML;
        com.google.javascript.rhino.head.ast.Comment comment40 = new com.google.javascript.rhino.head.ast.Comment(20, 1, commentType38, "109");
        java.lang.String str42 = comment40.toSource(19);
        com.google.javascript.rhino.head.Token.CommentType commentType43 = comment40.getCommentType();
        int int44 = comment40.getLineno();
        functionNode3.addChildToFront((com.google.javascript.rhino.head.Node) comment40);
        com.google.javascript.rhino.head.Token.CommentType commentType50 = com.google.javascript.rhino.head.Token.CommentType.HTML;
        com.google.javascript.rhino.head.ast.Comment comment52 = new com.google.javascript.rhino.head.ast.Comment(20, 1, commentType50, "109");
        com.google.javascript.rhino.head.ast.Comment comment54 = new com.google.javascript.rhino.head.ast.Comment(20, 1579347477, commentType50, "$0");
        comment40.setCommentType(commentType50);
        java.lang.String str57 = comment40.toSource((-793599801));
        // The following exception was thrown during execution in test generation
        try {
            comment40.labelId(819764875);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(scriptNode1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNull(astNode17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNotNull(scriptNode24);
        org.junit.Assert.assertNotNull(scriptNode28);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNotNull(scope33);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertTrue("'" + commentType38 + "' != '" + com.google.javascript.rhino.head.Token.CommentType.HTML + "'", commentType38.equals(com.google.javascript.rhino.head.Token.CommentType.HTML));
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "                                      109" + "'", str42, "                                      109");
        org.junit.Assert.assertTrue("'" + commentType43 + "' != '" + com.google.javascript.rhino.head.Token.CommentType.HTML + "'", commentType43.equals(com.google.javascript.rhino.head.Token.CommentType.HTML));
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertTrue("'" + commentType50 + "' != '" + com.google.javascript.rhino.head.Token.CommentType.HTML + "'", commentType50.equals(com.google.javascript.rhino.head.Token.CommentType.HTML));
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "109" + "'", str57, "109");
    }

    @Test
    public void test10331() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10331");
        com.google.javascript.rhino.head.Node node1 = com.google.javascript.rhino.head.Node.newNumber((double) 23);
        org.junit.Assert.assertNotNull(node1);
    }

    @Test
    public void test10332() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10332");
        com.google.javascript.rhino.head.ast.Symbol symbol0 = new com.google.javascript.rhino.head.ast.Symbol();
        java.lang.String str1 = symbol0.getName();
        com.google.javascript.rhino.head.Node node2 = symbol0.getNode();
        java.lang.String str3 = symbol0.toString();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode5 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int6 = functionNode5.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode7 = functionNode5.getTop();
        com.google.javascript.rhino.head.ast.Name name8 = null;
        functionNode5.setFunctionName(name8);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode10 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = functionNode10.getTop();
        functionNode5.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode10);
        functionNode10.setIsExpressionClosure(true);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode16 = new com.google.javascript.rhino.head.ast.FunctionNode((int) (byte) 100);
        int int17 = functionNode10.addFunction(functionNode16);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode19 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode20 = functionNode19.getTop();
        java.lang.String str21 = scriptNode20.getJsDoc();
        com.google.javascript.rhino.head.Node node23 = scriptNode20.setType(0);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode24 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int25 = functionNode24.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode27 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        java.lang.String str28 = functionNode24.toStringTree(scriptNode27);
        com.google.javascript.rhino.head.ast.Scope scope30 = scriptNode27.getDefiningScope("");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode32 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int33 = scriptNode32.getEndLineno();
        int int34 = scriptNode32.getBaseLineno();
        com.google.javascript.rhino.head.Node node35 = new com.google.javascript.rhino.head.Node(25, node23, (com.google.javascript.rhino.head.Node) scriptNode27, (com.google.javascript.rhino.head.Node) scriptNode32);
        int int36 = functionNode16.compareTo((com.google.javascript.rhino.head.ast.AstNode) scriptNode27);
        com.google.javascript.rhino.head.ast.RegExpLiteral regExpLiteral38 = new com.google.javascript.rhino.head.ast.RegExpLiteral((int) (short) 1);
        regExpLiteral38.setFlags("-1\tSCRIPT -1 1\n");
        regExpLiteral38.setFlags("/null/-1\tSCRIPT -1 1\n");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode43 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int44 = functionNode43.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode45 = functionNode43.getTop();
        com.google.javascript.rhino.head.ast.Name name46 = null;
        functionNode43.setFunctionName(name46);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode48 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode49 = functionNode48.getTop();
        functionNode43.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode48);
        int int51 = functionNode48.getRp();
        int int52 = functionNode48.getFunctionType();
        boolean boolean53 = functionNode48.requiresActivation();
        com.google.javascript.rhino.head.Node node54 = new com.google.javascript.rhino.head.Node(26, (com.google.javascript.rhino.head.Node) scriptNode27, (com.google.javascript.rhino.head.Node) regExpLiteral38, (com.google.javascript.rhino.head.Node) functionNode48);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode56 = new com.google.javascript.rhino.head.ast.FunctionNode(0);
        int int57 = functionNode56.getBaseLineno();
        functionNode56.setSourceName("                                                                                                                                                                                                        /null/");
        com.google.javascript.rhino.head.ast.AstNode astNode60 = functionNode56.getBody();
        functionNode48.replaceWith((com.google.javascript.rhino.head.ast.Scope) functionNode56);
        symbol0.setContainingTable((com.google.javascript.rhino.head.ast.Scope) functionNode56);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode64 = new com.google.javascript.rhino.head.ast.FunctionNode((int) (byte) 100);
        com.google.javascript.rhino.head.ast.Scope scope65 = functionNode64.getEnclosingScope();
        java.lang.Object obj66 = functionNode64.getCompilerData();
        boolean boolean67 = functionNode64.isSetter();
        boolean boolean68 = functionNode56.isParam((com.google.javascript.rhino.head.ast.AstNode) functionNode64);
        int int69 = functionNode56.getLp();
        int int70 = functionNode56.getEncodedSourceEnd();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Symbol (EOF) name=null" + "'", str3, "Symbol (EOF) name=null");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(scriptNode7);
        org.junit.Assert.assertNotNull(scriptNode11);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(scriptNode20);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(node23);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNull(scope30);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 1 + "'", int36 == 1);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertNotNull(scriptNode45);
        org.junit.Assert.assertNotNull(scriptNode49);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1));
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
        org.junit.Assert.assertNull(astNode60);
        org.junit.Assert.assertNull(scope65);
        org.junit.Assert.assertNull(obj66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + (-1) + "'", int69 == (-1));
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + (-1) + "'", int70 == (-1));
    }

    @Test
    public void test10333() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10333");
        com.google.javascript.rhino.head.Node node1 = new com.google.javascript.rhino.head.Node((-616130778));
    }

    @Test
    public void test10334() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10334");
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope(15, (int) (byte) 0);
        com.google.javascript.rhino.head.ast.Symbol symbol4 = scope2.getSymbol("");
        com.google.javascript.rhino.head.ast.Name name6 = null;
        com.google.javascript.rhino.head.ast.FunctionNode functionNode7 = new com.google.javascript.rhino.head.ast.FunctionNode(1, name6);
        boolean boolean8 = functionNode7.isGetterOrSetter();
        int int9 = functionNode7.getEncodedSourceEnd();
        scope2.addChildrenToBack((com.google.javascript.rhino.head.Node) functionNode7);
        int int11 = functionNode7.getType();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode13 = new com.google.javascript.rhino.head.ast.FunctionNode(0);
        int int14 = functionNode13.getBaseLineno();
        boolean boolean15 = functionNode13.isGetter();
        com.google.javascript.rhino.head.ast.RegExpLiteral regExpLiteral17 = new com.google.javascript.rhino.head.ast.RegExpLiteral((int) (short) 1);
        regExpLiteral17.setFlags("-1\tSCRIPT -1 1\n");
        java.lang.String str20 = regExpLiteral17.getValue();
        regExpLiteral17.setFlags("52");
        functionNode13.addChildrenToFront((com.google.javascript.rhino.head.Node) regExpLiteral17);
        boolean boolean24 = functionNode13.isGetterOrSetter();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode25 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode26 = functionNode25.getTop();
        int int27 = functionNode25.getRegexpCount();
        int int28 = functionNode25.getParamCount();
        com.google.javascript.rhino.head.ast.AstNode astNode29 = functionNode25.getBody();
        int int30 = functionNode13.addFunction(functionNode25);
        functionNode25.setEncodedSourceStart(17);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode33 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int34 = functionNode33.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode35 = functionNode33.getTop();
        com.google.javascript.rhino.head.ast.AstNode astNode36 = functionNode33.getBody();
        com.google.javascript.rhino.head.ast.Scope scope37 = functionNode33.getParentScope();
        int int38 = functionNode25.addFunction(functionNode33);
        int int39 = functionNode33.getLineno();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode40 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int41 = functionNode40.getLp();
        functionNode40.setEncodedSource("");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode44 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int45 = functionNode44.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode46 = functionNode44.getTop();
        com.google.javascript.rhino.head.ast.Name name47 = null;
        functionNode44.setFunctionName(name47);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode49 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode50 = functionNode49.getTop();
        functionNode44.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode49);
        int int52 = functionNode49.getRp();
        int int53 = functionNode49.getFunctionType();
        functionNode40.addParam((com.google.javascript.rhino.head.ast.AstNode) functionNode49);
        com.google.javascript.rhino.head.ast.Scope scope55 = functionNode49.getEnclosingScope();
        com.google.javascript.rhino.head.ast.AstNode astNode56 = scope55.getParent();
        com.google.javascript.rhino.head.Node node57 = scope55.getLastSibling();
        functionNode33.setMemberExprNode((com.google.javascript.rhino.head.ast.AstNode) scope55);
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList59 = scope55.getStatements();
        functionNode7.setParams(astNodeList59);
        org.junit.Assert.assertNull(symbol4);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 109 + "'", int11 == 109);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(scriptNode26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertNull(astNode29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertNotNull(scriptNode35);
        org.junit.Assert.assertNull(astNode36);
        org.junit.Assert.assertNull(scope37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
        org.junit.Assert.assertNotNull(scriptNode46);
        org.junit.Assert.assertNotNull(scriptNode50);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertNotNull(scope55);
        org.junit.Assert.assertNull(astNode56);
        org.junit.Assert.assertNotNull(node57);
        org.junit.Assert.assertNotNull(astNodeList59);
    }

    @Test
    public void test10335() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10335");
        com.google.javascript.rhino.head.ast.Name name1 = null;
        com.google.javascript.rhino.head.ast.FunctionNode functionNode2 = new com.google.javascript.rhino.head.ast.FunctionNode((int) (short) -1, name1);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode5 = new com.google.javascript.rhino.head.ast.FunctionNode(0);
        int int6 = functionNode5.getBaseLineno();
        boolean boolean7 = functionNode5.isGetter();
        com.google.javascript.rhino.head.ast.RegExpLiteral regExpLiteral9 = new com.google.javascript.rhino.head.ast.RegExpLiteral((int) (short) 1);
        regExpLiteral9.setFlags("-1\tSCRIPT -1 1\n");
        java.lang.String str12 = regExpLiteral9.getValue();
        regExpLiteral9.setFlags("52");
        functionNode5.addChildrenToFront((com.google.javascript.rhino.head.Node) regExpLiteral9);
        com.google.javascript.rhino.head.ast.Scope scope16 = new com.google.javascript.rhino.head.ast.Scope();
        scope16.setBounds(0, 10);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode20 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode21 = functionNode20.getTop();
        int int22 = functionNode20.getRegexpCount();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode23 = functionNode20.getEnclosingFunction();
        java.lang.String str24 = scope16.toStringTree((com.google.javascript.rhino.head.ast.ScriptNode) functionNode20);
        java.lang.String str25 = functionNode20.shortName();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap26 = functionNode20.getSymbolTable();
        com.google.javascript.rhino.head.Node node28 = new com.google.javascript.rhino.head.Node(628528643, (com.google.javascript.rhino.head.Node) regExpLiteral9, (com.google.javascript.rhino.head.Node) functionNode20, (int) 'a');
        functionNode2.addChild((com.google.javascript.rhino.head.ast.AstNode) regExpLiteral9);
        // The following exception was thrown during execution in test generation
        try {
            regExpLiteral9.resetTargets();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(scriptNode21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNull(functionNode23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "FunctionNode" + "'", str25, "FunctionNode");
        org.junit.Assert.assertNull(strMap26);
    }

    @Test
    public void test10336() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10336");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode0 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int1 = functionNode0.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = functionNode0.getTop();
        com.google.javascript.rhino.head.ast.Name name3 = null;
        functionNode0.setFunctionName(name3);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode5 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = functionNode5.getTop();
        functionNode0.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode5);
        int int8 = functionNode5.getRp();
        int int9 = functionNode5.getFunctionType();
        boolean boolean10 = functionNode5.isExpressionClosure();
        com.google.javascript.rhino.head.ast.Jump jump12 = new com.google.javascript.rhino.head.ast.Jump((int) (short) 0);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode13 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int14 = functionNode13.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode15 = functionNode13.getTop();
        com.google.javascript.rhino.head.ast.Name name16 = null;
        functionNode13.setFunctionName(name16);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode18 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode19 = functionNode18.getTop();
        functionNode13.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode18);
        functionNode18.setIsExpressionClosure(true);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode24 = new com.google.javascript.rhino.head.ast.FunctionNode((int) (byte) 100);
        int int25 = functionNode18.addFunction(functionNode24);
        int int26 = jump12.compareTo((com.google.javascript.rhino.head.ast.AstNode) functionNode24);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode28 = new com.google.javascript.rhino.head.ast.FunctionNode(0);
        com.google.javascript.rhino.head.ast.Jump jump34 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump34.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump38 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump34, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode40 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int41 = scriptNode40.getEndLineno();
        int int42 = scriptNode40.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList43 = scriptNode40.getChildScopes();
        com.google.javascript.rhino.head.Node node44 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump34, (com.google.javascript.rhino.head.Node) scriptNode40);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList45 = scriptNode40.getFunctions();
        functionNodeList45.clear();
        com.google.javascript.rhino.head.ast.Jump jump51 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump51.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump55 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump51, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode57 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int58 = scriptNode57.getEndLineno();
        int int59 = scriptNode57.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList60 = scriptNode57.getChildScopes();
        com.google.javascript.rhino.head.Node node61 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump51, (com.google.javascript.rhino.head.Node) scriptNode57);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList62 = scriptNode57.getFunctions();
        boolean boolean63 = functionNodeList45.removeAll((java.util.Collection<com.google.javascript.rhino.head.ast.FunctionNode>) functionNodeList62);
        functionNode28.putProp(20, (java.lang.Object) functionNodeList45);
        int int65 = functionNode24.addFunction(functionNode28);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode66 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode67 = functionNode66.getTop();
        functionNode66.setParens((int) (byte) 1, (int) (short) 1);
        functionNode66.setEncodedSourceStart((-1));
        java.util.List<com.google.javascript.rhino.head.Node> nodeList73 = functionNode66.getResumptionPoints();
        com.google.javascript.rhino.head.ast.Scope scope75 = functionNode66.getDefiningScope("hi!");
        boolean boolean76 = functionNode66.isGetterOrSetter();
        com.google.javascript.rhino.head.ast.Scope scope78 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 10);
        int[] intArray85 = new int[] { 25, 17, (short) 0, 20, 19, (byte) 1 };
        functionNode66.addLiveLocals((com.google.javascript.rhino.head.Node) scope78, intArray85);
        functionNode5.addLiveLocals((com.google.javascript.rhino.head.Node) functionNode28, intArray85);
        int int88 = functionNode5.getEncodedSourceStart();
        functionNode5.setEncodedSource("                                            {\n                                            }\n");
        int int91 = functionNode5.getType();
        int int92 = functionNode5.getEncodedSourceEnd();
        java.util.List<com.google.javascript.rhino.head.Node> nodeList93 = functionNode5.getResumptionPoints();
        com.google.javascript.rhino.head.ast.Name name94 = functionNode5.getFunctionName();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-1) + "'", int1 == (-1));
        org.junit.Assert.assertNotNull(scriptNode2);
        org.junit.Assert.assertNotNull(scriptNode6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNotNull(scriptNode15);
        org.junit.Assert.assertNotNull(scriptNode19);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertNull(scopeList43);
        org.junit.Assert.assertNotNull(functionNodeList45);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + (-1) + "'", int58 == (-1));
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-1) + "'", int59 == (-1));
        org.junit.Assert.assertNull(scopeList60);
        org.junit.Assert.assertNotNull(functionNodeList62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 0 + "'", int65 == 0);
        org.junit.Assert.assertNotNull(scriptNode67);
        org.junit.Assert.assertNull(nodeList73);
        org.junit.Assert.assertNull(scope75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[25, 17, 0, 20, 19, 1]");
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + (-1) + "'", int88 == (-1));
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + 109 + "'", int91 == 109);
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + (-1) + "'", int92 == (-1));
        org.junit.Assert.assertNull(nodeList93);
        org.junit.Assert.assertNull(name94);
    }

    @Test
    public void test10337() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10337");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode1 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int2 = functionNode1.getLp();
        functionNode1.setEncodedSource("");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode5 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int6 = functionNode5.getLp();
        functionNode5.setEncodedSource("");
        functionNode5.flattenSymbolTable(false);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode11 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int12 = functionNode11.getLp();
        com.google.javascript.rhino.head.Node node14 = new com.google.javascript.rhino.head.Node((-1), (com.google.javascript.rhino.head.Node) functionNode1, (com.google.javascript.rhino.head.Node) functionNode5, (com.google.javascript.rhino.head.Node) functionNode11, (int) '#');
        functionNode11.setEncodedSourceStart(25);
        boolean boolean17 = functionNode11.requiresActivation();
        java.lang.String str18 = functionNode11.getNextTempName();
        boolean boolean19 = functionNode11.hasChildren();
        functionNode11.setLength((-1));
        com.google.javascript.rhino.head.Node node23 = functionNode11.setType(5);
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList24 = functionNode11.getParams();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "$0" + "'", str18, "$0");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(node23);
        org.junit.Assert.assertNotNull(astNodeList24);
    }

    @Test
    public void test10338() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10338");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 10);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode2 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode3 = functionNode2.getTop();
        functionNode2.setParens((int) (byte) 1, (int) (short) 1);
        functionNode2.setEncodedSourceStart((-1));
        functionNode2.setFunctionIsGetter();
        scope1.addChildToFront((com.google.javascript.rhino.head.Node) functionNode2);
        functionNode2.setRp(19);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int15 = scriptNode14.getEndLineno();
        int int16 = scriptNode14.getBaseLineno();
        com.google.javascript.rhino.head.ast.Jump jump19 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode21 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int22 = scriptNode21.getEndLineno();
        int int23 = scriptNode21.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList24 = scriptNode21.getChildScopes();
        jump19.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode21);
        java.lang.String str26 = scriptNode21.debugPrint();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode14, (com.google.javascript.rhino.head.ast.Scope) scriptNode21);
        com.google.javascript.rhino.head.ast.Scope scope28 = new com.google.javascript.rhino.head.ast.Scope();
        scriptNode21.target = scope28;
        java.lang.String str30 = functionNode2.toStringTree(scriptNode21);
        java.lang.String str32 = scriptNode21.toSource((int) (short) 10);
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap33 = scriptNode21.getSymbolTable();
        int int34 = strMap33.size();
        com.google.javascript.rhino.head.ast.Jump jump39 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump39.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump43 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump39, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode45 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int46 = scriptNode45.getEndLineno();
        int int47 = scriptNode45.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList48 = scriptNode45.getChildScopes();
        com.google.javascript.rhino.head.Node node49 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump39, (com.google.javascript.rhino.head.Node) scriptNode45);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList50 = scriptNode45.getFunctions();
        functionNodeList50.clear();
        functionNodeList50.clear();
        com.google.javascript.rhino.head.ast.Jump jump57 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump57.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump61 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump57, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode63 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int64 = scriptNode63.getEndLineno();
        int int65 = scriptNode63.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList66 = scriptNode63.getChildScopes();
        com.google.javascript.rhino.head.Node node67 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump57, (com.google.javascript.rhino.head.Node) scriptNode63);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList68 = scriptNode63.getFunctions();
        java.util.Spliterator<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeSpliterator69 = functionNodeList68.spliterator();
        int int71 = functionNodeList68.indexOf((java.lang.Object) (byte) 10);
        boolean boolean72 = functionNodeList50.retainAll((java.util.Collection<com.google.javascript.rhino.head.ast.FunctionNode>) functionNodeList68);
        boolean boolean73 = strMap33.containsKey((java.lang.Object) functionNodeList50);
        java.util.Collection<com.google.javascript.rhino.head.ast.Symbol> symbolCollection74 = strMap33.values();
        com.google.javascript.rhino.head.Node node76 = com.google.javascript.rhino.head.Node.newNumber((double) '#');
        com.google.javascript.rhino.head.ast.Symbol symbol77 = strMap33.get((java.lang.Object) '#');
        com.google.javascript.rhino.head.ast.FunctionNode functionNode78 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int79 = functionNode78.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode80 = functionNode78.getTop();
        com.google.javascript.rhino.head.Node node81 = functionNode78.getLastSibling();
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList82 = functionNode78.getParams();
        com.google.javascript.rhino.head.ast.Symbol symbol83 = new com.google.javascript.rhino.head.ast.Symbol();
        int int84 = symbol83.getIndex();
        symbol83.setIndex(35);
        com.google.javascript.rhino.head.ast.Symbol symbol87 = strMap33.getOrDefault((java.lang.Object) functionNode78, symbol83);
        java.lang.String str88 = functionNode78.getNextTempName();
        int int89 = functionNode78.getLp();
        int int90 = functionNode78.getLength();
        com.google.javascript.rhino.head.Node node93 = new com.google.javascript.rhino.head.Node(8, 19);
        java.lang.Object obj95 = node93.getProp((int) (short) 0);
        functionNode78.setCompilerData((java.lang.Object) (short) 0);
        org.junit.Assert.assertNotNull(scriptNode3);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNull(scopeList24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str26, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "                    {\n                    }\n" + "'", str32, "                    {\n                    }\n");
        org.junit.Assert.assertNotNull(strMap33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertNull(scopeList48);
        org.junit.Assert.assertNotNull(functionNodeList50);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + (-1) + "'", int64 == (-1));
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + (-1) + "'", int65 == (-1));
        org.junit.Assert.assertNull(scopeList66);
        org.junit.Assert.assertNotNull(functionNodeList68);
        org.junit.Assert.assertNotNull(functionNodeSpliterator69);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + (-1) + "'", int71 == (-1));
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(symbolCollection74);
        org.junit.Assert.assertNotNull(node76);
        org.junit.Assert.assertNull(symbol77);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + (-1) + "'", int79 == (-1));
        org.junit.Assert.assertNotNull(scriptNode80);
        org.junit.Assert.assertNotNull(node81);
        org.junit.Assert.assertNotNull(astNodeList82);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + (-1) + "'", int84 == (-1));
        org.junit.Assert.assertNotNull(symbol87);
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "$0" + "'", str88, "$0");
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + (-1) + "'", int89 == (-1));
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + 1 + "'", int90 == 1);
        org.junit.Assert.assertNull(obj95);
    }

    @Test
    public void test10339() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10339");
        com.google.javascript.rhino.head.ast.Jump jump4 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump4.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump8 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump4, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int11 = scriptNode10.getEndLineno();
        int int12 = scriptNode10.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList13 = scriptNode10.getChildScopes();
        com.google.javascript.rhino.head.Node node14 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump4, (com.google.javascript.rhino.head.Node) scriptNode10);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList15 = scriptNode10.getFunctions();
        functionNodeList15.clear();
        functionNodeList15.clear();
        java.util.Iterator<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeItor18 = functionNodeList15.iterator();
        java.util.stream.Stream<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeStream19 = functionNodeList15.parallelStream();
        java.util.Iterator<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeItor20 = functionNodeList15.iterator();
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNull(scopeList13);
        org.junit.Assert.assertNotNull(functionNodeList15);
        org.junit.Assert.assertNotNull(functionNodeItor18);
        org.junit.Assert.assertNotNull(functionNodeStream19);
        org.junit.Assert.assertNotNull(functionNodeItor20);
    }

    @Test
    public void test10340() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10340");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode1 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int2 = functionNode1.getLp();
        functionNode1.setEncodedSource("");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode5 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int6 = functionNode5.getLp();
        functionNode5.setEncodedSource("");
        functionNode5.flattenSymbolTable(false);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode11 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int12 = functionNode11.getLp();
        com.google.javascript.rhino.head.Node node14 = new com.google.javascript.rhino.head.Node((-1), (com.google.javascript.rhino.head.Node) functionNode1, (com.google.javascript.rhino.head.Node) functionNode5, (com.google.javascript.rhino.head.Node) functionNode11, (int) '#');
        functionNode11.flattenSymbolTable(true);
        functionNode11.setLineno(1);
        com.google.javascript.rhino.head.ast.Name name19 = null;
        functionNode11.setFunctionName(name19);
        int int21 = functionNode11.getLp();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
    }

    @Test
    public void test10341() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10341");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode0 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 10);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode3 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode4 = functionNode3.getTop();
        functionNode3.setParens((int) (byte) 1, (int) (short) 1);
        functionNode3.setEncodedSourceStart((-1));
        functionNode3.setFunctionIsGetter();
        scope2.addChildToFront((com.google.javascript.rhino.head.Node) functionNode3);
        functionNode0.setBody((com.google.javascript.rhino.head.ast.AstNode) functionNode3);
        int int13 = functionNode0.getRegexpCount();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode14 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int15 = functionNode14.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode16 = functionNode14.getTop();
        com.google.javascript.rhino.head.ast.Name name17 = null;
        functionNode14.setFunctionName(name17);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode19 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode20 = functionNode19.getTop();
        functionNode14.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode19);
        int int22 = functionNode19.getRp();
        functionNode19.setParens(11, 2);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode27 = new com.google.javascript.rhino.head.ast.FunctionNode((-1));
        int int28 = functionNode19.addFunction(functionNode27);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode30 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int31 = scriptNode30.getEndLineno();
        int int32 = scriptNode30.getBaseLineno();
        scriptNode30.removeProp(0);
        scriptNode30.setEncodedSourceEnd(19);
        java.lang.String str37 = scriptNode30.toString();
        int[] intArray39 = new int[] { 26 };
        functionNode19.addLiveLocals((com.google.javascript.rhino.head.Node) scriptNode30, intArray39);
        functionNode0.setMemberExprNode((com.google.javascript.rhino.head.ast.AstNode) functionNode19);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode44 = new com.google.javascript.rhino.head.ast.FunctionNode((int) (byte) 100);
        int int45 = functionNode44.getEncodedSourceStart();
        int int46 = functionNode44.getFunctionCount();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode47 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode48 = functionNode47.getTop();
        functionNode47.setParens((int) (byte) 1, (int) (short) 1);
        int int52 = functionNode47.getRp();
        com.google.javascript.rhino.head.Node node54 = new com.google.javascript.rhino.head.Node(17, (com.google.javascript.rhino.head.Node) functionNode44, (com.google.javascript.rhino.head.Node) functionNode47, (int) (short) 0);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode55 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int56 = functionNode55.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode57 = functionNode55.getTop();
        com.google.javascript.rhino.head.ast.Name name58 = null;
        functionNode55.setFunctionName(name58);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode60 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode61 = functionNode60.getTop();
        functionNode55.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode60);
        functionNode60.setIsExpressionClosure(true);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode66 = new com.google.javascript.rhino.head.ast.FunctionNode((int) (byte) 100);
        int int67 = functionNode60.addFunction(functionNode66);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode69 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode70 = functionNode69.getTop();
        java.lang.String str71 = scriptNode70.getJsDoc();
        com.google.javascript.rhino.head.Node node73 = scriptNode70.setType(0);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode74 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int75 = functionNode74.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode77 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        java.lang.String str78 = functionNode74.toStringTree(scriptNode77);
        com.google.javascript.rhino.head.ast.Scope scope80 = scriptNode77.getDefiningScope("");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode82 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int83 = scriptNode82.getEndLineno();
        int int84 = scriptNode82.getBaseLineno();
        com.google.javascript.rhino.head.Node node85 = new com.google.javascript.rhino.head.Node(25, node73, (com.google.javascript.rhino.head.Node) scriptNode77, (com.google.javascript.rhino.head.Node) scriptNode82);
        int int86 = functionNode66.compareTo((com.google.javascript.rhino.head.ast.AstNode) scriptNode77);
        java.lang.String str87 = node54.toStringTree(scriptNode77);
        functionNode19.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode77);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList89 = functionNode19.getFunctions();
        com.google.javascript.rhino.head.ast.Scope[] scopeArray90 = new com.google.javascript.rhino.head.ast.Scope[] {};
        com.google.javascript.rhino.head.ast.Scope[] scopeArray91 = functionNodeList89.toArray(scopeArray90);
        boolean boolean92 = functionNodeList89.isEmpty();
        int int93 = functionNodeList89.size();
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.ast.FunctionNode functionNode95 = functionNodeList89.get((-446577320));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: -446577320");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(scriptNode4);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(scriptNode16);
        org.junit.Assert.assertNotNull(scriptNode20);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "136" + "'", str37, "136");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[26]");
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertNotNull(scriptNode48);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 1 + "'", int52 == 1);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1));
        org.junit.Assert.assertNotNull(scriptNode57);
        org.junit.Assert.assertNotNull(scriptNode61);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 0 + "'", int67 == 0);
        org.junit.Assert.assertNotNull(scriptNode70);
        org.junit.Assert.assertNull(str71);
        org.junit.Assert.assertNotNull(node73);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + (-1) + "'", int75 == (-1));
        org.junit.Assert.assertNull(str78);
        org.junit.Assert.assertNull(scope80);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + (-1) + "'", int83 == (-1));
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + (-1) + "'", int84 == (-1));
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + 1 + "'", int86 == 1);
        org.junit.Assert.assertNull(str87);
        org.junit.Assert.assertNotNull(functionNodeList89);
        org.junit.Assert.assertNotNull(scopeArray90);
        org.junit.Assert.assertNotNull(scopeArray91);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertTrue("'" + int93 + "' != '" + 1 + "'", int93 == 1);
    }

    @Test
    public void test10342() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10342");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode0 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = functionNode0.getTop();
        int int2 = functionNode0.getRegexpCount();
        int int3 = functionNode0.getLp();
        com.google.javascript.rhino.head.Token.CommentType commentType8 = com.google.javascript.rhino.head.Token.CommentType.HTML;
        com.google.javascript.rhino.head.ast.Comment comment10 = new com.google.javascript.rhino.head.ast.Comment(20, 1, commentType8, "109");
        com.google.javascript.rhino.head.ast.Comment comment12 = new com.google.javascript.rhino.head.ast.Comment(136, 15, commentType8, "-1\tSCRIPT -1 1\n");
        com.google.javascript.rhino.head.Token.CommentType commentType17 = com.google.javascript.rhino.head.Token.CommentType.HTML;
        com.google.javascript.rhino.head.ast.Comment comment19 = new com.google.javascript.rhino.head.ast.Comment(20, 1, commentType17, "109");
        com.google.javascript.rhino.head.ast.Comment comment21 = new com.google.javascript.rhino.head.ast.Comment(11, 35, commentType17, "                    109");
        com.google.javascript.rhino.head.Token.CommentType commentType22 = comment21.getCommentType();
        comment12.setCommentType(commentType22);
        functionNode0.setJsDocNode(comment12);
        com.google.javascript.rhino.head.Node node26 = functionNode0.setType(0);
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator27 = functionNode0.new NodeIterator();
        org.junit.Assert.assertNotNull(scriptNode1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + commentType8 + "' != '" + com.google.javascript.rhino.head.Token.CommentType.HTML + "'", commentType8.equals(com.google.javascript.rhino.head.Token.CommentType.HTML));
        org.junit.Assert.assertTrue("'" + commentType17 + "' != '" + com.google.javascript.rhino.head.Token.CommentType.HTML + "'", commentType17.equals(com.google.javascript.rhino.head.Token.CommentType.HTML));
        org.junit.Assert.assertTrue("'" + commentType22 + "' != '" + com.google.javascript.rhino.head.Token.CommentType.HTML + "'", commentType22.equals(com.google.javascript.rhino.head.Token.CommentType.HTML));
        org.junit.Assert.assertNotNull(node26);
    }

    @Test
    public void test10343() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10343");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode0 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int1 = functionNode0.getLp();
        functionNode0.setEncodedSource("");
        functionNode0.flattenSymbolTable(false);
        boolean boolean6 = functionNode0.requiresActivation();
        java.lang.String str7 = functionNode0.getEncodedSource();
        com.google.javascript.rhino.head.Node node9 = functionNode0.setType(19);
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor10 = node9.iterator();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-1) + "'", int1 == (-1));
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertNotNull(node9);
        org.junit.Assert.assertNotNull(nodeItor10);
    }

    @Test
    public void test10344() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10344");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope(8);
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap2 = scope1.getSymbolTable();
        com.google.javascript.rhino.head.ast.Scope scope4 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 10);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode5 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = functionNode5.getTop();
        functionNode5.setParens((int) (byte) 1, (int) (short) 1);
        functionNode5.setEncodedSourceStart((-1));
        functionNode5.setFunctionIsGetter();
        scope4.addChildToFront((com.google.javascript.rhino.head.Node) functionNode5);
        functionNode5.setRp(19);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode17 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int18 = scriptNode17.getEndLineno();
        int int19 = scriptNode17.getBaseLineno();
        com.google.javascript.rhino.head.ast.Jump jump22 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode24 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int25 = scriptNode24.getEndLineno();
        int int26 = scriptNode24.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList27 = scriptNode24.getChildScopes();
        jump22.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode24);
        java.lang.String str29 = scriptNode24.debugPrint();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode17, (com.google.javascript.rhino.head.ast.Scope) scriptNode24);
        com.google.javascript.rhino.head.ast.Scope scope31 = new com.google.javascript.rhino.head.ast.Scope();
        scriptNode24.target = scope31;
        java.lang.String str33 = functionNode5.toStringTree(scriptNode24);
        java.lang.String str35 = scriptNode24.toSource((int) (short) 10);
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap36 = scriptNode24.getSymbolTable();
        int int37 = strMap36.size();
        com.google.javascript.rhino.head.ast.Jump jump42 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump42.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump46 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump42, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode48 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int49 = scriptNode48.getEndLineno();
        int int50 = scriptNode48.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList51 = scriptNode48.getChildScopes();
        com.google.javascript.rhino.head.Node node52 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump42, (com.google.javascript.rhino.head.Node) scriptNode48);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList53 = scriptNode48.getFunctions();
        functionNodeList53.clear();
        functionNodeList53.clear();
        com.google.javascript.rhino.head.ast.Jump jump60 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump60.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump64 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump60, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode66 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int67 = scriptNode66.getEndLineno();
        int int68 = scriptNode66.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList69 = scriptNode66.getChildScopes();
        com.google.javascript.rhino.head.Node node70 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump60, (com.google.javascript.rhino.head.Node) scriptNode66);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList71 = scriptNode66.getFunctions();
        java.util.Spliterator<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeSpliterator72 = functionNodeList71.spliterator();
        int int74 = functionNodeList71.indexOf((java.lang.Object) (byte) 10);
        boolean boolean75 = functionNodeList53.retainAll((java.util.Collection<com.google.javascript.rhino.head.ast.FunctionNode>) functionNodeList71);
        boolean boolean76 = strMap36.containsKey((java.lang.Object) functionNodeList53);
        com.google.javascript.rhino.head.ast.Symbol symbol78 = new com.google.javascript.rhino.head.ast.Symbol();
        java.lang.String str79 = symbol78.getName();
        com.google.javascript.rhino.head.Node node80 = symbol78.getNode();
        symbol78.setIndex(1);
        com.google.javascript.rhino.head.ast.Scope scope83 = symbol78.getContainingTable();
        java.lang.String str84 = symbol78.getName();
        int int85 = symbol78.getDeclType();
        com.google.javascript.rhino.head.ast.Symbol symbol86 = strMap36.replace("Jump", symbol78);
        int int87 = strMap36.size();
        scope1.setSymbolTable(strMap36);
        org.junit.Assert.assertNull(strMap2);
        org.junit.Assert.assertNotNull(scriptNode6);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNull(scopeList27);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str29, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "                    {\n                    }\n" + "'", str35, "                    {\n                    }\n");
        org.junit.Assert.assertNotNull(strMap36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertNull(scopeList51);
        org.junit.Assert.assertNotNull(functionNodeList53);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + (-1) + "'", int67 == (-1));
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + (-1) + "'", int68 == (-1));
        org.junit.Assert.assertNull(scopeList69);
        org.junit.Assert.assertNotNull(functionNodeList71);
        org.junit.Assert.assertNotNull(functionNodeSpliterator72);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + (-1) + "'", int74 == (-1));
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNull(str79);
        org.junit.Assert.assertNull(node80);
        org.junit.Assert.assertNull(scope83);
        org.junit.Assert.assertNull(str84);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 0 + "'", int85 == 0);
        org.junit.Assert.assertNull(symbol86);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 0 + "'", int87 == 0);
    }

    @Test
    public void test10345() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10345");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode0 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = functionNode0.getTop();
        functionNode0.setParens((int) (byte) 1, (int) (short) 1);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode5 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.Scope scope7 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 10);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode8 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode9 = functionNode8.getTop();
        functionNode8.setParens((int) (byte) 1, (int) (short) 1);
        functionNode8.setEncodedSourceStart((-1));
        functionNode8.setFunctionIsGetter();
        scope7.addChildToFront((com.google.javascript.rhino.head.Node) functionNode8);
        functionNode5.setBody((com.google.javascript.rhino.head.ast.AstNode) functionNode8);
        functionNode5.setFunctionIsSetter();
        int int19 = functionNode0.addFunction(functionNode5);
        java.lang.String str20 = functionNode0.getNextTempName();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode22 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int23 = scriptNode22.getEndLineno();
        int int24 = scriptNode22.getBaseLineno();
        scriptNode22.removeProp(0);
        scriptNode22.setEncodedSourceEnd(19);
        functionNode0.addParam((com.google.javascript.rhino.head.ast.AstNode) scriptNode22);
        int int30 = scriptNode22.getEndLineno();
        org.junit.Assert.assertNotNull(scriptNode1);
        org.junit.Assert.assertNotNull(scriptNode9);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "$0" + "'", str20, "$0");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
    }

    @Test
    public void test10346() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10346");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode1 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int2 = functionNode1.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode3 = functionNode1.getTop();
        com.google.javascript.rhino.head.ast.Name name4 = null;
        functionNode1.setFunctionName(name4);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode6 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode7 = functionNode6.getTop();
        functionNode1.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode6);
        functionNode6.setIsExpressionClosure(true);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode12 = new com.google.javascript.rhino.head.ast.FunctionNode((int) (byte) 100);
        int int13 = functionNode6.addFunction(functionNode12);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode15 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode16 = functionNode15.getTop();
        java.lang.String str17 = scriptNode16.getJsDoc();
        com.google.javascript.rhino.head.Node node19 = scriptNode16.setType(0);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode20 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int21 = functionNode20.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode23 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        java.lang.String str24 = functionNode20.toStringTree(scriptNode23);
        com.google.javascript.rhino.head.ast.Scope scope26 = scriptNode23.getDefiningScope("");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode28 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int29 = scriptNode28.getEndLineno();
        int int30 = scriptNode28.getBaseLineno();
        com.google.javascript.rhino.head.Node node31 = new com.google.javascript.rhino.head.Node(25, node19, (com.google.javascript.rhino.head.Node) scriptNode23, (com.google.javascript.rhino.head.Node) scriptNode28);
        int int32 = functionNode12.compareTo((com.google.javascript.rhino.head.ast.AstNode) scriptNode23);
        com.google.javascript.rhino.head.ast.RegExpLiteral regExpLiteral34 = new com.google.javascript.rhino.head.ast.RegExpLiteral((int) (short) 1);
        regExpLiteral34.setFlags("-1\tSCRIPT -1 1\n");
        regExpLiteral34.setFlags("/null/-1\tSCRIPT -1 1\n");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode39 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int40 = functionNode39.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode41 = functionNode39.getTop();
        com.google.javascript.rhino.head.ast.Name name42 = null;
        functionNode39.setFunctionName(name42);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode44 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode45 = functionNode44.getTop();
        functionNode39.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode44);
        int int47 = functionNode44.getRp();
        int int48 = functionNode44.getFunctionType();
        boolean boolean49 = functionNode44.requiresActivation();
        com.google.javascript.rhino.head.Node node50 = new com.google.javascript.rhino.head.Node(26, (com.google.javascript.rhino.head.Node) scriptNode23, (com.google.javascript.rhino.head.Node) regExpLiteral34, (com.google.javascript.rhino.head.Node) functionNode44);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode52 = new com.google.javascript.rhino.head.ast.FunctionNode(0);
        int int53 = functionNode52.getBaseLineno();
        functionNode52.setSourceName("                                                                                                                                                                                                        /null/");
        com.google.javascript.rhino.head.ast.AstNode astNode56 = functionNode52.getBody();
        functionNode44.replaceWith((com.google.javascript.rhino.head.ast.Scope) functionNode52);
        functionNode52.setRelative((int) (byte) -1);
        functionNode52.setFunctionIsGetter();
        functionNode52.setEncodedSourceStart(992303883);
        int int63 = functionNode52.getLp();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertNotNull(scriptNode3);
        org.junit.Assert.assertNotNull(scriptNode7);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(scriptNode16);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(node19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(scope26);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1 + "'", int32 == 1);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertNotNull(scriptNode41);
        org.junit.Assert.assertNotNull(scriptNode45);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
        org.junit.Assert.assertNull(astNode56);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + (-1) + "'", int63 == (-1));
    }

    @Test
    public void test10347() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10347");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        int int1 = scriptNode0.getEncodedSourceEnd();
        java.lang.String str3 = scriptNode0.toSource((int) (byte) 10);
        scriptNode0.setEncodedSourceEnd((int) (short) -1);
        com.google.javascript.rhino.head.ast.Jump jump8 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int11 = scriptNode10.getEndLineno();
        int int12 = scriptNode10.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList13 = scriptNode10.getChildScopes();
        jump8.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode10);
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor15 = scriptNode10.iterator();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode16 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int17 = functionNode16.getLp();
        functionNode16.setEncodedSource("");
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode10, (com.google.javascript.rhino.head.ast.Scope) functionNode16);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode21 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode22 = functionNode21.getTop();
        functionNode21.setParens((int) (byte) 1, (int) (short) 1);
        functionNode21.setEncodedSourceStart((-1));
        java.util.List<com.google.javascript.rhino.head.Node> nodeList28 = functionNode21.getResumptionPoints();
        com.google.javascript.rhino.head.ast.Scope scope30 = functionNode21.getDefiningScope("hi!");
        boolean boolean31 = functionNode21.isGetterOrSetter();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode32 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int33 = functionNode32.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode34 = functionNode32.getTop();
        com.google.javascript.rhino.head.ast.Name name35 = null;
        functionNode32.setFunctionName(name35);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode37 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode38 = functionNode37.getTop();
        functionNode32.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode37);
        int int40 = functionNode37.getRp();
        int int41 = functionNode37.getFunctionType();
        int int42 = functionNode21.addFunction(functionNode37);
        functionNode16.setCompilerData((java.lang.Object) functionNode37);
        functionNode16.setFunctionType(136);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode47 = new com.google.javascript.rhino.head.ast.FunctionNode(0);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode48 = functionNode47.getEnclosingFunction();
        com.google.javascript.rhino.head.Node node49 = functionNode47.target;
        functionNode47.setLineno((int) (byte) -1);
        functionNode16.setMemberExprNode((com.google.javascript.rhino.head.ast.AstNode) functionNode47);
        functionNode47.setBaseLineno(7);
        int int55 = functionNode47.getType();
        functionNode47.setLength(8);
        int int58 = functionNode47.getEndLineno();
        java.lang.String str59 = scriptNode0.toStringTree((com.google.javascript.rhino.head.ast.ScriptNode) functionNode47);
        boolean boolean60 = functionNode47.isGetterOrSetter();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-1) + "'", int1 == (-1));
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "                    {\n                    }\n" + "'", str3, "                    {\n                    }\n");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNull(scopeList13);
        org.junit.Assert.assertNotNull(nodeItor15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNotNull(scriptNode22);
        org.junit.Assert.assertNull(nodeList28);
        org.junit.Assert.assertNull(scope30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertNotNull(scriptNode34);
        org.junit.Assert.assertNotNull(scriptNode38);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertNull(functionNode48);
        org.junit.Assert.assertNull(node49);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 109 + "'", int55 == 109);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + (-1) + "'", int58 == (-1));
        org.junit.Assert.assertNull(str59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
    }

    @Test
    public void test10348() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10348");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode2 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int3 = functionNode2.getLp();
        functionNode2.setEncodedSource("");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode6 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int7 = functionNode6.getLp();
        functionNode6.setEncodedSource("");
        functionNode6.flattenSymbolTable(false);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode12 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int13 = functionNode12.getLp();
        com.google.javascript.rhino.head.Node node15 = new com.google.javascript.rhino.head.Node((-1), (com.google.javascript.rhino.head.Node) functionNode2, (com.google.javascript.rhino.head.Node) functionNode6, (com.google.javascript.rhino.head.Node) functionNode12, (int) '#');
        boolean boolean16 = functionNode12.isGenerator();
        com.google.javascript.rhino.head.ast.Name name17 = null;
        functionNode12.setFunctionName(name17);
        boolean boolean19 = functionNode12.isSetter();
        com.google.javascript.rhino.head.ast.Jump jump20 = new com.google.javascript.rhino.head.ast.Jump((int) (short) 1, (com.google.javascript.rhino.head.Node) functionNode12);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    }

    @Test
    public void test10349() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10349");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int2 = scriptNode1.getEndLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode4 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int5 = scriptNode4.getEndLineno();
        scriptNode1.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode4);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode7 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int8 = functionNode7.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode9 = functionNode7.getTop();
        boolean boolean10 = functionNode7.hasSideEffects();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode12 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int13 = scriptNode12.getEndLineno();
        int int14 = scriptNode12.getBaseLineno();
        com.google.javascript.rhino.head.ast.Jump jump17 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode19 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int20 = scriptNode19.getEndLineno();
        int int21 = scriptNode19.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList22 = scriptNode19.getChildScopes();
        jump17.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode19);
        java.lang.String str24 = scriptNode19.debugPrint();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode12, (com.google.javascript.rhino.head.ast.Scope) scriptNode19);
        com.google.javascript.rhino.head.ast.Scope scope26 = new com.google.javascript.rhino.head.ast.Scope();
        scriptNode19.target = scope26;
        functionNode7.addChildScope(scope26);
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode4, (com.google.javascript.rhino.head.ast.Scope) functionNode7);
        int int30 = functionNode7.getFunctionCount();
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList31 = functionNode7.getParams();
        java.lang.String str32 = functionNode7.getNextTempName();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(scriptNode9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertNull(scopeList22);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str24, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(astNodeList31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "$0" + "'", str32, "$0");
    }

    @Test
    public void test10350() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10350");
        com.google.javascript.rhino.head.ast.Symbol symbol0 = new com.google.javascript.rhino.head.ast.Symbol();
        java.lang.String str1 = symbol0.getName();
        com.google.javascript.rhino.head.Node node2 = symbol0.getNode();
        java.lang.String str3 = symbol0.getDeclTypeName();
        java.lang.String str4 = symbol0.toString();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode5 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int6 = functionNode5.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode7 = functionNode5.getTop();
        boolean boolean8 = functionNode5.hasSideEffects();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int11 = scriptNode10.getEndLineno();
        int int12 = scriptNode10.getBaseLineno();
        com.google.javascript.rhino.head.ast.Jump jump15 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode17 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int18 = scriptNode17.getEndLineno();
        int int19 = scriptNode17.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList20 = scriptNode17.getChildScopes();
        jump15.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode17);
        java.lang.String str22 = scriptNode17.debugPrint();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode10, (com.google.javascript.rhino.head.ast.Scope) scriptNode17);
        com.google.javascript.rhino.head.ast.Scope scope24 = new com.google.javascript.rhino.head.ast.Scope();
        scriptNode17.target = scope24;
        functionNode5.addChildScope(scope24);
        boolean boolean27 = functionNode5.hasConsistentReturnUsage();
        java.lang.String str28 = functionNode5.getNextTempName();
        functionNode5.removeProp(5);
        symbol0.setContainingTable((com.google.javascript.rhino.head.ast.Scope) functionNode5);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode33 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int34 = scriptNode33.getEndLineno();
        com.google.javascript.rhino.head.ast.Scope scope35 = scriptNode33.getParentScope();
        symbol0.setContainingTable(scope35);
        int int37 = symbol0.getIndex();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "EOF" + "'", str3, "EOF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Symbol (EOF) name=null" + "'", str4, "Symbol (EOF) name=null");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(scriptNode7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNull(scopeList20);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str22, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "$0" + "'", str28, "$0");
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertNull(scope35);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
    }

    @Test
    public void test10351() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10351");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode0 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = functionNode0.getTop();
        functionNode0.setParens((int) (byte) 1, (int) (short) 1);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode5 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.Scope scope7 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 10);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode8 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode9 = functionNode8.getTop();
        functionNode8.setParens((int) (byte) 1, (int) (short) 1);
        functionNode8.setEncodedSourceStart((-1));
        functionNode8.setFunctionIsGetter();
        scope7.addChildToFront((com.google.javascript.rhino.head.Node) functionNode8);
        functionNode5.setBody((com.google.javascript.rhino.head.ast.AstNode) functionNode8);
        functionNode5.setFunctionIsSetter();
        int int19 = functionNode0.addFunction(functionNode5);
        functionNode0.setEncodedSourceStart(1);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList22 = functionNode0.getChildScopes();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap23 = functionNode0.getSymbolTable();
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor24 = null;
        // The following exception was thrown during execution in test generation
        try {
            functionNode0.visit(nodeVisitor24);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(scriptNode1);
        org.junit.Assert.assertNotNull(scriptNode9);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNull(scopeList22);
        org.junit.Assert.assertNull(strMap23);
    }

    @Test
    public void test10352() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10352");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode0 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 10);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode3 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode4 = functionNode3.getTop();
        functionNode3.setParens((int) (byte) 1, (int) (short) 1);
        functionNode3.setEncodedSourceStart((-1));
        functionNode3.setFunctionIsGetter();
        scope2.addChildToFront((com.google.javascript.rhino.head.Node) functionNode3);
        functionNode0.setBody((com.google.javascript.rhino.head.ast.AstNode) functionNode3);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode13 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = functionNode13.getTop();
        functionNode13.setParens((int) (byte) 1, (int) (short) 1);
        functionNode13.setEncodedSourceStart((-1));
        java.util.List<com.google.javascript.rhino.head.Node> nodeList20 = functionNode13.getResumptionPoints();
        int int21 = functionNode13.getLp();
        functionNode0.setBody((com.google.javascript.rhino.head.ast.AstNode) functionNode13);
        functionNode13.setLp((int) (short) 0);
        int int25 = functionNode13.getLineno();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator26 = functionNode13.spliterator();
        org.junit.Assert.assertNotNull(scriptNode4);
        org.junit.Assert.assertNotNull(scriptNode14);
        org.junit.Assert.assertNull(nodeList20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNotNull(nodeSpliterator26);
    }

    @Test
    public void test10353() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10353");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode0 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int1 = functionNode0.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = functionNode0.getTop();
        com.google.javascript.rhino.head.ast.Name name3 = null;
        functionNode0.setFunctionName(name3);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode5 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = functionNode5.getTop();
        functionNode0.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode5);
        functionNode5.setIsExpressionClosure(true);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode11 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int12 = functionNode11.getLp();
        functionNode11.setEncodedSource("");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode15 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int16 = functionNode15.getLp();
        functionNode15.setEncodedSource("");
        functionNode15.flattenSymbolTable(false);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode21 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int22 = functionNode21.getLp();
        com.google.javascript.rhino.head.Node node24 = new com.google.javascript.rhino.head.Node((-1), (com.google.javascript.rhino.head.Node) functionNode11, (com.google.javascript.rhino.head.Node) functionNode15, (com.google.javascript.rhino.head.Node) functionNode21, (int) '#');
        com.google.javascript.rhino.head.ast.Comment comment25 = functionNode21.getJsDocNode();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode26 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.Scope scope28 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 10);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode29 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode30 = functionNode29.getTop();
        functionNode29.setParens((int) (byte) 1, (int) (short) 1);
        functionNode29.setEncodedSourceStart((-1));
        functionNode29.setFunctionIsGetter();
        scope28.addChildToFront((com.google.javascript.rhino.head.Node) functionNode29);
        functionNode26.setBody((com.google.javascript.rhino.head.ast.AstNode) functionNode29);
        boolean boolean39 = functionNode21.isParam((com.google.javascript.rhino.head.ast.AstNode) functionNode26);
        functionNode21.setFunctionType(13);
        functionNode21.setRp(19);
        boolean boolean44 = functionNode21.isGenerator();
        java.util.List<com.google.javascript.rhino.head.Node> nodeList45 = functionNode21.getResumptionPoints();
        com.google.javascript.rhino.head.ast.Symbol symbol47 = functionNode21.getSymbol("            {\n            }\n");
        functionNode5.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode21);
        boolean boolean49 = functionNode5.hasChildren();
        int int50 = functionNode5.getParamCount();
        functionNode5.setBounds((int) '#', 327364487);
        com.google.javascript.rhino.head.Node node54 = functionNode5.getLastSibling();
        java.util.List<com.google.javascript.rhino.head.Node> nodeList55 = functionNode5.getResumptionPoints();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-1) + "'", int1 == (-1));
        org.junit.Assert.assertNotNull(scriptNode2);
        org.junit.Assert.assertNotNull(scriptNode6);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNull(comment25);
        org.junit.Assert.assertNotNull(scriptNode30);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNull(nodeList45);
        org.junit.Assert.assertNull(symbol47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertNotNull(node54);
        org.junit.Assert.assertNull(nodeList55);
    }

    @Test
    public void test10354() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10354");
        com.google.javascript.rhino.head.ast.Name name1 = null;
        com.google.javascript.rhino.head.ast.FunctionNode functionNode2 = new com.google.javascript.rhino.head.ast.FunctionNode(17, name1);
        functionNode2.setRelative(16);
        java.lang.String str5 = functionNode2.getName();
        com.google.javascript.rhino.head.ast.RegExpLiteral regExpLiteral7 = new com.google.javascript.rhino.head.ast.RegExpLiteral((int) (byte) 0);
        // The following exception was thrown during execution in test generation
        try {
            functionNode2.removeChild((com.google.javascript.rhino.head.Node) regExpLiteral7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
    }

    @Test
    public void test10355() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10355");
        com.google.javascript.rhino.head.Token.CommentType commentType8 = com.google.javascript.rhino.head.Token.CommentType.HTML;
        com.google.javascript.rhino.head.ast.Comment comment10 = new com.google.javascript.rhino.head.ast.Comment(20, 1, commentType8, "109");
        com.google.javascript.rhino.head.ast.Comment comment12 = new com.google.javascript.rhino.head.ast.Comment(136, 15, commentType8, "-1\tSCRIPT -1 1\n");
        com.google.javascript.rhino.head.Token.CommentType commentType13 = com.google.javascript.rhino.head.Token.CommentType.JSDOC;
        comment12.setCommentType(commentType13);
        com.google.javascript.rhino.head.ast.Comment comment16 = new com.google.javascript.rhino.head.ast.Comment(7, (int) (byte) 0, commentType13, "  {\n  }\n");
        com.google.javascript.rhino.head.Token.CommentType commentType21 = com.google.javascript.rhino.head.Token.CommentType.HTML;
        com.google.javascript.rhino.head.ast.Comment comment23 = new com.google.javascript.rhino.head.ast.Comment(20, 1, commentType21, "109");
        com.google.javascript.rhino.head.ast.Comment comment25 = new com.google.javascript.rhino.head.ast.Comment(136, 15, commentType21, "-1\tSCRIPT -1 1\n");
        com.google.javascript.rhino.head.Token.CommentType commentType26 = com.google.javascript.rhino.head.Token.CommentType.JSDOC;
        comment25.setCommentType(commentType26);
        com.google.javascript.rhino.head.Token.CommentType commentType28 = com.google.javascript.rhino.head.Token.CommentType.JSDOC;
        comment25.setCommentType(commentType28);
        com.google.javascript.rhino.head.Token.CommentType commentType32 = com.google.javascript.rhino.head.Token.CommentType.HTML;
        com.google.javascript.rhino.head.ast.Comment comment34 = new com.google.javascript.rhino.head.ast.Comment(20, (int) (short) -1, commentType32, "EOF");
        comment25.setCommentType(commentType32);
        comment16.setCommentType(commentType32);
        com.google.javascript.rhino.head.ast.Comment comment38 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 100, (int) '4', commentType32, "Symbol (FUNCTION) name=null");
        com.google.javascript.rhino.head.Token.CommentType commentType39 = comment38.getCommentType();
        com.google.javascript.rhino.head.Token.CommentType commentType40 = comment38.getCommentType();
        org.junit.Assert.assertTrue("'" + commentType8 + "' != '" + com.google.javascript.rhino.head.Token.CommentType.HTML + "'", commentType8.equals(com.google.javascript.rhino.head.Token.CommentType.HTML));
        org.junit.Assert.assertTrue("'" + commentType13 + "' != '" + com.google.javascript.rhino.head.Token.CommentType.JSDOC + "'", commentType13.equals(com.google.javascript.rhino.head.Token.CommentType.JSDOC));
        org.junit.Assert.assertTrue("'" + commentType21 + "' != '" + com.google.javascript.rhino.head.Token.CommentType.HTML + "'", commentType21.equals(com.google.javascript.rhino.head.Token.CommentType.HTML));
        org.junit.Assert.assertTrue("'" + commentType26 + "' != '" + com.google.javascript.rhino.head.Token.CommentType.JSDOC + "'", commentType26.equals(com.google.javascript.rhino.head.Token.CommentType.JSDOC));
        org.junit.Assert.assertTrue("'" + commentType28 + "' != '" + com.google.javascript.rhino.head.Token.CommentType.JSDOC + "'", commentType28.equals(com.google.javascript.rhino.head.Token.CommentType.JSDOC));
        org.junit.Assert.assertTrue("'" + commentType32 + "' != '" + com.google.javascript.rhino.head.Token.CommentType.HTML + "'", commentType32.equals(com.google.javascript.rhino.head.Token.CommentType.HTML));
        org.junit.Assert.assertTrue("'" + commentType39 + "' != '" + com.google.javascript.rhino.head.Token.CommentType.HTML + "'", commentType39.equals(com.google.javascript.rhino.head.Token.CommentType.HTML));
        org.junit.Assert.assertTrue("'" + commentType40 + "' != '" + com.google.javascript.rhino.head.Token.CommentType.HTML + "'", commentType40.equals(com.google.javascript.rhino.head.Token.CommentType.HTML));
    }

    @Test
    public void test10356() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10356");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode0 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = functionNode0.getTop();
        functionNode0.setParens((int) (byte) 1, (int) (short) 1);
        functionNode0.setEncodedSourceStart((-1));
        java.util.List<com.google.javascript.rhino.head.Node> nodeList7 = functionNode0.getResumptionPoints();
        com.google.javascript.rhino.head.ast.Scope scope9 = functionNode0.getDefiningScope("hi!");
        boolean boolean10 = functionNode0.isGetterOrSetter();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode11 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int12 = functionNode11.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode13 = functionNode11.getTop();
        com.google.javascript.rhino.head.ast.Name name14 = null;
        functionNode11.setFunctionName(name14);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode16 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode17 = functionNode16.getTop();
        functionNode11.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode16);
        int int19 = functionNode16.getRp();
        int int20 = functionNode16.getFunctionType();
        int int21 = functionNode0.addFunction(functionNode16);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode23 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int24 = functionNode23.getLp();
        functionNode23.setEncodedSource("");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode27 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int28 = functionNode27.getLp();
        functionNode27.setEncodedSource("");
        functionNode27.flattenSymbolTable(false);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode33 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int34 = functionNode33.getLp();
        com.google.javascript.rhino.head.Node node36 = new com.google.javascript.rhino.head.Node((-1), (com.google.javascript.rhino.head.Node) functionNode23, (com.google.javascript.rhino.head.Node) functionNode27, (com.google.javascript.rhino.head.Node) functionNode33, (int) '#');
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap37 = functionNode27.getSymbolTable();
        functionNode16.setCompilerData((java.lang.Object) functionNode27);
        com.google.javascript.rhino.head.ast.Scope scope40 = functionNode27.getDefiningScope("                                /null/");
        com.google.javascript.rhino.head.Node node44 = new com.google.javascript.rhino.head.Node(4, (int) '4');
        com.google.javascript.rhino.head.ast.FunctionNode functionNode45 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode46 = functionNode45.getTop();
        functionNode45.setParens((int) (byte) 1, (int) (short) 1);
        functionNode45.setEncodedSourceStart((-1));
        java.util.List<com.google.javascript.rhino.head.Node> nodeList52 = functionNode45.getResumptionPoints();
        com.google.javascript.rhino.head.ast.Scope scope54 = functionNode45.getDefiningScope("hi!");
        boolean boolean55 = functionNode45.isGetterOrSetter();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode57 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int58 = scriptNode57.getEndLineno();
        com.google.javascript.rhino.head.ast.Symbol symbol60 = scriptNode57.getSymbol("hi!");
        scriptNode57.putIntProp(3, 0);
        functionNode45.addResumptionPoint((com.google.javascript.rhino.head.Node) scriptNode57);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode66 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode67 = functionNode66.getTop();
        functionNode66.setParens((int) (byte) 1, (int) (short) 1);
        com.google.javascript.rhino.head.Node node71 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) functionNode66);
        int int72 = functionNode66.getEncodedSourceEnd();
        com.google.javascript.rhino.head.ast.Jump jump77 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump77.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump81 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump77, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode83 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int84 = scriptNode83.getEndLineno();
        int int85 = scriptNode83.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList86 = scriptNode83.getChildScopes();
        com.google.javascript.rhino.head.Node node87 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump77, (com.google.javascript.rhino.head.Node) scriptNode83);
        java.lang.String str88 = scriptNode83.getSourceName();
        functionNode66.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode83);
        functionNode45.setCompilerData((java.lang.Object) scriptNode83);
        node44.addChildToBack((com.google.javascript.rhino.head.Node) functionNode45);
        functionNode27.putProp((-793599801), (java.lang.Object) functionNode45);
        // The following exception was thrown during execution in test generation
        try {
            functionNode45.setEndLineno((-133799382));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(scriptNode1);
        org.junit.Assert.assertNull(nodeList7);
        org.junit.Assert.assertNull(scope9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(scriptNode13);
        org.junit.Assert.assertNotNull(scriptNode17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertNull(strMap37);
        org.junit.Assert.assertNull(scope40);
        org.junit.Assert.assertNotNull(scriptNode46);
        org.junit.Assert.assertNull(nodeList52);
        org.junit.Assert.assertNull(scope54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + (-1) + "'", int58 == (-1));
        org.junit.Assert.assertNull(symbol60);
        org.junit.Assert.assertNotNull(scriptNode67);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + (-1) + "'", int72 == (-1));
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + (-1) + "'", int84 == (-1));
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + (-1) + "'", int85 == (-1));
        org.junit.Assert.assertNull(scopeList86);
        org.junit.Assert.assertNull(str88);
    }

    @Test
    public void test10357() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10357");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode0 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int1 = functionNode0.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = functionNode0.getTop();
        com.google.javascript.rhino.head.ast.Name name3 = null;
        functionNode0.setFunctionName(name3);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode5 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = functionNode5.getTop();
        functionNode0.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode5);
        functionNode5.setIsExpressionClosure(true);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode11 = new com.google.javascript.rhino.head.ast.FunctionNode((int) (byte) 100);
        int int12 = functionNode5.addFunction(functionNode11);
        com.google.javascript.rhino.head.ast.Name name13 = null;
        functionNode5.setFunctionName(name13);
        int int15 = functionNode5.getEndLineno();
        functionNode5.setEncodedSource("136");
        int int18 = functionNode5.getEncodedSourceStart();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode20 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int21 = functionNode20.getLp();
        functionNode20.setEncodedSource("");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode24 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int25 = functionNode24.getLp();
        functionNode24.setEncodedSource("");
        functionNode24.flattenSymbolTable(false);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode30 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int31 = functionNode30.getLp();
        com.google.javascript.rhino.head.Node node33 = new com.google.javascript.rhino.head.Node((-1), (com.google.javascript.rhino.head.Node) functionNode20, (com.google.javascript.rhino.head.Node) functionNode24, (com.google.javascript.rhino.head.Node) functionNode30, (int) '#');
        com.google.javascript.rhino.head.ast.AstNode astNode34 = functionNode20.getBody();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode35 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int36 = functionNode35.getLp();
        functionNode35.setEncodedSource("");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode39 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int40 = functionNode39.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode41 = functionNode39.getTop();
        com.google.javascript.rhino.head.ast.Name name42 = null;
        functionNode39.setFunctionName(name42);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode44 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode45 = functionNode44.getTop();
        functionNode39.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode44);
        int int47 = functionNode44.getRp();
        int int48 = functionNode44.getFunctionType();
        functionNode35.addParam((com.google.javascript.rhino.head.ast.AstNode) functionNode44);
        com.google.javascript.rhino.head.ast.Scope scope50 = functionNode44.getEnclosingScope();
        functionNode20.setBody((com.google.javascript.rhino.head.ast.AstNode) functionNode44);
        int int52 = functionNode20.getType();
        com.google.javascript.rhino.head.Node node53 = functionNode20.getLastSibling();
        functionNode20.setRelative((-242022205));
        int int56 = functionNode5.addFunction(functionNode20);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-1) + "'", int1 == (-1));
        org.junit.Assert.assertNotNull(scriptNode2);
        org.junit.Assert.assertNotNull(scriptNode6);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNull(astNode34);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertNotNull(scriptNode41);
        org.junit.Assert.assertNotNull(scriptNode45);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertNotNull(scope50);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 109 + "'", int52 == 109);
        org.junit.Assert.assertNotNull(node53);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 1 + "'", int56 == 1);
    }

    @Test
    public void test10358() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10358");
        com.google.javascript.rhino.head.ast.Jump jump4 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump4.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump8 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump4, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int11 = scriptNode10.getEndLineno();
        int int12 = scriptNode10.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList13 = scriptNode10.getChildScopes();
        com.google.javascript.rhino.head.Node node14 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump4, (com.google.javascript.rhino.head.Node) scriptNode10);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList15 = scriptNode10.getFunctions();
        boolean boolean16 = functionNodeList15.isEmpty();
        java.util.stream.Stream<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeStream17 = functionNodeList15.stream();
        com.google.javascript.rhino.head.ast.Jump jump22 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump22.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump26 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump22, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode28 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int29 = scriptNode28.getEndLineno();
        int int30 = scriptNode28.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList31 = scriptNode28.getChildScopes();
        com.google.javascript.rhino.head.Node node32 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump22, (com.google.javascript.rhino.head.Node) scriptNode28);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList33 = scriptNode28.getFunctions();
        int int34 = functionNodeList33.size();
        com.google.javascript.rhino.head.ast.Jump jump40 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump40.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump44 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump40, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode46 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int47 = scriptNode46.getEndLineno();
        int int48 = scriptNode46.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList49 = scriptNode46.getChildScopes();
        com.google.javascript.rhino.head.Node node50 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump40, (com.google.javascript.rhino.head.Node) scriptNode46);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList51 = scriptNode46.getFunctions();
        functionNodeList51.clear();
        com.google.javascript.rhino.head.ast.Jump jump57 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump57.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump61 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump57, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode63 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int64 = scriptNode63.getEndLineno();
        int int65 = scriptNode63.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList66 = scriptNode63.getChildScopes();
        com.google.javascript.rhino.head.Node node67 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump57, (com.google.javascript.rhino.head.Node) scriptNode63);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList68 = scriptNode63.getFunctions();
        boolean boolean69 = functionNodeList51.removeAll((java.util.Collection<com.google.javascript.rhino.head.ast.FunctionNode>) functionNodeList68);
        boolean boolean70 = functionNodeList33.addAll(0, (java.util.Collection<com.google.javascript.rhino.head.ast.FunctionNode>) functionNodeList51);
        int int71 = functionNodeList33.size();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode73 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int74 = scriptNode73.getEndLineno();
        int int75 = scriptNode73.getBaseLineno();
        com.google.javascript.rhino.head.Node node76 = scriptNode73.getNext();
        scriptNode73.setPosition((int) (byte) -1);
        boolean boolean79 = functionNodeList33.contains((java.lang.Object) (byte) -1);
        functionNodeList33.clear();
        functionNodeList33.clear();
        boolean boolean82 = functionNodeList15.removeAll((java.util.Collection<com.google.javascript.rhino.head.ast.FunctionNode>) functionNodeList33);
        java.util.ListIterator<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeItor83 = functionNodeList33.listIterator();
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNull(scopeList13);
        org.junit.Assert.assertNotNull(functionNodeList15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(functionNodeStream17);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertNull(scopeList31);
        org.junit.Assert.assertNotNull(functionNodeList33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
        org.junit.Assert.assertNull(scopeList49);
        org.junit.Assert.assertNotNull(functionNodeList51);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + (-1) + "'", int64 == (-1));
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + (-1) + "'", int65 == (-1));
        org.junit.Assert.assertNull(scopeList66);
        org.junit.Assert.assertNotNull(functionNodeList68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 0 + "'", int71 == 0);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + (-1) + "'", int74 == (-1));
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + (-1) + "'", int75 == (-1));
        org.junit.Assert.assertNull(node76);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(functionNodeItor83);
    }

    @Test
    public void test10359() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10359");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode0 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int1 = functionNode0.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = functionNode0.getTop();
        boolean boolean3 = functionNode0.hasSideEffects();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int6 = scriptNode5.getEndLineno();
        int int7 = scriptNode5.getBaseLineno();
        com.google.javascript.rhino.head.ast.Jump jump10 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode12 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int13 = scriptNode12.getEndLineno();
        int int14 = scriptNode12.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList15 = scriptNode12.getChildScopes();
        jump10.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode12);
        java.lang.String str17 = scriptNode12.debugPrint();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode5, (com.google.javascript.rhino.head.ast.Scope) scriptNode12);
        com.google.javascript.rhino.head.ast.Scope scope19 = new com.google.javascript.rhino.head.ast.Scope();
        scriptNode12.target = scope19;
        functionNode0.addChildScope(scope19);
        boolean boolean22 = functionNode0.hasConsistentReturnUsage();
        java.util.Map<com.google.javascript.rhino.head.Node, int[]> nodeMap23 = functionNode0.getLiveLocals();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode25 = new com.google.javascript.rhino.head.ast.FunctionNode((int) (byte) 100);
        int int26 = functionNode25.getEncodedSourceStart();
        functionNode0.addResumptionPoint((com.google.javascript.rhino.head.Node) functionNode25);
        int int28 = functionNode25.depth();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap29 = functionNode25.getSymbolTable();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode30 = functionNode25.getTop();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-1) + "'", int1 == (-1));
        org.junit.Assert.assertNotNull(scriptNode2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNull(scopeList15);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str17, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNull(nodeMap23);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertNull(strMap29);
        org.junit.Assert.assertNotNull(scriptNode30);
    }

    @Test
    public void test10360() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10360");
        com.google.javascript.rhino.head.ast.Jump jump4 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump4.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump8 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump4, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int11 = scriptNode10.getEndLineno();
        int int12 = scriptNode10.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList13 = scriptNode10.getChildScopes();
        com.google.javascript.rhino.head.Node node14 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump4, (com.google.javascript.rhino.head.Node) scriptNode10);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList15 = scriptNode10.getFunctions();
        int int16 = functionNodeList15.size();
        com.google.javascript.rhino.head.ast.Jump jump22 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump22.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump26 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump22, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode28 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int29 = scriptNode28.getEndLineno();
        int int30 = scriptNode28.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList31 = scriptNode28.getChildScopes();
        com.google.javascript.rhino.head.Node node32 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump22, (com.google.javascript.rhino.head.Node) scriptNode28);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList33 = scriptNode28.getFunctions();
        functionNodeList33.clear();
        com.google.javascript.rhino.head.ast.Jump jump39 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump39.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump43 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump39, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode45 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int46 = scriptNode45.getEndLineno();
        int int47 = scriptNode45.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList48 = scriptNode45.getChildScopes();
        com.google.javascript.rhino.head.Node node49 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump39, (com.google.javascript.rhino.head.Node) scriptNode45);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList50 = scriptNode45.getFunctions();
        boolean boolean51 = functionNodeList33.removeAll((java.util.Collection<com.google.javascript.rhino.head.ast.FunctionNode>) functionNodeList50);
        boolean boolean52 = functionNodeList15.addAll(0, (java.util.Collection<com.google.javascript.rhino.head.ast.FunctionNode>) functionNodeList33);
        com.google.javascript.rhino.head.ast.Jump jump57 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump57.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump61 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump57, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode63 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int64 = scriptNode63.getEndLineno();
        int int65 = scriptNode63.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList66 = scriptNode63.getChildScopes();
        com.google.javascript.rhino.head.Node node67 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump57, (com.google.javascript.rhino.head.Node) scriptNode63);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList68 = scriptNode63.getFunctions();
        int int69 = functionNodeList68.size();
        functionNodeList68.clear();
        int int72 = functionNodeList68.indexOf((java.lang.Object) 10L);
        java.util.Iterator<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeItor73 = functionNodeList68.iterator();
        boolean boolean74 = functionNodeList15.retainAll((java.util.Collection<com.google.javascript.rhino.head.ast.FunctionNode>) functionNodeList68);
        java.lang.Object[] objArray75 = functionNodeList68.toArray();
        java.lang.Object[] objArray76 = functionNodeList68.toArray();
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.ast.FunctionNode functionNode78 = functionNodeList68.get((-485845389));
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: -485845389");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNull(scopeList13);
        org.junit.Assert.assertNotNull(functionNodeList15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertNull(scopeList31);
        org.junit.Assert.assertNotNull(functionNodeList33);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertNull(scopeList48);
        org.junit.Assert.assertNotNull(functionNodeList50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + (-1) + "'", int64 == (-1));
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + (-1) + "'", int65 == (-1));
        org.junit.Assert.assertNull(scopeList66);
        org.junit.Assert.assertNotNull(functionNodeList68);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 0 + "'", int69 == 0);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + (-1) + "'", int72 == (-1));
        org.junit.Assert.assertNotNull(functionNodeItor73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(objArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray75), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray75), "[]");
        org.junit.Assert.assertNotNull(objArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray76), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray76), "[]");
    }

    @Test
    public void test10361() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10361");
        com.google.javascript.rhino.head.ast.RegExpLiteral regExpLiteral2 = new com.google.javascript.rhino.head.ast.RegExpLiteral(3, 17);
        java.lang.String str3 = regExpLiteral2.toString();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "48" + "'", str3, "48");
    }

    @Test
    public void test10362() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10362");
        com.google.javascript.rhino.head.ast.Name name1 = null;
        com.google.javascript.rhino.head.ast.FunctionNode functionNode2 = new com.google.javascript.rhino.head.ast.FunctionNode(1, name1);
        boolean boolean3 = functionNode2.isGetterOrSetter();
        int int4 = functionNode2.getEncodedSourceEnd();
        boolean boolean5 = functionNode2.requiresActivation();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode8 = new com.google.javascript.rhino.head.ast.FunctionNode(0);
        int int9 = functionNode8.getBaseLineno();
        functionNode8.setSourceName("                                                                                                                                                                                                        /null/");
        functionNode8.setRequiresActivation();
        functionNode8.removeProp(0);
        functionNode2.putProp(9, (java.lang.Object) 0);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str17 = functionNode2.toSource((-180877978));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
    }

    @Test
    public void test10363() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10363");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode1 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = functionNode1.getTop();
        functionNode1.setParens((int) (byte) 1, (int) (short) 1);
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor6 = functionNode1.iterator();
        functionNode1.setLp(136);
        int int9 = functionNode1.getFunctionType();
        functionNode1.setFunctionIsGetter();
        boolean boolean11 = functionNode1.hasConsistentReturnUsage();
        functionNode1.setIsExpressionClosure(true);
        com.google.javascript.rhino.head.ast.Jump jump14 = new com.google.javascript.rhino.head.ast.Jump((int) '4', (com.google.javascript.rhino.head.Node) functionNode1);
        int int15 = functionNode1.getBaseLineno();
        boolean boolean16 = functionNode1.hasSideEffects();
        org.junit.Assert.assertNotNull(scriptNode2);
        org.junit.Assert.assertNotNull(nodeItor6);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
    }

    @Test
    public void test10364() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10364");
        com.google.javascript.rhino.head.ast.RegExpLiteral regExpLiteral2 = new com.google.javascript.rhino.head.ast.RegExpLiteral((-631440296), 16);
        regExpLiteral2.setValue("                        ");
    }

    @Test
    public void test10365() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10365");
        com.google.javascript.rhino.head.ast.Jump jump3 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump3.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump7 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump3, 0);
        com.google.javascript.rhino.head.ast.Jump jump11 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump11.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump15 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump11, 0);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode16 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int17 = functionNode16.getLp();
        functionNode16.setEncodedSource("");
        functionNode16.flattenSymbolTable(false);
        jump3.addChildAfter((com.google.javascript.rhino.head.Node) jump11, (com.google.javascript.rhino.head.Node) functionNode16);
        int int23 = functionNode16.getLength();
        com.google.javascript.rhino.head.Node node25 = functionNode16.setType(21);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode26 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode27 = functionNode26.getTop();
        com.google.javascript.rhino.head.ast.Name name28 = null;
        functionNode26.setFunctionName(name28);
        int int30 = functionNode26.getLength();
        functionNode26.setFunctionType(19);
        functionNode16.addParam((com.google.javascript.rhino.head.ast.AstNode) functionNode26);
        functionNode16.removeProp((int) (short) 10);
        com.google.javascript.rhino.head.ast.AstRoot astRoot36 = functionNode16.getAstRoot();
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor37 = null;
        // The following exception was thrown during execution in test generation
        try {
            astRoot36.visit(nodeVisitor37);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertNotNull(node25);
        org.junit.Assert.assertNotNull(scriptNode27);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 1 + "'", int30 == 1);
        org.junit.Assert.assertNull(astRoot36);
    }

    @Test
    public void test10366() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10366");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode0 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 10);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode3 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode4 = functionNode3.getTop();
        functionNode3.setParens((int) (byte) 1, (int) (short) 1);
        functionNode3.setEncodedSourceStart((-1));
        functionNode3.setFunctionIsGetter();
        scope2.addChildToFront((com.google.javascript.rhino.head.Node) functionNode3);
        functionNode0.setBody((com.google.javascript.rhino.head.ast.AstNode) functionNode3);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode13 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = functionNode13.getTop();
        functionNode13.setParens((int) (byte) 1, (int) (short) 1);
        functionNode13.setEncodedSourceStart((-1));
        java.util.List<com.google.javascript.rhino.head.Node> nodeList20 = functionNode13.getResumptionPoints();
        int int21 = functionNode13.getLp();
        functionNode0.setBody((com.google.javascript.rhino.head.ast.AstNode) functionNode13);
        com.google.javascript.rhino.head.Node node23 = functionNode13.getNext();
        int int24 = functionNode13.getLineno();
        com.google.javascript.rhino.head.Node node25 = functionNode13.target;
        functionNode13.setEncodedSourceStart((int) (short) 100);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode29 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int30 = functionNode29.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode31 = functionNode29.getTop();
        com.google.javascript.rhino.head.ast.Name name32 = null;
        functionNode29.setFunctionName(name32);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode34 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode35 = functionNode34.getTop();
        functionNode29.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode34);
        functionNode34.setIsExpressionClosure(true);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode40 = new com.google.javascript.rhino.head.ast.FunctionNode((int) (byte) 100);
        int int41 = functionNode34.addFunction(functionNode40);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode43 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode44 = functionNode43.getTop();
        java.lang.String str45 = scriptNode44.getJsDoc();
        com.google.javascript.rhino.head.Node node47 = scriptNode44.setType(0);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode48 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int49 = functionNode48.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode51 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        java.lang.String str52 = functionNode48.toStringTree(scriptNode51);
        com.google.javascript.rhino.head.ast.Scope scope54 = scriptNode51.getDefiningScope("");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode56 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int57 = scriptNode56.getEndLineno();
        int int58 = scriptNode56.getBaseLineno();
        com.google.javascript.rhino.head.Node node59 = new com.google.javascript.rhino.head.Node(25, node47, (com.google.javascript.rhino.head.Node) scriptNode51, (com.google.javascript.rhino.head.Node) scriptNode56);
        int int60 = functionNode40.compareTo((com.google.javascript.rhino.head.ast.AstNode) scriptNode51);
        com.google.javascript.rhino.head.ast.RegExpLiteral regExpLiteral63 = new com.google.javascript.rhino.head.ast.RegExpLiteral((int) (short) 1);
        java.lang.String str65 = regExpLiteral63.toSource((int) (byte) 10);
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator66 = regExpLiteral63.new NodeIterator();
        java.lang.String str68 = regExpLiteral63.toSource(100);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode69 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int70 = functionNode69.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode71 = functionNode69.getTop();
        com.google.javascript.rhino.head.ast.Name name72 = null;
        functionNode69.setFunctionName(name72);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode74 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode75 = functionNode74.getTop();
        functionNode69.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode74);
        java.lang.String str77 = functionNode69.getNextTempName();
        com.google.javascript.rhino.head.Node node79 = new com.google.javascript.rhino.head.Node(350469479, (com.google.javascript.rhino.head.Node) regExpLiteral63, (com.google.javascript.rhino.head.Node) functionNode69, 7);
        com.google.javascript.rhino.head.Node node80 = new com.google.javascript.rhino.head.Node((int) (byte) 10, (com.google.javascript.rhino.head.Node) functionNode40, node79);
        com.google.javascript.rhino.head.ast.RegExpLiteral regExpLiteral83 = new com.google.javascript.rhino.head.ast.RegExpLiteral(2, 6);
        boolean boolean84 = regExpLiteral83.hasSideEffects();
        functionNode40.addRegExp(regExpLiteral83);
        functionNode40.putIntProp(19, 20);
        int int89 = functionNode40.getLineno();
        functionNode13.addResumptionPoint((com.google.javascript.rhino.head.Node) functionNode40);
        java.lang.String str92 = functionNode40.makeIndent((-46469981));
        org.junit.Assert.assertNotNull(scriptNode4);
        org.junit.Assert.assertNotNull(scriptNode14);
        org.junit.Assert.assertNull(nodeList20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertNull(node23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertNull(node25);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertNotNull(scriptNode31);
        org.junit.Assert.assertNotNull(scriptNode35);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertNotNull(scriptNode44);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertNotNull(node47);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertNull(scope54);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + (-1) + "'", int58 == (-1));
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 1 + "'", int60 == 1);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "                    /null/" + "'", str65, "                    /null/");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "                                                                                                                                                                                                        /null/" + "'", str68, "                                                                                                                                                                                                        /null/");
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + (-1) + "'", int70 == (-1));
        org.junit.Assert.assertNotNull(scriptNode71);
        org.junit.Assert.assertNotNull(scriptNode75);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "$0" + "'", str77, "$0");
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + (-1) + "'", int89 == (-1));
        org.junit.Assert.assertEquals("'" + str92 + "' != '" + "" + "'", str92, "");
    }

    @Test
    public void test10367() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10367");
        com.google.javascript.rhino.head.ast.Jump jump4 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump4.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump8 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump4, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int11 = scriptNode10.getEndLineno();
        int int12 = scriptNode10.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList13 = scriptNode10.getChildScopes();
        com.google.javascript.rhino.head.Node node14 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump4, (com.google.javascript.rhino.head.Node) scriptNode10);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList15 = scriptNode10.getFunctions();
        functionNodeList15.clear();
        int int18 = functionNodeList15.lastIndexOf((java.lang.Object) (-1L));
        com.google.javascript.rhino.head.ast.Jump jump23 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump23.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump27 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump23, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode29 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int30 = scriptNode29.getEndLineno();
        int int31 = scriptNode29.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList32 = scriptNode29.getChildScopes();
        com.google.javascript.rhino.head.Node node33 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump23, (com.google.javascript.rhino.head.Node) scriptNode29);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList34 = scriptNode29.getFunctions();
        functionNodeList34.clear();
        int int37 = functionNodeList34.lastIndexOf((java.lang.Object) (-1L));
        boolean boolean38 = functionNodeList15.removeAll((java.util.Collection<com.google.javascript.rhino.head.ast.FunctionNode>) functionNodeList34);
        com.google.javascript.rhino.head.ast.Jump jump43 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump43.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump47 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump43, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode49 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int50 = scriptNode49.getEndLineno();
        int int51 = scriptNode49.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList52 = scriptNode49.getChildScopes();
        com.google.javascript.rhino.head.Node node53 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump43, (com.google.javascript.rhino.head.Node) scriptNode49);
        com.google.javascript.rhino.head.Node node55 = scriptNode49.setType(0);
        int int56 = functionNodeList34.lastIndexOf((java.lang.Object) scriptNode49);
        com.google.javascript.rhino.head.ast.Jump jump60 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump60.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump64 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump60, 0);
        com.google.javascript.rhino.head.ast.Jump jump68 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump68.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump72 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump68, 0);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode73 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int74 = functionNode73.getLp();
        functionNode73.setEncodedSource("");
        functionNode73.flattenSymbolTable(false);
        jump60.addChildAfter((com.google.javascript.rhino.head.Node) jump68, (com.google.javascript.rhino.head.Node) functionNode73);
        boolean boolean80 = functionNodeList34.remove((java.lang.Object) jump68);
        boolean boolean81 = functionNodeList34.isEmpty();
        int int82 = functionNodeList34.size();
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNull(scopeList13);
        org.junit.Assert.assertNotNull(functionNodeList15);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNull(scopeList32);
        org.junit.Assert.assertNotNull(functionNodeList34);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1));
        org.junit.Assert.assertNull(scopeList52);
        org.junit.Assert.assertNotNull(node55);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1));
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + (-1) + "'", int74 == (-1));
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 0 + "'", int82 == 0);
    }

    @Test
    public void test10368() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10368");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode1 = new com.google.javascript.rhino.head.ast.FunctionNode(0);
        int int2 = functionNode1.getBaseLineno();
        functionNode1.setSourceName("                                                                                                                                                                                                        /null/");
        functionNode1.setRequiresActivation();
        com.google.javascript.rhino.head.Node node6 = functionNode1.target;
        int int7 = functionNode1.getLength();
        java.lang.String str8 = functionNode1.getEncodedSource();
        // The following exception was thrown during execution in test generation
        try {
            functionNode1.setString("                    /null/");
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: com.google.javascript.rhino.head.ast.FunctionNode cannot be cast to com.google.javascript.rhino.head.ast.Name");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertNull(node6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertNull(str8);
    }

    @Test
    public void test10369() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10369");
        com.google.javascript.rhino.head.ast.Jump jump4 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump4.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump8 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump4, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int11 = scriptNode10.getEndLineno();
        int int12 = scriptNode10.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList13 = scriptNode10.getChildScopes();
        com.google.javascript.rhino.head.Node node14 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump4, (com.google.javascript.rhino.head.Node) scriptNode10);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList15 = scriptNode10.getFunctions();
        functionNodeList15.clear();
        functionNodeList15.clear();
        java.util.Iterator<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeItor18 = functionNodeList15.iterator();
        com.google.javascript.rhino.head.ast.RegExpLiteral regExpLiteral20 = new com.google.javascript.rhino.head.ast.RegExpLiteral((int) (short) 1);
        java.lang.String str22 = regExpLiteral20.toSource((int) (byte) 10);
        regExpLiteral20.setFlags("-1\tSCRIPT -1 1\n");
        regExpLiteral20.removeProp(8);
        java.lang.String str27 = regExpLiteral20.getValue();
        regExpLiteral20.setLineno(10);
        regExpLiteral20.removeChildren();
        boolean boolean31 = functionNodeList15.equals((java.lang.Object) regExpLiteral20);
        com.google.javascript.rhino.head.ast.Jump jump32 = new com.google.javascript.rhino.head.ast.Jump();
        boolean boolean33 = functionNodeList15.remove((java.lang.Object) jump32);
        int int34 = functionNodeList15.size();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode35 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int36 = functionNode35.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode37 = functionNode35.getTop();
        boolean boolean38 = functionNode35.hasSideEffects();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList39 = functionNode35.getSymbols();
        functionNode35.setRp(5);
        com.google.javascript.rhino.head.ast.Scope scope42 = functionNode35.getEnclosingScope();
        functionNode35.setLineno(5);
        functionNode35.setIsExpressionClosure(false);
        functionNode35.setEncodedSourceBounds(0, (-2));
        functionNode35.setLength(12);
        functionNode35.setRelative((-601958044));
        int int54 = functionNodeList15.indexOf((java.lang.Object) (-601958044));
        java.util.stream.Stream<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeStream55 = functionNodeList15.parallelStream();
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNull(scopeList13);
        org.junit.Assert.assertNotNull(functionNodeList15);
        org.junit.Assert.assertNotNull(functionNodeItor18);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "                    /null/" + "'", str22, "                    /null/");
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNotNull(scriptNode37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(symbolList39);
        org.junit.Assert.assertNull(scope42);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
        org.junit.Assert.assertNotNull(functionNodeStream55);
    }

    @Test
    public void test10370() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10370");
        com.google.javascript.rhino.head.ast.Jump jump4 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump4.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump8 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump4, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int11 = scriptNode10.getEndLineno();
        int int12 = scriptNode10.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList13 = scriptNode10.getChildScopes();
        com.google.javascript.rhino.head.Node node14 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump4, (com.google.javascript.rhino.head.Node) scriptNode10);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList15 = scriptNode10.getFunctions();
        int int16 = functionNodeList15.size();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator17 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        functionNodeList15.sort((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator17);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode20 = new com.google.javascript.rhino.head.ast.FunctionNode(0);
        boolean boolean21 = functionNode20.hasChildren();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode22 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int23 = functionNode22.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode24 = functionNode22.getTop();
        com.google.javascript.rhino.head.ast.Name name25 = null;
        functionNode22.setFunctionName(name25);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode27 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int28 = functionNode27.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode30 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        java.lang.String str31 = functionNode27.toStringTree(scriptNode30);
        functionNode27.setFunctionIsGetter();
        int int33 = functionNode22.addFunction(functionNode27);
        boolean boolean34 = functionNode27.hasSideEffects();
        int int35 = functionNode27.getFunctionCount();
        int int36 = positionComparator17.compare((com.google.javascript.rhino.head.ast.AstNode) functionNode20, (com.google.javascript.rhino.head.ast.AstNode) functionNode27);
        com.google.javascript.rhino.head.Node node37 = functionNode27.target;
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNull(scopeList13);
        org.junit.Assert.assertNotNull(functionNodeList15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNotNull(scriptNode24);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 1 + "'", int36 == 1);
        org.junit.Assert.assertNull(node37);
    }

    @Test
    public void test10371() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10371");
        com.google.javascript.rhino.head.ast.Jump jump4 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump4.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump8 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump4, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int11 = scriptNode10.getEndLineno();
        int int12 = scriptNode10.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList13 = scriptNode10.getChildScopes();
        com.google.javascript.rhino.head.Node node14 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump4, (com.google.javascript.rhino.head.Node) scriptNode10);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList15 = scriptNode10.getFunctions();
        functionNodeList15.clear();
        com.google.javascript.rhino.head.ast.Jump jump21 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump21.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump25 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump21, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode27 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int28 = scriptNode27.getEndLineno();
        int int29 = scriptNode27.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList30 = scriptNode27.getChildScopes();
        com.google.javascript.rhino.head.Node node31 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump21, (com.google.javascript.rhino.head.Node) scriptNode27);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList32 = scriptNode27.getFunctions();
        boolean boolean33 = functionNodeList15.removeAll((java.util.Collection<com.google.javascript.rhino.head.ast.FunctionNode>) functionNodeList32);
        functionNodeList15.clear();
        java.util.stream.Stream<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeStream35 = functionNodeList15.parallelStream();
        com.google.javascript.rhino.head.ast.Jump jump41 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump41.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump45 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump41, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode47 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int48 = scriptNode47.getEndLineno();
        int int49 = scriptNode47.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList50 = scriptNode47.getChildScopes();
        com.google.javascript.rhino.head.Node node51 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump41, (com.google.javascript.rhino.head.Node) scriptNode47);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList52 = scriptNode47.getFunctions();
        int int53 = scriptNode47.getPosition();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList54 = scriptNode47.getChildScopes();
        int int55 = scriptNode47.getEncodedSourceEnd();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList56 = scriptNode47.getSymbols();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode57 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int58 = functionNode57.getLp();
        functionNode57.setEncodedSource("");
        functionNode57.flattenSymbolTable(false);
        com.google.javascript.rhino.head.ast.RegExpLiteral regExpLiteral64 = new com.google.javascript.rhino.head.ast.RegExpLiteral((int) (short) 1);
        java.lang.String str66 = regExpLiteral64.toSource((int) (byte) 10);
        regExpLiteral64.setFlags("-1\tSCRIPT -1 1\n");
        regExpLiteral64.removeProp(8);
        java.lang.String str71 = regExpLiteral64.getValue();
        com.google.javascript.rhino.head.Node node72 = new com.google.javascript.rhino.head.Node(7, (com.google.javascript.rhino.head.Node) scriptNode47, (com.google.javascript.rhino.head.Node) functionNode57, (com.google.javascript.rhino.head.Node) regExpLiteral64);
        int int73 = functionNodeList15.lastIndexOf((java.lang.Object) functionNode57);
        com.google.javascript.rhino.head.Node node76 = new com.google.javascript.rhino.head.Node((-14761645));
        com.google.javascript.rhino.head.ast.FunctionNode functionNode77 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int78 = functionNode77.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode80 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        java.lang.String str81 = functionNode77.toStringTree(scriptNode80);
        functionNode77.setFunctionIsGetter();
        com.google.javascript.rhino.head.ast.RegExpLiteral regExpLiteral84 = new com.google.javascript.rhino.head.ast.RegExpLiteral((int) (short) 1);
        java.lang.String str86 = regExpLiteral84.toSource((int) (byte) 10);
        regExpLiteral84.setFlags("-1\tSCRIPT -1 1\n");
        java.lang.String str90 = regExpLiteral84.toSource((int) (short) -1);
        regExpLiteral84.setFlags("EOF");
        boolean boolean93 = regExpLiteral84.hasSideEffects();
        com.google.javascript.rhino.head.Node node94 = new com.google.javascript.rhino.head.Node(350469479, node76, (com.google.javascript.rhino.head.Node) functionNode77, (com.google.javascript.rhino.head.Node) regExpLiteral84);
        boolean boolean95 = functionNodeList15.remove((java.lang.Object) node76);
        java.util.Collection<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeCollection96 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean97 = functionNodeList15.removeAll(functionNodeCollection96);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNull(scopeList13);
        org.junit.Assert.assertNotNull(functionNodeList15);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertNull(scopeList30);
        org.junit.Assert.assertNotNull(functionNodeList32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(functionNodeStream35);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertNull(scopeList50);
        org.junit.Assert.assertNotNull(functionNodeList52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
        org.junit.Assert.assertNull(scopeList54);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1));
        org.junit.Assert.assertNotNull(symbolList56);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + (-1) + "'", int58 == (-1));
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "                    /null/" + "'", str66, "                    /null/");
        org.junit.Assert.assertNull(str71);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + (-1) + "'", int73 == (-1));
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + (-1) + "'", int78 == (-1));
        org.junit.Assert.assertNull(str81);
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "                    /null/" + "'", str86, "                    /null/");
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "/null/-1\tSCRIPT -1 1\n" + "'", str90, "/null/-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
    }

    @Test
    public void test10372() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10372");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode0 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int1 = functionNode0.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = functionNode0.getTop();
        boolean boolean3 = functionNode0.hasSideEffects();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode4 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int5 = functionNode4.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = functionNode4.getTop();
        com.google.javascript.rhino.head.ast.Name name7 = null;
        functionNode4.setFunctionName(name7);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode9 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int10 = functionNode9.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode12 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        java.lang.String str13 = functionNode9.toStringTree(scriptNode12);
        functionNode9.setFunctionIsGetter();
        int int15 = functionNode4.addFunction(functionNode9);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList16 = functionNode4.getSymbols();
        functionNode0.setSymbols(symbolList16);
        java.lang.Class<?> wildcardClass18 = symbolList16.getClass();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-1) + "'", int1 == (-1));
        org.junit.Assert.assertNotNull(scriptNode2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(scriptNode6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(symbolList16);
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test10373() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10373");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode0 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int1 = functionNode0.getLp();
        functionNode0.setEncodedSource("");
        functionNode0.flattenSymbolTable(false);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode6 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int7 = functionNode6.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode9 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        java.lang.String str10 = functionNode6.toStringTree(scriptNode9);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode11 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int12 = functionNode11.getLp();
        functionNode11.setEncodedSource("");
        functionNode11.flattenSymbolTable(false);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode17 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int18 = functionNode17.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode19 = functionNode17.getTop();
        com.google.javascript.rhino.head.ast.Name name20 = null;
        functionNode17.setFunctionName(name20);
        com.google.javascript.rhino.head.ast.Jump jump25 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump25.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump29 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump25, 0);
        com.google.javascript.rhino.head.ast.Jump jump33 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump33.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump37 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump33, 0);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode38 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int39 = functionNode38.getLp();
        functionNode38.setEncodedSource("");
        functionNode38.flattenSymbolTable(false);
        jump25.addChildAfter((com.google.javascript.rhino.head.Node) jump33, (com.google.javascript.rhino.head.Node) functionNode38);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode45 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int46 = functionNode45.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode47 = functionNode45.getTop();
        com.google.javascript.rhino.head.ast.Name name48 = null;
        functionNode45.setFunctionName(name48);
        com.google.javascript.rhino.head.ast.FunctionNode[] functionNodeArray50 = new com.google.javascript.rhino.head.ast.FunctionNode[] { functionNode0, functionNode6, functionNode11, functionNode17, functionNode38, functionNode45 };
        java.util.ArrayList<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList51 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.FunctionNode>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.FunctionNode>) functionNodeList51, functionNodeArray50);
        boolean boolean54 = functionNodeList51.remove((java.lang.Object) 0);
        com.google.javascript.rhino.head.Node node57 = com.google.javascript.rhino.head.Node.newString((int) (byte) 1, "$0");
        boolean boolean58 = functionNodeList51.contains((java.lang.Object) node57);
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator59 = node57.spliterator();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-1) + "'", int1 == (-1));
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNotNull(scriptNode19);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertNotNull(scriptNode47);
        org.junit.Assert.assertNotNull(functionNodeArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(node57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(nodeSpliterator59);
    }

    @Test
    public void test10374() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10374");
        com.google.javascript.rhino.head.Token.CommentType commentType4 = com.google.javascript.rhino.head.Token.CommentType.HTML;
        com.google.javascript.rhino.head.ast.Comment comment6 = new com.google.javascript.rhino.head.ast.Comment(20, 1, commentType4, "109");
        java.lang.String str8 = comment6.toSource(19);
        java.lang.String str9 = comment6.getValue();
        java.lang.String str10 = comment6.getValue();
        com.google.javascript.rhino.head.Token.CommentType commentType11 = com.google.javascript.rhino.head.Token.CommentType.LINE;
        comment6.setCommentType(commentType11);
        com.google.javascript.rhino.head.ast.Comment comment14 = new com.google.javascript.rhino.head.ast.Comment(1, 1, commentType11, "                    /null/");
        java.lang.String str15 = comment14.getValue();
        com.google.javascript.rhino.head.ast.Name name17 = null;
        com.google.javascript.rhino.head.ast.FunctionNode functionNode18 = new com.google.javascript.rhino.head.ast.FunctionNode((int) '4', name17);
        functionNode18.setIsGenerator();
        // The following exception was thrown during execution in test generation
        try {
            comment14.setScope((com.google.javascript.rhino.head.ast.Scope) functionNode18);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + commentType4 + "' != '" + com.google.javascript.rhino.head.Token.CommentType.HTML + "'", commentType4.equals(com.google.javascript.rhino.head.Token.CommentType.HTML));
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "                                      109" + "'", str8, "                                      109");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "109" + "'", str9, "109");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "109" + "'", str10, "109");
        org.junit.Assert.assertTrue("'" + commentType11 + "' != '" + com.google.javascript.rhino.head.Token.CommentType.LINE + "'", commentType11.equals(com.google.javascript.rhino.head.Token.CommentType.LINE));
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "                    /null/" + "'", str15, "                    /null/");
    }

    @Test
    public void test10375() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10375");
        com.google.javascript.rhino.head.ast.RegExpLiteral regExpLiteral1 = new com.google.javascript.rhino.head.ast.RegExpLiteral((int) (short) 1);
        java.lang.String str3 = regExpLiteral1.toSource((int) (byte) 10);
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator4 = regExpLiteral1.new NodeIterator();
        regExpLiteral1.setFlags("$0");
        int int7 = regExpLiteral1.getLineno();
        java.lang.String str9 = regExpLiteral1.toSource(6);
        regExpLiteral1.setValue("/=");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode12 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int13 = functionNode12.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = functionNode12.getTop();
        com.google.javascript.rhino.head.ast.Name name15 = null;
        functionNode12.setFunctionName(name15);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode17 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode18 = functionNode17.getTop();
        functionNode12.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode17);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode20 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int21 = functionNode20.getLp();
        functionNode20.setEncodedSource("");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode24 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int25 = functionNode24.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode26 = functionNode24.getTop();
        com.google.javascript.rhino.head.ast.Name name27 = null;
        functionNode24.setFunctionName(name27);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode29 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode30 = functionNode29.getTop();
        functionNode24.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode29);
        int int32 = functionNode29.getRp();
        int int33 = functionNode29.getFunctionType();
        functionNode20.addParam((com.google.javascript.rhino.head.ast.AstNode) functionNode29);
        com.google.javascript.rhino.head.ast.Scope scope36 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 10);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode37 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode38 = functionNode37.getTop();
        functionNode37.setParens((int) (byte) 1, (int) (short) 1);
        functionNode37.setEncodedSourceStart((-1));
        functionNode37.setFunctionIsGetter();
        scope36.addChildToFront((com.google.javascript.rhino.head.Node) functionNode37);
        functionNode37.setRp(19);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode49 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int50 = scriptNode49.getEndLineno();
        int int51 = scriptNode49.getBaseLineno();
        com.google.javascript.rhino.head.ast.Jump jump54 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode56 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int57 = scriptNode56.getEndLineno();
        int int58 = scriptNode56.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList59 = scriptNode56.getChildScopes();
        jump54.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode56);
        java.lang.String str61 = scriptNode56.debugPrint();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode49, (com.google.javascript.rhino.head.ast.Scope) scriptNode56);
        com.google.javascript.rhino.head.ast.Scope scope63 = new com.google.javascript.rhino.head.ast.Scope();
        scriptNode56.target = scope63;
        java.lang.String str65 = functionNode37.toStringTree(scriptNode56);
        java.lang.String str67 = scriptNode56.toSource((int) (short) 10);
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap68 = scriptNode56.getSymbolTable();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode70 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int71 = scriptNode70.getEndLineno();
        int int72 = scriptNode70.getBaseLineno();
        scriptNode70.removeProp(0);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList75 = scriptNode70.getSymbols();
        boolean boolean76 = strMap68.containsValue((java.lang.Object) symbolList75);
        functionNode20.setSymbols(symbolList75);
        functionNode17.setBody((com.google.javascript.rhino.head.ast.AstNode) functionNode20);
        com.google.javascript.rhino.head.Node node79 = functionNode20.target;
        functionNode20.setIsExpressionClosure(false);
        regExpLiteral1.setParent((com.google.javascript.rhino.head.ast.AstNode) functionNode20);
        com.google.javascript.rhino.head.ast.AstNode astNode83 = functionNode20.getBody();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "                    /null/" + "'", str3, "                    /null/");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "            /null/$0" + "'", str9, "            /null/$0");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(scriptNode14);
        org.junit.Assert.assertNotNull(scriptNode18);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNotNull(scriptNode26);
        org.junit.Assert.assertNotNull(scriptNode30);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNotNull(scriptNode38);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1));
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + (-1) + "'", int58 == (-1));
        org.junit.Assert.assertNull(scopeList59);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str61, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertNull(str65);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "                    {\n                    }\n" + "'", str67, "                    {\n                    }\n");
        org.junit.Assert.assertNotNull(strMap68);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + (-1) + "'", int71 == (-1));
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + (-1) + "'", int72 == (-1));
        org.junit.Assert.assertNotNull(symbolList75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNull(node79);
        org.junit.Assert.assertNull(astNode83);
    }

    @Test
    public void test10376() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10376");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode1 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int2 = functionNode1.getLp();
        functionNode1.setEncodedSource("");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode5 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int6 = functionNode5.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode7 = functionNode5.getTop();
        com.google.javascript.rhino.head.ast.Name name8 = null;
        functionNode5.setFunctionName(name8);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode10 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = functionNode10.getTop();
        functionNode5.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode10);
        int int13 = functionNode10.getRp();
        int int14 = functionNode10.getFunctionType();
        functionNode1.addParam((com.google.javascript.rhino.head.ast.AstNode) functionNode10);
        com.google.javascript.rhino.head.ast.Scope scope16 = functionNode10.getEnclosingScope();
        com.google.javascript.rhino.head.ast.AstNode astNode17 = scope16.getParent();
        com.google.javascript.rhino.head.Node node18 = scope16.getLastSibling();
        com.google.javascript.rhino.head.ast.Jump jump19 = new com.google.javascript.rhino.head.ast.Jump((-1336829251), (com.google.javascript.rhino.head.Node) scope16);
        boolean boolean20 = jump19.hasSideEffects();
        jump19.setLineno(12802714);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(scriptNode7);
        org.junit.Assert.assertNotNull(scriptNode11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(scope16);
        org.junit.Assert.assertNull(astNode17);
        org.junit.Assert.assertNotNull(node18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    }

    @Test
    public void test10377() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10377");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode1 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = functionNode1.getTop();
        functionNode1.setParens((int) (byte) 1, (int) (short) 1);
        com.google.javascript.rhino.head.Node node6 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) functionNode1);
        functionNode1.setRequiresActivation();
        java.lang.String str8 = functionNode1.shortName();
        int int9 = functionNode1.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList10 = functionNode1.getFunctions();
        com.google.javascript.rhino.head.ast.Jump jump15 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump15.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump19 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump15, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode21 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int22 = scriptNode21.getEndLineno();
        int int23 = scriptNode21.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList24 = scriptNode21.getChildScopes();
        com.google.javascript.rhino.head.Node node25 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump15, (com.google.javascript.rhino.head.Node) scriptNode21);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList26 = scriptNode21.getFunctions();
        functionNodeList26.clear();
        functionNodeList26.clear();
        java.util.Iterator<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeItor29 = functionNodeList26.iterator();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode30 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int31 = functionNode30.getLp();
        functionNode30.setLp((int) (short) 1);
        int int36 = functionNode30.getIntProp(4, 26);
        functionNode30.flattenSymbolTable(true);
        boolean boolean39 = functionNodeList26.equals((java.lang.Object) functionNode30);
        boolean boolean40 = functionNodeList10.removeAll((java.util.Collection<com.google.javascript.rhino.head.ast.FunctionNode>) functionNodeList26);
        com.google.javascript.rhino.head.ast.Jump jump45 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump45.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump49 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump45, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode51 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int52 = scriptNode51.getEndLineno();
        int int53 = scriptNode51.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList54 = scriptNode51.getChildScopes();
        com.google.javascript.rhino.head.Node node55 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump45, (com.google.javascript.rhino.head.Node) scriptNode51);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList56 = scriptNode51.getFunctions();
        boolean boolean57 = functionNodeList56.isEmpty();
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList60 = functionNodeList56.subList((int) (byte) 0, 0);
        com.google.javascript.rhino.head.ast.Jump jump64 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump64.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump68 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump64, 0);
        com.google.javascript.rhino.head.ast.Jump jump72 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump72.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump76 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump72, 0);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode77 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int78 = functionNode77.getLp();
        functionNode77.setEncodedSource("");
        functionNode77.flattenSymbolTable(false);
        jump64.addChildAfter((com.google.javascript.rhino.head.Node) jump72, (com.google.javascript.rhino.head.Node) functionNode77);
        boolean boolean84 = functionNodeList56.equals((java.lang.Object) jump72);
        boolean boolean85 = functionNodeList26.containsAll((java.util.Collection<com.google.javascript.rhino.head.ast.FunctionNode>) functionNodeList56);
        java.util.stream.Stream<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeStream86 = functionNodeList26.stream();
        org.junit.Assert.assertNotNull(scriptNode2);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "FunctionNode" + "'", str8, "FunctionNode");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(functionNodeList10);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNull(scopeList24);
        org.junit.Assert.assertNotNull(functionNodeList26);
        org.junit.Assert.assertNotNull(functionNodeItor29);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 26 + "'", int36 == 26);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
        org.junit.Assert.assertNull(scopeList54);
        org.junit.Assert.assertNotNull(functionNodeList56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(functionNodeList60);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + (-1) + "'", int78 == (-1));
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertNotNull(functionNodeStream86);
    }

    @Test
    public void test10378() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10378");
        com.google.javascript.rhino.head.ast.RegExpLiteral regExpLiteral2 = new com.google.javascript.rhino.head.ast.RegExpLiteral(129, (int) (short) -1);
    }

    @Test
    public void test10379() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10379");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode0 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = functionNode0.getTop();
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList2 = functionNode0.getStatements();
        com.google.javascript.rhino.head.ast.AstNode astNode3 = functionNode0.getMemberExprNode();
        java.util.List<com.google.javascript.rhino.head.Node> nodeList4 = functionNode0.getResumptionPoints();
        org.junit.Assert.assertNotNull(scriptNode1);
        org.junit.Assert.assertNotNull(astNodeList2);
        org.junit.Assert.assertNull(astNode3);
        org.junit.Assert.assertNull(nodeList4);
    }

    @Test
    public void test10380() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10380");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode0 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = functionNode0.getTop();
        functionNode0.setParens((int) (byte) 1, (int) (short) 1);
        functionNode0.setEncodedSourceStart((-1));
        java.util.List<com.google.javascript.rhino.head.Node> nodeList7 = functionNode0.getResumptionPoints();
        com.google.javascript.rhino.head.ast.Scope scope9 = functionNode0.getDefiningScope("hi!");
        boolean boolean10 = functionNode0.isGetterOrSetter();
        com.google.javascript.rhino.head.ast.Scope scope12 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 10);
        int[] intArray19 = new int[] { 25, 17, (short) 0, 20, 19, (byte) 1 };
        functionNode0.addLiveLocals((com.google.javascript.rhino.head.Node) scope12, intArray19);
        com.google.javascript.rhino.head.Node node22 = functionNode0.setType(100);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList23 = functionNode0.getFunctions();
        com.google.javascript.rhino.head.ast.Jump jump28 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump28.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump32 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump28, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode34 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int35 = scriptNode34.getEndLineno();
        int int36 = scriptNode34.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList37 = scriptNode34.getChildScopes();
        com.google.javascript.rhino.head.Node node38 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump28, (com.google.javascript.rhino.head.Node) scriptNode34);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList39 = scriptNode34.getFunctions();
        int int40 = functionNodeList39.size();
        functionNodeList39.clear();
        int int43 = functionNodeList39.indexOf((java.lang.Object) 10L);
        boolean boolean44 = functionNodeList23.containsAll((java.util.Collection<com.google.javascript.rhino.head.ast.FunctionNode>) functionNodeList39);
        java.lang.Object[] objArray45 = functionNodeList39.toArray();
        java.util.Iterator<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeItor46 = functionNodeList39.iterator();
        org.junit.Assert.assertNotNull(scriptNode1);
        org.junit.Assert.assertNull(nodeList7);
        org.junit.Assert.assertNull(scope9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[25, 17, 0, 20, 19, 1]");
        org.junit.Assert.assertNotNull(node22);
        org.junit.Assert.assertNotNull(functionNodeList23);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNull(scopeList37);
        org.junit.Assert.assertNotNull(functionNodeList39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(objArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray45), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray45), "[]");
        org.junit.Assert.assertNotNull(functionNodeItor46);
    }

    @Test
    public void test10381() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10381");
        com.google.javascript.rhino.head.ast.Name name1 = null;
        com.google.javascript.rhino.head.ast.FunctionNode functionNode2 = new com.google.javascript.rhino.head.ast.FunctionNode((-18), name1);
    }

    @Test
    public void test10382() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10382");
        com.google.javascript.rhino.head.ast.Jump jump2 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode4 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int5 = scriptNode4.getEndLineno();
        int int6 = scriptNode4.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList7 = scriptNode4.getChildScopes();
        jump2.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode4);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode10 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int11 = functionNode10.getLp();
        functionNode10.setEncodedSource("");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode14 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int15 = functionNode14.getLp();
        functionNode14.setEncodedSource("");
        functionNode14.flattenSymbolTable(false);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode20 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int21 = functionNode20.getLp();
        com.google.javascript.rhino.head.Node node23 = new com.google.javascript.rhino.head.Node((-1), (com.google.javascript.rhino.head.Node) functionNode10, (com.google.javascript.rhino.head.Node) functionNode14, (com.google.javascript.rhino.head.Node) functionNode20, (int) '#');
        jump2.addChildrenToFront((com.google.javascript.rhino.head.Node) functionNode10);
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList25 = functionNode10.getStatements();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode26 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode27 = functionNode26.getTop();
        com.google.javascript.rhino.head.ast.AstRoot astRoot28 = functionNode26.getAstRoot();
        functionNode10.replaceWith((com.google.javascript.rhino.head.ast.Scope) functionNode26);
        functionNode10.setLineno(4);
        functionNode10.setFunctionIsSetter();
        boolean boolean33 = functionNode10.isGenerator();
        functionNode10.setEncodedSourceEnd(1186675070);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNull(scopeList7);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertNotNull(astNodeList25);
        org.junit.Assert.assertNotNull(scriptNode27);
        org.junit.Assert.assertNull(astRoot28);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
    }

    @Test
    public void test10383() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10383");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode0 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = functionNode0.getTop();
        functionNode0.setParens((int) (byte) 1, (int) (short) 1);
        functionNode0.setEncodedSourceStart((-1));
        java.util.List<com.google.javascript.rhino.head.Node> nodeList7 = functionNode0.getResumptionPoints();
        com.google.javascript.rhino.head.ast.Scope scope9 = functionNode0.getDefiningScope("hi!");
        boolean boolean10 = functionNode0.isGetterOrSetter();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode11 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int12 = functionNode11.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode13 = functionNode11.getTop();
        com.google.javascript.rhino.head.ast.Name name14 = null;
        functionNode11.setFunctionName(name14);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode16 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode17 = functionNode16.getTop();
        functionNode11.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode16);
        int int19 = functionNode16.getRp();
        int int20 = functionNode16.getFunctionType();
        int int21 = functionNode0.addFunction(functionNode16);
        java.lang.String str22 = functionNode0.getNextTempName();
        com.google.javascript.rhino.head.ast.Jump jump27 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump27.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump31 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump27, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode33 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int34 = scriptNode33.getEndLineno();
        int int35 = scriptNode33.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList36 = scriptNode33.getChildScopes();
        com.google.javascript.rhino.head.Node node37 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump27, (com.google.javascript.rhino.head.Node) scriptNode33);
        java.lang.String str38 = scriptNode33.getSourceName();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode39 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int40 = functionNode39.getLp();
        functionNode39.setEncodedSource("");
        functionNode39.flattenSymbolTable(false);
        java.lang.String str45 = functionNode39.getName();
        functionNode39.setFunctionIsGetter();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode47 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int48 = functionNode47.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode49 = functionNode47.getTop();
        com.google.javascript.rhino.head.Node node50 = functionNode47.getLastSibling();
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList51 = functionNode47.getParams();
        functionNode39.setParams(astNodeList51);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode53 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int54 = functionNode53.getLp();
        functionNode53.setLp((int) (short) 1);
        int int59 = functionNode53.getIntProp(4, 26);
        functionNode53.flattenSymbolTable(true);
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList62 = functionNode53.getParams();
        functionNode39.setParams(astNodeList62);
        functionNode39.setEndLineno(12);
        scriptNode33.addChildToBack((com.google.javascript.rhino.head.Node) functionNode39);
        functionNode0.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode39);
        functionNode0.setRp(10);
        functionNode0.setLp((-715688198));
        functionNode0.clearParentScope();
        org.junit.Assert.assertNotNull(scriptNode1);
        org.junit.Assert.assertNull(nodeList7);
        org.junit.Assert.assertNull(scope9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(scriptNode13);
        org.junit.Assert.assertNotNull(scriptNode17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "$0" + "'", str22, "$0");
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertNull(scopeList36);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "" + "'", str45, "");
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
        org.junit.Assert.assertNotNull(scriptNode49);
        org.junit.Assert.assertNotNull(node50);
        org.junit.Assert.assertNotNull(astNodeList51);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 26 + "'", int59 == 26);
        org.junit.Assert.assertNotNull(astNodeList62);
    }

    @Test
    public void test10384() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10384");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode1 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int2 = functionNode1.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode3 = functionNode1.getTop();
        com.google.javascript.rhino.head.ast.Name name4 = null;
        functionNode1.setFunctionName(name4);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode6 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode7 = functionNode6.getTop();
        functionNode1.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode6);
        functionNode6.setIsExpressionClosure(true);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode12 = new com.google.javascript.rhino.head.ast.FunctionNode((int) (byte) 100);
        int int13 = functionNode6.addFunction(functionNode12);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode15 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode16 = functionNode15.getTop();
        java.lang.String str17 = scriptNode16.getJsDoc();
        com.google.javascript.rhino.head.Node node19 = scriptNode16.setType(0);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode20 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int21 = functionNode20.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode23 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        java.lang.String str24 = functionNode20.toStringTree(scriptNode23);
        com.google.javascript.rhino.head.ast.Scope scope26 = scriptNode23.getDefiningScope("");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode28 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int29 = scriptNode28.getEndLineno();
        int int30 = scriptNode28.getBaseLineno();
        com.google.javascript.rhino.head.Node node31 = new com.google.javascript.rhino.head.Node(25, node19, (com.google.javascript.rhino.head.Node) scriptNode23, (com.google.javascript.rhino.head.Node) scriptNode28);
        int int32 = functionNode12.compareTo((com.google.javascript.rhino.head.ast.AstNode) scriptNode23);
        com.google.javascript.rhino.head.ast.RegExpLiteral regExpLiteral35 = new com.google.javascript.rhino.head.ast.RegExpLiteral((int) (short) 1);
        java.lang.String str37 = regExpLiteral35.toSource((int) (byte) 10);
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator38 = regExpLiteral35.new NodeIterator();
        java.lang.String str40 = regExpLiteral35.toSource(100);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode41 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int42 = functionNode41.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode43 = functionNode41.getTop();
        com.google.javascript.rhino.head.ast.Name name44 = null;
        functionNode41.setFunctionName(name44);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode46 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode47 = functionNode46.getTop();
        functionNode41.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode46);
        java.lang.String str49 = functionNode41.getNextTempName();
        com.google.javascript.rhino.head.Node node51 = new com.google.javascript.rhino.head.Node(350469479, (com.google.javascript.rhino.head.Node) regExpLiteral35, (com.google.javascript.rhino.head.Node) functionNode41, 7);
        com.google.javascript.rhino.head.Node node52 = new com.google.javascript.rhino.head.Node((int) (byte) 10, (com.google.javascript.rhino.head.Node) functionNode12, node51);
        com.google.javascript.rhino.head.ast.RegExpLiteral regExpLiteral55 = new com.google.javascript.rhino.head.ast.RegExpLiteral(2, 6);
        boolean boolean56 = regExpLiteral55.hasSideEffects();
        functionNode12.addRegExp(regExpLiteral55);
        functionNode12.putIntProp(19, 20);
        int int61 = functionNode12.getLineno();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str62 = functionNode12.toSource();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertNotNull(scriptNode3);
        org.junit.Assert.assertNotNull(scriptNode7);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(scriptNode16);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(node19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(scope26);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1 + "'", int32 == 1);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "                    /null/" + "'", str37, "                    /null/");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "                                                                                                                                                                                                        /null/" + "'", str40, "                                                                                                                                                                                                        /null/");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertNotNull(scriptNode43);
        org.junit.Assert.assertNotNull(scriptNode47);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "$0" + "'", str49, "$0");
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + (-1) + "'", int61 == (-1));
    }

    @Test
    public void test10385() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10385");
        com.google.javascript.rhino.head.Token.CommentType commentType4 = com.google.javascript.rhino.head.Token.CommentType.HTML;
        com.google.javascript.rhino.head.ast.Comment comment6 = new com.google.javascript.rhino.head.ast.Comment(20, 1, commentType4, "109");
        com.google.javascript.rhino.head.ast.Comment comment8 = new com.google.javascript.rhino.head.ast.Comment(136, 15, commentType4, "-1\tSCRIPT -1 1\n");
        com.google.javascript.rhino.head.Token.CommentType commentType9 = com.google.javascript.rhino.head.Token.CommentType.JSDOC;
        comment8.setCommentType(commentType9);
        com.google.javascript.rhino.head.Token.CommentType commentType11 = com.google.javascript.rhino.head.Token.CommentType.JSDOC;
        comment8.setCommentType(commentType11);
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator13 = comment8.new NodeIterator();
        boolean boolean14 = nodeIterator13.hasNext();
        // The following exception was thrown during execution in test generation
        try {
            nodeIterator13.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: next() has not been called");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + commentType4 + "' != '" + com.google.javascript.rhino.head.Token.CommentType.HTML + "'", commentType4.equals(com.google.javascript.rhino.head.Token.CommentType.HTML));
        org.junit.Assert.assertTrue("'" + commentType9 + "' != '" + com.google.javascript.rhino.head.Token.CommentType.JSDOC + "'", commentType9.equals(com.google.javascript.rhino.head.Token.CommentType.JSDOC));
        org.junit.Assert.assertTrue("'" + commentType11 + "' != '" + com.google.javascript.rhino.head.Token.CommentType.JSDOC + "'", commentType11.equals(com.google.javascript.rhino.head.Token.CommentType.JSDOC));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test10386() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10386");
        com.google.javascript.rhino.head.ast.Jump jump3 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump3.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump7 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump3, 0);
        com.google.javascript.rhino.head.ast.Jump jump11 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump11.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump15 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump11, 0);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode16 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int17 = functionNode16.getLp();
        functionNode16.setEncodedSource("");
        functionNode16.flattenSymbolTable(false);
        jump3.addChildAfter((com.google.javascript.rhino.head.Node) jump11, (com.google.javascript.rhino.head.Node) functionNode16);
        com.google.javascript.rhino.head.Node node23 = functionNode16.target;
        boolean boolean24 = functionNode16.hasConsistentReturnUsage();
        com.google.javascript.rhino.head.ast.Name name25 = functionNode16.getFunctionName();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode26 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.Scope scope28 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 10);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode29 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode30 = functionNode29.getTop();
        functionNode29.setParens((int) (byte) 1, (int) (short) 1);
        functionNode29.setEncodedSourceStart((-1));
        functionNode29.setFunctionIsGetter();
        scope28.addChildToFront((com.google.javascript.rhino.head.Node) functionNode29);
        functionNode26.setBody((com.google.javascript.rhino.head.ast.AstNode) functionNode29);
        functionNode29.setRelative(0);
        functionNode16.setBody((com.google.javascript.rhino.head.ast.AstNode) functionNode29);
        boolean boolean42 = functionNode16.isGenerator();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode43 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int44 = functionNode43.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode45 = functionNode43.getTop();
        boolean boolean46 = functionNode43.hasSideEffects();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList47 = functionNode43.getSymbols();
        functionNode43.setRp(5);
        com.google.javascript.rhino.head.ast.Scope scope50 = functionNode43.getEnclosingScope();
        functionNode43.setLineno(5);
        functionNode16.addChildScope((com.google.javascript.rhino.head.ast.Scope) functionNode43);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNull(node23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(name25);
        org.junit.Assert.assertNotNull(scriptNode30);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertNotNull(scriptNode45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(symbolList47);
        org.junit.Assert.assertNull(scope50);
    }

    @Test
    public void test10387() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10387");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode0 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int1 = functionNode0.getLp();
        com.google.javascript.rhino.head.ast.Scope scope3 = functionNode0.getDefiningScope("109");
        java.lang.String str4 = functionNode0.shortName();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-1) + "'", int1 == (-1));
        org.junit.Assert.assertNull(scope3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "FunctionNode" + "'", str4, "FunctionNode");
    }

    @Test
    public void test10388() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10388");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode1 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int2 = functionNode1.getLp();
        functionNode1.setEncodedSource("");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode5 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int6 = functionNode5.getLp();
        functionNode5.setEncodedSource("");
        functionNode5.flattenSymbolTable(false);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode11 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int12 = functionNode11.getLp();
        com.google.javascript.rhino.head.Node node14 = new com.google.javascript.rhino.head.Node((-1), (com.google.javascript.rhino.head.Node) functionNode1, (com.google.javascript.rhino.head.Node) functionNode5, (com.google.javascript.rhino.head.Node) functionNode11, (int) '#');
        boolean boolean15 = functionNode11.isGenerator();
        com.google.javascript.rhino.head.ast.Scope scope17 = new com.google.javascript.rhino.head.ast.Scope();
        scope17.setBounds(0, 10);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode21 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode22 = functionNode21.getTop();
        int int23 = functionNode21.getRegexpCount();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode24 = functionNode21.getEnclosingFunction();
        java.lang.String str25 = scope17.toStringTree((com.google.javascript.rhino.head.ast.ScriptNode) functionNode21);
        functionNode11.putProp(1, (java.lang.Object) functionNode21);
        functionNode11.setParens(8, (int) (byte) 10);
        boolean boolean30 = functionNode11.isGetter();
        functionNode11.flattenSymbolTable(false);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(scriptNode22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNull(functionNode24);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
    }

    @Test
    public void test10389() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10389");
        com.google.javascript.rhino.head.ast.Symbol symbol0 = new com.google.javascript.rhino.head.ast.Symbol();
        java.lang.String str1 = symbol0.getDeclTypeName();
        com.google.javascript.rhino.head.ast.Scope scope2 = symbol0.getContainingTable();
        symbol0.setIndex(21);
        java.lang.String str5 = symbol0.getName();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode6 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int7 = functionNode6.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode8 = functionNode6.getTop();
        com.google.javascript.rhino.head.ast.Name name9 = null;
        functionNode6.setFunctionName(name9);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode11 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode12 = functionNode11.getTop();
        functionNode6.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode11);
        int int14 = functionNode11.getRp();
        int int15 = functionNode11.getFunctionType();
        boolean boolean16 = functionNode11.requiresActivation();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList17 = functionNode11.getChildScopes();
        functionNode11.setFunctionType(100);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode20 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int21 = functionNode20.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode22 = functionNode20.getTop();
        com.google.javascript.rhino.head.ast.Name name23 = null;
        functionNode20.setFunctionName(name23);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode25 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode26 = functionNode25.getTop();
        functionNode20.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode25);
        com.google.javascript.rhino.head.ast.Scope scope30 = new com.google.javascript.rhino.head.ast.Scope((int) (short) -1, 0);
        functionNode20.replaceWith(scope30);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode32 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int33 = functionNode32.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode34 = functionNode32.getTop();
        com.google.javascript.rhino.head.ast.Name name35 = null;
        functionNode32.setFunctionName(name35);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode37 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode38 = functionNode37.getTop();
        functionNode32.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode37);
        int int40 = functionNode20.addFunction(functionNode32);
        int int41 = functionNode32.getLineno();
        functionNode11.setParent((com.google.javascript.rhino.head.ast.AstNode) functionNode32);
        symbol0.setNode((com.google.javascript.rhino.head.Node) functionNode11);
        com.google.javascript.rhino.head.Node node44 = symbol0.getNode();
        com.google.javascript.rhino.head.ast.Scope scope47 = new com.google.javascript.rhino.head.ast.Scope(350469479, 19);
        symbol0.setNode((com.google.javascript.rhino.head.Node) scope47);
        java.lang.String str49 = scope47.toSource();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "EOF" + "'", str1, "EOF");
        org.junit.Assert.assertNull(scope2);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(scriptNode8);
        org.junit.Assert.assertNotNull(scriptNode12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(scopeList17);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertNotNull(scriptNode22);
        org.junit.Assert.assertNotNull(scriptNode26);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertNotNull(scriptNode34);
        org.junit.Assert.assertNotNull(scriptNode38);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertNotNull(node44);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "{\n}\n" + "'", str49, "{\n}\n");
    }

    @Test
    public void test10390() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10390");
        com.google.javascript.rhino.head.ast.Jump jump4 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump4.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump8 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump4, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int11 = scriptNode10.getEndLineno();
        int int12 = scriptNode10.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList13 = scriptNode10.getChildScopes();
        com.google.javascript.rhino.head.Node node14 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump4, (com.google.javascript.rhino.head.Node) scriptNode10);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList15 = scriptNode10.getFunctions();
        int int16 = functionNodeList15.size();
        functionNodeList15.clear();
        int int19 = functionNodeList15.indexOf((java.lang.Object) 10L);
        com.google.javascript.rhino.head.ast.Jump jump24 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump24.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump28 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump24, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode30 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int31 = scriptNode30.getEndLineno();
        int int32 = scriptNode30.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList33 = scriptNode30.getChildScopes();
        com.google.javascript.rhino.head.Node node34 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump24, (com.google.javascript.rhino.head.Node) scriptNode30);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList35 = scriptNode30.getFunctions();
        functionNodeList35.clear();
        functionNodeList35.clear();
        com.google.javascript.rhino.head.ast.Jump jump42 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump42.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump46 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump42, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode48 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int49 = scriptNode48.getEndLineno();
        int int50 = scriptNode48.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList51 = scriptNode48.getChildScopes();
        com.google.javascript.rhino.head.Node node52 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump42, (com.google.javascript.rhino.head.Node) scriptNode48);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList53 = scriptNode48.getFunctions();
        java.util.Spliterator<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeSpliterator54 = functionNodeList53.spliterator();
        int int56 = functionNodeList53.indexOf((java.lang.Object) (byte) 10);
        boolean boolean57 = functionNodeList35.retainAll((java.util.Collection<com.google.javascript.rhino.head.ast.FunctionNode>) functionNodeList53);
        boolean boolean58 = functionNodeList15.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.FunctionNode>) functionNodeList35);
        java.util.ListIterator<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeItor59 = functionNodeList35.listIterator();
        java.util.ListIterator<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeItor60 = functionNodeList35.listIterator();
        com.google.javascript.rhino.head.ast.Jump jump65 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump65.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump69 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump65, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode71 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int72 = scriptNode71.getEndLineno();
        int int73 = scriptNode71.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList74 = scriptNode71.getChildScopes();
        com.google.javascript.rhino.head.Node node75 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump65, (com.google.javascript.rhino.head.Node) scriptNode71);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList76 = scriptNode71.getFunctions();
        functionNodeList76.clear();
        com.google.javascript.rhino.head.ast.Jump jump82 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump82.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump86 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump82, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode88 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int89 = scriptNode88.getEndLineno();
        int int90 = scriptNode88.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList91 = scriptNode88.getChildScopes();
        com.google.javascript.rhino.head.Node node92 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump82, (com.google.javascript.rhino.head.Node) scriptNode88);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList93 = scriptNode88.getFunctions();
        functionNodeList93.clear();
        boolean boolean95 = functionNodeList76.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.FunctionNode>) functionNodeList93);
        functionNodeList76.clear();
        boolean boolean97 = functionNodeList35.retainAll((java.util.Collection<com.google.javascript.rhino.head.ast.FunctionNode>) functionNodeList76);
        boolean boolean98 = functionNodeList76.isEmpty();
        boolean boolean99 = functionNodeList76.isEmpty();
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNull(scopeList13);
        org.junit.Assert.assertNotNull(functionNodeList15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNull(scopeList33);
        org.junit.Assert.assertNotNull(functionNodeList35);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertNull(scopeList51);
        org.junit.Assert.assertNotNull(functionNodeList53);
        org.junit.Assert.assertNotNull(functionNodeSpliterator54);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1));
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(functionNodeItor59);
        org.junit.Assert.assertNotNull(functionNodeItor60);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + (-1) + "'", int72 == (-1));
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + (-1) + "'", int73 == (-1));
        org.junit.Assert.assertNull(scopeList74);
        org.junit.Assert.assertNotNull(functionNodeList76);
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + (-1) + "'", int89 == (-1));
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + (-1) + "'", int90 == (-1));
        org.junit.Assert.assertNull(scopeList91);
        org.junit.Assert.assertNotNull(functionNodeList93);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + false + "'", boolean97 == false);
        org.junit.Assert.assertTrue("'" + boolean98 + "' != '" + true + "'", boolean98 == true);
        org.junit.Assert.assertTrue("'" + boolean99 + "' != '" + true + "'", boolean99 == true);
    }

    @Test
    public void test10391() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10391");
        com.google.javascript.rhino.head.ast.Symbol symbol0 = new com.google.javascript.rhino.head.ast.Symbol();
        com.google.javascript.rhino.head.ast.Jump jump5 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump5.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump9 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump5, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int12 = scriptNode11.getEndLineno();
        int int13 = scriptNode11.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList14 = scriptNode11.getChildScopes();
        com.google.javascript.rhino.head.Node node15 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump5, (com.google.javascript.rhino.head.Node) scriptNode11);
        symbol0.setContainingTable((com.google.javascript.rhino.head.ast.Scope) scriptNode11);
        com.google.javascript.rhino.head.ast.Scope scope17 = symbol0.getContainingTable();
        com.google.javascript.rhino.head.ast.Scope scope20 = new com.google.javascript.rhino.head.ast.Scope(15, (int) (byte) 0);
        com.google.javascript.rhino.head.ast.Symbol symbol22 = scope20.getSymbol("");
        com.google.javascript.rhino.head.ast.Name name24 = null;
        com.google.javascript.rhino.head.ast.FunctionNode functionNode25 = new com.google.javascript.rhino.head.ast.FunctionNode(1, name24);
        boolean boolean26 = functionNode25.isGetterOrSetter();
        int int27 = functionNode25.getEncodedSourceEnd();
        scope20.addChildrenToBack((com.google.javascript.rhino.head.Node) functionNode25);
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor29 = functionNode25.iterator();
        symbol0.setContainingTable((com.google.javascript.rhino.head.ast.Scope) functionNode25);
        int int31 = symbol0.getDeclType();
        int int32 = symbol0.getDeclType();
        java.lang.String str33 = symbol0.getName();
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNull(scopeList14);
        org.junit.Assert.assertNotNull(scope17);
        org.junit.Assert.assertNull(symbol22);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(nodeItor29);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNull(str33);
    }

    @Test
    public void test10392() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10392");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode0 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int1 = functionNode0.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = functionNode0.getTop();
        com.google.javascript.rhino.head.ast.Name name3 = null;
        functionNode0.setFunctionName(name3);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode5 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = functionNode5.getTop();
        functionNode0.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode5);
        functionNode5.setIsExpressionClosure(true);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode11 = new com.google.javascript.rhino.head.ast.FunctionNode((int) (byte) 100);
        int int12 = functionNode5.addFunction(functionNode11);
        com.google.javascript.rhino.head.ast.Name name13 = null;
        functionNode5.setFunctionName(name13);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList15 = functionNode5.getSymbols();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode17 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int18 = scriptNode17.getEndLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode20 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int21 = scriptNode20.getEndLineno();
        scriptNode17.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode20);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode23 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int24 = functionNode23.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode25 = functionNode23.getTop();
        boolean boolean26 = functionNode23.hasSideEffects();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode28 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int29 = scriptNode28.getEndLineno();
        int int30 = scriptNode28.getBaseLineno();
        com.google.javascript.rhino.head.ast.Jump jump33 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode35 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int36 = scriptNode35.getEndLineno();
        int int37 = scriptNode35.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList38 = scriptNode35.getChildScopes();
        jump33.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode35);
        java.lang.String str40 = scriptNode35.debugPrint();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode28, (com.google.javascript.rhino.head.ast.Scope) scriptNode35);
        com.google.javascript.rhino.head.ast.Scope scope42 = new com.google.javascript.rhino.head.ast.Scope();
        scriptNode35.target = scope42;
        functionNode23.addChildScope(scope42);
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode20, (com.google.javascript.rhino.head.ast.Scope) functionNode23);
        functionNode5.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode20);
        com.google.javascript.rhino.head.ast.Jump jump53 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump53.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump57 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump53, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode59 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int60 = scriptNode59.getEndLineno();
        int int61 = scriptNode59.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList62 = scriptNode59.getChildScopes();
        com.google.javascript.rhino.head.Node node63 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump53, (com.google.javascript.rhino.head.Node) scriptNode59);
        boolean boolean64 = node63.hasConsistentReturnUsage();
        int int65 = node63.getType();
        com.google.javascript.rhino.head.ast.Jump jump66 = new com.google.javascript.rhino.head.ast.Jump(23, node63);
        com.google.javascript.rhino.head.Token.CommentType commentType71 = com.google.javascript.rhino.head.Token.CommentType.HTML;
        com.google.javascript.rhino.head.ast.Comment comment73 = new com.google.javascript.rhino.head.ast.Comment(20, 1, commentType71, "109");
        com.google.javascript.rhino.head.ast.Comment comment75 = new com.google.javascript.rhino.head.ast.Comment(136, 15, commentType71, "-1\tSCRIPT -1 1\n");
        com.google.javascript.rhino.head.Token.CommentType commentType80 = com.google.javascript.rhino.head.Token.CommentType.HTML;
        com.google.javascript.rhino.head.ast.Comment comment82 = new com.google.javascript.rhino.head.ast.Comment(20, 1, commentType80, "109");
        com.google.javascript.rhino.head.ast.Comment comment84 = new com.google.javascript.rhino.head.ast.Comment(11, 35, commentType80, "                    109");
        com.google.javascript.rhino.head.Token.CommentType commentType85 = comment84.getCommentType();
        comment75.setCommentType(commentType85);
        com.google.javascript.rhino.head.Node node88 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) jump66, (com.google.javascript.rhino.head.Node) comment75, 8);
        scriptNode20.setParent((com.google.javascript.rhino.head.ast.AstNode) comment75);
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.Node node90 = scriptNode20.getFinally();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-1) + "'", int1 == (-1));
        org.junit.Assert.assertNotNull(scriptNode2);
        org.junit.Assert.assertNotNull(scriptNode6);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(symbolList15);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertNotNull(scriptNode25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertNull(scopeList38);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str40, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-1) + "'", int60 == (-1));
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + (-1) + "'", int61 == (-1));
        org.junit.Assert.assertNull(scopeList62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 0 + "'", int65 == 0);
        org.junit.Assert.assertTrue("'" + commentType71 + "' != '" + com.google.javascript.rhino.head.Token.CommentType.HTML + "'", commentType71.equals(com.google.javascript.rhino.head.Token.CommentType.HTML));
        org.junit.Assert.assertTrue("'" + commentType80 + "' != '" + com.google.javascript.rhino.head.Token.CommentType.HTML + "'", commentType80.equals(com.google.javascript.rhino.head.Token.CommentType.HTML));
        org.junit.Assert.assertTrue("'" + commentType85 + "' != '" + com.google.javascript.rhino.head.Token.CommentType.HTML + "'", commentType85.equals(com.google.javascript.rhino.head.Token.CommentType.HTML));
    }

    @Test
    public void test10393() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10393");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode1 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int2 = functionNode1.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode3 = functionNode1.getTop();
        com.google.javascript.rhino.head.ast.Name name4 = null;
        functionNode1.setFunctionName(name4);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode6 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode7 = functionNode6.getTop();
        functionNode1.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode6);
        functionNode6.setIsExpressionClosure(true);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode12 = new com.google.javascript.rhino.head.ast.FunctionNode((int) (byte) 100);
        int int13 = functionNode6.addFunction(functionNode12);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode15 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode16 = functionNode15.getTop();
        java.lang.String str17 = scriptNode16.getJsDoc();
        com.google.javascript.rhino.head.Node node19 = scriptNode16.setType(0);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode20 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int21 = functionNode20.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode23 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        java.lang.String str24 = functionNode20.toStringTree(scriptNode23);
        com.google.javascript.rhino.head.ast.Scope scope26 = scriptNode23.getDefiningScope("");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode28 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int29 = scriptNode28.getEndLineno();
        int int30 = scriptNode28.getBaseLineno();
        com.google.javascript.rhino.head.Node node31 = new com.google.javascript.rhino.head.Node(25, node19, (com.google.javascript.rhino.head.Node) scriptNode23, (com.google.javascript.rhino.head.Node) scriptNode28);
        int int32 = functionNode12.compareTo((com.google.javascript.rhino.head.ast.AstNode) scriptNode23);
        com.google.javascript.rhino.head.ast.RegExpLiteral regExpLiteral34 = new com.google.javascript.rhino.head.ast.RegExpLiteral((int) (short) 1);
        regExpLiteral34.setFlags("-1\tSCRIPT -1 1\n");
        regExpLiteral34.setValue("hi!");
        com.google.javascript.rhino.head.ast.Jump jump42 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump42.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump46 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump42, 0);
        java.lang.String str47 = jump42.toString();
        com.google.javascript.rhino.head.Node node48 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) scriptNode23, (com.google.javascript.rhino.head.Node) regExpLiteral34, (com.google.javascript.rhino.head.Node) jump42);
        com.google.javascript.rhino.head.Token.CommentType commentType51 = com.google.javascript.rhino.head.Token.CommentType.HTML;
        com.google.javascript.rhino.head.ast.Comment comment53 = new com.google.javascript.rhino.head.ast.Comment(20, 1, commentType51, "109");
        java.lang.String str55 = comment53.toSource(0);
        java.lang.String str56 = comment53.getValue();
        node48.setJsDocNode(comment53);
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator58 = node48.new NodeIterator();
        com.google.javascript.rhino.head.Node node59 = nodeIterator58.next();
        boolean boolean60 = nodeIterator58.hasNext();
        boolean boolean61 = nodeIterator58.hasNext();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertNotNull(scriptNode3);
        org.junit.Assert.assertNotNull(scriptNode7);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(scriptNode16);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(node19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(scope26);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1 + "'", int32 == 1);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "52" + "'", str47, "52");
        org.junit.Assert.assertTrue("'" + commentType51 + "' != '" + com.google.javascript.rhino.head.Token.CommentType.HTML + "'", commentType51.equals(com.google.javascript.rhino.head.Token.CommentType.HTML));
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "109" + "'", str55, "109");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "109" + "'", str56, "109");
        org.junit.Assert.assertNotNull(node59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
    }

    @Test
    public void test10394() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10394");
        com.google.javascript.rhino.head.ast.RegExpLiteral regExpLiteral1 = new com.google.javascript.rhino.head.ast.RegExpLiteral((int) (byte) -1);
        regExpLiteral1.setValue("          ");
        regExpLiteral1.setValue("            ");
        java.lang.String str7 = regExpLiteral1.toSource(20);
        com.google.javascript.rhino.head.ast.Comment comment8 = regExpLiteral1.getJsDocNode();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "                                        /            /" + "'", str7, "                                        /            /");
        org.junit.Assert.assertNull(comment8);
    }

    @Test
    public void test10395() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10395");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode0 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int1 = functionNode0.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = functionNode0.getTop();
        com.google.javascript.rhino.head.ast.Name name3 = null;
        functionNode0.setFunctionName(name3);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode5 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int6 = functionNode5.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode8 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        java.lang.String str9 = functionNode5.toStringTree(scriptNode8);
        functionNode5.setFunctionIsGetter();
        int int11 = functionNode0.addFunction(functionNode5);
        boolean boolean12 = functionNode5.hasSideEffects();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode13 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int14 = functionNode13.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode15 = functionNode13.getTop();
        functionNode5.setBody((com.google.javascript.rhino.head.ast.AstNode) scriptNode15);
        int int17 = functionNode5.getEncodedSourceStart();
        // The following exception was thrown during execution in test generation
        try {
            functionNode5.resetTargets();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-1) + "'", int1 == (-1));
        org.junit.Assert.assertNotNull(scriptNode2);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNotNull(scriptNode15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
    }

    @Test
    public void test10396() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10396");
        com.google.javascript.rhino.head.ast.Symbol symbol0 = new com.google.javascript.rhino.head.ast.Symbol();
        java.lang.String str1 = symbol0.getName();
        com.google.javascript.rhino.head.Node node2 = symbol0.getNode();
        java.lang.String str3 = symbol0.getDeclTypeName();
        java.lang.String str4 = symbol0.toString();
        java.lang.String str5 = symbol0.toString();
        com.google.javascript.rhino.head.Node node6 = symbol0.getNode();
        symbol0.setName("            ");
        symbol0.setIndex((-1454130853));
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "EOF" + "'", str3, "EOF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Symbol (EOF) name=null" + "'", str4, "Symbol (EOF) name=null");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Symbol (EOF) name=null" + "'", str5, "Symbol (EOF) name=null");
        org.junit.Assert.assertNull(node6);
    }

    @Test
    public void test10397() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10397");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode0 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 10);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode3 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode4 = functionNode3.getTop();
        functionNode3.setParens((int) (byte) 1, (int) (short) 1);
        functionNode3.setEncodedSourceStart((-1));
        functionNode3.setFunctionIsGetter();
        scope2.addChildToFront((com.google.javascript.rhino.head.Node) functionNode3);
        functionNode0.setBody((com.google.javascript.rhino.head.ast.AstNode) functionNode3);
        com.google.javascript.rhino.head.ast.Jump jump15 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode17 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int18 = scriptNode17.getEndLineno();
        int int19 = scriptNode17.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList20 = scriptNode17.getChildScopes();
        jump15.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode17);
        boolean boolean22 = functionNode3.isParam((com.google.javascript.rhino.head.ast.AstNode) jump15);
        com.google.javascript.rhino.head.ast.Scope scope23 = functionNode3.getParentScope();
        org.junit.Assert.assertNotNull(scriptNode4);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNull(scopeList20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(scope23);
    }

    @Test
    public void test10398() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10398");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        com.google.javascript.rhino.head.ast.Comment comment2 = scriptNode1.getJsDocNode();
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList3 = scriptNode1.getFunctions();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode5 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int6 = functionNode5.getLp();
        functionNode5.setEncodedSource("");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode9 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int10 = functionNode9.getLp();
        functionNode9.setEncodedSource("");
        functionNode9.flattenSymbolTable(false);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode15 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int16 = functionNode15.getLp();
        com.google.javascript.rhino.head.Node node18 = new com.google.javascript.rhino.head.Node((-1), (com.google.javascript.rhino.head.Node) functionNode5, (com.google.javascript.rhino.head.Node) functionNode9, (com.google.javascript.rhino.head.Node) functionNode15, (int) '#');
        com.google.javascript.rhino.head.ast.Jump jump24 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump24.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump28 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump24, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode30 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int31 = scriptNode30.getEndLineno();
        int int32 = scriptNode30.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList33 = scriptNode30.getChildScopes();
        com.google.javascript.rhino.head.Node node34 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump24, (com.google.javascript.rhino.head.Node) scriptNode30);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode36 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int37 = scriptNode36.getEndLineno();
        com.google.javascript.rhino.head.ast.RegExpLiteral regExpLiteral39 = new com.google.javascript.rhino.head.ast.RegExpLiteral((int) (short) 1);
        java.lang.String str41 = regExpLiteral39.toSource((int) (byte) 10);
        regExpLiteral39.setFlags("-1\tSCRIPT -1 1\n");
        regExpLiteral39.removeProp(8);
        com.google.javascript.rhino.head.Node node47 = new com.google.javascript.rhino.head.Node(10, node34, (com.google.javascript.rhino.head.Node) scriptNode36, (com.google.javascript.rhino.head.Node) regExpLiteral39, 3);
        functionNode9.addResumptionPoint(node47);
        boolean boolean49 = functionNodeList3.remove((java.lang.Object) node47);
        org.junit.Assert.assertNull(comment2);
        org.junit.Assert.assertNotNull(functionNodeList3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNull(scopeList33);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "                    /null/" + "'", str41, "                    /null/");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
    }

    @Test
    public void test10399() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10399");
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.ast.Symbol symbol2 = new com.google.javascript.rhino.head.ast.Symbol((int) (short) -1, "Scope");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid declType: -1");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test10400() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10400");
        com.google.javascript.rhino.head.ast.RegExpLiteral regExpLiteral2 = new com.google.javascript.rhino.head.ast.RegExpLiteral(13, (int) (short) 1);
        java.lang.String str3 = regExpLiteral2.getValue();
        regExpLiteral2.setValue("                    109");
        java.lang.String str6 = regExpLiteral2.getValue();
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "                    109" + "'", str6, "                    109");
    }

    @Test
    public void test10401() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10401");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope(6);
    }

    @Test
    public void test10402() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10402");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode1 = new com.google.javascript.rhino.head.ast.FunctionNode(0);
        int int2 = functionNode1.getAbsolutePosition();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
    }

    @Test
    public void test10403() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10403");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode0 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int1 = functionNode0.getLp();
        functionNode0.setEncodedSource("");
        functionNode0.flattenSymbolTable(false);
        java.lang.String str6 = functionNode0.getName();
        functionNode0.setFunctionIsGetter();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode8 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int9 = functionNode8.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = functionNode8.getTop();
        com.google.javascript.rhino.head.Node node11 = functionNode8.getLastSibling();
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList12 = functionNode8.getParams();
        functionNode0.setParams(astNodeList12);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode14 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int15 = functionNode14.getLp();
        functionNode14.setLp((int) (short) 1);
        int int20 = functionNode14.getIntProp(4, 26);
        functionNode14.flattenSymbolTable(true);
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList23 = functionNode14.getParams();
        functionNode0.setParams(astNodeList23);
        functionNode0.setEndLineno(12);
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor27 = functionNode0.iterator();
        int int28 = functionNode0.getLineno();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode30 = new com.google.javascript.rhino.head.ast.FunctionNode(0);
        int int31 = functionNode30.getBaseLineno();
        boolean boolean32 = functionNode30.isGetter();
        com.google.javascript.rhino.head.ast.RegExpLiteral regExpLiteral34 = new com.google.javascript.rhino.head.ast.RegExpLiteral((int) (short) 1);
        regExpLiteral34.setFlags("-1\tSCRIPT -1 1\n");
        java.lang.String str37 = regExpLiteral34.getValue();
        regExpLiteral34.setFlags("52");
        functionNode30.addChildrenToFront((com.google.javascript.rhino.head.Node) regExpLiteral34);
        functionNode30.setEncodedSourceStart(5);
        functionNode30.removeProp(25);
        functionNode0.setBody((com.google.javascript.rhino.head.ast.AstNode) functionNode30);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode46 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode47 = functionNode46.getTop();
        functionNode46.setParens((int) (byte) 1, (int) (short) 1);
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor51 = functionNode46.iterator();
        functionNode46.setLp(136);
        int int54 = functionNode46.getFunctionType();
        functionNode30.addParam((com.google.javascript.rhino.head.ast.AstNode) functionNode46);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode56 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int57 = functionNode56.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode58 = functionNode56.getTop();
        com.google.javascript.rhino.head.ast.Name name59 = null;
        functionNode56.setFunctionName(name59);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode61 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int62 = functionNode61.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode64 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        java.lang.String str65 = functionNode61.toStringTree(scriptNode64);
        functionNode61.setFunctionIsGetter();
        int int67 = functionNode56.addFunction(functionNode61);
        boolean boolean68 = functionNode61.hasSideEffects();
        int int69 = functionNode61.getAbsolutePosition();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap70 = functionNode61.getSymbolTable();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode72 = new com.google.javascript.rhino.head.ast.FunctionNode(0);
        int int73 = functionNode72.getBaseLineno();
        boolean boolean74 = functionNode72.isGetter();
        com.google.javascript.rhino.head.ast.RegExpLiteral regExpLiteral76 = new com.google.javascript.rhino.head.ast.RegExpLiteral((int) (short) 1);
        regExpLiteral76.setFlags("-1\tSCRIPT -1 1\n");
        java.lang.String str79 = regExpLiteral76.getValue();
        regExpLiteral76.setFlags("52");
        functionNode72.addChildrenToFront((com.google.javascript.rhino.head.Node) regExpLiteral76);
        boolean boolean83 = functionNode72.isGetterOrSetter();
        int int84 = functionNode72.getRegexpCount();
        boolean boolean85 = functionNode72.isGenerator();
        functionNode61.setParent((com.google.javascript.rhino.head.ast.AstNode) functionNode72);
        functionNode30.addChildrenToBack((com.google.javascript.rhino.head.Node) functionNode61);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-1) + "'", int1 == (-1));
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(scriptNode10);
        org.junit.Assert.assertNotNull(node11);
        org.junit.Assert.assertNotNull(astNodeList12);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 26 + "'", int20 == 26);
        org.junit.Assert.assertNotNull(astNodeList23);
        org.junit.Assert.assertNotNull(nodeItor27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNotNull(scriptNode47);
        org.junit.Assert.assertNotNull(nodeItor51);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
        org.junit.Assert.assertNotNull(scriptNode58);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + (-1) + "'", int62 == (-1));
        org.junit.Assert.assertNull(str65);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 0 + "'", int67 == 0);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + (-1) + "'", int69 == (-1));
        org.junit.Assert.assertNull(strMap70);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + (-1) + "'", int73 == (-1));
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNull(str79);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 0 + "'", int84 == 0);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
    }

    @Test
    public void test10404() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10404");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str1 = com.google.javascript.rhino.head.ast.AstNode.operatorToString(301837580);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid operator: 301837580");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test10405() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10405");
        com.google.javascript.rhino.head.ast.Jump jump4 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump4.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump8 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump4, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int11 = scriptNode10.getEndLineno();
        int int12 = scriptNode10.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList13 = scriptNode10.getChildScopes();
        com.google.javascript.rhino.head.Node node14 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump4, (com.google.javascript.rhino.head.Node) scriptNode10);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList15 = scriptNode10.getFunctions();
        int int16 = functionNodeList15.size();
        functionNodeList15.clear();
        int int19 = functionNodeList15.indexOf((java.lang.Object) 10L);
        com.google.javascript.rhino.head.ast.Jump jump24 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump24.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump28 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump24, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode30 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int31 = scriptNode30.getEndLineno();
        int int32 = scriptNode30.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList33 = scriptNode30.getChildScopes();
        com.google.javascript.rhino.head.Node node34 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump24, (com.google.javascript.rhino.head.Node) scriptNode30);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList35 = scriptNode30.getFunctions();
        functionNodeList35.clear();
        int int38 = functionNodeList35.lastIndexOf((java.lang.Object) (-1L));
        com.google.javascript.rhino.head.ast.Jump jump43 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump43.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump47 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump43, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode49 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int50 = scriptNode49.getEndLineno();
        int int51 = scriptNode49.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList52 = scriptNode49.getChildScopes();
        com.google.javascript.rhino.head.Node node53 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump43, (com.google.javascript.rhino.head.Node) scriptNode49);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList54 = scriptNode49.getFunctions();
        functionNodeList54.clear();
        int int57 = functionNodeList54.lastIndexOf((java.lang.Object) (-1L));
        boolean boolean58 = functionNodeList35.removeAll((java.util.Collection<com.google.javascript.rhino.head.ast.FunctionNode>) functionNodeList54);
        boolean boolean59 = functionNodeList15.contains((java.lang.Object) boolean58);
        boolean boolean61 = functionNodeList15.contains((java.lang.Object) 20);
        java.util.Spliterator<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeSpliterator62 = functionNodeList15.spliterator();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode63 = new com.google.javascript.rhino.head.ast.FunctionNode();
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList64 = functionNode63.getFunctions();
        java.util.stream.Stream<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeStream65 = functionNodeList64.parallelStream();
        boolean boolean66 = functionNodeList15.containsAll((java.util.Collection<com.google.javascript.rhino.head.ast.FunctionNode>) functionNodeList64);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNull(scopeList13);
        org.junit.Assert.assertNotNull(functionNodeList15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNull(scopeList33);
        org.junit.Assert.assertNotNull(functionNodeList35);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1));
        org.junit.Assert.assertNull(scopeList52);
        org.junit.Assert.assertNotNull(functionNodeList54);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(functionNodeSpliterator62);
        org.junit.Assert.assertNotNull(functionNodeList64);
        org.junit.Assert.assertNotNull(functionNodeStream65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
    }

    @Test
    public void test10406() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10406");
        com.google.javascript.rhino.head.Token.CommentType commentType4 = com.google.javascript.rhino.head.Token.CommentType.HTML;
        com.google.javascript.rhino.head.ast.Comment comment6 = new com.google.javascript.rhino.head.ast.Comment(20, 1, commentType4, "109");
        java.lang.String str8 = comment6.toSource(19);
        java.lang.String str9 = comment6.getValue();
        com.google.javascript.rhino.head.Token.CommentType commentType10 = com.google.javascript.rhino.head.Token.CommentType.HTML;
        comment6.setCommentType(commentType10);
        com.google.javascript.rhino.head.Token.CommentType commentType18 = com.google.javascript.rhino.head.Token.CommentType.HTML;
        com.google.javascript.rhino.head.ast.Comment comment20 = new com.google.javascript.rhino.head.ast.Comment(20, 1, commentType18, "109");
        com.google.javascript.rhino.head.ast.Comment comment22 = new com.google.javascript.rhino.head.ast.Comment(136, 15, commentType18, "-1\tSCRIPT -1 1\n");
        com.google.javascript.rhino.head.Token.CommentType commentType23 = com.google.javascript.rhino.head.Token.CommentType.JSDOC;
        comment22.setCommentType(commentType23);
        com.google.javascript.rhino.head.Token.CommentType commentType25 = com.google.javascript.rhino.head.Token.CommentType.JSDOC;
        comment22.setCommentType(commentType25);
        com.google.javascript.rhino.head.ast.Comment comment28 = new com.google.javascript.rhino.head.ast.Comment((-1), 20, commentType25, "ScriptNode");
        comment6.setCommentType(commentType25);
        com.google.javascript.rhino.head.ast.Comment comment31 = new com.google.javascript.rhino.head.ast.Comment(1299931104, 20, commentType25, "161");
        org.junit.Assert.assertTrue("'" + commentType4 + "' != '" + com.google.javascript.rhino.head.Token.CommentType.HTML + "'", commentType4.equals(com.google.javascript.rhino.head.Token.CommentType.HTML));
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "                                      109" + "'", str8, "                                      109");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "109" + "'", str9, "109");
        org.junit.Assert.assertTrue("'" + commentType10 + "' != '" + com.google.javascript.rhino.head.Token.CommentType.HTML + "'", commentType10.equals(com.google.javascript.rhino.head.Token.CommentType.HTML));
        org.junit.Assert.assertTrue("'" + commentType18 + "' != '" + com.google.javascript.rhino.head.Token.CommentType.HTML + "'", commentType18.equals(com.google.javascript.rhino.head.Token.CommentType.HTML));
        org.junit.Assert.assertTrue("'" + commentType23 + "' != '" + com.google.javascript.rhino.head.Token.CommentType.JSDOC + "'", commentType23.equals(com.google.javascript.rhino.head.Token.CommentType.JSDOC));
        org.junit.Assert.assertTrue("'" + commentType25 + "' != '" + com.google.javascript.rhino.head.Token.CommentType.JSDOC + "'", commentType25.equals(com.google.javascript.rhino.head.Token.CommentType.JSDOC));
    }

    @Test
    public void test10407() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10407");
        com.google.javascript.rhino.head.ast.Jump jump4 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump4.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump8 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump4, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int11 = scriptNode10.getEndLineno();
        int int12 = scriptNode10.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList13 = scriptNode10.getChildScopes();
        com.google.javascript.rhino.head.Node node14 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump4, (com.google.javascript.rhino.head.Node) scriptNode10);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList15 = scriptNode10.getFunctions();
        int int16 = functionNodeList15.size();
        functionNodeList15.clear();
        int int19 = functionNodeList15.indexOf((java.lang.Object) 10L);
        com.google.javascript.rhino.head.ast.Jump jump24 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump24.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump28 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump24, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode30 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int31 = scriptNode30.getEndLineno();
        int int32 = scriptNode30.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList33 = scriptNode30.getChildScopes();
        com.google.javascript.rhino.head.Node node34 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump24, (com.google.javascript.rhino.head.Node) scriptNode30);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList35 = scriptNode30.getFunctions();
        functionNodeList35.clear();
        functionNodeList35.clear();
        com.google.javascript.rhino.head.ast.Jump jump42 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump42.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump46 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump42, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode48 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int49 = scriptNode48.getEndLineno();
        int int50 = scriptNode48.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList51 = scriptNode48.getChildScopes();
        com.google.javascript.rhino.head.Node node52 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump42, (com.google.javascript.rhino.head.Node) scriptNode48);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList53 = scriptNode48.getFunctions();
        java.util.Spliterator<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeSpliterator54 = functionNodeList53.spliterator();
        int int56 = functionNodeList53.indexOf((java.lang.Object) (byte) 10);
        boolean boolean57 = functionNodeList35.retainAll((java.util.Collection<com.google.javascript.rhino.head.ast.FunctionNode>) functionNodeList53);
        boolean boolean58 = functionNodeList15.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.FunctionNode>) functionNodeList35);
        java.lang.Object[] objArray59 = functionNodeList35.toArray();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode60 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int61 = functionNode60.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode62 = functionNode60.getTop();
        com.google.javascript.rhino.head.Node node63 = functionNode60.getLastSibling();
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList64 = functionNode60.getParams();
        int int65 = functionNode60.getType();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator66 = functionNode60.new NodeIterator();
        boolean boolean67 = functionNodeList35.remove((java.lang.Object) functionNode60);
        com.google.javascript.rhino.head.ast.Scope scope69 = functionNode60.getDefiningScope("                                /null/-1\tSCRIPT -1 1\n");
        functionNode60.setEncodedSourceEnd(24);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNull(scopeList13);
        org.junit.Assert.assertNotNull(functionNodeList15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNull(scopeList33);
        org.junit.Assert.assertNotNull(functionNodeList35);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertNull(scopeList51);
        org.junit.Assert.assertNotNull(functionNodeList53);
        org.junit.Assert.assertNotNull(functionNodeSpliterator54);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1));
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(objArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray59), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray59), "[]");
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + (-1) + "'", int61 == (-1));
        org.junit.Assert.assertNotNull(scriptNode62);
        org.junit.Assert.assertNotNull(node63);
        org.junit.Assert.assertNotNull(astNodeList64);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 109 + "'", int65 == 109);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNull(scope69);
    }

    @Test
    public void test10408() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10408");
        com.google.javascript.rhino.head.ast.Symbol symbol0 = new com.google.javascript.rhino.head.ast.Symbol();
        java.lang.String str1 = symbol0.getName();
        java.lang.String str2 = symbol0.toString();
        symbol0.setName("                    /null/-1\tSCRIPT -1 1\n");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode6 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int7 = functionNode6.getLp();
        functionNode6.setEncodedSource("");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode10 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int11 = functionNode10.getLp();
        functionNode10.setEncodedSource("");
        functionNode10.flattenSymbolTable(false);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode16 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int17 = functionNode16.getLp();
        com.google.javascript.rhino.head.Node node19 = new com.google.javascript.rhino.head.Node((-1), (com.google.javascript.rhino.head.Node) functionNode6, (com.google.javascript.rhino.head.Node) functionNode10, (com.google.javascript.rhino.head.Node) functionNode16, (int) '#');
        com.google.javascript.rhino.head.ast.AstNode astNode20 = functionNode6.getBody();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode21 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int22 = functionNode21.getLp();
        functionNode21.setEncodedSource("");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode25 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int26 = functionNode25.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode27 = functionNode25.getTop();
        com.google.javascript.rhino.head.ast.Name name28 = null;
        functionNode25.setFunctionName(name28);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode30 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode31 = functionNode30.getTop();
        functionNode25.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode30);
        int int33 = functionNode30.getRp();
        int int34 = functionNode30.getFunctionType();
        functionNode21.addParam((com.google.javascript.rhino.head.ast.AstNode) functionNode30);
        com.google.javascript.rhino.head.ast.Scope scope36 = functionNode30.getEnclosingScope();
        functionNode6.setBody((com.google.javascript.rhino.head.ast.AstNode) functionNode30);
        symbol0.setContainingTable((com.google.javascript.rhino.head.ast.Scope) functionNode30);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode39 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int40 = functionNode39.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode41 = functionNode39.getTop();
        com.google.javascript.rhino.head.ast.Name name42 = null;
        functionNode39.setFunctionName(name42);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode44 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode45 = functionNode44.getTop();
        functionNode39.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode44);
        int int47 = functionNode44.getRp();
        java.lang.String str48 = functionNode44.getSourceName();
        functionNode44.setParens(14, (int) '#');
        boolean boolean52 = functionNode44.isExpressionClosure();
        com.google.javascript.rhino.head.ast.Name name53 = null;
        functionNode44.setFunctionName(name53);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode55 = functionNode44.getTop();
        int int56 = functionNode44.depth();
        functionNode44.setSourceName("48");
        // The following exception was thrown during execution in test generation
        try {
            functionNode30.removeChild((com.google.javascript.rhino.head.Node) functionNode44);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "Symbol (EOF) name=null" + "'", str2, "Symbol (EOF) name=null");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNull(astNode20);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNotNull(scriptNode27);
        org.junit.Assert.assertNotNull(scriptNode31);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertNotNull(scope36);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertNotNull(scriptNode41);
        org.junit.Assert.assertNotNull(scriptNode45);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(scriptNode55);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 1 + "'", int56 == 1);
    }

    @Test
    public void test10409() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10409");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode0 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int1 = functionNode0.getLp();
        functionNode0.setEncodedSource("");
        functionNode0.flattenSymbolTable(false);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode6 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int7 = functionNode6.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode9 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        java.lang.String str10 = functionNode6.toStringTree(scriptNode9);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode11 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int12 = functionNode11.getLp();
        functionNode11.setEncodedSource("");
        functionNode11.flattenSymbolTable(false);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode17 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int18 = functionNode17.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode19 = functionNode17.getTop();
        com.google.javascript.rhino.head.ast.Name name20 = null;
        functionNode17.setFunctionName(name20);
        com.google.javascript.rhino.head.ast.Jump jump25 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump25.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump29 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump25, 0);
        com.google.javascript.rhino.head.ast.Jump jump33 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump33.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump37 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump33, 0);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode38 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int39 = functionNode38.getLp();
        functionNode38.setEncodedSource("");
        functionNode38.flattenSymbolTable(false);
        jump25.addChildAfter((com.google.javascript.rhino.head.Node) jump33, (com.google.javascript.rhino.head.Node) functionNode38);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode45 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int46 = functionNode45.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode47 = functionNode45.getTop();
        com.google.javascript.rhino.head.ast.Name name48 = null;
        functionNode45.setFunctionName(name48);
        com.google.javascript.rhino.head.ast.FunctionNode[] functionNodeArray50 = new com.google.javascript.rhino.head.ast.FunctionNode[] { functionNode0, functionNode6, functionNode11, functionNode17, functionNode38, functionNode45 };
        java.util.ArrayList<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList51 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.FunctionNode>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.FunctionNode>) functionNodeList51, functionNodeArray50);
        boolean boolean54 = functionNodeList51.remove((java.lang.Object) 0);
        java.util.stream.Stream<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeStream55 = functionNodeList51.stream();
        functionNodeList51.clear();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode57 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int58 = functionNode57.getLp();
        functionNode57.setEncodedSource("");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode61 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int62 = functionNode61.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode63 = functionNode61.getTop();
        com.google.javascript.rhino.head.ast.Name name64 = null;
        functionNode61.setFunctionName(name64);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode66 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode67 = functionNode66.getTop();
        functionNode61.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode66);
        int int69 = functionNode66.getRp();
        int int70 = functionNode66.getFunctionType();
        functionNode57.addParam((com.google.javascript.rhino.head.ast.AstNode) functionNode66);
        com.google.javascript.rhino.head.ast.Name name72 = functionNode57.getFunctionName();
        functionNode57.setFunctionType(7);
        int int75 = functionNode57.getLp();
        boolean boolean76 = functionNodeList51.contains((java.lang.Object) functionNode57);
        boolean boolean77 = functionNodeList51.isEmpty();
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.ast.FunctionNode functionNode79 = functionNodeList51.get(18);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 18, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-1) + "'", int1 == (-1));
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNotNull(scriptNode19);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertNotNull(scriptNode47);
        org.junit.Assert.assertNotNull(functionNodeArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(functionNodeStream55);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + (-1) + "'", int58 == (-1));
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + (-1) + "'", int62 == (-1));
        org.junit.Assert.assertNotNull(scriptNode63);
        org.junit.Assert.assertNotNull(scriptNode67);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + (-1) + "'", int69 == (-1));
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 0 + "'", int70 == 0);
        org.junit.Assert.assertNull(name72);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + (-1) + "'", int75 == (-1));
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
    }

    @Test
    public void test10410() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10410");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode((-1262414679));
        java.lang.Object obj3 = scriptNode1.getProp(32);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode4 = scriptNode1.getTop();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode6 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int7 = functionNode6.getLp();
        functionNode6.setEncodedSource("");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode10 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int11 = functionNode10.getLp();
        functionNode10.setEncodedSource("");
        functionNode10.flattenSymbolTable(false);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode16 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int17 = functionNode16.getLp();
        com.google.javascript.rhino.head.Node node19 = new com.google.javascript.rhino.head.Node((-1), (com.google.javascript.rhino.head.Node) functionNode6, (com.google.javascript.rhino.head.Node) functionNode10, (com.google.javascript.rhino.head.Node) functionNode16, (int) '#');
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList20 = functionNode6.getChildScopes();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode22 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int23 = scriptNode22.getEndLineno();
        int int24 = scriptNode22.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList25 = scriptNode22.getChildScopes();
        functionNode6.setMemberExprNode((com.google.javascript.rhino.head.ast.AstNode) scriptNode22);
        functionNode6.setEncodedSourceEnd((int) (short) 100);
        functionNode6.setLp(1579347477);
        int int31 = functionNode6.getFunctionCount();
        scriptNode4.setParentScope((com.google.javascript.rhino.head.ast.Scope) functionNode6);
        com.google.javascript.rhino.head.ast.Scope scope33 = scriptNode4.getParentScope();
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertNotNull(scriptNode4);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNull(scopeList20);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertNull(scopeList25);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNotNull(scope33);
    }

    @Test
    public void test10411() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10411");
        com.google.javascript.rhino.head.ast.Jump jump4 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump4.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump8 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump4, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int11 = scriptNode10.getEndLineno();
        int int12 = scriptNode10.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList13 = scriptNode10.getChildScopes();
        com.google.javascript.rhino.head.Node node14 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump4, (com.google.javascript.rhino.head.Node) scriptNode10);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList15 = scriptNode10.getFunctions();
        functionNodeList15.clear();
        functionNodeList15.clear();
        java.util.Iterator<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeItor18 = functionNodeList15.iterator();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode19 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int20 = functionNode19.getLp();
        functionNode19.setLp((int) (short) 1);
        int int25 = functionNode19.getIntProp(4, 26);
        functionNode19.flattenSymbolTable(true);
        boolean boolean28 = functionNodeList15.equals((java.lang.Object) functionNode19);
        java.util.ListIterator<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeItor29 = functionNodeList15.listIterator();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode31 = new com.google.javascript.rhino.head.ast.FunctionNode((int) (byte) 100);
        int int32 = functionNode31.getEncodedSourceStart();
        int int33 = functionNode31.getFunctionCount();
        boolean boolean34 = functionNode31.isGetter();
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList35 = functionNode31.getFunctions();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode37 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int38 = functionNode37.getLp();
        functionNode37.setEncodedSource("");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode41 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int42 = functionNode41.getLp();
        functionNode41.setEncodedSource("");
        functionNode41.flattenSymbolTable(false);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode47 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int48 = functionNode47.getLp();
        com.google.javascript.rhino.head.Node node50 = new com.google.javascript.rhino.head.Node((-1), (com.google.javascript.rhino.head.Node) functionNode37, (com.google.javascript.rhino.head.Node) functionNode41, (com.google.javascript.rhino.head.Node) functionNode47, (int) '#');
        com.google.javascript.rhino.head.ast.Comment comment51 = functionNode47.getJsDocNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList52 = functionNode47.getSymbols();
        int int53 = functionNodeList35.lastIndexOf((java.lang.Object) symbolList52);
        boolean boolean54 = functionNodeList15.retainAll((java.util.Collection<com.google.javascript.rhino.head.ast.FunctionNode>) functionNodeList35);
        boolean boolean55 = functionNodeList35.isEmpty();
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNull(scopeList13);
        org.junit.Assert.assertNotNull(functionNodeList15);
        org.junit.Assert.assertNotNull(functionNodeItor18);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 26 + "'", int25 == 26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(functionNodeItor29);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(functionNodeList35);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
        org.junit.Assert.assertNull(comment51);
        org.junit.Assert.assertNotNull(symbolList52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
    }

    @Test
    public void test10412() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10412");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode2 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int3 = functionNode2.getLp();
        functionNode2.setEncodedSource("");
        functionNode2.flattenSymbolTable(false);
        java.lang.String str8 = functionNode2.getName();
        functionNode2.setFunctionIsGetter();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode10 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int11 = functionNode10.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode12 = functionNode10.getTop();
        com.google.javascript.rhino.head.Node node13 = functionNode10.getLastSibling();
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList14 = functionNode10.getParams();
        functionNode2.setParams(astNodeList14);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode16 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int17 = functionNode16.getLp();
        functionNode16.setLp((int) (short) 1);
        int int22 = functionNode16.getIntProp(4, 26);
        functionNode16.flattenSymbolTable(true);
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList25 = functionNode16.getParams();
        functionNode2.setParams(astNodeList25);
        functionNode2.setEndLineno(12);
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor29 = functionNode2.iterator();
        int int30 = functionNode2.getLineno();
        int int31 = functionNode2.getLp();
        com.google.javascript.rhino.head.ast.Scope scope34 = new com.google.javascript.rhino.head.ast.Scope(109, (int) (short) -1);
        scope34.clearParentScope();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode39 = new com.google.javascript.rhino.head.ast.FunctionNode((int) (byte) 100);
        int int40 = functionNode39.getEncodedSourceStart();
        int int41 = functionNode39.getFunctionCount();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode42 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode43 = functionNode42.getTop();
        functionNode42.setParens((int) (byte) 1, (int) (short) 1);
        int int47 = functionNode42.getRp();
        com.google.javascript.rhino.head.Node node49 = new com.google.javascript.rhino.head.Node(17, (com.google.javascript.rhino.head.Node) functionNode39, (com.google.javascript.rhino.head.Node) functionNode42, (int) (short) 0);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode50 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode51 = functionNode50.getTop();
        functionNode50.setParens((int) (byte) 1, (int) (short) 1);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode55 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.Scope scope57 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 10);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode58 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode59 = functionNode58.getTop();
        functionNode58.setParens((int) (byte) 1, (int) (short) 1);
        functionNode58.setEncodedSourceStart((-1));
        functionNode58.setFunctionIsGetter();
        scope57.addChildToFront((com.google.javascript.rhino.head.Node) functionNode58);
        functionNode55.setBody((com.google.javascript.rhino.head.ast.AstNode) functionNode58);
        functionNode55.setFunctionIsSetter();
        int int69 = functionNode50.addFunction(functionNode55);
        functionNode50.setEncodedSourceStart(1);
        boolean boolean72 = functionNode50.isExpressionClosure();
        com.google.javascript.rhino.head.Node node73 = functionNode50.target;
        int int74 = functionNode50.getEncodedSourceStart();
        com.google.javascript.rhino.head.Node node76 = new com.google.javascript.rhino.head.Node(20, (com.google.javascript.rhino.head.Node) functionNode39, (com.google.javascript.rhino.head.Node) functionNode50, 109);
        com.google.javascript.rhino.head.Node node78 = new com.google.javascript.rhino.head.Node(35, (com.google.javascript.rhino.head.Node) functionNode2, (com.google.javascript.rhino.head.Node) scope34, (com.google.javascript.rhino.head.Node) functionNode39, 19);
        com.google.javascript.rhino.head.ast.Jump jump80 = new com.google.javascript.rhino.head.ast.Jump(1579347477, (com.google.javascript.rhino.head.Node) scope34, 129);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(scriptNode12);
        org.junit.Assert.assertNotNull(node13);
        org.junit.Assert.assertNotNull(astNodeList14);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 26 + "'", int22 == 26);
        org.junit.Assert.assertNotNull(astNodeList25);
        org.junit.Assert.assertNotNull(nodeItor29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertNotNull(scriptNode43);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 1 + "'", int47 == 1);
        org.junit.Assert.assertNotNull(scriptNode51);
        org.junit.Assert.assertNotNull(scriptNode59);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 0 + "'", int69 == 0);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNull(node73);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 1 + "'", int74 == 1);
    }

    @Test
    public void test10413() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10413");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode1 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int2 = functionNode1.getLp();
        functionNode1.setEncodedSource("");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode5 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int6 = functionNode5.getLp();
        functionNode5.setEncodedSource("");
        functionNode5.flattenSymbolTable(false);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode11 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int12 = functionNode11.getLp();
        com.google.javascript.rhino.head.Node node14 = new com.google.javascript.rhino.head.Node((-1), (com.google.javascript.rhino.head.Node) functionNode1, (com.google.javascript.rhino.head.Node) functionNode5, (com.google.javascript.rhino.head.Node) functionNode11, (int) '#');
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList15 = functionNode1.getChildScopes();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode17 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int18 = scriptNode17.getEndLineno();
        int int19 = scriptNode17.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList20 = scriptNode17.getChildScopes();
        functionNode1.setMemberExprNode((com.google.javascript.rhino.head.ast.AstNode) scriptNode17);
        functionNode1.setEncodedSourceEnd((int) (short) 100);
        java.lang.String str24 = functionNode1.getJsDoc();
        functionNode1.setEncodedSourceBounds((-1), (int) (short) -1);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList28 = functionNode1.getFunctions();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode30 = new com.google.javascript.rhino.head.ast.FunctionNode(13);
        functionNode30.setFunctionIsGetter();
        boolean boolean32 = functionNodeList28.contains((java.lang.Object) functionNode30);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ListIterator<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeItor34 = functionNodeList28.listIterator(1299931104);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 1299931104, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNull(scopeList15);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNull(scopeList20);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(functionNodeList28);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
    }

    @Test
    public void test10414() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10414");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int3 = scriptNode2.getEndLineno();
        int int4 = scriptNode2.getBaseLineno();
        scriptNode2.removeProp(0);
        int int7 = scriptNode2.getFunctionCount();
        com.google.javascript.rhino.head.ast.Jump jump13 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump13.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump17 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump13, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode19 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int20 = scriptNode19.getEndLineno();
        int int21 = scriptNode19.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList22 = scriptNode19.getChildScopes();
        com.google.javascript.rhino.head.Node node23 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump13, (com.google.javascript.rhino.head.Node) scriptNode19);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList24 = scriptNode19.getFunctions();
        int int25 = scriptNode19.getPosition();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList26 = scriptNode19.getChildScopes();
        int int27 = scriptNode19.getEncodedSourceEnd();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList28 = scriptNode19.getSymbols();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode29 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int30 = functionNode29.getLp();
        functionNode29.setEncodedSource("");
        functionNode29.flattenSymbolTable(false);
        com.google.javascript.rhino.head.ast.RegExpLiteral regExpLiteral36 = new com.google.javascript.rhino.head.ast.RegExpLiteral((int) (short) 1);
        java.lang.String str38 = regExpLiteral36.toSource((int) (byte) 10);
        regExpLiteral36.setFlags("-1\tSCRIPT -1 1\n");
        regExpLiteral36.removeProp(8);
        java.lang.String str43 = regExpLiteral36.getValue();
        com.google.javascript.rhino.head.Node node44 = new com.google.javascript.rhino.head.Node(7, (com.google.javascript.rhino.head.Node) scriptNode19, (com.google.javascript.rhino.head.Node) functionNode29, (com.google.javascript.rhino.head.Node) regExpLiteral36);
        functionNode29.flattenSymbolTable(false);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode47 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int48 = functionNode47.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode49 = functionNode47.getTop();
        com.google.javascript.rhino.head.ast.Name name50 = null;
        functionNode47.setFunctionName(name50);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode52 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode53 = functionNode52.getTop();
        functionNode47.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode52);
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList55 = functionNode47.getParams();
        functionNode47.setRequiresActivation();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode57 = new com.google.javascript.rhino.head.ast.ScriptNode();
        int int58 = scriptNode57.getEncodedSourceEnd();
        functionNode47.addResumptionPoint((com.google.javascript.rhino.head.Node) scriptNode57);
        com.google.javascript.rhino.head.Node node60 = new com.google.javascript.rhino.head.Node((-1), (com.google.javascript.rhino.head.Node) scriptNode2, (com.google.javascript.rhino.head.Node) functionNode29, (com.google.javascript.rhino.head.Node) functionNode47);
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator61 = functionNode29.new NodeIterator();
        com.google.javascript.rhino.head.Node node62 = functionNode29.getFirstChild();
        functionNode29.flattenSymbolTable(false);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertNull(scopeList22);
        org.junit.Assert.assertNotNull(functionNodeList24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNull(scopeList26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(symbolList28);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "                    /null/" + "'", str38, "                    /null/");
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
        org.junit.Assert.assertNotNull(scriptNode49);
        org.junit.Assert.assertNotNull(scriptNode53);
        org.junit.Assert.assertNotNull(astNodeList55);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + (-1) + "'", int58 == (-1));
        org.junit.Assert.assertNull(node62);
    }

    @Test
    public void test10415() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10415");
        com.google.javascript.rhino.head.ast.Jump jump2 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        com.google.javascript.rhino.head.ast.Scope scope4 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 10);
        jump2.addChildrenToBack((com.google.javascript.rhino.head.Node) scope4);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode6 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int7 = functionNode6.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode8 = functionNode6.getTop();
        com.google.javascript.rhino.head.ast.Name name9 = null;
        functionNode6.setFunctionName(name9);
        functionNode6.setIsGenerator();
        java.lang.String str12 = functionNode6.getEncodedSource();
        scope4.target = functionNode6;
        boolean boolean14 = functionNode6.hasChildren();
        functionNode6.setBounds(0, (int) (short) 100);
        com.google.javascript.rhino.head.ast.Scope scope20 = new com.google.javascript.rhino.head.ast.Scope(19, 0);
        java.lang.String str21 = scope20.shortName();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode22 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode23 = functionNode22.getTop();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode25 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int26 = functionNode25.getLp();
        functionNode25.setEncodedSource("");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode29 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int30 = functionNode29.getLp();
        functionNode29.setEncodedSource("");
        functionNode29.flattenSymbolTable(false);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode35 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int36 = functionNode35.getLp();
        com.google.javascript.rhino.head.Node node38 = new com.google.javascript.rhino.head.Node((-1), (com.google.javascript.rhino.head.Node) functionNode25, (com.google.javascript.rhino.head.Node) functionNode29, (com.google.javascript.rhino.head.Node) functionNode35, (int) '#');
        com.google.javascript.rhino.head.ast.AstNode astNode39 = functionNode25.getBody();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode40 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int41 = functionNode40.getLp();
        functionNode40.setEncodedSource("");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode44 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int45 = functionNode44.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode46 = functionNode44.getTop();
        com.google.javascript.rhino.head.ast.Name name47 = null;
        functionNode44.setFunctionName(name47);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode49 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode50 = functionNode49.getTop();
        functionNode44.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode49);
        int int52 = functionNode49.getRp();
        int int53 = functionNode49.getFunctionType();
        functionNode40.addParam((com.google.javascript.rhino.head.ast.AstNode) functionNode49);
        com.google.javascript.rhino.head.ast.Scope scope55 = functionNode49.getEnclosingScope();
        functionNode25.setBody((com.google.javascript.rhino.head.ast.AstNode) functionNode49);
        int int57 = functionNode22.addFunction(functionNode25);
        com.google.javascript.rhino.head.Token.CommentType commentType60 = com.google.javascript.rhino.head.Token.CommentType.HTML;
        com.google.javascript.rhino.head.ast.Comment comment62 = new com.google.javascript.rhino.head.ast.Comment(20, 1, commentType60, "109");
        java.lang.String str64 = comment62.toSource(19);
        com.google.javascript.rhino.head.Token.CommentType commentType65 = comment62.getCommentType();
        int int66 = comment62.getLineno();
        functionNode25.addChildToFront((com.google.javascript.rhino.head.Node) comment62);
        scope20.setParentScope((com.google.javascript.rhino.head.ast.Scope) functionNode25);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode69 = scope20.getTop();
        // The following exception was thrown during execution in test generation
        try {
            functionNode6.setLoop((com.google.javascript.rhino.head.ast.Jump) scriptNode69);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(scriptNode8);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Scope" + "'", str21, "Scope");
        org.junit.Assert.assertNotNull(scriptNode23);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNull(astNode39);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
        org.junit.Assert.assertNotNull(scriptNode46);
        org.junit.Assert.assertNotNull(scriptNode50);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertNotNull(scope55);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 0 + "'", int57 == 0);
        org.junit.Assert.assertTrue("'" + commentType60 + "' != '" + com.google.javascript.rhino.head.Token.CommentType.HTML + "'", commentType60.equals(com.google.javascript.rhino.head.Token.CommentType.HTML));
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "                                      109" + "'", str64, "                                      109");
        org.junit.Assert.assertTrue("'" + commentType65 + "' != '" + com.google.javascript.rhino.head.Token.CommentType.HTML + "'", commentType65.equals(com.google.javascript.rhino.head.Token.CommentType.HTML));
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + (-1) + "'", int66 == (-1));
        org.junit.Assert.assertNotNull(scriptNode69);
    }

    @Test
    public void test10416() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10416");
        com.google.javascript.rhino.head.ast.Jump jump4 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump4.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump8 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump4, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int11 = scriptNode10.getEndLineno();
        int int12 = scriptNode10.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList13 = scriptNode10.getChildScopes();
        com.google.javascript.rhino.head.Node node14 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump4, (com.google.javascript.rhino.head.Node) scriptNode10);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList15 = scriptNode10.getFunctions();
        functionNodeList15.clear();
        functionNodeList15.clear();
        java.util.Iterator<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeItor18 = functionNodeList15.iterator();
        com.google.javascript.rhino.head.ast.RegExpLiteral regExpLiteral20 = new com.google.javascript.rhino.head.ast.RegExpLiteral((int) (short) 1);
        java.lang.String str22 = regExpLiteral20.toSource((int) (byte) 10);
        regExpLiteral20.setFlags("-1\tSCRIPT -1 1\n");
        regExpLiteral20.removeProp(8);
        java.lang.String str27 = regExpLiteral20.getValue();
        regExpLiteral20.setLineno(10);
        regExpLiteral20.removeChildren();
        boolean boolean31 = functionNodeList15.equals((java.lang.Object) regExpLiteral20);
        com.google.javascript.rhino.head.ast.Jump jump32 = new com.google.javascript.rhino.head.ast.Jump();
        boolean boolean33 = functionNodeList15.remove((java.lang.Object) jump32);
        int int34 = functionNodeList15.size();
        com.google.javascript.rhino.head.ast.Jump jump39 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump39.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump43 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump39, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode45 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int46 = scriptNode45.getEndLineno();
        int int47 = scriptNode45.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList48 = scriptNode45.getChildScopes();
        com.google.javascript.rhino.head.Node node49 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump39, (com.google.javascript.rhino.head.Node) scriptNode45);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList50 = scriptNode45.getFunctions();
        int int51 = functionNodeList50.size();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator52 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        functionNodeList50.sort((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator52);
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator54 = positionComparator52.reversed();
        com.google.javascript.rhino.head.ast.Jump jump58 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump58.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump62 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump58, 0);
        com.google.javascript.rhino.head.ast.Jump jump66 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump66.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump70 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump66, 0);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode71 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int72 = functionNode71.getLp();
        functionNode71.setEncodedSource("");
        functionNode71.flattenSymbolTable(false);
        jump58.addChildAfter((com.google.javascript.rhino.head.Node) jump66, (com.google.javascript.rhino.head.Node) functionNode71);
        int int78 = functionNode71.getPosition();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode80 = new com.google.javascript.rhino.head.ast.FunctionNode(0);
        boolean boolean81 = functionNode80.isExpressionClosure();
        int int82 = positionComparator52.compare((com.google.javascript.rhino.head.ast.AstNode) functionNode71, (com.google.javascript.rhino.head.ast.AstNode) functionNode80);
        int int83 = functionNode80.getAbsolutePosition();
        java.lang.String str84 = functionNode80.getSourceName();
        int int85 = functionNodeList15.lastIndexOf((java.lang.Object) functionNode80);
        boolean boolean86 = functionNode80.isGetter();
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNull(scopeList13);
        org.junit.Assert.assertNotNull(functionNodeList15);
        org.junit.Assert.assertNotNull(functionNodeItor18);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "                    /null/" + "'", str22, "                    /null/");
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertNull(scopeList48);
        org.junit.Assert.assertNotNull(functionNodeList50);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertNotNull(astNodeComparator54);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + (-1) + "'", int72 == (-1));
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + (-1) + "'", int78 == (-1));
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + (-1) + "'", int82 == (-1));
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 0 + "'", int83 == 0);
        org.junit.Assert.assertNull(str84);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + (-1) + "'", int85 == (-1));
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
    }

    @Test
    public void test10417() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10417");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode0 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = functionNode0.getTop();
        functionNode0.setParens((int) (byte) 1, (int) (short) 1);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode5 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.Scope scope7 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 10);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode8 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode9 = functionNode8.getTop();
        functionNode8.setParens((int) (byte) 1, (int) (short) 1);
        functionNode8.setEncodedSourceStart((-1));
        functionNode8.setFunctionIsGetter();
        scope7.addChildToFront((com.google.javascript.rhino.head.Node) functionNode8);
        functionNode5.setBody((com.google.javascript.rhino.head.ast.AstNode) functionNode8);
        functionNode5.setFunctionIsSetter();
        int int19 = functionNode0.addFunction(functionNode5);
        functionNode0.setEncodedSourceStart(1);
        boolean boolean22 = functionNode0.isExpressionClosure();
        com.google.javascript.rhino.head.ast.Symbol symbol24 = functionNode0.getSymbol("  {\n  }\n");
        functionNode0.setLp(1579347477);
        functionNode0.setRelative(48);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode29 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode30 = functionNode29.getTop();
        int int31 = functionNode29.getRegexpCount();
        functionNode29.setFunctionIsGetter();
        com.google.javascript.rhino.head.Node node33 = functionNode29.target;
        functionNode29.clearParentScope();
        int int35 = functionNode29.getLp();
        functionNode29.setRequiresActivation();
        boolean boolean37 = functionNode29.isSetter();
        boolean boolean38 = functionNode0.isParam((com.google.javascript.rhino.head.ast.AstNode) functionNode29);
        boolean boolean39 = functionNode0.isExpressionClosure();
        org.junit.Assert.assertNotNull(scriptNode1);
        org.junit.Assert.assertNotNull(scriptNode9);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(symbol24);
        org.junit.Assert.assertNotNull(scriptNode30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNull(node33);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
    }

    @Test
    public void test10418() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10418");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode0 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int1 = functionNode0.getLp();
        functionNode0.setEncodedSource("");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode4 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.Scope scope6 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 10);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode7 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode8 = functionNode7.getTop();
        functionNode7.setParens((int) (byte) 1, (int) (short) 1);
        functionNode7.setEncodedSourceStart((-1));
        functionNode7.setFunctionIsGetter();
        scope6.addChildToFront((com.google.javascript.rhino.head.Node) functionNode7);
        functionNode4.setBody((com.google.javascript.rhino.head.ast.AstNode) functionNode7);
        int int17 = functionNode0.addFunction(functionNode4);
        java.lang.Object obj18 = functionNode4.getCompilerData();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode20 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int21 = scriptNode20.getEndLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode23 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int24 = scriptNode23.getEndLineno();
        scriptNode20.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode23);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode26 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int27 = functionNode26.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode28 = functionNode26.getTop();
        boolean boolean29 = functionNode26.hasSideEffects();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode31 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int32 = scriptNode31.getEndLineno();
        int int33 = scriptNode31.getBaseLineno();
        com.google.javascript.rhino.head.ast.Jump jump36 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode38 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int39 = scriptNode38.getEndLineno();
        int int40 = scriptNode38.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList41 = scriptNode38.getChildScopes();
        jump36.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode38);
        java.lang.String str43 = scriptNode38.debugPrint();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode31, (com.google.javascript.rhino.head.ast.Scope) scriptNode38);
        com.google.javascript.rhino.head.ast.Scope scope45 = new com.google.javascript.rhino.head.ast.Scope();
        scriptNode38.target = scope45;
        functionNode26.addChildScope(scope45);
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode23, (com.google.javascript.rhino.head.ast.Scope) functionNode26);
        int int49 = functionNode26.getFunctionCount();
        int int50 = functionNode26.getLineno();
        int int51 = functionNode26.getAbsolutePosition();
        java.lang.String str52 = functionNode4.toStringTree((com.google.javascript.rhino.head.ast.ScriptNode) functionNode26);
        com.google.javascript.rhino.head.Node node54 = functionNode4.setType(8);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-1) + "'", int1 == (-1));
        org.junit.Assert.assertNotNull(scriptNode8);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(scriptNode28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertNull(scopeList41);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str43, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1));
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertNotNull(node54);
    }

    @Test
    public void test10419() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10419");
        com.google.javascript.rhino.head.ast.Jump jump2 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode4 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int5 = scriptNode4.getEndLineno();
        int int6 = scriptNode4.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList7 = scriptNode4.getChildScopes();
        jump2.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode4);
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor9 = scriptNode4.iterator();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode10 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int11 = functionNode10.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode12 = functionNode10.getTop();
        boolean boolean13 = functionNode10.hasSideEffects();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode15 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int16 = scriptNode15.getEndLineno();
        int int17 = scriptNode15.getBaseLineno();
        com.google.javascript.rhino.head.ast.Jump jump20 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode22 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int23 = scriptNode22.getEndLineno();
        int int24 = scriptNode22.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList25 = scriptNode22.getChildScopes();
        jump20.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode22);
        java.lang.String str27 = scriptNode22.debugPrint();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode15, (com.google.javascript.rhino.head.ast.Scope) scriptNode22);
        com.google.javascript.rhino.head.ast.Scope scope29 = new com.google.javascript.rhino.head.ast.Scope();
        scriptNode22.target = scope29;
        functionNode10.addChildScope(scope29);
        boolean boolean32 = functionNode10.hasConsistentReturnUsage();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode36 = new com.google.javascript.rhino.head.ast.FunctionNode((int) (byte) 100);
        int int37 = functionNode36.getEncodedSourceStart();
        int int38 = functionNode36.getFunctionCount();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode39 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode40 = functionNode39.getTop();
        functionNode39.setParens((int) (byte) 1, (int) (short) 1);
        int int44 = functionNode39.getRp();
        com.google.javascript.rhino.head.Node node46 = new com.google.javascript.rhino.head.Node(17, (com.google.javascript.rhino.head.Node) functionNode36, (com.google.javascript.rhino.head.Node) functionNode39, (int) (short) 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode48 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int49 = scriptNode48.getEndLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode51 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int52 = scriptNode51.getEndLineno();
        scriptNode48.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode51);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode54 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int55 = functionNode54.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode56 = functionNode54.getTop();
        boolean boolean57 = functionNode54.hasSideEffects();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode59 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int60 = scriptNode59.getEndLineno();
        int int61 = scriptNode59.getBaseLineno();
        com.google.javascript.rhino.head.ast.Jump jump64 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode66 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int67 = scriptNode66.getEndLineno();
        int int68 = scriptNode66.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList69 = scriptNode66.getChildScopes();
        jump64.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode66);
        java.lang.String str71 = scriptNode66.debugPrint();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode59, (com.google.javascript.rhino.head.ast.Scope) scriptNode66);
        com.google.javascript.rhino.head.ast.Scope scope73 = new com.google.javascript.rhino.head.ast.Scope();
        scriptNode66.target = scope73;
        functionNode54.addChildScope(scope73);
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode51, (com.google.javascript.rhino.head.ast.Scope) functionNode54);
        com.google.javascript.rhino.head.Node node78 = new com.google.javascript.rhino.head.Node(8, (com.google.javascript.rhino.head.Node) functionNode36, (com.google.javascript.rhino.head.Node) scriptNode51, (int) 'a');
        functionNode10.addResumptionPoint(node78);
        scriptNode4.addChildToBack((com.google.javascript.rhino.head.Node) functionNode10);
        java.util.Map<com.google.javascript.rhino.head.Node, int[]> nodeMap81 = functionNode10.getLiveLocals();
        functionNode10.setParens(3, (int) (byte) 0);
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap85 = functionNode10.getSymbolTable();
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNull(scopeList7);
        org.junit.Assert.assertNotNull(nodeItor9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(scriptNode12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertNull(scopeList25);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str27, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertNotNull(scriptNode40);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 1 + "'", int44 == 1);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1));
        org.junit.Assert.assertNotNull(scriptNode56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-1) + "'", int60 == (-1));
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + (-1) + "'", int61 == (-1));
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + (-1) + "'", int67 == (-1));
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + (-1) + "'", int68 == (-1));
        org.junit.Assert.assertNull(scopeList69);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str71, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertNull(nodeMap81);
        org.junit.Assert.assertNull(strMap85);
    }

    @Test
    public void test10420() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10420");
        com.google.javascript.rhino.head.Node node1 = com.google.javascript.rhino.head.Node.newString("            -1\tSCRIPT -1 1\n");
        org.junit.Assert.assertNotNull(node1);
    }

    @Test
    public void test10421() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10421");
        com.google.javascript.rhino.head.Node node1 = com.google.javascript.rhino.head.Node.newString("                                                                                                                                                                                                  {\n                                                                                                                                                                                                  }\n");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode3 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int4 = functionNode3.getLp();
        functionNode3.setEncodedSource("");
        functionNode3.flattenSymbolTable(false);
        java.lang.String str9 = functionNode3.getName();
        functionNode3.setFunctionIsGetter();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode11 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int12 = functionNode11.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode13 = functionNode11.getTop();
        boolean boolean14 = functionNode11.hasSideEffects();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList15 = functionNode11.getSymbols();
        functionNode11.setRp(5);
        com.google.javascript.rhino.head.ast.Scope scope18 = functionNode11.getEnclosingScope();
        functionNode11.setLineno(5);
        com.google.javascript.rhino.head.Node node22 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) functionNode3, (com.google.javascript.rhino.head.Node) functionNode11, 1);
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap23 = functionNode11.getSymbolTable();
        node1.setScope((com.google.javascript.rhino.head.ast.Scope) functionNode11);
        org.junit.Assert.assertNotNull(node1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(scriptNode13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(symbolList15);
        org.junit.Assert.assertNull(scope18);
        org.junit.Assert.assertNull(strMap23);
    }

    @Test
    public void test10422() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10422");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode0 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = functionNode0.getTop();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode3 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int4 = functionNode3.getLp();
        functionNode3.setEncodedSource("");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode7 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int8 = functionNode7.getLp();
        functionNode7.setEncodedSource("");
        functionNode7.flattenSymbolTable(false);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode13 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int14 = functionNode13.getLp();
        com.google.javascript.rhino.head.Node node16 = new com.google.javascript.rhino.head.Node((-1), (com.google.javascript.rhino.head.Node) functionNode3, (com.google.javascript.rhino.head.Node) functionNode7, (com.google.javascript.rhino.head.Node) functionNode13, (int) '#');
        com.google.javascript.rhino.head.ast.AstNode astNode17 = functionNode3.getBody();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode18 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int19 = functionNode18.getLp();
        functionNode18.setEncodedSource("");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode22 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int23 = functionNode22.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode24 = functionNode22.getTop();
        com.google.javascript.rhino.head.ast.Name name25 = null;
        functionNode22.setFunctionName(name25);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode27 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode28 = functionNode27.getTop();
        functionNode22.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode27);
        int int30 = functionNode27.getRp();
        int int31 = functionNode27.getFunctionType();
        functionNode18.addParam((com.google.javascript.rhino.head.ast.AstNode) functionNode27);
        com.google.javascript.rhino.head.ast.Scope scope33 = functionNode27.getEnclosingScope();
        functionNode3.setBody((com.google.javascript.rhino.head.ast.AstNode) functionNode27);
        int int35 = functionNode0.addFunction(functionNode3);
        functionNode0.setEncodedSourceEnd(350469479);
        com.google.javascript.rhino.head.ast.Scope scope39 = new com.google.javascript.rhino.head.ast.Scope((int) (byte) -1);
        functionNode0.addChild((com.google.javascript.rhino.head.ast.AstNode) scope39);
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList41 = functionNode0.getParams();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode42 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int43 = functionNode42.getLp();
        functionNode42.setLineno(0);
        boolean boolean46 = functionNode42.isGenerator();
        java.lang.String str47 = functionNode0.toStringTree((com.google.javascript.rhino.head.ast.ScriptNode) functionNode42);
        int int48 = functionNode42.getFunctionCount();
        org.junit.Assert.assertNotNull(scriptNode1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNull(astNode17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNotNull(scriptNode24);
        org.junit.Assert.assertNotNull(scriptNode28);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNotNull(scope33);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertNotNull(astNodeList41);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
    }

    @Test
    public void test10423() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10423");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode0 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int1 = functionNode0.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = functionNode0.getTop();
        com.google.javascript.rhino.head.ast.Name name3 = null;
        functionNode0.setFunctionName(name3);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode5 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int6 = functionNode5.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode8 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        java.lang.String str9 = functionNode5.toStringTree(scriptNode8);
        functionNode5.setFunctionIsGetter();
        int int11 = functionNode0.addFunction(functionNode5);
        boolean boolean12 = functionNode5.hasSideEffects();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode13 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int14 = functionNode13.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode15 = functionNode13.getTop();
        functionNode5.setBody((com.google.javascript.rhino.head.ast.AstNode) scriptNode15);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode18 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int19 = scriptNode18.getEndLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode21 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int22 = scriptNode21.getEndLineno();
        scriptNode18.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode21);
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator24 = scriptNode18.new NodeIterator();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode15, (com.google.javascript.rhino.head.ast.Scope) scriptNode18);
        scriptNode15.setSourceName("");
        com.google.javascript.rhino.head.Node node28 = scriptNode15.getLastSibling();
        com.google.javascript.rhino.head.Node node30 = scriptNode15.setType(6);
        // The following exception was thrown during execution in test generation
        try {
            int int31 = node30.labelId();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-1) + "'", int1 == (-1));
        org.junit.Assert.assertNotNull(scriptNode2);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNotNull(scriptNode15);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNotNull(node28);
        org.junit.Assert.assertNotNull(node30);
    }

    @Test
    public void test10424() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10424");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode0 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int1 = functionNode0.getLp();
        functionNode0.setEncodedSource("");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode4 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int5 = functionNode4.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = functionNode4.getTop();
        com.google.javascript.rhino.head.ast.Name name7 = null;
        functionNode4.setFunctionName(name7);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode9 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = functionNode9.getTop();
        functionNode4.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode9);
        int int12 = functionNode9.getRp();
        int int13 = functionNode9.getFunctionType();
        functionNode0.addParam((com.google.javascript.rhino.head.ast.AstNode) functionNode9);
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator15 = functionNode9.new NodeIterator();
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList16 = functionNode9.getStatements();
        com.google.javascript.rhino.head.Node node17 = null;
        com.google.javascript.rhino.head.Node node18 = functionNode9.getChildBefore(node17);
        boolean boolean19 = functionNode9.requiresActivation();
        int int20 = functionNode9.getRp();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-1) + "'", int1 == (-1));
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(scriptNode6);
        org.junit.Assert.assertNotNull(scriptNode10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(astNodeList16);
        org.junit.Assert.assertNull(node18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
    }

    @Test
    public void test10425() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10425");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode1 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int2 = functionNode1.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode3 = functionNode1.getTop();
        com.google.javascript.rhino.head.ast.AstNode astNode4 = functionNode1.getBody();
        int int5 = functionNode1.getLength();
        functionNode1.setEncodedSourceStart(12);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode9 = new com.google.javascript.rhino.head.ast.FunctionNode(23);
        java.lang.Object obj10 = functionNode9.getCompilerData();
        functionNode9.setFunctionIsSetter();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode12 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int13 = functionNode12.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = functionNode12.getTop();
        com.google.javascript.rhino.head.ast.Name name15 = null;
        functionNode12.setFunctionName(name15);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode17 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode18 = functionNode17.getTop();
        functionNode12.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode17);
        com.google.javascript.rhino.head.ast.Scope scope22 = new com.google.javascript.rhino.head.ast.Scope((int) (short) -1, 0);
        functionNode12.replaceWith(scope22);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode24 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int25 = functionNode24.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode26 = functionNode24.getTop();
        com.google.javascript.rhino.head.ast.Name name27 = null;
        functionNode24.setFunctionName(name27);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode29 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode30 = functionNode29.getTop();
        functionNode24.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode29);
        int int32 = functionNode12.addFunction(functionNode24);
        int int33 = functionNode24.getLineno();
        int int34 = functionNode24.getFunctionType();
        functionNode24.setRp(7);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode37 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int38 = functionNode37.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode39 = functionNode37.getTop();
        com.google.javascript.rhino.head.Node node40 = functionNode37.getLastSibling();
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList41 = functionNode37.getParams();
        int int42 = functionNode37.getType();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator43 = functionNode37.new NodeIterator();
        functionNode24.addResumptionPoint((com.google.javascript.rhino.head.Node) functionNode37);
        java.lang.String str45 = functionNode24.getSourceName();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode46 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.AstNode astNode47 = functionNode46.getParent();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode48 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode49 = functionNode48.getTop();
        functionNode48.setParens((int) (byte) 1, (int) (short) 1);
        functionNode48.setEncodedSourceStart((-1));
        java.util.List<com.google.javascript.rhino.head.Node> nodeList55 = functionNode48.getResumptionPoints();
        com.google.javascript.rhino.head.ast.Scope scope57 = functionNode48.getDefiningScope("hi!");
        boolean boolean58 = functionNode48.isGetterOrSetter();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode59 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int60 = functionNode59.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode61 = functionNode59.getTop();
        com.google.javascript.rhino.head.ast.Name name62 = null;
        functionNode59.setFunctionName(name62);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode64 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode65 = functionNode64.getTop();
        functionNode59.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode64);
        int int67 = functionNode64.getRp();
        int int68 = functionNode64.getFunctionType();
        int int69 = functionNode48.addFunction(functionNode64);
        functionNode46.setTop((com.google.javascript.rhino.head.ast.ScriptNode) functionNode64);
        functionNode24.target = functionNode46;
        int int72 = functionNode46.getLineno();
        com.google.javascript.rhino.head.Node node74 = new com.google.javascript.rhino.head.Node(327364487, (com.google.javascript.rhino.head.Node) functionNode1, (com.google.javascript.rhino.head.Node) functionNode9, (com.google.javascript.rhino.head.Node) functionNode46, 349600310);
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor75 = null;
        // The following exception was thrown during execution in test generation
        try {
            functionNode1.visit(nodeVisitor75);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertNotNull(scriptNode3);
        org.junit.Assert.assertNull(astNode4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(scriptNode14);
        org.junit.Assert.assertNotNull(scriptNode18);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNotNull(scriptNode26);
        org.junit.Assert.assertNotNull(scriptNode30);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNotNull(scriptNode39);
        org.junit.Assert.assertNotNull(node40);
        org.junit.Assert.assertNotNull(astNodeList41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 109 + "'", int42 == 109);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertNull(astNode47);
        org.junit.Assert.assertNotNull(scriptNode49);
        org.junit.Assert.assertNull(nodeList55);
        org.junit.Assert.assertNull(scope57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-1) + "'", int60 == (-1));
        org.junit.Assert.assertNotNull(scriptNode61);
        org.junit.Assert.assertNotNull(scriptNode65);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + (-1) + "'", int67 == (-1));
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 0 + "'", int68 == 0);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 0 + "'", int69 == 0);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + (-1) + "'", int72 == (-1));
    }

    @Test
    public void test10426() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10426");
        com.google.javascript.rhino.head.ast.RegExpLiteral regExpLiteral2 = new com.google.javascript.rhino.head.ast.RegExpLiteral((int) (short) 1);
        java.lang.String str4 = regExpLiteral2.toSource((int) (byte) 10);
        regExpLiteral2.setFlags("-1\tSCRIPT -1 1\n");
        regExpLiteral2.removeProp(8);
        java.lang.String str9 = regExpLiteral2.getValue();
        java.lang.String str11 = regExpLiteral2.toSource(5);
        regExpLiteral2.setFlags("                                /null/-1\tSCRIPT -1 1\n");
        com.google.javascript.rhino.head.Node node14 = com.google.javascript.rhino.head.Node.newTarget();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode16 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode17 = functionNode16.getTop();
        java.lang.String str18 = scriptNode17.getJsDoc();
        com.google.javascript.rhino.head.Node node20 = scriptNode17.setType(0);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode21 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int22 = functionNode21.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode24 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        java.lang.String str25 = functionNode21.toStringTree(scriptNode24);
        com.google.javascript.rhino.head.ast.Scope scope27 = scriptNode24.getDefiningScope("");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode29 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int30 = scriptNode29.getEndLineno();
        int int31 = scriptNode29.getBaseLineno();
        com.google.javascript.rhino.head.Node node32 = new com.google.javascript.rhino.head.Node(25, node20, (com.google.javascript.rhino.head.Node) scriptNode24, (com.google.javascript.rhino.head.Node) scriptNode29);
        java.lang.String str33 = node14.toStringTree(scriptNode29);
        regExpLiteral2.addChildrenToBack(node14);
        node14.labelId((int) 'a');
        com.google.javascript.rhino.head.ast.FunctionNode functionNode37 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int38 = functionNode37.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode39 = functionNode37.getTop();
        com.google.javascript.rhino.head.ast.AstNode astNode40 = functionNode37.getBody();
        com.google.javascript.rhino.head.ast.Scope scope41 = functionNode37.getParentScope();
        com.google.javascript.rhino.head.ast.Name name43 = null;
        com.google.javascript.rhino.head.ast.FunctionNode functionNode44 = new com.google.javascript.rhino.head.ast.FunctionNode((int) (byte) -1, name43);
        java.util.List<com.google.javascript.rhino.head.Node> nodeList45 = functionNode44.getResumptionPoints();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList46 = functionNode44.getSymbols();
        functionNode37.setSymbols(symbolList46);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode48 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int49 = functionNode48.getLp();
        functionNode48.setEncodedSource("");
        com.google.javascript.rhino.head.Node node52 = functionNode48.getLastChild();
        com.google.javascript.rhino.head.Node node54 = new com.google.javascript.rhino.head.Node(25, node14, (com.google.javascript.rhino.head.Node) functionNode37, (com.google.javascript.rhino.head.Node) functionNode48, (-3));
        functionNode48.setRp(24);
        java.lang.String str57 = functionNode48.getNextTempName();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "                    /null/" + "'", str4, "                    /null/");
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "          /null/-1\tSCRIPT -1 1\n" + "'", str11, "          /null/-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertNotNull(node14);
        org.junit.Assert.assertNotNull(scriptNode17);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(node20);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(scope27);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNotNull(scriptNode39);
        org.junit.Assert.assertNull(astNode40);
        org.junit.Assert.assertNull(scope41);
        org.junit.Assert.assertNull(nodeList45);
        org.junit.Assert.assertNotNull(symbolList46);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertNull(node52);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "$0" + "'", str57, "$0");
    }

    @Test
    public void test10427() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10427");
        com.google.javascript.rhino.head.Node node2 = new com.google.javascript.rhino.head.Node((-462033282), (-462033282));
        com.google.javascript.rhino.head.Node node3 = node2.getNext();
        org.junit.Assert.assertNull(node3);
    }

    @Test
    public void test10428() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10428");
        com.google.javascript.rhino.head.ast.RegExpLiteral regExpLiteral1 = new com.google.javascript.rhino.head.ast.RegExpLiteral((int) (short) 1);
        regExpLiteral1.setFlags("-1\tSCRIPT -1 1\n");
        java.lang.String str5 = regExpLiteral1.toSource(0);
        java.lang.String str7 = regExpLiteral1.toSource((int) ' ');
        regExpLiteral1.setValue("40");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "/null/-1\tSCRIPT -1 1\n" + "'", str5, "/null/-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "                                                                /null/-1\tSCRIPT -1 1\n" + "'", str7, "                                                                /null/-1\tSCRIPT -1 1\n");
    }

    @Test
    public void test10429() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10429");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int2 = scriptNode1.getEndLineno();
        int int3 = scriptNode1.getBaseLineno();
        com.google.javascript.rhino.head.ast.Jump jump6 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode8 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int9 = scriptNode8.getEndLineno();
        int int10 = scriptNode8.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList11 = scriptNode8.getChildScopes();
        jump6.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode8);
        java.lang.String str13 = scriptNode8.debugPrint();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode1, (com.google.javascript.rhino.head.ast.Scope) scriptNode8);
        com.google.javascript.rhino.head.ast.AstNode astNode15 = scriptNode1.getParent();
        scriptNode1.setSourceName("                    /null/");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode18 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.Scope scope20 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 10);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode21 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode22 = functionNode21.getTop();
        functionNode21.setParens((int) (byte) 1, (int) (short) 1);
        functionNode21.setEncodedSourceStart((-1));
        functionNode21.setFunctionIsGetter();
        scope20.addChildToFront((com.google.javascript.rhino.head.Node) functionNode21);
        functionNode18.setBody((com.google.javascript.rhino.head.ast.AstNode) functionNode21);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode31 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode32 = functionNode31.getTop();
        functionNode31.setParens((int) (byte) 1, (int) (short) 1);
        functionNode31.setEncodedSourceStart((-1));
        java.util.List<com.google.javascript.rhino.head.Node> nodeList38 = functionNode31.getResumptionPoints();
        int int39 = functionNode31.getLp();
        functionNode18.setBody((com.google.javascript.rhino.head.ast.AstNode) functionNode31);
        com.google.javascript.rhino.head.Node node41 = functionNode31.getNext();
        scriptNode1.addChildScope((com.google.javascript.rhino.head.ast.Scope) functionNode31);
        java.util.Map<com.google.javascript.rhino.head.Node, int[]> nodeMap43 = functionNode31.getLiveLocals();
        functionNode31.setSourceName("                                          ");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNull(scopeList11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str13, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertNull(astNode15);
        org.junit.Assert.assertNotNull(scriptNode22);
        org.junit.Assert.assertNotNull(scriptNode32);
        org.junit.Assert.assertNull(nodeList38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 1 + "'", int39 == 1);
        org.junit.Assert.assertNull(node41);
        org.junit.Assert.assertNull(nodeMap43);
    }

    @Test
    public void test10430() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10430");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((-1));
        java.lang.String str3 = scope1.toSource((int) (byte) 1);
        int int6 = scope1.getIntProp(16, (int) (short) -1);
        java.lang.String str7 = scope1.toString();
        com.google.javascript.rhino.head.ast.AstNode astNode8 = scope1.getParent();
        // The following exception was thrown during execution in test generation
        try {
            astNode8.setString("                    {\n                    }\n");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "  {\n  }\n" + "'", str3, "  {\n  }\n");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "129" + "'", str7, "129");
        org.junit.Assert.assertNull(astNode8);
    }

    @Test
    public void test10431() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10431");
        com.google.javascript.rhino.head.Token.CommentType commentType3 = com.google.javascript.rhino.head.Token.CommentType.HTML;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment(20, 1, commentType3, "109");
        java.lang.String str7 = comment5.toSource(19);
        com.google.javascript.rhino.head.ast.Scope scope10 = new com.google.javascript.rhino.head.ast.Scope((int) (short) -1, 0);
        com.google.javascript.rhino.head.Node node11 = new com.google.javascript.rhino.head.Node((int) (short) 10, (com.google.javascript.rhino.head.Node) comment5, (com.google.javascript.rhino.head.Node) scope10);
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor12 = scope10.iterator();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode15 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int16 = functionNode15.getLp();
        functionNode15.setLp((int) (short) 1);
        int int21 = functionNode15.getIntProp(4, 26);
        com.google.javascript.rhino.head.ast.Jump jump22 = new com.google.javascript.rhino.head.ast.Jump(3, (com.google.javascript.rhino.head.Node) functionNode15);
        com.google.javascript.rhino.head.Node node23 = new com.google.javascript.rhino.head.Node((int) '4', (com.google.javascript.rhino.head.Node) functionNode15);
        functionNode15.setFunctionType(11);
        boolean boolean26 = functionNode15.hasChildren();
        com.google.javascript.rhino.head.Node node27 = functionNode15.target;
        int int28 = functionNode15.getParamCount();
        com.google.javascript.rhino.head.ast.Jump jump31 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode33 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int34 = scriptNode33.getEndLineno();
        int int35 = scriptNode33.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList36 = scriptNode33.getChildScopes();
        jump31.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode33);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode39 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int40 = functionNode39.getLp();
        functionNode39.setEncodedSource("");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode43 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int44 = functionNode43.getLp();
        functionNode43.setEncodedSource("");
        functionNode43.flattenSymbolTable(false);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode49 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int50 = functionNode49.getLp();
        com.google.javascript.rhino.head.Node node52 = new com.google.javascript.rhino.head.Node((-1), (com.google.javascript.rhino.head.Node) functionNode39, (com.google.javascript.rhino.head.Node) functionNode43, (com.google.javascript.rhino.head.Node) functionNode49, (int) '#');
        jump31.addChildrenToFront((com.google.javascript.rhino.head.Node) functionNode39);
        int int56 = functionNode39.getIntProp((int) '#', (-1110578805));
        functionNode15.addChildScope((com.google.javascript.rhino.head.ast.Scope) functionNode39);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList58 = functionNode15.getFunctions();
        // The following exception was thrown during execution in test generation
        try {
            scope10.setScope((com.google.javascript.rhino.head.ast.Scope) functionNode15);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + commentType3 + "' != '" + com.google.javascript.rhino.head.Token.CommentType.HTML + "'", commentType3.equals(com.google.javascript.rhino.head.Token.CommentType.HTML));
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "                                      109" + "'", str7, "                                      109");
        org.junit.Assert.assertNotNull(nodeItor12);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 26 + "'", int21 == 26);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNull(node27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertNull(scopeList36);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1110578805) + "'", int56 == (-1110578805));
        org.junit.Assert.assertNotNull(functionNodeList58);
    }

    @Test
    public void test10432() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10432");
        com.google.javascript.rhino.head.ast.Jump jump2 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode4 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int5 = scriptNode4.getEndLineno();
        int int6 = scriptNode4.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList7 = scriptNode4.getChildScopes();
        jump2.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode4);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode10 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int11 = functionNode10.getLp();
        functionNode10.setEncodedSource("");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode14 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int15 = functionNode14.getLp();
        functionNode14.setEncodedSource("");
        functionNode14.flattenSymbolTable(false);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode20 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int21 = functionNode20.getLp();
        com.google.javascript.rhino.head.Node node23 = new com.google.javascript.rhino.head.Node((-1), (com.google.javascript.rhino.head.Node) functionNode10, (com.google.javascript.rhino.head.Node) functionNode14, (com.google.javascript.rhino.head.Node) functionNode20, (int) '#');
        jump2.addChildrenToFront((com.google.javascript.rhino.head.Node) functionNode10);
        int int25 = functionNode10.getLength();
        com.google.javascript.rhino.head.ast.Name name27 = null;
        com.google.javascript.rhino.head.ast.FunctionNode functionNode28 = new com.google.javascript.rhino.head.ast.FunctionNode(17, name27);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode29 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int30 = functionNode29.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode32 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        java.lang.String str33 = functionNode29.toStringTree(scriptNode32);
        int int34 = scriptNode32.getRegexpCount();
        java.lang.Object obj35 = scriptNode32.getCompilerData();
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList36 = scriptNode32.getStatements();
        java.lang.String str37 = functionNode28.toStringTree(scriptNode32);
        boolean boolean38 = functionNode10.isParam((com.google.javascript.rhino.head.ast.AstNode) scriptNode32);
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor39 = null;
        // The following exception was thrown during execution in test generation
        try {
            functionNode10.visit(nodeVisitor39);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNull(scopeList7);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 1 + "'", int25 == 1);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertNotNull(astNodeList36);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
    }

    @Test
    public void test10433() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10433");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode1 = new com.google.javascript.rhino.head.ast.FunctionNode(136);
        com.google.javascript.rhino.head.Token.CommentType commentType7 = com.google.javascript.rhino.head.Token.CommentType.BLOCK_COMMENT;
        com.google.javascript.rhino.head.ast.Comment comment9 = new com.google.javascript.rhino.head.ast.Comment(25, 16, commentType7, "Symbol (EOF) name=null line=-1");
        com.google.javascript.rhino.head.ast.Comment comment11 = new com.google.javascript.rhino.head.ast.Comment(16, 161, commentType7, "                                                                                                /null/");
        com.google.javascript.rhino.head.ast.Jump jump12 = new com.google.javascript.rhino.head.ast.Jump(0, (com.google.javascript.rhino.head.Node) comment11);
        functionNode1.target = jump12;
        org.junit.Assert.assertTrue("'" + commentType7 + "' != '" + com.google.javascript.rhino.head.Token.CommentType.BLOCK_COMMENT + "'", commentType7.equals(com.google.javascript.rhino.head.Token.CommentType.BLOCK_COMMENT));
    }

    @Test
    public void test10434() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10434");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        scriptNode1.removeChildren();
        com.google.javascript.rhino.head.ast.Scope scope4 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 10);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode5 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = functionNode5.getTop();
        functionNode5.setParens((int) (byte) 1, (int) (short) 1);
        functionNode5.setEncodedSourceStart((-1));
        functionNode5.setFunctionIsGetter();
        scope4.addChildToFront((com.google.javascript.rhino.head.Node) functionNode5);
        functionNode5.setRp(19);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode17 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int18 = scriptNode17.getEndLineno();
        int int19 = scriptNode17.getBaseLineno();
        com.google.javascript.rhino.head.ast.Jump jump22 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode24 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int25 = scriptNode24.getEndLineno();
        int int26 = scriptNode24.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList27 = scriptNode24.getChildScopes();
        jump22.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode24);
        java.lang.String str29 = scriptNode24.debugPrint();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode17, (com.google.javascript.rhino.head.ast.Scope) scriptNode24);
        com.google.javascript.rhino.head.ast.Scope scope31 = new com.google.javascript.rhino.head.ast.Scope();
        scriptNode24.target = scope31;
        java.lang.String str33 = functionNode5.toStringTree(scriptNode24);
        scriptNode1.addChildToFront((com.google.javascript.rhino.head.Node) scriptNode24);
        scriptNode1.clearParentScope();
        com.google.javascript.rhino.head.ast.Scope scope36 = scriptNode1.getEnclosingScope();
        com.google.javascript.rhino.head.ast.Jump jump37 = null;
        // The following exception was thrown during execution in test generation
        try {
            scope36.setLoop(jump37);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(scriptNode6);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNull(scopeList27);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str29, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNull(scope36);
    }

    @Test
    public void test10435() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10435");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode0 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int1 = functionNode0.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = functionNode0.getTop();
        com.google.javascript.rhino.head.ast.Name name3 = null;
        functionNode0.setFunctionName(name3);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode5 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = functionNode5.getTop();
        functionNode0.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode5);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode8 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int9 = functionNode8.getLp();
        functionNode8.setEncodedSource("");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode12 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int13 = functionNode12.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = functionNode12.getTop();
        com.google.javascript.rhino.head.ast.Name name15 = null;
        functionNode12.setFunctionName(name15);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode17 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode18 = functionNode17.getTop();
        functionNode12.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode17);
        int int20 = functionNode17.getRp();
        int int21 = functionNode17.getFunctionType();
        functionNode8.addParam((com.google.javascript.rhino.head.ast.AstNode) functionNode17);
        com.google.javascript.rhino.head.ast.Scope scope24 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 10);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode25 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode26 = functionNode25.getTop();
        functionNode25.setParens((int) (byte) 1, (int) (short) 1);
        functionNode25.setEncodedSourceStart((-1));
        functionNode25.setFunctionIsGetter();
        scope24.addChildToFront((com.google.javascript.rhino.head.Node) functionNode25);
        functionNode25.setRp(19);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode37 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int38 = scriptNode37.getEndLineno();
        int int39 = scriptNode37.getBaseLineno();
        com.google.javascript.rhino.head.ast.Jump jump42 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode44 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int45 = scriptNode44.getEndLineno();
        int int46 = scriptNode44.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList47 = scriptNode44.getChildScopes();
        jump42.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode44);
        java.lang.String str49 = scriptNode44.debugPrint();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode37, (com.google.javascript.rhino.head.ast.Scope) scriptNode44);
        com.google.javascript.rhino.head.ast.Scope scope51 = new com.google.javascript.rhino.head.ast.Scope();
        scriptNode44.target = scope51;
        java.lang.String str53 = functionNode25.toStringTree(scriptNode44);
        java.lang.String str55 = scriptNode44.toSource((int) (short) 10);
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap56 = scriptNode44.getSymbolTable();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode58 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int59 = scriptNode58.getEndLineno();
        int int60 = scriptNode58.getBaseLineno();
        scriptNode58.removeProp(0);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList63 = scriptNode58.getSymbols();
        boolean boolean64 = strMap56.containsValue((java.lang.Object) symbolList63);
        functionNode8.setSymbols(symbolList63);
        functionNode5.setBody((com.google.javascript.rhino.head.ast.AstNode) functionNode8);
        com.google.javascript.rhino.head.Node node67 = functionNode8.target;
        functionNode8.setFunctionIsSetter();
        int int69 = functionNode8.getPosition();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-1) + "'", int1 == (-1));
        org.junit.Assert.assertNotNull(scriptNode2);
        org.junit.Assert.assertNotNull(scriptNode6);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(scriptNode14);
        org.junit.Assert.assertNotNull(scriptNode18);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNotNull(scriptNode26);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertNull(scopeList47);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str49, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "                    {\n                    }\n" + "'", str55, "                    {\n                    }\n");
        org.junit.Assert.assertNotNull(strMap56);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-1) + "'", int59 == (-1));
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-1) + "'", int60 == (-1));
        org.junit.Assert.assertNotNull(symbolList63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNull(node67);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + (-1) + "'", int69 == (-1));
    }

    @Test
    public void test10436() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10436");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode0 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int1 = functionNode0.getLp();
        functionNode0.setEncodedSource("");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode4 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int5 = functionNode4.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = functionNode4.getTop();
        com.google.javascript.rhino.head.ast.Name name7 = null;
        functionNode4.setFunctionName(name7);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode9 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = functionNode9.getTop();
        functionNode4.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode9);
        int int12 = functionNode9.getRp();
        int int13 = functionNode9.getFunctionType();
        functionNode0.addParam((com.google.javascript.rhino.head.ast.AstNode) functionNode9);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode15 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int16 = functionNode15.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode17 = functionNode15.getTop();
        com.google.javascript.rhino.head.Node node18 = functionNode15.getLastSibling();
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList19 = functionNode15.getParams();
        functionNode0.setParams(astNodeList19);
        functionNode0.setIsExpressionClosure(true);
        int int25 = functionNode0.getIntProp(6, 4);
        com.google.javascript.rhino.head.ast.AstNode astNode26 = functionNode0.getBody();
        java.lang.String str27 = functionNode0.getNextTempName();
        int int28 = functionNode0.getEncodedSourceStart();
        java.util.Map<com.google.javascript.rhino.head.Node, int[]> nodeMap29 = functionNode0.getLiveLocals();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-1) + "'", int1 == (-1));
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(scriptNode6);
        org.junit.Assert.assertNotNull(scriptNode10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(scriptNode17);
        org.junit.Assert.assertNotNull(node18);
        org.junit.Assert.assertNotNull(astNodeList19);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 4 + "'", int25 == 4);
        org.junit.Assert.assertNull(astNode26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "$0" + "'", str27, "$0");
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNull(nodeMap29);
    }

    @Test
    public void test10437() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10437");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode0 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int1 = functionNode0.getLp();
        functionNode0.setEncodedSource("");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode4 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int5 = functionNode4.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = functionNode4.getTop();
        com.google.javascript.rhino.head.ast.Name name7 = null;
        functionNode4.setFunctionName(name7);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode9 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = functionNode9.getTop();
        functionNode4.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode9);
        int int12 = functionNode9.getRp();
        int int13 = functionNode9.getFunctionType();
        functionNode0.addParam((com.google.javascript.rhino.head.ast.AstNode) functionNode9);
        com.google.javascript.rhino.head.ast.Scope scope16 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 10);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode17 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode18 = functionNode17.getTop();
        functionNode17.setParens((int) (byte) 1, (int) (short) 1);
        functionNode17.setEncodedSourceStart((-1));
        functionNode17.setFunctionIsGetter();
        scope16.addChildToFront((com.google.javascript.rhino.head.Node) functionNode17);
        functionNode17.setRp(19);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode29 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int30 = scriptNode29.getEndLineno();
        int int31 = scriptNode29.getBaseLineno();
        com.google.javascript.rhino.head.ast.Jump jump34 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode36 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int37 = scriptNode36.getEndLineno();
        int int38 = scriptNode36.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList39 = scriptNode36.getChildScopes();
        jump34.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode36);
        java.lang.String str41 = scriptNode36.debugPrint();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode29, (com.google.javascript.rhino.head.ast.Scope) scriptNode36);
        com.google.javascript.rhino.head.ast.Scope scope43 = new com.google.javascript.rhino.head.ast.Scope();
        scriptNode36.target = scope43;
        java.lang.String str45 = functionNode17.toStringTree(scriptNode36);
        java.lang.String str47 = scriptNode36.toSource((int) (short) 10);
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap48 = scriptNode36.getSymbolTable();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode50 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int51 = scriptNode50.getEndLineno();
        int int52 = scriptNode50.getBaseLineno();
        scriptNode50.removeProp(0);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList55 = scriptNode50.getSymbols();
        boolean boolean56 = strMap48.containsValue((java.lang.Object) symbolList55);
        functionNode0.setSymbols(symbolList55);
        functionNode0.setEncodedSourceStart(0);
        java.lang.String str60 = functionNode0.getName();
        com.google.javascript.rhino.head.Node node62 = functionNode0.setType(854392126);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-1) + "'", int1 == (-1));
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(scriptNode6);
        org.junit.Assert.assertNotNull(scriptNode10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(scriptNode18);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNull(scopeList39);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str41, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "                    {\n                    }\n" + "'", str47, "                    {\n                    }\n");
        org.junit.Assert.assertNotNull(strMap48);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1));
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertNotNull(symbolList55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "" + "'", str60, "");
        org.junit.Assert.assertNotNull(node62);
    }

    @Test
    public void test10438() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10438");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode0 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int1 = functionNode0.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = functionNode0.getTop();
        com.google.javascript.rhino.head.Node node3 = functionNode0.getLastSibling();
        com.google.javascript.rhino.head.ast.AstNode astNode4 = functionNode0.getMemberExprNode();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode5 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int6 = functionNode5.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode7 = functionNode5.getTop();
        com.google.javascript.rhino.head.ast.Name name8 = null;
        functionNode5.setFunctionName(name8);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode10 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = functionNode10.getTop();
        functionNode5.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode10);
        functionNode10.setIsExpressionClosure(true);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode16 = new com.google.javascript.rhino.head.ast.FunctionNode((int) (byte) 100);
        int int17 = functionNode10.addFunction(functionNode16);
        int int18 = functionNode0.addFunction(functionNode10);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode19 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int20 = functionNode19.getLp();
        functionNode19.setEncodedSource("");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode23 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.Scope scope25 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 10);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode26 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode27 = functionNode26.getTop();
        functionNode26.setParens((int) (byte) 1, (int) (short) 1);
        functionNode26.setEncodedSourceStart((-1));
        functionNode26.setFunctionIsGetter();
        scope25.addChildToFront((com.google.javascript.rhino.head.Node) functionNode26);
        functionNode23.setBody((com.google.javascript.rhino.head.ast.AstNode) functionNode26);
        int int36 = functionNode19.addFunction(functionNode23);
        com.google.javascript.rhino.head.ast.Symbol symbol38 = functionNode19.getSymbol("-1\tBLOCK -1 1\n");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode40 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int41 = scriptNode40.getEndLineno();
        com.google.javascript.rhino.head.ast.Symbol symbol43 = scriptNode40.getSymbol("hi!");
        scriptNode40.putIntProp(3, 0);
        functionNode19.setParent((com.google.javascript.rhino.head.ast.AstNode) scriptNode40);
        boolean boolean48 = functionNode0.isParam((com.google.javascript.rhino.head.ast.AstNode) functionNode19);
        functionNode0.clearParentScope();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-1) + "'", int1 == (-1));
        org.junit.Assert.assertNotNull(scriptNode2);
        org.junit.Assert.assertNotNull(node3);
        org.junit.Assert.assertNull(astNode4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(scriptNode7);
        org.junit.Assert.assertNotNull(scriptNode11);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertNotNull(scriptNode27);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertNull(symbol38);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertNull(symbol43);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
    }

    @Test
    public void test10439() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10439");
        com.google.javascript.rhino.head.ast.Jump jump3 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump3.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump7 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump3, 0);
        com.google.javascript.rhino.head.ast.Jump jump11 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump11.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump15 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump11, 0);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode16 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int17 = functionNode16.getLp();
        functionNode16.setEncodedSource("");
        functionNode16.flattenSymbolTable(false);
        jump3.addChildAfter((com.google.javascript.rhino.head.Node) jump11, (com.google.javascript.rhino.head.Node) functionNode16);
        int int23 = functionNode16.getLength();
        com.google.javascript.rhino.head.Node node25 = functionNode16.setType(21);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode26 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode27 = functionNode26.getTop();
        com.google.javascript.rhino.head.ast.Name name28 = null;
        functionNode26.setFunctionName(name28);
        int int30 = functionNode26.getLength();
        functionNode26.setFunctionType(19);
        functionNode16.addParam((com.google.javascript.rhino.head.ast.AstNode) functionNode26);
        functionNode16.removeProp((int) (short) 10);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode36 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int37 = functionNode36.getLp();
        functionNode36.setEncodedSource("");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode40 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int41 = functionNode40.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode42 = functionNode40.getTop();
        com.google.javascript.rhino.head.ast.Name name43 = null;
        functionNode40.setFunctionName(name43);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode45 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode46 = functionNode45.getTop();
        functionNode40.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode45);
        int int48 = functionNode45.getRp();
        int int49 = functionNode45.getFunctionType();
        functionNode36.addParam((com.google.javascript.rhino.head.ast.AstNode) functionNode45);
        com.google.javascript.rhino.head.Node node51 = functionNode36.getLastSibling();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode52 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int53 = functionNode52.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode54 = functionNode52.getTop();
        com.google.javascript.rhino.head.ast.Name name55 = null;
        functionNode52.setFunctionName(name55);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode57 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode58 = functionNode57.getTop();
        functionNode52.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode57);
        int int60 = functionNode57.getRp();
        int int61 = functionNode57.getFunctionType();
        boolean boolean62 = functionNode57.requiresActivation();
        functionNode57.setParens((int) ' ', 9);
        functionNode16.addChildAfter(node51, (com.google.javascript.rhino.head.Node) functionNode57);
        com.google.javascript.rhino.head.Node node67 = functionNode57.target;
        com.google.javascript.rhino.head.ast.AstNode astNode68 = functionNode57.getBody();
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.Node node69 = functionNode57.getContinue();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertNotNull(node25);
        org.junit.Assert.assertNotNull(scriptNode27);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 1 + "'", int30 == 1);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertNotNull(scriptNode42);
        org.junit.Assert.assertNotNull(scriptNode46);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertNotNull(node51);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
        org.junit.Assert.assertNotNull(scriptNode54);
        org.junit.Assert.assertNotNull(scriptNode58);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-1) + "'", int60 == (-1));
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 0 + "'", int61 == 0);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNull(node67);
        org.junit.Assert.assertNull(astNode68);
    }

    @Test
    public void test10440() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10440");
        com.google.javascript.rhino.head.ast.Jump jump4 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump4.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump8 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump4, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int11 = scriptNode10.getEndLineno();
        int int12 = scriptNode10.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList13 = scriptNode10.getChildScopes();
        com.google.javascript.rhino.head.Node node14 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump4, (com.google.javascript.rhino.head.Node) scriptNode10);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList15 = scriptNode10.getFunctions();
        int int16 = functionNodeList15.size();
        functionNodeList15.clear();
        int int19 = functionNodeList15.indexOf((java.lang.Object) 10L);
        java.util.Iterator<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeItor20 = functionNodeList15.iterator();
        java.util.stream.Stream<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeStream21 = functionNodeList15.stream();
        java.util.stream.Stream<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeStream22 = functionNodeList15.parallelStream();
        com.google.javascript.rhino.head.Token.CommentType commentType26 = com.google.javascript.rhino.head.Token.CommentType.HTML;
        com.google.javascript.rhino.head.ast.Comment comment28 = new com.google.javascript.rhino.head.ast.Comment(20, 1, commentType26, "109");
        java.lang.String str30 = comment28.toSource(19);
        com.google.javascript.rhino.head.ast.Scope scope33 = new com.google.javascript.rhino.head.ast.Scope((int) (short) -1, 0);
        com.google.javascript.rhino.head.Node node34 = new com.google.javascript.rhino.head.Node((int) (short) 10, (com.google.javascript.rhino.head.Node) comment28, (com.google.javascript.rhino.head.Node) scope33);
        boolean boolean35 = functionNodeList15.remove((java.lang.Object) comment28);
        java.lang.String str37 = comment28.toSource((-146877426));
        java.lang.String str39 = comment28.toSource((-13));
        java.lang.String str40 = comment28.getValue();
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNull(scopeList13);
        org.junit.Assert.assertNotNull(functionNodeList15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(functionNodeItor20);
        org.junit.Assert.assertNotNull(functionNodeStream21);
        org.junit.Assert.assertNotNull(functionNodeStream22);
        org.junit.Assert.assertTrue("'" + commentType26 + "' != '" + com.google.javascript.rhino.head.Token.CommentType.HTML + "'", commentType26.equals(com.google.javascript.rhino.head.Token.CommentType.HTML));
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "                                      109" + "'", str30, "                                      109");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "109" + "'", str37, "109");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "109" + "'", str39, "109");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "109" + "'", str40, "109");
    }

    @Test
    public void test10441() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10441");
        com.google.javascript.rhino.head.ast.RegExpLiteral regExpLiteral1 = new com.google.javascript.rhino.head.ast.RegExpLiteral((int) (short) 1);
        java.lang.String str3 = regExpLiteral1.toSource((int) (byte) 10);
        regExpLiteral1.setFlags("-1\tSCRIPT -1 1\n");
        regExpLiteral1.removeProp(8);
        java.lang.String str8 = regExpLiteral1.getValue();
        regExpLiteral1.setLineno(10);
        java.lang.String str12 = regExpLiteral1.toSource(4);
        com.google.javascript.rhino.head.ast.Scope scope13 = new com.google.javascript.rhino.head.ast.Scope();
        scope13.setBounds(0, 10);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode17 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode18 = functionNode17.getTop();
        int int19 = functionNode17.getRegexpCount();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode20 = functionNode17.getEnclosingFunction();
        java.lang.String str21 = scope13.toStringTree((com.google.javascript.rhino.head.ast.ScriptNode) functionNode17);
        java.lang.String str22 = functionNode17.shortName();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap23 = functionNode17.getSymbolTable();
        regExpLiteral1.addChildrenToBack((com.google.javascript.rhino.head.Node) functionNode17);
        regExpLiteral1.setFlags("20\tCOMMENT 20 1\n");
        com.google.javascript.rhino.head.ast.Jump jump29 = new com.google.javascript.rhino.head.ast.Jump(0, 2);
        regExpLiteral1.addChild((com.google.javascript.rhino.head.ast.AstNode) jump29);
        java.lang.String str31 = regExpLiteral1.getFlags();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "                    /null/" + "'", str3, "                    /null/");
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "        /null/-1\tSCRIPT -1 1\n" + "'", str12, "        /null/-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertNotNull(scriptNode18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNull(functionNode20);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "FunctionNode" + "'", str22, "FunctionNode");
        org.junit.Assert.assertNull(strMap23);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "20\tCOMMENT 20 1\n" + "'", str31, "20\tCOMMENT 20 1\n");
    }

    @Test
    public void test10442() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10442");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) 0);
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor2 = scriptNode1.iterator();
        org.junit.Assert.assertNotNull(nodeItor2);
    }

    @Test
    public void test10443() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10443");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode0 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int1 = functionNode0.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = functionNode0.getTop();
        com.google.javascript.rhino.head.ast.Name name3 = null;
        functionNode0.setFunctionName(name3);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode5 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = functionNode5.getTop();
        functionNode0.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode5);
        functionNode5.setIsExpressionClosure(true);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode11 = new com.google.javascript.rhino.head.ast.FunctionNode((int) (byte) 100);
        int int12 = functionNode5.addFunction(functionNode11);
        com.google.javascript.rhino.head.ast.Name name13 = null;
        functionNode5.setFunctionName(name13);
        int int15 = functionNode5.getEndLineno();
        functionNode5.setEncodedSource("136");
        java.lang.String str18 = functionNode5.getNextTempName();
        java.lang.String str19 = functionNode5.getEncodedSource();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-1) + "'", int1 == (-1));
        org.junit.Assert.assertNotNull(scriptNode2);
        org.junit.Assert.assertNotNull(scriptNode6);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "$0" + "'", str18, "$0");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "136" + "'", str19, "136");
    }

    @Test
    public void test10444() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10444");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode0 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int1 = functionNode0.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = functionNode0.getTop();
        com.google.javascript.rhino.head.ast.Name name3 = null;
        functionNode0.setFunctionName(name3);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode5 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = functionNode5.getTop();
        functionNode0.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode5);
        functionNode5.setIsExpressionClosure(true);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode11 = new com.google.javascript.rhino.head.ast.FunctionNode((int) (byte) 100);
        int int12 = functionNode5.addFunction(functionNode11);
        com.google.javascript.rhino.head.ast.Name name13 = null;
        functionNode5.setFunctionName(name13);
        int int15 = functionNode5.getEndLineno();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode17 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode18 = functionNode17.getTop();
        java.lang.String str19 = scriptNode18.getJsDoc();
        com.google.javascript.rhino.head.Node node21 = scriptNode18.setType(0);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode22 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int23 = functionNode22.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode25 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        java.lang.String str26 = functionNode22.toStringTree(scriptNode25);
        com.google.javascript.rhino.head.ast.Scope scope28 = scriptNode25.getDefiningScope("");
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList29 = scriptNode25.getSymbols();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode31 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int32 = scriptNode31.getEndLineno();
        int int33 = scriptNode31.getBaseLineno();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode25, (com.google.javascript.rhino.head.ast.Scope) scriptNode31);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode36 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int37 = scriptNode36.getEndLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode39 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int40 = scriptNode39.getEndLineno();
        scriptNode36.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode39);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode42 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int43 = functionNode42.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode44 = functionNode42.getTop();
        boolean boolean45 = functionNode42.hasSideEffects();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode47 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int48 = scriptNode47.getEndLineno();
        int int49 = scriptNode47.getBaseLineno();
        com.google.javascript.rhino.head.ast.Jump jump52 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode54 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int55 = scriptNode54.getEndLineno();
        int int56 = scriptNode54.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList57 = scriptNode54.getChildScopes();
        jump52.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode54);
        java.lang.String str59 = scriptNode54.debugPrint();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode47, (com.google.javascript.rhino.head.ast.Scope) scriptNode54);
        com.google.javascript.rhino.head.ast.Scope scope61 = new com.google.javascript.rhino.head.ast.Scope();
        scriptNode54.target = scope61;
        functionNode42.addChildScope(scope61);
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode39, (com.google.javascript.rhino.head.ast.Scope) functionNode42);
        com.google.javascript.rhino.head.Node node65 = new com.google.javascript.rhino.head.Node(20, (com.google.javascript.rhino.head.Node) scriptNode18, (com.google.javascript.rhino.head.Node) scriptNode25, (com.google.javascript.rhino.head.Node) scriptNode39);
        boolean boolean66 = scriptNode18.hasSideEffects();
        com.google.javascript.rhino.head.Node node67 = scriptNode18.target;
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList68 = scriptNode18.getStatements();
        functionNode5.setParams(astNodeList68);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str71 = functionNode5.getParamOrVarName(1579347477);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-1) + "'", int1 == (-1));
        org.junit.Assert.assertNotNull(scriptNode2);
        org.junit.Assert.assertNotNull(scriptNode6);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(scriptNode18);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNotNull(node21);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNull(scope28);
        org.junit.Assert.assertNotNull(symbolList29);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertNotNull(scriptNode44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1));
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1));
        org.junit.Assert.assertNull(scopeList57);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str59, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNull(node67);
        org.junit.Assert.assertNotNull(astNodeList68);
    }

    @Test
    public void test10445() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10445");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode0 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int1 = functionNode0.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode3 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        java.lang.String str4 = functionNode0.toStringTree(scriptNode3);
        com.google.javascript.rhino.head.ast.Scope scope6 = scriptNode3.getDefiningScope("");
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList7 = scriptNode3.getSymbols();
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor8 = scriptNode3.iterator();
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.Node node9 = scriptNode3.getContinue();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-1) + "'", int1 == (-1));
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(scope6);
        org.junit.Assert.assertNotNull(symbolList7);
        org.junit.Assert.assertNotNull(nodeItor8);
    }

    @Test
    public void test10446() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10446");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode1 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int2 = functionNode1.getLp();
        functionNode1.setEncodedSource("");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode5 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int6 = functionNode5.getLp();
        functionNode5.setEncodedSource("");
        functionNode5.flattenSymbolTable(false);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode11 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int12 = functionNode11.getLp();
        com.google.javascript.rhino.head.Node node14 = new com.google.javascript.rhino.head.Node((-1), (com.google.javascript.rhino.head.Node) functionNode1, (com.google.javascript.rhino.head.Node) functionNode5, (com.google.javascript.rhino.head.Node) functionNode11, (int) '#');
        com.google.javascript.rhino.head.ast.Comment comment15 = functionNode11.getJsDocNode();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode16 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.Scope scope18 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 10);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode19 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode20 = functionNode19.getTop();
        functionNode19.setParens((int) (byte) 1, (int) (short) 1);
        functionNode19.setEncodedSourceStart((-1));
        functionNode19.setFunctionIsGetter();
        scope18.addChildToFront((com.google.javascript.rhino.head.Node) functionNode19);
        functionNode16.setBody((com.google.javascript.rhino.head.ast.AstNode) functionNode19);
        boolean boolean29 = functionNode11.isParam((com.google.javascript.rhino.head.ast.AstNode) functionNode16);
        functionNode11.setFunctionType(13);
        functionNode11.setIsGenerator();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode33 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode34 = functionNode33.getTop();
        functionNode33.setParens((int) (byte) 1, (int) (short) 1);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode38 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.Scope scope40 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 10);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode41 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode42 = functionNode41.getTop();
        functionNode41.setParens((int) (byte) 1, (int) (short) 1);
        functionNode41.setEncodedSourceStart((-1));
        functionNode41.setFunctionIsGetter();
        scope40.addChildToFront((com.google.javascript.rhino.head.Node) functionNode41);
        functionNode38.setBody((com.google.javascript.rhino.head.ast.AstNode) functionNode41);
        functionNode38.setFunctionIsSetter();
        int int52 = functionNode33.addFunction(functionNode38);
        functionNode33.setEncodedSourceStart(1);
        functionNode11.setTop((com.google.javascript.rhino.head.ast.ScriptNode) functionNode33);
        com.google.javascript.rhino.head.Node node56 = functionNode33.getNext();
        boolean boolean57 = functionNode33.isGetterOrSetter();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNull(comment15);
        org.junit.Assert.assertNotNull(scriptNode20);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(scriptNode34);
        org.junit.Assert.assertNotNull(scriptNode42);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertNull(node56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
    }

    @Test
    public void test10447() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10447");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 10);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode2 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode3 = functionNode2.getTop();
        functionNode2.setParens((int) (byte) 1, (int) (short) 1);
        functionNode2.setEncodedSourceStart((-1));
        functionNode2.setFunctionIsGetter();
        scope1.addChildToFront((com.google.javascript.rhino.head.Node) functionNode2);
        functionNode2.setRp(19);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int15 = scriptNode14.getEndLineno();
        int int16 = scriptNode14.getBaseLineno();
        com.google.javascript.rhino.head.ast.Jump jump19 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode21 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int22 = scriptNode21.getEndLineno();
        int int23 = scriptNode21.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList24 = scriptNode21.getChildScopes();
        jump19.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode21);
        java.lang.String str26 = scriptNode21.debugPrint();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode14, (com.google.javascript.rhino.head.ast.Scope) scriptNode21);
        com.google.javascript.rhino.head.ast.Scope scope28 = new com.google.javascript.rhino.head.ast.Scope();
        scriptNode21.target = scope28;
        java.lang.String str30 = functionNode2.toStringTree(scriptNode21);
        java.lang.String str32 = scriptNode21.toSource((int) (short) 10);
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap33 = scriptNode21.getSymbolTable();
        int int34 = strMap33.size();
        com.google.javascript.rhino.head.ast.Jump jump39 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump39.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump43 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump39, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode45 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int46 = scriptNode45.getEndLineno();
        int int47 = scriptNode45.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList48 = scriptNode45.getChildScopes();
        com.google.javascript.rhino.head.Node node49 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump39, (com.google.javascript.rhino.head.Node) scriptNode45);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList50 = scriptNode45.getFunctions();
        functionNodeList50.clear();
        functionNodeList50.clear();
        com.google.javascript.rhino.head.ast.Jump jump57 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump57.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump61 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump57, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode63 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int64 = scriptNode63.getEndLineno();
        int int65 = scriptNode63.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList66 = scriptNode63.getChildScopes();
        com.google.javascript.rhino.head.Node node67 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump57, (com.google.javascript.rhino.head.Node) scriptNode63);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList68 = scriptNode63.getFunctions();
        java.util.Spliterator<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeSpliterator69 = functionNodeList68.spliterator();
        int int71 = functionNodeList68.indexOf((java.lang.Object) (byte) 10);
        boolean boolean72 = functionNodeList50.retainAll((java.util.Collection<com.google.javascript.rhino.head.ast.FunctionNode>) functionNodeList68);
        boolean boolean73 = strMap33.containsKey((java.lang.Object) functionNodeList50);
        java.util.Collection<com.google.javascript.rhino.head.ast.Symbol> symbolCollection74 = strMap33.values();
        com.google.javascript.rhino.head.Node node76 = com.google.javascript.rhino.head.Node.newNumber((double) '#');
        com.google.javascript.rhino.head.ast.Symbol symbol77 = strMap33.get((java.lang.Object) '#');
        com.google.javascript.rhino.head.ast.FunctionNode functionNode78 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int79 = functionNode78.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode80 = functionNode78.getTop();
        com.google.javascript.rhino.head.Node node81 = functionNode78.getLastSibling();
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList82 = functionNode78.getParams();
        com.google.javascript.rhino.head.ast.Symbol symbol83 = new com.google.javascript.rhino.head.ast.Symbol();
        int int84 = symbol83.getIndex();
        symbol83.setIndex(35);
        com.google.javascript.rhino.head.ast.Symbol symbol87 = strMap33.getOrDefault((java.lang.Object) functionNode78, symbol83);
        com.google.javascript.rhino.head.ast.Symbol symbol89 = new com.google.javascript.rhino.head.ast.Symbol();
        java.lang.String str90 = symbol89.getName();
        com.google.javascript.rhino.head.Node node91 = symbol89.getNode();
        java.lang.String str92 = symbol89.getDeclTypeName();
        com.google.javascript.rhino.head.ast.Scope scope93 = symbol89.getContainingTable();
        symbol89.setIndex(26);
        com.google.javascript.rhino.head.ast.Symbol symbol96 = strMap33.put("                                    /null/", symbol89);
        strMap33.clear();
        int int98 = strMap33.size();
        org.junit.Assert.assertNotNull(scriptNode3);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNull(scopeList24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str26, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "                    {\n                    }\n" + "'", str32, "                    {\n                    }\n");
        org.junit.Assert.assertNotNull(strMap33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertNull(scopeList48);
        org.junit.Assert.assertNotNull(functionNodeList50);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + (-1) + "'", int64 == (-1));
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + (-1) + "'", int65 == (-1));
        org.junit.Assert.assertNull(scopeList66);
        org.junit.Assert.assertNotNull(functionNodeList68);
        org.junit.Assert.assertNotNull(functionNodeSpliterator69);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + (-1) + "'", int71 == (-1));
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(symbolCollection74);
        org.junit.Assert.assertNotNull(node76);
        org.junit.Assert.assertNull(symbol77);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + (-1) + "'", int79 == (-1));
        org.junit.Assert.assertNotNull(scriptNode80);
        org.junit.Assert.assertNotNull(node81);
        org.junit.Assert.assertNotNull(astNodeList82);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + (-1) + "'", int84 == (-1));
        org.junit.Assert.assertNotNull(symbol87);
        org.junit.Assert.assertNull(str90);
        org.junit.Assert.assertNull(node91);
        org.junit.Assert.assertEquals("'" + str92 + "' != '" + "EOF" + "'", str92, "EOF");
        org.junit.Assert.assertNull(scope93);
        org.junit.Assert.assertNull(symbol96);
        org.junit.Assert.assertTrue("'" + int98 + "' != '" + 0 + "'", int98 == 0);
    }

    @Test
    public void test10448() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10448");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode0 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = functionNode0.getTop();
        int int2 = functionNode0.getRegexpCount();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode3 = functionNode0.getEnclosingFunction();
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList4 = functionNode0.getParams();
        com.google.javascript.rhino.head.ast.Jump jump8 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump8.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump12 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump8, 0);
        com.google.javascript.rhino.head.ast.Jump jump16 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump16.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump20 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump16, 0);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode21 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int22 = functionNode21.getLp();
        functionNode21.setEncodedSource("");
        functionNode21.flattenSymbolTable(false);
        jump8.addChildAfter((com.google.javascript.rhino.head.Node) jump16, (com.google.javascript.rhino.head.Node) functionNode21);
        int int28 = functionNode21.getPosition();
        java.util.Map<com.google.javascript.rhino.head.Node, int[]> nodeMap29 = functionNode21.getLiveLocals();
        int int30 = functionNode21.getType();
        int int31 = functionNode21.getRp();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode34 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int35 = functionNode34.getLp();
        functionNode34.setLp((int) (short) 1);
        int int40 = functionNode34.getIntProp(4, 26);
        com.google.javascript.rhino.head.ast.Jump jump41 = new com.google.javascript.rhino.head.ast.Jump(3, (com.google.javascript.rhino.head.Node) functionNode34);
        com.google.javascript.rhino.head.Node node42 = new com.google.javascript.rhino.head.Node((int) '4', (com.google.javascript.rhino.head.Node) functionNode34);
        functionNode34.setFunctionType(11);
        boolean boolean45 = functionNode34.hasChildren();
        functionNode34.setParens((-1262414679), (int) '#');
        functionNode21.addParam((com.google.javascript.rhino.head.ast.AstNode) functionNode34);
        com.google.javascript.rhino.head.ast.Scope scope51 = functionNode21.getDefiningScope("");
        boolean boolean52 = functionNode21.requiresActivation();
        functionNode0.addChildrenToFront((com.google.javascript.rhino.head.Node) functionNode21);
        int int54 = functionNode0.getLength();
        org.junit.Assert.assertNotNull(scriptNode1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNull(functionNode3);
        org.junit.Assert.assertNotNull(astNodeList4);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNull(nodeMap29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 109 + "'", int30 == 109);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 26 + "'", int40 == 26);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNull(scope51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 1 + "'", int54 == 1);
    }

    @Test
    public void test10449() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10449");
        com.google.javascript.rhino.head.ast.RegExpLiteral regExpLiteral1 = new com.google.javascript.rhino.head.ast.RegExpLiteral((-47132040));
    }

    @Test
    public void test10450() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10450");
        com.google.javascript.rhino.head.Node node2 = com.google.javascript.rhino.head.Node.newString((-603955719), "Symbol (EOF) name=<=");
        org.junit.Assert.assertNotNull(node2);
    }

    @Test
    public void test10451() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10451");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode0 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int1 = functionNode0.getLp();
        functionNode0.setEncodedSource("");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode4 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int5 = functionNode4.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = functionNode4.getTop();
        com.google.javascript.rhino.head.ast.Name name7 = null;
        functionNode4.setFunctionName(name7);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode9 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = functionNode9.getTop();
        functionNode4.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode9);
        int int12 = functionNode9.getRp();
        int int13 = functionNode9.getFunctionType();
        functionNode0.addParam((com.google.javascript.rhino.head.ast.AstNode) functionNode9);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode15 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int16 = functionNode15.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode17 = functionNode15.getTop();
        com.google.javascript.rhino.head.Node node18 = functionNode15.getLastSibling();
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList19 = functionNode15.getParams();
        functionNode0.setParams(astNodeList19);
        functionNode0.setIsExpressionClosure(true);
        int int25 = functionNode0.getIntProp(6, 4);
        java.lang.String str26 = functionNode0.toString();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode28 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode29 = functionNode28.getTop();
        com.google.javascript.rhino.head.ast.Name name30 = null;
        functionNode28.setFunctionName(name30);
        boolean boolean32 = functionNode28.requiresActivation();
        com.google.javascript.rhino.head.ast.Jump jump36 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump36.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump40 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump36, 0);
        com.google.javascript.rhino.head.ast.Jump jump44 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump44.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump48 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump44, 0);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode49 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int50 = functionNode49.getLp();
        functionNode49.setEncodedSource("");
        functionNode49.flattenSymbolTable(false);
        jump36.addChildAfter((com.google.javascript.rhino.head.Node) jump44, (com.google.javascript.rhino.head.Node) functionNode49);
        com.google.javascript.rhino.head.Node node56 = functionNode49.target;
        functionNode28.setBody((com.google.javascript.rhino.head.ast.AstNode) functionNode49);
        com.google.javascript.rhino.head.Node node59 = new com.google.javascript.rhino.head.Node(10, (com.google.javascript.rhino.head.Node) functionNode49, 10);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode60 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int61 = functionNode60.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode62 = functionNode60.getTop();
        com.google.javascript.rhino.head.ast.Name name63 = null;
        functionNode60.setFunctionName(name63);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode65 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode66 = functionNode65.getTop();
        functionNode60.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode65);
        com.google.javascript.rhino.head.ast.Scope scope70 = new com.google.javascript.rhino.head.ast.Scope((int) (short) -1, 0);
        functionNode60.replaceWith(scope70);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode72 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int73 = functionNode72.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode74 = functionNode72.getTop();
        com.google.javascript.rhino.head.ast.Name name75 = null;
        functionNode72.setFunctionName(name75);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode77 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode78 = functionNode77.getTop();
        functionNode72.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode77);
        int int80 = functionNode60.addFunction(functionNode72);
        functionNode60.flattenSymbolTable(false);
        functionNode49.setParent((com.google.javascript.rhino.head.ast.AstNode) functionNode60);
        functionNode0.setTop((com.google.javascript.rhino.head.ast.ScriptNode) functionNode49);
        com.google.javascript.rhino.head.ast.Scope scope86 = functionNode49.getDefiningScope("ScriptNode");
        functionNode49.setFunctionIsSetter();
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList88 = functionNode49.getStatements();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-1) + "'", int1 == (-1));
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(scriptNode6);
        org.junit.Assert.assertNotNull(scriptNode10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(scriptNode17);
        org.junit.Assert.assertNotNull(node18);
        org.junit.Assert.assertNotNull(astNodeList19);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 4 + "'", int25 == 4);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "109" + "'", str26, "109");
        org.junit.Assert.assertNotNull(scriptNode29);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertNull(node56);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + (-1) + "'", int61 == (-1));
        org.junit.Assert.assertNotNull(scriptNode62);
        org.junit.Assert.assertNotNull(scriptNode66);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + (-1) + "'", int73 == (-1));
        org.junit.Assert.assertNotNull(scriptNode74);
        org.junit.Assert.assertNotNull(scriptNode78);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 0 + "'", int80 == 0);
        org.junit.Assert.assertNull(scope86);
        org.junit.Assert.assertNotNull(astNodeList88);
    }

    @Test
    public void test10452() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10452");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode0 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int1 = functionNode0.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = functionNode0.getTop();
        com.google.javascript.rhino.head.ast.Name name3 = null;
        functionNode0.setFunctionName(name3);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode5 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = functionNode5.getTop();
        functionNode0.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode5);
        functionNode5.setIsExpressionClosure(true);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode11 = new com.google.javascript.rhino.head.ast.FunctionNode((int) (byte) 100);
        int int12 = functionNode5.addFunction(functionNode11);
        com.google.javascript.rhino.head.ast.Name name13 = null;
        functionNode5.setFunctionName(name13);
        functionNode5.clearParentScope();
        boolean boolean16 = functionNode5.isSetter();
        com.google.javascript.rhino.head.ast.RegExpLiteral regExpLiteral19 = new com.google.javascript.rhino.head.ast.RegExpLiteral(17, (-1110578805));
        com.google.javascript.rhino.head.ast.FunctionNode functionNode21 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int22 = functionNode21.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode23 = functionNode21.getTop();
        boolean boolean24 = functionNode21.hasSideEffects();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode26 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int27 = scriptNode26.getEndLineno();
        int int28 = scriptNode26.getBaseLineno();
        com.google.javascript.rhino.head.ast.Jump jump31 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode33 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int34 = scriptNode33.getEndLineno();
        int int35 = scriptNode33.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList36 = scriptNode33.getChildScopes();
        jump31.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode33);
        java.lang.String str38 = scriptNode33.debugPrint();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode26, (com.google.javascript.rhino.head.ast.Scope) scriptNode33);
        com.google.javascript.rhino.head.ast.Scope scope40 = new com.google.javascript.rhino.head.ast.Scope();
        scriptNode33.target = scope40;
        functionNode21.addChildScope(scope40);
        boolean boolean43 = functionNode21.hasConsistentReturnUsage();
        java.lang.String str44 = functionNode21.getNextTempName();
        com.google.javascript.rhino.head.ast.Jump jump45 = new com.google.javascript.rhino.head.ast.Jump((int) (short) -1, (com.google.javascript.rhino.head.Node) functionNode21);
        boolean boolean46 = functionNode21.isExpressionClosure();
        com.google.javascript.rhino.head.ast.RegExpLiteral regExpLiteral48 = new com.google.javascript.rhino.head.ast.RegExpLiteral((int) (short) 1);
        regExpLiteral48.setFlags("-1\tSCRIPT -1 1\n");
        regExpLiteral48.setValue("hi!");
        functionNode21.addRegExp(regExpLiteral48);
        regExpLiteral19.setParent((com.google.javascript.rhino.head.ast.AstNode) regExpLiteral48);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode55 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.Scope scope57 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 10);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode58 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode59 = functionNode58.getTop();
        functionNode58.setParens((int) (byte) 1, (int) (short) 1);
        functionNode58.setEncodedSourceStart((-1));
        functionNode58.setFunctionIsGetter();
        scope57.addChildToFront((com.google.javascript.rhino.head.Node) functionNode58);
        functionNode55.setBody((com.google.javascript.rhino.head.ast.AstNode) functionNode58);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode68 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode69 = functionNode68.getTop();
        functionNode68.setParens((int) (byte) 1, (int) (short) 1);
        functionNode68.setEncodedSourceStart((-1));
        java.util.List<com.google.javascript.rhino.head.Node> nodeList75 = functionNode68.getResumptionPoints();
        int int76 = functionNode68.getLp();
        functionNode55.setBody((com.google.javascript.rhino.head.ast.AstNode) functionNode68);
        com.google.javascript.rhino.head.Node node78 = functionNode68.getNext();
        functionNode68.clearParentScope();
        boolean boolean80 = functionNode68.hasSideEffects();
        boolean boolean81 = functionNode68.requiresActivation();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode84 = new com.google.javascript.rhino.head.ast.FunctionNode(0);
        int int85 = functionNode84.getBaseLineno();
        boolean boolean86 = functionNode84.isGetter();
        com.google.javascript.rhino.head.ast.RegExpLiteral regExpLiteral88 = new com.google.javascript.rhino.head.ast.RegExpLiteral((int) (short) 1);
        regExpLiteral88.setFlags("-1\tSCRIPT -1 1\n");
        java.lang.String str91 = regExpLiteral88.getValue();
        regExpLiteral88.setFlags("52");
        functionNode84.addChildrenToFront((com.google.javascript.rhino.head.Node) regExpLiteral88);
        com.google.javascript.rhino.head.Node node95 = new com.google.javascript.rhino.head.Node(1, (com.google.javascript.rhino.head.Node) regExpLiteral88);
        java.lang.String str96 = regExpLiteral88.shortName();
        functionNode68.addRegExp(regExpLiteral88);
        // The following exception was thrown during execution in test generation
        try {
            functionNode5.addChildBefore((com.google.javascript.rhino.head.Node) regExpLiteral48, (com.google.javascript.rhino.head.Node) functionNode68);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-1) + "'", int1 == (-1));
        org.junit.Assert.assertNotNull(scriptNode2);
        org.junit.Assert.assertNotNull(scriptNode6);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNotNull(scriptNode23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertNull(scopeList36);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str38, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "$0" + "'", str44, "$0");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(scriptNode59);
        org.junit.Assert.assertNotNull(scriptNode69);
        org.junit.Assert.assertNull(nodeList75);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 1 + "'", int76 == 1);
        org.junit.Assert.assertNull(node78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + (-1) + "'", int85 == (-1));
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertNull(str91);
        org.junit.Assert.assertEquals("'" + str96 + "' != '" + "RegExpLiteral" + "'", str96, "RegExpLiteral");
    }

    @Test
    public void test10453() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10453");
        com.google.javascript.rhino.head.ast.Jump jump4 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump4.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump8 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump4, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int11 = scriptNode10.getEndLineno();
        int int12 = scriptNode10.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList13 = scriptNode10.getChildScopes();
        com.google.javascript.rhino.head.Node node14 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump4, (com.google.javascript.rhino.head.Node) scriptNode10);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList15 = scriptNode10.getFunctions();
        functionNodeList15.clear();
        functionNodeList15.clear();
        java.util.Iterator<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeItor18 = functionNodeList15.iterator();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode19 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int20 = functionNode19.getLp();
        functionNode19.setLp((int) (short) 1);
        int int25 = functionNode19.getIntProp(4, 26);
        functionNode19.flattenSymbolTable(true);
        boolean boolean28 = functionNodeList15.equals((java.lang.Object) functionNode19);
        java.util.ListIterator<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeItor29 = functionNodeList15.listIterator();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode31 = new com.google.javascript.rhino.head.ast.FunctionNode((int) (byte) 100);
        int int32 = functionNode31.getEncodedSourceStart();
        int int33 = functionNode31.getFunctionCount();
        boolean boolean34 = functionNode31.isGetter();
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList35 = functionNode31.getFunctions();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode37 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int38 = functionNode37.getLp();
        functionNode37.setEncodedSource("");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode41 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int42 = functionNode41.getLp();
        functionNode41.setEncodedSource("");
        functionNode41.flattenSymbolTable(false);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode47 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int48 = functionNode47.getLp();
        com.google.javascript.rhino.head.Node node50 = new com.google.javascript.rhino.head.Node((-1), (com.google.javascript.rhino.head.Node) functionNode37, (com.google.javascript.rhino.head.Node) functionNode41, (com.google.javascript.rhino.head.Node) functionNode47, (int) '#');
        com.google.javascript.rhino.head.ast.Comment comment51 = functionNode47.getJsDocNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList52 = functionNode47.getSymbols();
        int int53 = functionNodeList35.lastIndexOf((java.lang.Object) symbolList52);
        boolean boolean54 = functionNodeList15.retainAll((java.util.Collection<com.google.javascript.rhino.head.ast.FunctionNode>) functionNodeList35);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ListIterator<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeItor56 = functionNodeList35.listIterator((int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: -1, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNull(scopeList13);
        org.junit.Assert.assertNotNull(functionNodeList15);
        org.junit.Assert.assertNotNull(functionNodeItor18);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 26 + "'", int25 == 26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(functionNodeItor29);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(functionNodeList35);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
        org.junit.Assert.assertNull(comment51);
        org.junit.Assert.assertNotNull(symbolList52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
    }

    @Test
    public void test10454() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10454");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode1 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int2 = functionNode1.getLp();
        functionNode1.setEncodedSource("");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode5 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int6 = functionNode5.getLp();
        functionNode5.setEncodedSource("");
        functionNode5.flattenSymbolTable(false);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode11 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int12 = functionNode11.getLp();
        com.google.javascript.rhino.head.Node node14 = new com.google.javascript.rhino.head.Node((-1), (com.google.javascript.rhino.head.Node) functionNode1, (com.google.javascript.rhino.head.Node) functionNode5, (com.google.javascript.rhino.head.Node) functionNode11, (int) '#');
        com.google.javascript.rhino.head.ast.Symbol symbol15 = new com.google.javascript.rhino.head.ast.Symbol();
        java.lang.String str16 = symbol15.getName();
        com.google.javascript.rhino.head.Node node17 = symbol15.getNode();
        java.lang.String str18 = symbol15.getDeclTypeName();
        java.lang.String str19 = symbol15.toString();
        int int20 = symbol15.getDeclType();
        com.google.javascript.rhino.head.ast.Scope scope23 = new com.google.javascript.rhino.head.ast.Scope(6, 4);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode24 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode25 = functionNode24.getTop();
        functionNode24.setParens((int) (byte) 1, (int) (short) 1);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode29 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.Scope scope31 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 10);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode32 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode33 = functionNode32.getTop();
        functionNode32.setParens((int) (byte) 1, (int) (short) 1);
        functionNode32.setEncodedSourceStart((-1));
        functionNode32.setFunctionIsGetter();
        scope31.addChildToFront((com.google.javascript.rhino.head.Node) functionNode32);
        functionNode29.setBody((com.google.javascript.rhino.head.ast.AstNode) functionNode32);
        functionNode29.setFunctionIsSetter();
        int int43 = functionNode24.addFunction(functionNode29);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode44 = functionNode29.getTop();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap45 = scriptNode44.getSymbolTable();
        int int46 = scope23.compareTo((com.google.javascript.rhino.head.ast.AstNode) scriptNode44);
        com.google.javascript.rhino.head.Node node47 = scriptNode44.getNext();
        symbol15.setContainingTable((com.google.javascript.rhino.head.ast.Scope) scriptNode44);
        com.google.javascript.rhino.head.Node node51 = com.google.javascript.rhino.head.Node.newString(14, "109");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode52 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int53 = functionNode52.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode54 = functionNode52.getTop();
        boolean boolean55 = functionNode52.hasSideEffects();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode57 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int58 = scriptNode57.getEndLineno();
        int int59 = scriptNode57.getBaseLineno();
        com.google.javascript.rhino.head.ast.Jump jump62 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode64 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int65 = scriptNode64.getEndLineno();
        int int66 = scriptNode64.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList67 = scriptNode64.getChildScopes();
        jump62.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode64);
        java.lang.String str69 = scriptNode64.debugPrint();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode57, (com.google.javascript.rhino.head.ast.Scope) scriptNode64);
        com.google.javascript.rhino.head.ast.Scope scope71 = new com.google.javascript.rhino.head.ast.Scope();
        scriptNode64.target = scope71;
        functionNode52.addChildScope(scope71);
        boolean boolean74 = functionNode52.isGetter();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode75 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int76 = functionNode75.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode77 = functionNode75.getTop();
        com.google.javascript.rhino.head.ast.Name name78 = null;
        functionNode75.setFunctionName(name78);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode80 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode81 = functionNode80.getTop();
        functionNode75.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode80);
        boolean boolean83 = functionNode80.hasChildren();
        node51.addChildAfter((com.google.javascript.rhino.head.Node) functionNode52, (com.google.javascript.rhino.head.Node) functionNode80);
        functionNode5.addChildAfter((com.google.javascript.rhino.head.Node) scriptNode44, (com.google.javascript.rhino.head.Node) functionNode52);
        java.lang.Object obj87 = functionNode5.getProp(836769294);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNull(node17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "EOF" + "'", str18, "EOF");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Symbol (EOF) name=null" + "'", str19, "Symbol (EOF) name=null");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(scriptNode25);
        org.junit.Assert.assertNotNull(scriptNode33);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertNotNull(scriptNode44);
        org.junit.Assert.assertNull(strMap45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 1 + "'", int46 == 1);
        org.junit.Assert.assertNull(node47);
        org.junit.Assert.assertNotNull(node51);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
        org.junit.Assert.assertNotNull(scriptNode54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + (-1) + "'", int58 == (-1));
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-1) + "'", int59 == (-1));
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + (-1) + "'", int65 == (-1));
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + (-1) + "'", int66 == (-1));
        org.junit.Assert.assertNull(scopeList67);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str69, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + (-1) + "'", int76 == (-1));
        org.junit.Assert.assertNotNull(scriptNode77);
        org.junit.Assert.assertNotNull(scriptNode81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNull(obj87);
    }

    @Test
    public void test10455() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10455");
        com.google.javascript.rhino.head.ast.Jump jump3 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump3.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump7 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump3, 0);
        com.google.javascript.rhino.head.ast.Jump jump11 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump11.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump15 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump11, 0);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode16 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int17 = functionNode16.getLp();
        functionNode16.setEncodedSource("");
        functionNode16.flattenSymbolTable(false);
        jump3.addChildAfter((com.google.javascript.rhino.head.Node) jump11, (com.google.javascript.rhino.head.Node) functionNode16);
        java.lang.String str23 = functionNode16.toString();
        java.lang.Object obj24 = null;
        // The following exception was thrown during execution in test generation
        try {
            functionNode16.setCompilerData(obj24);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: arg cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "109" + "'", str23, "109");
    }

    @Test
    public void test10456() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10456");
        com.google.javascript.rhino.head.ast.Symbol symbol0 = new com.google.javascript.rhino.head.ast.Symbol();
        com.google.javascript.rhino.head.Node node1 = symbol0.getNode();
        symbol0.setIndex(4);
        java.lang.String str4 = symbol0.getDeclTypeName();
        java.lang.String str5 = symbol0.toString();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode6 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int7 = functionNode6.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode8 = functionNode6.getTop();
        boolean boolean9 = functionNode6.hasSideEffects();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int12 = scriptNode11.getEndLineno();
        int int13 = scriptNode11.getBaseLineno();
        com.google.javascript.rhino.head.ast.Jump jump16 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode18 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int19 = scriptNode18.getEndLineno();
        int int20 = scriptNode18.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList21 = scriptNode18.getChildScopes();
        jump16.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode18);
        java.lang.String str23 = scriptNode18.debugPrint();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode11, (com.google.javascript.rhino.head.ast.Scope) scriptNode18);
        com.google.javascript.rhino.head.ast.Scope scope25 = new com.google.javascript.rhino.head.ast.Scope();
        scriptNode18.target = scope25;
        functionNode6.addChildScope(scope25);
        boolean boolean28 = functionNode6.isGetter();
        symbol0.setNode((com.google.javascript.rhino.head.Node) functionNode6);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode31 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int32 = functionNode31.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode33 = functionNode31.getTop();
        boolean boolean34 = functionNode31.hasSideEffects();
        java.lang.String str35 = functionNode31.toString();
        functionNode31.setParens((int) (short) 10, 8);
        com.google.javascript.rhino.head.ast.Jump jump40 = new com.google.javascript.rhino.head.ast.Jump(22, (com.google.javascript.rhino.head.Node) functionNode31, 12);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode42 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int43 = functionNode42.getLp();
        functionNode42.setEncodedSource("");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode46 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int47 = functionNode46.getLp();
        functionNode46.setEncodedSource("");
        functionNode46.flattenSymbolTable(false);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode52 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int53 = functionNode52.getLp();
        com.google.javascript.rhino.head.Node node55 = new com.google.javascript.rhino.head.Node((-1), (com.google.javascript.rhino.head.Node) functionNode42, (com.google.javascript.rhino.head.Node) functionNode46, (com.google.javascript.rhino.head.Node) functionNode52, (int) '#');
        boolean boolean56 = functionNode52.isGenerator();
        int int57 = functionNode52.getFunctionType();
        com.google.javascript.rhino.head.Node node58 = functionNode52.getFirstChild();
        boolean boolean59 = functionNode52.isGetterOrSetter();
        functionNode52.flattenSymbolTable(false);
        functionNode31.addChildScope((com.google.javascript.rhino.head.ast.Scope) functionNode52);
        functionNode52.setFunctionType((-3285918));
        int int65 = functionNode6.addFunction(functionNode52);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode66 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int67 = functionNode66.getLp();
        functionNode66.setEncodedSource("");
        boolean boolean70 = functionNode66.isExpressionClosure();
        functionNode52.target = functionNode66;
        int int72 = functionNode52.getEncodedSourceEnd();
        org.junit.Assert.assertNull(node1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "EOF" + "'", str4, "EOF");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Symbol (EOF) name=null" + "'", str5, "Symbol (EOF) name=null");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(scriptNode8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertNull(scopeList21);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str23, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNotNull(scriptNode33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "109" + "'", str35, "109");
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 0 + "'", int57 == 0);
        org.junit.Assert.assertNull(node58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 0 + "'", int65 == 0);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + (-1) + "'", int67 == (-1));
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + (-1) + "'", int72 == (-1));
    }

    @Test
    public void test10457() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10457");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        int int1 = scriptNode0.getEncodedSourceEnd();
        com.google.javascript.rhino.head.ast.Scope scope3 = new com.google.javascript.rhino.head.ast.Scope((-1));
        java.lang.String str5 = scope3.toSource((int) (byte) 1);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode6 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int7 = functionNode6.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode8 = functionNode6.getTop();
        com.google.javascript.rhino.head.ast.Name name9 = null;
        functionNode6.setFunctionName(name9);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode11 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int12 = functionNode11.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        java.lang.String str15 = functionNode11.toStringTree(scriptNode14);
        functionNode11.setFunctionIsGetter();
        int int17 = functionNode6.addFunction(functionNode11);
        boolean boolean18 = functionNode11.hasSideEffects();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode19 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int20 = functionNode19.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode21 = functionNode19.getTop();
        functionNode11.setBody((com.google.javascript.rhino.head.ast.AstNode) scriptNode21);
        scope3.setParent((com.google.javascript.rhino.head.ast.AstNode) scriptNode21);
        com.google.javascript.rhino.head.ast.Symbol symbol24 = new com.google.javascript.rhino.head.ast.Symbol();
        java.lang.String str25 = symbol24.getName();
        com.google.javascript.rhino.head.ast.Jump jump30 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump30.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump34 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump30, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode36 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int37 = scriptNode36.getEndLineno();
        int int38 = scriptNode36.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList39 = scriptNode36.getChildScopes();
        com.google.javascript.rhino.head.Node node40 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump30, (com.google.javascript.rhino.head.Node) scriptNode36);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList41 = scriptNode36.getChildScopes();
        symbol24.setContainingTable((com.google.javascript.rhino.head.ast.Scope) scriptNode36);
        com.google.javascript.rhino.head.ast.Scope scope43 = symbol24.getContainingTable();
        com.google.javascript.rhino.head.ast.Scope scope44 = symbol24.getContainingTable();
        scriptNode21.setParent((com.google.javascript.rhino.head.ast.AstNode) scope44);
        scriptNode0.setParentScope(scope44);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-1) + "'", int1 == (-1));
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "  {\n  }\n" + "'", str5, "  {\n  }\n");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(scriptNode8);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertNotNull(scriptNode21);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNull(scopeList39);
        org.junit.Assert.assertNull(scopeList41);
        org.junit.Assert.assertNotNull(scope43);
        org.junit.Assert.assertNotNull(scope44);
    }

    @Test
    public void test10458() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10458");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode0 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = functionNode0.getTop();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode3 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int4 = functionNode3.getLp();
        functionNode3.setEncodedSource("");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode7 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int8 = functionNode7.getLp();
        functionNode7.setEncodedSource("");
        functionNode7.flattenSymbolTable(false);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode13 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int14 = functionNode13.getLp();
        com.google.javascript.rhino.head.Node node16 = new com.google.javascript.rhino.head.Node((-1), (com.google.javascript.rhino.head.Node) functionNode3, (com.google.javascript.rhino.head.Node) functionNode7, (com.google.javascript.rhino.head.Node) functionNode13, (int) '#');
        com.google.javascript.rhino.head.ast.AstNode astNode17 = functionNode3.getBody();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode18 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int19 = functionNode18.getLp();
        functionNode18.setEncodedSource("");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode22 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int23 = functionNode22.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode24 = functionNode22.getTop();
        com.google.javascript.rhino.head.ast.Name name25 = null;
        functionNode22.setFunctionName(name25);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode27 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode28 = functionNode27.getTop();
        functionNode22.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode27);
        int int30 = functionNode27.getRp();
        int int31 = functionNode27.getFunctionType();
        functionNode18.addParam((com.google.javascript.rhino.head.ast.AstNode) functionNode27);
        com.google.javascript.rhino.head.ast.Scope scope33 = functionNode27.getEnclosingScope();
        functionNode3.setBody((com.google.javascript.rhino.head.ast.AstNode) functionNode27);
        int int35 = functionNode0.addFunction(functionNode3);
        java.util.List<com.google.javascript.rhino.head.Node> nodeList36 = functionNode0.getResumptionPoints();
        functionNode0.setLineno(14);
        com.google.javascript.rhino.head.ast.Jump jump45 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump45.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump49 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump45, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode51 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int52 = scriptNode51.getEndLineno();
        int int53 = scriptNode51.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList54 = scriptNode51.getChildScopes();
        com.google.javascript.rhino.head.Node node55 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump45, (com.google.javascript.rhino.head.Node) scriptNode51);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList56 = scriptNode51.getFunctions();
        int int57 = scriptNode51.getPosition();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList58 = scriptNode51.getChildScopes();
        int int59 = scriptNode51.getEncodedSourceEnd();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList60 = scriptNode51.getSymbols();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode61 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int62 = functionNode61.getLp();
        functionNode61.setEncodedSource("");
        functionNode61.flattenSymbolTable(false);
        com.google.javascript.rhino.head.ast.RegExpLiteral regExpLiteral68 = new com.google.javascript.rhino.head.ast.RegExpLiteral((int) (short) 1);
        java.lang.String str70 = regExpLiteral68.toSource((int) (byte) 10);
        regExpLiteral68.setFlags("-1\tSCRIPT -1 1\n");
        regExpLiteral68.removeProp(8);
        java.lang.String str75 = regExpLiteral68.getValue();
        com.google.javascript.rhino.head.Node node76 = new com.google.javascript.rhino.head.Node(7, (com.google.javascript.rhino.head.Node) scriptNode51, (com.google.javascript.rhino.head.Node) functionNode61, (com.google.javascript.rhino.head.Node) regExpLiteral68);
        functionNode61.flattenSymbolTable(false);
        com.google.javascript.rhino.head.ast.Jump jump79 = new com.google.javascript.rhino.head.ast.Jump(16, (com.google.javascript.rhino.head.Node) functionNode61);
        com.google.javascript.rhino.head.Node node80 = jump79.getFirstChild();
        functionNode0.addChildToFront(node80);
        com.google.javascript.rhino.head.ast.Symbol symbol82 = new com.google.javascript.rhino.head.ast.Symbol();
        java.lang.String str83 = symbol82.getDeclTypeName();
        com.google.javascript.rhino.head.ast.Scope scope84 = symbol82.getContainingTable();
        symbol82.setName("                          ");
        com.google.javascript.rhino.head.ast.Jump jump89 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        com.google.javascript.rhino.head.ast.Scope scope91 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 10);
        jump89.addChildrenToBack((com.google.javascript.rhino.head.Node) scope91);
        com.google.javascript.rhino.head.Node node93 = jump89.getLastChild();
        symbol82.setNode(node93);
        functionNode0.putSymbol(symbol82);
        com.google.javascript.rhino.head.ast.Scope scope96 = null;
        symbol82.setContainingTable(scope96);
        org.junit.Assert.assertNotNull(scriptNode1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNull(astNode17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNotNull(scriptNode24);
        org.junit.Assert.assertNotNull(scriptNode28);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNotNull(scope33);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertNull(nodeList36);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
        org.junit.Assert.assertNull(scopeList54);
        org.junit.Assert.assertNotNull(functionNodeList56);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
        org.junit.Assert.assertNull(scopeList58);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-1) + "'", int59 == (-1));
        org.junit.Assert.assertNotNull(symbolList60);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + (-1) + "'", int62 == (-1));
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "                    /null/" + "'", str70, "                    /null/");
        org.junit.Assert.assertNull(str75);
        org.junit.Assert.assertNotNull(node80);
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "EOF" + "'", str83, "EOF");
        org.junit.Assert.assertNull(scope84);
        org.junit.Assert.assertNotNull(node93);
    }

    @Test
    public void test10459() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10459");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode0 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int1 = functionNode0.getLp();
        functionNode0.setEncodedSource("");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode4 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int5 = functionNode4.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = functionNode4.getTop();
        com.google.javascript.rhino.head.ast.Name name7 = null;
        functionNode4.setFunctionName(name7);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode9 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = functionNode9.getTop();
        functionNode4.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode9);
        int int12 = functionNode9.getRp();
        int int13 = functionNode9.getFunctionType();
        functionNode0.addParam((com.google.javascript.rhino.head.ast.AstNode) functionNode9);
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator15 = functionNode9.new NodeIterator();
        boolean boolean16 = nodeIterator15.hasNext();
        boolean boolean17 = nodeIterator15.hasNext();
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.Node node18 = nodeIterator15.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-1) + "'", int1 == (-1));
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(scriptNode6);
        org.junit.Assert.assertNotNull(scriptNode10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    }

    @Test
    public void test10460() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10460");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode0 = new com.google.javascript.rhino.head.ast.FunctionNode();
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList1 = functionNode0.getFunctions();
        java.util.stream.Stream<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeStream2 = functionNodeList1.parallelStream();
        java.lang.Object[] objArray3 = functionNodeList1.toArray();
        com.google.javascript.rhino.head.ast.Jump jump8 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump8.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump12 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump8, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int15 = scriptNode14.getEndLineno();
        int int16 = scriptNode14.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList17 = scriptNode14.getChildScopes();
        com.google.javascript.rhino.head.Node node18 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump8, (com.google.javascript.rhino.head.Node) scriptNode14);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList19 = scriptNode14.getFunctions();
        java.util.Spliterator<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeSpliterator20 = functionNodeList19.spliterator();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode22 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int23 = scriptNode22.getEndLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode25 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int26 = scriptNode25.getEndLineno();
        scriptNode22.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode25);
        java.lang.String str28 = scriptNode22.getNextTempName();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode29 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.AstNode astNode30 = functionNode29.getParent();
        scriptNode22.setParentScope((com.google.javascript.rhino.head.ast.Scope) functionNode29);
        int int32 = functionNodeList19.lastIndexOf((java.lang.Object) scriptNode22);
        boolean boolean33 = functionNodeList1.containsAll((java.util.Collection<com.google.javascript.rhino.head.ast.FunctionNode>) functionNodeList19);
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.ast.FunctionNode functionNode35 = functionNodeList1.remove(136);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(functionNodeList1);
        org.junit.Assert.assertNotNull(functionNodeStream2);
        org.junit.Assert.assertNotNull(objArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray3), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray3), "[]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNull(scopeList17);
        org.junit.Assert.assertNotNull(functionNodeList19);
        org.junit.Assert.assertNotNull(functionNodeSpliterator20);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "$0" + "'", str28, "$0");
        org.junit.Assert.assertNull(astNode30);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
    }

    @Test
    public void test10461() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10461");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode0 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int1 = functionNode0.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = functionNode0.getTop();
        com.google.javascript.rhino.head.ast.Name name3 = null;
        functionNode0.setFunctionName(name3);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode5 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = functionNode5.getTop();
        functionNode0.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode5);
        functionNode5.setIsExpressionClosure(true);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode11 = new com.google.javascript.rhino.head.ast.FunctionNode((int) (byte) 100);
        int int12 = functionNode5.addFunction(functionNode11);
        com.google.javascript.rhino.head.ast.Name name13 = null;
        functionNode5.setFunctionName(name13);
        int int15 = functionNode5.getEndLineno();
        functionNode5.setEncodedSource("136");
        java.lang.String str18 = functionNode5.getNextTempName();
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.ast.Scope scope19 = functionNode5.getScope();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: com.google.javascript.rhino.head.ast.FunctionNode cannot be cast to com.google.javascript.rhino.head.ast.Name");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-1) + "'", int1 == (-1));
        org.junit.Assert.assertNotNull(scriptNode2);
        org.junit.Assert.assertNotNull(scriptNode6);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "$0" + "'", str18, "$0");
    }

    @Test
    public void test10462() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10462");
        com.google.javascript.rhino.head.ast.Jump jump4 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump4.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump8 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump4, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int11 = scriptNode10.getEndLineno();
        int int12 = scriptNode10.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList13 = scriptNode10.getChildScopes();
        com.google.javascript.rhino.head.Node node14 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump4, (com.google.javascript.rhino.head.Node) scriptNode10);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList15 = scriptNode10.getFunctions();
        functionNodeList15.clear();
        com.google.javascript.rhino.head.ast.Jump jump21 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump21.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump25 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump21, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode27 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int28 = scriptNode27.getEndLineno();
        int int29 = scriptNode27.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList30 = scriptNode27.getChildScopes();
        com.google.javascript.rhino.head.Node node31 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump21, (com.google.javascript.rhino.head.Node) scriptNode27);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList32 = scriptNode27.getFunctions();
        boolean boolean33 = functionNodeList15.removeAll((java.util.Collection<com.google.javascript.rhino.head.ast.FunctionNode>) functionNodeList32);
        java.util.Spliterator<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeSpliterator34 = functionNodeList15.spliterator();
        boolean boolean35 = functionNodeList15.isEmpty();
        java.util.Spliterator<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeSpliterator36 = functionNodeList15.spliterator();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode37 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode38 = functionNode37.getTop();
        com.google.javascript.rhino.head.ast.Name name39 = null;
        functionNode37.setFunctionName(name39);
        boolean boolean41 = functionNode37.requiresActivation();
        com.google.javascript.rhino.head.ast.RegExpLiteral regExpLiteral43 = new com.google.javascript.rhino.head.ast.RegExpLiteral((int) (short) 1);
        java.lang.String str45 = regExpLiteral43.toSource((int) (byte) 10);
        regExpLiteral43.setFlags("-1\tSCRIPT -1 1\n");
        regExpLiteral43.removeProp(8);
        java.lang.String str50 = regExpLiteral43.getValue();
        regExpLiteral43.setLineno(10);
        regExpLiteral43.removeChildren();
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor54 = regExpLiteral43.iterator();
        functionNode37.addRegExp(regExpLiteral43);
        int int56 = functionNode37.getRp();
        boolean boolean57 = functionNodeList15.contains((java.lang.Object) functionNode37);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode58 = functionNode37.getTop();
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.Node node59 = scriptNode58.getFinally();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNull(scopeList13);
        org.junit.Assert.assertNotNull(functionNodeList15);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertNull(scopeList30);
        org.junit.Assert.assertNotNull(functionNodeList32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(functionNodeSpliterator34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(functionNodeSpliterator36);
        org.junit.Assert.assertNotNull(scriptNode38);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "                    /null/" + "'", str45, "                    /null/");
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertNotNull(nodeItor54);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1));
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(scriptNode58);
    }

    @Test
    public void test10463() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10463");
        com.google.javascript.rhino.head.ast.RegExpLiteral regExpLiteral2 = new com.google.javascript.rhino.head.ast.RegExpLiteral(1579347477, 0);
        com.google.javascript.rhino.head.ast.AstNode astNode3 = regExpLiteral2.getParent();
        regExpLiteral2.setValue("$1");
        org.junit.Assert.assertNull(astNode3);
    }

    @Test
    public void test10464() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10464");
        com.google.javascript.rhino.head.ast.Jump jump4 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump4.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump8 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump4, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int11 = scriptNode10.getEndLineno();
        int int12 = scriptNode10.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList13 = scriptNode10.getChildScopes();
        com.google.javascript.rhino.head.Node node14 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump4, (com.google.javascript.rhino.head.Node) scriptNode10);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList15 = scriptNode10.getFunctions();
        functionNodeList15.clear();
        com.google.javascript.rhino.head.ast.Jump jump21 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump21.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump25 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump21, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode27 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int28 = scriptNode27.getEndLineno();
        int int29 = scriptNode27.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList30 = scriptNode27.getChildScopes();
        com.google.javascript.rhino.head.Node node31 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump21, (com.google.javascript.rhino.head.Node) scriptNode27);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList32 = scriptNode27.getFunctions();
        functionNodeList32.clear();
        boolean boolean34 = functionNodeList15.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.FunctionNode>) functionNodeList32);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode35 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode36 = functionNode35.getTop();
        boolean boolean37 = functionNodeList15.contains((java.lang.Object) scriptNode36);
        scriptNode36.setEncodedSourceEnd((-952910496));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNull(scopeList13);
        org.junit.Assert.assertNotNull(functionNodeList15);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertNull(scopeList30);
        org.junit.Assert.assertNotNull(functionNodeList32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(scriptNode36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
    }

    @Test
    public void test10465() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10465");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode(136);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode2 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode3 = functionNode2.getTop();
        functionNode2.setParens((int) (byte) 1, (int) (short) 1);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode7 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.Scope scope9 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 10);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode10 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = functionNode10.getTop();
        functionNode10.setParens((int) (byte) 1, (int) (short) 1);
        functionNode10.setEncodedSourceStart((-1));
        functionNode10.setFunctionIsGetter();
        scope9.addChildToFront((com.google.javascript.rhino.head.Node) functionNode10);
        functionNode7.setBody((com.google.javascript.rhino.head.ast.AstNode) functionNode10);
        functionNode7.setFunctionIsSetter();
        int int21 = functionNode2.addFunction(functionNode7);
        boolean boolean22 = functionNode7.isGenerator();
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList23 = functionNode7.getFunctions();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode24 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode25 = functionNode24.getTop();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode27 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int28 = functionNode27.getLp();
        functionNode27.setEncodedSource("");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode31 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int32 = functionNode31.getLp();
        functionNode31.setEncodedSource("");
        functionNode31.flattenSymbolTable(false);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode37 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int38 = functionNode37.getLp();
        com.google.javascript.rhino.head.Node node40 = new com.google.javascript.rhino.head.Node((-1), (com.google.javascript.rhino.head.Node) functionNode27, (com.google.javascript.rhino.head.Node) functionNode31, (com.google.javascript.rhino.head.Node) functionNode37, (int) '#');
        com.google.javascript.rhino.head.ast.AstNode astNode41 = functionNode27.getBody();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode42 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int43 = functionNode42.getLp();
        functionNode42.setEncodedSource("");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode46 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int47 = functionNode46.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode48 = functionNode46.getTop();
        com.google.javascript.rhino.head.ast.Name name49 = null;
        functionNode46.setFunctionName(name49);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode51 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode52 = functionNode51.getTop();
        functionNode46.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode51);
        int int54 = functionNode51.getRp();
        int int55 = functionNode51.getFunctionType();
        functionNode42.addParam((com.google.javascript.rhino.head.ast.AstNode) functionNode51);
        com.google.javascript.rhino.head.ast.Scope scope57 = functionNode51.getEnclosingScope();
        functionNode27.setBody((com.google.javascript.rhino.head.ast.AstNode) functionNode51);
        int int59 = functionNode24.addFunction(functionNode27);
        com.google.javascript.rhino.head.Token.CommentType commentType62 = com.google.javascript.rhino.head.Token.CommentType.HTML;
        com.google.javascript.rhino.head.ast.Comment comment64 = new com.google.javascript.rhino.head.ast.Comment(20, 1, commentType62, "109");
        java.lang.String str66 = comment64.toSource(19);
        com.google.javascript.rhino.head.Token.CommentType commentType67 = comment64.getCommentType();
        int int68 = comment64.getLineno();
        functionNode27.addChildToFront((com.google.javascript.rhino.head.Node) comment64);
        java.lang.String str70 = comment64.getValue();
        functionNode7.setJsDocNode(comment64);
        java.lang.String str72 = comment64.getValue();
        scriptNode1.setCompilerData((java.lang.Object) str72);
        java.lang.String str75 = scriptNode1.makeIndent(20);
        org.junit.Assert.assertNotNull(scriptNode3);
        org.junit.Assert.assertNotNull(scriptNode11);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(functionNodeList23);
        org.junit.Assert.assertNotNull(scriptNode25);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNull(astNode41);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertNotNull(scriptNode48);
        org.junit.Assert.assertNotNull(scriptNode52);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertNotNull(scope57);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
        org.junit.Assert.assertTrue("'" + commentType62 + "' != '" + com.google.javascript.rhino.head.Token.CommentType.HTML + "'", commentType62.equals(com.google.javascript.rhino.head.Token.CommentType.HTML));
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "                                      109" + "'", str66, "                                      109");
        org.junit.Assert.assertTrue("'" + commentType67 + "' != '" + com.google.javascript.rhino.head.Token.CommentType.HTML + "'", commentType67.equals(com.google.javascript.rhino.head.Token.CommentType.HTML));
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + (-1) + "'", int68 == (-1));
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "109" + "'", str70, "109");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "109" + "'", str72, "109");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "                                        " + "'", str75, "                                        ");
    }

    @Test
    public void test10466() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10466");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode0 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int1 = functionNode0.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = functionNode0.getTop();
        com.google.javascript.rhino.head.ast.Name name3 = null;
        functionNode0.setFunctionName(name3);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode5 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = functionNode5.getTop();
        functionNode0.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode5);
        com.google.javascript.rhino.head.ast.Scope scope10 = new com.google.javascript.rhino.head.ast.Scope((int) (short) -1, 0);
        functionNode0.replaceWith(scope10);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode12 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int13 = functionNode12.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = functionNode12.getTop();
        com.google.javascript.rhino.head.ast.Name name15 = null;
        functionNode12.setFunctionName(name15);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode17 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode18 = functionNode17.getTop();
        functionNode12.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode17);
        int int20 = functionNode0.addFunction(functionNode12);
        functionNode0.flattenSymbolTable(false);
        boolean boolean23 = functionNode0.isGenerator();
        int int24 = functionNode0.getParamAndVarCount();
        functionNode0.setSourceName("                                                                      /null/-1\tSCRIPT -1 1\n");
        int int27 = functionNode0.getRp();
        java.lang.String str28 = functionNode0.toString();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-1) + "'", int1 == (-1));
        org.junit.Assert.assertNotNull(scriptNode2);
        org.junit.Assert.assertNotNull(scriptNode6);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(scriptNode14);
        org.junit.Assert.assertNotNull(scriptNode18);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "109" + "'", str28, "109");
    }

    @Test
    public void test10467() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10467");
        com.google.javascript.rhino.head.ast.Jump jump2 = new com.google.javascript.rhino.head.ast.Jump((-816165888), 101);
    }

    @Test
    public void test10468() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10468");
        com.google.javascript.rhino.head.ast.Jump jump5 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump5.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump9 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump5, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int12 = scriptNode11.getEndLineno();
        int int13 = scriptNode11.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList14 = scriptNode11.getChildScopes();
        com.google.javascript.rhino.head.Node node15 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump5, (com.google.javascript.rhino.head.Node) scriptNode11);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode16 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int17 = functionNode16.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode18 = functionNode16.getTop();
        com.google.javascript.rhino.head.Node node19 = functionNode16.getLastSibling();
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList20 = functionNode16.getParams();
        com.google.javascript.rhino.head.Node node22 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump5, (com.google.javascript.rhino.head.Node) functionNode16, 3);
        functionNode16.setSourceName("            {\n            }\n");
        int int25 = functionNode16.getEncodedSourceStart();
        com.google.javascript.rhino.head.Node node26 = functionNode16.getNext();
        int int27 = functionNode16.getLp();
        boolean boolean28 = functionNode16.isSetter();
        functionNode16.setRequiresActivation();
        functionNode16.setParens(1590262715, 1724962859);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNull(scopeList14);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNotNull(scriptNode18);
        org.junit.Assert.assertNotNull(node19);
        org.junit.Assert.assertNotNull(astNodeList20);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNull(node26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
    }

    @Test
    public void test10469() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10469");
        com.google.javascript.rhino.head.ast.RegExpLiteral regExpLiteral1 = new com.google.javascript.rhino.head.ast.RegExpLiteral((int) (short) 1);
        java.lang.String str3 = regExpLiteral1.toSource((int) (byte) 10);
        regExpLiteral1.setFlags("-1\tSCRIPT -1 1\n");
        java.lang.String str7 = regExpLiteral1.toSource((int) (short) -1);
        regExpLiteral1.setFlags("EOF");
        java.lang.String str11 = regExpLiteral1.makeIndent(10);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode13 = new com.google.javascript.rhino.head.ast.FunctionNode((-1));
        boolean boolean14 = functionNode13.isExpressionClosure();
        int int15 = regExpLiteral1.compareTo((com.google.javascript.rhino.head.ast.AstNode) functionNode13);
        java.lang.String str17 = regExpLiteral1.toSource((int) (byte) 0);
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator18 = regExpLiteral1.spliterator();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "                    /null/" + "'", str3, "                    /null/");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "/null/-1\tSCRIPT -1 1\n" + "'", str7, "/null/-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "                    " + "'", str11, "                    ");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "/null/EOF" + "'", str17, "/null/EOF");
        org.junit.Assert.assertNotNull(nodeSpliterator18);
    }

    @Test
    public void test10470() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10470");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode0 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = functionNode0.getTop();
        functionNode0.setParens((int) (byte) 1, (int) (short) 1);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode5 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.Scope scope7 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 10);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode8 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode9 = functionNode8.getTop();
        functionNode8.setParens((int) (byte) 1, (int) (short) 1);
        functionNode8.setEncodedSourceStart((-1));
        functionNode8.setFunctionIsGetter();
        scope7.addChildToFront((com.google.javascript.rhino.head.Node) functionNode8);
        functionNode5.setBody((com.google.javascript.rhino.head.ast.AstNode) functionNode8);
        functionNode5.setFunctionIsSetter();
        int int19 = functionNode0.addFunction(functionNode5);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode20 = functionNode5.getTop();
        int int21 = functionNode5.getEndLineno();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String[] strArray22 = functionNode5.getParamAndVarNames();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(scriptNode1);
        org.junit.Assert.assertNotNull(scriptNode9);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(scriptNode20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
    }

    @Test
    public void test10471() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10471");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode0 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int1 = functionNode0.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = functionNode0.getTop();
        com.google.javascript.rhino.head.ast.AstNode astNode3 = functionNode0.getBody();
        int int4 = functionNode0.getLength();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap5 = null;
        functionNode0.setSymbolTable(strMap5);
        int int7 = functionNode0.getEndLineno();
        com.google.javascript.rhino.head.ast.Symbol symbol8 = null;
        // The following exception was thrown during execution in test generation
        try {
            functionNode0.putSymbol(symbol8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-1) + "'", int1 == (-1));
        org.junit.Assert.assertNotNull(scriptNode2);
        org.junit.Assert.assertNull(astNode3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 1 + "'", int4 == 1);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
    }

    @Test
    public void test10472() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10472");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int3 = scriptNode2.getEndLineno();
        com.google.javascript.rhino.head.ast.Scope scope4 = scriptNode2.getParentScope();
        scriptNode2.setPosition(1);
        java.lang.String str8 = scriptNode2.toSource(100);
        com.google.javascript.rhino.head.Node node10 = new com.google.javascript.rhino.head.Node(817068741, (com.google.javascript.rhino.head.Node) scriptNode2, 796955);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNull(scope4);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "                                                                                                                                                                                                        {\n                                                                                                                                                                                                        }\n" + "'", str8, "                                                                                                                                                                                                        {\n                                                                                                                                                                                                        }\n");
    }

    @Test
    public void test10473() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10473");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode0 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int1 = functionNode0.getLp();
        functionNode0.setEncodedSource("");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode4 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int5 = functionNode4.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = functionNode4.getTop();
        com.google.javascript.rhino.head.ast.Name name7 = null;
        functionNode4.setFunctionName(name7);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode9 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = functionNode9.getTop();
        functionNode4.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode9);
        int int12 = functionNode9.getRp();
        int int13 = functionNode9.getFunctionType();
        functionNode0.addParam((com.google.javascript.rhino.head.ast.AstNode) functionNode9);
        com.google.javascript.rhino.head.ast.Scope scope15 = functionNode9.getEnclosingScope();
        functionNode9.putProp((-1110578805), (java.lang.Object) "                                /null/");
        functionNode9.setEndLineno(14);
        com.google.javascript.rhino.head.ast.AstNode astNode21 = functionNode9.getParent();
        com.google.javascript.rhino.head.ast.Jump jump27 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump27.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump31 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump27, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode33 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int34 = scriptNode33.getEndLineno();
        int int35 = scriptNode33.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList36 = scriptNode33.getChildScopes();
        com.google.javascript.rhino.head.Node node37 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump27, (com.google.javascript.rhino.head.Node) scriptNode33);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList38 = scriptNode33.getFunctions();
        int int39 = scriptNode33.getPosition();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList40 = scriptNode33.getChildScopes();
        int int41 = scriptNode33.getEncodedSourceEnd();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList42 = scriptNode33.getSymbols();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode43 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int44 = functionNode43.getLp();
        functionNode43.setEncodedSource("");
        functionNode43.flattenSymbolTable(false);
        com.google.javascript.rhino.head.ast.RegExpLiteral regExpLiteral50 = new com.google.javascript.rhino.head.ast.RegExpLiteral((int) (short) 1);
        java.lang.String str52 = regExpLiteral50.toSource((int) (byte) 10);
        regExpLiteral50.setFlags("-1\tSCRIPT -1 1\n");
        regExpLiteral50.removeProp(8);
        java.lang.String str57 = regExpLiteral50.getValue();
        com.google.javascript.rhino.head.Node node58 = new com.google.javascript.rhino.head.Node(7, (com.google.javascript.rhino.head.Node) scriptNode33, (com.google.javascript.rhino.head.Node) functionNode43, (com.google.javascript.rhino.head.Node) regExpLiteral50);
        com.google.javascript.rhino.head.ast.AstNode astNode59 = null;
        regExpLiteral50.setParent(astNode59);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode62 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode63 = functionNode62.getTop();
        com.google.javascript.rhino.head.ast.Name name64 = null;
        functionNode62.setFunctionName(name64);
        boolean boolean66 = functionNode62.requiresActivation();
        com.google.javascript.rhino.head.ast.Jump jump70 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump70.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump74 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump70, 0);
        com.google.javascript.rhino.head.ast.Jump jump78 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump78.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump82 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump78, 0);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode83 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int84 = functionNode83.getLp();
        functionNode83.setEncodedSource("");
        functionNode83.flattenSymbolTable(false);
        jump70.addChildAfter((com.google.javascript.rhino.head.Node) jump78, (com.google.javascript.rhino.head.Node) functionNode83);
        com.google.javascript.rhino.head.Node node90 = functionNode83.target;
        functionNode62.setBody((com.google.javascript.rhino.head.ast.AstNode) functionNode83);
        com.google.javascript.rhino.head.Node node93 = new com.google.javascript.rhino.head.Node(10, (com.google.javascript.rhino.head.Node) functionNode83, 10);
        com.google.javascript.rhino.head.Node node94 = node93.getFirstChild();
        functionNode9.addChildAfter((com.google.javascript.rhino.head.Node) regExpLiteral50, node94);
        com.google.javascript.rhino.head.ast.AstRoot astRoot96 = functionNode9.getAstRoot();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-1) + "'", int1 == (-1));
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(scriptNode6);
        org.junit.Assert.assertNotNull(scriptNode10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(scope15);
        org.junit.Assert.assertNotNull(astNode21);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertNull(scopeList36);
        org.junit.Assert.assertNotNull(functionNodeList38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertNull(scopeList40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertNotNull(symbolList42);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "                    /null/" + "'", str52, "                    /null/");
        org.junit.Assert.assertNull(str57);
        org.junit.Assert.assertNotNull(scriptNode63);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + (-1) + "'", int84 == (-1));
        org.junit.Assert.assertNull(node90);
        org.junit.Assert.assertNotNull(node94);
        org.junit.Assert.assertNull(astRoot96);
    }

    @Test
    public void test10474() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10474");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode0 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int1 = functionNode0.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = functionNode0.getTop();
        boolean boolean3 = functionNode0.hasSideEffects();
        java.lang.String str4 = functionNode0.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = functionNode0.getTop();
        com.google.javascript.rhino.head.ast.Scope scope6 = functionNode0.getEnclosingScope();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-1) + "'", int1 == (-1));
        org.junit.Assert.assertNotNull(scriptNode2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "109" + "'", str4, "109");
        org.junit.Assert.assertNotNull(scriptNode5);
        org.junit.Assert.assertNull(scope6);
    }

    @Test
    public void test10475() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10475");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode0 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int1 = functionNode0.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = functionNode0.getTop();
        boolean boolean3 = functionNode0.hasSideEffects();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int6 = scriptNode5.getEndLineno();
        int int7 = scriptNode5.getBaseLineno();
        com.google.javascript.rhino.head.ast.Jump jump10 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode12 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int13 = scriptNode12.getEndLineno();
        int int14 = scriptNode12.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList15 = scriptNode12.getChildScopes();
        jump10.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode12);
        java.lang.String str17 = scriptNode12.debugPrint();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode5, (com.google.javascript.rhino.head.ast.Scope) scriptNode12);
        com.google.javascript.rhino.head.ast.Scope scope19 = new com.google.javascript.rhino.head.ast.Scope();
        scriptNode12.target = scope19;
        functionNode0.addChildScope(scope19);
        java.lang.String str22 = scope19.debugPrint();
        boolean boolean23 = scope19.hasSideEffects();
        int int24 = scope19.getAbsolutePosition();
        scope19.clearParentScope();
        java.lang.String str26 = scope19.getJsDoc();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-1) + "'", int1 == (-1));
        org.junit.Assert.assertNotNull(scriptNode2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNull(scopeList15);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str17, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "-1\tBLOCK -1 1\n" + "'", str22, "-1\tBLOCK -1 1\n");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertNull(str26);
    }

    @Test
    public void test10476() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10476");
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope(7, (-352611807));
    }

    @Test
    public void test10477() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10477");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int3 = scriptNode2.getEndLineno();
        com.google.javascript.rhino.head.ast.Symbol symbol4 = new com.google.javascript.rhino.head.ast.Symbol();
        java.lang.String str5 = symbol4.getName();
        com.google.javascript.rhino.head.Node node6 = symbol4.getNode();
        com.google.javascript.rhino.head.ast.Jump jump8 = new com.google.javascript.rhino.head.ast.Jump((int) ' ');
        symbol4.setNode((com.google.javascript.rhino.head.Node) jump8);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode11 = new com.google.javascript.rhino.head.ast.FunctionNode(0);
        int int12 = functionNode11.getBaseLineno();
        functionNode11.setSourceName("                                                                                                                                                                                                        /null/");
        symbol4.setContainingTable((com.google.javascript.rhino.head.ast.Scope) functionNode11);
        int int16 = functionNode11.getLp();
        int int17 = functionNode11.getType();
        java.lang.String str18 = scriptNode2.toStringTree((com.google.javascript.rhino.head.ast.ScriptNode) functionNode11);
        com.google.javascript.rhino.head.ast.AstNode astNode19 = functionNode11.getBody();
        java.lang.String str20 = functionNode11.getSourceName();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode22 = new com.google.javascript.rhino.head.ast.ScriptNode((-616130778));
        int int23 = scriptNode22.getLength();
        scriptNode22.setEndLineno((int) ' ');
        com.google.javascript.rhino.head.ast.RegExpLiteral regExpLiteral27 = new com.google.javascript.rhino.head.ast.RegExpLiteral((int) '#');
        java.lang.String str28 = regExpLiteral27.shortName();
        regExpLiteral27.setFlags("-1\tBLOCK -1 1\n");
        regExpLiteral27.setFlags("                                            {\n                                            }\n");
        regExpLiteral27.setFlags("                          ");
        int int37 = regExpLiteral27.getIntProp(15, (int) '#');
        com.google.javascript.rhino.head.Node node39 = new com.google.javascript.rhino.head.Node((int) '#', (com.google.javascript.rhino.head.Node) functionNode11, (com.google.javascript.rhino.head.Node) scriptNode22, (com.google.javascript.rhino.head.Node) regExpLiteral27, (int) (byte) 10);
        int int40 = functionNode11.getFunctionCount();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(node6);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 109 + "'", int17 == 109);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(astNode19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "                                                                                                                                                                                                        /null/" + "'", str20, "                                                                                                                                                                                                        /null/");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "RegExpLiteral" + "'", str28, "RegExpLiteral");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 35 + "'", int37 == 35);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
    }

    @Test
    public void test10478() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10478");
        com.google.javascript.rhino.head.ast.Jump jump4 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump4.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump8 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump4, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int11 = scriptNode10.getEndLineno();
        int int12 = scriptNode10.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList13 = scriptNode10.getChildScopes();
        com.google.javascript.rhino.head.Node node14 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump4, (com.google.javascript.rhino.head.Node) scriptNode10);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList15 = scriptNode10.getFunctions();
        int int16 = functionNodeList15.size();
        com.google.javascript.rhino.head.ast.Jump jump22 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump22.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump26 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump22, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode28 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int29 = scriptNode28.getEndLineno();
        int int30 = scriptNode28.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList31 = scriptNode28.getChildScopes();
        com.google.javascript.rhino.head.Node node32 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump22, (com.google.javascript.rhino.head.Node) scriptNode28);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList33 = scriptNode28.getFunctions();
        functionNodeList33.clear();
        com.google.javascript.rhino.head.ast.Jump jump39 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump39.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump43 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump39, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode45 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int46 = scriptNode45.getEndLineno();
        int int47 = scriptNode45.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList48 = scriptNode45.getChildScopes();
        com.google.javascript.rhino.head.Node node49 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump39, (com.google.javascript.rhino.head.Node) scriptNode45);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList50 = scriptNode45.getFunctions();
        boolean boolean51 = functionNodeList33.removeAll((java.util.Collection<com.google.javascript.rhino.head.ast.FunctionNode>) functionNodeList50);
        boolean boolean52 = functionNodeList15.addAll(0, (java.util.Collection<com.google.javascript.rhino.head.ast.FunctionNode>) functionNodeList33);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode54 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int55 = scriptNode54.getEndLineno();
        com.google.javascript.rhino.head.ast.Symbol symbol57 = scriptNode54.getSymbol("hi!");
        java.lang.String str58 = scriptNode54.getEncodedSource();
        boolean boolean59 = functionNodeList33.remove((java.lang.Object) scriptNode54);
        java.lang.Object[] objArray60 = functionNodeList33.toArray();
        java.util.ListIterator<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeItor61 = functionNodeList33.listIterator();
        java.util.stream.Stream<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeStream62 = functionNodeList33.parallelStream();
        java.lang.Object[] objArray63 = functionNodeList33.toArray();
        functionNodeList33.clear();
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNull(scopeList13);
        org.junit.Assert.assertNotNull(functionNodeList15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertNull(scopeList31);
        org.junit.Assert.assertNotNull(functionNodeList33);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertNull(scopeList48);
        org.junit.Assert.assertNotNull(functionNodeList50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1));
        org.junit.Assert.assertNull(symbol57);
        org.junit.Assert.assertNull(str58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(objArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray60), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray60), "[]");
        org.junit.Assert.assertNotNull(functionNodeItor61);
        org.junit.Assert.assertNotNull(functionNodeStream62);
        org.junit.Assert.assertNotNull(objArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray63), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray63), "[]");
    }

    @Test
    public void test10479() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10479");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode1 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int2 = functionNode1.getLp();
        functionNode1.setEncodedSource("");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode5 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int6 = functionNode5.getLp();
        functionNode5.setEncodedSource("");
        functionNode5.flattenSymbolTable(false);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode11 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int12 = functionNode11.getLp();
        com.google.javascript.rhino.head.Node node14 = new com.google.javascript.rhino.head.Node((-1), (com.google.javascript.rhino.head.Node) functionNode1, (com.google.javascript.rhino.head.Node) functionNode5, (com.google.javascript.rhino.head.Node) functionNode11, (int) '#');
        functionNode11.setEncodedSourceStart(25);
        boolean boolean17 = functionNode11.requiresActivation();
        java.lang.String str18 = functionNode11.getNextTempName();
        int int19 = functionNode11.getRegexpCount();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "$0" + "'", str18, "$0");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
    }

    @Test
    public void test10480() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10480");
        com.google.javascript.rhino.head.ast.RegExpLiteral regExpLiteral2 = new com.google.javascript.rhino.head.ast.RegExpLiteral(21, (-544960523));
        regExpLiteral2.setValue("                Symbol (EOF) name=null line=-1");
        regExpLiteral2.putIntProp(652386645, (-324184714));
    }

    @Test
    public void test10481() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10481");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode0 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int1 = functionNode0.getLp();
        com.google.javascript.rhino.head.ast.Name name2 = functionNode0.getFunctionName();
        functionNode0.setRp(796955);
        functionNode0.setIsGenerator();
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.ast.Jump jump6 = functionNode0.getJumpStatement();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-1) + "'", int1 == (-1));
        org.junit.Assert.assertNull(name2);
    }

    @Test
    public void test10482() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10482");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode2 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int3 = functionNode2.getLp();
        functionNode2.setEncodedSource("");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode6 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int7 = functionNode6.getLp();
        functionNode6.setEncodedSource("");
        functionNode6.flattenSymbolTable(false);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode12 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int13 = functionNode12.getLp();
        com.google.javascript.rhino.head.Node node15 = new com.google.javascript.rhino.head.Node((-1), (com.google.javascript.rhino.head.Node) functionNode2, (com.google.javascript.rhino.head.Node) functionNode6, (com.google.javascript.rhino.head.Node) functionNode12, (int) '#');
        com.google.javascript.rhino.head.ast.Comment comment16 = functionNode12.getJsDocNode();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode17 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.Scope scope19 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 10);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode20 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode21 = functionNode20.getTop();
        functionNode20.setParens((int) (byte) 1, (int) (short) 1);
        functionNode20.setEncodedSourceStart((-1));
        functionNode20.setFunctionIsGetter();
        scope19.addChildToFront((com.google.javascript.rhino.head.Node) functionNode20);
        functionNode17.setBody((com.google.javascript.rhino.head.ast.AstNode) functionNode20);
        boolean boolean30 = functionNode12.isParam((com.google.javascript.rhino.head.ast.AstNode) functionNode17);
        com.google.javascript.rhino.head.ast.Jump jump31 = new com.google.javascript.rhino.head.ast.Jump(8, (com.google.javascript.rhino.head.Node) functionNode12);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode33 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int34 = scriptNode33.getEndLineno();
        int int35 = scriptNode33.getBaseLineno();
        com.google.javascript.rhino.head.ast.Jump jump38 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode40 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int41 = scriptNode40.getEndLineno();
        int int42 = scriptNode40.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList43 = scriptNode40.getChildScopes();
        jump38.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode40);
        java.lang.String str45 = scriptNode40.debugPrint();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode33, (com.google.javascript.rhino.head.ast.Scope) scriptNode40);
        com.google.javascript.rhino.head.ast.AstNode astNode47 = scriptNode33.getParent();
        int int48 = scriptNode33.getType();
        com.google.javascript.rhino.head.ast.Symbol symbol50 = scriptNode33.getSymbol("109");
        java.lang.String str51 = scriptNode33.toSource();
        int int52 = scriptNode33.getEncodedSourceEnd();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode53 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode54 = functionNode53.getTop();
        functionNode53.setParens((int) (byte) 1, (int) (short) 1);
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor58 = functionNode53.iterator();
        functionNode53.setLp(136);
        int int61 = functionNode53.getFunctionType();
        scriptNode33.addChildrenToBack((com.google.javascript.rhino.head.Node) functionNode53);
        functionNode12.setParentScope((com.google.javascript.rhino.head.ast.Scope) functionNode53);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList64 = functionNode12.getSymbols();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode65 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode66 = functionNode65.getTop();
        functionNode65.setParens((int) (byte) 1, (int) (short) 1);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode70 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.Scope scope72 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 10);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode73 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode74 = functionNode73.getTop();
        functionNode73.setParens((int) (byte) 1, (int) (short) 1);
        functionNode73.setEncodedSourceStart((-1));
        functionNode73.setFunctionIsGetter();
        scope72.addChildToFront((com.google.javascript.rhino.head.Node) functionNode73);
        functionNode70.setBody((com.google.javascript.rhino.head.ast.AstNode) functionNode73);
        functionNode70.setFunctionIsSetter();
        int int84 = functionNode65.addFunction(functionNode70);
        java.lang.String str85 = functionNode65.getNextTempName();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode87 = new com.google.javascript.rhino.head.ast.FunctionNode(0);
        int int88 = functionNode87.getBaseLineno();
        functionNode87.setSourceName("                                                                                                                                                                                                        /null/");
        functionNode87.setRequiresActivation();
        functionNode65.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode87);
        functionNode87.setEncodedSourceEnd((int) (byte) -1);
        int int95 = functionNode87.getLineno();
        functionNode12.setParent((com.google.javascript.rhino.head.ast.AstNode) functionNode87);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNull(comment16);
        org.junit.Assert.assertNotNull(scriptNode21);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertNull(scopeList43);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str45, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertNull(astNode47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 136 + "'", int48 == 136);
        org.junit.Assert.assertNull(symbol50);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "{\n}\n" + "'", str51, "{\n}\n");
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertNotNull(scriptNode54);
        org.junit.Assert.assertNotNull(nodeItor58);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 0 + "'", int61 == 0);
        org.junit.Assert.assertNotNull(symbolList64);
        org.junit.Assert.assertNotNull(scriptNode66);
        org.junit.Assert.assertNotNull(scriptNode74);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 0 + "'", int84 == 0);
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "$0" + "'", str85, "$0");
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + (-1) + "'", int88 == (-1));
        org.junit.Assert.assertTrue("'" + int95 + "' != '" + (-1) + "'", int95 == (-1));
    }

    @Test
    public void test10483() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10483");
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope((-1262414679), 628528643);
        int int5 = scope2.getIntProp((-727971506), 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
    }

    @Test
    public void test10484() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10484");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode0 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int1 = functionNode0.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = functionNode0.getTop();
        boolean boolean3 = functionNode0.hasSideEffects();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList4 = functionNode0.getSymbols();
        functionNode0.setRp(5);
        com.google.javascript.rhino.head.ast.Scope scope7 = functionNode0.getEnclosingScope();
        boolean boolean8 = functionNode0.isExpressionClosure();
        com.google.javascript.rhino.head.ast.Name name9 = functionNode0.getFunctionName();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode11 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int12 = functionNode11.getLp();
        functionNode11.setEncodedSource("");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode15 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int16 = functionNode15.getLp();
        functionNode15.setEncodedSource("");
        functionNode15.flattenSymbolTable(false);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode21 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int22 = functionNode21.getLp();
        com.google.javascript.rhino.head.Node node24 = new com.google.javascript.rhino.head.Node((-1), (com.google.javascript.rhino.head.Node) functionNode11, (com.google.javascript.rhino.head.Node) functionNode15, (com.google.javascript.rhino.head.Node) functionNode21, (int) '#');
        com.google.javascript.rhino.head.ast.AstNode astNode25 = functionNode11.getBody();
        boolean boolean26 = functionNode0.isParam(astNode25);
        int int27 = functionNode0.getFunctionCount();
        functionNode0.setRequiresActivation();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator29 = functionNode0.spliterator();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-1) + "'", int1 == (-1));
        org.junit.Assert.assertNotNull(scriptNode2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(symbolList4);
        org.junit.Assert.assertNull(scope7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(name9);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNull(astNode25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertNotNull(nodeSpliterator29);
    }

    @Test
    public void test10485() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10485");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode1 = new com.google.javascript.rhino.head.ast.FunctionNode((-1));
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor2 = functionNode1.iterator();
        functionNode1.setEncodedSourceStart(15);
        functionNode1.setFunctionIsGetter();
        org.junit.Assert.assertNotNull(nodeItor2);
    }

    @Test
    public void test10486() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10486");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int2 = scriptNode1.getEndLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode4 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int5 = scriptNode4.getEndLineno();
        scriptNode1.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode4);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode7 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int8 = functionNode7.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode9 = functionNode7.getTop();
        boolean boolean10 = functionNode7.hasSideEffects();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode12 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int13 = scriptNode12.getEndLineno();
        int int14 = scriptNode12.getBaseLineno();
        com.google.javascript.rhino.head.ast.Jump jump17 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode19 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int20 = scriptNode19.getEndLineno();
        int int21 = scriptNode19.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList22 = scriptNode19.getChildScopes();
        jump17.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode19);
        java.lang.String str24 = scriptNode19.debugPrint();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode12, (com.google.javascript.rhino.head.ast.Scope) scriptNode19);
        com.google.javascript.rhino.head.ast.Scope scope26 = new com.google.javascript.rhino.head.ast.Scope();
        scriptNode19.target = scope26;
        functionNode7.addChildScope(scope26);
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode4, (com.google.javascript.rhino.head.ast.Scope) functionNode7);
        int int30 = functionNode7.getFunctionCount();
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList31 = functionNode7.getParams();
        int int32 = functionNode7.getRp();
        int int33 = functionNode7.getParamCount();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(scriptNode9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertNull(scopeList22);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str24, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(astNodeList31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
    }

    @Test
    public void test10487() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10487");
        com.google.javascript.rhino.head.ast.Jump jump2 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode4 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int5 = scriptNode4.getEndLineno();
        int int6 = scriptNode4.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList7 = scriptNode4.getChildScopes();
        jump2.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode4);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode10 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int11 = functionNode10.getLp();
        functionNode10.setEncodedSource("");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode14 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int15 = functionNode14.getLp();
        functionNode14.setEncodedSource("");
        functionNode14.flattenSymbolTable(false);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode20 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int21 = functionNode20.getLp();
        com.google.javascript.rhino.head.Node node23 = new com.google.javascript.rhino.head.Node((-1), (com.google.javascript.rhino.head.Node) functionNode10, (com.google.javascript.rhino.head.Node) functionNode14, (com.google.javascript.rhino.head.Node) functionNode20, (int) '#');
        jump2.addChildrenToFront((com.google.javascript.rhino.head.Node) functionNode10);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode25 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int26 = functionNode25.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode28 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        java.lang.String str29 = functionNode25.toStringTree(scriptNode28);
        com.google.javascript.rhino.head.ast.Scope scope31 = scriptNode28.getDefiningScope("");
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList32 = scriptNode28.getSymbols();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode34 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int35 = scriptNode34.getEndLineno();
        int int36 = scriptNode34.getBaseLineno();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode28, (com.google.javascript.rhino.head.ast.Scope) scriptNode34);
        jump2.addChildToFront((com.google.javascript.rhino.head.Node) scriptNode28);
        java.lang.String str40 = scriptNode28.toSource(22);
        int int41 = scriptNode28.getAbsolutePosition();
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNull(scopeList7);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNull(scope31);
        org.junit.Assert.assertNotNull(symbolList32);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "                                            {\n                                            }\n" + "'", str40, "                                            {\n                                            }\n");
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
    }

    @Test
    public void test10488() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10488");
        com.google.javascript.rhino.head.ast.RegExpLiteral regExpLiteral1 = new com.google.javascript.rhino.head.ast.RegExpLiteral((int) (short) 1);
        java.lang.String str3 = regExpLiteral1.toSource((int) (byte) 10);
        regExpLiteral1.setFlags("-1\tSCRIPT -1 1\n");
        java.lang.String str7 = regExpLiteral1.toSource((int) (short) -1);
        regExpLiteral1.setFlags("EOF");
        java.lang.String str11 = regExpLiteral1.makeIndent(10);
        regExpLiteral1.setValue("                                            {\n                                            }\n");
        java.lang.String str14 = regExpLiteral1.getFlags();
        java.lang.String str15 = regExpLiteral1.getFlags();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode16 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int17 = functionNode16.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode19 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        java.lang.String str20 = functionNode16.toStringTree(scriptNode19);
        functionNode16.setFunctionIsGetter();
        com.google.javascript.rhino.head.ast.AstNode astNode22 = functionNode16.getBody();
        functionNode16.setParens(21, (int) '#');
        boolean boolean26 = functionNode16.isGenerator();
        com.google.javascript.rhino.head.Node node27 = functionNode16.target;
        regExpLiteral1.addChildrenToFront((com.google.javascript.rhino.head.Node) functionNode16);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "                    /null/" + "'", str3, "                    /null/");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "/null/-1\tSCRIPT -1 1\n" + "'", str7, "/null/-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "                    " + "'", str11, "                    ");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "EOF" + "'", str14, "EOF");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "EOF" + "'", str15, "EOF");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNull(astNode22);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNull(node27);
    }

    @Test
    public void test10489() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10489");
        com.google.javascript.rhino.head.ast.Jump jump4 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump4.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump8 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump4, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int11 = scriptNode10.getEndLineno();
        int int12 = scriptNode10.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList13 = scriptNode10.getChildScopes();
        com.google.javascript.rhino.head.Node node14 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump4, (com.google.javascript.rhino.head.Node) scriptNode10);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList15 = scriptNode10.getFunctions();
        int int16 = functionNodeList15.size();
        functionNodeList15.clear();
        int int19 = functionNodeList15.indexOf((java.lang.Object) 10L);
        java.util.Iterator<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeItor20 = functionNodeList15.iterator();
        java.util.Iterator<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeItor21 = functionNodeList15.iterator();
        com.google.javascript.rhino.head.ast.Jump jump27 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump27.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump31 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump27, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode33 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int34 = scriptNode33.getEndLineno();
        int int35 = scriptNode33.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList36 = scriptNode33.getChildScopes();
        com.google.javascript.rhino.head.Node node37 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump27, (com.google.javascript.rhino.head.Node) scriptNode33);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList38 = scriptNode33.getFunctions();
        functionNodeList38.clear();
        int int41 = functionNodeList38.lastIndexOf((java.lang.Object) (-1L));
        com.google.javascript.rhino.head.ast.Jump jump46 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump46.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump50 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump46, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode52 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int53 = scriptNode52.getEndLineno();
        int int54 = scriptNode52.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList55 = scriptNode52.getChildScopes();
        com.google.javascript.rhino.head.Node node56 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump46, (com.google.javascript.rhino.head.Node) scriptNode52);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList57 = scriptNode52.getFunctions();
        functionNodeList57.clear();
        int int60 = functionNodeList57.lastIndexOf((java.lang.Object) (-1L));
        boolean boolean61 = functionNodeList38.removeAll((java.util.Collection<com.google.javascript.rhino.head.ast.FunctionNode>) functionNodeList57);
        com.google.javascript.rhino.head.ast.Jump jump66 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump66.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump70 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump66, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode72 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int73 = scriptNode72.getEndLineno();
        int int74 = scriptNode72.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList75 = scriptNode72.getChildScopes();
        com.google.javascript.rhino.head.Node node76 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump66, (com.google.javascript.rhino.head.Node) scriptNode72);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList77 = scriptNode72.getFunctions();
        int int78 = functionNodeList38.indexOf((java.lang.Object) scriptNode72);
        java.lang.Object obj79 = null;
        boolean boolean80 = functionNodeList38.contains(obj79);
        java.lang.String[] strArray86 = new java.lang.String[] { "                            ", "ScriptNode", "109", "                    {\n                    }\n", "-1\tBLOCK -1 1\n" };
        java.lang.String[] strArray87 = functionNodeList38.toArray(strArray86);
        boolean boolean88 = functionNodeList15.addAll(0, (java.util.Collection<com.google.javascript.rhino.head.ast.FunctionNode>) functionNodeList38);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode89 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int90 = functionNode89.getLp();
        functionNode89.setEncodedSource("");
        functionNode89.setLp(2);
        boolean boolean95 = functionNodeList15.equals((java.lang.Object) functionNode89);
        int int96 = functionNodeList15.size();
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNull(scopeList13);
        org.junit.Assert.assertNotNull(functionNodeList15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(functionNodeItor20);
        org.junit.Assert.assertNotNull(functionNodeItor21);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertNull(scopeList36);
        org.junit.Assert.assertNotNull(functionNodeList38);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
        org.junit.Assert.assertNull(scopeList55);
        org.junit.Assert.assertNotNull(functionNodeList57);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-1) + "'", int60 == (-1));
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + (-1) + "'", int73 == (-1));
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + (-1) + "'", int74 == (-1));
        org.junit.Assert.assertNull(scopeList75);
        org.junit.Assert.assertNotNull(functionNodeList77);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + (-1) + "'", int78 == (-1));
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(strArray86);
        org.junit.Assert.assertNotNull(strArray87);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + (-1) + "'", int90 == (-1));
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
        org.junit.Assert.assertTrue("'" + int96 + "' != '" + 0 + "'", int96 == 0);
    }

    @Test
    public void test10490() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10490");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode0 = new com.google.javascript.rhino.head.ast.FunctionNode();
        functionNode0.setFunctionIsGetter();
        functionNode0.setFunctionType(7);
        com.google.javascript.rhino.head.Node node6 = new com.google.javascript.rhino.head.Node((int) (byte) 10, (int) '#');
        com.google.javascript.rhino.head.ast.FunctionNode functionNode8 = new com.google.javascript.rhino.head.ast.FunctionNode(0);
        int int9 = functionNode8.getBaseLineno();
        boolean boolean10 = functionNode8.isGetter();
        com.google.javascript.rhino.head.ast.RegExpLiteral regExpLiteral12 = new com.google.javascript.rhino.head.ast.RegExpLiteral((int) (short) 1);
        regExpLiteral12.setFlags("-1\tSCRIPT -1 1\n");
        java.lang.String str15 = regExpLiteral12.getValue();
        regExpLiteral12.setFlags("52");
        functionNode8.addChildrenToFront((com.google.javascript.rhino.head.Node) regExpLiteral12);
        boolean boolean19 = functionNode8.isGetterOrSetter();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode20 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode21 = functionNode20.getTop();
        int int22 = functionNode20.getRegexpCount();
        int int23 = functionNode20.getParamCount();
        com.google.javascript.rhino.head.ast.AstNode astNode24 = functionNode20.getBody();
        int int25 = functionNode8.addFunction(functionNode20);
        functionNode20.setEncodedSourceStart(17);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode28 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int29 = functionNode28.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode30 = functionNode28.getTop();
        com.google.javascript.rhino.head.ast.AstNode astNode31 = functionNode28.getBody();
        com.google.javascript.rhino.head.ast.Scope scope32 = functionNode28.getParentScope();
        int int33 = functionNode20.addFunction(functionNode28);
        node6.addChildToFront((com.google.javascript.rhino.head.Node) functionNode28);
        functionNode0.addChildScope((com.google.javascript.rhino.head.ast.Scope) functionNode28);
        com.google.javascript.rhino.head.ast.Scope scope36 = functionNode0.getEnclosingScope();
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(scriptNode21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNull(astNode24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertNotNull(scriptNode30);
        org.junit.Assert.assertNull(astNode31);
        org.junit.Assert.assertNull(scope32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNull(scope36);
    }

    @Test
    public void test10491() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10491");
        com.google.javascript.rhino.head.ast.Jump jump4 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump4.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump8 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump4, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int11 = scriptNode10.getEndLineno();
        int int12 = scriptNode10.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList13 = scriptNode10.getChildScopes();
        com.google.javascript.rhino.head.Node node14 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump4, (com.google.javascript.rhino.head.Node) scriptNode10);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList15 = scriptNode10.getFunctions();
        functionNodeList15.clear();
        int int18 = functionNodeList15.lastIndexOf((java.lang.Object) (-1L));
        com.google.javascript.rhino.head.ast.Jump jump23 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump23.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump27 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump23, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode29 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int30 = scriptNode29.getEndLineno();
        int int31 = scriptNode29.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList32 = scriptNode29.getChildScopes();
        com.google.javascript.rhino.head.Node node33 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump23, (com.google.javascript.rhino.head.Node) scriptNode29);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList34 = scriptNode29.getFunctions();
        functionNodeList34.clear();
        int int37 = functionNodeList34.lastIndexOf((java.lang.Object) (-1L));
        boolean boolean38 = functionNodeList15.removeAll((java.util.Collection<com.google.javascript.rhino.head.ast.FunctionNode>) functionNodeList34);
        com.google.javascript.rhino.head.ast.Jump jump43 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump43.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump47 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump43, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode49 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int50 = scriptNode49.getEndLineno();
        int int51 = scriptNode49.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList52 = scriptNode49.getChildScopes();
        com.google.javascript.rhino.head.Node node53 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump43, (com.google.javascript.rhino.head.Node) scriptNode49);
        com.google.javascript.rhino.head.Node node55 = scriptNode49.setType(0);
        int int56 = functionNodeList34.lastIndexOf((java.lang.Object) scriptNode49);
        com.google.javascript.rhino.head.ast.Jump jump60 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump60.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump64 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump60, 0);
        com.google.javascript.rhino.head.ast.Jump jump68 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump68.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump72 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump68, 0);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode73 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int74 = functionNode73.getLp();
        functionNode73.setEncodedSource("");
        functionNode73.flattenSymbolTable(false);
        jump60.addChildAfter((com.google.javascript.rhino.head.Node) jump68, (com.google.javascript.rhino.head.Node) functionNode73);
        boolean boolean80 = functionNodeList34.remove((java.lang.Object) jump68);
        boolean boolean81 = functionNodeList34.isEmpty();
        java.util.stream.Stream<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeStream82 = functionNodeList34.stream();
        java.lang.Object[] objArray83 = functionNodeList34.toArray();
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNull(scopeList13);
        org.junit.Assert.assertNotNull(functionNodeList15);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNull(scopeList32);
        org.junit.Assert.assertNotNull(functionNodeList34);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1));
        org.junit.Assert.assertNull(scopeList52);
        org.junit.Assert.assertNotNull(node55);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1));
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + (-1) + "'", int74 == (-1));
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNotNull(functionNodeStream82);
        org.junit.Assert.assertNotNull(objArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray83), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray83), "[]");
    }

    @Test
    public void test10492() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10492");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode(5);
        int int2 = scriptNode1.getParamCount();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
    }

    @Test
    public void test10493() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10493");
        com.google.javascript.rhino.head.ast.Jump jump4 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump4.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump8 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump4, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int11 = scriptNode10.getEndLineno();
        int int12 = scriptNode10.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList13 = scriptNode10.getChildScopes();
        com.google.javascript.rhino.head.Node node14 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump4, (com.google.javascript.rhino.head.Node) scriptNode10);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList15 = scriptNode10.getFunctions();
        int int16 = functionNodeList15.size();
        functionNodeList15.clear();
        int int19 = functionNodeList15.indexOf((java.lang.Object) 10L);
        java.util.Iterator<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeItor20 = functionNodeList15.iterator();
        java.util.stream.Stream<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeStream21 = functionNodeList15.stream();
        boolean boolean22 = functionNodeList15.isEmpty();
        int int24 = functionNodeList15.indexOf((java.lang.Object) "                                                                                                                                                                                                          /null/");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode25 = new com.google.javascript.rhino.head.ast.FunctionNode();
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList26 = functionNode25.getFunctions();
        java.util.stream.Stream<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeStream27 = functionNodeList26.parallelStream();
        java.lang.Object[] objArray28 = functionNodeList26.toArray();
        boolean boolean29 = functionNodeList15.retainAll((java.util.Collection<com.google.javascript.rhino.head.ast.FunctionNode>) functionNodeList26);
        java.util.Iterator<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeItor30 = functionNodeList15.iterator();
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNull(scopeList13);
        org.junit.Assert.assertNotNull(functionNodeList15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(functionNodeItor20);
        org.junit.Assert.assertNotNull(functionNodeStream21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertNotNull(functionNodeList26);
        org.junit.Assert.assertNotNull(functionNodeStream27);
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray28), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray28), "[]");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(functionNodeItor30);
    }

    @Test
    public void test10494() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10494");
        com.google.javascript.rhino.head.Node node1 = new com.google.javascript.rhino.head.Node(1);
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator2 = node1.spliterator();
        org.junit.Assert.assertNotNull(nodeSpliterator2);
    }

    @Test
    public void test10495() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10495");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode0 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = functionNode0.getTop();
        com.google.javascript.rhino.head.Node node2 = scriptNode1.getFirstChild();
        com.google.javascript.rhino.head.ast.Scope scope4 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 10);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode5 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = functionNode5.getTop();
        functionNode5.setParens((int) (byte) 1, (int) (short) 1);
        functionNode5.setEncodedSourceStart((-1));
        functionNode5.setFunctionIsGetter();
        scope4.addChildToFront((com.google.javascript.rhino.head.Node) functionNode5);
        functionNode5.setRp(19);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode17 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int18 = scriptNode17.getEndLineno();
        int int19 = scriptNode17.getBaseLineno();
        com.google.javascript.rhino.head.ast.Jump jump22 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode24 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int25 = scriptNode24.getEndLineno();
        int int26 = scriptNode24.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList27 = scriptNode24.getChildScopes();
        jump22.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode24);
        java.lang.String str29 = scriptNode24.debugPrint();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode17, (com.google.javascript.rhino.head.ast.Scope) scriptNode24);
        com.google.javascript.rhino.head.ast.Scope scope31 = new com.google.javascript.rhino.head.ast.Scope();
        scriptNode24.target = scope31;
        java.lang.String str33 = functionNode5.toStringTree(scriptNode24);
        java.lang.String str35 = scriptNode24.toSource((int) (short) 10);
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap36 = scriptNode24.getSymbolTable();
        int int37 = strMap36.size();
        com.google.javascript.rhino.head.ast.Jump jump42 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump42.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump46 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump42, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode48 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int49 = scriptNode48.getEndLineno();
        int int50 = scriptNode48.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList51 = scriptNode48.getChildScopes();
        com.google.javascript.rhino.head.Node node52 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump42, (com.google.javascript.rhino.head.Node) scriptNode48);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList53 = scriptNode48.getFunctions();
        functionNodeList53.clear();
        functionNodeList53.clear();
        com.google.javascript.rhino.head.ast.Jump jump60 = new com.google.javascript.rhino.head.ast.Jump((int) '4', 1);
        jump60.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Jump jump64 = new com.google.javascript.rhino.head.ast.Jump((int) '#', (com.google.javascript.rhino.head.Node) jump60, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode66 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        int int67 = scriptNode66.getEndLineno();
        int int68 = scriptNode66.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList69 = scriptNode66.getChildScopes();
        com.google.javascript.rhino.head.Node node70 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) jump60, (com.google.javascript.rhino.head.Node) scriptNode66);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList71 = scriptNode66.getFunctions();
        java.util.Spliterator<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeSpliterator72 = functionNodeList71.spliterator();
        int int74 = functionNodeList71.indexOf((java.lang.Object) (byte) 10);
        boolean boolean75 = functionNodeList53.retainAll((java.util.Collection<com.google.javascript.rhino.head.ast.FunctionNode>) functionNodeList71);
        boolean boolean76 = strMap36.containsKey((java.lang.Object) functionNodeList53);
        boolean boolean78 = strMap36.containsKey((java.lang.Object) 1579347477);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode79 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int80 = functionNode79.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode82 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) -1);
        java.lang.String str83 = functionNode79.toStringTree(scriptNode82);
        functionNode79.setFunctionIsGetter();
        com.google.javascript.rhino.head.ast.AstNode astNode85 = functionNode79.getBody();
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList86 = functionNode79.getParams();
        boolean boolean87 = strMap36.containsKey((java.lang.Object) astNodeList86);
        strMap36.clear();
        scriptNode1.setCompilerData((java.lang.Object) strMap36);
        java.util.Collection<com.google.javascript.rhino.head.ast.Symbol> symbolCollection90 = strMap36.values();
        com.google.javascript.rhino.head.ast.RegExpLiteral regExpLiteral93 = new com.google.javascript.rhino.head.ast.RegExpLiteral((-1), 3);
        com.google.javascript.rhino.head.Node node95 = regExpLiteral93.setType((int) (short) 100);
        java.lang.String str96 = regExpLiteral93.getValue();
        boolean boolean97 = strMap36.containsKey((java.lang.Object) regExpLiteral93);
        regExpLiteral93.setFlags("<=");
        org.junit.Assert.assertNotNull(scriptNode1);
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNotNull(scriptNode6);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNull(scopeList27);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str29, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "                    {\n                    }\n" + "'", str35, "                    {\n                    }\n");
        org.junit.Assert.assertNotNull(strMap36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertNull(scopeList51);
        org.junit.Assert.assertNotNull(functionNodeList53);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + (-1) + "'", int67 == (-1));
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + (-1) + "'", int68 == (-1));
        org.junit.Assert.assertNull(scopeList69);
        org.junit.Assert.assertNotNull(functionNodeList71);
        org.junit.Assert.assertNotNull(functionNodeSpliterator72);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + (-1) + "'", int74 == (-1));
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + (-1) + "'", int80 == (-1));
        org.junit.Assert.assertNull(str83);
        org.junit.Assert.assertNull(astNode85);
        org.junit.Assert.assertNotNull(astNodeList86);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNotNull(symbolCollection90);
        org.junit.Assert.assertNotNull(node95);
        org.junit.Assert.assertNull(str96);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + false + "'", boolean97 == false);
    }

    @Test
    public void test10496() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10496");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode0 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int1 = functionNode0.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = functionNode0.getTop();
        com.google.javascript.rhino.head.ast.AstNode astNode3 = functionNode0.getBody();
        int int4 = functionNode0.getLength();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap5 = null;
        functionNode0.setSymbolTable(strMap5);
        functionNode0.setIsGenerator();
        java.lang.String str8 = functionNode0.toString();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-1) + "'", int1 == (-1));
        org.junit.Assert.assertNotNull(scriptNode2);
        org.junit.Assert.assertNull(astNode3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 1 + "'", int4 == 1);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "109" + "'", str8, "109");
    }

    @Test
    public void test10497() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10497");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode2 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int3 = functionNode2.getLp();
        functionNode2.setLp((int) (short) 1);
        int int8 = functionNode2.getIntProp(4, 26);
        com.google.javascript.rhino.head.ast.Jump jump9 = new com.google.javascript.rhino.head.ast.Jump(3, (com.google.javascript.rhino.head.Node) functionNode2);
        com.google.javascript.rhino.head.Node node10 = new com.google.javascript.rhino.head.Node((int) '4', (com.google.javascript.rhino.head.Node) functionNode2);
        functionNode2.setRequiresActivation();
        com.google.javascript.rhino.head.Node node13 = functionNode2.setType(9);
        com.google.javascript.rhino.head.Node node14 = functionNode2.getFirstChild();
        functionNode2.setLength((-398329421));
        java.util.Map<com.google.javascript.rhino.head.Node, int[]> nodeMap17 = functionNode2.getLiveLocals();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 26 + "'", int8 == 26);
        org.junit.Assert.assertNotNull(node13);
        org.junit.Assert.assertNull(node14);
        org.junit.Assert.assertNull(nodeMap17);
    }

    @Test
    public void test10498() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10498");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode0 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int1 = functionNode0.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = functionNode0.getTop();
        com.google.javascript.rhino.head.ast.Name name3 = null;
        functionNode0.setFunctionName(name3);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode5 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = functionNode5.getTop();
        functionNode0.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode5);
        int int8 = functionNode5.getRp();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator9 = functionNode5.spliterator();
        functionNode5.setRequiresActivation();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-1) + "'", int1 == (-1));
        org.junit.Assert.assertNotNull(scriptNode2);
        org.junit.Assert.assertNotNull(scriptNode6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(nodeSpliterator9);
    }

    @Test
    public void test10499() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10499");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode0 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int1 = functionNode0.getLp();
        functionNode0.setEncodedSource("");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode4 = new com.google.javascript.rhino.head.ast.FunctionNode();
        int int5 = functionNode4.getLp();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = functionNode4.getTop();
        com.google.javascript.rhino.head.ast.Name name7 = null;
        functionNode4.setFunctionName(name7);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode9 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = functionNode9.getTop();
        functionNode4.addChild((com.google.javascript.rhino.head.ast.AstNode) functionNode9);
        int int12 = functionNode9.getRp();
        int int13 = functionNode9.getFunctionType();
        functionNode0.addParam((com.google.javascript.rhino.head.ast.AstNode) functionNode9);
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator15 = functionNode9.new NodeIterator();
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList16 = functionNode9.getStatements();
        functionNode9.putIntProp(613356588, (-142673915));
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-1) + "'", int1 == (-1));
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(scriptNode6);
        org.junit.Assert.assertNotNull(scriptNode10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(astNodeList16);
    }

    @Test
    public void test10500() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10500");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode0 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 10);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode3 = new com.google.javascript.rhino.head.ast.FunctionNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode4 = functionNode3.getTop();
        functionNode3.setParens((int) (byte) 1, (int) (short) 1);
        functionNode3.setEncodedSourceStart((-1));
        functionNode3.setFunctionIsGetter();
        scope2.addChildToFront((com.google.javascript.rhino.head.Node) functionNode3);
        functionNode0.setBody((com.google.javascript.rhino.head.ast.AstNode) functionNode3);
        functionNode0.setRequiresActivation();
        boolean boolean14 = functionNode0.isExpressionClosure();
        java.lang.String str15 = functionNode0.getEncodedSource();
        functionNode0.setPosition(796955);
        org.junit.Assert.assertNotNull(scriptNode4);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(str15);
    }
}
